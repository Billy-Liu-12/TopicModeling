Traﬃc Grooming Algorithm Using Shortest
EDPs Table in WDM Mesh Networks
Seungsoo Lee, Tae-Jin Lee, Min Young Chung, and Hyunseung Choo
Lambda Networking Center,
School of Information and Communication Engineering,
Sungkyunkwan University,
440-746, Suwon, Korea
{isoolee, tjlee, mychung, choo}@ece.skku.ac.kr

Abstract. In optical networks with huge transmission capability, Wavelength Division Multiplexing (WDM) has been actively studied in the
research community. Traﬃc grooming technology based on divided bandwidth of a wavelength by WDM is very important for the network cost.
This paper proposes a traﬃc grooming algorithm that employs the table for shortest Edge Disjoint Paths (EDPs) with clever selection on
demands. Comprehensive simulations in various network environments
show that the proposed algorithm outperforms well-known Maximizing
Resource Utilization (MRU) up to 15% for the network throughput and
up to 17% for the running time.

1

Introduction

Due to the explosive growth of hosts, users and services for the Internet, high
speed network technologies based on optical networks have been appearing.
Nowadays, Internet data traﬃc is increasing rapidly by more than 100% every year and in actuality, data traﬃc is passing existent voice traﬃc. Therefore
existing networks cannot correspond with next generation data demand and capacity. Hence, in this context, research on optical technologies is drawing more
interest for future high-speed network infrastructures [1].
Routing and wavelength assignment (RWA) for WDM networks, which are
based on wavelength granularity, has been generally investigated [2]-[4]. As WDM
technology continues to mature, there exists a bandwidth diﬀerence between the
transmission capacity (e.g., OC-48, OC-192, OC-768) and typical connection
requests with low-late traﬃc stream (e.g., OC-1, OC-3, OC-12, etc.) [5]. If the
entire bandwidth of a wavelength channel is allocated to a low-late traﬃc stream,
a large portion of the transmission capacity might be wasted. In order to eﬀectively use network resources, many low-rate traﬃc streams should be eﬃciently
groomed or multiplexed into a ligthpath [6].
This work was supported in parts by Brain Korea 21 and the Ministry of Information
and Communication, Korea. Corresponding author: Prof. H. Choo.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp. 559–567, 2005.
c Springer-Verlag Berlin Heidelberg 2005

560

S. Lee et al.

This paper deals with the traﬃc grooming problem in WDM mesh networks
with limited number of wavelengths for the environment of static traﬃc requests.
Our objective is to maximize the network throughput. Since the optical network
resource is limited, to maximize a throughput by increasing utilization rate of
wavelengths is very important in terms of cost. The proposed algorithm works
as follows. For a given network, it ﬁnds the shortest Edge Disjoint Paths (EDPs)
[2] for all source and destination pairs and saves them to the shortest EDPs table
(EDPT). It then calculates a resource utilization rate per hop for each request.
Finally, it chooses a request with the biggest value of resource utilization rate,
and sets the path corresponding to the selected request based on the information in EDPT. From simulation results, network throughput of the proposed
algorithm is increasing up to about 10% in NSFNET and up to about 15% in
random networks compared with that of the previous MRU algorithm. In operation time, the proposed algorithm is about 17% faster than the previous MRU
in NSFNET.
The rest of the paper is organized as follows. In section 2, previous works
on WDM SONET ring and mesh WDM networks, single-hop grooming and
multi-hop grooming, and routing method for traﬃc grooming are presented. In
section 3, we propose a traﬃc grooming algorithm in WDM mesh networks and
describe the algorithm with an illustrative example. In section 4, the performance
evaluations are presented and discussed. Finally, section 5 concludes the paper.

2
2.1

Related Works
Previous Works in Various Environments

Recently the type of optical transport network topologies is evolving from interconnected SONET/WDM ring to optical WDM mesh. The traﬃc grooming
problem in optical WDM mesh networks has become an important area of research [6]. In [5], a generic graph model was proposed for provisioning multigranularity connections in multi-wavelength optical WDM networks. The authors presented that for diﬀerent network optimization objectives, their corresponding route selection schemes can be easily applied to the graph model. In
[6], a heuristic traﬃc grooming algorithm is proposed for static traﬃc environments; maximizing resource utilization (MRU) algorithm which is known to be
eﬀective.
In general, to solve the traﬃc grooming problem, it is assumed that trafﬁc requests are carried through single-hop grooming or multi-hop grooming. In
single-hop grooming an end-to-end connection consists of a single lightpath. This
means that only end-to-end traﬃc grooming is allowed. On the other hand, in
multi-hop grooming a connection consists of multiple lightpaths. Thus, a connection can be dropped at intermediate nodes and groomed with other low-capacity
connections on diﬀerent lightpaths before it reaches its destination node. It is expected that the multi-hop grooming leads to a higher throughput than achieved
by single-hop grooming.

Traﬃc Grooming Algorithm Using Shortest EDPs Table

2.2

561

Routing for Traﬃc Grooming

In general routing algorithms can be classiﬁed into three categories; ﬁxed, adaptive, and ﬁxed-alternate routing [5]. In ﬁxed routing, each connection is always
routed through a predeﬁned route for a its source-destination pair. Fixed shortest path routing is an example of this approach. The shortest path for each
source-destination pair is calculated oﬄine using shortest path algorithms. If
there are not enough resources to satisfy a connection request, it is blocked.
In adaptive routing, the route from a source to a destination node is chosen dynamically, as current network status. The network status depends on the
connections served. For example, when a connection request arrives, the shortest path between its source and destination node is determined as the available
resources in the network.
In ﬁxed-alternate routing, multiple routes are determined when ever a connection request occurs. In this scheme, each node within the networks has a table
to maintain information, including the order of multiple routes on a destination
node. For example, these routes can be ordered as the ﬁrst shortest path, the
second shortest path, and so on. When a connection request occurs, its source
node sequencelly attempts to establish a route based on the order information
in the routing table, until it is successfully completed.

3

Proposed Algorithm

We propose a new heuristic algorithm for the traﬃc grooming problem. Deﬁne
a network topology G(N , E, W ) for a given WDM optical network, where N
is the set of nodes, E is the set of edges, W is the set of wavelengths in one
ﬁber (each ﬁber is assumed to have the same number of wavelengths) and the
capacity of each wavelength is Cw . Let D={di (s, t) | ∀ s, t ∈ N and 1 ≤ i ≤
|D|} denote the traﬃc request between same source node s and destination node
t. And C(d(s, t)) denotes the aggregate capacity of traﬃc request between the
node pair d(s, t). Let H(s, t) denote the hop distance on the physical topology
between the node pair (s, t). We deﬁne R(s, t) = C(d(s, t)) / H(s, t) as the
connection resource utilization value, which represents the average traﬃc per
wavelength link. This quantity shows how eﬃciently resources have been used
to carry traﬃc requests.
The MRU algorithm sorts all of the node pairs (s, t) in a descending order
according to network resource utilization R(s, t) and put them into a list L, then
attempts to assign lightpaths sequentially. But after a lightpath for one node
pair is assigned, network resource utilization of the other node pairs changes
since the network state on the physical topology changes. The MRU algorithm
does not consider changed network resource utilization, hence this algorithm
does not reﬂect practical network resource utilization. This method cannot be
applied to the values R(s, t), which were calculated at the beginning. Eventually
it inﬂuences in network throughput.
Our proposed algorithm calculates every available shortest EDPs for each
d(s, t) pair, and stores them to table A. Similar to the MRU algorithm, all

562

S. Lee et al.
Traffic

d(s, t), C(d(s, t))

H(s, t)

R(s, t)

(s, t)

Shortest EDPs

1

(0, 2), OC-72

2

36

(0, 2)

0-1-2, 0-5-2

2

(1, 2), OC-32

1

32

(1, 2)

1-2

3

(1, 4), OC-60

2

30

(1, 4)

1-2-4, 1-5-4

4

(5, 2), OC-24

1

24

(5, 2)

5-2

5

(5, 3), OC-48

2

24

(5, 3)

5-2-3, 5-4-3

6

(4, 3), OC-24

1

24

(4, 3)

4-3

7

(2, 4), OC-12

1

12

(2, 4)

2-4

(a) Set of connection requests, L

1

0

16

0

0

2
16

1

3
24

24

5

(b) Shortest EDPT

24

(c) MRU algorithm

4

0

0

0

0

2

24

3

36

5

0

24

4

(d) Proposed algorithm

Fig. 1. Example of MRU and the proposed algorithm

of the node pairs d(s, t) are sorted according to network resource utilization
R(s, t) between (s, t) pairs and puts them into a list L in a descending order.
Then it ﬁnds the node pair with the highest R(s, t) and attempts to assign a
lightpath for this node pair d(s, t). If there is enough resources in the network
in one of the paths of table A, connection request can set up a lightpath. If
there is not enough resources to establish a lightpath, the proposed algorithm
tries the next connection request in list L. Therefore the values R(s, t), which
were calculated at the beginning, will be reﬂected to the decision of lightpaths
and it can increase the throughput. Moreover, the proposed algorithm using the
ﬁxed-alternate routing method can expect fast routing than the MRU algorithm
using adaptive routing.
We present an example for the proposed algorithm and the MRU algorithm
for a simple network (Fig. 1). Let us assume that it is a single ﬁber WDM optical
network with each ﬁber having one wavelength channel, and the capacity of wavelength is OC-48. The aggregated traﬃc for node pair (0, 2), (1, 2), (1, 4), (5, 2),
(5, 2), (4, 3), and (2, 4) is 72, 32, 60, 24, 48, 24, and 12, respectively. Those traﬃc
requests are sorted by R(s, t) and put into a list L (Fig. 1(a)). Then it tries to
setup a lightpath for the ﬁrst node pair d(s, t) in list L. Fig. 1(c) shows the setup
procedure for a lightpath for in the MRU algorithm. We can see that connection
requests of 1, 2, 4, and 6 are accomodated according to the order of list L. In this
case, overall network throughput is OC-128. On the other hand, our proposed
algorithm tries to set up lightpaths based among the stored shortest EDPT
(Fig. 1(b)). The network throughput with the proposed algorithm is OC-156.
Which shows that proposed algorithm performs better than the MRU algorithm.

Traﬃc Grooming Algorithm Using Shortest EDPs Table

563

The proposed algorithm can be divided into two parts and it employs both
ﬁxed-alternate routing and adaptive routing. Step 1 constructs a virtual topology: using ﬁxed-alternate routing, it tries to establish lightpaths by the resource
utilization values. Step 2 conducts traﬃc grooming on virtual topology: using
adaptive routing, it tries to ﬁnd out multi-hop routes for unassigned traﬃc requests. The procedure and pseudo-code for the proposed algorithm are as follows.
Step 1: Construct a virtual topology:
1.1: Aggregate traﬃc requests for each node pair d(s, t) with the same (s, t).
C(d(s, t)) is the sum of unassigned capacity of traﬃc requests.
1.2: Compute all shortest EDPs and H(s, t) for each node pair d(s, t), and
put them into a table A.
1.3: Compute R(s, t) = C(d(s, t)) / H(s, t). R(s, t) is the connection resource
utilization value
1.4: Sort all of the node pairs d(s, t) according to R(s, t) and put them into
a list L.
1.5: Extract the element d (s, t) with the greatest value from list L, and
route according to shortest EDPs of table A. If it fails, delete d (s, t)
from L, otherwise, let C(d (s, t)) = max{C(d (s, t)) − Cw , 0}
1.6: Go to step 1.5 until list L is empty.
Step 2: Traﬃc grooming on virtual topology:
2.1: Satisfy all of the connection requests that can be carried through a single
lightpath hop, and update the virtual topology network state.
2.2: Route the remaining connection requests using currently available spare
capacity of the virtual topology based on their connection resource utilization value R(s, t). If there is no route for d(s, t), then reject
this connection request.
(Pseudo-code for Proposed Algorithm)
Input: Network topology G(N , E, W ) and demand set
D={di (s, t) | ∀ s, t ∈ N and 1 ≤ i ≤ |D|}
Output: Total network throughput T
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.

Find shortest EDPs for the demand set and store them in table A
Calculate R(s, t) = C(d(s, t)) / H(s, t) for all demands
Sort all demands in descending order by R(s, t) and store them in list L
For (λ = 1; λ ≤ W ; λ++)
// Construct a virtual topology
While (L = ∅)
Select d (s, t) which is on top of L
If ∃ a path in A for d (s, t) then
Assign the path to d (s, t) for the lightpath set up
C(d (s, t)) = max{C(d (s, t)) − Cw , 0}
If C(d (s, t)) = 0 then delete d (s, t) from list L

564

S. Lee et al.

12.
13.
14.
15.
16.

Else delete d (s, t) from the list L and store to list L
End while
// Routing d(s, t) on the virtual topology
Update the network state and restore list L = L∪L
Route the remaining d(s, t)s on the current network state by
multi-hop grooming
17.
If λ = W then
18.
The remaining d(s, t) in list L is blocked
19. End for
20. T = ((Total demand capacity - Blocked demand capacity) /
Total demand capacity) × 100
21. Return T

In the proposed algorithm, inputs are network topology G(N , E, W ) and demand
set D, and an output is network throughput T . After ﬁnishing the single-hop
grooming, update the topology then try to setup lightpaths for the remaining requests by using multi-hop traﬃc grooming. The algorithm continues until there
are no more wavelengths. After using all of the wavelengths, the remaining requests are blocked.

4

Performance Evaluation

In this section we evaluate the performance of the proposed algorithm by computer simulation in terms of the network throughput that is successfully carried
traﬃc capacity and the running time. For the comparison study, we compare
our proposed method with the MRU. For the evaluation in the typical network,
we use NSFNET which has 14 nodes and 21 links. Moreover we employ randomly generated networks structures because we want to test those two schemes
properly in various network topologies. The random connection request model
proposed in [6] to generate our incoming traﬃc matrices is utilized here. In our
case, we assume the capacity of each wavelength is OC-48, and allow the traﬃc
bandwidth requests to be any of OC-1, OC-3, and OC-12. The traﬃc metrics
are randomly generated that the numbers of connection requests on OC-1, OC3, and OC-12 for all possible node pairs are generated as uniformly distributed
random numbers between 0 and 16, between 0 and 8, and between 0 and 2, respectively. We simulate 1,000 times for each network topology and this is exactly
same as experiments done in [6]. We obtain a random network for the physical
topology by specifying the number of nodes in the graph model (N ) and the
probability of edge existence (Pe ) for any node pair[3].
In this work, we deﬁne the network throughput as follows:
|D|

C(di (s, t)) × Si
T =

i=1
|D|

× 100 (%)
C(di (s, t))

i=1

Traﬃc Grooming Algorithm Using Shortest EDPs Table

565

where Si = 1 if connection request i has been satisﬁed; otherwise Si = 0, and
the total number of connection requests is |D|.
Fig. 2(a) shows the results of two algorithms compared and it demonstrates
the relationship between the network throughput(T ) and the number of wavelengths. When the number of wavelengths is either 1 or 2, the proposed scheme
and the MRU show almost the same trends because network resources are not
enough for total connection requests. However, as the number of wavelengths
increases, the proposed scheme shows the better performance than the MRU.
Speciﬁcally, it outperforms the MRU by 10% in terms of the network throughput when the number of wavelengths reaches to 10 through 15. As you see, when
the number of wavelengths is in between 22 and 25, our scheme and the MRU
both show the similar results since network resources are quite enough for total
connection requests.
As mentioned earlier we perform the simulation study for random networks in
order to have the generality in network structures. Simulation environments are
similar to those of the ﬁxed NSFNET except the variable Pe for the probability
of edge existence. We consider Pe values as 0.3 and 0.6, and the number of nodes
as 15 and 20 for the reasonable sizes of experiments. If Pe is high, we create dense
networks. Otherwise, we have sparse ones.
Fig. 2(b) shows that the network throughput versus the number of wavelengths for the 15-node random networks. As a whole, the proposed algorithm
performs better than the MRU. When Pe is 0.3, the number of wavelengths
needed per link is 20 for routing all connection requests. In the meantime, for
Pe =0.6, the number of wavelengths required per link is 6 for accommodating all
demands. Because, if Pe is 0.6, then the network has more edges connected to
each node than the case of Pe =0.3. It means that the number of possible paths
which handle the requests is increased, so they can manage requests with relatively less number of wavelengths. As a result, the proposed algorithm improves
the throughput up to about 10% and 14% compared with the MRU for Pe =0.3
and Pe =0.6, respectively, in 15-node random networks.
Fig. 2(c) presents the same case for 20-node random networks. It shows quite
dense networks for Pe =0.6 in 20-node random networks, and as expected there
are more shortest EDPs. It provides a ﬂexibility for identifying paths, and that
is why the proposed algorithm shows the better performance than the MRU.
Therefore the proposed one outperforms the MRU by 15% in terms of the network throughput for such dense networks.
Fig. 2(d) shows that the running time for the algorithm including the selection of EDPs and wavelength assignments for requests. We generate the sets of
traﬃc matrices for demand sets. As the number of demand sets increases, we
measure the time. If there are a small number of demand sets (i.e. sets of traﬃc
matrices), the proposed algorithm takes more time to ﬁnd the shortest EDPs
and to construct the table for EDPs than the MRU. However, as the number
of demand sets increases, it runs faster. The table for shortest EDPs is never
changed as long as the physical network structure is not changed. The proposed
algorithm references the table to set up the lightpaths, meanwhile the MRU ﬁnds

566

S. Lee et al.

(a) Throughput in NSFNET

(b) 15-node random networks

(c) 20-node random networks

(d) Running time in NSFNET

Fig. 2. Results from the simulation study

a new shortest path in the current network state after setting up one request. If
there are 10 sets of traﬃc matrices, it is about 17% faster than the MRU.

5

Conclusion

In this paper we study the traﬃc grooming problem in WDM mesh networks
with the limited number of wavelengths for the environment of static traﬃc requests. The proposed algorithm is based on the table for shortest Edge Disjoint
Paths (EDPs) with clever selections on demands. The objective of this work is
to increase the network throughput and to decrease the running time as others
do. Performance evaluations are done with ﬁxed NSFNET and varied random
networks. Comprehensive simulation shows that the proposed algorithm significantly improves the throughput up to 15% and the running time up to 17%
compared to the previous MRU. This work will be applied to WDM multicasting networks in the near future.

Traﬃc Grooming Algorithm Using Shortest EDPs Table

567

References
1. H. Choo, M. Son, M.Y. Chung and T.J. Lee, “Shared Protection by Concatenated
Rings in Optical WDM Networks,” Springer-Verlag LNCS, vol. 3042, pp. 1476-1482,
May 2004.
2. P. Manohar, D. Manjunath and R.K. Shevgaonkar, “Routing and Wavelength Assignment in Optical Network From Edge Disjoint Path Algorithms,” IEEE Communications Letters, vol. 6, pp. 211-213, May 2002.
3. M.H. Kim, H. Choo, B.H. Yae, J.H. Lee, “A Practical RWA Algorithm Based on
Lookup Table for Edge Disjoint Paths,” Springer-Verlag LNCS, vol. 2713, pp. 138147, June 2003.
4. H. Choo, and V.V. Shakhov, “Routing and Wavelength Assignments in Optical
WDM Networks with Maximum Quantity of Edge Disjoint Paths,” Springer-Verlag
LNCS, vol. 3038, pp. 1138-1145, June 2004.
5. H. Zhu, H. Zang, K. Zhu, and B. Mukherjee, “A novel, generic graph model for traﬃc
grooming in heterogeneous WDM mesh networks,” IEEE/ACM Trans. Networking,
vol. 11, pp. 285-299, Apr. 2003.
6. K. Zhu and B. Mukherjee, “Traﬃc grooming in WDM optical mesh networks,”
IEEE Journal on Selected Areas in Communications, vol. 20, pp. 122-133, January
2002.

