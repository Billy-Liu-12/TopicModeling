Water Droplet Morphing Combining Rigid
Transformation
Lanfen Lin, Shenghui Liao, RuoFeng Tong, and JinXiang Dong
State Key Laboratory of CAD and CG,
Department of Computer Science and Engineering,
Zhejiang University, China
liaoshenhui@zju.edu.cn

Abstract. This paper presents a plausible method for large water droplet
morphing, taken into account the rigid transformation. The droplet on
a plane was represented by the contact area, which was described via “a
variational implicit function” in 2D, together with a proﬁle curve. Then
we made use of distance ﬁelds generated from the boundary of contact
area to drive the morphing. The deforming direction and speed were well
controlled to give a very smooth and stable deformation. The morphing
procedure was combined with rigid transformation synchronously, which
yield more natural eﬀect. Finally, the ray-tracing method was employed
for rendering the realistic scene.

1

Introduction

Several diﬀerent methods addressing water modeling and animation have been
developed since the 1980’s. Most of them concerned the motion of water in forms
of waves and other connected ﬂuids, for example, waves approaching and braking
on a beach [1]. Realistic and practical animation of liquids [2] has also been made.
Only a few methods proposed during the 1990’s addressed the problems of the
water droplets.
Kaneda et al [3] developed methods for realistic animation of water droplets
on a glass plate, on curved surfaces, and meandering down a transparent surface.
The main purpose is to generate a realistic animation, taken into account gravity
of water droplets, inter-facial tensions, and so on. Fournier et al [4] presented
a model that focuses on the simulation of large liquid droplets as they travel
down a surface. The aim is to simulate the visual contour and shape of water
droplets when aﬀected by the underlying surface and other force ﬁelds. Malin [5]
gave a method for animation of water droplets ﬂowing on structured surfaces,
the droplets in this method were aﬀected by underlying bump mapped surface.
Project supported by National Grand Fundamental Reasearch 973
(No.2002CB312106) of China.
Project supported by Natural Science Foundation (No.M603129) of Zhejiang
Province, China.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 671–678, 2005.
c Springer-Verlag Berlin Heidelberg 2005

672

L. Lin et al.

All these methods are physical based. It is quite diﬃcult to simulate the
ﬂow of water droplets for the purpose of high-precision engineering, due to the
diversiform shape representation of the droplet and the complicated ﬂow process.
While, our method is not to make a simulation physically correct, but to make
an eﬀective and physically plausible droplets morphing on a plane.

2
2.1

The Main Idea of Our Approach
Droplet Representation

First, the droplet on a plane is represented by contact area between the droplet
and the plane, together with a proﬁle curve.
To describe the contact area between the droplet and the plane, such as Fig.1
(b), we employ “a variational implicit function” in 2D, proposed in Turk and
O’Brien’s paper [6], which can model arbitrary 2D shape of general topology.
Yu et al [7] discussed the droplets’ shape on a simple plane in the gravitational ﬁeld. We take advantage of their result and use a proﬁle curve to describe
the height of droplet within the contact area, as Fig.1 (a) illustrates (The x
coordinate of proﬁle curve means the distance from a point to the boundary of
contact area, and y coordinate gives the height of droplet at this point).
When the contact area as well as the proﬁle curve is ready, the ray-tracing
method is employed for rendering the scene, to produce a realistic eﬀect of the
water droplet. Such as Fig.2 shows.

Fig. 1. Droplet representation

2.2

Fig. 2. Rendering scene

Initial Method

Our morphing between two (or more) droplets consists of blending between
two proﬁle curves and morphing between two contact areas. Blending between
two proﬁle curves is simple, thus we will concentrate on morphing between two
contact areas, that is, a kind of 2D volume morphing.
There are several existing approaches for volume morphing. Pasko simply
interpolated the values of corresponding nodes [8]. This may cause unnecessary

Water Droplet Morphing Combining Rigid Transformation

673

distortion and change in topology. Other techniques are based on a decomposition of the discrete values. Hughes considered Fournier decomposition [9], and
T. He decomposed the functions with a wavelet transform [10]. Lerios proposed
a feature-based morphing [11]. Cohen presented a method that the interpolation
of distance ﬁeld was guided by a warp function controlled by anchor points [12].
But there is more or less artiﬁcial interference in these methods.
Our initial idea is using the intensity ﬁelds of implicit functions to produce
potential ﬁelds, with which we can change the source intensity ﬁeld to the target.
This approach is somewhat like Whitaker’s Level-Set Model [13].
Assume F1 (X) = δ is the source intensity ﬁeld and F2 (X) = δ is the target,
where X = (x, y). The morphing can be generated by the movement of X, as
illustrated in Fig.3.

Fig. 3. Potential Field

Fig. 4. Movement direction

The problems are:
1. How does X move (The direction and speed)?
2. How does the movement aﬀect the intensity ﬁeld function F?
Obviously, the movement of the X can be described by regarding X as a
function of time t. Thus the whole morphing procedure can be represented by
F(X(t),t)= δ, t ∈ (0, 1), and F(X(0),0)=F1 (X), F(X(1),1)=F2 (X). Because F
equals to δ over time, the time derivation should be zero:
∂F (X(t), t)
∂X(t)
dF
=
+ ∇F (X(t), t) •
= 0 where∇F (X, t) =
dt
∂t
∂t

∂F ∂F
,
∂x ∂y
(1)

Thus,
∂X(t)
∂F (X(t), t)
= −∇F (X(t), t) •
∂t
∂t

(2)

Eq.2 describes how the movement of X (denoted by ∂X(t)
∂t ) aﬀects the intensity
function F. Now the only problem is how does X move.
must changes F(X(t),t) from
First of all, when t changes from t0 to tn , ∂X(t)
∂t
F1 (X) to F2 (X), otherwise it will not be a morphing.
Rewrite Eq.2 in a discrete way:
F (X, tk+1 ) − F (X, tk )
∂X
= −∇F (X, tk ) •
∆t
∂t

(3)
tk

674

L. Lin et al.

To make F(X(t),t) change from F1 (X), just set F (X, t0 ) = F1 (X). The problem is how to ensure the deformation end at F2 (X). Note that the intensity ﬁeld
at next time is controlled by Eq.3, whose parameter can be used to control the
∂X(t)
that may satisfy this demand is
deformation is ∂X(t)
∂t . One choice of
∂t
∂X(t)
∇F (X, t)
= − (F2 (X) − F (X, t))
∂t
∇F (X, t)

(4)

The geometric explanation of Eq.4 is the movement speed of X is
∇F (X,t)
|F2 (X) − F (X, t)|. And the direction is along the current normal(− ∇F
(X,t) ),
if X is inside the target object; else, the direction is the reverse of the normal,
as illustrated in Fig.4. Substitute Eq.4 into Eq.3, get the iteration equation:
F (X, tk+1 ) = F (X, tk ) + ∇F (X, tk ) (F2 (X) − F (X, tk ))∆t

(5)

F (xi+1 ,yj ,tk )−F (xi−1 ,yj ,tk ) F (xi ,yj+1 ,tk )−F (xi ,yj−1 ,tk )
,
2h
2h

.
where ∇F ≈
The ending condition of the iteration of Eq.5 is max |F2 (X) − F (X, t)| < ε,
X∈Ω

where Ω is the boundary of F(X,t), and ε is a minimal positive constant.

T=0.0

T=0.05

T=0.1

T=0.2

T=0.3

T=0.4

T=0.5

T=0.6

T=0.8

T=1.0

Fig. 5. Morphing using Eq.5

Fig. 6. Direction and distance problem

Fig. 7. Rigid deformation problem

By iterating Eq.5, F(X(t),t) changes gradually from F1 (X) into F2 (X). Unfortunately, there are several unpleasant phenomena.
First problem: as Fig.5 shows, the morphing shape changes quickly at ﬁst,
and then becomes very slow. Eq.4 gives cause for it, as the pixels move at
|F2 (X) − F (X, tk )|. When F (X, tk ) is approaching F2 (X), the speed will get
slower and slower. Problem 2: every pixel outside the target shrinks, as in Fig.6.
Because according to Eq.4, every pixel’s movement direction is reverse of the
normal when out of the target. Actually, we expect the pixels between a and b
expend instead of shrink. Problem 3: at the place far enough from the boundary

Water Droplet Morphing Combining Rigid Transformation

675

of target (such as c in Fig.6), the intensity value may be all zero, this prevents us
from controlling the movement. Problem 4: when the shape of source and target
are the same, such as Fig.7, we expect the morphing changes by rigid deformation composed of pure rotation and translation. If they are diﬀerent, we want
least distortion of the in-between objects. Eq.5 can not gratify this demand.
To get a natural and pleasant morphing eﬀect, these problems should be
addressed. Section 3 gives a solution to the ﬁrst 3 problems; and problem 4 is
handled in section 4.

3

Distance Field Morphing

First, we generate the distance ﬁeld from the boundary of contact area. Then,
use the distance ﬁeld instead of intensity ﬁeld to control the deformation.
3.1

Distance Field Transformation

The distance inside the area of object is positive, outside the area is negative,
and zero on the boundary. Assume dist(X) is the Euclidean distance from point
X to the boundary of contact area, deﬁne distance ﬁeld as:
⎧
⎨ +dist(X) if X is inside object;
if X is on the boundary;
D(X) = 0
(6)
⎩
−dist(X) if X is outside object;
Denote the source distance ﬁeld as S(X), the target ﬁeld as T(X), and the
current deforming distance ﬁeld as D(X(t),t). Using the same general spirit as
the previous study, we rewrite Eq.4 and the iteration Eq.5 as:
∇D (X(t), t)
∂X(t)
= −T (X)
∂t
∇D (X(t), t)

(7)

D(X, tk+1 ) = D(X, tk ) + T (X) • ∇D(X, tk )

(8)

Now, problem 3 is handled naturally, as T(X) still works at the place far
enough from the target object.
3.2

Control Morphing Speed and Direction

In the ﬁrst problem, we want a stable morphing, that is, the maximum speed
of the pixels at every time step should be identical. Assume N is the number of
total morphing step. We give the stable iteration Equation:
D(X, tk+1 ) = D(X, tk ) +

T (X)
• ∇D(X, tk )
N −k

(9)

Morphing in Fig.8 is generated by applying Eq.9. As expected, the morphing
speed is very stable. What’s more, the number of total morphing step N, that
is, the total morphing frames number, is now under control.

676

L. Lin et al.

Now let’s consider the morphing direction in problem 2. Assume NT (X) is
the unit normal vector of target distance ﬁeld, and ND (X) is that of current
distance ﬁeld. Note that in the area where a and b belong to (in Fig.6), the
angle between NT (X) and ND (X) is an obtuse angle; while in the area where c
belongs to, it is an acute angle. So, the dot production NT (X) • ND (X) can be
employed to decide the morphing direction of the outside part, where T(X)<0.
Thus we get the last iteration Equation:
T (X)
N −k
T (X)
N −k

• ∇D(X, tk ) • (N T (X) • N D (X)) , T(X) < 0
• ∇D(X, tk ) , T(X) > 0
(10)
Applying Eq.10, Fig.9 gives a smooth and natural morphing. And the pixels
between a and b all expend to the target rather than shrink.

D(X, tk+1 ) =

T=0.0

T=0.05

D(X, tk ) +
D(X, tk ) +

T=0.1

T=0.2

T=0.3

T=0.4

T=0.5

T=0.6

T=0.8

T=1.0

Fig. 8. Morphing using Eq.9

T=0.0

T=0.1

T=0.2

T=0.3

T=0.4

T=0.6

T=0.8

T=1.0

Fig. 9. Morphing using Eq.10

4

Combining Rigid Transformation

As in problem 4, in some cases, to get better morphing eﬀect, we must transform
(warp) source object Os , to another object W (Os ), which approximates the
target object Ot , as well as possible. The transformation W is composed of a
pure translation C and a rotation R.
The translation is easily obtained by comparing the center of the source and
that of the target. The problem is how to deﬁne the rotation to make W (Os )
approximate Ot .
First, in the space Os , emit a line in each direction of θi = i∆θ (i=0, . . . N-1)
from the center, calculate the distance to the farthest boundary. Store the disDS [i + j],i + j < N
tances in array Ds [i]. Deﬁne Dj [i] =
.
DS [i + j − N ],i + j ≥ N (i,j=0, . . . N-1)
Do the same thing to Ot to generate Dt [i]. Then calculate the correlation between Dj [i] and Dt [i], and select the j which maximizes the correlation, that is,
the j which minimizes

N −1
i=0

(Dt [i] − Dj [i])2 , to get the rotation angle θ = j∆θ.

Water Droplet Morphing Combining Rigid Transformation

T=0.0

T=0.1

T=0.2

T=0.3

T=0.4

T=0.5

T=0.6

T=0.7

T=0.8

677

T=1.0

Fig. 10. Combine rigid transformation

Fig. 11. Complete morphing Procedure

So, the rigid transformation used to rotate and translate the source object to
match the coarse features of the target object is W (X) = Rθ (X) + C, (θ = j∆θ).
One thing must be pointed out is: when combine the morphing with the rigid
transformation, the exact number of frames is pre-requisite. This is because the
morphing speed must keep pace with the rigid transformation. If it is slower, it
has not arrived the target when the rotation and translation have ended, and,
contrariwise. Recall Eq.9 (also Eq.10), the number of total morphing step N is
under control. So, they can be combined synchronously precisely.
Now, we can organize complete distance ﬁeld morphing procedure as follows:
Step 1: Generate the transformation W, exerting on the source object Os ,
which approximates the target object Ot , denoted as W (Os ). The transformation
W is composed of a pure translation C and a rotation Rθ .
Step 2: Generate a new distance ﬁeld W(S) according to the transformation
W, by assigning the value of point X in ﬁeld S to the point W(X) in ﬁeld W(S),
where W (X) = Rθ (X) + C.
Step 3: Generate a series of intermediate ﬁelds M(W(S),T,t) by morphing
W(S) to T, using Eq.10.
Step 4: Transform every ﬁeld M(W(S),T,t) to ﬁeld Wt−1 M (W (S), T, t)) , by
assigning the value at point X in ﬁeld M(W(S),T,t) to the point Wt−1 (X) in
ﬁeld Wt−1 M (W (S), T, t)), where Wt−1 (X) = R−(1−t)θ (X) − (1 − t)C, t ∈ [0, 1].
The series of Wt−1 M (W (S), T, t)) is the in-between ﬁelds from S to T.
Fig.10 shows a morphing combining rigid transformation. As expected, the
morphing procedure combines rigid transformation synchronously smoothly.
Then, we can calculate the contact area between the droplet and the plane,
as well as take advantage of the proﬁle curve directly from these intermediate

678

L. Lin et al.

distance ﬁelds, which are used to represent the water droplet. Subsequently, the
scene is rendered by ray-tracing method. Fig.11 is our ﬁnal example, which shows
a complete water droplets morphing procedure. We can see that the plausible
morphing procedure gives a very smooth and natural eﬀect.

5

Conclusion

We have presented a metamorphosis method between two (or more) large water
droplets with arbitrary shape and topology, without any artiﬁcial interaction.
The morphing procedure is not physical based, but driven by distance ﬁeld.
Various instances are considered, thus the morphing speed and direction are
well controlled. Synchronous rigid transformation is taken into account to give
a more natural eﬀect.

References
1. Peachey D.: Modeling Waves and Surf. Computer Graphics, 20(4), pp. 65-74, 1986.
2. Foster N, Fedkiw R.: Practical Animation of Liquids. Proceedings of the 28th
annual conference on Computer graphics and interactive techniques, 2001.
3. Kaneda K, Shinya I, Yamashita H.: Animation of Water Droplets Moving Down a
Surface. The Journal of Visualization and Computer Animation 10, 1999.
4. Fournier P, Habibi A, Poulin P.: Simulating the ﬂow of liquid droplets. Proceedings
of Graphics Interface 98 pp.133-42, 1998.
5. Malin Jonsson, Anders Hast.: Animation of Water Droplet Flow on Structured
Surfaces. Conference: Sigrad 2002, Norrk¨
0ping, pp. 17-22, 2002
6. Turk G., O’Brien J.: Shape transformation using variational implicit functions.
Proceedings of ACM SIGGRAPH 99, pages 335-342, 1999.
7. Yu Y-J, Jung H-Y, Cho H-G.: A new water droplet model using metaball in the
gravitational ﬁeld. Computer & Graphics 23, pp. 213-222, 1999.
8. Alexander Pasko, Vladimir Savchenko.: Constructing functionally deﬁned surfaces.
Implicit Surfaces’95, Grenoble, France, pp. 97-106, April, 1995.
9. J. F. Hughes.: Scheduled Fourier volume morphing. SIGGRAPH Computer Graphics, 26(2), pp. 43-45, 1992.
10. T. He, S. Wang and A. Kaufman.: Wavelet-based volume morphing. In Proceedings
of IEEE Visualization ’94, Washington, D.C., pp. 85-92, 1994.
11. A. Lerios, C. D. Garﬁnkle and M. Levoy.: Feature-based volume metamorphosis.
Proc. SIGGRAPH 95, Los Angeles, California, pp. 449-456 , August 6-11, 1995.
12. D. Cohen-Or, D. Levin, and A. Solomivici.: Three-dimensional distance ﬁeld metamorphosis. ACM Transactions on Graphics, 17(2), pp. 116-141, 1998.
13. D. Breen, R. Whitaker.: A level set approach for the metamorphosis of solid models.
IEEE Transactions on Visualization and Computer Graphics, 7(2):173–192, 2001.

