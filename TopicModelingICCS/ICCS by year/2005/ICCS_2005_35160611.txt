A LiE Subroutine for Computing
Prehomogeneous Spaces Associated with
Complex Nilpotent Orbits
Steven Glenn Jackson and Alfred G. No¨el
Department of Mathematics,
University of Massachusetts,
Boston, MA 02125-3393, USA
{jackson, anoel}@math.umb.edu

Abstract. We develop a LiE subroutine to compute the irreducible components of certain prehomogeneous spaces that are associated with complex nilpotent orbits. An understanding of these spaces is necessary for
solving more general problems in the theory of nilpotent orbits and the
representation theory of Lie groups. The output is a set of LATEX statements that can be compiled in a LATEX environment in order to produce
tables. Although the algorithm is used to solve the problem in the case
of exceptional complex reductive Lie groups [2], it does describe these
prehomogeneous spaces for the classical cases also. Complete tables for
the exceptional groups can be found at
http://www.math.umb.edu/˜anoel/publications/tables/.

1

Introduction

It has been long established that the representation theory of Lie groups is
of fundamental importance to physics, chemistry and mathematics. However it
is less known to scientists that this theory is currently being applied in many
engineering applications, in computer science and in the development of ﬁnancial
mathematics. The theory is still being developed by mathematicians who are
more and more participating in interdisciplinary projects. Consequently, progress
in the representation theory of groups should be of interest to scientists and
engineers working at the cutting edges of their ﬁelds.
The representation theory of semisimple Lie groups (and general reductive
Lie groups) is especially important and challenging. Mathematicians have developed a large number of techniques to create diﬀerent representations of a given
Lie group. An understanding of the nilpotent orbits of such groups would provide important information about their possible representations. In the study
and classiﬁcation of such orbits the theory of prehomogeneous spaces plays an
important role.
Definition 1 (M. Sato [5]). Let G be a connected semisimple complex Lie
group, V a finite dimensional vector space over C and ρ a rational representation
of G in V . Then the triple (G, ρ, V ) is called a prehomogeneous vector space if
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 611–618, 2005.
c Springer-Verlag Berlin Heidelberg 2005

612

S.G. Jackson and A.G. No¨el

G admits a Zariski open dense orbit Ω in V . If ρ is irreducible then (G, ρ, V ) is
said to be irreducible.
We often write (G, V ) instead of (G, ρ, V ) and gx instead of (ρ(g))(x).
Let g be a semisimple complex Lie algebra and G its adjoint group. It is a fact
that the number of nilpotent orbits of G in g is ﬁnite. Let X be a representative of
a nilpotent orbit O of G in g. Then from the Jacobson-Morozov theorem X can be
embedded into a triple (H, X, Y ) with H semisimple and Y nilpotent such that
[H, X] = 2X,

[H, Y ] = −2Y,

[X, Y ] = H.

Such an (H, X, Y ) is called an sl2 -triple. Given such a triple, the action of adH
determines a grading g = i∈ZZ gi , where gi = {Z ∈ g : [H, Z] = iZ}.
It is a fact that g0 is a reductive Lie subalgebra of g. Let G0 be the connected
subgroup of G such that Lie(G0 ) = g0 . In 1959, Kostant [4] showed that (G0 , g2 )
is a prehomogeneous vector space. Later, Vinberg [7] generalized Kostant’s result
by showing that all (G0 , gi ) pairs are prehomogeneous vector spaces.
Our goal is to describe the irreducible components of the G0 -modules
gi for all nilpotent orbits of the Lie group G in g.
It is enough to consider the simple complex Lie algebras. We have developed a
general theory for classical complex simple Lie groups by exploiting the fact that
their nilpotent orbits are parametrized by certain partitions of an integer related
to their rank. Such parametrization is not available for exceptional groups. As a
result our subroutine is needed in order to solve the problem in the cases where
G is of exceptional type. As a byproduct we obtain another method of computing
these prehomogeneous spaces for any ﬁxed simple complex classical Lie group.
All these results are found in [2].
In order to give the reader the ﬂavor of the general result we provide a
complete description of the result in the case of the general linear group.

2

Type GLn

Let GLn be the set of n × n complex invertible matrices. Then g = gln , the set
of all n × n complex matrices. It is known that the nilpotent orbits of the group
G = GLn on g are parametrized by partitions of n. Therefore, if X is a nilpotent
element of g then up to conjugation we can take X as sum of Jordan blocks of
size di where the di ’s are parts of the partition d = [d1 , . . . , dk ] representing the
class of X. For example if n = 8 and d = [3, 3, 2] then
⎞
⎛
0 1 0 0 0 0 0 0
⎜ 0 0 1 0 0 0 0 0 ⎟
⎟
⎜
⎜ 0 0 0 0 0 0 0 0 ⎟
⎟
⎜
⎜ 0 0 0 0 1 0 0 0 ⎟
⎟
X=⎜
⎜ 0 0 0 0 0 1 0 0 ⎟.
⎟
⎜
⎜ 0 0 0 0 0 0 0 0 ⎟
⎟
⎜
⎝ 0 0 0 0 0 0 0 1 ⎠
0 0 0 0 0 0 0 0

A LiE Subroutine for Computing Prehomogeneous Spaces

613

The Jacobson-Morozov theorem tells us that we can embed X in a triple
(H, X, Y ). In this case we can choose H to be the following diagonal matrix of
trace zero:
H = diag(d1 − 1, d1 − 3, . . . , −d1 + 3, −d1 + 1, . . . , dk − 1, . . . , −dk + 1)
Let V = Cn be the standard representation of g. Since H is semisimple we
must have V = i∈ZZ Vi , where Vi is the H-eigenspace of eigenvalue i.
GL(Vi ) and each G0 -

Theorem 1. Maintaining the above notation, G0
∗
module gl
i−j=l Vi ⊗ Vj .

Proof. Let GH be the centralizer of H in G. Then GH preserves each eigenspace
GL(Vi ). But under the adjoint action G0 = GH . Let
Vi of H. Hence GH
gl(Vi ) be the Lie algebra of G0 ; then as a g0 -module we can identify g
g0
with V ⊗ V ∗ , which is equivalent to i,j Vi ⊗ Vj∗ . Moreover, as g0 -module, g
gl . It follows that each g0 -module gl is identiﬁed exactly with i−j=l Vi ⊗ Vj∗
since adH is a derivation.
Here is an example. Let X be the representative of d = [3, 3, 2] given above.
Then
H = diag(2, 0, −2, 2, 0, −2, 1, −1).
Since dim V2 = dim V0 = dim V−2 = 2 and dim V1 = dim V−1 = 1 we have
G0 = GL2 × GL2 × GL2 × GL1 × GL1
while
g1
g2
g3
g4

3

∗
∗
(V2 ⊗ V1∗ ) ⊕ (V1 ⊗ V0∗ ) ⊕ (V0 ⊗ V−1
) ⊕ (V−1 ⊗ V−2
),
∗
∗
∗
(V2 ⊗ V0 ) ⊕ (V1 ⊗ V−1 ) ⊕ (V0 ⊗ V−2 ),
∗
(V2 ⊗ V1∗ ) ⊕ (V1 ⊗ V−2
)
∗
(V2 ⊗ V−2 ).

Description of the Algorithm

Maintaining the above notations, let ∆ = {α1 , . . . , αl } be the Bourbaki set of
simple roots of g and R+ the positive root system generated by ∆. Then there
is a one-to-one correspondence between nilpotent orbits of G in g and a subset
of Dynkin diagrams whose nodes are labeled with elements of the set {0, 1, 2}.
This is the Dynkin-Kostant classification [4]. Algorithms for labeling the Dynkin
diagrams are found in [1]. For example, if g = sl8 (the set of 8 × 8 matrices of
trace 0) and O is the nilpotent orbit corresponding to the partition d = [3, 3, 2]
then O is associated with the following diagram:
0

❞

1

❞

1

❞

0

❞

1

❞

1

❞

0

❞

.

614

S.G. Jackson and A.G. No¨el

The labels represent the evaluations of the simple roots αi on the diagonal
matrix:
ˆ = diag(2, 2, 1, 0, 0, −1, −2, −2).
H
ˆ i,i − h
ˆ i+1,i+1 . Moreover H is conjugate to H
ˆ = h
ˆ under the Weyl
with αi (H)
group S8 (the symmetric group on eight letters). See [1] for more details. It
gα where gα is the root space associated with the
follows that gi
ˆ
α(H)=i
root α.
It is useful to observe that the type of the semisimple part of the reductive Lie
group G0 can be read from the diagram. It corresponds to the group generated
by the roots labeled with zero. In the above example the semisimple part of G0
is of type A1 ⊕ A1 ⊕ A1 .
Definition 2. Let v be a non-zero element of the root space gλ ⊆ gi and Xα a
non-zero vector in any gα ⊆ [g0 , g0 ] with α > 0. If [Xα , v] = 0 for all such Xα ’s
then we say that v is a highest weight vector of G0 on gi and we call λ a highest
weight of gi .
We shall describe an algorithm which computes the highest weights of gi
given a labeling of the Dynkin diagram corresponding to the nilpotent orbit
under consideration. The subroutine is written in the language LiE. Readers
who are not familiar with LiE may consult [6]. The highest weights will be
expressed in terms of the fundamental weights. For the reader’s convenience
all LiE generic functions will be written in boldface characters. The subroutine
name is irrdmodule(). Its input consist of a labeling string (usually the BalaCarter label attached to the nilpotent orbit), the Dynkin-Kostant labels and the
type of the simple group. The subroutine returns a set of LATEX statements that
generate a table containing all the highest weights of all non-zero gi for i > 0.
3.1

Algorithm
irrdmodule(tex bala;vec label; grp g ) =
{
# Formatting statements to be used for exceptional groups
# bala: Bala-Carter notation of the nilpotent orbit
# label: Dynkin-Kostant label of the nilpotent orbit
# g: complex simple Lie algebra
grptype = “ ”; if g == G2 then grptype = “\gtwo”;ﬁ; if g == F4 then
grptype = “\ﬀour”;ﬁ; if g == E6 then grptype = “\esix”;ﬁ; if g == E7
then grptype = “\eseven”;ﬁ; if g == E8 then grptype = “\eeight”;ﬁ;
printﬂag = 0;
setdefault (g); n =n pos roots; l = Lie rank; alpha = pos roots;
if size(label) == l then
lookfordegree = 0; modcounter = n;
while modcounter > 0 do
degree = null(n); spaceoﬁnterest = null(n,l);

A LiE Subroutine for Computing Prehomogeneous Spaces

# Compute degree positive roots
counter = 0; for i = 1 to n do for j = 1 to l do
degree[i] = degree[i] + label[j] * alpha[i][j];od;
# Build the gi vector space speciﬁed by lookfordegree
if degree[i] == lookfordegree then counter = counter+1;
spaceoﬁnterest[counter] = alpha[i]; fi;od;
space = null( counter, l);
for i = 1 to counter do space[i] = spaceoﬁnterest[i]; od;
dimspace = counter;
modcounter = modcounter - dimspace;
if modcounter < 0 then print(“ Negative modcounter”); break;fi;
if dimspace > 0 && lookfordegree > 0 then
# Set up the output LATEX statement
latexline = “ ”;
if printﬂag == 1 then latexline = “ \cline3-5 &”; fi;
if printﬂag == 0 then printﬂag = 1;
latexline = “\hline ” + bala + “ & ” + grptype;
for i = 1 to l do
latexline = latexline+“{”+label[i] + “}” ; od; fi;
latexline = latexline + “ & ” + lookfordegree + “ & ” + dimspace +
“ & \ba”;
# Find all the highest weights of gi
hw = all one ( dimspace );
for i = 1 to l do
if label[i] == 0 then
for;j = 1 to dimspace do candidate = alpha[i] + space[j];
# Check if candidate is in space. If yes then it is not a highest weight
for k = 1 to dimspace do
if candidate == space [k] then hw[j] = 0; break;fi; od; od;fi; od;
# Compute highest weights
numhw = 0;
for i = 1 to dimspace do numhw = numhw + hw[i]; od;
rhighestweights = null(numhw,l);
counter = 0;
for i = 1 to dimspace do
if hw[i] == 1 then
counter = counter+1; rhighestweights[counter] = space[i]; fi; od;
# Convert to fundamental weights
if numhw> 0 then
highestweights =rhighestweights * Cartan;
for i = 1 to numhw do latexline = latexline + “(”;
for j = 1 to l do

615

616

S.G. Jackson and A.G. No¨el

latexline = latexline + highestweights[i][j];
if j < l then latexline = latexline + “,” fi; od;
latexline = latexline + “) \\ ”; od;
latexline = latexline + “\ea \\”; fi;
print (latexline); fi;
# Process the next gi vector space
lookfordegree = lookfordegree+1;
od;
else print (“label is incompatible with group type”);
fi;
}
Example 1. We compute the highest weights of each of the four gi modules
associated with the nilpotent orbit d = [3, 3, 2] when g = sl8 . Since g0 is reductive
we only need to consider the action of its semisimple part [g0 , g0 ]. The subroutine
is placed in a ﬁle called phmod which has to be loaded in the LiE environment.
Here is the LiE session that produces Table 1:
LiE version 2.2 created on Nov 22 1997 at 16:50:29 Authors: Arjeh
M. Cohen, Marc van Leeuwen, Bert Lisser. Mac port by S. Grimm
Public distribution version
type ‘?help’ for help information
type ‘?’ for a list of help entries.
> read phmod
> irrdmodule(“2,2,1,0,0,-1,-2,-2”,[0,1,1,0,1,1,0],A7)

Observe that since the number of positive roots of sl8 is 28 and the semisimple part of g0 is of type A1 ⊕ A1 ⊕ A1 the sum of the dimensions of the gi ’s is
correct. By the “Theorem of the Highest Weight” [3–p. 279], gi is completely
determined as g0 -module by its highest weights. Moreover, when interpreting the
results given in the table, one should be aware that the action of the semisimple part of g0 on gi is completely determined by those coeﬃcients associated
with the nodes of Dynkin-Kostant label 0; the other coeﬃcients aﬀect only
the action of the center of g0 , which in any case must act by scalars on each
irreducible component of gi . Let us denote the seven fundamental weights of
sl8 by ωi for 1 ≤ i ≤ 7. Then (disregarding the action of the center) we see
that
g1

V ω1 ⊕ V ω4 ⊕ V ω4 ⊕ V ω7

g2
g3
g4

V 0 ⊕ V ω1 +ω4 ⊕ V ω4 +ω7
V ω1 ⊕ V ω7
V ω1 +ω7 .

A LiE Subroutine for Computing Prehomogeneous Spaces

617

Table 1.
Example in sl8 revisited
Elementary divisors Label i dim gi Highest weights of gi
(1, 1, −1, 0, 0, 0, 0)
(0, −1, 1, 1, −1, 0, 0)
2, 2, 1, 0, 0, −1, −2, −2 0110110 1 8
(0, 0, −1, 1, 1, −1, 0)
(0, 0, 0, 0, −1, 1, 1)
(0, −1, 1, 0, 1, −1, 0)
(1, 0, 0, 1, −1, 0, 0)
2 9
(0, 0, −1, 1, 0, 0, 1)
(1, 0, 0, 0, 1, −1, 0)
3 4
(0, −1, 1, 0, 0, 0, 1)
(1, 0, 0, 0, 0, 0, 1)
4 4

where V λ denotes the irreducible [g0 , g0 ]-module of highest weight λ. We note
that since g−i is dual to gi , the module structure of g−i is easily determined
from that of gi .
The correctness of the algorithm should be evident to anyone familiar with
the representation theory of complex reductive Lie groups. The computation of
highest weights is accomplished by ﬁnding the set of vectors in each gi which
are annihilated by all positive simple root spaces in [g0 , g0 ]. Such root spaces
correspond to the simple roots of Dynkin-Kostant label 0. Since g0 acts by the
adjoint action, the subroutine returns only the roots β such that gβ lies in gi
and [Xα , Xβ ] = 0 for all positive α with gα ⊂ [g0 , g0 ]. This is exactly the set
of highest weights of gi , which is recorded in the array rhighestweights. Finally,
we express the highest weights in terms of the fundamental weights using the
Cartan matrix of g.
A worst case analysis of the code reveals the algorithm is O(rank(g) ×
(n pos roots)3 ). This is due to the fact that the control variable of the outer
while loop, modcounter , is bounded by the number of positive roots and that the
more intensive internal for loop is at worst executed (rank(g) × (n pos roots)2 )
times. Of course we are assuming that the LiE internal functions are very fast.
From our experience we believe that they are optimal. On average the subroutine performs very well. We use it to compute the irreducible modules of
the prehomogeneous spaces associated to all the nilpotent orbits of the exceptional complex simple groups. Complete tables for the exceptional groups can
be found at http://www.math.umb.edu/˜anoel/publications/tables/. For more
information see [2]. The computations were carried on an IMac G4 with speed
1GHz and 1Gb SDRAM of memory.

4

Conclusion and Future Work

We presented a LiE implementation of a simple algorithm for computing the
module structures of a large class of prehomogeneous spaces, namely those asso-

618

S.G. Jackson and A.G. No¨el

ciated with nilpotent orbits in the adjoint representations of complex reductive
Lie groups. In [2] we have developed general methods for the classical types,
taking advantage of the parametrization of the nilpotent orbits by partitions.
We developed the algorithm presented here to solve the problem for groups of
exceptional type. The algorithm as implemented in LiE is stable and of a low
complexity. Our implementation is clear, which makes analysis very easy. The
correctness of the algorithm is a consequence of the well-known “Theorem of the
Highest Weight.” Several other authors have treated special cases of this problem; our results generalize theirs to a complete solution for complex reductive
groups.
We are currently working on extending these results to non-compact real
reductive Lie groups. In light of the Kostant-Sekiguchi correspondence, it suﬃces
to consider the action of the subgroup KC ⊂ GC whose real form is maximal
compact in G on the complex symmetric space GC /KC . This work has already
started and we have obtained preliminary results.

References
1. Collingwood, D. H. and McGovern, W. M. Nilpotent orbits in semisimple Lie algebras. Van Nostrand Reinhold Mathematics Series, New York (1992).
2. Jackson, S. G. and No¨el, A. G. Prehomogeneous spaces associated with complex
nilpotent orbits. To appear in Journal of Algebra.
3. Knapp, A. W. Lie groups beyond an introduction. Second edition, Birkha¨
user
Progress in Mathematics 140 (2002)
4. Kostant, B. The principal three dimensional subgroup and the Betti numbers of a
complex Lie group. Amer. J. Math., Vol. 81, (1959) 973-1032.
5. Sato, M. and Kimura, T. A classification of irreducible prehomogeneous vector spaces
and their relative invariants. Nagoya Math. J. 65 (1977), 1-155.
6. Van Leeuwen, M. A. A., Cohen, A. M., and Lisser, B. LiE: A package for Lie group
computations, Computer Algebra Nederland, Amsterdam, Netherlands (1992)
7. Vinberg, E. B. On the classification of the nilpotent elements of graded Lie algebras,
Doklady Academii Nauk SSSR 225 (1975b), 745-748 (Russian). English translation:
Soviet Math. Doklady 16 (1975), 1517 - 1520.

