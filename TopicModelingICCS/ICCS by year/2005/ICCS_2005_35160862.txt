Distributed Object-Oriented Wargame
Simulation on Access Grid
Joong-Ho Lim, Tae-Dong Lee, and Chang-Sung Jeong
School of Electrical Engineering in Korea University,
1-5ka, Anam-Dong, Sungbuk-Ku, Seoul 136-701, Korea
{jhlim, lyadlove}@snoopy.korea.ac.kr
csjeong@charlie.korea.ac.kr
Abstract. This paper presents the design and implementation of
Distributed Object-oriented Wargame Simulation(DOWS) on Access
Grid(AG). DOWS is an object-oriented distributed simulation system
based on a director-actor model. DOWS on AG supports a collaborative
environment by providing a virtual venue with high quality audio and
real-time video interactive interface for remote users, and allows a groups
of users in remote sites to easily participate in the whole simulation. We
design an eﬃcient communication scheme between application and AG
so that DOWS can be incorporated on AG for collaboration purpose.

1

Introduction

The simulation can be adapted in many ﬁelds such as construction, traﬃc, measurement and so on. One of them is a war game simulation in military ﬁeld.
Although there are few battles in the world, the military should continue to
train their army to improve the operation skill of battle. However, the government must spend expensive budgets to check their strategies and maintain their
battle ability, because the real training operation of the army must require high
cost and time. Therefore, war-game simulation is regarded as one of the most
eﬀective ways to test new strategies and the operation capability of army’s force.
However, it requires a large volume of multimedia data as well as many complex processes, and there exists some limit in number of operators and observers
due to the space limitation. Also, it is diﬃcult to have video/audio services in collaborative environment. In this paper, we present a Distributed Object-oriented
Wargame Simulation(DOWS) system which provides not only distributed simulation environment but also collaborative environment using Access Grid(AG).
We shall describe an eﬃcient communication scheme which integrates application into AG so that DOWS can be easily incorporated onto AG for collaborative
purpose.
This work has been supported by KIPA-Information Technology Research Center,
University research program by Ministry of Information & Communication, and
Brain Korea 21 projects in 2005.
Corresponding author.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 862–865, 2005.
c Springer-Verlag Berlin Heidelberg 2005

Distributed Object-Oriented Wargame Simulation on Access Grid

863

In section 2, we brieﬂy describe the Access Grid, and in section 3, brieﬂy
explain DOWS. In section 4, we present an architecture for DOWS on AG. In
section 5, we conclude with future works.

2

Access Grid

Grid computing is a specialized form of distributing computing where the application is distributed over a wide-area network and computing nodes are geographically far-oﬀ from each other[2]. It comprises Computational, Data and
Access Grid. Computational Grid can share computing resources at remote site
for high performance computing. Data Grid provides an integrated view for
the distributed data. Access Grid(AG), developed by Argonne national laboratory, provides various services such as video/audio conferencing, data sharing,
shared application, text-based communication and certiﬁcates management for
collaboration[3]. It enables remote users to interact each other, and exchange
information through video and audio services.
AGTk(Access Grid Toolkit) has been developed using Grid technology[1],
and provides all the services oﬀered in Grid. It is composed of AG Server, AG
Client and virtual venues. An AG client joins into a virtual venue to collaborate
with other members in the venue, and interact through AG server.

3

Dows System

DOWS is an object-oriented simulation system based on a director-actor model
which can be mapped eﬃciently on object-oriented and distributed simulation.
Director-actor model consists of actors and directors which interact with others.
Actor represents a simulation entity or a sub-model in the simulation, and director is a participant in the simulation which controls the actors. Each director
generates commands or events to its associated actors which in turn activate
the actual simulations by interacting with other actors in the same or diﬀerent
subgroups. A set of actors may be designated as actor group so that each director can issue commands to each member in the actor group simultaneously. In
director-actor model, simulation is carried out by actors interacting with each
other. Each actor can represent a simulation entity participating in one simulation model or a sub-model in the whole simulation. DOWS consists of four
major components which interact with each other on a distributed environment:
director, actor, agent and coordinator. First, directors instantiate the simulation
model and participate in the simulation concurrently through the interactive
communication with the agents which are in charge of the parallel simulation of
its associated sub-models using several actors. Second, each actor corresponds to
a simulation entity of the simulation model or a sub-model which is a part of the
whole simulation model. Several actors can be executed either in one processor
or several processors interconnected through a network on a distributed environment. Each actor sends an event message to the channel of the other actor, and
maintains the synchronization. Third, the agent provides an eﬃcient virtual real

864

J.-H. Lim, T.-D. Lee, and C.-S. Jeong

time simulation environment which integrates the coordination among directors
and actors by supporting time synchronization, simulation message transfer, and
network fault detection. each agent can play a role of a message router, and coordinates each other to forward messages between actors and directors. Last, the
coordinator runs the whole simulation by sending start message to each actor,
or suspends it by sending a block signal to the agents whose input thread in turn
notiﬁes its corresponding actors to block.

4

DOWS on Access Grid

AG supports collaborative applications through the channel sharing. We classify
users into operator and observer: The former can control simulation by issuing
commands to the actors directly, and the latter only view the simulation controlled by the former. After login, DOWS operator and observer applications
can be started by operators and observers respectively. Figure 1(a) show Venue
client and server. Venue server supports various services such as venue creation,
synchronization, authorization, registration, and data broadcasting. As in ﬁgure
1(b)(c), Venue client creates a relay station for each DOWS operator application,
which interacts with other observer applications through its own relay station.
Relay stations has a role which relays messages between DOWS application and

Application

DOWS System

Venue Sever

DOWS Server

handler

①

handler

D2A

A2D

Blue Team

Red Team

③

DOWS Client
Red

DOWS Client
Blue

RS & Shared Section

RS & Shared Section

②

Red Team Channels

handler

handler

Relay Station

SharedAppClient

Blue Team Channels

④

Venue Client

Event Channel

Application Service

Node Service
Video Producer

Video Consumer

Audio Producer

Audio Consumer

rat

vic

RS & Shared Section

RS & Shared Section

DOWS Client
Red

DOWS Client
Blue

RS & Shared Section

RS & Shared Section

DOWS Client
Red

DOWS Client
Blue

Shared Applications

ⓒ
Blue Team Flow

mic

Red Team Flow
speaker

camera

ⓐ

projector

ⓑ

Fig. 1. An architecture of DOWS on AG

Distributed Object-Oriented Wargame Simulation on Access Grid

865

AG, and use two message queues between them. Each relay station receives the
updated data in the message queue sent from its corresponding DOWS operator application using its message handler, and propagates them to other relay
stations in the same venue using the event channel provided by application service in AGTk. Then, all the observer application in the same venue receives
the updated data from the message queue sent by the relay station. Application service APIs provided by AGTk support a mechanism for event channel,
discovery, coherence, and synchronization among relay stations. Relay station is
implemented using python script language, and makes use of the functions in
the SharedAppClient class which exploits application service APIs provided by
AGTk.
For example, as shown in ﬁgure 1(a), two venues called ”Blue Team Venue”
and ”Red Team Venue” are created in the Venue server. Suppose DOWs server,
Venue clients and server exist already. Each venue client creates a relay station,
which in turn generates its corresponding DOWS client. Entering the name of
team venue, we can view the real time simulation updates in our team using the
relay stations which relays messages between DOWS application and AG. Note
that DOWS application cannot communicate directly with AG.

5

Conclusion

This paper have presented the design and implementation of DOWS on AG
which supports a collaborative environment for distributed applications. We have
shown that the distributed application can be eﬃciently incorporated into AG
environment by proposing a relay station which makes use of event channel and
application service APIs in AGTk. Therefore, it provides a way which enables
users to integrate applications on a collaborative environment with high quality
audio and real-time video interactive interfaces in distributed systems. As a
future work, we are working on the integration of computational grid into our
system for the performance improvement of computation intensive simulation
arising in DOWS.

References
1. Access Grid http://www.accessgrid.org/
2. Stevens, R., Papka, M.E. and Disz, T.,”Prototyping the workspaces of the future,”
Internet Computing, IEEE, pp 51-58, July-Aug. 2003.
3. Ho, H. C. and Yang, C. T. and Chang C. C., ”Building an E-learning Platform by
Access Grid and Data Grid Technologies,”Proceedings of the 2004 IEEE International Conference on e-Technology, pp 121-126 2004.
4. Ernest H. Page and Roger Smith,”Introduction to Military Training Simulation: A
Guide for Discrete Event Siulationists,” Proceedings of the 1998 Winter Simulation
Conference, pp 33-40, 1998.

