A Problem Solving Environment for
Image-Based Computational Hemodynamics
Lilit Abrahamyan1, , Jorrit A. Schaap2 , Alfons G. Hoekstra1 ,
Denis Shamonin1 , Frieke M.A. Box2 , Rob J. van der Geest2 ,
1
Johan H.C. Reiber2 , and Peter M.A. Sloot
1

Section Computational Science, Laboratory for Computing,
System Architecture and Programming, Faculty of Science,
University of Amsterdam Kruislaan 403,
1098 SJ Amsterdam, The Netherlands
{labraham, alfons, dshamoni, peter}@science.uva.nl
http://www.science.uva.nl/research/scs/
2
Division of Image Processing, Department of Radiology,
Leiden University Medical Center Albinusdreef 2, 2333 ZA Leiden,
PO Box 9600, 2300 RC Leiden, The Netherlands
{J.A.Schaap, J.H.C.Reiber, R.J.van der Geest, F.M.A.Box}@lumc.nl
http://www.lkeb.nl

Abstract. We introduce a complete problem solving environment designed for pulsatile ﬂows in 3D complex geometries, especially arteries.
Three-dimensional images from arteries, obtained from e.g. Magnetic
Resonance Imaging, are segmented to obtain a geometrical description
of the arteries of interest. This segmented artery is prepared for blood
ﬂow simulations in a 3D editing tool, allowing to deﬁne in- and outlets,
to ﬁlter and crop part of the artery, to add certain structures ( e.g. a
by-pass, or stents ), and to generate computational meshes as input to
the blood ﬂow simulators. Using dedicated ﬂuid ﬂow solvers the time
dependent blood ﬂow in the artery during one systole is computed. The
resulting ﬂow, pressure and shear stress ﬁelds are then analyzed using a
number of visualization techniques. The whole environment can be operated from a desktop virtual reality system, and is embedded in a Grid
computing environment.
Keywords: Problem Solving Environment, Computational Hemodynamics, blood ﬂow modeling.

1

Introduction

”A problem solving environment (PSE) is a computer system that provides all
the computational facilities necessary to solve a target class of problems” [1, 2].
The target class of problems that we chose in our study is associated with cardiovascular diseases, a predominant cause of death [3, 4]. In particular our attention
Corresponding author.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 287–294, 2005.
c Springer-Verlag Berlin Heidelberg 2005

288

L. Abrahamyan et al.

is concentrated on vascular disorders caused by atherosclerosis. The goal of our
PSE, which we call HemoSolve, is to provide a fully integrated environment for
simulation of blood ﬂow in patient speciﬁc arteries.
Because of the complex structure of the human vascular system it is not
always obvious for surgeons how to solve the problem of bypass and/or stent
placement on the deformed part, or to decide on speciﬁc treatment alternatives.
Having a completely integrated computational hemodynamics environment like
HemoSolve can serve as a pre-operational planing tool for surgeons, but also as a
useful experimental system for medical students to enlarge their practical skills
[5, 6]. It also serves as a environment for biomedical engineers that study e.g.
new stent designs.
Moreover, our HemoSolve is merged with Grid technology, thus oﬀering a
uniﬁed access to diﬀerent and distant computational and instrumental resources
[6]. This is one of the desirable abilities of PSEs in general [2].
We ﬁrst describe our system for image-based computational hemodynamics,
then we provide examples of using it in the case of the abdominal aorta bifurcation and an abdominal aorta aneurysm, and ﬁnally the last section represents
discussions and conclusions.

2

The Problem Solving Environment - HemoSolve

In ref. [5] Steinman argues that a need exists for robust and user-friendly techniques that can help an operator turn a set of medical images into computational
ﬂuid dynamics (CFD) input ﬁle in a matter of minutes. HemoSolve not only has
this ability but also is a tool which allows to simulate pulsatile (systolic) ﬂows
in arteries.
The whole system consists of the following components (See Fig.1):
1.
2.
3.
4.

2.1

Medical data segmentation to obtain arteries of interest;
3D editing and mesh generation, to prepare for the ﬂow simulation;
Flow simulation, computing of blood ﬂow during systole;
Analyses of the ﬂow, pressure, and stress ﬁelds.

Medical Data Segmentation

The goal of the segmentation process is to automatically ﬁnd the lumen border
between the blood and non-blood, i.e. the vessel wall, thrombus or calciﬁed
plaque. The algorithm consists of three stages: In the ﬁrst stage a wave front
propagation algorithm is used to ﬁnd an approximation of the centerline of the
vessel. In the second stage the volumetric data is resampled into a stack of 2D
slices orthogonal to the centerline. Then in each slice a contour delineating the
lumen border is detected. Finally in the third stage, the stack of 2D contours
is combined to form a 3D surface model, which will serve as input for the 3D
editing tool.

A PSE for Image-Based Computational Hemodynamics

289

Fig. 1. Functional design of HemoSolve

3D Centerline Extraction: In order to get a ﬁrst estimate of the centerline
of the vessel we use the WaveProp method as described in [7] and [8]. WaveProp
is based on the Fast Marching Level Set algorithm introduced by Sethian [9].
The principle is that an image is treated as an inhomogeneous medium through
which a wave can propagate. The speed of the wave front is determined by a
speed function which maps intensity values to speed values. The propagating
wavefront creates a monotonous ascending function with its single minimum
at the startpoint; with a steepest decent the shortest path from end point to
startpoint is found.
In the 3D computer tomography angiography (CTA) datasets the user indicates with two points the beginning (proximal point) and end (distal point) of
the vessel segment of interest. Then, a wave front is initiated at the proximal
point and propagated through the vessel until it reaches the distal point marking
all visited voxels as lumen (blood pool). This gives us a binary volume of the
solid lumen. A distance image [10, 11] is then calculated from the binary lumen
volume containing for each voxel its distance to the background. Consequently,
there will be a 3D ridge of high values in the distance image, which coincides
with the exact path of the centerline of the solid blood pool. This ridge can
be tracked as described in [8] using wave front Propagation and Backtracking,
resulting in the centerline ( Fig. 2).

Fig. 2. (a) - is the pathline and the centerline crossing an axial slice, (b) - is a stack
of slices resampled along the centerline

290

L. Abrahamyan et al.

Per Slice Contour Detection: Perpendicular to the detected centerline 2D
slices are extracted from the original CTA dataset ( Fig. 2). In each of these
transversal slices, a contour delineating the lumen is detected using the WaveProp algorithm similar as it was used to detect the centerline, but now with
diﬀerent speed functions and cost images. Contours delineating objects in an
image usually follow the edge of that object. With the proper speed function, a
wave propagating through an edge image will ﬂow fast along the object edges and
stall in solid parts of the object and in the background. The backtrack method
can be used to obtain a contour from one point on the edge to another point on
the edge, following that particular edge.
3D Surface Model: The stack of 2D transversal contours can be used to obtain per-slice information, such as diameter, circumference and area of the 2D
contour. For the ﬂow simulations however, a 3D surface model is needed. Therefore, the stack of 2D contours is converted into a 3D surface model by connecting
each of the contour points of one slice to the closest contour point in the next
slice ( Fig. 4 (a)).
2.2

3D Editor and Mesh Generator

3D editing is the second component after the segmentation. The 3D stereoscopic
image can easily be maintained in this user-friendly editing tool. Here surgeons
and students can execute their experimental visualization studies on realistic
arterial geometries. They can crop parts of the artery, where important factors
in the study of hemodynamics exist, with the help of a clipping instrument.
They can add inlet and outlet layers on the end-points of the arterial geometry
and can enhance it with structures like bypasses or stents. Also this component
allows them to deﬁne the geometrical features ( e.g. width, length, placement
positions ) of these structures. Thus, the 3D editing tool allows surgeons and
students to mimic the real surgical processes.
The ﬁnal stage of this component is mesh generation. The prepared arterial
geometry, including aneurysms, bifurcations, bypasses and stents, is converted
into a computational mesh in several minutes. The mesh could be coarse or ﬁne
depending on the wish of user.
The mesh is then ready to be used in ﬂow simulators.
2.3

Hemodynamic Solvers

Two diﬀerent computational hemodynamic solvers can be used in HemoSolve:
1. Lattice Boltzmann method (LBM)
2. Finite element method (FEM)
In both solvers the ﬂow is time-dependent and after simulation the pressure,
velocity, and shear stress ﬁelds during one full systolic period are produced and
can be visualized. Both solver receive the input geometry mesh from the 3D
editing tool.

A PSE for Image-Based Computational Hemodynamics

291

LBM is a mesoscopic method based on a discretized Boltzmann equation with
simpliﬁed collision operator [12]. Here the ﬂow is considered Newtonian. In the
solver bounce back on links is used as boundary condition on walls and pressure
diﬀerence boundary condition is applied on inlet/outlets. We have shown that
LBM is capable of solving hemodynamic ﬂows in the range of Reynolds and
Womersley numbers of interest [13].
To run the simulator, except the input data ﬁle from 3D editing tool, one
should deﬁne several patient-speciﬁc free parameters like Reynolds number.
FEM is a general discretization tool for partial diﬀerential equations. For blood
ﬂow model the incompressible Navier-Stokes equations are used. Input parameters are the velocity proﬁles of the in- and outﬂow of the bifurcation and a model
which calculates the non-Newtonian properties of the blood in a patient speciﬁc
manner [14]. The ﬁnite element package that was used in this study is called
SEPRAN [15].
2.4

Flow Analyses

In order to analyze the blood ﬂow in arteries its velocity, pressure and shear stress
proﬁles need to be examined. Several methods exist for it and among them visualization of the ﬂow is one of the advanced methods that helps to understand the
meaning and behavior of ﬂow better. Also visualization techniques are diﬀerent
and can show diﬀerent features of ﬂow. One of the visualization techniques we
use in HemoSolve is based on simulated pathline visualization[16].

3

Examples

As an application example of using HemoSolve we present two case studies complex geometries representing parts of the human vascular system:
1. Aneurysm on upper part of abdominal aorta;
2. Whole abdominal aorta.
3.1

Aneurysm

We consider case of an aneurysm ( ballooning out of the artery ) in the upper
part of the aorta. First the medical data of the upper part of patient’s abdominal aorta with aneurysm is segmented by applying the segmentation algorithm
( Fig.3 (a,b) ). Then the segmented part which includes the aneurysm, is transfered into 3D editing tool where the user crops the structurally interesting part
( Fig.3 (c) ) and deﬁnes inlet and outlet layers ( Fig.3 (d) ). This placement is
easy to control, that is to change the plane of position with simply moving the
normal vector in the middle of the layer or to change the size just by movement
of corner points of the rectangle. In this example there is one inlet at the top

292

L. Abrahamyan et al.

Fig. 3. Aneurysm: main stages of HemoSolve. First segmentation of the raw medical
data (a). Then the segmented data (b) is ﬁrst cropped (c) and inlet/outlet layers
are added (d) and the mesh is generated (e). Simulation results of created mesh are
presented (f)

and one outlet at the bottom layer. Finally the mesh is generated depending on
constructed geometry ( Fig.3 (e) ). The mesh is then used as an input data for
CFD solver. The presented ﬂow is the velocity proﬁle of blood ﬂow simulated by
LBM method. The Reynolds number applied to this blood ﬂow is 500. The size
of generated mesh is 146x73x55 lattice points and the simulation time is about
20 minutes on 16 processors. As a result three frames during the cardiac systole
are captured ( Fig.3 (f) ).
3.2

Abdominal Aorta

Next we consider the full lower abdominal aorta down to the bifurcation. Again
the medical data is segmented by applying the segmentation algorithm ( Fig.4
(a) ). Then the same steps as in the ﬁrst example are applied ( Fig.4 (b) ),
except the outlet layers here are six and are laing in diﬀerent planes ( Fig.4 (c) )
and the sizes of generated mesh are bigger ( Fig. 4 (d) ). The ready mesh then
used as an input data for CFD solver. The presented ﬂow is the velocity proﬁle
of blood ﬂow simulated by LBM method with the same Reynolds number 500.
The size of generated mesh is 355x116x64 lattice point and the simulation time
is 85 minutes on 16 processors. As a result three frames during cardiac systole
are captured ( Fig.4 (e) ).

A PSE for Image-Based Computational Hemodynamics

293

Fig. 4. Abdominal aorta: main stages of HemoSolve. Segmented data (a) is ﬁrst
cropped (b) and inlet/outlet layers are added (c) and the mesh is generated (d). Simulation results of created mesh are presented (e)

4

Discussions and Conclusions

The ﬁeld of image based hemodynamics needs integrated PSEs, especially to
enhance the preparation of computational meshes, and to allow non-specialists
to enlarge their practical skills. HemoSolve consists of several stages that make
it a complete system. Thus biomedical engineers,surgeons or novice surgeons
can take a raw medical data from patients vascular system and after several
simple steps within a quite short period can get completed ﬂow ﬁelds ( velocity,
pressure, shear stress) and can analyze them with diﬀerent visualization tools.
One of this tools is personal space station (PSS) which realize 3D visualization
and interaction [17]. Moreover with the help of 3D editing tool potential users
can add bypasses or stents to vessel and examine the blood ﬂow proﬁle in them.
The biomechanists of University of Amsterdam and Leiden University Medical
Center have already used Hemosolve in their scientiﬁc research.
In order to estimate the eﬃciency of HemoSolve we compare its main features
with the requirements of users from PSEs in general. Those characteristics are
[1, 2] :
1. Simple human-computer interaction - It is enhanced by graphical user interface which is easy accessible even for inexperienced users [17].
2. Complete and accurate numerical models - Numerical models used in this
PSE are LBM [13] and FEM [14, 15] which are complete and quite accurate
for simulation of blood ﬂow in human vascular system.
3. Parallel and distributed computing environment - The solvers in PSE are
fully parallelized [18] .

294

L. Abrahamyan et al.

4. Geographically distributed data - This image-based PSE is completely integrated into a Grid environment, which gives huge abilities not only to distribute
the data but also to do simulations and diagnoses by grid computing [6] .
5. Usefulness for university student - The potential users of this PSE are considered novice surgeons who can ﬁrst practice their knowledge by doing an
operation on PSE and afterward apply their experience on patients.
Thus, we conclude that HemoSolve is a well deﬁned, easy applicable environment for image-based hemodynamics research of time-dependent blood ﬂow in
the human vascular system.

Acknowledgements
The work was funded by the Dutch National Science Foundation, NWO, Token 2000 Distributed Interactive Medical Exploratory for 3D Medical Images
(DIME) project ( 634.000.024 ).

References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.

15.
16.
17.
18.

E.Gallopoulos, E.N. Houstis and J.R. Rice, IEEE Comp. Sci. Eng. 1 2, 11 (1994);
E.N. Houstis and J.R. Rice, Math. and Comp. in Sim. 54, 243 (2000);
Ch.A. Taylor and M.T. Draney, Annu. Rev. Fluid. Mech. 36, 197 (2004);
World Health Organization, 2002, The World Health Report 2002,
http://www.who.int/whr/en/ ;
D.A. Steinman, Annals of Biom. Eng. 30, 483 (2002);
A. Tirado-Ramos, P.M.A. Sloot, A.G. Hoekstra and M. Bubak, Parallel Computing
30, 1037 (2004);
J.P. Janssen, G. Koning, P.J.H. de Koning, J.C. Tuinenburg and J.H.C. Reiber,
Int J Cardiovasc Imaging 18 317 (2002);
P.J.H. de Koning, J.A. Schaap, J.P. Janssen, R.J. van der Geest and J.H.C. Reiber,
Magnetic Resonance in Medicine 50 1189 (2003);
J.A. Sethian, Proc Nat Acad Sci USA 93 1591 (1996);
T. Saito and J.I. Toriwaki, Pattern Recognition 27 1551 (1994);
O. Cuisenaire, PhD thesis, Universit e catholique de Louvain (October, 1999);
S. Succi, New York:Oxford (2001);
A.M. Artoli, A.G. Hoekstra and P.M.A. Sloot, Int. J. of Mod. Phys. B, 17 95
(2003);
F.M.A. Box, M.C.M. Rutten, M. A. van Buchem, J. Doornbos, R.J. van der Geest,
P.J.H. de Koning, J. Schaap, F.N. van de Vosse and J.H.C. Reiber Computational
Science - ICCS 2002, 255 (April, 2002);
G. Segal, Ingenieursbureau SEPRA, Park Nabij 3, Leidschendam, the Netherlands
D.A. Steinman, Jour. of Biomech. 33 5, 623 (2000);
E.V. Zudilova and P.M.A. Sloot Springer-Verlag Berlin Heildelberg 3345 184
(2005).
D. Kandhai, A.G. Hoekstra, M. Kataja, J. Timonen and P.M.A. Sloot, Comp.
Phys. Commun., 111 14 (1998);

