Mesh Smoothing via Adaptive Bilateral Filtering
Qibin Hou1 , Li Bai1 , and Yangsheng Wang2
1

School of Computer Science and IT, University of Nottingham,
Nottingham, NG8 1BB, UK
{qbh, bai}@cs.nott.ac.uk,
2
Institute of Automation, Chinese Academy of Sciences,
Beijing, 100080, China
wys@nlpr.ia.ac.cn

Abstract. In this paper, we present an adaptive bilateral ﬁltering algorithm that can be used to remove unavoidable noise from 3D mesh data
generated by initial stages. Selecting the parameters for bilateral ﬁlters
automatically, this algorithm smoothes meshes in the normal ﬁeld using anisotropic character of local neighborhood triangles. Experimental
results demonstrate that the proposed method remove light noise from
meshes and reserve ﬁne features of meshes as good as best results of
other methods, with the advantage of none user-assisted parameters setting. Visual comparisons display that the method proposed in this paper
performs better than other smoothing method for heavy noisy mesh.

1

Introduce

Over recent years, 3D computer graphics research results have been applied in
interactive entertainment industry to meet the public’s increasing thirst for fun
at an enormous rate. In many applications, 3D mesh processing act an important
role for visual representation of 3D content as realistic as possible. This depends
on the quality of 3D data which is created by scanning or modelling process.
However, the raw geometry data acquired from the real-world object usually
contains undesirable noise from various sources, even with high ﬁdelity scanners
[1]. Therefore, smoothing is necessary before further stages, with the purpose to
remove noise while preserving the crucial shape features.
Amount of mesh smoothing or mesh denoising algorithm have been published
so far, for example [2], [3], [4], [5], [6], [7], [8], [9], [10]. Taubin [2] put forward a
simple, linear and isotropic method to enhance the smoothness of triangulated
surfaces at ﬁrst. After that, Desbrun et al [3] made an improvement by using a geometric ﬂow analogy for irregular meshes. Inspired by image processing work on
scale space and anisotropic diﬀusion, Zhang [7] and Bajaj [10] proposed diﬀerent
feature-preserving surface fairing method. Ohtake [4], Taubin [5], Tasdizen [6]
oﬀered diﬀusion-type smoothing on the normal ﬁeld itself. Jones [9] analyzed
the advantages and disadvantages of all these methods, and achieved impressive
results based on robust statistics and local ﬁrst-order predictors of the surface.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp. 273–280, 2005.
c Springer-Verlag Berlin Heidelberg 2005

274

Q. Hou, L. Bai, and Y. Wang

He utilized a method analogous to bilateral ﬁltering for images. Contemporaneously, Fleishman [8] presented a similar method with Jones that uses bilateral
ﬁltering for smoothing surfaces, but exploited a diﬀerent distance way. However,
both the methods exploited by Jones [9] and Fleishman [8] are needed to choose
parameters assisted by user.
By integrating Ohtake [4] with Fleishman [8] together, this paper attempts
to present an idea of developing self-adaptive parameters setting bilateral ﬁlter
for noisy triangle meshes. The aim is to automatically smooth a noisy mesh
and preserve sharp features without help from user. The rest of this paper is
organized as follows: Section 2 describes background about bilateral ﬁltering
for images, and adaptive Gaussian ﬁlter, and how to adapt and extend them
for meshes. Section 3 describes our adaptive bilateral ﬁlter smoothing method.
Experiment results are shown in Section 4. Section 5 has conclusion and proposal
for future work.

2
2.1

Background About Bilateral Filter and Adaptive
Gaussian Filter
Bilateral Filter for Images and Its Extension to Meshes

Bilateral ﬁlter is proposed by Tomasi et al. [11] for edge-preserving image smoothing. For image I, the formulation to calculate the output value at pixel u(x, y)
is [11]:
p∈N (u) G( p − u )S(|I(p) − I(u)|)I(p)
(1)
E(u) =
p∈N (u) G( p − u )S(|I(p) − I(u)|)
where N (u) is the neighbourhood of u. G( p − u ) measures the geometric closeness, S(|I(p) − I(u)|) measures the photometric similarity. It can be seen that
E(u) depends not only on the spatial distance p − u , but also on the signal
diﬀerence |I(p) − I(u)|.
In order to ﬁlter a mesh triangle T using local neighboring triangles Tj , we try
to extent Formula (1) for processing mesh normals. The triangle normals can be
seemed as vector-valued image deﬁned over the meshes. Let n(T ) is the normal
value at triangle T , C is the centroid of T , n(Tj ) is the normal value at triangles
Tj , and Cj is the centroid of Tj . Spatial weight G depends on the geodesic
distance d(C, Cj ). d(C, Cj ) is found via Dijkstra’s algorithm on the dual mesh
which is formed by the centroids [4]. Inﬂuence weight S depends on the diﬀerence
between n(T ) and n(Tj ), which is denoted by h(T, Tj ) = n(T ) − n(Tj ) .
The smoothed normal m(T ) is computed by
m(T ) =

|

A(Tj )G(d)S(h)n(Tj )
A(Tj )G(d)S(h)n(Tj )|

(2)

where A(Tj ) is the area of Tj .
According to Jones [9], the spatial weight and the inﬂuence weight are able to
use Gaussian ﬁlter. By selecting width of σg of the spatial and σs of the inﬂuence
weight Gaussians, the amount of smoothing is achieved.

Mesh Smoothing via Adaptive Bilateral Filtering

275

Mesh normal of triangle T due a Bilateral ﬁltering can also be described as:
n(T ) = mσg ,σs (T ) + εσg ,σs (T )

(3)

where εσg ,σs is the diﬀerence between original normal and the smoothed normal.
2.2

Adaptive Gaussian Filter for Local Smoothness

Gomez [12] gave an adaptive Gaussian ﬁlter in which local variance σ for each
kernel is selected automatically by working with a scale-space framework and
minimal description length criterion (MDL).
The ﬁltering procedure can be understood as [12]:
I0 (x, y) = Iσ (x, y) + εσ (x, y)

(4)

where Iσ (x, y) is the Low-Pass part, and εσ (x, y) is the residual part. Rewrite
Equation (4) as description length (dl), [12] has following equation:
dlI0 = (

γ
2nσε2 αβ
2
)
+
ε
,
γ
=
σx2
k

(5)

where n ≥ 2, α, β are given constants.
An image smoothed by adaptive Gaussian ﬁlter is [12]:
Iσ (x, y) = I0 (x, y)exp(−

x2 + y 2
)
2σ ∗ (x, y)2

(6)

where σ ∗ (x, y) is local variance at selected scale from σ1 , σ2 , . . . , σn . At that
scale, description length of Iσ has minimal value at location (x, y).

3

Adaptive Bilateral Mesh Smoothing

In our proposed method, bilateral ﬁlter and adaptive parameter selection are
combining together for smoothing the normal ﬁelds. And then, ﬁtting meshes to
modiﬁed normals to achieve smoothed results.
3.1

Normal Smoothing Algorithm Description

Deﬁne Ω is composed by the σmin , σmax , and step length λ, these three variances
are decided by average edge length of all the meshes. Please refer to Equation
(2) for means of other variances, for example, n is the normal of T , C is the
centroid of T , the neighborhoods of T denoted by {Tj }, etc. The pseudo-code
for applying Bilateral ﬁlter to triangle normal with parameter automatic setting
is as follows:

276

Q. Hou, L. Bai, and Y. Wang

Name: Adaptive Bilateral Normal Smoothing
Input: {T, n, Ω|T = (v1 , v2 , v3 ); n(T ) = (x, y, z); Ω = (σmin , σmax , λ)}
Output: m(T ) = (x , y , z )
Step 1: Search for neighborhoods {Tj }, which meet the requirement of D(Cj , C)
≤ 2σmax , j = 1, . . . , k
Step 2: Calculate inﬂuence weight parameter and Gaussian ﬁltering
2

h
S(h) = exp(− 2σ
2 ), where σs =
s

h=
¯

1
k

k
j=1

1
k

k
j=1 (hj

− ¯h),

hj , hj = n(T ) − n(Tj )

Step 3: Estimate spatial weight parameter with MDL at scale space
FOR j = 1 : 1 : k
FOR σi = σmin : λ : σmax
d2
G(d) = exp(− (2σ
2) )
i

mσi ,σs (T ) =
ε2 = 2(1 − |

ΣA(Tj )G(d)S(h)n(Tj )
|ΣA(Tj )G(d)S(h)n(Tj )|
A(Tj )G(d)S(h)n(Tj )
A(Tj )G(d)S(h)

|)

END
END
THEN mσg ,σs (T ) = {mσi ,σs (T )|σg = [argmin( σµ2 ) + ε2 ]}
i

Step 4: Get smoothing result, normalize the average normal m(T ) = m(T )/ m
(T )
3.2

Mesh Fitting Based on Modiﬁed Normals

From Sec. 3.1, the smoothed normal for each triangle has been obtained. The
further need to do is to rebuild mesh from the smoothed normals. Ohtake [4]
gave an eﬃcient method to modify the mesh vertex positions for ﬁtting mesh.
For each mesh vertex V , [4] deﬁne
n

A(Tj )|n(Tj ) − m(Tj )|2

Ef it (V ) =

(7)

j=1

where n is the amount of all triangles that are adjacent to V .
Then new position for V is
Vnew = argmin(Ef it (V ))

(8)

A simple conjugate gradient method [13] is used to explore the minimum of
Ef it (V ). Please refer to [4] for detail implementation.

Mesh Smoothing via Adaptive Bilateral Filtering

4

277

Results and Comparison

We realized the adaptive bilateral mesh smoothing methods described in last
section based on the platform provided by Ohtake. Fig. 1(c) demonstrates our
result, comparing with the result in Fig. 1(b) from Ohtake’s adaptive Gaussian
and anisotropic neighborhood [4].
In all cases of this faction, Gaussians are used for spatial (G) and inﬂuence
(S) weight with standard deviation of σg , σs individually. Other robust weight
functions can be applied as well. Jones [9] found Gaussian has good performance
in those two weights. In Fig. 1, the choice for σs depends on Gaussian error normal of neighborhoods, which were selected with the help of σmax , the maximum
value of σg . To ﬁnd σg , we use ten scale-spaces with σ from σmin = 0.4l to
σmax = 4.0l with step size λ = 0.4l, something like what Ohtake have done in
[4]. l is the arithmetic mean of the edge lengths of the mesh. For each mesh triangle, local values of σg , σs are set by algorithm adaptively, not by user. From
Fig. 1, we can see that our method makes same good smoothing as that best
result produced by Ohtake.
It is known that isotropic methods indiscriminately smooth noise and outstanding features at same time [9]. Many researchers have proposed various
anisotropic method to overcome this limitation of isotropic smooth technique.
Durand and Dorsey [14] show that bilateral ﬁltering is alike with anisotropic
diﬀusion. This important character of bilateral ﬁltering helps it to remove noise
while preserving the shape. A comparison of Taubin’s λ|µ smoothing method [5]
with our adaptive bilateral ﬁltering scheme, is presented by Fig. 2.
From Fig. 2, the vision result of Fig. 2(c) seems smoother at general surface
of face than Fig. 2(b), while Fig. 2(g) keeps the eyes of model more eminent than
Fig. 2(e). It shows that outstanding features such as eyes were kept, while noises
were removed eﬃciently. This demonstrates the eﬀectiveness of our method at
feature preservation.

Fig. 1. Results of smoothing Stanford Bunny with word ’iH’ embossed. (a) Original
mesh. (b) Best visual result obtained with Ohtake’s adaptive Gaussian + anisotropic
neighborhood. (c) Adaptive bilateral smoothing proposed in this paper. The model is
courtesy of A. Belyaev

278

Q. Hou, L. Bai, and Y. Wang

Fig. 2. Results of smoothing 3D face model. (a) Original face mesh. (b) Result of
Taubin’s λ|µ smoothing method. (c) Result of our method. (d) Zoom the eyes of original
model. (e) Zoom the eyes of result from method of Taubin. (f) Zoom the eyes of result
from method of Ohtake. (g) Zoom the eyes of result from our method. The model is
courtesy of A. Belyaev

Ohtake [4] said that one of drawbacks of his method is not able to remove large
noise. We test the capability of our method by smoothing mesh at diﬀerent noise
level in Fig. 3. Fig. 3(a) is a monk mesh obtained using laser scanner. Fig. 3(a) is
smoothed by adaptive Gaussian and anisotropic neighborhoods, which produces
Fig. 3(b). Fig. 3(c) is our own result. Fig. 3(c) and Fig. 3(b) have similar visual
quality. This means that both our method and Ohtake’s method are valuable
for light noisy mesh. However, when they cope with heavy noisy mesh, there
will be a little diﬀerent eﬀect, as shown in Fig. 3(e) and Fig. 3(f) individually.
Fig. 3(d) is obtained by adding heavy noise to Fig. 3(a). Fig. 3(e) is the result of
Ohtake’s method used to smooth Fig. 3(d). Fig. 3(f) is got by adaptive bilateral
ﬁlter. A slight improvement of visual quality is achieved in Fig. 3(f) comparing
with Fig. 3(e). This result shows the capability of our method to smooth mesh
in the presence of little heavy noise.

5

Conclusion

In this paper, we propose adaptive bilateral mesh ﬁltering method in which two
parameters are set by fully automatic solution according to the shape of local
triangle neighborhoods. This improved method adaptively smoothes light noisy
mesh and keep the sharp features as well, with ideal human visual eﬀect. In

Mesh Smoothing via Adaptive Bilateral Filtering

279

Fig. 3. Results of smoothing at various noise level. (a) Original monk mesh. (b)
Smoothed by Ohtake’s Gaussian + anisotropic method. (c) Adaptive bilateral ﬁlter was
applied. (d) Noisy monk mesh. (e) Ohtake’s method for noisy mesh. (f) Our method
for noisy mesh

addition, it can also work for large noisy mesh with a little better robustness,
and outperforms other methods in a way.
This adaptive bilateral mesh smoothing method is based on iteration. So the
time-consuming is the drawback of the developed method. To ﬁnd avenue for
ﬁxing this weakness will be a task for future work. Another work need to do is
to establish a general quality evaluation rule or metrics for 3D mesh smoothing.
That metrics should be consistent with human perception of 3D shape. This is
another important theme for future work, as Belyaev has said [15].
Acknowledge. Special thanks to Yutaka Ohtake for providing basic platform
on which we can implement our algorithm and comparison eﬃciently. Original
meshes in this paper courtesy of A. Belyaev from his homepage. This work was
funded by University of Nottingham (Project Code A2RH04). We would like to
thank the anonymous reviewers of this paper for their valuable comments.

References
1. Rusinkiewicz, S., Hall-Holt, O., and Levoy, M.: Real Time 3D Model Acquisition.
ACM Trans. Graphics 21, 3, 438-446
2. Taubin, G.: A Signal Processing Approach to Fair Surface Design. In Processings
of SIGGRAPH 1995, 351-358
3. Desbrun, M., Meyer, M., Schroder, P., and Barr, A. H.: Implicit Fairing of Irregular
Meshes Using Diﬀusion and Curvature Flow. Im Proceedings of SIGGRAPH 1999,
317-324

280

Q. Hou, L. Bai, and Y. Wang

4. Ohtake, Y., Belyaev, A. G., and Seidel, H. P.: Mesh Smoothing by Adaptive and
Anisotropic Gaussian Filter. In Vision, Modeling, and Visualization 2002, 203-210,
Erlangen, Germany, November 2002.
5. Taubin, G.: Linear Anisotropic Mesh Filtering. IBM Research Report RC22213
(W0110-051), IBM, October 2001
6. Tasdizen, T., Whitaker, R., Burchard, P., and Osher, S.: Geometric Surface
Smoothing via Anisotropic Diﬀusioin of Normals. In Proceedings, IEEE Visualization 2002, 125-132
7. Zhang, H., and Fiume, E. L.: Mesh Smoothing with Shape or Feature Preservation.
In Advances in Modeling, Animatioin, and Rendering, J. Vince and R. Earnshaw,
editors, 167-182, 2002
8. Fleishman, S., Drori, I., and Cohen-Or, D.: Bilateral Mesh Denoising. Proceedings
of ACM SIGGRAPH 2003
9. Jones, T., Durand, F., and Desbrun, M.: Non-iterative, Feature-preserving Mesh
Smoothing. ACM Trans. Graphics 2003, 22, 3, 943-949
10. Bajaj, C., and Xu, G.: Anisotropic Diﬀusion on Surfaces and Functions on Surfaces.
ACM Trans. Graphics 2003, 22, 1, 4-32.
11. Tomasi, C., and Manduchi, R.: Bilateral Filtering for Gray and Color Images. In
Proc. IEEE Int. Conf. On Computer Vision, 1998, 836-846
12. Gomez, G.: Local Smoothness in Terms of Variance: the Adaptive Gaussian Filter.
In Proc. Of the BMVC 2000, vol.2, 815-824
13. Press, W. H., Teukolsky, S. A., Vetterling, W. T., and Flannery, B. P.: Numerical
Recipies in C: The Art of Scientiﬁc Computing. Cambridge University Press, 1993.
14. Durand, F., and Norsey, J.: Fast Bilateral Filtering for the Display of HighDynamic-Range Images. ACM Trans. Graphics 2002, 21, 3, 257-266
15. Belyaev, A., and Ohtake, Y.: A Comparison of Mesh Smoothing Methods. IsraelKorea Bi-National Conference on Geometric Modeling and Computer Graphics
Tel-Aviv, Feb. 2003, 83-87

