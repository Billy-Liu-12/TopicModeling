Continuation of Homoclinic Orbits in Matlab
M. Friedman2 , W. Govaerts1 , Yu.A. Kuznetsov3 , and B. Sautois1
1

Department of Applied Mathematics and Computer Science, Ghent University,
Krijgslaan 281-S9, B-9000 Ghent, Belgium
2
Mathematical Sciences Department, University of Alabama,
209 Madison Hall, Huntsville, AL 35899, USA
3
Mathematisch Instituut,
Budapestlaan 6, 3584CD Utrecht, The Netherlands

Abstract. We have added the functionality for continuing homoclinic
orbits to cl matcont, a user-friendly matlab package for the study
of dynamical systems and their bifurcations. It is now possible to continue homoclinic-to-hyperbolic-saddle and homoclinic-to-saddle-node orbits. The implementation is done using the continuation of invariant
subspaces, with the Ricatti equations included in the deﬁning system.
The continuation can be initiated from a limit cycle with large period or
from a Bogdanov-Takens point. All known codimension-two bifurcations
are tested for, during continuation. The test functions for inclination-ﬂip
bifurcations are implemented in a new and more eﬃcient way.

1

Introduction

A continuous-time dynamical system is usually deﬁned by a set of ordinary
diﬀerential equations
x˙ = f (x, α),
(1)
where x is a state vector, α is a parameter vector and f is a smooth function.
For general background on dynamical systems theory we refer to the existing
literature, in particular [1].
cl matcont [2] and its GUI version matcont [3] are matlab packages for
the study of dynamical systems and their bifurcations. Among other things, they
support the numerical continuation of equilibria, limit cycles, limit points, Hopf
points, fold, ﬂip, and torus bifurcations of cycles. Both packages are freely available at http://allserv.UGent.be/~ajdhooge. cl matcont and matcont are
successor packages to auto [4] and content[5], which are written in compiled
languages (Fortran, C, C++). The matlab platform of cl matcont and matcont is attractive because it makes them user-friendly, portable to all operating
systems, and allows a standard handling of data ﬁles, graphical output, etc.
On the other hand, it makes the code inevitably slower because matlab is not
compiled.
Recently we did some successful testing to improve cl matcont ([6]). First,
the transparency and readability of the code was improved greatly by orgaV.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 263–270, 2005.
c Springer-Verlag Berlin Heidelberg 2005

264

M. Friedman et al.

nizing it in an object-oriented structure. Eventually, all of cl matcont’s total functionality will be transferred into the new structure. Second, a partial
inclusion of C-code was used to speed up the computation while preserving
the portability of the package. In the case of limit cycle continuations this
nearly doubles the speed. This version of cl matcont can be downloaded from
http://allserv.UGent.be/~bsautois.
In dynamical systems theory, an orbit corresponding to a solution ϕ(t) is
called homoclinic to the equilibrium point x0 of (1) if ϕ(t) → x0 as t → ±∞.
There are two types of homoclinic orbits with codimension 1, namely homoclinicto-hyperbolic-saddle (HHS), if x0 is a saddle, and homoclinic-to-saddle-node
(HSN), if x0 is a saddle-node. Codimension 1 means that in generic dynamical
systems with two free parameters these orbits exist along curves in the parameter
plane. Both types of homoclinic orbits are important in many applications, e.g.
as wave solutions in combustion models [7], to model ‘bursting’ in models of
biological cells [8], chemical reactions [9], etc.
In this paper, we describe new functionalities of cl matcont related to
homoclinic orbits. We have implemented continuation of both HHS and HSN
orbits, starting from a Bogdanov-Takens (BT) point (no other software allows
this) or from a limit cycle with high period, and the detection of a large number
of codimension 2 bifurcations during the continuation. To compute the relevant
eigenspaces of the equilibrium in each step, we use a method to continue invariant
subspaces based on [10]. auto also has a toolbox for homoclinic continuation,
namely HomCont [11]. Important diﬀerences with our implementation are that
HomCont does not use the continuation of invariant subspaces, and cannot start
the continuation of homoclinics from a BT-point. Also, we have implemented
test functions for inclination ﬂip bifurcations in a new and more eﬃcient way.
Thus, the algorithm combines various ingredients from [10], [11], [12] and [13]
but diﬀers from any existing implementation.

2
2.1

Extended Deﬁning System for Continuation
Homoclinic-to-Hyperbolic-Saddle Orbits

To continue HHS orbits in two free parameters, we use an extended deﬁning
system that consists of several parts.
First, the inﬁnite time interval is truncated, so that instead of [−∞, +∞]
we use [−T, +T ], which is scaled to [0, 1] and divided into mesh-intervals. The
mesh is nonuniform and adaptive. Each mesh interval is further subdivided by
equidistant ﬁne mesh points. Also, each mesh interval contains a number of
collocation points. (This discretization is the same as that in auto for boundary
value problems.) The equation
x(t)
˙ − 2T f (x(t), α) = 0,
must be satisﬁed in each collocation point.

(2)

Continuation of Homoclinic Orbits in Matlab

265

The second part is the equilibrium condition
f (x0 , α) = 0.

(3)

Third, there is a so-called phase condition needed for the homoclinic solution,
similar to periodic solutions
1

∗
x˙ (t)[x(t) − x(t)]dt = 0.

(4)

0

Here x(t) is some initial guess for the solution, typically obtained from the previous continuation step. We note that in the literature another phase condition
is also used, see, for example [14]. However, in the present implementation we
employ the condition (4).
Fourth, there are the homoclinic-speciﬁc constraints to the solution. For these
we need access to the stable and unstable eigenspaces of the system in the equilibrium point after each step. It is not eﬃcient to recompute the spaces from
scratch in each continuation-step. Instead, we use the algorithm for continuing
invariant subspaces, as described in [10]. This method adds two small-sized vectors (YS and YU ) to the system variables, from which the necessary eigenspaces
(stable and unstable, respectively) can easily be computed in each step.
If Q0 is an orthogonal matrix whose ﬁrst m columns form a basis for the
invariant subspace under consideration in the previous step, and A = fx (x0 , α)
is the Jacobian at the new equilibrium point, then we ﬁrst compute the so-called
Ricatti-blocks, Tij , by the formula
T11 T12
= Q∗0 A Q0 .
T21 T22

(5)

If n is the number of state variables, then T11 is of size m × m and T22 is
(n−m)×(n−m). This is done for the stable and unstable eigenspaces separately.
Now YS and YU are obtained from the Ricatti equations
T22U YU − YU T11U + T21U − YU T12U YU = 0,
T22S YS − YS T11S + T21S − YS T12S YS = 0.

(6)

Now we can formulate constraints on the behavior of the solution close to the
equilibrium x0 . The initial vector of the orbit, (x(0) − x0 ), is placed in the
unstable eigenspace of the system in the equilibrium. We express that by the
requirement that it is orthogonal to the orthogonal complement of the unstable
eigenspace. Using YU , we can compute the orthogonal complement of the unstable eigenspace. If Q0U is the orthogonal matrix from the previous step, related
to the unstable invariant subspace, then a basis for the orthogonal complement
in the new step Q1U o is
−YU∗
Q1U o = Q0U
.
I
Note that Q1U o is not orthogonal. The full orthogonal matrix Q1U needed for
the next step, is computed separately after each step. The equations to be added

266

M. Friedman et al.

to the system are (after analogous preparatory computations for the stable
eigenspace)
Q∗1U (x(0) − x0 ) = 0,
(7)
Q∗1S (x(1) − x0 ) = 0.
Finally, the distances between x(0) (resp., x(1)) and x0 must be small enough,
so that
x(0) − x0 − 0 = 0,
(8)
x(1) − x0 − 1 = 0.
A system consisting of all equations (2), (3), (4), (6), (7) and (8), is overdetermined. The basic deﬁning system for the continuation of a HHS orbit in two free
parameters consists of (2), (3), (6), (7), and (8) with ﬁxed 0,1 , so that the phase
condition (4) is not used. The variables in this system are stored in one vector.
It contains the values of x(t) in the ﬁne mesh points including x(0) and x(1), the
truncation time T , two free system parameters, the coordinates of the saddle x0 ,
and the elements of the matrices YS and YU . Alternatively, the phase condition
(4) can be added if T is kept ﬁxed but 0 and 1 are allowed to vary. It is also
possible to ﬁx T and 0 , say, and allow 1 to vary, again with no phase condition.
Other combinations are also possible, in particular, when the homotopy method
[10] is used to compute a starting homoclinic solution.
2.2

Homoclinic-to-Saddle-Node Orbits

For a homoclinic orbit to a saddle-node equilibrium, the extended deﬁning system undergoes some small changes. Now (x(0) − x0 ) has to be placed in the
center-unstable subspace. Analogously, (x(1) − x0 ) must be in the center-stable
subspace. This again is implemented by requiring that the vector is orthogonal to the orthogonal complement of the corresponding space. So the equations
(7) themselves do not really change; the changes happen in the computation
of the matrices Q. The deﬁning system now has one equation less than in the
HHS case (ns + nu < n, with ns the dimension of the stable, and nu of the
unstable eigenspace); the number of equations is restored however, by adding
the constraint that the equilibrium must be a saddle-node. For this we use the
bordering technique, as described in section 4.2.1 of [15].

3

Starting Strategies

At present, continuation of homoclinic orbits in cl matcont can be started in
two ways: either from a Bogdanov-Takens (BT) point or from a limit cycle with
large period.
When starting from a limit cycle with large period, we ﬁrst look for a point
on the cycle with smallest f (x, α) . This point is taken as a ﬁrst approximation
to x0 . The mesh points of the limit cycle are kept as mesh points for the homoclinic orbit, except for the mesh interval that contains the current equilibrium
approximation. In memory, the stored cycle needs to be rotated, so that the ﬁrst
and last point of the orbit (x(0) and x(1)) are stored in the correct locations. To

Continuation of Homoclinic Orbits in Matlab

267

start from a Bogdanov-Takens point, we use the method from [16]. It computes
a predictor for the homoclinic orbit, using the coeﬃcients of the normal form at
the Bogdanov-Takens point. However, it does take some trial-and-error to set all
parameters for the continuation.

4

Bifurcations

Several codimension-two bifurcations can be detected on HHS and HSN curves.
In HSN continuation, only one bifurcation is tested for, namely the non-central
homoclinic-to-saddle-node orbit or NCHSN. This orbit forms the transition between HHS and HSN curves: a sharp corner, which normally characterizes HHS
orbits, appears in the otherwise smooth HSN orbit. The strategy used for detection is taken from HomCont [11].
In HHS continuation, all bifurcations detected in HomCont, are also detected
in our implementation. For this, mostly test functions from [11] are used. We
refer to that paper for test functions for the following bifurcations:
–
–
–
–
–
–
–
–
–
–
–
–
–

Neutral saddle with resonant eigenvalues
Double real stable leading eigenvalue
Double real unstable leading eigenvalue
Neutral saddle, saddle-focus or bi-focus
Neutrally-divergent saddle-focus (stable)
Neutrally-divergent saddle-focus (unstable)
Three leading eigenvalues (stable)
Three leading eigenvalues (unstable)
NCHSN
Shil’nikov-Hopf
Bogdanov-Takens point
Orbit-ﬂip with respect to the stable manifold
Orbit-ﬂip with respect to the unstable manifold

For inclination-ﬂip bifurcations, we also implemented the test functions from
[11], but in a more eﬃcient way. We assume that the eigenvalues of fx (x0 , α) are
ordered according to
Re µns ≤ ... ≤ Re µ1 < 0 < Re λ1 ≤ ... ≤ Re λnu ,
where ns is the number of eigenvalues with negative real part, and nu the number
of eigenvalues with positive real part. We further assume that µ1 and λ1 are real
and v1S and v1U are the eigenvectors of fx (x0 , α) corresponding to eigenvalues µ1
and λ1 , respectively. Let y(t) satisfy
y (t) + 2 T fx∗ (x(t), α) y(t) = 0,
L∗1S y(1) = 0,
L∗1U y(0) = 0,

(9)
(10)
(11)

where L1S and L1U are matrices whose columns form the orthogonal complements to the unstable and stable eigenspaces of f ∗ (x0 , α), respectively. These
are deﬁned similar to Q1S and Q1U in the previous section. Now introduce

268

M. Friedman et al.

– a test function for the inclination-ﬂip with respect to the stable manifold:
ψ1 = e−µ1 T v1S , y(0) = e−µ1 T v1S , L1U ζ2 ;
– a test function for the inclination-ﬂip with respect to the unstable manifold:
ψ2 = −e−λ1 T v1U , y(1) = −e−λ1 T v1U , L1U ζ1 ,
where ζ1 and ζ2 are found by demanding that
∗

∗

[y(1) ζ1 ζ2 ] ⊥ Range [(D − 2T fx )∗ (L∗1S δ1 )∗ (L∗1U δ0 )∗ ] .
Here D and δ are the diﬀerentiation and the evaluation operators, respectively.
Our algorithm keeps track of the left and right singular vectors of this matrix; in
each newly computed homoclinic orbit the matrix is bordered with the right and
left singular vectors of the previously computed homoclinic orbit to compute the
left and right singular vectors of the new matrix.

5

Example

The Morris-Lecar model for the barnacle giant muscle ﬁber [17] is a famous
model in computational neuroscience. The equations are:
C V˙ = Iext −gL (V −VL )−gCa M∞ (V −VCa )−gK N (V −VK ), N˙ = τN (N∞ −N ),

14
12
10
8
6
4
2

38

40

42

44

46

48

Fig. 1. Bifurcation diagram of the biologically most relevant parameter-range of the
Morris-Lecar system. The X-axis shows the value of I, the Y-axis that of V3 . The thin
full line is the limit point curve (which clearly shows a cusp point). The dash-dotted
line is the Hopf curve. The thick full lines are HSN curves, and the dotted lines are
HHS curves. The top and bottom circles indicate the locations of NCHSN points; the
bottom circle is actually two circles close together. The second circle from the top is a
HNS point, and the third is a BT point

Continuation of Homoclinic Orbits in Matlab

269

12.5

4.6

12
4.55
11.5
4.5

11
10.5

4.45
10
4.4

9.5
44.1

44.15

44.2

44.25

44.3

39.6

39.8

40

40.2

40.4

40.6

40.8

Fig. 2. More detailed views of Figure 1. Left: 2 HHS curves approach the limit point
curve. At the intersections, there are NCHSN orbits, and between these, there exists a
curve of HSN orbits. Right: Top circle: a NCHSN point forms the transition between
HHS and HSN curves. Middle circle: at the intersection of a Hopf curve and a HHS
curve (dotted line), a HNS orbit appears. Bottom circle: a BT point exists where a
limit point curve (thin solid line) and a Hopf curve (dash-dotted line) touch. From the
BT point, a HHS curve arises (which is barely visible here)

where M∞ = 12 (1 + tanh((V − V1 )/V2 )), N∞ = 12 (1 + tanh((V − V3 )/V4 )) and
τN = φ cosh((V − V3 )/2V4 ).
In our tests, C = 5, gL = 2, VL = −60, gCa = 4, VCa = 120, gK = 8,
1
, V1 = −1.2, V2 = 18 and V4 = 17.4 are ﬁxed. I and V3 are
VK = −80, φ = 15
varied. In the biologically most relevant parameter-range for I and V3 , a lot of
curves and bifurcations are really close together, among others curves of HHS
and HSN orbits. In Figure 1 a bifurcation diagram is shown, and more detailed
views in Figure 2. These diagrams were computed completely using cl matcont
with our modiﬁcations and extensions. A full bifurcation diagram and a more
thorough study of the model can be found in [18].
Acknowledgement. Bart Sautois thanks the Fund for Scientiﬁc Research Flanders - FWO for funding the research reported in this paper. Mark Friedman was
supported in part under NSF DMS-0209536.

References
1. Kuznetsov, Yu.A.: Elements of Applied Bifurcation Theory. 3rd edn. SpringerVerlag, New York, NY (2004).
2. Dhooge, A., Govaerts, W., Kuznetsov, Yu.A., Mestrom, W., Riet, A.M.: A
Continuation Toolbox in matlab. Manual (2003), http://allserv.UGent.be/
~ajdhooge/doc_cl_matcont.zip.
3. Dhooge, A., Govaerts, W., Kuznetsov, Yu.A.: matcont: A matlab package for
numerical bifurcation analysis of ODEs. ACM TOMS 29,2 (2003) 141-164.

270

M. Friedman et al.

4. Doedel, E.J., Champneys, A.R., Fairgrieve, T.F., Kuznetsov, Yu.A., Sandstede, B.,
Wang, X.J.: auto97: Continuation and bifurcation software for ordinary diﬀerential equations (with HomCont), http://indy.cs.concordia.ca/auto (Concordia
University, Montreal, Canada, 1998)
5. Kuznetsov, Yu.A., Levitin, V.V.: content: Integrated environment for analysis of
dynamical systems, version 1.5, http://ftp.cwi.nl/CONTENT (CWI, Amsterdam,
1998).
6. Govaerts, W., Sautois, B.: Bifurcation software in Matlab with applications in
neuronal modeling. Comput. Meth. Prog. Bio. 77,2 (2005) 141-153.
7. Beresticky, H., Nirenberg, L.: Traveling fronts in cylinders. Ann. Inst. Henri
Poincar´e 9,5 (1992) 497-572.
8. Rinzel, J., Ermentrout, B.: Analysis of neural excitability and oscillations. In Koch,
C., Segev, I. (eds.): Methods in neuronal modeling: from synapses to networks. MIT
Press, Cambridge, MA (1989) 135-169.
9. Gray, P., Scott, S.K.: Chemical oscillations and instabilities: non-linear chemical
kinetics. Oxford University Press, Oxford, UK (1990).
10. Demmel, J.W., Dieci, L., Friedman, M.J.: Computing connecting orbits via an
improved algorithm for continuing invariant subspaces. SIAM J. Sci. Comput. 22,1
(2001) 81-94.
11. Champneys, A.R., Kuznetsov, Yu.A., Sandstede, B.: A numerical toolbox for homoclinic bifurcation analysis. Int. J. Bifurcation Chaos 6,5 (1996) 867-887.
12. Champneys, A.R., Kuznetsov, Yu.A.: Numerical detection and continuation of
codimension-two homoclinic bifurcations. Int. J. Bifurcation Chaos 4 (1994) 785822.
13. Bindel, D., Demmel, J., Friedman, M.: Continuation of invariant subspaces for
large bifurcation problems. In proceedings, SIAM Conference on Applied Linear
Algebra, July 2003, http://www.siam.org/meetings/la03/proceedings/.
14. Doedel, E.J. and Friedman, M.J.: Numerical computation of heteroclinic orbits, J.
Comp. Appl. Math. 26 (1989) 155-170.
15. Govaerts, W.: Numerical Methods for Bifurcations of Dynamical Equilibria. SIAM,
Philadelphia (2000).
16. Beyn, W.-J., Champneys, A., Doedel, E., Govaerts, W., Kuznetsov, Yu.A., Sandstede, B.: Numerical continuation, and computation of normal forms. In Fiedler,
B. (ed.): Handbook of Dynamical Systems, Vol.2, Ch.4. Elsevier Science (2002).
17. Morris, C., Lecar, H.: Voltage oscillations in the barnacle giant muscle ﬁber. Biophys. J. 35 (1981) 193-213.
18. Govaerts, W., Sautois, B.: The onset and extinction of neural spiking: a numerical
bifurcation approach. To appear in J. Comput. Neurosci. (2005).

