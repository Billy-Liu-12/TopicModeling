Investigation of Cache Coherence Strategies
in a Mobile Client/Server Environment
C.D.M. Berkenbrock and M.A.R. Dantas
Department of Informatics and Statistics (INE),
University of Santa Catarina (UFSC),
88040-900 Florianopolis, Brazil
{diacui, mario}@inf.ufsc.br

Abstract. In this article, we present an investigation case study based
on an implementation and performance analysis of three diﬀerent cache
coherence strategies over a real wireless environment. Our research work
considers the broadcasting timestamp, the cache coherency schema with
incremental update propagation and the amnesic terminals strategies.
These strategies are based on periodic broadcast of invalidation reports.
The performance of these strategies is analysed through an ordinary real
environment. In this environment we compare the impact of invalidation
report size, broadcast interval and cache size in mobile devices.

1

Introduction

Data replication in mobile devices can represent an interesting mechanism to
reduce latency, data transfer from servers and collision avoidance in wireless
environments. However, this approach can only be considered successful if users
can ﬁnd essential data in the local cache. As a result, mobile users can avoid the
access to the wireless broadcast link . On the other hand, as disconnection is
frequently observed in wireless conﬁgurations data stored veriﬁcation in a mobile
device is a complex task for several classes of applications.
In this article, we present an investigation case study based on an implementation and performance analysis research considering three diﬀerent cache coherence strategies over a real wireless environment. The broadcasting timestamp
(TS)[1], cache coherence schema with incremental update propagation (CCSIUP) [2] and amnesic terminals (AT) [1] strategies are based on a periodical
broadcast of cache invalidation report (IR). Our experimental results reﬂect the
impact of the size of IR and the cache size of mobile devices when utilizing a
database application.
The paper is organized as follows. In section 2 we presented the experimental
environment architecture. In section 3 we discuss the results obtained in a real
wireless conﬁguration. Finally, in section 4 we present conclusions of the research
work.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 987–990, 2005.
c Springer-Verlag Berlin Heidelberg 2005

988

2

C.D.M. Berkenbrock and M.A.R. Dantas

Experimental Environment Architecture

The client/server paradigm for distributed computing in wired networks is a well
known architecture with many proposals for cache coherence [3]. This approach
is also considered in the literature for wireless environments (e.g. [4, 5]), however
with special concern about disconnection and clients moving.
In this article, we consider the TS, CCS-IUP and AT techniques, because
these strategies have invalidation report (IR) and stateless servers. IR is a
lightweight mechanism for wireless networks that informs only the necessary
items that were modiﬁed. The stateless servers are not obliged to keep information related to mobile devices in its area and it is not necessary to know about
the cache of clients.
The environment architecture developed to execute our experiments is shown
in ﬁgure 1. The architecture has three main components: a server, clients and
a database system. In addition, we implemented the three protocols strategies,
proposed in the literature.

Fig. 1. The environment architecture

Inside the server the modules are communication manager(CM), cache coherence server manager (CCSM) and invalidation report manager (IRM). CM is
responsible for clients link management with the server side. The CCSM veriﬁes
which strategy is being used and adds the appropriated parameters inside the
IR for this strategy. The IRM is responsible for the modiﬁcation of the IR when
the database is modiﬁed.
On the other hand, clients are characterized by the modules communication manager (CM), cache coherence client manager (CCCM), persistent storage
manager (PSM), query list (QL) and user interface (UI). The CM client manages
the connection with the server. The CCCM is responsible for receiving IRs from
the server and applies the cache modiﬁcation following a speciﬁc strategy (S).

Investigation of Cache Coherence Strategies

989

The PSM executes any modiﬁcation necessary into the cache of the mobile device. The QL stores all the registers that are being modiﬁed and UI is a friendly
interface to mobile users to access the environment.
The database system component consider for our experiments was the Mckoi
SQL [6]. We employed this database, because it is open source JAVA SQL
database system package and provides interesting functions to develop applications (e.g. trigger and referential integrity).

3

Experimental Results

In the server database we used 50 items, which were accessed by two mobile
devices. The broadcast window used was 10 intervals, similar to others research
works (e.g. [4, 5]), with 20 seconds between intervals. In addition, the experimental tests were executed using the TS, CCS-IUP and AT considering that mobile
users have 5, 15 and 25 percent of item from the database locally cached.

Fig. 2. Mean update cache time vs. IR
size

Fig. 4. IR size vs. Cache size

Fig. 3. IR size vs. Broadcast interval

Fig. 5. Mean update cache time vs.
Cache size

990

C.D.M. Berkenbrock and M.A.R. Dantas

In ﬁgure 2 our results indicates that the TS and CCS-IUP spend more time
to update the cache than the AT approach. Figure 3 shows IR sizes related
to broadcast intervals. The graphic shows that the TS and CCS-IUP have a
tendency to increase IR sizes when broadcast intervals increase.
The relation of the notiﬁcation size against the cache size is presented in
ﬁgure 4. The increase of the cache size resulted in the increase of the IR size for
AT. The TS registered a small decrement of the IR size and the CCS-IUP did
not get a regular behavior. In ﬁgure 5, as we expected, it is possible to veriﬁed
that the increase of the cache size directly implies in the time to update the data
store in mobile clients.

4

Conclusions

In this paper we presented an investigation case study based on an implementation and performance analysis of three diﬀerent strategies for cache coherence
in wireless networks.
The experimental results demonstrated facilities and constrains of the strategies based on eﬀects from the invalidation report (IR) size, broadcast interval
and mobile clients cache size. The results demonstrated diﬀerent performance
for the parameters considered. The AT strategy had a interesting performance,
but with less facilities compared to the other two approaches.

Acknowledgements
This research was partially supported by CNPQ (Brazilian National Research
Council) under the grant 132145/2004-9.

References
1. Daniel Barbar; and Tomasz Imielnski. Sleepers and workaholics: caching strategies
in mobile environments (extended version). The VLDB Journal, (1995) 4(4):567602.
2. Hyunsik Chung and Haengrae Cho. Data caching with incremental update propagation in mobile computing environments. In Australian Computer Journal (1998).
3. Magnus E. Bjornsson and Liuba Shrira. BuddyCache: high-performance object storage for collaborative strong-consistency applications in a WAN. Proceedings of the
17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications,(2002) 26-39.
4. Joanne Holliday and Divyakant Agrawal and Amr El Abbadi. Disconnection modes
for mobile databases. Wirel. Netw, (2002) 391-402.
5. Jin Jing and Ahmed Elmagarmid and Abdelsalam Sumi Helal and Rafael Alonso.
Bit-sequences: an adaptive cache invalidation method in mobile client/server environments. Mob. Netw. Appl, (1997) 115-127.
6. Mckoi SQL Database System. Available online: http://www.mckoi.com/database/.

