Immune-Based Optimization
of Predicting Neural Networks
Aleksander Byrski and Marek Kisiel-Dorohinicki
Institute of Computer Science,
AGH University of Science and Technology,
Mickiewicz Avn. 30, 30-059 Cracow, Poland
{olekb,doroh}@agh.edu.pl

Abstract. Artiﬁcial immune systems turned out to be an interesting
technique introduced into the area of soft computing. In the paper the
idea of an immunological selection mechanism in the agent-based optimization of a neural network architecture is presented. General considerations are illustrated by the particular system dedicated to time-series
prediction. Selected experimental results conclude the work.

1

Introduction

Looking for solutions for many diﬃcult problems, researchers very often turned
to the processes observed in nature. Such biologically and socially inspired computational models were succesfully applied to various problems and they still
belong to a very important research area of soft computing. Artiﬁcial neural networks, which principles of operation originate from phenomena occuring in the
brain, evolutionary algorithms based on the rules of organic evolution, multiagent systems originating from the observation of social processes are the examples of such approaches. Also artiﬁcial immune systems, inspired by the human
immunity, recently began to be the subject of increased researchers’ interest.
Such techniques are often combined together to create hybrid systems, that by
the eﬀect of synergy exhibit some kind of intelligent behaviour, which is sometimes called computational intelligence as opposed to rather symbolic artiﬁcial
intelligence [1].
Following this idea a hybrid optimization technique of evolutionary multiagent systems have been applied to a wide range of diﬀerent problems [8]. In this
paper immunological mechanisms are proposed as a more eﬀective alternative to
classical energetic ones used in EMAS. Particularly the introduction of negative
selection may lead to early removing of improper solutions from the evolving
population, and thus skip the process of energetic evaluation [7] and speed up the
computation. Such approach may be justiﬁed in speciﬁc cases of the problems,
that require relatively time-consuming ﬁtness evaluation. As an example of such
a problem the optimization of neural network architecture is considered in the
paper.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 703–710, 2005.
c Springer-Verlag Berlin Heidelberg 2005

704

A. Byrski and M. Kisiel-Dorohinicki
NON-SELF
NEGATIVE SELECTION

CLASSIFICATION
Mature
T-cells

Immature
T-cells

match

match

no m

atch
no match

SELF

SELFPROTEINS

UNKNOWN PROTEINS

Fig. 1. Negative selection mechanism in artiﬁcial immune systems

Below, after a short presentation of the basics of human immunity and artiﬁcial immune systems, the details of the proposed approach are given. First the
idea of neural multi-agent system for time-series prediction is described. Then
the application of immune-based selection mechanism in agent-based neural network architecture optimization system is proposed. Some preliminary results obtained for a typical simple prediction problem allow for the ﬁrst conclusions to
be drawn.

2

Artificial Immune Systems

An immune system plays a key role in maintaining the stable functioning of the
human body. At the cellular layer lymphocytes are responsible for detection and
elimination of disfunctional endogenous cells, termed infectious cells and exogenous microorganisms, infectious non-self cells such as bacteria and viruses. One
of the most important adaptation mechanisms in the human immunity is based
on the process of negative selection, which allows for removal of lymphocytes
that recognize self cells [5].
Diﬀerent approaches inspired by the human immune system were constructed
and applied to enhance algorithms solving many problems, such as classiﬁcation or optimization [12]. Basic principles of immune-based algorithms utilising
negative selection may be clearly illustrated on a classical problem of machine
learning – concept learning – as described below.
Concept learning can be framed as the problem of acquiring the deﬁnition
of a general category given a sample of positive and negative training examples of these categories’ elements [10]. Thus the solutions can be divided into

Immune-Based Optimization of Predicting Neural Networks

705

Area

t n+1
(actual)

Agent
Signal

t n-3
t n-2

Prediction

t n-4

t n+1
(predicted)

t n-1

Agent

tn
Area

Fig. 2. A single predicting neural network (a) and the whole multi-agent system (b)

two groups: self (positive) and non-self (negative). An artiﬁcial immune system,
which consists of a large number of lymphocytes can be trained to recognize
these solutions in the process of negative selection. In the beginning the lymphocytes are created, but at this point they are considered immature. Next, the
aﬃnity binding of these cells to present self-cells (good solutions of some problem) is evaluated. Then the lymphocytes that bind themselves to ”good” cells
are eliminated. Finally, lymphocyte-cells that survive entire process are considered mature (see ﬁg. 1). Mature lymphocytes are presented with the cells that
have unknown origin (they may be self, or non-self cells), and they are believed
to have possibility of classifying them [11].

3

Neural Agents for Time-Series Prediction

Prediction (or forecasting) is a generation of information about the possible
future development of some process from data about its past and present behaviour. Time-series prediction consists in searching for some trends in the sequence of values of some variable [6].
Many examples from the literature show that neural networks may be successfully used as a mechanism to model the characteristics of a signal in a system
for a time-series prediction [9]. The choice of a particular architecture of the network is to a large extent determined by a particular problem. Usually the next
value of the series is predicted on the basis of a ﬁxed number of the previous
ones. Thus the number of input neurons correspond to the number of values
the prediction is based on, and the output neuron(s) give prediction(s) of the
next-to-come value(s) of the series. The multi-layer perceptron (MLP) in (see
ﬁg. 2a) should predict tn+1 value of the series, basing on some previous values,
which are given on the inputs of the ﬁrst layer. When tn+1 value is predicted,
the inputs are shifted, and the value tn+1 is given as the input to the last neuron

706

A. Byrski and M. Kisiel-Dorohinicki

of the ﬁrst layer. A network may be supervisory trained, using the comparison
between values predicted and received as an error measure.
A multi-agent predicting system is a population of intelligent agents performing independent analysis of incoming data and generating predictions [4, 3]. In
this case subsequent elements of the input sequence(s) are supplied to the environment, where they become available for all agents (see ﬁg. 2b). Each agent may
propose its own predictions of (a subset of) the next-to-come elements of input
obtained from the posessed neural network. Of course the network is trained by
the agent using incoming data. On the basis of predictions of all agents, prediction of the whole system may be generated e.g. by the means of PREMONN
algorithm [2]. In such a system introduction of evolutionary processes allows for
searching for a neural network architecture and learning parameters most suitable for the current problem and system conﬁguration, just like in evolutionary
multi-agent systems.

4

Immune-Based Selection in Evolutionary Multi-agent
Systems

The idea of EMAS was already described and succesfully applied to several
diﬃcult problems including function optimization and prediction [3, 2].
The key idea of EMAS is the incorporation of evolutionary processes into a
multi-agent system at a population level. This means that besides interaction
mechanisms typical for agent-based systems (such as communication) agents
are able to reproduce (generate new agents) and may die (be eliminated from
the system). Inheritance is to be accomplished by an appropriate deﬁnition of
reproduction, which is similar to classical evolutionary algorithms. A set of parameters describing basic behaviour of an agent is encoded in its genotype, and
is inherited from its parent(s) – with the use of mutation and recombination.
The proposed principle of selection corresponds to its natural prototype and is
based on the existence of non-renewable resource called life energy. Energy is
gained and lost when agents execute actions. Increase in energy is a reward for
”good” behaviour of an agent, decrease – a penalty for ”bad” behaviour (which
behaviour is considered ”good” or ”bad” depends on the particular problem to
be solved). At the same time the level of energy determines actions an agent
is able to execute. In particular, low energy level should increase possibility of
death and high energy level should increase possibility of reproduction [7].
In the simplest case the evaluation of an agent (its phenotype) is based on the
idea of agent rendezvous. Assuming some neighbourhood structure in the environment, agents evaluate their neighbours, and exchange energy. Worse agents
(considering their ﬁtness) are forced to give a ﬁxed amount of their energy to
their better neighbours. This ﬂow of energy causes that in successive generations,
survived agents should represent better approximations of the solution.
In order to speed up the process of selection, based on the assumption that
”bad” phenotypes come from the ”bad” genotypes, a new group of agents (acting

Immune-Based Optimization of Predicting Neural Networks

707

as lymphocyte T-cells) may be introduced. They are responsible for recognizing
and removing agents with genotypes similar to the genotype pattern posessed by
these lymphocytes. Of course there must exist some predeﬁned aﬃnity function,
e.g. using real-value genotype encoding, it may be based on the percentage difference between corresponding genes. These agents-lymphocytes may be created
in the system in two ways:
1. vaccination – during system initialisation lymphocytes are created with random genotype patterns, or with the patterns generated by some other tecnnique designed to solve a similar problem,
2. causality – after the action of death, the late agent genotype is transformed
into lymphocyte patterns by means of mutation operator, and the newly
created group of lymphocytes is introduced into the system.
In both cases, the new lymphocytes must undergo the process of negative selection. In a speciﬁc period of time, the aﬃnity of the immature lymphocytes
patterns to the ”good” agents (posessing relative high amount of energy) is
tested. If it is high (lymphocytes recognize ”good” agents as ”non-self”) they
are removed from the system. If the aﬃnity is low – probably they will be able to
recognize ”non-self” individuals (”bad” agents) leaving agents with high energy
intact.

5

Immunological Multi-agent System for Neural
Network Optimization

The immunologically-enhanced selection is driven by two types of agents (computational agents and lymphocytes) and in case of neural network optimization
may be described as follows.
First, the population of computational agents is initialized with random problem solutions (neural networks and learning parameters) and the initial energy
level. Every agent is able to perform predictions of subsequent time-series values,
after it acquires its actual value and modiﬁes the weights of its neural network in
one step of the learning process. During the described earlier agent rendezvous
action it compares its ﬁtness with neighbours and exchanges a portion of energy
with them. When the level of energy reaches certain level, an agent looks for
the neighbour that is able to reproduce, and they create a new agent, and then
a ﬁxed portion of the parents’ energy is passed to their child. An agent dies
when its energy falls below certain level – it is removed from the system and a
lymphocyte is created based on its genotype.
The speciﬁc task for a lymphocyte agent is aﬃnity testing – existing lymphocytes search the population for agents similar to the genotype pattern contained
in a lymphocyte. If the lymphocyte survived the process of negative selection –
it causes the removal of similar agent. Otherwise lymphocyte is removed from
the system. In the proposed approach, the aﬃnity is determined using the relation of the corresponding genes in the following way. Let p = [p1 . . . pn ] be a

708

A. Byrski and M. Kisiel-Dorohinicki
0.1

0.1

0

0

-0.1

-0.1

-0.2

-0.2

-0.3

-0.3

-0.4

-0.4

-0.5

-0.5

-0.6

-0.6
0

200

400

600

800

1000

0

200

400

600

800

1000

Fig. 3. Prediction error obtained for EMAS (a) and iEMAS (b)

paratope (genotype pattern owned by the lymphocyte) and e = [e1 . . . en ] be an
epitope (genotype owned by the antigen – in the described system it is simply
the genotype of the tested agent), and n is the length of the genotype. If dmax is
the maximum deviation and cmin is the minimum count of corresponding genes,
the construction of the set of corresponding genes may be considered:
G = {pi :

pi
≤ dmax }
ei

The lymphocyte is considered as stimulated (its aﬃnity reached minimal level)
=

when G ≥ cmin , and considered as non-stimulated otherwise.

6

Preliminary Experimental Studies

The system was designed and implemented using distributed evolutionary multiagent platform Ant.NET developed at AGH-UST (http://antnet.sourceforge.net).
The experiments were performed in order to show whether the introduction
of the immunological-based selection mechanism into EMAS will make the classical energetic selection more eﬀective. A distorted sinus function was used as a
benchmark for prediction.
Evolutionary multi-agent system consisted of one evolutionary island, with
initial population of 100 agents. The genotype of the agent cotained the description of a feed-forward neural network (multi-layered perceptron) – count
of neurons in hidden and input layers, learning coeﬃcients. The networks were
taught by the means of backpropagation algorithm with momentum. Before maturing, every lymphocyte undergone the negative selection process. During 100
system steps, if immature lymphocyte was stimulated by an agent with energy
of 150 or higher, the cell was removed from the system.
In ﬁgure 3 the prediction error is presented in terms of ﬁtness of the best
solution in consecutive steps of the system activity. Each plot shows an average
(and the value of standard deviation) of the prediction error obtained from

Immune-Based Optimization of Predicting Neural Networks

709

the 10 runs of optimization with the same parameters. Comparing the plots, it
seems that introduction of the immunological selection allows for a bit quicker
obtaining of the desired prediction accuracy (prediction error close to zero). Yet
this result is not convincing and must be veriﬁed by further experiments.

7

Conclusion

In the paper an agent-based approach to optimization of the architecture of a
predicting neural network was considered. An immune-inspired selection mechanism was proposed as an alternative to energetic selection used in evolutionary
multi-agent systems. As the preliminary experimental results show, it allows for
improper individuals to be removed from the system faster than using classical energetic selection, and thus allows for obtaining slightly better solutions in
comparable time.
The approach seems to be especially adequate for solving problems in which
ﬁtness evaluation takes relatively long time, just like in the considered case of
neural network architecture optimization, which requires training of the neural
network each time it is evaluated [3]. By means of negative selection mechanism,
agents that probably will not be able to construct an eﬃcient neural network,
may be removed before they complete the process of training.
Of course up till now it is too early to compare the method with various other
optimization heuristics known from the literature. The work in progress should
allow for such a comparison.

References
1. P. Bonissone. Soft computing: the convergence of emerging reasoning technologies.
Soft Computing, 1(1):6–18, 1997.
2. A. Byrski and J. Balamut. Evolutionary neural networks in collective intelligent
predicting system. In L. Rutkowski, editor, Seventh International Conference on
Artificial Intelligence and Soft Computing. Springer Verlag, 2004.
3. A. Byrski, M. Kisiel-Dorohinicki, and E. Nawarecki. Agent-based evolution of
neural network architecture. In M. Hamza, editor, Proc. of the IASTED Int.
Symp.: Applied Informatics. IASTED/ACTA Press, 2002.
4. K. Cetnarowicz, M. Kisiel-Dorohinicki, and E. Nawarecki. The application of evolution process in multi-agent world (MAW) to the prediction system. In M. Tokoro,
editor, Proc. of the 2nd Int. Conf. on Multi-Agent Systems (ICMAS’96). AAAI
Press, 1996.
5. W.H. Johnson, L.E. DeLanney, and T.A. Cole. Essentials of Biology. New York,
Holt, Rinehart and Winston, 1969.
6. Nikola K. Kasabov. Foundations of Neural Networks, Fuzzy Systems, and Knowledge Engineering. The MIT Press, 1996.
7. M. Kisiel-Dorohinicki. Agent-oriented model of simulated evolution. In William I.
Grosky and Frantisek Plasil, editors, SofSem 2002: Theory and Practice of Informatics, volume 2540 of LNCS. Springer-Verlag, 2002.

710

A. Byrski and M. Kisiel-Dorohinicki

8. M. Kisiel-Dorohinicki, G. Dobrowolski, and E. Nawarecki. Agent populations as
computational intelligence. In Leszek Rutkowski and Janusz Kacprzyk, editors,
Neural Networks and Soft Computing, Advances in Soft Computing, pages 608–
613. Physica-Verlag, 2003.
9. Timothy Masters. Neural, Novel and Hybrid Algorithms for Time Series Prediction. John Wiley and Sons, 1995.
10. T. M. Mitchell. Machine learning. McGraw-Hill, 1997.
11. S. Wierzcho´
n. Artificial Immune Systems [in polish]. Akademicka oﬁcyna
wydawnicza EXIT, 2001.
12. S. Wierzcho´
n. Function optimization by the immune metaphor. Task Quaterly,
6(3):1–16, 2002.

