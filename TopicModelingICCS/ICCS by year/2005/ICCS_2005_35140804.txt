Modelling and Constraint Hardness Characterisation of
the Unique-Path OSPF Weight Setting Problem
Changyong Zhang and Robert Rodosek
IC-Parc, Imperial College London, London SW7 2AZ, United Kingdom
{cz, r.rodosek}@icparc.imperial.ac.uk

Abstract. Link weight is the primary parameter of OSPF, the most commonly
used IP routing protocol. The problem of setting link weights optimally for
unique-path OSPF routing is addressed. A complete formulation with a polynomial number of constraints is introduced and is mathematically proved to
model the problem correctly. An exact algorithm is thereby proposed to solve
the problem based on the analysis of the hardness of problem constraints.

1 Introduction
Open Shortest Path First (OSPF) [13] is the most widely deployed protocol for IP
networks. As with most other conventional IP routing protocols [6], OSPF is a shortest path routing protocol, where traffic flows between origin and destination nodes are
routed along the shortest paths, based on a shortest path first (SPF) algorithm [5].
Given a network topology, the SPF algorithm uses link weights to compute shortest
paths. The link weights are hence the principal parameters of OSPF.
A simple way of setting link weights is the hop-count method, assigning the weight
of each link to one. The length of a path is thereby equal to the number of hops. Another default way recommended by Cisco is the inv-cap method, setting the weight of
a link inversely proportional to its capacity, without taking traffic into consideration.
More generally, the weight of a link may depend on its transmission capacity and its
projected traffic load. Accordingly, a task is to find an optimal weight set for OSPF
routing, given a network topology, a projected traffic matrix [8], and an objective
function. This is known as the OSPF weight setting problem.
The problem has two instances, depending on whether multiple shortest paths or
only a unique one from an origin to a destination is allowed. For the first instance, a
number of heuristic methods have been developed, based on genetic algorithm [7] and
local search method [9]. For the second instance, Lagrangian relaxation method [12],
local search method [15], and sequential method [2] have been proposed to solve the
problem. With these heuristic methods, the problem is not formulated completely or
explicitly and so generally is not solved optimally.
From a management point of view, unique-path routing requires much simpler
routing mechanisms to deploy and allows for easier monitoring of traffic flows [3].
Therefore, this paper focuses on the unique-path instance. The problem is referred as
the unique-path OSPF weight setting (1-WS) problem. It is a reduction of the NPcomplete integer multicommodity flow problem [16].
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 804 – 811, 2005.
© Springer-Verlag Berlin Heidelberg 2005

Modelling and Constraint Hardness Characterisation

805

With the aim of developing a scalable approach to solve the 1-WS problem optimally, a complete formulation with a polynomial number of constraints is introduced
and is mathematically proved to model the problem correctly in Section 2. The hardness of problem constraints is studied in Section 3. Based on the analysis of constraint
hardness, an exact algorithm is proposed in Section 4. Conclusions and further work
are presented in Section 5.

2 A Complete Formulation
2.1 Problem Definition
The unique-path OSPF weight setting problem is defined as follows. Given
•

A network topology, which is a directed graph structure G=(V, E) where V is a
finite set of nodes and E is a set of directed links. For each (i, j ) ∈ E , i is the

starting node, j is the end node, and cij ≥ 0 is the capacity of the link.
•

•
•
•
•
•
•
•

A traffic matrix, which is a set of demands D. For each demand k ∈ D ,
sk ∈ V is the origin node, tk ∈ V is the destination node, and d k ≥ 0 is the
demand bandwidth. Accordingly, S is the set of all origin nodes.
Lower and upper bounds of link weights, which are positive real numbers
wmin and wmax , respectively.
A pre-specified objective function, e.g., to maximise the residual capacities.
Find an optimal weight wij for each link (i, j ) ∈ E , subject to
Flow conservation constraints. For each demand, at each node, the sum of all
incoming flows (including demand bandwidth at origin) is equal to the sum of
all outgoing flows (including demand bandwidth at destination).
Link capacity constraints. For each link, the traffic load over the link does not
exceed the capacity of the link.
Path uniqueness constraints. Each demand has only one routing path.
Path length constraints. For each demand, the length of each path assigned to
route the demand is less than that of any other possible and unassigned path to
route the demand.
Link weight constraints. For each link (i, j ) ∈ E , the weight wij is within the
weight bounds, i.e., wmin ≤ wij ≤ wmax .

2.2 Mathematical Modelling

According to the requirements of the 1-WS problem, the routing path of a demand is
the shortest one among all possible paths. For each link, the routing path of a demand
either traverses it or not. Based on this observation and the relationship between the
length of a shortest path and the weights of links that it traverses, the problem can be
formulated by defining one routing decision variable for each link and each demand,
which results in the following model.

806

C. Zhang and R. Rodosek

Routing decision variables:
xijk ∈ {0,1}, ∀k ∈ D, ∀(i, j ) ∈ E

(1)

is equal to 1 if and only if the path assigned to route demand k traverses link (i, j).
Link weight variables:
wij ∈ [ wmin , wmax ], ∀(i, j ) ∈ E

(2)

represents routing cost of link (i, j).
Path length variables:
= 0, i = s
lis ⎧⎨
, ∀s ∈ S , ∀i ∈ V
⎩∈ [0,+∞), i ≠ s

(3)

represents the length of the shortest path from origin node s to node i.
Flow conservation constraints:

∑

h:( h ,i )∈E

xhik − ∑ j:(i , j )∈E xijk = bik , ∀k ∈ D, ∀i ∈ V

(4)

where bik = −1 if i = s k , bik = 1 if i = t k , and bik = 0 otherwise.

Link capacity constraints:

∑

k ∈D

d k xijk ≤ cij , ∀(i, j ) ∈ E

(5)

Path length constraints:

∑
=0∧∑

xijk = 0 ∧
xijk

xhjk = 0 ⇒ l sj ≤ lis + wij ⎫
⎪⎪
x k = 1 ⇒ l sj < lis + wij ⎬, ∀k ∈ D, ∀(i, j ) ∈ E
h:( h , j )∈E hj
⎪
xijk = 1 ⇒ l sj = lis + wij ⎪⎭
k

k

k

k

h:( h , j )∈E

k

k

(6’)

The above logic constraints can be linearised by introducing appropriate constants
ε and M with 0 < ε << M .

∑

⎧⎪ l sj ≤ lis + wij − ε (
x k − xijk )
h:( h , j )∈E hj
, ∀k ∈ D, ∀(i, j ) ∈ E
⎨s
s
k
⎪⎩l j ≥ li + wij − M (1 − xij )
k

k

k

k

(6)

Objective function: to maximise the residual capacities, alternatively, to minimise the
throughput:
min

∑

( i , j )∈E

∑

k ∈D

d k xijk

Accordingly, the complete model is presented as follows:
1-WS 0: Optimise (7) Subject to (4), (5), (6), (1), (2), (3)

(7)

Modelling and Constraint Hardness Characterisation

807

2.3 Proof of Correctness

A relaxation of the 1-WS problem is the integer multicommodity flow problem [1], a
recognised correct model of which is presented as follows:
1-WS I: Optimise (7) Subject to (4), (5), (1)
Apparently, the difference between 1-WS 0 and 1-WS I are path length constraints
(6) and the resulting additional link weight variables (2) as well as path length variables (3). In order to ensure that 1-WS 0 formulates the 1-WS problem correctly,
constraints (6) are proved to represent correctly the additional path length as well as
path uniqueness constraints in the following. As the initial logic constraints are identical to the linearised constraints (6), the following proof is based on the initial constraints (6’).
Proposition 1. The path length constraints in 1-WS 0 restrict that each routing path is
a shortest path.

Proof. Assume for demand k, Pj = ( j1 , j2 ) → ( j2 , j3 ) → ... → ( jn −1 , jn ) , j1 = sk , jn = tk
is the assigned routing path and Pi = (i1 , i2 ) → (i2 , i3 ) → ... → (im −1 , im ) , i1 = sk , im = tk is
one of any other possible and non-assigned paths. Then, according to the definition of
routing decision variables, x kj j = 1, l = 1,..., n − 1 and ∃(iq , iq +1 ) ∈ Pi , xik i = 0 ,
l l +1

q q +1

q ∈ {1,2,..., m − 1} .
As a result, according to (6’), on one hand, since xijk = 1 ⇒ l sj k = lis k + wij ,
ltskk = l sjnk = l sjnk + w jn
−1

−1 j n

= l sjnk + w j n
−2

− 2 j n −1

+ w jn

−1 j n

= ... = l sj k + w j

1 j2

1

+ ... + w j n

−1 j n

= lPj

On the other hand, since xijk = 0 ⇒ l sj k ≤ lis k + wij ,
ltskk = lismk ≤ lismk + wim
−1

−1i m

≤ lismk + wim
−2

− 2 i m −1

+ wim

−1i m

≤ ... ≤ lis k + wi i + ... + wim
1

1 2

−1i m

= lPi

Therefore, l Pj ≤ l Pi . It is proved that path Pj is a shortest path. □
Lemma 1. The path uniqueness constraints are satisfied by 1-WS I.
Proposition 2. The path length constraints in 1-WS 0 restrict that the resulting routing path of each demand is a unique shortest path.

Proof. As 1-WS 0 is a reduction of 1-WS I, the solution to routing decision variables
xijk of 1-WS 0 is a solution to 1-WS I.
According to Lemma 1, there is only one path to route each demand. Suppose for
demand k, Pj = ( j1 , j2 ) → ( j2 , j3 ) → ... → ( jn −1 , jn ), j1 = sk , jn = tk is the assigned routing path, and Pi = (i1 , i2 ) → (i2 , i3 ) → ... → (im −1 , im ), i1 = sk , im = tk is one of any other
possible and non-assigned paths to route demand k. Then, according to the definition
of routing decision variables, x kjl jl = 1, l = 1,..., n − 1 .
+1

As a result, according to (6’), since xijk = 1 ⇒ l sj k = lis k + wij ,
ltskk = l sjnk = l sjnk + w jn
−1

−1 j n

= l sjnk + w jn
−2

− 2 j n −1

+ w jn

−1 j n

= ... = l sj k + w j
1

1 j2

+ ... + w jn

−1 j n

= lPj

808

C. Zhang and R. Rodosek

As both Pi and Pj are paths between sk and t k , they finally merge at one node.
Assume it is node r and r = j p = iq , p ∈ {2,3,..., n − 1, n}, q ∈ {2,3,..., m − 1, m} . Then,
according to the definition of routing decision variables, x kj p
hence

∑

h:( h , r )∈E

−1 r

= 1 and xikq

−1 r

= 0 , and

x = 1 . As a result, according to (6’),
k
hr

ltskk = lismk = lismk−1 + wim−1im = ... = lrs k + wriq+1 + ... + wim−1im
< lisqk−1 + wiq−1r + wriq+1 + ... + wim−1im ≤ ... ≤ lis1k + wi1i2 + ... + wim−1im = lPi
Therefore, lPj < lPi . It is proved that path Pj is the unique shortest path to route
□

demand k.

3 Constraint Hardness Characterisation
There are three types of constraints in 1-WS 0, flow conservation constraints, link
capacity constraints, and path length constraints. Among them, flow conservation
constraints are the basic and core constraints of the problem. In order to compare the
hardness of the other two types of constraints, two relaxed problems are studied.
First, path length constraints are relaxed from the 1-WS problem, which results in
the integer multicommodity flow problem 1-WS I, as introduced in Section 2.3.
Second, link capacity constraints are relaxed from the 1-WS problem. This results
in the un-capacitated unique-path OSPF weight setting problem:
1-WS II: Optimise (7) Subject to (4), (6), (1), (2), (3)
Forty-eight data sets with combinations of different parameter scenarios were generated for empirical study. In Table 1, Nds, Lnks, and Dmnds denote the numbers of
nodes, links, and demands, respectively. All the three problems 1-WS 0, 1-WS I, and
1-WS II were implemented in ECLiPSe [11] and solved using CPLEX 6.5 [10] on all
data sets generated. The timeout was set to be 3600 seconds for each data instance.
The following analyses are thereby based on the performance of using CPLEX.
Table 1. Details of data sets tested

ID
1
2
3
4
5
6
7
8
9
10
11
12
13
14

Nds Lnks Dmnds
10
22
3
10
26
5
10
24
9
10
24
10
10
26
20
10
24
50
10
46
3
10
46
5
10
46
9
10
46
10
10
48
20
10
44
50
30
80
3
30
78
15

ID
17
18
19
20
21
22
23
24
25
26
27
28
29
30

Nds Lnks Dmnds
30
78
60
30
78
375
30 136
3
30 144
15
30 142
29
30 144
30
30 142
60
30 142
450
30 236
3
30 234
15
30 236
29
30 234
30
30 236
60
30 234
450

ID
33
34
35
36
37
38
39
40
41
42
43
44
45
46

Nds Lnks Dmnds
50 130
49
50 128
50
50 130
100
50 136
788
50 238
3
50 238
25
50 238
49
50 242
50
50 240
100
50 238 1000
50 644
3
50 648
25
50 642
49
50 642
50

Modelling and Constraint Hardness Characterisation

15
16

30
30

82
76

29
30

31
32

50
50

128
132

3
25

47
48

50
50

646
642

809

100
1000

Consider the OSPF weight setting problem, it is shown that routing performances
resulting from the proposed complete formulation are much better than those from
using the default methods. The resulting average maximum utilisation is 28.79% of
that from using the hop-count method and 40.68% of that from using the inv-cap
method, which demonstrates the significant gains achieved by formulating the problem completely and solving it optimally.
1-WS 0

1-WS I

1-WS II

10000

1000

Solving time (S)

100

10

1
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48

0.1

0.01

Data set ID

Fig. 1. Solving times of 1-WS 0, 1-WS I, and 1-WS II

Figure 1 compares the solving times of 1-WS 0 with those of 1-WS I and 1-WS II.
It can be noted that 1-WS I is solved optimally within 1000 seconds for all instances,
except the last one, which is detected infeasible in 1191 seconds. Meanwhile, it takes
more time to solve 1-WS 0 than to solve 1-WS I on all instances. For most large-scale
instances, it even cannot be solved when timeout. It is thus shown that path length
constraints are very hard constraints for the 1-WS problem. It can be further seen that,
although it takes less time to solve 1-WS II than the initial problem on most data
instances, the difference is not so significant. The relaxed problem still cannot be
solved when timeout on a few data instances. It is therefore indicated that the link
capacity constraints are not the hardest constraints.
In addition, it can be observed that between the two relaxed problems, 1-WS I is
much easier to solve than 1-WS II. Therefore, path length constraints, which are relaxed in 1-WS I, are the hardest constraints for the 1-WS problem.
In order to investigate further the reason behind the above observations, the constraint structure of the 1-WS problem is shown in Figure 2. The first row represents
link capacity constraints (5), the next four rows correspond to flow conservation constraints (4), and the last four rows represent path length constraints (6). As it can be

810

C. Zhang and R. Rodosek

seen, among the three types of constraints, flow conservation constraints and link
capacity constraints contain only routing decision variables, while path length constraints couple routing decision variables with link weight variables and path length
variables, which makes the problem more complicated than the integer multicommodity flow problem. This observation can also be used to explain why path length
constraints are the hardest constraints for the 1-WS problem, instead of link capacity
constraints, which are the hardest for the integer multicommodity flow problem [14].
(1)
( 2)
( 3)
$!!#
!!" %
%

(5){

A1 A2 … AK

b0

⎧
⎪⎪
(4)⎨
⎪
⎪⎩

B1

b1

⎧
⎪
⎪
(6)⎨
⎪
⎪
⎩

C1

B2

b2
'

(

≤ bK

BK
C2
'

D1

E1

bK+1

D2

E2

bK+2

(

'

(

EK

b2K

CK DK

Fig. 2. Constraint structure of 1-WS 0

4 Proposed Algorithm
Based on the above study of constraint hardness, a proposed algorithm to solve the 1WS problem is Benders decomposition method [4], which decomposes the problem
into an integer multicommodity flow master problem and a linear programming (LP)
subproblem. The master problem deals with flow conservation constraints and link
capacity constraints, and so contains routing decision variables only. Accordingly, the
LP subproblem deals with the hardest constraints, path length constraints. Compared
with the initial mixed integer programming (MIP) problem, the resulting master problem has a much smaller model size. Therefore, instead of solving a larger and more
complicated MIP problem in one step, the proposed algorithm solves the problem by
dealing with a smaller and simpler master problem and an LP subproblem iteratively.
For the integer master problem, Lagrangian relaxation method has been demonstrated
to be an appealing algorithm [14].
It was shown be preliminary results that, for small data instances, MIP solver
solves the problem slightly faster than Benders decomposition method. However,
when data instances get larger, the latter takes the advantage.

Modelling and Constraint Hardness Characterisation

811

5 Conclusion
In order to develop a complete solution approach to the unique-path OSPF weight
setting problem, the problem has been explicitly formulated as a complete model, the
correctness of which is mathematically proved. The model has three types of constraints, flow conservation constraints, link capacity constraints, and path length constraints. Among them, path length constraints have been identified to be the hardest
constraints for the problem. Based on the study of constraint structure of the formulation, Benders decomposition method, embedded with Lagrangian relaxation method
for the integer master problem, has been proposed to solve the problem.
Our future work includes developing the proposed algorithm completely and investigating possible improvements to both model formulation and solution algorithm to
accelerate the convergence rate of the solution approach.

References
1. Ahuja, R. K., Magnanti, T. L., and Orlin, J. B.: Network Flows: Theory, Algorithms, and
Applications. Prentice-Hall (1993)
2. Ameur, W. B., Bourquia, N., Gourdin, E., and Tolla, P.: Optimal Routing for Efficient
Internet Networks. In Proc. of ECUMN (2002) 10-17
3. Ameur, W. B., and Gourdin, E.: Internet Routing and Related Topology Issues. SIAM J.
on Discrete Mathematics, 17(1) (2003) 18-49
4. Benders, J.: Partitioning Procedures for Solving Mixed-Variables Programming Problems.
Numerische Mathematik, 4 (1962) 238-252
5. Bertsekas, D., and Gallager, R.: Data Networks. Second Edition, Prentice Hall (1992)
6. Black, U.: IP Routing Protocols: RIP, OSPF, BGP, PNNI and Cisco Routing Protocols.
Prentice Hall, (2000)
7. Ericsson, M., Resende, M. G. C., and Pardalos, P. M.: A Genetic Algorithm for the
Weight Setting Problem in OSPF Routing. J. of Combinatorial Optimization, 6 (2002)
299-333
8. Feldmann, A., Greenberg, A., Lund, C., Reingold, N., Rexford, J., and True, F.: Deriving
Traffic Demands for Operational IP Networks: Methodology and Experience. IEEE/ACM
Transactions on Networking, 9(3) (2001) 265-279
9. Fortz, B., and Thorup, M.: Internet Traffic Engineering by Optimizing OSPF Weights. In
Proc. of INFOCOM (2000) 519-528
10. ILOG Inc.: ILOG CPLEX 6.5 User’s Manual. (1999)
11. Imperial College London: ECLiPSe 5.7 User’s Manual. (2003)
12. Lin, F. Y. S., and Wang, J. L.: Minimax Open Shortest Path First Routing Algorithms in
Networks Supporting the SMDS Services. In Proc. of ICC, 2 (1993) 666-670
13. Moy, J.: OSPF Anatomy of an Internet Routing Protocol. Addison-Wesley (1998)
14. Ouaja, W., and Richards, B.: A Hybrid Multicommodity Routing Algorithm for Traffic
Engineering. Networks, 43(3) (2004) 125-140
15. Ramakrishnan, K. G., and Rodrigues, M. A.: Optimal Routing in Shortest-Path Data Network. Bell Labs Technical Journal, January-June (2001) 117-138
16. Wang, Y., and Wang, Z.: Explicit Routing Algorithms for Internet Traffic Engineering. In
Proc. of ICCCN (1999) 582-588

