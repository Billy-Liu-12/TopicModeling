The Deflation Accelerated Schwarz Method
for CFD
J. Verkaik1 , C. Vuik2, , B.D. Paarhuis1, and A. Twerda1
1

2

TNO Science and Industry, Stieltjesweg 1, P.O. Box 155, 2600 AD Delft,
The Netherlands
Delft University of Technology, Faculty of Electrical Engineering, Mathematics and
Computer Science, Mekelweg 4, 2628 CK Delft, The Netherlands
Phone: +31 15 27 85530, Fax: +31 15 27 87209
c.vuik@ewi.tudelft.nl.

Abstract. Accurate simulation of glass melting furnaces requires the
solution of very large linear algebraic systems of equations. To solve
these equations eﬃciently a Schwarz domain decomposition (multi-block)
method can be used. However, it can be observed that the convergence of
the Schwarz method deteriorates when a large number of subdomains is
used. This is due to small eigenvalues arising from the domain decomposition which slow down the convergence. Recently, a deﬂation approach
was proposed to solve this problem using constant approximate eigenvectors. This paper generalizes this view to piecewise linear vectors and
results for two CFD problems are presented. It can be observed that the
number of iterations and wall clock time decrease considerably. The reason for this is that the norm of the initial residual is much smaller and
the rate of convergence is higher.
Keywords: eﬃciency; computational ﬂuid dynamics; domain decomposition; deﬂation; Krylov subspace acceleration.

1

Introduction

Simulation by Computational Fluid Dynamics (CFD) is important for the design, optimization and trouble shooting of glass melting furnaces. It gives engineers in the glass industry great insight into the occurring transport phenomena.
At TNO Science and Industry, a CFD simulation package called GTM-X is being developed for simulating gas- and oil-ﬁred glass-furnaces. This is a complete
model for simulating glass furnaces, describing the glass melt and combustion
space simultaneously, and predicting the eﬀects on melting performance and
glass quality.
A domain decomposition (DD) approach is applied within GTM-X, for which
the spatial domain is decomposed into subdomains (blocks). A DD (or multiblock) approach has several important advantages for simulating glass-melting
Corresponding author.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 868–875, 2005.
c Springer-Verlag Berlin Heidelberg 2005

The Deﬂation Accelerated Schwarz Method for CFD

869

furnaces. Since a glass-furnace geometry is often complex, this enables us to
easily describe the geometry using blocks (subdomains). Furthermore, parallel computing can be done and variables for each block can be simultaneously
computed on diﬀerent processors. This is an advantage, because simulation of
glass-melting furnaces often results in very large computation times.
A disadvantage of multi-block solvers is that the convergence behavior deteriorates signiﬁcantly when a large number of blocks is used. This is especially the
case for solving elliptic equations. In [11], a reason for this problem is given which
relates the loss of convergence to the presence of small eigenvalues arising from
the domain decomposition. These eigenvalues can be ‘eliminated’ by applying a
deﬂation operator using constant vectors for approximating the corresponding
eigenvectors. The authors of [11] present convergence rates for solving Poisson’s
equation which are independent on the number of blocks.
In this paper we extend and apply this idea to solve general linear systems
of equations. The deﬂation method is implemented in GTM-X and both GCR
and CG Krylov subspace acceleration is used to solve the resulting linear system
of equations. Both constant (CD) and combined constant and linear deﬂation
(CLD) vectors are considered. The research in this paper focusses on solving
the singular pressure-correction system in the SIMPLE method, which is used
in GTM-X to solve the Navier-Stokes equations. However, the solver can be
used for general linear systems and is therefore applicable to a wide range of
problems.

2

Description of the Mathematical Model

Besides the incompressible Navier-Stokes equations and the energy equation,
GTM-X has dedicated models for turbulence, combustion, glass melting and
chemical vaporization. The user can apply diﬀerent models in diﬀerent domains.
The equations arising from the physical models are discretised with the ﬁnite volume method. Several schemes can be used for discretization: upwind,
central, TVD higher-order schemes, and blending of schemes can be done using deferred correction. The grid is boundary ﬁtting and colocated, meaning
that all variables are located in the volume cell centers. The discretised nonlinear Navier-Stokes equations are solved by the SIMPLE method ([6, 1, 12]),
using pressure-weighted (Rhie & Chow) interpolation to exclude checkerboard
pressure modes. The SIMPLE method is an iterative method in which the system in each iteration (outer iteration) is splitted up into linear systems for the
pseudo-velocities and pressure-correction. So-called SIMPLE Stabilization Iterations (SSI) are applied, which can be seen as additional outer iterations for
solving the pressure system without solving the velocities. Linear systems of
equations are solved with a domain multi-block approach (inner iteration). In
GTM-X, an additive Schwarz DD method with minimal overlap is applied, in
combination with inaccurate subdomain solutions. Stone’s SIP-solver [7], which
is based on an incomplete LU decomposition, is used for obtaining the subdomain

870

J. Verkaik et al.

solutions. Local grid reﬁnement at block level can be done, as well as parallel
computing using MPI libraries. Furthermore, solutions on coarse grids can be
used as starting solutions for ﬁner grids by using interpolation. The reader is
referred to [10] for more details on the code.

3

Deflation and Domain Decomposition

Consider a decomposition of the entire computational domain consisting of n grid
points into L nonoverlapping subdomains. Discretization of the partial diﬀerential equations to be solved and grouping together the unknowns per subdomain,
results in the block system
⎤⎡ ⎤ ⎡ ⎤
⎡
y1
A11 · · · A1L
b1
⎢ .. . .
.. ⎥ ⎢ .. ⎥ = ⎢ .. ⎥ ,
⎣ .
. . ⎦⎣ . ⎦ ⎣ . ⎦
AL1 . . . ALL

yL

bL

which we will denote simply as Ay = b. The diagonal blocks of A are the coeﬃcients for the interior of the subdomains, the oﬀ-diagonal blocks represent
coupling across subdomain boundaries. This system is solved with the deﬂation
method combined with a Krylov subspace method.
Let the matrix Z be n × m, where m ≤ n. Furthermore, let Z be of rank m,
i.e. Z has linear independent columns. The columns of Z, the so-called deﬂation vectors, span the deﬂation subspace, i.e., the space that approximates the
eigenspace belonging to the smallest eigenvalues and which is to be projected
out of the residual. To do this we deﬁne the projectors
P = I − AZE −1 Z T ,

Q = I − ZE −1 Z T A ,

where the m × m matrix E is deﬁned as E = Z T AZ, and I is the identity
matrix of appropriate size. To solve Ay = b with the deﬂation technique, we
write y = (I − Q)y + Qy, and since
(I − Q)y = Z(Z T AZ)−1 Z T Ay = ZE −1 Z T b ,

(1)

can be computed immediately, we only need to compute Qy. In light of the
identity AQ = P A we can solve the system
P Ay˜ = P b

(2)

˜ premultiply this by Q and add it to (1).
for y,
Since P AZ = 0, this system is obviously singular, and therefore no unique
solution exists. However, it can be shown that Qy is unique [9]. In [2] and [8–p.
147], it is noted that a positive semideﬁnite system can be solved as long as it
is consistent, i.e., as long as its right-hand side does not have components in the
null space (column space of Z) of P A. This assumption holds for (2), because

The Deﬂation Accelerated Schwarz Method for CFD

Subdomain 1

871

Subdomain 2

Fig. 1. Linear deﬂation vectors for the 1-D example of two subdomains with 4 grid
cells per subdomain

the same projection is applied to both sides of Ay = b. In [8–p. 147], it is shown
that a Krylov subspace method could be used to solve (2), because the null-space
never enters the iteration, and therefore the corresponding zero-eigenvalues do
not inﬂuence the convergence. The reader is referred to [4] for more details on
the spectrum of P A.
When system (2) is solved, this involves the computation of E −1 , for example
statements like f = E −1 g have to be evaluated. In [4–Section 3], it is shown that
deﬂation works correctly as long as E −1 is computed with a high accuracy. Since
we never determine E −1 explicitly, this means that Ef = g is solved by a direct
method, for example by an LU factorization.
Deﬂation can also be combined with preconditioning. Suppose K is a suitable
preconditioner of A, then solving Ay = b can be replaced by: solve y˜ from
˜ or solve y˜
the left-preconditioned system K −1 P Ay˜ = K −1 P b, and form Qy,
˜ Both
from the right-preconditioned system P AK −1 y˜ = P b, and form QK −1 y.
systems can be solved by a one’s favorite Krylov subspace solver, for example
by the GCR method. In our implementation we take K the block Gauss-Jacobi
preconditioner (block diagonal of A), corresponding to the additive Schwarz
iteration. This preconditioner lends itself well for parallel computing. We will
refer to the deﬂation method combined with Krylov subspace acceleration in a
domain decomposition context as the deﬂated Krylov-Schwarz method.

4

Approximating Eigenvectors by Constant and Linear
Functions

Many authors [3, 5, 11] consider constant deﬂation vectors for approximating
the eigenvectors corresponding to the small eigenvalues which slow down the
convergence. For each subdomain, exactly one deﬂation vector is deﬁned having
elements that are constant in the grid points on the corresponding subdomain,
and zero elements in the grid points on the other subdomains. We will refer to
this as CD deﬂation. Generalization to the 2-D and 3-D case is straightforward:
for a subdomain, we simply take the elements of the deﬂation vector to be
constant in the grid nodes.

872

J. Verkaik et al.

This idea is generalized to approximating the eigenvectors using piecewise
linear vectors in the grid directions 1 . By this we augment the space of constant
vectors with linear vectors. Figure 1 shows the linear deﬂation vectors. A linear
deﬂation vector is deﬁned as a polynomial of degree one on each subdomain and
zero on the other subdomains. If the deﬂation vectors consist of both the constant
and the linear vectors, we will denote it by Constant Linear Deﬂation (CLD).
For the case of Figure 1, we have two deﬂation vectors per subdomain: one
constant and one linear. Generalization to 2-D and 3-D is not so straightforward
anymore, compared to CD deﬂation. However, it appears that for the 2-D case
three vectors are connected to each subdomain: one constant, and one linear
vector in each of the two grid directions. For the 3-D case, it appears that we
need four deﬂation vectors: one constant and one linear vector in each of the
three grid directions.
When the coeﬃcient matrix A is singular then the deﬂation vectors has
to be chosen such that Z T AZ is non-singular, since break-down can occur
with a direct solution method. Two options seem satisfactory to overcome this
problem. The ﬁrst one is to remove a constant deﬂation vector for one subdomain; the second is to adjust one entry in a constant deﬂation vector for one
subdomain.

5

Numerical Experiments

The deﬂated GCR method is compared to the SIP method for solving the
singular pressure-correction system arising in the SIMPLE method applied to
the stationary incompressible Navier-Stokes equations. Two test cases are
considered: a buoyancy-driven cavity ﬂow for a high Rayleigh number, and
a glass tank. In both test cases the stationary energy equation is solved
besides the Navier-Stokes equations. Furthermore, the ﬂow is assumed to be
laminar and buoyant. One constant deﬂation vector is removed in order to
overcome the singularity. Furthermore, one SIP iteration is used for obtaining the subdomain solution and the GCR algorithm is truncated for one search
direction. In this paper we will restrict ourselves to the results for the inner
iterations.
The ﬁrst test case is a 2-D buoyancy-driven cavity ﬂow in a unit square
consisting of a 60 × 60 uniform grid and a decomposition of 4 × 4 subdomains,
see Figure 2. The Rayleigh number is chosen to be large, i.e. Ra = 1.0 · 106 ,
meaning that the ﬂow is highly buoyant but still laminar. Figure 3 shows the
residuals for solving the pressure-correction system. Clearly, the CLD deﬂation
performs best, followed by CD deﬂation and the GCR without deﬂation. The
SIP method performs very disappointing for this case. Note that a large jump
in the initial residual can be observed for CLD deﬂation.
1

In this paper we let deﬂation vectors in the coordinate directions out of consideration. However, numerical experiments show that choosing linear vectors in grid- or
coordinate directions can result in diﬀerent convergence behavior.

The Deﬂation Accelerated Schwarz Method for CFD

873

Fig. 2. Velocity ﬁeld for the buoyancy-driven cavity ﬂow

In the second test case, a glass tank is considered having dimensions 7 [m]
× 3 [m] ×1 [m], see Figure 4. Glass fractions are injected (left of ﬁgure) from
above and melted glass with desired properties leaves the tank at the outlet
(right of ﬁgure). For this case the grid is uniform consisting of 10,500 grid cells,
and the domain is decomposed into 18 subdomains. Figure 5 shows the results
for the inner iteration residuals. Clearly, CLD deﬂation performs best concerning
convergence behavior.
1

10

0

10

−1

10

−2

residual ||b−Ay ||2/|b||2

10

−3

(k)

10

−4

10

−5

10

−6

10

−7

10

SIP(1)
GCR
CDGCR
CLDGCR

−8

10

−9

10

0

5

10

15
iteration number

20

25

30

Fig. 3. The inner iteration residuals for the SIP and deﬂated GCR method considering
the buoyancy-driven test case (GCR: GCR without deﬂation; CDGCR: GCR with CD
deﬂation; CLDGCR: GCR with CLD deﬂation)

874

J. Verkaik et al.

Fig. 4. Velocity ﬁeld for the glass tank test case

1

10

0

10

−1

10

−2

(k)

residual ||b−Ay ||2/|b||2

10

−3

10

−4

10

−5

10

−6

10

SIP(1)
GCR
CDGCR
CLDGCR

−7

10

−8

10

0

5

10

15
iteration number

20

25

30

Fig. 5. The residuals of the inner iterations for the SIP and deﬂated GCR method
considering the glas tank test case (GCR: GCR without deﬂation; CDGCR: GCR with
CD deﬂation; CLDGCR: GCR with CLD deﬂation)

6

Conclusions

From the experiments presented in this paper, we conclude that the deﬂation
accelerated Schwarz method is a very eﬃcient technique to solve linear systems
of equations arising from domain decomposition. It seems that the combination
of constant and linear deﬂation vectors is most eﬃcient. A large jump in the
norm of the initial residual can be observed as well as a higher convergence rate.
Moreover, it should be noted that the deﬂation method can be implemented in
existing software with relatively low eﬀort.

The Deﬂation Accelerated Schwarz Method for CFD

875

References
1. J.H. Ferziger and M. Peri´c. Computational Methods for Fluid Dynamics. Springer,
Heidelberg, second edition, 1999.
2. E.F. Kaasschieter. Preconditioned conjugate gradients for solving singular systems.
J. Comp. Applied Math., 41:265–275, 1988.
3. L. Mansﬁeld. On the conjugate gradient solution of the Schur complement system
obtained from domain decomposition. SIAM J. Numer. Anal., 7(6):1612–1620,
1990.
4. R. Nabben and C. Vuik. A comparison of deﬂation and coarse grid correction
applied to porous media ﬂow. Report 03-10, Delft University of Technology, Department of Applied Mathematical Analysis, Delft, 2003.
5. R.A. Nicolaides. Deﬂation of conjugate gradients with applications to boundary
value problems. SIAM J. Numer. Anal., 24(2):355–365, 1987.
6. S.V. Patankar. Numerical Heat Transfer and Fluid Flow. McGraw-Hill, New York,
1980.
7. H.L. Stone. Iterative solution of implicit approximations of multi-dimensional
partial diﬀerential equations. SIAM J. Numer. Anal., 5:530–558, 1968.
8. H.A. van der Vorst. Iterative Krylov Methods for Large Linear systems. Cambridge
University Press, Cambridge, 2003.
9. F. Vermolen, C. Vuik, and A. Segal. Deﬂation in preconditioned conjugate gradient
methods for ﬁnite element problems. In M. K˘ri˘zek, P. Neittaanm¨
aki, R. Glowinski,
and S. Korotov, editors, Conjugate Gradient and Finite Element Methods, pages
103–129. Springer, Berlin, 2004.
10. R.L. Verweij. Parallel Computing for furnace simulations using domain decomposition. PhD thesis, Delft University of Technology, Delft.
11. C. Vuik and J. Frank. Coarse grid acceleration of a parallel block preconditioner.
Future Generation Computer Systems, 17:933–940, 2001.
12. P. Wesseling. Principles of Computational Fluid Dynamics. Springer, Heidelberg,
2001.

