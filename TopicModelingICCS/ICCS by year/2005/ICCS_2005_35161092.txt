Heuristic Algorithm for Anycast Flow Assignment in
Connection-Oriented Networks
Krzysztof Walkowiak
Chair of Systems and Computer Networks, Faculty of Electronics, Wroclaw University of
Technology, Wybrzeze Wyspianskiego 27, 50-370 Wroclaw, Poland
Krzysztof.Walkowiak@pwr.wroc.pl

Abstract. Replication of content on geographically distributed servers can improve both performance and reliability of the Web service. Anycast is a one-toone-of-many delivery technique that allows a client to choose a content server
of a set of replicated servers. Presenting numerous mirror content servers to a
client implies the difficult problem of finding the best server in terms of network performance. We formulate an optimization problem of anycast flows
assignment in a connection-oriented network. This is a 0/1, NP-complete problem, which is computationally very difficult due to the size of solution space
and constraints. Therefore, we propose computationally effective heuristic algorithm. To our knowledge, this is the first proposal to solve the problem of anycast flow assignment in connection-oriented network. Results of simulations are
shown to evaluate performance of proposed algorithm for various scenarios.

1 Introduction
Web servers providing popular content (MP3 files, movies, electronic books, software
distribution) need to scale to a large number of clients. One solution to address this
problem is to augment network link capacity or processing resources of the site’s
server. Another, usually much more cost-effective, solution is to replicate the server
or content in many locations in the Internet. This relatively simple technique provides
numerous advantages, e.g. inexpensive improvement of client perceived accessibility
of content, lower latency, increase of network reliability. Traffic associated with requests to replicas can be modeled as anycast flow. Anycast is a one-to-one-of-many
technique to deliver a packet to one of many hosts. One of the most famous techniques that apply anycast traffic is Content Delivery Network (CDN) [1], [3].
Anycast paradigm is expected to be a very attractive approach to give a solution to
many important issues that arise in modern computer networks. One of key elements
of anycast transmission is the flow assignment problem, i.e. anycast demands should
be assigned to network routes in order to optimize a selected network performance
function. In this paper we address this problem and propose an efficient heuristic
algorithm for static anycast flow assignment. The main novelty of our work is that we
focus on connection-oriented (c-o) networks. In c-o network prior to transmitting the
data, a virtual connection is established and the data is carried along this connection.
Popular c-o techniques are Asynchronous Transfer Mode (ATM), MultiProtocol Label Switching (MPLS). To our knowledge, this is the first algorithm that solves the
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 1092 – 1095, 2005.
© Springer-Verlag Berlin Heidelberg 2005

Heuristic Algorithm for Anycast Flow Assignment in Connection-Oriented Networks

1093

anycast flow assignment problem in c-o network. We consider an existing facility
network - we don’t optimize location of replica server and network topology.
The anycast non-bifurcated flow assignment (ANBFA) is as follows
Given
Minimize
(Maximize)
Over
Subject to

network topology, traffic demand pattern, location of replica servers,
link capacity
Objective function defined according to information on link flow and
capacity, e.g. network delay, network cost, network survivability
selection of replica server, routing (path assignment)
connection-oriented flow constraints, capacity constraints

The mathematical formulation of the optimization problem can be found in [8],
where the ANBFA problem is referred to as CATR (clients’ assignment to replicas).
Due to limited size of the paper we cannot present detailed information on anycast
flow and optimization. Therefore, for more information refer to [1-9].

2 Anycast Non-bifurcated Flow Deviation Algorithm
In this section we show Anycast Non-bifurcated Flow Deviation (ANBFD) algorithm
for the problem formulated above. ANBFD algorithm is based on the Flow Deviation
approach proposed in [2] and widely used for network design problems [4], [7].
In c-o networks an anycast demand consists of two connections: one from the client to the server (upstream) and the second one in the opposite direction (downstream). Upstream connection is used to send user’s requests. Downstream connection
carries requested data. Let δ(i) denote index of the connection associated with connection i. If i is a downstream connection δ(i) must be an upstream connection and vice
versa. The global anycast non-bifurcated multicommodity flow denoted by f r is
defined as a vector of flows in all arcs. We call a flow f r feasible if for each arc a the
flow of a doesn’t exceed capacity of a.
Algorithm ANBFD
Let f 1 denote a feasible anycast flow containing routes for all connections to be
established. Let L( g ) denote value of the objective function for a feasible flow g

and l j (g ) denote a metric of arc j. The common approach is to calculate this metric
as partial derivative of the objective function over arc flow [2]. We start with r:=1.
Let B denote a set including connections that have not been already processed. Operator first(B) returns the index of first connection in set B.

( ) defined as the set of shortest paths for each connection under

Step 1. Find SR f

r

metric l ( f ) . Connections i and δ(i) associated with one anycast demand are processed jointly. For each node v hosting a replica shortest paths in both directions between v and the second end node are calculated. Finally, we select such a pair of paths
for which length of the downstream path is the shortest and add these paths to set

( ) . Set B:=P, i:=first(B) and go to step 2.

SR f

r

1094

K. Walkowiak

Step 2. Let g := f r .
a) Find v from g by deviating flow of connections i and δ(i) to the shortest paths

( ) . Paths for other connections except i and δ(i) remain unchanged.

included in SR f

r

b) If v is a feasible flow and L(v) < L( g ) set g = v .
c) If B = ∅ go to step 3. Otherwise, set B:=B-{i, δ(i)} and go to step 2a.
Step 3. If g = f

r

stop the algorithm, since the solution cannot be improved. Other-

wise, set r:=r+1, f r := g and go to step 1.
In order to find feasible starting solution we can apply an algorithm based on the
initial phase of the FD algorithm [2], [7]. One of the main advantages of ANBFD is
that it takes into account all possible routes in the network and the calculation time of
ANBFD doesn’t depend on the number of candidate routes. Therefore, there is no
need to reduce size of the problem given by the number of routes. Algorithm ANBFD
converges in finite number of steps. However, the number of steps and consequently
algorithm complexity depends on particular parameters of the considered problem
(network topology, location of replicas, demand matrix).

3 Results
The test network consists of 36 nodes and 144 directed links [9]. We run experiments
for various scenarios of replica location and number of replicas. Since more data is
received by clients, than is sent to replicas. Therefore, we assume that upstream
bandwidth is 0.1 of the downstream bandwidth. The total demand is calculated as a
sum of all downstream and all upstream bandwidth requirements.
In many real life cases, a client is assigned to the closest replica in terms of the hop
number. Therefore, for comparison we develop a simple heuristic, which is referred to
as CR (Closest Replica). Algorithm CR assigns each anycast demand to the closest (in
terms of hop number) replica. This way we obtain a unicast non-bifurcated flow assignment problem, which is solved by a non-bifurcated f FD algorithm.
We assume that the objective function represents the total flow in the network. In
Table 1 we report results obtained for algorithms ANBFD and CR for the different
number and locations of replica servers. Empty cells indicate that for a particular case
the algorithm cannot find a feasible solution. First, quite intuitive, observation is that
increasing the number of replicas decreases the network flow. Moreover, if there are
more replicas in the network, demands with higher bandwidth requirements can be
satisfied. If we compare ANBFD against CR, we can see that for relatively low loads
both algorithms perform similarly. This can be explained by the fact that for low congestion each demand is assigned to nearest replica for both algorithms. The major
advantage of ANBFD is for the case with 4 replicas – for two highest loads CR cannot find a feasible solution, while ANBFD can. This follows from the construct of
ANBFD, which can reroute anycast demand to another replica, what enables selection
of less congested links. Similar results were obtained for other tests.

Heuristic Algorithm for Anycast Flow Assignment in Connection-Oriented Networks

1095

Table 1. Performance of algorithms ANBFD and CR for various replica location and demands
Total
Demand
1080
3105
5040
7020
9000
10980
11880

1 replica in (30)
ANBFD
3088
9281

CR
3088
9425

2 replicas (9,23)
ANBFD
2125
5945
10502

CR
2125
5945
10430

3 replicas in (9,23,30)
ANBFD
1722
4834
7886
11450

CR
1700
4805
7890
11515

4 replicas in
(5,9,23,30)
ANBFD
CR
1362
1370
3859
3885
6331
6400
8818
8915
12225
11925
14861
16146

4 Final Remarks
The heuristic algorithm ANBFD proposed in this work is, according to our best
knowledge, the first attempt to optimize anycast flows in connection-oriented networks. Numerical experiments have been conducted to evaluate performance of the
algorithm for various scenarios. Results have confirmed that introducing new content
servers enables substantial reduction of network flow what, consequently, decreases
network delay and improves network reliability. The experiment shows that ANBFD
is more efficient than the CR in solving relatively higher congested problems.
Acknowledgements. This work was supported by a research project of the Polish
State Committee for Scientific Research carried out in years 2005-2007.

References
1. Awerbuch, B., Brinkmann, A., Scheideler C.: Anycasting in adversarial systems: routing
and admission control. Lecture Notes in Computer Science, LNCS 2719 (2003), 1153-1168
2. Fratta, L., Gerla, M., Kleinrock, L.: The Flow Deviation Method: An Approach to Storeand-Forward Communication Network Design. Networks Vol. 3 (1973) 97–133
3. Hao, F., Zegura, E., Ammar, M.: QoS routing for anycast communications: motivation and
an architecture for DiffServ networks. IEEE Communication Magazine, 6 (2002), 48-56
4. Kasprzak, A.: Designing of Wide Area Networks. Wroclaw Univ. of Tech. Press, (2001)
5. Partridge, C.,Mendez, T., Milliken, W.: Host Anycasting Service. IETF RFC 1546 (1993)
6. Peng, G.: CDN: Content Distribution Network. Technical Report (2003)
7. Pióro, M., Medhi, D.: Routing, Flow, and Capacity Design in Communication and Computer Networks. Morgan Kaufman Publishers (2004)
8. Walkowiak, K.: An exact algorithm for design of content delivery networks in MPLS environment. Journal of Telecommunications and Information Technology 2 (2004), 13-22
9. Walkowiak, K.: QoS Dynamic Routing in Content Delivery Networks, to appear in Proceedings of Networking 2005

