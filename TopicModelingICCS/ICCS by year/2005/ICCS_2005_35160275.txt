Cost Model and Adaptive Scheme for Publish/Subscribe
Systems on Mobile Grid Environments
Sangyoon Oh1,2, Sangmi Lee Pallickara2, Sunghoon Ko1,
Jai-Hoon Kim1,3, and Geoffrey Fox1,2
1

Community Grids Computing Laboratory, Indiana University, Bloomington, IN. USA
{ohsangy, leesangm, suko, jaikim, gcf}@indiana.edu
2
Department of Computer Science, Indiana University, Bloomington, IN. USA
3 Graduate School of Information and Communications, Ajou University, Suwon, S. Korea
jaikim@ajou.ac.kr

Abstract. Publish/subscribe model is appropriate in many push based data dissemination applications. This paper presents cost model for publish/subscribe
systems, analyze its performance, and compare to other interaction-based models such as the client-server model and the polling model. Based on the cost
analysis, we have proposed an adaptive model which can dynamically select an
appropriate model for each client independently.

1 Introduction

Ce
llu

lar

Publish/subscribe system [1] have been widely used in many applications [2], [3].
Publish/subscribe system consists of publishers (ES: Event Source), servers (EBS:
Event Brokering System), and subscribers (ED: Event Displayer). After a publisher
publishes data (events) asynchronously to a server, the server disseminates the data
(events) to subscribers which registered their interest on the server. Thus
publish/subscribe model is appropriate in many applications such as data
dissemination services, information sharing, service discovery, etc. Fig. 1 depicts
system configurations.
In this paper, we present cost model for publish/subscribe systems, analyze its performance, and compare to other interaction
based models such as a client-server model and
a polling models. We can estimate performance
Internet
ES
Cloud
and adopt publish/subscribe systems effectively
by using our proposed cost model and analysis
ES/
ES
EBS
ED
of publish/subscribe systems. Based on the cost
Radio
d
tower
ire
Wire
W
analysis, we propose adaptive model which can
d
HHMS
Proxy
dynamically select an appropriate model for
ES/
each client independently. We believe the adapED
ED
tive scheme we introduce here is very useful for
ES
ES (Event Source): Publisher
the mobile and ubiquitous services where charED (Event Displayer): Subscriber
EBS
(Event
Brokering
System):
Server
acteristics of device and networks are diverse
and dynamically changing. We also experimentally measured and compared performance of Fig. 1. Pub/Sub System Configurapublish/subscribe model to client/server model tions
ss
le
ire AN
W L

V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 275 – 278, 2005.
© Springer-Verlag Berlin Heidelberg 2005

276

S. Oh et al.

on our test bed including mobile device and NaradaBrokering [4] (our publish/subscribe based message brokering system) to verify correctness of our model on the
real systems. Our cost analysis model is simple but accordant with experimental results.

2 Cost Model
System Models
To evaluate the cost model for different systems, we assume following system
parameters to analyze cost: α, publish rate of event; β, subscriber’s access rate of
published events or request rate of client in the client/server models; cps(α),
publish/subscribe cost per event, cpub + csub; crr(β), cost per request and reply;
cpoll(α,T), cost of periodic publish or polling; cdelay(α,T), cost of delaying publish; s(n),
effect of sharing among n subscribers; tps, time delay for publish/subscribe, tpub + tsub;
trr, time delay for request and reply; tpoll(α, T), time delay for periodic publish.
Cost Analysis
In this analysis, we analyze cost of three different models without any failure of
communication link or node. We consider (1) conceptual total cost (e.g., the number
of message, amount of message, or time delay) per unit time for each model, (2) cost
for each access by client (or subscriber), (3) time delay for access after subscriber’s
(or client’s) intention, and (4) time delay between event occurrence and notification to
subscriber (or recognition by client). Cost can be the number of message, amount of
message, or time delay. Table 2 shows the summary of the cost for each model
analyzed in this paper. Please refer to [5] for detailed analysis.
Table 1. The cost of the selected model

Publish/Subscribe

Request/Reply

Polling

conceptual total cost
per time unit

Model

α (cpub + n s(n)csub)

β n crr.

(cpoll(α,T) + cdelay(α,T)) / T

cost for each access

α
β

crr

cpoll(α,T) + cdelay(α,T)

0

trr

T/2

tps = tpub + tsub
(tps = tpub + tsub+ 1 )

1
2β

T/2

time delay between inte
ntion and access
time delay between eve
nt occurrence and notifi
cation/recognition (acce
ss)

( c pub + csub)
n

β

Adaptive Scheme
Adaptive scheme can choose an appropriate model among publish/subscribe and
request/reply models. Each client node can select its own model independently
(hybrid model) and change its model during its service (dynamic model).
In this paper, we consider cost per each client’s access as a cost metric. During a
period of time, the average number of events occurred per client’s access is measured
for each client. At the end of the period, the average cost for each client’s access is

Cost Model and Adaptive Scheme for Publish/Subscribe Systems

277

c
computed using the analysis in section 2, which is α ( pub + c ) , where α is average
sub
β n
β
number of event occurred per client’s access and n is the number of subscriber. In our
adaptive scheme, average number of event and the number of subscriber are obtained
experimentally during the execution of application. At the end of the period, the
model that is expected to require less cost than the other model during the following
period is selected independently for each client. Fig.2 shows that publish/subscribe
model is appropriate when the number of client is large and/or the number of event
per client’s access is small.

5-6
4-5
3-4
2-3
1-2
0-1

6
5
4
Cost per
client's 3
access
2
S5

1
0

1

S3

3

5

No. of client

7

9

S1

No. of event
per client's
access

(cpub=1 and csub=1)

Fig. 2. Cost per client’s access of publish /
subscribe model

18
16
14
12
ts10
o
C8
6
4
2
0

Cost Comparisons
req/ reply
peoriodic 2

pub/sub
periodic1

1

3

5 7 9 11 13 15
n (number of nodes)

(α = 0.5, s(n)=1, cps = 2, and crr = 2;
cpub(α,T)= cpub, csub(α,T)= csub, and cdelay(α,T)= 0 for periodic1; cpub(α,T)= αTcpub,
csub(α,T)= αTcsub, cdelay(α,T)= 2αTcdealy for
periodic2)
Fig. 3. Communication cost by varying
number of clients

3 Performance Comparisons
Parametric Analysis
In this section, we describe performance comparisons by
parametric analysis. We set system parameters as shown in
Table 2. Fig.3 shows performance comparisons between publish/subscribe, request/reply, and polling systems. Since publish/subscriber system disseminates data via server instead of
individually for each client, it requires less cost than request/reply system. As the number of client node increases,
the cost gap between two systems increases. Periodic polling
system saves cost by transferring data once per period when
delay cost is negligible. However, cost increases as delay
cost increases. Polling system is viable approach when data
delay is allowed and cost is negligible.

Table 2. Parameters
Param.

Values

α, β

0.5

cps, crr

2

cpub, csub

1

cpoll(α, T)

1 or αT

cdelay(α, T)

0, T, or αT

s(n)

1/n - 1

tps, trr

1

tproc

1 or 5

tpoll(α, T)

1, T, or αT

278

S. Oh et al.

Data Transition Time (sec)

Experimental Results
2.6
The performance framework consists of
2.4
NaradaBrokering System and Handheld
2.2
Message Service (HHMS) [6]. The
2
framework executes test applications –
1.8
written in J2ME MIPD 2.0 and J2SE. We
1.6
wrote two applications for two different
1.4
communication paradigms – pub/sub and
1.2
Remote Procedure Call (RPC). A client of
1
pub/sub
0.8
RPC
the first application (ED) echoes message
0.6
back to the sender (ES). With them, we
10
10
10
10
Payload (byte)
experimented to perform the test for a cost
of message. By varying a size of message,
Fig. 4. Latency by Payload
we measured RTT of different size
messages. The result is shown in Fig.4. A
client of the second application replies ACK back to the sender to measure RTT of
different number of mobile clients. The second test was executed with mobile client
emulators that come with Sun Microsystems’ J2ME WirelessToolkit. This is a limited
configuration, but it is still enough to exemplify the analysis we’ve made in Section 2.
We define the data transition time of publish/subscribe and RPC as RTT/2 and RTT
respectively from the semantics of each messaging scheme. Experiments are
performed on mobile devices – a Samsung SPH-I300 phone and a Treo 600 with
Sprint PCS Vision service and Linux machine.
1

2

3

4

4 Conclusions
We presented cost analysis model for publish/subscribe systems. Based on the cost
analysis, we proposed an adaptive scheme which can dynamically select an
appropriate model for each client independently. Experimental results (delay time)
from our test bed were quite similar to our cost analysis models, which verifies that
our cost model is useful to select proper model and to design adaptive schemes.

References
1. P. Eugster, P. Felber, R. Guerraoui, and A. Kermarrec, “The Many Faces of
Publish/Subscribe”, ACM Computing Surveys, vol. 35, no. 2, pp. 114-131, Jun. 2003.
2. A. Rowstron, A. Kermarrec, M. Castro, and P. Druschel, “SCRIBE: The design of a largescale event notification infrastructure”, Networked Group Communication, 2001.
3. A. Uyar, S. Pallickara and G. Fox, “Audio Video Conferencing in Distributed Brokering
Systems”, Proc. of the International Conf. on Communications in Computing, June 2003.
4. S. Pallickara and G. C. Fox, “NaradaBrokering: A Middleware Framework and
Architecture for Enabling Durable Peer-to-Peer Grids”, Proc. of ACM/IFIP/USENIX
International Middleware Conference Middleware, pp 41-61, 2003.
5. S Oh, S. Lee Pallickara, S. Ko, J. Kim, G. Fox, “Cost Model and Adaptive Scheme for
Publish/ Subscribe Systems on Mobile Environments”, Community Grids Lab Technical
Report, Dec. 2004. (http://grids.ucs.indiana.edu/ptliupages/publications/)
6. S. Oh, G. C. Fox, S. Ko, “GMSME: An Architecture for Heterogeneous Collaboration with
Mobile Devices”, Proc. of the Fifth IEEE/IFIP MWCN 2003, Singapore, Oct. 2003.

