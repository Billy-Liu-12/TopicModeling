Key Technologies Research on Building a Cluster-Based
Parallel Computing System for Remote Sensing
Guoqing Li and Dingsheng Liu
45 BeiSanHuanXi Road, P.O. Box 2434, Beijing, 100086,China
Open laboratory, Remote Sensing Satellite Ground Station, China Academic of Sciences
{gqli,dsliu}@ne.rsgs.ac.cn

Abstract. Remote sensing image processing needs high performance computing to answer the fast growing data and requirement. Cluster-based parallel remote sensing image processing shows an effective way to overcome it. With an
example of PIPS, paper gives basic theory of it, such as system structure, parallel model, and data distribution strategy and software integration and so on.
Many experiments have proved that such technology can afford a receivable
parallel efficiency with low cost hardware equipment. Moreover, it is friendly
for experts who know remote sensing applications well and parallel computing
less in developing their own parallel application implementations.

1 Introduction
In our information era, earth observation information has been the chief resource of
information we have to handle. Remote sensing data is the mean part of EO information which comes from plane and satellite platforms. Remote sensing technology is
fast developing on the filed of spatial resolution, spectrum resolution, time resolution,
with which the data scale is expanding rapidly. A single scene of TM image with 7
bands can reach 280M disk storage. A global and big area geo-information always
reaches to TB scale with in a single project. This information gives us more detail
knowledge about our living environment.
However, the limit of processing speed and processing scale has been the bottleneck for remote sensing development and application. Most desktop workstations do
not have sufficient computing power to perform such image processing. Generally
large super-computers such as MPP are the main frameworks for such processing [1],
while new researches on cluster system have shown the potential power and good
performance to overcome such problem. Cluster system is based on current normal
software and hardware desktops, such as linux and ANSC C/C++ . It gives a low cost,
high operation possibility and expandability [2]-[3]. In some degree, it can be a perfect alternate plan of expansive Super Computers.
In this paper, we describe the design and implementation of Cluster-based Parallel
Remote Sensing Processing System (PIPS). It is not only a general image processing
parallel system, with the optimization of large image, but a special remote sensing
image processing system. PIPS uses a message passing model based on MPICH standard which is designed to be the parallel desktop of PIPS. At the same time, PIPS is a
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 484 – 491, 2005.
© Springer-Verlag Berlin Heidelberg 2005

Key Technologies Research on Building a Cluster-Based Parallel Computing System

485

developing desktop for some experts who know remote sensing applications well and
know parallel technology less. With the develop model, they can design their own
parallel applications by easy methods within very short time, and finally they can
reassemble a special parallel remote sensing image processing desktop.

2 System Structure
Mainly, the processing of remote sensing image is data parallel model. Large data
quantity can cover up the profile of arithmetic parallel. In cluster, we want to take
computation extension profile from the multi CPU and multi I/O capability. Data is
not processing locally, which is send to distributed computer nodes and processed
there. Finally, the results data will be send back and new image be created. This
course is a representative data parallel structure. The most time cost is happened in
the network transmission for large EO data.
2.1 Basic Structure
2.1.1 Structure
In general, a whole running cluster processing system on remote sensing includes
three chief modules, Initialization, Arithmetic Implementation and Finalization,
shown in Fig. 1 as PIPS system. Firstly, Initialization module PIPSInit contains the
following tasks: setting system parameters (run-mode XT/VT), starting related processes (MPI and process control), initializing temporary files, parameter files and PIP
image files. Second, PIPSRun, the Arithmetic Implementation module, is the main
part of a PIPS routine. The difference of different algorithms can bring different routines. However, it always contains three steps, image sending (distribution), processing and collection. Lastly, Finalization is running by PIPSEnd module. Corresponding
to PIPSInit, it closes files, finishes processes and deletes rubbish.

PIPSInit

PIPSRun

PIPSEnd

Fig. 1. structure

From such structure we can find that most initialization and finalization works is
similar and which can be build into common modules. The difference of every processing function is realized in the part of PIPSRun, especially in some short subroutines.
2.1.2 System Frame
Application Routines use library function to finish certain processing function and
function library contains basic image processing routines. Generally, they have been
designed to be parallel routines, and some of them are full processing units. Some
routines, however, are much basically and generally, such as I/O operation, having
been assembled to be a low level library Kernel Function Library. Some advance

486

G. Li and D. Liu

function such as load balance, dynamic process management etc. MPI is the lowest
support of PIPS system, which is invisible for application users and developer.
2.1.3 Multi-layer Parallel Model
There are three main parallel modes in remote sensing field, message-passing mode
[4], share memory mode [5] and parallel file system mode [6]. Most parallel arithmetic in recent works all can be found form one of three modes. Each parallel mode
above can be used to build a whole parallel processing system. Coming from different
special research environment and research organization, such mode all have their
superiority and inferiority. As many experimentation shown, in remote sensing processing, individual mode always cannot bring a perfect result mostly.

Fig. 2. Multi-layer parallel structure

Message-passing is most fast and steadily parallel mode, which has perfect standards system (PVM and MPI) and has been supported wildly by most parallel computer producers. Program based on Message-passing mode is clearly and readable, is
also easily to build special parallel programming tools with their debugging and
watching environment. However, such mode also brings the block of buffer and net
transfer, especially for fine granularity parallel strategy. Share memory mode and
Parallel file system mode can make the programming simply, reduce the changing of
serial program. However, the parallel task control is too difficult to manage. Such
modes is still in the research stage without stable and authoritative publish version.
Uniform technical standard have not been confirmed.
However, such parallel modes can work together, and they do not exclude each
other. There are two types of data transfer in the view of parallel architecture, CI
(control information) and DI (data information), shown in Fig.2. Message-passing
mode is fit for the CI, whereas parallel file system is fit for DI. Combining such three
parallel modes, multi-layer parallel mode [9] can give better performance. There are
two combinations: message-passing with parallel file system and share memory with
parallel file system. In our next version of PIPS, we improve the parallel architecture
by combining message-passing with parallel file system.
2.2 Data Distribution
As a basic model of message passing structure, large EO data have to be handled with
data distribution operations, which can move target file data from one node to many
nodes, and then collect them back as a whole. Data distribution is finalized by parallel

Key Technologies Research on Building a Cluster-Based Parallel Computing System

487

data I/O library. This library is the base of module programming of data parallel,
which can simplify different, reduce time and improve effective. According to given
image data, they can create distribute strategy with interior dispatching engine. The
strategy can reach load balance, reduce communication and speed transfer.

Slave1

Slave2

Slave3

Slave4

Master

Slave

Fig. 3. whole image to line sequence image

Fig. 4. whole image to specially type

With parallel file system, such parallel I/O has been building in the parallel read
and writes operation as a global file object, which can reduce 30% transmission time.
The general rule of data distribution is reducing communication and offering complete data for certain application function. It is not only a course of space distribution
but a re-assembling course of data structure.
In remote sensing, distribution modes is following: whole image to whole image,
whole image to line sequence image, whole image to column sequence image, whole
image to cross sequence image, whole image to matrix and whole image to specially
type. (As Fig. 3 and Fig. 4)
2.3 Implementation
2.3.1 Data Parallel
In large remote sensing image processing, the representative parallel mode is data
parallel. The FOR sentence and DO sentence in sequence programs always means a
lot of calculation and can cause parallel possibility, which means FOR and DO sentences can be done parallel by many computer nodes. In PIPS, a whole processing can
be divided into three steps of image sending, image processing and image collection.
Modularization is a good developing method for users and developers, because they
need not consider the details of distribution and collection while keeping good parallel performance.
2.3.2 Algorithmic Parallel
Not all operations in remote sensing reach good parallel performance only with data
parallel, especially the operations reacted to GIS. On the other hand, algorithmic parallel sometime can get better efficiency however. For instance, DEM establishment
and wavelet transfer are typical algorithmic parallel implementations. PIPS provides
complex mode to fit these conditions. Developers have to write PIPSRun part as a
whole by themselves, which contributes to the customized function library.

488

G. Li and D. Liu

3 Developing Toolkit
PIPS has powerful developing ability. Many remote sensing experts are very familiar
with the theories and methods of remote sensing technology but they have less knowledge on parallel technology. The developing toolkit of PIPS can help them transfer
their sequence program expediently.
3.1 Function Library
In PIPS the functions are independently and the process loading is the main way of
software integration. As shown in Fig. 5, Function library includes full program structure, the main part and other routines. What users should do is only little part of program
routines, which have relationship with algorithm he want to carry out. The other part of
routines, including complex control and interface function, should not be considered
again. So the users can build up their whole parallel applications in a short time.

Inside
functions

customized
functions
compiling

application

function
library

Fig. 5. function library

3.2 Develop Mode
Different algorithms can be realized with different parallel mode, the simple mode
and the complex mode, seen in Fig.. Most of applications, which can be simplified to
be three steps, distribution, processing and collection, belongs to simple mode.

initialization

simple mode

complex mod

master

processing
module

slave
finalizing

Fig. 6. developing mode

Key Technologies Research on Building a Cluster-Based Parallel Computing System

Fig. 7. parallel efficiency of Rotate

489

Fig. 8. Walsh transfer parallel efficiency

In this mode, what users should modify is only routines pipsmaster in master node
and pipsslave in slave node. The other modules have been designed fitting this
change automatically. For example, the K-L transfer [7], FFT transfer and classification operations are typical application of simple mode. The programming of this mode
is clear, simple and easy to compare and debug.
However, there are still some applications of remote sensing cannot be formed
with simple mode. To these applications, experts have to use special optimized algorithm. The complex mode of PIPS let it also can be involved in the whole structure of
PIPS. Some applications include wavelet, DEM, SAR pre-processing [8], rotate, mosaic are typical complex mode.
3.3 Integrated Running Environment
PIPS is running on LINUX operation system with MPI parallel tools on cluster hardware. For an integration running system, many factors should be taken into account,
auto detecting the running mode (VT/XT), static load balance, compute node selection, controlling the disk space, version conflicting and error control etc. Moreover,
the running mode of MPI is very complex also. PIPS has build an integrated running
environment, which can do above things at same time and automatically.

4 Experimental Results
In this section we present experiment results using PIPS system to perform a variety
of image processing applications tasks. These experiments were done using a cluster
of 9 PCs connected with 100M Ethernet. Experimental images were offered by RSGS
and had three types. 7 band small TM images (2983 x 3484 x 7 band) , 7 band whole
TM images (5728 x 6920 x 7 band) and 7 band mosaic TM images ( 22000 x 27000 x
7 band).
Parallel efficiency in speedup index has three conditions also. To most remote
sensing applications, standard PIPS parallel mode (simple mode) can do well enough,
such as WALSH transfer.
Complex mode can bring enough good result for some special tasks, sometime
they can reach linear speedup. For example, rotate operation with slant strip algorithm
can do 20000 x 20000 or more large image with parallel efficiency great than 50%
(parallel efficiency means here speedup/nodes).

490

G. Li and D. Liu

When we use parallel file system replaces MPI parallel IO routines, the performance reaches a new standard. As an example, above rotate operation-computing speed
reaches 1.70 times faster than MPI mode.
In the theories of classical parallel computing, the speedup is always less than the
parallel nodes number. However, in the field of data complexity applications, speedup
index sometime can large than parallel nodes number. The parallel cluster is not only
increasing the CPU number but increasing the available hard disk space and the total
memory size. Some problems are too large to processing without using swap memory
space in single node, but they are still less than the real total memory of cluster. We
have taken a mosaic example for AnHui Prov. China, which include 9 scenes TM
images with bands of 5/4/3 together and PIPS costs less than 7 minutes, which cannot
be successfully running on the normal PC platform.

5 Conclusions
In general, the problems of remote sensing image processing are data parallelism
problems. Course-grain parallelism is the main method for them. The overall system
is based on such parallelism. We have been doing some researches on fine-course
type, for example, the operator of mosaic and wavelet.
As a typical cluster-based remote sensing data processing system, PIPS is successful in transferring the classical sequence programming to parallel programming. PIPS
have been developed form 1996, which has three main versions, PIPS, PIPS2000, and
PIPS2005. New version PIPS is adopted with multi parallel theory and reaches a high
performance. It shows rather better result not only in realizing algorithms, parallel
efficiency, and integration condition but also in developing desktop. An experiment
system on whole satellite ground processing station is being built on the base of PIPS,
which is the first taste with cluster parallel computation environment.

Acknowledgement
This paper is fund by China National Key Research Project (863) “research on fast
processing technology for large remote sensing information” and finished at open
laboratory, RSGS, CAS.

References
1. K.A.Hawick, H.A.James, Distributed High-Performance Computation for Remote Sensing,
Proc. Of Supercomputing ’97,San Jose, Nov. 1997, Technical report.
2. Chao-Tung Yang, Chi-Chu Hung, Parallel Computing in Remote Sensing Data Processing.
3. Chao-Tung Yang,Chih-Li Chang, Using a Beowulf Cluster For a Remote Sensing Application, 22nd Asian Conference on Remote Sensing, Nov, 2001
4. Marc Snir, MPI: The Complete Reference MIT Press 1996
5. http://www.ict.ac.cn/chpc/dsm/dist.html

Key Technologies Research on Building a Cluster-Based Parallel Computing System

491

6. Zhu Yaofei, Li Guoqing, The research and experimentation of parallel file system in remote
sensing image parallel processing system, Master’s thesis, China remote sensing satellite
ground station.
7. Li Guoqing ,Li Xia, Liu Dingsheng parallel processing on K-L transfer(in Chinese) ‘98
academic conference of China remote sensing at Dalian
8. Chen Lin, Liu Dingsheng parallel processing research on SAR imaging(in Chinese) ‘98
academic conference of China remote sensing at Dalian
9. Li Guoqing,, Liu Dingsheng, Research work on parallel mode of geo-image processing,
Journal of Image and Graphics, Vol. 8. Spec 2003

