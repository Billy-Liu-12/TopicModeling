An Approach for Eye Detection Using
Parallel Genetic Algorithm
A. Cagatay Talay
Department of Computer Engineering, Istanbul Technical University,
34469 Istanbul, Turkey
talay@cs.itu.edu.tr

Abstract. In this paper, a new reliable method for detecting human eyes in an
arbitrary image is devised. The approach is based on searching the eyes with
Parallel Genetic Algorithm. As the genetic algorithm is a computationally
intensive process, the searching space for possible face regions is limited to
possible eye regions so that the required timing is greatly reduced. The
algorithm works on complex images without constraints on the background,
skin color segmentation and so on. The eye detection process works predictably,
fairly, reliably and regardless of the perspective.

1 Introduction
Eye detection is a crucial aspect in many useful applications ranging from face
recognition/detection to human computer interface, driver behavior analysis, or
compression techniques like MPEG4. A large number of works have been
published in the last decade on this subject. Generally the detection of eyes consists
of two steps: locating face to extract eye regions and then eye detection from eye
window. The face detection problem has been faced up with different approaches:
neural network, principal components, independent components, skin color based
methods [1, 2]. Each of them imposes some constraints: frontal view,
expressionless images, limited variations of light conditions, hairstyle dependence,
uniform background, and so on. A very exhaustive review has been presented in [3].
On the other side many works for eye or iris detection assume either that eye
windows have been extracted or rough face regions have been already located [4, 57]. No much works have been presented in literature that search directly eyes in
whole images, except for active techniques: they exploit the spectral properties of
pupil under near IR illumination.
The main objectives of this work is to propose an eyes detection algorithm that is
applicable in real time with a standard camera, in a real context such as people driving
a car (then with a complex background), and skipping the first segmentation step to
extract the face region as commonly done in literature. The rest of the paper is
organized as follows: Section 2 gives brief information about the Parallel Genetic
Algorithms. The search process of eyes is described in Section 3. Finally, in Section 4
conclusions and future works are presented.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 1004 – 1007, 2005.
© Springer-Verlag Berlin Heidelberg 2005

An Approach for Eye Detection Using Parallel Genetic Algorithm

1005

2 Genetic Algorithms
A sequential GA proceeds in an iterative manner by generating new populations of
strings from the old ones. Every string is the encoded version of a tentative solution.
An evaluation function associates a fitness measure to every string indicating its
suitability to the problem. The algorithm applies stochastic operators such as
selection, crossover, and mutation on an initially random population in order to
compute a whole generation of new strings. Unlike most other optimization
techniques, GAs maintain a population of tentative solutions that are competitively
manipulated by applying some variation operators to find a global optimum. For
nontrivial problems this process might require high computational resources, and thus
a variety of algorithmic issues are being studied to design efficient GAs. With this
goal, numerous advances are continuously being achieved by designing new
operators, hybrid algorithms, termination criteria, and more [8]. We adopt one such
improvement consisting in using parallel GAs (PGAs) and incorporating some
advanced heuristics into an overall genetic algorithm.
PGAs are not just parallel versions of sequential genetic algorithms. In fact, they
reach the ideal goal of having a parallel algorithm whose behavior is better than the
sum of the separate behaviors of its component sub-algorithms, and this is why we
directly focus on them. Several arguments justify our work. First of all, GAs are
naturally prone to parallelism since the operations on the representations are relatively
independent from each other. Besides that, the whole population can be
geographically structured [9] to localize competitive selection between subsets, often
leading to better algorithms.
Using PGAs often leads to superior numerical performance even when the
algorithms run on a single processor [10, 11]. However, the truly interesting
observation is that the use of a structured population, either in the form of a set of
islands [12] or a diffusion grid [9], is responsible for such numerical benefits. As a
consequence, many authors do not use a parallel machine at all to run structuredpopulation models and still get better results than with serial GAs [13, 14]. Hardware
parallelization is an additional way of speeding up the execution of the algorithm, and
it can be attained in many ways on a given structured-population GA. Hence, once a
structured-population model is defined, it could be implemented in any uniprocessor
or parallel machine. There exist many examples of this modern vision of PGAs,
namely, a ring of panmictic GAs on a MIMD computer, a grid of individuals on
uniprocessor/MIMD/SIMD computers, and many hybrids.

3 Process of Eye Detection
The idea behind this study is quite simple: the eyes can be easily located in the image
since the iris is always darker than the sclera no matter what color it is. In this way the
edge of the iris is relatively easy to detect as the set of points that are disposed on a
circle. The first step in applying PGAs to the problem of feature selection for eye
detection is to map the pattern space into a representation suitable for genetic search.
Since the main interest is in representing the space of all possible subsets of the

1006

A.C. Talay

original feature list, the simplest form for image base representations considers each
feature as a binary gene. Each individual chromosome is then represented as a fixedlength binary string standing for some subset of the original feature list. In this
method, first of all the pupil and the edge of the eye are extracted, in addition the
position of the eyes is detected more accurately. For the extraction of the eye area,
chromosome of individual is set as the first former array composed position
information and the size of eye’s outlines and pupil. Moreover, fitness of individual is
obtained from evaluation function, which pays attention to three features of eyes
(difference between white of eye and pupil, color, shape, and size of pupil, edge of
eye). The eye area is extracted by chromosome information on the individual with the
maximum fitness when evolution completed.
For detection, the pupil is expressed in circle, and the outlines of eye are expressed
in the oval, and the pupil is assumed to be at centers of eye. It is defined that the
chromosome of individual is composed as X and Y coordinates which shows center of
eyes, radius of circle that shows size of pupil and shape of oval which shows outlines
of eyes. The first former array of each center coordinates is ten bits, a radius of the
circle and oval major axis and minor axis is six bits, total 36 bits, makes. In PGA
random initialization is used. Next, whether the defined chromosome is suitable as the
eye is decided according to the evaluation function. Since this method pays attention
to the features of eye, “Eyes have white of the eye and pupil”, “The shape of the pupil
is near circle, and the color is a black”, “The outline of eye can be approximated to
the oval”, the following three are used as an evaluation function.
Eye has white of the eyes and pupil, it is feature that high density difference
between white area and black area. In a word, if there is a big change in the density
value of the pixel in a certain area, it is concluded this area is near eyes or the areas
around eyes. Then, products of two high-ranking values of the density difference in
the area are used as feature. Where eyes are enclosed, the density change is large in
the boundary between white of the eye and pupil, the product has a large value.
It is a feature of the pupil that shape is a circular arc, because upper part of pupil is
hidden by above eyelid. The color of pupil looks black in the brightness image and
the turn of the pupil in enclosed with white of the eye. Therefore, the portion of black
pixel in circular arc and the number of white pixels in circular arc surroundings are
used as among of features. In Fig. 1, it is evaluated that area A where eyes are shown
has high value. But the case of area B (skin) or area C (eyebrow) does not have proper
value of white and black pixels in the circular arc, then the evaluation is bad.
Moreover, the gap of the center is evaluated by obtaining the difference of the
radius of circle which is in scribe to the pupil and the circle with the string. As shown
in Fig. 2, if the circular arc center shifts from the center of the circle, the difference of
Region A

Region B

Region C

Fig. 1. Evaluation of Circle

Fig. 2. Gap of center

case, black pixels are few and the evaluation is good, but the case of eyebrow and
hair, is badly evaluated because a lot of black pixel exists. The difference of shape

An Approach for Eye Detection Using Parallel Genetic Algorithm

1007

between oval and outline of eye is obtained by using edge image. The sum of distance
from 12 points is obtained, top, bottom, right and left. If the sum distance is big value,
the oval and the shape of eyes are greatly different, if the sum is small, those shapes
looks like.

4 Conclusions and Future Work
In this study, an effective algorithm for eyes detection in arbitrary images is
presented. PGA is used to detect the eyes according to the information based on the
features of eyes, like shape of the eye and pupil, white of eye and pupil. The proposed
technique does not impose any constraint on the background and does not require any
preprocessing step for face segmentation. Eye is detected without receiving charge of
the lighting and effect of face of direction. High detection rates have been obtained.
The results are surprisingly good also when the eyes are not completely open.

References
1. H. A. Rowley, S. Baluja, T. Kanade: Neural Network-Based Face Detection. IEEE Trans.
on Pattern Analysis and Machine Intelligence Vol. 20,No. 1, Jan. 1998, pp 23-38.
2. R. Hsu, M. Mottleb, A. K. Jain: Face Detection in Color Images. IEEE Transaction on
Pattern Anlysis and Machine Intelligence Vol24, No. 5, May 2002.
3. M. H. Yang, D. Kriegman, N. Ahuja: Detecting Faces in Images: A Survey. IEEE
Transaction on Pattern Analysis and Machine Intelligence Vol. 24, No. 1 January 2002.
4. T. Kawaguchi, M. Rizon: Iris detection using intensity and edge information. Pattern
Recognition 36 (2003) 549-562.
5. S. Baskan, M. Bulut, V. Atalay: Projection based method for segmentation of human face
and its evaluation. Pattern Recognition Letters 23 (2002) 1623-1629.
6. S. Sirohey, A. Rosenfiled, Z. Duric: A method of detection and tracking iris and eyelids in
video. Pattern Recognition 35 (2002) 1389-1401
7. M. Rizon, T. Kawaguchi: Automatic extraction of iris with reflection using intensity
information. Proc. of the 3th Iasted Conf. on Vis. Imaging and image processing, 2003.
8. J.H. Holland: Adaptation in natural and artificial sys.. U. of Michigan Pr., Ann Arbor,
1975.
9. P. Spiessens and B. Manderick: A massively parallel genetic algorithm. Proceedings of the
4th Int. Conf. on Genetic Algorithms. R.K. Belew (Ed.) Morgan Kaufmann, (1991).
10. V.S. Gordon and D. Whitley: Serial and parallel genetic algorithms as function optimizers.
Procs. of the 5th ICGA. S. Forrest (Ed.) Morgan Kaufmann, (1993).
11. F. Herrera and M. Lozano: Gradual distributed real-coded genetic algorithms. Technical
Report #DECSAI-97-01-03, (1997). (Revised version 1998).
12. R. Tanese: Distributed genetic algorithms. Proc. of 3rd ICGA. J.D. Schaffer (Ed.) (1989).
13. V.S. Gordon and D. Whitley: Serial and parallel genetic algorithms as function optimizers.
Procs. of the 5th ICGA. S. Forrest (Ed.) Morgan Kaufmann, (1993).
14. E. Alba, J.F. Aldana, and J.M. Troya: A genetic algorithm for load balancing in parallel
query evaluation for deductive relational databases. Procs. of the I. C. on ANNs and GAs.
D.W. Pearson, N.C. Steele, and R.F. Albrecht (Eds.) Springer-Verlag, (1995).

