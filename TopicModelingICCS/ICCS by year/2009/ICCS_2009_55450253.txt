Time Acceleration Methods for Advection on
the Cubed Sphere
R.K. Archibald, K.J. Evans, J.B. Drake, and J.B. White III
Oak Ridge National Laboratory, Oak Ridge, TN

Abstract. Climate simulation will not grow to the ultrascale without
new algorithms to overcome the scalability barriers blocking existing implementations. Until recently, climate simulations concentrated on the
question of whether the climate is changing. The emphasis is now shifting to impact assessments, mitigation and adaptation strategies, and
regional details. Such studies will require signiﬁcant increases in spatial
resolution and model complexity while maintaining adequate throughput. The barrier to progress is the resulting decrease in time step without increasing single-thread performance. In this paper we demonstrate
how to overcome this time barrier for the ﬁrst standard test deﬁned for
the shallow-water equations on a sphere. This paper explains how combining a multiwavelet discontinuous Galerkin method with exact linear
part time-evolution schemes can overcome the time barrier for advection equations on a sphere. The discontinuous Galerkin method is a
high-order method that is conservative, ﬂexible, and scalable. The addition of multiwavelets to discontinuous Galerkin provides a hierarchical
scale structure that can be exploited to improve computational eﬃciency
in both the spatial and temporal dimensions. Exact linear part timeevolution schemes are explicit schemes that remain stable for implicit-size
time steps.

1

Introduction

Large-scale scientiﬁc computing has maintained its exponential growth via the
ever expanding parallelism while individual processor speeds have begun to stagnate [9]. This trend requires the development of new algorithms that can overcome the time barrier, or eﬀectively scale in spatial resolution while maintaining
adequate throughput and accuracy. This paper takes a step towards this goal
by demonstrating how the time step for advection equations on a sphere can be
signiﬁcantly increased by using a multiwavelet discontinuous Galerkin method
with an exact linear part time-evolution scheme.
The discontinuous Galerkin (DG) method has an elegant and ﬂexible formulation that can provide high-order accurate solutions to complicated models
[5,6]. DG is a ﬁnite element method that is locally conservative and allows for
an element-wise discontinuous solution approximation. DG is a scalable method
because numerical information of each element is only passed locally through
numerical ﬂuxes to the nearest neighbors. In a set of papers, the DG method
G. Allen et al. (Eds.): ICCS 2009, Part II, LNCS 5545, pp. 253–262, 2009.
c Springer-Verlag Berlin Heidelberg 2009

254

R.K. Archibald et al.

was successfully implemented on the sphere for advection models [11] and the
shallow water equation [12]. We build on this work by merging multiwavelets
with discontinuous Galerkin on the sphere and accelerate the time step by using
an exact linear part (ELP) time-evolution scheme.
Multiwavelets are a discontinuous, orthogonal, compactly supported, multiscale set of functions with vanishing moments that yield high-order hp-adaptive
approximations of L2 functions [1]. Combination of multiwavelets with the DG
method results in a computationally fast and eﬀective multi-scale adaptive DG
method [3]. ELP has been demonstrated to be particularly eﬀective and eﬃcient
for multiwavelet-based schemes [2,4] since the operators generated for the ELP
method remain sparse in a multiwavelet representation.
This paper is orgainized as follows. In section 2 we introduce the multiwavelet
basis and its key features. In section 3 we describe the DG method for the cubed
sphere and further demonstrate how multiwavelets are incorporated. Section 4
describes ELP for the multiwavelet DG method. Section 5 demonstrates the
time acceleration of advection problems on the cubed sphere. Section 6 ends the
paper with a discussion of the results.

2

Multiwavelet Bases

In this section we brieﬂy summarize the important properties of the multiwavelet
basis derived and developed in [1] and introduce notation as given in [2]. We begin
by deﬁning Vnk as a space of piecewise polynomial functions, for k = 1, 2, . . .,
and n = 0, 1, 2, . . ., as
Vnk = {f : f ∈ Πk (Inl ), for l = 0, ..., 2n − 1, and supp(f ) = Inl },

(1)

where Πk (Inl ) is the space of all polynomials of degree less than k on the interval
Inl = [2n l, 2n (l + 1)]. Using this space, we can describe not only multiwavelets,
but the solution space that the DG method uses for approximation. The multiwavelet subspace Wnk , n = 0, 1, 2, . . ., is deﬁned as the orthogonal complement
k
of Vnk in Vn+1
, or
k
, Wnk ⊥Vnk .
(2)
Vnk ⊕ Wnk = Vn+1
The immediate result of this deﬁnition of the multiwavelet subspace is that it
splits Vnk into n + 1 orthogonal subspaces of diﬀerent scales, as
k
Vnk = V0k ⊕ W0k ⊕ W1k ⊕ . . . ⊕ Wn−1
.

(3)

Given a basis φ0 , . . . , φk−1 of V0k , the space Vnk is spanned by 2n k functions
which are obtained from φ0 , . . . , φk−1 by dilation and translation,
φnjl (x) = 2n/2 φj (2n x − l),

j = 0, . . . , k − 1,

l = 0, . . . , 2n − 1.

(4)

By construction similar properties hold for multiwavelets. If the piecewise polynomial functions ψ0 , ..., ψk−1 form an orthonormal basis for W0k , then by dilation
and translation the space Wnk is spanned by 2n k functions
n
ψjl
= 2n/2 ψj (2n x − l),

j = 0, . . . , k − 1,

l = 0, . . . , 2n − 1.

(5)

Time Acceleration Methods for Advection on the Cubed Sphere

255

A function f ∈ Vnk can be represented by the following expansion of scaling
functions.
n
2 −1 k−1

snjl φnjl (x),

(6)

f (x)φnjl (x)dx.

(7)

f (x) =
l=0 j=0

where the coeﬃcients snjl are computed as
2−n (l+1)

snjl

=
2−n l

The decomposition of f (x) has an equivalent multiwavelet expansion given by
n−1 2m −1

k−1

(s0j0 φj (x)

f (x) =

+

(8)

m=0 l=0

j=0

with the coeﬃcients

2−n (l+1)

dm
jl

m
dm
jl ψjl (x)),

=
2−n l

n
f (x)ψjl
(x)dx.

(9)

It is demonstrated in [1] how fast transforms between (6) and (8) can be developed using two-scale diﬀerence equations. Speciﬁcally, expansion coeﬃcients
of multiwavelets with k vanishing moments can be constructed on consecutive
levels m and m + 1 through repeated application of
sm
jl =

k−1

m+1
(hij sm+1
j,2l + hij sj,2l+1 ),
(0)

j=0

dm
jl =

(1)

k−1

m+1
(gij sm+1
j,2l + gij sj,2l+1 ),
(0)

j=0

(1)

(0)

(10)

(0)

using the scaling coeﬃcients hij and gij for i, j = 0, . . . , k − 1. The inverse
operation that takes expansion coeﬃcients of (8) to (6) is given by
sm+1
j,2l =
dm+1
j,2l+1 =
(0)

k−1
j=0

m
(hji sm
j,l + gji djl ),

k−1

(0)

m
(hji sm
j,l + gji dj,l ),
(1)

j=0

(0)

(0)

(1)

(11)

for the scaling coeﬃcients hij and gij , for i, j = 0, . . . , k − 1.
The total number of expansion coeﬃcients in (6) and (8) are the same, but the
number of significant expansion coeﬃcients for a given error tolerance level will
be diﬀerent. A beneﬁt of using the multiwavelet expansion (8) is that much-fewer
signiﬁcant expansion coeﬃcients are generally needed. A result of this property
when multiwavelets are used in DG methods is an increase in computational
speed and eﬃciency [1]. In this paper we use hard thresholding to eliminate
non-signiﬁcant expansion coeﬃcients.

256

3

R.K. Archibald et al.

Multiwavelet Discontinuous Galerkin Method on the
Cube Sphere

In this section we begin by describing the multiwavelet DG [1] method in two
dimensions and ﬁnish by demonstrating how this method can be used with the
cube-sphere geometry to model equations on the sphere.
Consider the two-dimensional scalar nonlinear conservation law
ut + ∇ · f (u) = 0, in [0, 1]2 × [0, T ].

(12)

We restrict our attention to uniform Cartesian meshes since they provide the
most natural representation for multiwavelets; other mesh choices are possible
but the implementation becomes more challenging [7]. Given a ﬁxed order k ≥ 0
and resolution n ≥ 0, variational formulation of the DG method is derived by
multiplying (12) by the test functions φjl ∈ Vnk and integrating to obtain

In

Inl

∂u n
φ (x)φnj (y)dxdy =
∂t jl

In

+
In

−

∂φnjl (x) n
φj (y)dxdy
∂x
Inl
∂φnj (y)
dxdy
f (u)φnjl (x)
∂y
Inl
f (u)

∂[In ×Inl ]

f (u) · n φnjl (x)φnj (y)ds,

(13)

for j, j = 0, . . . , k − 1 and l, = 0, 1, . . . , 2n − 1, where n is the outward-facing
unit normal vector on the element boundary ∂[In × Inl ]. Consider the following
two-dimensional multiwavelet expansion.
μ
m
dm,μ
jl,j ψjl (x)ψj (y),

uh (x, y, t) =

(14)

with summation taken over j, j = 0, . . . , k − 1 and m, μ = −1, 0, . . . , n − 1 and
l = 0, 1, . . . , min(0, 2m − 1) and = 0, 1, . . . , min(0, 2μ − 1), where notation
−1
is condensed by deﬁning ψj0
(·) ≡ φj (·), for j = 0, . . . , k − 1. The numerical
multiwavelet DG scheme supplants the test functions (13) with multiwavelets
and solves

In

Inl

∂uh n
ψ (x)ψjn (y)dxdy =
∂t jl

In

+
In

−

n
(x) n
∂ψjl
ψj (y)dxdy
∂x
Inl
∂ψjn (y)
n
dxdy
f (uh )ψjl
(x)
∂y
Inl

f (uh )

∂[In ×Inl ]

n
(x)ψjn (y)ds, (15)
fˆ(uh ) · n ψjl

where fˆ(uh ) is a monotone numerical ﬂux, the focal point for the only communication between elements. Throughout this paper we use the well known simple

Time Acceleration Methods for Advection on the Cubed Sphere

257

Fig. 1. The cubed-sphere gridding technique projects the red points on the sphere
along radial lines to the blue points on the inscribed cube face

Lax-Friedrichs ﬂux [10] and Gauss-Lobatto quadrature for integration. An explicit solution of (15) results directly from the orthogonality of multiwavelets,
where
∂dm,μ
∂uh n
jl,j
ψjl (x)ψjn (y)dxdy =
∂t
∂t
In
Inl
for all index values given previously.
The cubed sphere, ﬁrst developed in [13], has proven to be a particularly
useful gridding technique for solving partial diﬀerential equations on the sphere
[11,12,14]. Figure 1 depicts the cubed sphere, where the transformation between
the inscribed cube and the sphere is determined by the gnomonic (center) projection from the sphere to each face of the cube. DG is well-suited for this type
of gridding [11,12], since each face can be solved as a separate two-dimensional
problem, with faces communicating with each other as boundary conditions.

4

Time Discretization

We use a method of time stepping that has been demonstrated to be particularly
eﬀective and eﬃcient for multiwavelet schemes [2,4]. The idea behind the development of these schemes, as it is related to this research, is to convert diﬀerential
equations of the form
ut = Lu + N (u),

(16)

where the system is split into a linear operator L and nonlinear operator N , into
the equivalent integral equation,
t

u(t) = etL u0 +
0

e(t−τ )L N (u)dτ.

(17)

258

R.K. Archibald et al.

The multiwavelet basis allows fast scaling and squaring methods that produce
sparse and highly accurate approximations to the exponential linear operator. These time-stepping schemes are therefore called exact linear part (ELP)
schemes.
This paper focuses on linear advection equations on the sphere, and therefore
we will only discuss how to approximate the exponential operator etL . Suppose
we are given the matrix L and an error tolerance ; the scaling and squaring
method that approximates the exponential linear operator is as follows.
1. Compute the exponent j such that t L 2 /2j < .
j
2. Compute the approximation etL/2 = I + t L 2 /2j .
j
3. etL/2 is squared j times to obtain etL .
Sparsity is maintained by truncating to the error tolerance at each step.

5

Numerical Results

In this section we consider the following problem of advection on the sphere, a
problem that has speciﬁc importance to the development of climate models.
Example 1. Given the advecting ﬁeld h, the equation for advection in ﬂux form is
∂h
+ ∇ · (hv) = 0.
∂t

(18)

The ﬁrst test in the standard suit developed by the climate modeling community
[15] is to solve (18) on the surface of a sphere, with initial conditions given in
spherical coordinates as
h r(λ, θ) =

h0
2 (1

0

+ cos( πr
R )) if r < R,
otherwise,

(19)

for r(λ, θ) = a arccos(sin(θc ) sin(θ) + cos(θc ) cos(θ) cos(λ − λc )) and advecting
wind
v = u0

cos(θ)cos(α) + sin(θ)cos(λ)sin(α)
−sin(λ)sin(α)

.

(20)

Here the parameters are set to a = 6.37122 × 106 m, h0 = 1000m, (λc , θc ) =
a
2πa
π
( 3π
2 , 0), R = 3 , u0 = 12 days , and α = 4 . We note that this choice of α represents a particularly diﬃcult problem, since the advecting cosine bell passes
through four corners and along two edges of the cubed-sphere grid during each
full revolution.
Along with the Cosine bell initial conditions (19), we will also consider the so
called Gaussian hill initial conditions,
h r(λ, θ) = h0 e
for ρ = 2500 km.

− ρr2

,

(21)

Time Acceleration Methods for Advection on the Cubed Sphere

259

(a)

(b)
Fig. 2. (a) Final multiwavelet DG solution of Example 1 for Cosine bell initial conditions. (b) Relative error after one complete revolution, with N = 16, k = 3 and
CFL = 18.2.

Throughout this section we will use
CFL =

u0 Δt
Δx

and Ne = 6N 2 ,

(22)

where Δt is the time step, Ne is the total number of elements on each cube face,
and Δx = N1 .
Figure 2 depicts the multiwavelet DG solution and relative error of Example 1
for Cosine bell initial conditions, with N = 16, k = 3 and CFL = 18.2. It can
be seen that using ELP time stepping provides a stable solution for time steps
that signiﬁcantly exceed the CFL requirement for explicit methods. Figure 3
depicts the same multiwavelet DG solution and relative error of Example 1 for
Gaussian hill initial conditions. The diﬀerence between the multiwavelet DG
solution and the exact solution is no more than a fraction of a percent for each
initial condition and is considerable better for Gaussian hill initial conditions
due to the increased smoothness of this initial condition.

260

R.K. Archibald et al.

(a)

(b)
Fig. 3. (a) Final multiwavelet DG solution of Example 1 for Gaussian hill initial conditions. (b) Relative error after one complete revolution, with N = 16, k = 3 and
CFL = 18.2.

Table 1 gives more-detailed insight into the properties of multiwavelet DG.
We compare fourth order in time Runge-Kutta time stepping (RK4) [8] to ELP.
Since Example 1 is linear, we can convert the Runge-Kutta method into an
equivalent matrix operation. Each time step for the ELP method also consists
of one matrix operation, and therefore we use the number of non-zero elements,
Nz , in each time-evolution matrix to give a measure of the computational eﬀort
for each time step. Our ﬁrst observation from Table 1 is that for both types of
initial conditions the L2 error and order of convergence is comparable for each
time-stepping method and CFL number. We note that the convergence rates
and errors are similar to the results published in [11] for the same problem,
with cosine bell initial condition, using a DG method with CFL = 0.1 and a
third-order Runge-Kutta method. We report that in this study CFL > 0.35 resulted in instability for the RK4 method. Finally, it can be seen that the ELP
method can signiﬁcantly increase the time step while preserving accuracy. ELP
time stepping provided a sixteen-fold acceleration of Runge-Kutta with no significant increase in the number of nonzero elements in the time-evolution matrixes.

Time Acceleration Methods for Advection on the Cubed Sphere

261

Table 1. Convergence rates for Example 1 using RK4 and ELP time stepping for the
multiwavelet DG method with order k = 3 and drop tolerance = 10−4 for the ELP
with CFL= 4.8 and = 10−5 otherwise. The number of non-zero elements for each
operator is give by Nz .

N
cosine bell
4
8
16
Gaussian hill
4
8
16

RK4 (CFL = 0.3)
L2 error Order Nz

ELP (CFL = 4.8)
L2 error Order Nz

ELP (CFL = 18.2)
L2 error Order Nz

1.98e-1
4.04e-2
7.53e-3

2.30
2.42

5.7e5 1.98e-1
2.4e6 4.18e-2
9.9e6 7.61e-3

2.25
2.46

5.9e5 1.96e-1
2.5e6 4.11e-2
1.0e7 7.71e-3

2.26
2.14

1.5e6
8.2e6
3.4e7

2.0e-2
3.04e-3
3.6e-4

2.72
3.09

5.7e5 2.01e-2
2.4e6 3.06e-3
9.9e6 3.62e-4

2.72
3.08

5.9e5 2.02e-2
2.5e6 3.08e-3
1.0e7 3.63e-4

2.72
3.08

1.5e6
8.2e6
3.4e7

Also, a sixty-fold time acceleration was achieved at the cost of a three-fold increase in the number of nonzero elements.

6

Conclusions

This research has demonstrated that signiﬁcant increases in time-step length
are possible for advection problems on the cubed sphere by using an ELP multiwavelet DG method as compared to DG. A sixty-fold increase in time step is
achieved for the ﬁrst test in the standard suit developed by the climate modeling
community [15] in the most-challenging advection direction for the cubed-sphere
geometry. The cost of this time acceleration is a three-fold increase in the number
of spatial calculations. This penalty is small relative to the gain in time acceleration and is desirable because spatial operations oﬀer better opportunities for
parallelization.

Acknowledgments
This research has been sponsored by the Laboratory Research and Development
Program of Oak Ridge National Laboratory (ORNL), managed by UT-Battelle,
LLC for the U.S. Department of Energy under Contract No. DE-AC05-00OR22725.
Accordingly, the U.S. Government retains a non-exclusive, royalty-free license to
publish or reproduce the published form of this contribution, or allow others to do
so, for U.S. Government purposes.

References
1. Alpert, B.: A class of bases in L2 for the sparse representation of integral operators.
SIAM J. Math. Anal. 24(1), 246 (1993)
2. Alpert, B., Beylkin, G., Gines, D., Vozovoi, L.: Adaptive solution of partial diﬀerential equations in multiwavelet bases. Journal of Computational Physics 182(1),
149 (2002)

262

R.K. Archibald et al.

3. Archibald, Fann, Shelton: Adaptive Discontinuous Galerkin Methods in Multiwavelets Bases. Journal of Scientiﬁc Computing (2008) (submitted)
4. Beylkin, G., Keiser, J.M., Vozovoi, L.: A new class of stable time discretization
schemes for the solution of nonlinear PDEs. Journal of Computational Physics 147,
362 (1998)
5. Cockburn, B., Shu, C.W.: The local discontinuous Galerkin method for timedependent convection diﬀusion systems. SIAM Journal on Numerical Analysis 35,
2440 (1998)
6. Cockburn, B., Shu, C.W.: Runge-Kutta discontinuous Galerkin methods for
convection-dominated problems. Journal of Scientiﬁc Computing 16(3), 173 (2001)
7. Coult, N.: Introduction to Discontinuous Wavelets. In: Cockburn, B., Karniadakis,
G.E., Shu, C.-W. (eds.) Discontinuous Galerkin Methods: Theory Computation
and Applications. Springer, Heidelberg (2000)
8. Davis, P.J., Polonsky, I.: Numerical Interpretation, Diﬀerentiation, and Integration.
In: Abramowitz, M., Stegun, I. (eds.) Handbook of Mathematical Functions. Dover
(1972)
9. Drake, Jones, Vertenstein, White III, Worley: Software Design for Petascale Climate Science. In: Bader, D. (ed.) Petascale Computing: Algorithms and Applications. Chapman & Hall/CRC, Boca Raton (2008)
10. LeVeque, R.J.: Numerical Methods for Conservation Laws. Birkhauser Verlag,
Basel (1990)
11. Nair, R.D., Thomas, S.J., Loft, R.D.: A discontinuous Galerkin transport scheme
on the cubed sphere. Monthly Weather Review 133(4), 814 (2005)
12. Nair, R.D., Thomas, S.J., Loft, R.D.: A discontinuous Galerkin global shallow
water model. Monthly Weather Review 133(4), 876 (2005)
13. Sadourny, R.: Conservative Finite-Diﬀerence Approximations of the Primitive
Equations on Quasi-Uniform Spherical Grids. Monthly Weather Review 100(2),
136–144 (1972)
14. Taylor, M.A., Tribbia, J.J., Iskandrani, M.: The spectral element method for the
shallow water equations on the sphere. Journal of Computational Physics 130,
92–108 (1997)
15. Williamson, D.L., Hack, J.J., Jakob, R., Swarztrauber, P.N., Drake, J.B.: A standard test set for numerical approximations to the shallow water equations in spherical geometry. Journal of Computational Physics 102, 211 (1992)

