Testing Line Search Techniques for Finite
Element Discretizations for Unsaturated Flow
Fred T. Tracy
Information Technology Laboratory
Engineer Research and Development Center (ERDC)
3909 Halls Ferry Road
Vicksburg, MS USA 39180
Fred.T.Tracy@usace.army.mil

Abstract. Unsaturated ﬂow in porous media is often modeled using
the ﬁnite element (FE) method. When employing an implicit version
of the computational equations resulting from the FE discretization, a
nonlinear system of equations is generated that must then be solved
by techniques such as Newton’s method. This paper reveals results of
the eﬀectiveness of three line search techniques when employed within
the framework of the approximate Newton method. The methods of a
bisection line search, a quadratic variation of the norm of the residual
line search, and a relaxation technique are considered, all in the context
of a parallel computing environment.

1

Introduction

Unsaturated ﬂow in porous media creates special diﬃculties for any computational model, including the ﬁnite element method [4]. Often, an implicit method
is used to prevent the need for extremely small time-steps. When this technique
is employed, a signiﬁcantly diﬃcult system of nonlinear equations is generated
from the discretization, often having millions of unknowns. A common solution
to this system of nonlinear equations is to use the approximate Newton method
[5]. Often, however, the computed change in the unknown variable (total head in
the case of ﬂow in porous media with constant density of the water) is too much,
so a globalization technique of some kind [6] must be employed. Globalization
can involve both line search algorithms and trust region methods. As it is not
always practical to consider all points inside a trust region to get the optimum
point, ways to limit the search have been developed. One such idea is the dog-leg
method [7]. However, the scope of this work is to consider only line search methods. The purpose of this paper is to show results of using the three line search
techniques of bisection, a quadratic variation of the norm of the residual, and
a relaxation technique on a test problem that has proven especially diﬃcult to
solve. Results were obtained from a research version of a three-dimensional (3-D)
ﬁnite element (FE) groundwater program developed at ERDC and running on
the Cray XT3 using 16 cores.
G. Allen et al. (Eds.): ICCS 2009, Part I, LNCS 5544, pp. 473–480, 2009.
c Springer-Verlag Berlin Heidelberg 2009

474

2

F.T. Tracy

Governing Equations

The version of Richards’ equation used in the ﬁnite element code is
∇ · (kr Ks · ∇φ) = η

∂φ
∂S
+ SSs
,
∂t
∂t

(1)

with
φ=h+z ,

(2)

where kr is the relative hydraulic conductivity, Ks is the saturated hydraulic
conductivity tensor, φ is the total head, η is the porosity, S is the saturation, Ss
is the speciﬁc storage, h is the pressure head, and z is the z coordinate. kr and
S are functions of h, thus creating the strong nonlinearity.

3

Finite Element Solution

The following equation represents the completely implicit Euler discretization of
the standard continuous Galerkin technique used in the study:
1
M un+1 · un+1 − un + K un+1 · un+1 = q un+1
Δt

,

(3)

where Δt is the time-step size; n is the time-step number; M is the mass matrix
as a function of u; un+1 is the vector of unknown total head at the nodes at
time-step, n + 1; and q is the vector of known ﬂow type terms at the nodes as a
function of u. Since M, K, and q are functions of the unknown vector, un+1 , the
nonlinearity is evident. The residual at the nodes as a function of u is therefore
r (u) = q (u) −

1
M (u) · [u − un ] − K (u) · u .
Δt

(4)

Using, (4), column j of the approximate Jacobian matrix can now be determined
by
ˆj − r un+1,k − Δuj e
ˆj
r un+1,k + Δuj e
Jjn+1,k+1 =
,
(5)
2Δuj
where un+1,k is the value of un+1 at the k th nonlinear iteration, Δuj is a small
ˆj is a vector containing all
change in the j th element of the vector, un+1,k , and e
th
zeroes except with a one in the j element. The linear system,
Jn+1,k+1 · δun+1,k+1 = −r un+1,k

,

(6)

can now be solved for the change in u, and the new value of un+1 at nonlinear
iteration, k + 1, now at least temporarily becomes
un+1,k+1 = un+1,k + δun+1,k+1 .

(7)

Testing Line Search Techniques for Finite Element Discretizations

4

475

Line Search Techniques

If δu ∞ becomes suﬃciently small, the nonlinear iteration has converged. Otherwise, the process must be continued in some way. Three techniques were considered in this study, and they will now be brieﬂy described.
4.1

Relaxation

Here, a parameter, β, where 0 < βmin ≤ β ≤ βmax ≤ 1, is used to reduce the
change in u from one nonlinear iteration to the next. That is,
un+1,k+1 = un+1,k + βk+1 δun+1,k+1 ,

(8)

where βk+1 is the value of β at nonlinear iteration, k+1. For this option, only one
value of β is considered in a given nonlinear iteration. Various values of β have
been considered [2]. In this study, β was started at βinit and increased by βadd
if δun+1,k+1 ∞ ≤ δun+1,k ∞ (that is, βk+2 = βk+1 + βadd ) and multiplied
by βreduce if δun+1,k+1 ∞ > δun+1,k ∞ (that is, βk+2 = βreduce βk+1 ). Care
was also taken not to go smaller than βmin or larger than βmax . Values that
were found to work well are βmin = 0.1, βmax = 1.0, βadd = 0.005, and
βreduce = 0.677. βinit varies depending on how aggressive the user chooses to
be. βinit was set to 0.2 in this study.
4.2

Bisection Line Search

This technique is a line search where βk+1 is successively reduced during the
given nonlinear iteration, k+1. First, using the notation, r un+1,k+1 = rn+1,k+1 ,
rn+1,k+1 2 is computed from (8) and (4) with βk+1 initially set to 1. If
rn+1,k+1 2 is greater than rn+1,k 2 , then βk+1 is reduced by one-half, and
(8) and (4) are again used to compute the residual. If the norm of this new
residual is smaller than rn+1,k 2 , the process ends. Otherwise, βk+1 is again
cut by one-half, and the above algorithm is repeated. After a relatively small
number of bisections (maximum of 10), the attempt at a line search for this
nonlinear iteration is discontinued, and the next time-step is started.
4.3

Quadratic Variation of the Norm of the Residual Line Search

Using the deﬁnitions,
q1 = r un+1,k

2

= rn+1,k

2

1
q2 = r un+1,k + δun+1,k+1
2
q3 = r un+1,k + δun+1,k+1

,
,

(9)

2
2

,

the norm of the residual is assumed to vary quadratically as
q = (2q1 − 4q2 + 2q3 ) ζ 2 − (3q1 − 4q2 + q3 ) ζ + q1 ,

(10)

476

F.T. Tracy

when 0 ≤ ζ ≤ 1. Also,

dq
dζ

= 0 at
ζ0 =

Now if

d2 q
dζ 2

3q1 − 4q2 + q3
.
4 (q1 − 2q2 + q3 )

(11)

> 0 and 0 < ζ0 < 1, then βk+1 = ζ0 and
un+1,k+1 = un+1,k + ζ0 δun+1,k+1 .

(12)

However, if this fails but q3 < q1 , then βk+1 = 1 and
un+1,k+1 = un+1,k + δun+1,k+1

(13)

th
is used. Otherwise, the (k + 1) nonlinear iteration is advanced one-fourth of
the way with βk+1 = 1/4 and
1
un+1,k+1 = un+1,k + δun+1,k+1 .
4

5

(14)

Test Problem with Analytical Solutions

The problem consists of a rectangular box-shaped soil sample with dimensions,
a × b × L, that is initially dry until water is poured at the top of the sample
(see the vertical cross-sectional view in Fig. 1). This 3-D problem has analytical
solutions [9,10], and it can be made arbitrarily diﬃcult by changing a parameter,
α. In this particular test, b is made small, so the two-dimensional (2-D) version
of the boundary conditions and analytical solution is used. The initial condition
is φ = hd + z, where hd is the pressure head of the soil when it is very dry.
The boundary condition on the sides and bottom are the same as the initial
condition, and the boundary condition on the top is
φ=

πx
1
ln eαhd + 1 − eαhd sin
+L ,
α
a

(15)

where x is the x coordinate. Also, kr is modeled by the quasi-linear equation
[1,8],
kr = eαh ,

(16)

and S varies linearly with kr [3,11] as
S − Sd
= kr ,
1 − Sd
where Sd is the saturation when the soil is very dry.

(17)

Testing Line Search Techniques for Finite Element Discretizations

477

Apply water at the top

✓
✏
❄❄❄❄❄❄❄❄❄❄❄❄❄❄
✻
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
L
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
q
❄
✛
✲
a
Fig. 1. Vertical cross-section of the test problem

5.1

Computational Details

The above described problem was run with a = 50 cm, b = 0.25 cm, L = 50 cm,
Ks = a diagonal matrix with each diagonal element being 0.1 cm day−1 , hd =
−50 cm, η = 0.45, Sd = 1/3, and Ss = 0. The 2-D cross-section in Fig. 1 was ﬁrst
divided into a grid of 200 × 1 × 200 cells with Δx = Δy = Δz = 0.25 cm, and
then each cell was divided into 6 tetrahedral elements, which is what the 3-D
FE groundwater program requires. Data sets for relative hydraulic conductivity
given in (16) and saturation modeled by (17) were then computed using 1001
values of pressure head and provided to the FE program input ﬁle. Inside the
program, these curves are treated as piecewise linear.
The linear solver that was used is BiCG-Stab. Before the linear system of
equations, Ax = b, as given in (6) is solved, it is normalized by
(FAF) F−1 x = Fb

(18)

ˆx = b
ˆ
Aˆ

(19)

or
where F is a diagonal matrix whose ith term is
Fii =

1
max (maxj |aij | , )

(20)

where aij is is the (ij)th component of A, and is a small number. After the
linear solve is completed, the ﬁnal solution is computed by
x = Fˆ
x

(21)

478

F.T. Tracy

Since the equations are normalized with most of the diagonal terms of A now
being 1, no further preconditioning is done in the BiCG-Stab solver.
5.2

Line Search Test Results

Table 1 shows nonlinear count results and timings for the ﬁrst time-step for diﬀerent values of α, Δt, and nonlinear iteration types when using a rather strong nonlinear convergence criterion of 10−5 for δun+1,k+1 ∞ . Each nonlinear iteration
requires at least one linear solve of (6) and a computation of δun+1,k+1 ∞ . The
bisection line search requires repeated calculation of the residual norm, r (u) 2 ,
which is computationally equivalent to computing the norm of the right-hand side
of (6). This is an element-by-element computation of (4). The quadratic line search
requires the computation of r (u) 2 at the middle and end of the Newton step.
The relaxation method does not require any extra computations of (4).
Each linear iteration in BiCG-Stab is dominated by two matrix-vector multiˆ where v represents utility temporary vectors. Both
plications of the type, Av,
ˆ
A and v are distributed over the parallel cores, thus requiring ghost node updating at strategic times using MPI. The linear solve is typically the dominant
computation.
The running times given in Table 1 do not precisely delineate the impact of the
diﬀerent factors. To get at least a clearer understanding of these timing results,
the number of linear iterations in BiCG-Stab for the ﬁrst ﬁve nonlinear iterations
Table 1. Nonlinear iteration count and time in seconds for the ﬁrst time-step for the
three line search types, two values of α, and three values of Δt
α cm−1

Δt (day)

Line search type Nonlinear iteration count Time (sec)

0.05
0.05
0.05

0.1
0.1
0.1

Bisection
Quadratic
Relaxation

7
14
42

3.27
5.18
12.20

0.05
0.05
0.05

0.01
0.01
0.01

Bisection
Quadratic
Relaxation

8
15
45

2.77
4.21
8.37

0.05
0.05
0.05

0.001
0.001
0.001

Bisection
Quadratic
Relaxation

5
12
41

2.24
3.33
6.81

0.2
0.2
0.2

0.1
0.1
0.1

Bisection
Quadratic
Relaxation

23
29
168

5.58
7.97
27.89

0.2
0.2
0.2

0.01
0.01
0.01

Bisection
Quadratic
Relaxation

12
18
52

3.51
4.73
9.08

0.2
0.2
0.2

0.001
0.001
0.001

Bisection
Quadratic
Relaxation

∞
17
46

4.27
7.83

Testing Line Search Techniques for Finite Element Discretizations

479

Table 2. Linear iterations required for the ﬁrst ﬁve nonlinear iterations for α =
0.05 cm−1 , the bisection method, and three values of Δt
Δt (day)

#1

#2

#3

#4

#5

0.1
0.01
0.001

63
24
7

44
15
4

50
13
3

30
10
1

3
6
1

of the ﬁrst time-step are tabulated in Table 2 for α = 0.05 cm−1 , the bisection
method, and the three valuers of Δt. These results show that the number of
linear iterations per nonlinear time-step is signiﬁcantly reduced when the timestep size is reduced, and this helps explain the reduction in the running times
in Table 1. For example, the reduction of running time from 3.27 sec to 2.77 sec
while the number of nonlinear iterations increased from 7 to 8 as the time-step
size is changed from 0.1 day to 0.01 day is explained by the linear iterations
going from 63 to 24, 44 to 15, 50 to 13, 30 to 10, and 3 to 6, respectively.

6

Conclusions and Further Research

Conclusions that can be drawn from the above results are as follows:
1. As α is increased, the number of nonlinear iterations for all three methods
increase.
2. The bisection method almost always was the most eﬃcient. However, it
stalled at an unpredictable time. It stalled because 10 unsuccessful bisections generated a very small change in total head. This failure was repeated
indeﬁnitely.
3. The relaxation method almost always was the least eﬃcient.
4. Signiﬁcant improvement in running time could potentially be achieved by
implementing a more sophisticated linear solver. This is an area of future
work.
5. Reducing the time-step size typically reduced both the number of nonlinear
iterations and the number of linear iterations per nonlinear iteration.
6. More sophisticated nonlinear solvers/globilization techniques should be investigated to improve robustness. The one nonlinear failure reported in this
paper has been observed in solving other diﬃcult problems. Further research
is needed.

Acknowledgment
This work was supported in part by a grant of computer time from the DoD
High Performance Computing Modernization Program.

480

F.T. Tracy

References
1. Gardner, W.: Some steady-state solutions of the unsaturated moisture ﬂow equation with application to evaporation from a water table. Soil. Sci. 85, 228–232
(1958)
2. Gill, P., Murray, W., Wright, M.: Practical Optimization, p. 319. Academic Press,
London (1981)
3. Irmay, S.: On the hydraulic conductivity of unsaturated soils. Econ. Transit., AGU
35 (1954)
4. Istok, J.: Groundwater Modeling by the Finite Element Method. AGU (1989)
5. Kelley, C.: Solving Nonlinear Equations with Newton’s Method. SIAM (2003)
6. Pawlowski, R., Shadid, J., Simonis, J., Walker, H.: Globalization techniques for
Newton-Krylov methods and applications to the fully coupled solution of the
Navier-Stokes equations. SIAM Review 48, 700–721 (2006)
7. Pawlowski, R., Simonis, J., Walker, H., Shadid, J.: Inexact Newton dogleg methods.
SIAM J. Numer. Anal. 46, 2112–2132 (2008)
8. Se´
gol, G.: Classic Groundwater Simulations, p. 352. Prentice Hall, Englewood Cliﬀs
(1994)
9. Tracy, F.: Clean two- and three-dimensional analytical solutions of Richards equation for testing numerical solvers. Water Resours. Res. 42, W08503 (2006)
10. Tracy, F.: Three-dimensional analytical solutions of Richards’ equation for a boxshaped soil sample with piecewise-constant head boundary conditions on the top.
J. Hyd. 336, 391–400 (2007)
11. Warrick, A.: Soil Water Dynamics, pp. 247–258. Oxford University Press, Oxford
(2003)

