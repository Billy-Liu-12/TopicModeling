A New Algorithm for Image Resizing Based on Bivariate
Rational Interpolation*
Shanshan Gao1,2, Caiming Zhang1,2, and Yunfeng Zhang2
2

1
School of Computer Science and Technology, Shandong University, China
School of Computer Science and Technology, Shandong Economic University, China
gsszxy@yahoo.com.cn

Abstract. A new method for image resizing by bivariate rational interpolation
based on function values and partial derivative value is presented. When an
original image is resized in an arbitrary ratio, the first step of the method is constructing the rational interpolation fitting the original surface where the given
image data points are sampled from. The resized image can be obtained just by
re-sampling on the interpolation surface. The algorithm presents how to estimate
the partial derivative value of image data point needed for rational interpolation,
and at same time considers the adjustment of tangent vector of the edge point to
keep edges well defined. Various experiments are presented to show efficiency
of the proposed method and that the resized images can preserve clear and sharp
borders and hence offer more detail information in real application.
Keywords: Rational Interpolating Spline, Image Resizing, Shape Preserving.

1 Introduction
The problem of resizing images is fundamental and important in the fields such as
medical imaging, remote sensing and some software of image processing. This problem
arises frequently whenever a user wishes to get better view of a given image, then
image resizing methods which can obtain the resized image with higher precision and
good quality are required.
Usually, if we can get the interpolating surface fitting the original surface where the
given image data points are sampled from, the resized image can be obtained just by
re-sampling on the interpolation surface. The interpolation methods can be commonly
divided into two types: polynomial interpolation and rational interpolation. At present
many polynomial interpolations are popular in image processing application because of
their simple implementation. Such as pixel replication or bilinear[1] interpolation. But
the visual results of these interpolation methods all suffer from unacceptable effect
(e.g. mosaics, aliasing, blocking) to some extent, especially on image edges. In order to
*

Project supported by the National Nature Science Foundation of China (No. 60703081,
60673003), the National Nature Science Foundation of Shandong Province (No. Y2007G59),
and the Visiting Scholar Foundation for excellent young teachers from colleges of Shandong
Province.

G. Allen et al. (Eds.): ICCS 2009, Part II, LNCS 5545, pp. 770–779, 2009.
© Springer-Verlag Berlin Heidelberg 2009

A New Algorithm for Image Resizing Based on Bivariate Rational Interpolation

771

avoid these undesirable defects and obtain good smoothness, a lot of other interpolations are used, such as Bézier[2] or B-spline[3] interpolation, a locally adaptive resizing
algorithm[4], resizing method based on vector quantization approximation for magnifying image by a factor of 2[5]. But unfortunately, the results gotten by these methods
usually have fuzzy effect in the sharp region, zigzag stripes or blocking effect. Then the
visual sharpness of the enlarged image can’t match the quality of the original image.
This is because most of these methods are based on a simple polynomial model with
certain continuity, while preserving the low frequencies content of the source image,
but not being able to enhance high frequencies, many details are lost.
However, rational function approximation is a typical non-linear approach, which
can reflect the characteristics of the interpolated image surface better, especially it can
reflect the mutation between the adjacent image pixels, and hence can keep clearness of
edges, describe more complex shapes. References[6-7] use mixed form of polynomial
and rational function: using Newton-Thiele as interpolation function to zoom the image
and achieved good results. But the interpolation must be used on the whole block with
complex computation.
Therefore, in this paper, bivariate rational interpolation model based on function
values and partial derivative values is used to fit the original surface of the given discrete image. The zoomed image is obtained just by resampling on the interpolation
surface. The partial derivative value of image data point needed for rational interpolation is computed and adjusted to keep shape preserving. In order to maintain the edge
property, the adjustment of tangent vector of the edge is presented at same time.

2 Bivariate Rational Interpolation Based on Function Values and
Partial Derivative Value
Digital image is a set of color data points on 2D plane. These data are not random, and
not complete structural either, because these data are affected by many factors during
the acquisition process such as the material of object, light intensity and angle and so
on. So the value of adjacent data may have gradual change or have abrupt change. If
polynomial is used to interpolate the image data points, it can reflect the gradual change
very well because of its form and continuity, but it is inability for the abrupt change.
Considering the property of the rational interpolation, we choose bivariate rational
interpolation as interpolation function[8], which has the following advantages:1) pass
through the known data points; 2) simple and explicit expression; 3) The expression is
piece wised, each piece has its parameters, so it is easy for adjusting locally. The concrete form is described as follows:
Let
Ω
:[a,b;c,d]be
the
plane
region,
and
∂Pi , j ∂Pi , j
be
a
given
set
of
data
points,
where
{( x , y , P ,
,
), i = 1, 2," n; j = 1, 2," m}
i

i

i, j

∂x

∂y

a = x1 < x2 < " < xn = b and

c = y1 < y2 < " < yn = d

are the knot spacings,

∂Pi , j ∂Pi , j represent
∂P( x, y) ∂P( x, y) at the point ( x , y ) respectively.
,
P( xi , y j ),
,
i
j
∂x ∂y
∂x
∂y
Let hi = xi +1 − xi , l j = y j +1 − y j , and for any point ( x, y) ∈ [ xi , xi +1 ; y j , y j +1 ] in the
Pi , j ,

772

S. Gao, C. Zhang, and Y. Zhang

(x,y)-plane, and let θ = x − xi and η = y − y j . First, for each y = y j , j = 1, 2" m , conhi

lj

struct the x-direct interpolating curve Pi*,j ( x ) in [ xi , xi +1 ] ;this is given by

Pi*,j ( x) =

pi*, j ( x)
qi*, j ( x)

, i = 1, 2" n − 1

(1)

Where pi*, j ( x ) = (1 − θ )3 α i*, j Pi , j + θ (1 − θ ) 2Vi *, j + θ 2 (1 − θ )Wi *, j + θ 3 β i*, j Pi +1, j

qi*, j ( x) = (1 − θ )α i*, j + θβ i*, j
and Vi *, j ( x ) = (2α i*, j + β i*, j ) Pi , j + hiα i*, j

∂Pi , j

,

∂x
∂Pi +1, j
*

Wi *, j ( x ) = (α i*, j + 2 β i*, j ) Pi +1, j − hi βi , j

∂x

.

with α i*, j > 0, βi*, j > 0 .This interpolation is called the rational cubic interpolation based
on function values and derivatives which satisfies
Pi *, j ( xi ) = Pi , j , Pi ,*j ( xi +1 ) = Pi +1, j , Pi ,*j ' ( xi ) =

∂Pi , j
∂x

, Pi ,*j ' ( xi +1 ) =

∂Pi +1, j
∂x

*
i, j

Obviously, the interpolating function P ( x ) on [ xi , xi +1 ] is unique for the given

∂Pr , j

*
*
, r = i, i + 1) and positive parameters α i , j , β i , j .
∂x
Using the x-direction interpolation function, Pi *,j ( x ) , i = 1, 2," n − 1; j = 1, 2," m

data ( xr , Pr , j ,

defines the bivariate rational interpolating function in [ x1 , xn ; y1 , ym ] .For each
pair(i,j), i = 1, 2," n − 1 and j = 1, 2," m − 1 , let α i , j > 0, β i , j > 0 , define the bivariate
interpolating function Pi , j ( x, y) on ( x, y ) ∈ [ xi , xi +1 ; y j , y j +1 ] as follows

Pi , j ( x, y ) =

pi , j ( x, y )
qi , j ( y )

, i = 1, 2," n − 1; j = 1, 2" m − 1

Where
pi , j ( x, y ) = (1 − η )3 α i , j Pi *, j ( x ) + η (1 − η ) 2 Vi , j + η 2 (1 − η )Wi , j + η 3 β i , j Pi *, j +1 ( x)

qi, j ( y) = (1 −η )αi , j + ηβi , j
and

Vi , j = (2α i , j + β i , j ) Pi *, j ( x) + l jα i , j fi *, j ( x, y j )
Wi , j = (α i , j + 2 β i , j ) Pi *, j +1 ( x ) − l j βi , j fi *, j +1 ( x, y j +1 )

(2)

A New Algorithm for Image Resizing Based on Bivariate Rational Interpolation

773

∂P
+ θ i +1, s ,θ ∈ [0,1], s = j, j + 1 .It is obvious that
∂y
∂y
∂P
f i *,s ( x, ys ) satisfy fi *,s ( x, ys ) = r , s , r = i, i + 1, s = j , j + 1 .
∂y
The term Pi , j ( x, y ) is called the bivariate rational interpolation based on function

with

fi*,s ( x, ys ) = (1 − θ )

∂Pi ,s

values and partial derivative value which satisfies
Pi , j ( xr , ys ) = P ( xr , ys ),

∂Pi , j ( xr , ys )
∂x

=

∂Pr , s ∂Pi , j ( xr , ys ) ∂Pr ,s
,
=
, r = i, i + 1, s = j , j + 1
∂x
∂y
∂y

It is easy to understand that the interpolating function Pi , j ( x, y ) on [ xi , xi +1 ; y j , y j +1 ] is
unique for the given data ( x , y , P , ∂Pr , s , ∂Pr , s , r = i, i + 1, s = j , j + 1) and paramer
s
r ,s
∂x ∂y
ters α i*, j , β i*, j , α i*, j +1 , βi*, j +1 , α i , j , βi , j .

3 Image Resizing
Suppose that I m ,n is a original image with m × n image data points Pi , j ,
i = 0,1,..., m − 1, j = 0,1,..., n − 1 ,. These image data are sampling values being regarded
as taken from a surface P( x, y) . The best way to get a resized image with good quality
is to resample from P( x, y ) . Hence the problem of resizing an original image becomes
a problem of constructing fitting surface P( x, y) using the sampling points Pi , j ,

i = 0,1,..., m − 1, j = 0,1,..., n − 1 .
P1 = {Pi , j , 0 ≤ i ≤ m − 1, 0 ≤ j ≤ n − 1}
Firstly,
matrix

is

expanded

to

P2 = {Pi , j , 0 ≤ i ≤ m, 0 ≤ j ≤ n} , so the values of Pij (i = m or j = n) are added.
Outer-interpolation
method
is
used,
then
let
,
,
Pi , n = 2 Pi , n −1 − Pi , n − 2 (0 ≤ i ≤ m − 1)
Pm, j = 2 Pm −1, j − Pm − 2, j (0 ≤ j ≤ n − 1)
Pm,n = Pm,n−1 + Pm−1,n − Pm−1,n−1 . At last interpolation surface P( x, y) are constructed based on P2 .On
each
interval
[ xi , xi +1 ]×[ yi , yi +1 ],
i = 0,1,..., m − 1, j = 0,1,..., n − 1 , a bivariate rational interpolating spline surface Pi , j ( x, y ) is
constructed. To construct Pi , j ( x, y ) , see Fig1, the
function value Pk ,l , first partial derivatives

( P 'k ,l ) x and ( P 'k ,l ) y k = i, i + 1, l = j, j + 1 , and
the

parameters α i*, j , βi*, j , α i*, j +1 , βi*, j +1 and

α i , j , βi , j need to be known. The function value

˖

˖

˖

˖

Pi,j+1

Pi+1,j+1

Pi,j

Pi+1,j

… Pi-1,j

…

Pi,j-1

˖

˖

˖

˖

Fig. 1. construction of Pij(x,y)

774

S. Gao, C. Zhang, and Y. Zhang

Pk ,l is the pixel value of original image, α i*, j , βi*, j , α i*, j +1 , βi*, j +1 and α i , j , βi , j can be
determined according to the condition mentioned above and the practical need. By
massive
experiments,
we
find
that
if 1 ≤ α i , j , α i*, j , α i*, j +1 ≤ 1.5 and
0.1 ≤ β i , j , β i*, j , β i*, j +1 ≤ 1.0 , the result of the method will be better. Now we discuss the

computation of ( P 'k ,l ) x and ( P 'k ,l ) y .
In order to estimate the first order partial derivative ( Pi ′, j ) x of Pi , j , Pi −1, j , Pi , j and

Pi +1, j are generally used to construct fitting curve in x-direction. In similar,
points Pi , j −1 , Pi , j and Pi , j +1 can be used to estimate ( Pi′, j ) y . Here we take ( Pi ′, j ) x as an
example to introduce the estimating method for the first order partial derivative
of Pi , j . A quadratic polynomial interpolating curve is constructed by Pi −1, j , Pi , j and

Pi +1, j and the first order partial derivative is gotten from the curve to approximate ( Pi ′, j ) x .
( Pi′, j ) x =

Δxi ΔPi −1, j + Δxi −1ΔPi , j
Δxi −1 + Δxi

=

Δxi
Δxi −1
ΔPi −1, j +
ΔPi , j
Δxi −1 + Δxi
Δxi −1 + Δxi

Where Δx = x − x , ΔP = Pi +1, j − Pi , j .
i
i +1, j
i, j
i, j
Δxi
Because digital image can be denote as regular data field, intervals between two
neighbor points are equal, so:

( Pi′, j ) x = ( Pi +1, j − Pi −1, j ) / 2

(3)

For boundary data points P1, j and Pn , j , we have

Pi′( xi −1, j ) =

xi −1, j − xi +1, j + xi −1, j − xi , j
xi −1, j − xi +1, j

ΔPi −1, j +

xi −1, j − xi , j
xi +1, j − xi −1, j

ΔPi , j = 2ΔPi −1, j − ( Pi′, j ) x

then ( P1,′ j ) x = 2ΔP1, j − ( P2,′ j ) x . In similar: ( Pn′, j ) x = 2ΔPn −1, j − ( Pn′−1, j ) x
Rational spline curve based on function and partial derivative constructed directly with
(3) sometimes can’t get the shape that given data points advised, which is not acceptable
in real application. For example, if the link
lines of Pi − 2, j , Pi −1, j , Pi , j and Pi +1, j is a planar
(ximid,j,Pimid,j)
convex polygon, see Fig2, In order to keep
shape preserving, the curve P interpolated to
P
Q
Pi , j , Pi , j ( Pi ′, j ) x and Q interpolated to Pi −1, j ,
Pi-1,j

Pi, j ( Pi′−1, j ) x must be in the convex region of
points Pi −1, j , Pimid , j and Pi, j . If P and Q are out
of the region we need adjust the derivative
computed by (3). We can process as follows:

Pi-2,j

Pi,j

Pi+1,j
Fig. 2. Convex polygon

A New Algorithm for Image Resizing Based on Bivariate Rational Interpolation

775

P = a1 x 2 + b1 x + c1
Where a =
1

Pi −1, j − Pi , j − ( P 'i , j ) x
2 xi , j − 1

, b1 = ( P 'i , j ) x − 2a1 xi , j • c1 = Pi , j − a1 xi2, j − b1 xi , j

In similar: Q = a2 x 2 + b2 x + c2 .
The line between ( xi , j , Pi, j ) and ( xi +1, j , Pi +1, j ) is:

P1 = ( Pi +1, j − Pi , j )( x − xi , j ) + Pi , j = A1 x + B1
A line between ( xi − 2, j , Pi − 2, j ) and ( xi −1, j , Pi −1, j ) is:

P2 = ( Pi −1, j − Pi −2, j )( x − xi −1, j ) + Pi −1, j = A2 x + B2 Let ( ximid , j , Pimid , j ) denote the intersection point of these two lines, see Fig2. Adjusting ( Pi′, j ) x according to the cross
point of interpolation curve P and line P1. The cross point can be computed by the
following formula:

P − P1 = a1 x 2 + b1 x + c1 − ( Pi , j − Pi −1, j )( x − xi −1, j ) − Pi −1, j = 0

(4)

Formula (4) has at least one root, namely the interpolating curve and line P1 will intersect at the end point ( Pi , j , xi , j ) . If there is one root named x p which is not end point
and satisfies ximid , j < x p < xi , j , it shows that curve P is not in the convex region of
points Pi −1, j , Pimid , j and Pi , j , see Fig2. As well known, if P is tangent with line P1, P
is in the convex region mentioned above. So the shape preserving can be satisfied.
Resolving system of equations:

⎧ A1 x + B1 = a1 x 2 + b1 x + c1
then ( Pi′, j ) x is gotten.
⎨
2
a
x
b
A
+
=
1
1
⎩ 1
In similar, we can get ( Pi ′−1, j ) x to make interpolation curve Q tangent with line P2, and
then make Q in the convex region of three points Pi −1, j , Pimid , j and Pi , j .
During image interpolation process, keeping clearness of edges is necessary. If interpolate with (3), although rational spline can avoid the blurred phenomenon at a
certain extent, the edges may be also blur in some case. When a data point Pi is on the
edges of digital image, the gray values of its adjacent data points Pi −1 and Pi +1 have
high difference, we call it a “saltation”. Although rational spline can process these
“saltation” phenomenon in certain degree, but for some cases that the difference of gray
values is comparatively large (such as from white to black), interpolation error will also
occur using rational spline. So in this paper, we present an adjusting method for derivative of data points. (3) can determine the derivative of data points. When the gray
values of adjacent points have high difference, the derivative of edge points is also
high. So we use gradient method to estimate a pixel point is on edge or not. In discrete
case, we denote gradient of a pixel as follows:
G ( xi , yi ) = df ( xi ) + df ( yi )

776

S. Gao, C. Zhang, and Y. Zhang

where df ( xi ) = f ( xi +1 ) − f ( xi ) .
df ( yi ) = f ( yi +1 ) − f ( yi )
In this paper, we give a threshold value to decide a pixel is on edge or not. Threshold
value can be taken as th ∈ [30, 40] . If the gradient of a pixel is more than given
threshold value, we denote it an edge pixel.
Tangent vector can affect the convex degree, so adjusting direction and length of
tangent vector on edges to adjust interpolating curve and shape of surface. The blurred
phenomenon on the edges of image can be improved greatly. For rational spline interpolation, derivatives of data points are expected to change smoothly. For the edge of
image has close relation with the “inner pixels”, the derivatives of edge points can be
adjusted by weighted of the derivatives of boundary points and the derivatives of points
in the around adjacent region. If a pixel point is a boundary point, we use the following
formula to adjust the tagent of data points which are on the boundary of image:

Pi , j′ ( xi ) = α1 Pi −1, j′ ( xi ) + α 2 Pi , j′ ( xi )
Where α1 and α 2 are both tunable parameters. For simplification, denote
α1 = α 2 = 1/ 2 .
Then on the interval [ xi , xi +1 ]×[ yi , yi +1 ], the bivariate rational interpolating spline
surface Pi , j ( x, y ) based on function value and partial derivative value can be defined
as (2). All the surfaces Pi , j ( x, y ) are put together to form the fitting surface P(x,y).
In order to get a resized m′ × n′ CT image I ′( x′, y′) from the original m × n CT
image I ( x, y) ,where m ' = m × s , n ' = n × s , we just need to get more samples by increasing the sample density in accordance with the interval 1/s in x-direction and
y-direction of original image respectively to get the image zoomed.

4

Experiments

In this section, the efficiency of the new method is compared with bilinear and bi-cubic
interpolation methods, respectively. The new method has been generalized to work
with some classical images, such as Lena, Girl, House, GoldHill and peppers and so on,
and the results of resizing different part of image Lena with the magnification factor
3*3 and 5*5 respectively, see Fig3 and Fig4, will be taken as examples to show the
comparison between the different methods, where image in (a) is original part of image
Lena, image in (b) is created by bilinear interpolation to the original image data points,
the one in (c) is created by bi-cubic interpolation, the one in (d) is created by the new
method. From the images (b)-(d) show that image in (d) has better quality than images
in (b)-(c). Fig5 shows another comparison working on the bird image. It is obvious that
new method is implemented without producing the so-called mosaics or blocky effect,
and the results maintain clearness of the image, including edges, hence offers more
detail information. When the image is enlarged by a larger factor, the new method can
still present better visual effect.

A New Algorithm for Image Resizing Based on Bivariate Rational Interpolation

777

(a) Part of image Lena
(b) Bilinear interpolation

(c) Bicubic interpolation

(d) New method

Fig. 3. Enlarging for part of image Lena by 3*3

Fig. 4. Enlarging for part of image Lena by 5*5

For a more systematic analysis for the new method, the peak signal-to-noise ratio
(PSNR) is used for comparison. PSNR is defined as

∑ 255
∑ (I − I

2

PSNR = 10log10 (

ij

ij

0
ij

ij

)2

)dB
.

778

S. Gao, C. Zhang, and Y. Zhang

(a) Bird

(b) Bicubic interpolation

(c) New method

Fig. 5. Enlarging for part of image Bird by 10*10

Where I0is the original image and I denotes the recovered image. Firstly, we shrink a
selected set of images by 2* 2 using the bilinear interpolation, then magnify by the
same factors using the new method and bicubic interpolation respectively. So the
original image I0is just the given image, and I is the image gotten after magnifying.
Then the PSNR is computed and shown in Table1.
Table 1. PSNR Analysis
Images

Algorithms
Bicubic
New method

Girl
25.472
27.175

Goldhill
24.910
25.673

House
23.285
25.529

Lena
24.503
26.039

peppers
25.131
26.871

Besides, we undergo another test. Shrink the selected set of images above by 2* 2,
magnify by the same factor, and shrinking and magnifying used the same method. The
PSNR is computed and shown in Table2.
Table 2. PSNR Analysis
Images

Algorithms
Bilinear
Bicubic
New method

Girl
25.883
27.490
25.560

Goldhill
27.311
27.499
27.910

House
27.532
25.038
27.188

Lena
28.293
28.293
29.866

peppers
27.367
26.413
30.936

As shown in the Tables, the new algorithm improves the PSNR for all cases. We
believe that it is due to a denoising feature of the algorithm. The form of rational interpolation, the property of shape preserving and the adjustment on the edgy area are all
the reasons for the high quality of the resized image.
The basic algorithm for gray scale pictures can be easily generalized to the case of
RGB colored digital images. Three color value R, G, B can be denoted as interpolation

A New Algorithm for Image Resizing Based on Bivariate Rational Interpolation

779

points for rational interpolation respectively, the zoomed image can be obtained by
using the interpolation three times.

5 Conclusion
Image resizing by via standard polynomial interpolation methods usually lose more
image details, which produces the so-called mosaics or blocky effect, and the edges of
zoomed image is blurring. When the magnification factor is bigger, this effect is more
evidence. As an important non-linear numerical analysis tool, rational interpolation
method can describe the value relation of adjacent pixels better. In this paper, bivariant
rational spline function being of advantage to preserving the mutation of the image is
used as interpolation function to fit the original surface of the given discrete image.
High frequency part of image on the region edge is preserved by adjusting the partial
derivative of image data points. Comparing with traditional algorithms, the quality of
resized image can be improved greatly with simple computation and arbitrary magnification factor including integer and fractional factor.

References
1.
2.
3.

4.
5.
6.
7.

8.
9.

Castleman Kenneth, R.: Digital image processing. Tsinghua University Press, Beijing
(1998)
Qingjie, S., Xiaopeng, Z., Enhua, W.: A method of image zooming in based on Bézier
surface interpolation. Journal of Software 10(6), 570–574 (1999)
Zhaoxia, Y., Feng, L.: Guan Lutai1 Image enlargement and reduction with arbitrary accuracy through scaling relation of B-spline. Journal of Computer Aided Design & Computer
Graphics 13(9), 824–827 (2001)
Battiato, S., Gallo, G., Stanco, F.: A locally adaptive zooming algorithm for digital images.
Image and Vision Comput. 20(11), 805–812 (2002)
Chang, C., et al.: An image zooming technique based on vector quantization approximation.
Image and Vision Computing 23, 1214–1225 (2005)
Min, H., Yousheng1, Z.: Image zooming based on Thiele’s rational interpolation. Journal of
Computer Aided Design &Computer Graphics 15(8), 1004–1007 (2003)
Min, H., Jieqing, T., Xiaoping1, L.: Method of image zooming based on bivariate vector
valued rational interpolation. Journal of Computer Aided Design & Computer Graphics 16(11), 1496–1500 (2004)
Duan, Q., Zhang, H., Twizell, E.H.: A Bivariate Rational Interpolation with Symmetric
Bases. Journal of Applied Mathematics and Computation 179(1), 190–199 (2006)
Zhang, Y., Duan, Q., Twizell, E.H.: Convexity control of a bivariate rational interpolating
spline surfaces. Computers & Graphics 31, 679–687 (2007)

