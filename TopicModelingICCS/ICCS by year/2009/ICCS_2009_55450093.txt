A Mathematical Modeling Module with System
Engineering Approach for Teaching Undergraduate
Students to Conquer Complexity
Hong Liu and Jayathi Raghavan
Embry-Riddle Aeronautical University
600, S. Clyde Morris Blvd, Daytona Beach, FL, 32114
liuho@erau.edu, raghavaj@erau.edu

Abstract. This paper presents a mathematical modeling module for ODE
courses. The module uses light-weight systems engineering approach to promote the competency of undergraduates to overcome the complexity in applied
mathematics problems. The mathematics training of undergraduates in most
colleges is limited to solving applications with a couple of variables in few
steps of computations. Once faced with problems beyond that level of complexity, they are not only challenged to plan a scheme for finding solutions, but also
to provide justification for their answers. This module combines an iterative
modeling process with the compartmental analysis methodology to leverage
these challenges. Verification and validation techniques are introduced for assuring the soundness of answers. The query-based process forces the students to
trace critical mathematics equations to the corresponding phenomena of the
problem under consideration. Examples within the module are arranged with
incremental complexity. Stella is used as a modeling and simulation tool
Keywords: Compartmental Analysis, Validation and Verification, QueryBased Modeling Process, Kolb Cognitive Complexity.

1 Introduction
The mathematics training of undergraduate students in most colleges is too simplistic
and does not train students to deal with more complex applications. Simplistic problems usually involve limited number of variables with very few steps of computations. Once faced with problems beyond that level of complexity, they are challenged
to plan their scheme to solve it. Even if they manage to find the solution, most students are unable to justify their answer. This module combines a mathematical modeling (MM) process with the compartmental analysis methodology to deal with these
challenges. The case studies in this module demonstrate how to divide a complex
problem into smaller problems at a level comprehensible for our students. The models
in each case study are organized with increasing complexity so that students can
incrementally progress from simple to more complex applications. A new model is
obtained from previous ones by gradually relaxing unrealistic assumptions and considering additional factors [9] and [10]. Verification and validation (V&V) techniques
G. Allen et al. (Eds.): ICCS 2009, Part II, LNCS 5545, pp. 93–102, 2009.
© Springer-Verlag Berlin Heidelberg 2009

94

H. Liu and J. Raghavan

[7] are introduced to ensure the validity of the answers. Instructive questions are designed to guide students to obtain their own answers and force them to trace critical
mathematics equations to the corresponding phenomena of the problem under
consideration. With the use of appropriate computational tools, students can obtain
numerical solutions for the complicated system of equations that they cannot solve
analytically [1]. We choose Stella by ISEE systems [3] and [4] as our main modeling
and simulation tool. This module illustrates to students how mathematics rigor can be
combined with visual intuitiveness of computational tools to obtain insightful answers
to mathematical applications.

2 Outcomes and Assessment Plans
The objectives of the module are as follows: 1: Teach students basic modeling methodology and process. 2: Train students to use tools to model an application incrementally. 3: Introduce the concepts of validation and verification. 4: Cultivate students’
ability to relate their answers to the insightful observations to the applications. 5:
Demonstrate the power of mathematics as a scientific language. The original module
outlined the outcomes for the knowledge, skills and competency (KSC) of the module, described the Kolb Complexity level defined in [11], and provided an assessment
plan [2] and [6] associated with outcomes. It is omitted here due to space limitation.
The summative evaluation consisted of 5 survey questions associated with each of the
5 objectives mentioned above and two questions relating to the overall feedback of
the module delivery and the team projects.

3 Mathematical Modeling Process
Mathematical Modeling is an interdisciplinary subject that applies systems engineering principles to mathematical applications. It provides the methodology and the
process to transform application problems to mathematical problems. A mathematical
model uses mathematical language to describe a system. There are several types of
mathematical models and modeling methodology. Scientists and engineers often
model two types of changes: a continuous quantitative change such as change of velocity, or a discrete qualitative change such as changing traffic lights. The continuous
phenomenon is typically modeled by differential equations; and the discrete phenomenon is typically modeled by state machines or graphs. We would like to focus on
the differential equation models of continuous phenomena.
Every branch of systems engineering follows a process and some kind of methodology to model a system. We present an iterative modeling process as illustrated by
the schematic diagram Fig. 1. It is a recommended general framework for working
through a problem from model formulation to answer justification. The process consists of two reverse loops. The counterclockwise loop indicated by solid arrows is
called Problem Solving Loop (PSL) and the clockwise loop indicated by dotted arrows is called answer justifying loop (AJL). The steps in both the loops are to be iterated until a satisfactory answer to the original problem has been reached.

A Mathematical Modeling Module with System Engineering Approach

95

PSL1: Identification of Facts, Assumptions and Invariants. What are the relevant
factors; such as known or unknown quantities and their units? What are the invariants; such as physics laws, etc.? These invariants are called conceptual models and
are observable from domain knowledge of the concerned application or simple common sense. It can be described in natural language such as English. What are the assumptions that the conceptual model is based on? How realistic are those assumptions
ranging from most idealistic to most realistic? What are the tradeoff decisions between the fidelity of the model and the easiness to find solutions?

Solution /
Simulation

PSL1 Identification of Facts,
Assumptions & Invariants

AJL3 Validating

Conceptual
Model
PSL2 Translating
Text to Math

AJL1
Observing

PSL4 Answering

Problem

PSL3 Computing
Symbolic/Numerically

Math Model
AJL2 Verifying

Fig. 1. The counterclockwise loop PSL and clockwise loop (dotted arrows) AJL

PSL2, Translating the Identifications above to Mathematical Expressions. Specify a coordinate or reference frame system to indicate each known or unknown
quantities as parameters and variables. Use a table to map each mathematical variable,
parameter to its designated quantity, positive direction, and unit. Translate the conceptual models to mathematical models using the mathematical notations specified
above. The symbolic representations of the conceptual models lead to primitive
mathematical models.
PSL3, Computing Symbolically or Numerically.What type of equation is it
(e.g. linear or nonlinear), does it have a solution, and is the solution unique? Is it possible to obtain exact analytic solution or is only numerical solution possible? What
tools and programming languages could be used to obtain the solutions?
PSL4, Answering. Does the problem require a functional relationship or a particular
numerical answer? A functional relationship may be answered by an analytic function, a graph, or a simulation by a computational tool.
AJL1, Observation. What are the observable facts that are related to the answers in
special points such as initial, average, median, or terminal? What is the long term
trend? Can the answers be used to explain the phenomenon in terms of the domain

96

H. Liu and J. Raghavan

knowledge of the application problem? In most scientific or engineering fields, it depends on available data.
AJL2, Verification. Verification is the action to check whether the analytical solutions are correct or whether the numerical solutions approximate the exact ones within
a controlled range of error. Is there any analytic way to check the answers? If numerical solution is given, what is the relative accuracy? Is it possible to obtain analytic
solution in some special cases to check the numerical solution? For example, is it
possible to use phase plane equation to check the ratio of two related variables of numerical solution? Is the algorithm correct and how can it be checked? Is the sign or
magnitude correct and how can they be checked?
AJL3, Validation. Validation is the task of checking if the assumptions of the model
are based on sound domain knowledge of the problem and if the essences of problem
are properly formulated by the model. Do the resulting equations correctly model the
application problem? How can the assumptions be justified? Are there any assumptions highly unrealistic and can they be relaxed so as to improve the fidelity of the
model? Do the units on both sides of the equations match? Is it possible to get an intuitive understanding of some qualitative answers? If so, does the model make sense
by simply observing the qualitative relationships of variables? What are the special
case scenarios of your model so that it reduces to one of the known basic models?

4 Compartment Analysis
Stella meta-models embody the compartment analysis methodology. To help students
understand Stella diagrams, the original module of this lecture started with the introduction of the basic idea of Stella. Then, we discussed the conceptual model of single
compartment system. Due to space limitations, this paper only presents the conceptual model of multiple compartment system and two examples, with one focusing on
the compartmental methodology and the other on the process.
Most natural or artificial system is composed of components each of which fulfills
certain functionality and interacts with others in certain patterns. A well organized
component can be abstracted as a black box, where only the inputs from and outputs
to the other components or the environment matter to the problem under consideration. We define such a component of a system as a compartment [5]. The methodology of modeling and analyzing a system as functionally decomposed compartments,
according to their interacting patterns is called compartmental analysis. Since only
inputs and outputs matter, each of them can be treated uniformly and systematically
as follows. Let x1, x2,… xn be the n unknown compartmental variables that are functions of time t, inputii, outputii represent the input from and output to the environment,
inputji, outputij, represent the input from the j-th compartment to the i-th compartment
and the output from the i-th compartment to the j-th compartment respectively that are
possibly functions of time t, where 1 ≤ i ≤ n and 1 ≤ j ≤ n. Then, Fig. 2. describes the
quantitative exchange of the compartmental variables xi to other compartments and
environment.

A Mathematical Modeling Module with System Engineering Approach

97

Dependent variable of time
for the quantitative description of
the i-th Compartment Variable
(CV), denoted as

xi

Fig. 2. Diagram for the i-th compartment of a system

Only the inputs and outputs contribute to the quantitative changes of the CVs.
The rate of change of the i-th CV over unit time = The i-th CV now –The i-th CV a
unit time ago. That is:

dxi
=
dt

n

∑ [input

ji

(t ) − outputij (t )] where 1 ≤ i ≤ n,

(1)

j =1

Since there are n similar equations corresponding to each of the n compartments,
we obtain an n×n system of equations along with the n initial conditions.
Example 4.1. A large tank holds 1000 L of brine solution of salt with concentration 1
Kg/L. A brine solution with low concentration of salt begins to flow into the tank at a
constant rate of 4 L/min to dilute the resolution and the well stirred resolution flows
out of the tank at the same rate of 4 L/min. If the solution of the brine flowing to the
tank has concentration of 0.2 Kg/L, determine when the concentration of the salt of
the brine will be diluted to 0.6 Kg/L. What is the concentration of the brine after very
long time?
Solution. The focus of this example is the basic idea of compartmental analysis, so,
we skip many process details and calculations. We find that the variables are the independent variable t: time and the compartment variable x(t): the amount of pure salt
at time t. We observe that the volume V of the brine in the tank is invariant since the
rate at which the solution flows in is equal to the rate at which the solution flows out.
We list the assumptions as follows: 1: The flow continues indefinitely, 2: The brine
inside the tank has uniform concentration , 3: The only change in the amount of pure
salt in the compartment is due to the difference between the amount of salt flowing in
(input) and out (output).
Now, we consider the change of x(t) per unit time on both sides of the conceptual
model in (1) 1 at t, we have: input(t) = 0.8 Kg/Min, output(t) = x(t)/250 Kg/Min.
Initially, x(0) = 1000 Kg. By (1), we have the initial value problem and its solution as

⎧ x ' = 0 . 8 − x / 250
⎨
⎩ x ( 0 ) = 1000
x (t ) = 200 + 800 e − t / 250

(2)
(3)

98

H. Liu and J. Raghavan

Answers. The concentration of the salt of the brine will be diluted to 0.6 Kg/L after
152.25 minutes, and will be close to 0.2 Kg/L after a very long period of time.
Example 4.2. Two tanks, each holding 100 liters of a brine solution, are interconnected by pipes. Fresh water flows into tanks A at a rate of 6 L/min and the fluid is
drained from tank B at the same rate. If 8 L/min of fluid are pumped from tank A to
tank B, and 2 L/min from tank B to tank A, and the liquids insides each tank are well
stirred so that the mixture is homogeneous, also assume that the brine in tank A contains 6 kg of salt and brine in tank B contains 60 kg of salt initially, determine the
mass of salt in each tank at time t = 10 minutes, 15 minutes and 24 minutes.
Stella incorporates the compartment analysis methodology in its meta-models. The
analogy of interconnected flows and reservoirs between Stella components, allows
users considering a system as compartments, exchange quantities through Stella’s
input and output interfaces. We adapted a few steps of the process to demonstrate how
to use the process and Stella to solve the problem.
PSL 1. Facts a: Variables: Amount of pure salt in tank A and tank B - APureSalt, and
BPureSalt, b: All other facts identified will be represented by converters in the Fig. 3.
Assumptions a: The flow continues indefinitely, b: The brine inside the tank has uniform concentration, c: The change of salt results from the difference between input
and output. Invariants a: The change rate of APureSalt per min = AFlowIn +
FlowBtoA – FlowAtoB, b: The change rate of BPureSalt per min = FlowAtoB –
FlowBtoA – BFlowOut. A conceptual model is shown in Fig. 3.
PSL 4, Answer the question. The solutions are given by either a graph or a table.
The amount of pure salt in tanks A and B at times t =10, 15 and 24 are: (8.86, 33.53),
(8.32, 25.31), and (6.58, 16.11) Kg, respectively.
AJL1, Observe the answer. Observe the answers in special points such as initial, or
terminal, and the long term trend. The amount of salt in both tanks can be found to be
reducing simultaneously, which confirms our understanding, since pure water flows
in to dilute the brine solutions which were in the tank.

APureSalt

FlowAtoB
VolumeA

BPureSalt

AFlowInConcentration

AFlowIn

FlowAtoBRate
FlowAtoBConcentration
VolumeB
FlowAtoB
BFlowOutConcen
APureSalt
BPureSalt

AFlowIn

BFlowOut
FlowBtoA

BFlowOut
FlowBtoA

AFlowInRate

Fig. 3. Conceptual Model

FlowBtoARate

BFlowOutRate

Fig. 4. Mathematical Model

5 The Motion of Floating Objects
In the original module, we gave two examples to study the oscillation of spring-mass
system, one is a simple spring-mass system and the other is a coupled spring-mass

A Mathematical Modeling Module with System Engineering Approach

99

system. Students learned how to introduce intermediate variable to transform higher
order equations to system of first order equations and then to solve them using Stella.
Here, we will study the motion of floating objects based on the understanding of the
oscillation of spring-mass systems.
Consider the motion of a floating object with mass m, as illustrated by the Fig. 5.
Let z be the displacement of the centroid of the object from the surface of the water,
V(z) represent the volume of the object submerged, ρ the density of water, b the
damping coefficient of water friction. Then, the weight W = −mg , (g is the acceleration due to gravity) the buoyant force B = ρ gV ( z ), frictional force f = −b z ′(t ),
where z ′(t ) is the velocity of the floating object. By Newton’s second law, we
have az = B + W + f and az = z ′′(t ), hence
mz ' ' ( t ) = ρ gV ( z ) − mg − bz ' ( t )

(4)

Rewriting it in standard form for second order ODE, we get:
z ''(t ) + (b / m) z '(t ) − ( ρ g / m)V ( z ) + g = 0

Fig. 5.

(5)

Fig. 6.

Example 5.1. A solid cube that has 2 feet side length is initially released on the water
surface from rest. If the density of the solid is a half of the water’s density ρ and (a)
the water friction can be neglected, (b) the damping coefficients of water friction is
499.2 lb-sec/ft, find the equation that governs the oscillation of the cube. (c) Build a
general model for the motion of a floated solid cube with its density below that of
water and its friction coefficient flexible from zero to 1000 lb-sec/ft, and then use the
parameters given in (a) and in (b) to simulate the motion of the cube.
Solution. Let z be the displacement of the centroid of the object from the surface of
the water, V(z) the volume of the object submerged, L the length of the cube, then
V ( z ) = L2 ( L / 2 − z ) = L3 / 2 − L2 z

(6)

Because the equilibrium point of the cube is where the buoyant force equals the
mass of the object, we have: ρ gV ( z ) = mg , m = L3 ( ρ / 2) , since the density of the
cube is ρ /2 where ρ is the density of water, then m = L3 (ρ / 2) , and instantiating all
parameters with known constants, we get (7) for case (a) and (8) for case (b).

z ' ' ( t ) + 32 z = 0
z ( 0 ) = 1; z ' ( 0 ) = 0

(7)

100

H. Liu and J. Raghavan

z ' ' ( t ) + 2 z ' ( t ) + 32 z = 0
z ( 0 ) = 1, z ' ( 0 ) = 0

(8)

Notice that (7) and (8) are exactly the same as the equations for spring mass system. Hence, we observe that the motion of a cube in water is similar to the oscillation
of a spring mass system.
(C) If the density of the cube is an arbitrary constant δ , less than that of water,
then, we do not get z = 0 at the equilibrium point. Depending on whether the density
is more or less than half of the water’s density, z at equilibrium point will be negative
or positive, respectively to balance the weight. The mass of the cube is m = L3δ , substituting (6) in (5), we have

z ' ' (t ) + b /(δL3 ) z ' (t ) + ( ρ g /(δL )) z + (1 − ρ /( 2δ )) g = 0

(9)

Equation 9 is a non-homogeneous second linear equation. It can be easily transformed into a homogeneous equation in y. Let z = c be the equilibrium point, we
have ρg /(δL)c + (1 − ρ /( 2δ )) g = 0 , Solving for c, we get c = L( ρ − 2δ ) /(2 ρ ) , Substituting y = z - c, we get y = 0 as the equilibrium point. Equation (9) now becomes

y ' ' (t ) + b /(δL3 ) y ' (t ) + ρg /(δL) y = 0

(10)

If the initial conditions are applied and if the water friction is small enough, the solution is almost the same as that of (8), except the attenuating oscillation is around the
new equilibrium point z = L( ρ − 2δ ) /(2 ρ ) , instead of z = 0. The Simulation is illustrated in Fig. 7 when δ = 20.8 = 1 / 3 ρ and friction coefficient b=115.

Fig. 7. The Stalla Model and Simulation of the Velocity and Displacement

Our next example in this section will discuss the oscillation of floating sphere. Our
focus is to find how to calculate the V(z) in (5). We would like to develop a general
model for a solid sphere of radius r and density δ that is less than the water’s
densityρ. The volume V(h) of the submerged spherical cap illustrated in Fig. 5.2,
where h is the height of the sphere submerged in water. Let the distance from the center of the sphere to water level be x. Consider the right triangle OAB, by Pythagoras

A Mathematical Modeling Module with System Engineering Approach

Theorem

AB = r2 − x2

.

The

section

is A ( x ) = π ( A B ) = π ( r − x ) , V ( h ) =
2

2

2

∫

r
r−h

area
A( x)dx = ∫

of
r
r−h

part

of

101

the

sphere

π h 2 (3 r − h ) .
π (r − x )dx =
2

2

3

As shown in Fig. 6, let z = 0 be the water surface level, and z = x = r - h be the displacement of the center of the sphere from the surface of the water, we have
h = r − z and V ( z ) = π ( r − z ) 2 ( 2 r + z ) / 3 . By (5), we have the differential
equation for the motion of the floating sphere as follows
z ' ' (t ) +

3b
ρg
ρ
z ' (t ) −
( z 3 − 3 r 2 z ) + (1 −
)g = 0
4 π r 3δ
4 r 3δ
2δ

(11)

Example 5.2. Change the solid cube in example 5.1 to a solid sphere of 1 foot radius,
build the mathematical models and solve them by using Stella for all three cases.
Solution. By assumptions, substitute the parameters in (11) with the constants from
the problem description, we have (12) for case (a) and (13) for case (b)
⎧ z ' ' ( t ) + 48 z ( t ) − 16 z 3 ( t ) = 0
⎨
⎩ z ( 0 ) = 1; z ' ( 0 ) = 0

(12)

⎧ z ' ' ( t ) + 3 . 82 z ' ( t ) + 48 z ( t ) − 16 z 3 ( t ) = 0
⎨
⎩ z ( 0 ) = 1, z ' ( 0 ) = 0

(13)

The Stella model of case (c) is similar to case (b) except for the parameters in (11).
The solutions for case (a) and (b) are illustrated in Fig. 8 and Fig. 9. respectively.

Fig. 8.

Fig. 9.

Validation. A critical assumption is that the motion of the object is constrained to a
half of the side length or the radius so that neither does the object jump out of the water nor is the whole body of the object submerged below water surface. A question to
help students understand the assumption is: If we change our initial conditions, such
as adding an initial downward velocity besides the given initial displacement, are our
models in this section still valid? If not, why?

6 Conclusion
This paper presents an abbreviated version of a mathematical modeling module, which
is selected and evolved from the course material that the authors have been delivering in
their ODE courses and the seminars of SIAM student chapter [8]. Section 1 presents the
motivation of the module. Section 2 lists the objectives of the module and assessment
plan. Section 3 describes an iterative modeling process. Section 4 illustrates the

102

H. Liu and J. Raghavan

compartmental analysis methodology. The examples in section 4 and 5 cover a series of
models in orders of incremental complexity spanning from first order linear equation to
second order nonlinear system of equations. The examples are connected as they gradually increase in difficulty and complexity. This connection of the examples allows the
students to comprehend the material in small doses and minimizes the intimidation to
the students by the complexity of the problems and motivates them to confidently work
on team projects with similar level of complexity.
Acknowledgment. The authors would like to give thanks to the Summer Workshops
by Shodor for introducing us to computational science education research.

References
1. National Computational Science Institute, Incorporating Computational Science Tools and
Techniques into Undergraduate Course, Workshop for Undergraduate Faculty (2004)
2. Mathematical Science Education Board, Measuring What Counts: A Conceptual Guide for
Mathematics Assessment. National Academy Press, Washington (1993)
3. Richmond, B.: An Introduction to System Thinking, Stella Software. High Performance
System Inc.
4. Stella, High Performance System Inc., http://www.hps-inc.com
5. Nagel, Saff: Fundamentals of Differential Equations, 6th edn. Addison Wesley, Reading
(2004)
6. Falmagne, J.-C.: The Assessment of Knowledge in Theory and in Practice,
http://www.aleks.com/about_aleks/research_behind
7. Liu, H., Gluch, D.P.: A Proposal for Introduction Model Checking into an Undergraduate
Software Engineering Curriculum. The Journal of Computing Science in Colleges 18(2),
259–270 (2002)
8. Liu, H.: Offering Honors Course Option within an Ordinary Mathematical Course for Undergraduate Students in Engineering Majors. In: The Proceedings of the 2008 ASEE Annual Conference (2008) (to appear)
9. Vakalis, I., Karkowski, A., Lahm, T.: A Guidebook for the Creation of Computational Sci.
Modules,
http://oldsite.capital.edu/acad/as/csac/Keck/guidebook.html
10. Berkey, D.: A Model for Vertical Integration of Real-world Problems in Mathematics. In:
The Proceedings of ASEE Annual Conference & Exposition (2007)
11. Richlin, L.: Blueprint for Learning: Creating College Courses to Facilitate, Assess, and
Document Learning. Stylus Publishing (2006)

