Procedia Computer Science
Volume 80, 2016, Pages 279–288
ICCS 2016. The International Conference on Computational
Science

Permutation-based Recombination Operator to
Node-Depth Encoding
Telma Woerle de Lima1 , Alexandre Cl´audio Botazzo Delbem2 , Roney Lopes
Lima1 , Gustavo Post Sabin1 , and Marcos Antˆonio Almeida de Oliveira1
1

2

Instituto de Inform´
atica, Universidade Federal de Goi´
as, Goiˆ
ania, Goi´
as, Brasil
telma@inf.ufg.br
Instituto de Ciˆencias Matem´
aticas e Computa¸ca
˜o, Universidade S˜
ao Paulo, S˜
ao Carlos, S˜
ao Paulo,
Brasil
acbd@icmc.usp.br

Abstract
The node-depth encoding is a representation for evolutionary algorithms applied to tree problems. Its represents trees by storing the nodes and their depth in a proper ordered list. The
original formulation of the node-depth encoding has only mutation operators as the search
mechanism. Although the representation has this restriction, it has obtained good results with
low convergence. Then, this work proposes a speciﬁc recombination operator to improve the
convergence of the node-depth encoding representation. These operators are based on recombination for permutation representations. An investigation into the bias and heritability of the
proposed recombination operator shows that it has a bias towards stars and low heritability.
The performance of node-depth encoding with the proposed operator is investigated for the
optimal communication spanning tree problem. The results are presented for benchmark instances in the literature. The use of the recombination operator results in a faster convergence
than with only mutation operators.
Keywords: Genetic Algorithms, Representations, Performance Analysis

1

Introduction

Node-depth encoding is a representation for evolutionary algorithms (EAs) applied to network
design problems [3]. This encoding is based on the relation node-depth in a rooted tree. Also,
the node-depth encoding genotypes always produces a valid phenotype. In order to produce new
solutions from previous ones, the node-depth encoding uses only mutation operators, i.e., no
recombination operator is available in the literature. These operators produce only new feasible
solutions. This encoding has been applied with EAs to several network design problems with
good performance in computational time and solution [2, 3].
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.320

279

Permutation-based Recombination Operator to Node-Depth Encoding

Telma, Alexandre, Anderson

Nevertheless, the literature has shown that EAs with recombination and mutation operators
can be more eﬃcient on some complex problems [1]. Recombination operators are important
as source of variation in the oﬀspring produced. Another important issue is that recombination
and mutation operators complement each other. So, in comparison with EAs that has only
mutation operators, EAs using recombination operators increase the rate of convergence.
In order to improve the node-depth encoding rate of convergence, this paper proposes two
recombination operators based on reproductive mechanism for permutation problems [4]. This
type of problem was chosen as inspiration because their representation has similar characteristics
with the node-depth encoding. In both kind of problems recombination operators must preserve
the order of the genes and also avoid repeat genes, in permutation all the gene and in node-depth
encoding the nodes in the genes.
For a proper use of representations and their operators, it is important to have an adequate
understanding of properties of the representations, like heritability and bias [8]. The heritability measures whether the new solutions produced by recombination operators of an encoding
are similar to their parents. For guide search, as evolutionary algorithms, high heritability
is important. The bias of a representation describes whether either the genotype-phenotype
mapping or the evolutionary search operators like mutation or recombination prefer a speciﬁc
type of solution and thus, leads a population towards this direction. Previously work already
tested the node-depth encoding and its mutation operators for the important property bias.
The results show that this encoding and mutation operators has no bias [2].
The purpose of this paper is to present the recombination operator for the node-depth
encoding representation and investigate the bias and the heritability of it. The results are the
proposal of a recombination operator NDE order crossover (NOX), based on Order Crossover
(OX) for permutation problems. The properties analysis shows that for small graphs NOX has
a bias towards stars. In a second step, the encoding is applied to the optimal communication
spanning tree problem where the use of the recombination operators are expected to result in fast
convergence time. The results show that the recombination operator improves the convergence.
The following section reviews basic concepts of the node-depth encoding. Section 3 presents
recombination operators and the proposal to node-depth encoding recombination operator.
Then, Section 4 describes the analysis of properties and their results. Finally, Section 5 presents
an empirical test with the optimal communication spanning tree problem. The paper ends with
concluding remarks.

2

The Node-Depth Encoding

The node-depth encoding (NDE) [3] is based on storing the nodes and their depth in an ordered
list. For a tree of size n, the nodes vi (i ∈ {1, . . . , n}) and their corresponding depths di are
listed in an array as pairs (vi , di ). The order of the nodes in the array is important since an
encoding/decoding algorithm traverses this array from the ﬁrst to the last position, determining
the edges that compose the tree. A depth-ﬁrst search (DFS) can be used to encoding a tree
by starting from a root node v1 with depth d1 = 0 and iteratively inserting the pairs (vi , di ) in
the array, in the order in which the nodes vi are visited by the DFS. The following paragraphs
explain the relevant aspects of the encoding, such as decoding process, and mutation operators.

2.1

Decoding

The decoding procedure is tree-speciﬁc and traverses the array of pairs from left (i = 1) to
right (i = n). Starting with node in (i = 2), each node vi with the corresponding depth di is
280

Permutation-based Recombination Operator to Node-Depth Encoding

Telma, Alexandre, Anderson

connected to the node vj (1 ≤ j ≤ (i − 1)) with depth dj = di − 1, where i − j is minimal. This
means, that there is an edge between node vi with depth di and the vj -nearest preceding node
with a depth di − 1, i.e, a depth that is one lower than the depth of di . The decoding process
is linear in the number of nodes (O(n)).
Figure 1: An example of NDE representation.

i
depth
node

1
0
A

2
1
B

3
2
H

4
1
C

5
2
D

6
3
F

7
4
G

8
3
I

(a) NDE array of pairs.

9
2
E

(b) The spanning tree encoded by
the NDE.

The following is a brief example. Assuming the NDE array of pairs shown in Figure 2(a),
the decoding procedure starts by adding nodes v1 = A and v2 = B as well as edge (A, B) to the
tree. Node v3 = H has depth d3 = 2 and it is thus connected to node v2 = B with d2 = d3 − 1.
Node v4 = C has depth d4 = 1 and thus edge (C, A) is added. Repeating this process for the
subsequent nodes, we obtain the tree shown in Figure 2(b).

2.2

Mutation Operators

This section presents two mutation operators used by the node-depth encoding: Preserve Ancestor Operator (PAO) and Change Ancestor Operator (CAO). PAO and CAO generate new
solutions by changing a pruned subtree from one node to another node in the tree.
PAO requires a set with two nodes previously determined: the pruned node p, which indicates the root of the subtree to be transferred and the adjacent node a. CAO requires a set
with three nodes: the pruned node p, adjacent node a, and a randomly chosen node r of the
subtree. A full description of this operators can be see in [3, 2].

3

Recombination Operator

Recombination operators are the reproductive mechanism in which subsets of genes from two
or more parents are cloned and reassembled to create a new oﬀspring. This operation plays an
important role introducing more diversity in the population in the beginning of the evolutionary
process [1]. Recombination and mutation operators complement each other, and they have
achieved important results when they are used together.
In order to improve the performance of NDE for problems represented by complete graphs,
this paper proposes the recombination operator NDE order crossover (NOX) based on recombination operator for permutation problems order crossover (OX).
281

Permutation-based Recombination Operator to Node-Depth Encoding

3.1

Telma, Alexandre, Anderson

Recombination Operators for Permutation

In permutation representations each gene represents an element of the permutation, and each
genotype can not have duplicate values and the order of the values deﬁnes the phenotype. So,
to preserve these characteristics and the literature proposes some recombination operators that
do it. They are, order crossover (OX), position based crossover (PBX), order based crossover
(OBX), cycle crossover (CX), and partially mapped crossover (PMX) [4].
3.1.1

Order Crossover - OX

This operator starts choosing two crossover points at random. These points deﬁne a segment.
This segment is copy from ﬁrst parent P1 into the ﬁrst oﬀspring. To ﬁll the other positions the
genes are copied from the second parent P2 in a relative order [4]. The following steps describe
how to apply OX.
1. Choose two crossover points at random. These points deﬁne a segment;
2. Copy the segment between the points from parent P1 (P2 ) into the oﬀspring O1 (O2 );
3. Mark in P2 (P1 ) the genes with equal value of the genes in the segment between the
crossover points in P1 (P2 );
4. Starting from the second crossover point in P2 (P1 ), copy the remaining unmarked values
into the oﬀspring O1 (O2 ), wrapping around at the end of the list.

3.2

Recombination Operator for NDE

This section proposes the recombination operator NDE order crossover. This operator is based
on order crossover. This operator can just be applied to problems represented by complete
graphs. OX was chosen as the base to the NDE recombination operators, because, in a ﬁrst
moment, it seems to be more easy to deal with NDE genotypes.
3.2.1

NDE Order Crossover - NOX

NOX recombination operator is based on OX operator for permutation representations. As in
OX, in NOX we select two crossover points at random, and we mark the nodes in the genes
from the segment between the points in the other parent. The main diﬀerences between OX
and NOX are:
1. In NOX, the two ﬁrst positions have ﬁxed values to the depth: d1 = 0 and d2 = 1;
2. In NOX, the remain positions of the oﬀspring, after copy the segment between the
crossover points, are ﬁlled from the ﬁrst positions of the other parent and the oﬀspring,
instead of start after the second crossover point. This change avoid produce oﬀsprings
with diﬀerent node root.
Algorithm 3.1 presents the pseudocode of NOX for NDE genotypes.
In order to guarantee only feasible NDE genotypes, when the procedure is copying the genes
can be needfull to apply a depth correction. It happens when the diﬀerence between di and
di−1 is bigger than 1 (di − di−1 > 1). In this case we make di = di−1 + 1.
We want to give a brief example of the functionality of NOX using the parents presented
in Figure 2. The spanning trees encoded by the genotypes are presented in Figure 3. First
282

Permutation-based Recombination Operator to Node-Depth Encoding

Telma, Alexandre, Anderson

Algorithm 3.1 - NOX Pseudocode.
//Let be P1 and P2 the NDE of the parents.i
//Let be O1 and O2 the NDE of the oﬀspring.
//A1 and A2 arrays to mark the nodes.
(1) Choose two crossover points at random. These points deﬁne a segment;
(2) Mark in A2 (A1 ) the nodes in the segment between the crossover points in P1 (P2 );
(3) Fill the genes into O1 (O2 ) with the genes from P2 (P1 ), avoiding the marked nodes, until the ﬁrst crossover
point in O1 (O2 ). If needfull correct the depth of the node;
(4) Fill the segment between the crossover points into O1 (O2 ) with the genes in the same positions from P1 (P2 ).
If needfull correct the depth of the node;
(5) Fill the remains genes into O1 (O2 ), with the genes from P2 (P1 ), from the last used position in step (3). If
needfull correct the depth of the node;

Figure 2: NDE genotype of the parents for recombination.
i
depth
node

1
0
A

2
1
B

3
2
C

i
depth
node

1
0
A

2
1
B

3
2
J

4
3
H

5
4
I

6
1
D

7
2
F

(a) NDE genotype P1 .
4
1
C

5
2
D

6
3
E

7
3
F

(b) NDE genotype P2 .

8
2
G

8
4
G

9
3
J

10
1
E

9
5
H

10
1
I

crossover point was selected between positions 2 and 3. Second crossover point was selected
between positions 6 and 7. Thus, the segment is composed by positions 3, 4, 5 and 6.
In the auxiliary arrays are marked the nodes J, C, D and E in A1 and, C, H, I, and D in
A2 . After mark the node the next steps in the algorithm construct the oﬀspring. In order to
obtain O1 , Step (3) copies positions 1 and 2 from P2 into it. Step (4) copies the positions in
the segment (3 to 6) from P1 into O1 . Finally, Step (5) copies positions 3, 6, 7, and 8 from P2
into position 7 to 10 of O1 . It is important to emphasize that when we are copying the genes
from P2 to O1 , we must to avoid the positions that contain marked nodes in A2 . Because of it
the indexes copied from P2 are not linear. Also, in this example, we do not need to apply the
depths correction. O2 is obtained in a similar way, just changing the order of parents.
The result oﬀspring is presented in Figure 4 and their encoded spanning trees can be shown
in Figure 5. We notice in these ﬁgures that most of the edges presented in the parents are
presented in the oﬀspring (edges red and blue).

(c) Spanning tree encoded by
genotype P1 .

(d) Spanning tree encoded by genotype P2 .

Figure 3: Spanning tree encoded by parents P1 and P2 .
283

Permutation-based Recombination Operator to Node-Depth Encoding

Telma, Alexandre, Anderson

Figure 4: NDE genotype of the result oﬀspring from NOX.
i
depth
node

i
depth
node

1
0
A

1
0
A

2
1
B

3
2
C

4
3
H

5
4
I

6
1
D

7
2
J

(a) NDE genotype of O1 .
2
1
B

3
2
J

4
1
C

5
2
D

6
3
E

7
3
H

(b) NDE genotype of O2 .

(c) Spanning tree of O1 .

8
3
E

8
4
I

9
3
F

9
2
F

10
4
G

10
2
G

(d) Spanning tree of O2 .

Figure 5: Spanning tree encoded by oﬀspring O1 and O2 with NOX.

4

Properties Analysis

In order to evaluate the behavior of NOX in relation of the properties, empirical tests were
performed. For these tests were used four Euclidean Graphs size for the Steiner tree problem
with n = 10, 20, 40 and 80 available on OR-Library1 . The evolutionary algorithm uses the NDE,
no selection method, and Pr¨
ufer numbers to create the initial population. Each instance was
tested 10 times with 10,000 individuals in the population and 1,000 generations. The following
sections describe the results for heritability and bias properties.

4.1

Heritability of the Recombination Operator NOX

In order to evaluate the heritability of NOX we calculate the number of edges in the oﬀsprings
that are not in the parents. This is calculated considering EP = EP1 ∪ EP2 , the edge sets
resulted from the join of the edge sets of the parents; EO = EO1 ∪ EO2 the edge sets resulted
from the join of the edge sets of the oﬀspring, and |EO−P | = |EO − EP | the total diﬀerence
between the sets. High heritability implies in low number of edges in the oﬀspring that are not
in the parents. If this number is high then the operators has low heritability. The heritability
is measure by the average under 1,000 generations of the average of EO−P .
Table 1 summarizes the obtained results, it presents the average number of diﬀerent edges,
the standard deviation and the percentage in relation to the number of edges in the tree. We
can observe that when increasing the number of nodes the heritability decreases, i.e., increases
the number of non-parents edges.

1 http://people.brunel.ac.uk/˜mastjjb/jeb/info.html

284

Permutation-based Recombination Operator to Node-Depth Encoding

10 nodes
avg
std (%)
0.41 0.25 4.5

4.2

Table 1: NOX Heritability.
20 nodes
40 nodes
avg
std
(%)
avg
std
(%)
2 .76 0.35 14.52 6.88 0.58 17.64

Telma, Alexandre, Anderson

avg
15.39

80 nodes
std
(%)
0.40 19.48

Bias of the Recombination Operator NOX

In order to analyze the bias of NOX, the following measures are used: distance from the
Minimum Spanning Tree (MST) and distance from stars. The distance between two spanning
trees Tx and Ty is measured using the Hamming distance [5], that is the number of diﬀerent
edges in the two trees, i.e. the number of edges that the trees do not share. This distance is
calculated by dx,y = 12 vu ,vv ∈V,vu <vv |lvxu ,vv − lvyu ,vv |, where, lvxu ,vv is 1 if an edge from vu to
vv exists in Tx , and 0 if it does not exist. The minimum distance to a star is calculated as
di,ST AR = min(di,starj ), where, j = 1 . . . n and starj is a star tree with the central node vj .
To investigate whether NOX has a bias and over-represent some tree structure we subsequently applied recombination operator to each pair of individuals in the population. As no
selection operator was used, no selection pressure pushed the population to high-quality solutions. The recombination operator is unbiased if the statistical properties of the population
did not change by applying mutation alone. To analyze a potential bias of the recombination
μ
operator, we measured the average distance to the MST dmst−pop = μ1 i=1 di,M ST , where
di,M ST is the distance between tree Ti and the minimum spanning tree of the graph, and
μ
average minimum distance to stars dstar−pop = μ1 i=1 di,ST AR .
If dmst−pop decreases, the mutation operators are biased towards the MST and if dstar−pop
decreases, the mutation operators are biased towards stars. If all the measures remain constant,
the recombination operators are unbiased.
Figure 6 and Figure 7 present the results for NOX for dmst−pop and for dstar−pop . We can
observe that dstar−pop decreases over the generations. Then we can conclude that NOX is biased
towards stars.

5

Empirical Tests

An EA with the NDE and its new recombination operator NOX was applied to the optimal
communication spanning tree problem (OCSTP). This problem consists in ﬁnding a spanning
tree which minimizes the cost of transmitting a given set of communication requirements between n sites over the tree edges. It can be formulated as: given a graph G = (V, E), the cost
of communication between the pairs, Cn,n and the demands of communication Qn,n . The total
cost of communication D(T ) is given by, D(T ) = s,d∈T qs,d ps,d , where ,T is a spanning tree,
qs,d are the demand between nodes s and d, and ps,d = (vi ,vj )∈Ps,d (T ) cvi ,vj , where cvi ,vj is
the cost, and Ps,d (T ) is the path between node s, d in T [10, 6].
The test of steady-state EAS using NDE (EAN), Edge Sets [7] without heuristic (ESWOH)
and Network Random Keys (NetKeys)[9] to the OCSTP were performed with the suit of costs
and demands proposed in the literature by Raidl (cases with 10, 20, 35, 50, 75 and 100 nodes),
Berry (one case with 6 nodes and two with 35 nodes) and Palmer (cases with 6, 12 and 24
nodes) [10], all of them available from the authors. EANNOX is the EAN with NOX. EANNOX,
ESWOH and NetKeys are tested with recombination rate of 1.0(100%) and diﬀerent mutation
285

Permutation-based Recombination Operator to Node-Depth Encoding

Telma, Alexandre, Anderson

8

d mst-pop

d mst-pop

15
6

4

10

5
2
0

200

400

600

800

1000

0

200

Generations

60

25

50

d mst-pop

d mst-pop

70

30

20
15

1000

800

1000

40
30

10

20

5

10
400

800

(b) 20 nodes.

35

200

600

Generations

(a) 10 nodes.

0

400

600

800

1000

0

200

400

600

Generations

Generations

(c) 40 nodes.

(d) 80 nodes.

Figure 6: Average distance to the MST with NOX.
rates (0.1, 0.2, 0.3, 0.4, 0.5, 0.6). The stop criteria is the not improvement of the best solution by
100, 000 evaluations and we perform 50 trials. We also, test EAN without recombination. All
of the tests with EAN and variation were performed with a population size of 100 individuals.
Table 2: Mean values of distance and number of evaluations in 50 trial for OCSTP with EAN,
EANNOX and EANNPBX. Column labeled %-dist presents the mean values of distance and
column labeled Eval presents the mean values of the number of evaluations needed to reach
the best solution in each algorithm.
Name
Palmer

Raidl

Berry

Test
n
6
12
24
10
20
35
50
75
100
6
35u
35

EAN
Copt
69,3180
3,428,509
1,086,656
53,674
157,570
412,167
806,864
1,717,491
2,561,543
534
16,190
16,915

%-dist
0.58
1.57
1.83
0.00
0.26
0.39
0.67
3.53
4.44
0.00
2.57
2.15

Eval
304
6422
24,095
2,000
34,300
95,400
281,500
888,500
1,228,600
282
84,747
94,047

EANNOX
%-dist
Eval
0.00
603
0.04
6130
1.01
20,366
0.00
800
5.15
11,100
3.53
37,500
1.53
76,300
8.20
227,500
7.36
280,500
0.00
210
2.66
84,125
3.19
95,258

NetKeys
%-dist
Eval
0.00
643
1.40
22,286
12.51
88,183
0.00
8,064
41.18
48,453
90.81
93,501
179.52
156,468
812.52
456,432
3,177.40
974,453
0.00
689
10.81
64,170
65.30
127,947

ESWOH
%-dist
Eval
0.00
186
0.00
6,369
0.00
44,287
0.00
1,066
0.05
8,409
17.88
199,066
2.16
345,167
11.84
750,563
968.74
1,179,127
0.00
154
2.70
47,513
4.47
12,487

The results are presented in mean of distance to the known optimal solution of each case,
except Raidl 35, 75 and 100 nodes, that do not have optimal known, so in this case we use the
better solution found by the algorithm. The distance is calculated by ((C − Copt )/Copt ) ∗ 100,
where Copt is the cost of the optimal solution and C is the best solution found in each trial. Table
2 presents the found results in mean of distance and the mean number of evaluations needed
to ﬁnd the best solution in each trial by EAN, EANNOX, NetKeys and ESWOH. The results
286

Permutation-based Recombination Operator to Node-Depth Encoding

Telma, Alexandre, Anderson

8

d star-pop

d star-pop

15
6

4

10

5
2
0

200

400

600

800

1000

0

200

Generations

400

600

800

1000

Generations

(a) 10 nodes.

(b) 20 nodes.

60

30

50

d star-pop

d star-pop

70
35

25
20
15

40
30
20

10

10
5
0

200

400

600

800

1000

0

200

400

600

Generations

Genenations

(c) 40 nodes.

(d) 80 nodes.

800

1000

Figure 7: Average minimum distance to stars with NOX.

are from the best combination of mutation and recombination rates for each problem with
each EANNOX, NetKeys and ESWOH. These results shows that the use of the recombination
operator NOX reduces the convergence time, as expected. Despite the distances are a little
bigger with EANs algorithms in some cases, all the tests reach in some trial the optimal solution.

6

Conclusions

This paper proposes a recombination operator for the NDE: NOX. This operator is based on
permutation recombination operator, OX. In addiction, we analyze NOX with the properties
to representations and operators heritability and bias. The analysis shows that NOX has a
good heritability, specially to graphs with a bigger number of nodes. In the worst case, around
20%(15/79) of the edges, in the oﬀspring, are non-parental edges. Both operators, also, present
a bias towards stars with no mutation operation.
We, also, applied evolutionary algorithms with NDE, Network Random Keys, Edge Sets and
the proposed recombination operator to the optimal communication spanning tree problem. The
new recombination operators improved the convergence of the NDE without signiﬁcant decrease
of ﬁtness.
287

Permutation-based Recombination Operator to Node-Depth Encoding

6.1

Telma, Alexandre, Anderson

Acknowledgments

The authors would like to thank CAPES, CNPq and Foundation for Research Support of the
State of Goi´as (FAPEG) for the ﬁnancial support to this project.

References
[1] Kenneth A. De, Jong. Evolutionary Computation: A Uniﬁed Approach. MIT Press, 2006.
[2] Telma W. de Lima, Franz Rothlauf, and Alexandre C.B. Delbem. The node-depth encoding:
analysis and application to the bounded-diameter minimum spanning tree problem. In GECCO
’08: Proceedings of the 10th annual conference on Genetic and evolutionary computation, pages
969–976, New York, NY, USA, 2008. ACM.
[3] A.C.B. Delbem, Andre de Carvalho, Claudio A. Policastro, Adriano K.O. Pinto, Karen Honda,
and Anderson C. Garcia. Node-depth encoding for evolutionary algorithms applied to network
design. In Kalyanmoy Deb, Riccardo Poli, Wolfgang Banzhaf, Hans-Georg Beyer, Edmund Burke,
Paul Darwen, Dipankar Dasgupta, Dario Floreano, James Foster, Mark Harman, Owen Holland,
Pier Luca Lanzi, Lee Spector, Andrea Tettamanzi, Dirk Thierens, and Andy Tyrrell, editors,
Genetic and Evolutionary Computation – GECCO-2004, Part I, volume 3102 of Lecture Notes in
Computer Science, pages 678–687, Seattle, WA, USA, 26-30 June 2004. Springer-Verlag.
[4] A. E. Eiben and G. Rudolph. Theory of evolutionary algorithm: a bird’s eye view. Theorical
Computer Science, 229:3–9, 1999.
[5] Richard W. Hamming. Coding and Information Theory. Prentice-Hall, 1980.
[6] Charles Campbell Palmer. An approach to a problem in network design using genetic algorithms.
PhD thesis, Brooklyn, NY, USA, 1994.
[7] G¨
unther R. Raidl and Bryant A. Julstrom. Edge sets: an eﬀective evolutionary coding of spanning
trees. IEEE Trans. Evolutionary Computation, 7(3):225–239, 2003.
[8] Franz Rothlauf. Representations for Genetic and Evolutionary Algorithms. Springer-Verlag, 2006.
[9] Franz Rothlauf, David E. Goldberg, and Armin Heinzl. Network random keys: A tree representation scheme for genetic and evolutionary algorithms. Evolutionary Computation, 10(1):75–97,
2002.
[10] Sang-Moon Soak, David Corne, and Byung-Ha Ahn. A new evolutionary algorithm for spanningtree based communication network design. IEICE Trans Commun, E88-B(10):4090–4093, 2005.

288

