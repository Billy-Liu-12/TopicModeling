Procedia Computer Science
Volume 80, 2016, Pages 617–626
ICCS 2016. The International Conference on Computational
Science

Distributed Multi-authority Attribute-based Encryption
Scheme for Friend Discovery in Mobile Social Networks
Wenbo Wang1 , Fang Qi1 , Xiaoqiang Wu2 , and Zhe Tang1
1

∗

School of Information Science and Engineering, Central South University, Changsha, China, 410083
wb wang@csu.edu.cn, qi.fangfang@gmail.com, tz@csu.edu.cn
2
Institute of Software, Chinese Academy of Sciences, Beijing, China, 100190
xiaoqiang2014@iscas.ac.cn

Abstract
In recent years, the rapid expansion of the capability of portable devices, cloud servers and
cellular network technologies is the wind beneath the wing of mobile social networks. Compared
to traditional web-based online social networks, the mobile social networks can assist users to
easily discover and make new social interaction with others. A challenging task is to protect
the privacy of the users’ proﬁles and communications. Existing works are mainly based on
traditional cryptographic methods, such as homomorphic and group signatures, which are very
computationally costly. In this paper, we propose a novel distributed multi-authority attributebased encryption scheme to eﬃciently achieve privacy-preserving without additional special
signatures. In addition, the proposed scheme can achieve ﬁne-grained and ﬂexible access control.
Detailed analysis demonstrates the eﬀectiveness and practicability of our scheme.
Keywords: Multi-authority, Attribute-based Encryption, Privacy Preserving, Access Control, Proﬁle
Matching

1

Introduction

A boom in mobile hand-held devices greatly enriches the social networking application [1].
Many social networking services are available on the mobile devices (e.g., WeChat, QQ, MocoSpace, etc.). According to eMarketer [2], they estimate that the number of US smartphone
users will reach 192.4 million by 2016 and 2.28 billion worldwide [3]. Friend discovery and
communication are two important basic steps of social networks. When people take part in social networks, they usually begin by creating a proﬁle, then interact with others. The personal
proﬁle usually contains a large amount information, such as hobbies, age, education degree, etc.
Proﬁle matching is a common and helpful method to make new friend with mutual interests or
experience. Unfortunately, a series of unaddressed security and privacy problems dramatically
impede its practicability and popularity [4].
∗ Corresponding

author

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.350

617

Distributed Multi-authority Attribute-based Encryption Scheme ...

Wang, Qi, Wu and Tang

In recent years, many private matching schemes have been proposed to solve this problem. Among these schemes, some protect user’s privacy based on trusted third party (TTP)
[5, 6, 7, 8], the other is TTP-free [9, 10, 1]. Although, this kind of approaches can achieve
proﬁle matching without the support of TTP, they have some disadvantages. The reliance on
public-key crytosytem and homomorphic encryption [11, 12, 7, 8] requires multiple rounds of
interaction which causes high communication and computation overhead. Moreover, matched
and unmatched users are all involved in the expensive computation and learn the matching
result. Li et al. [9] propose a private matching scheme based on the common interests, which
is not ﬁne-grained. Zhang et al. [8] present a ﬁne-grained private matching scheme but fail in
considering the priority related to every attribute and they employ the homomorphic encryption
which is resource consuming on mobile devices. Qi et al. [10] employ an asymmetric-scalarproduction based on kNN query, but the presentation of interests is too single to get an accurate
result. Moreover, the widely used technique of group signature [13][14] always costs huge volume of computational resources on users’ hand-held devices, and the access control based on the
key-policy attribute-based encryption [15] is not eﬃcient enough. In addition, if any server or
TTP is compromised, the conﬁdentiality of the stored data may be compromised, too. Therefore, considering the powerful computationanl as well as storage ability of the TTP and cloud
server, the main point of our work is to design an eﬃcient privacy-preserving and ﬁne-grained
friend discovery system based on the combination of TTP and cloud server.
In this paper, we propose an eﬃcient destributed multi-authority attribute-based encryption scheme, which can achieve privacy preserving and ﬁne-grained access control. By using
ciphertext-policy attribute-based encryption (CP-ABE) [16], the encrypted information can
kept conﬁdential even if the storage server is not fully-trusted and users can design the their
own access policy. Hence, the ﬁne-grained access control can be achieved eﬃciently. By employing the powerful storage and computational ability of cloud server, the storage and computaion
overhead of the client can be greatly reduced. The multi-authorities are designed to be destributed, which can signiﬁcantly relieves the users’ trust on a single authority and is secure
against collusion attack as well as chosen-plaintext attack. The main contributions are outlined
as follows.
• A multi-authority attribute-based encryption scheme is proposed for ﬁne-grained multilevel access control in cloud friend discovery system. Users can design their own access
policy to ﬁnd the potential friends, which is user friendly.
• User’s identity and personal proﬁle are encrypted under the access policy speciﬁed by the
user himself and outsourced to the cloud server, the client is lightweight.
• The destributed multi-authority model in friend discovery cloud computing system also
reduces the risk of a single central authority being compromised for potential privacy
leakage.
• Formal security proof and simulation evaluation demonstrate that our scheme is secure
against chosen-plaintext attack and collusion attack in the standard model.
The remainder of this paper is organized as follows. Preliminaries are introduced in Section
2. The system architecture and models are presented in Section 3. We propose our scheme
in Section 4, followed by the formal security proof and performance evaluations respectively in
Section 5 and 6. Finally, we conclude our work.
618

Distributed Multi-authority Attribute-based Encryption Scheme ...

2
2.1

Wang, Qi, Wu and Tang

System Architecture and Models
System Architecture

The architecture of the friend discovery system mainly contains the following components: the
personal proﬁle which is outsourced in the encrypted form into the cloud by the initiator;
the cloud server that stores huge volumes of users’ personal proﬁles and performs the eﬃcient
attribute matching process to realize the multi-level ﬁne-grained access control for privacy
preserving; the responders who will attend the proﬁle matching and may be the potential
friend. Moreover, in our system, there are also D central authorities (CA1 , CA2 ,..., CAD ) and
K attribute authorities (AA1 ,..., AAk ). Each responder has a global identiﬁer gid ∈ GID,
where the GID is the identity set of all registered users. Responders get the keys concerning
their unique gid from CAi (i ∈ 1, 2, ..., D). Each attribute authority AAk (k ∈ 1, 2, ..., K)
manages a set of attributes Uk (Ui ∩ Uj = ∅ ∧ U = ∪K
k=1 Uk ) (i, j ∈ {1, 2, ..., K} ∧ i = j). Each
authorized responder with attribute set ASgid will obtain their attribute secret keys from the
corresponding AAk s. We assume that all the authorities are run by diﬀerent organizations and
governed by the government. The multiple authority setting greatly relieves the users’ trust on
a single CA or AA, so it is unlikely for all the authorities to collude (or to be compromised)
to derive the secret keys. Figure 1 illustrates the architecture of the cloud friend discovery
system.

Figure 1: Architecture of Cloud Friend Discovery System

2.2

Security Model

The formal security model of our proposed scheme is deﬁned by the following game runs between
a challenger C and an adversary A.
Key query phase 1: The adversary A tries to query the following random oracles.
OCAKeyGen(gid,i) : A queries with gid and i∗ , where gid is the global identity. It returns the
0
1
, rpskgid,i
) and rppkgid,i .
corresponding responder-identity-key (rpskgid,i
AAKeyGen(att,rppkgid,i ,k)
O
: A queries with rppkgid,i , att and k, where att is the attribute in
Uk . If the submitted pcpkgid,i is illegal, it returns ⊗; otherwise, it returns rask 0 gid,i .
619

Distributed Multi-authority Attribute-based Encryption Scheme ...

Wang, Qi, Wu and Tang

Challenge phase: A submits two equal length message m0 , m1 and access policy A∗ . The
challenger ﬂips a random coin b ∈ {0, 1} and encrypts mb under A∗ . The ciphertext CT ∗ is
given to A.
Key query phase 2: A is once again to repeat the steps in Key query phase 1.
Guess: the adversary A outputs a guess b of b.
The advantage that an adversary A wins this game is Adv(λ) = | Pr[b = b] − 12 |. The
proposed scheme is secure if for any polynomial time, the advantage Adv(λ) is negligible.

2.3

Adversary Model and Design Goal

In the proﬁle matching process, there usually exists two main adversary models: In the honestbut-curious (HBC) model [17], an attacker honestly follows the protocol but tries to get more
information from the received message than allowed. In this paper, we suppose all the authorities and users are honest-but-curious. In malicious model [18], an attacker tries to learn more
information using background knowledge beyond his/her received message or by deliberately
deviating from the protocol.
The main goal as well as the great challenge of our scheme is to conduct eﬃcient matching
against the chosen-plaintext attack and collusion attack.

3

Proposed Scheme

In this section, we will propose a piecewise multi-authority CP-ABE scheme. It mainly consists
of the following phases: system initialization, key generation, information encryption, proﬁle
matching and decryption.

3.1

System Initialization

GlobalInit: On input 1λ , where λ is the security parameter, this algorithm outputs the global
public parameter GP RA. G is a bilinear cyclic group with the order N = p1 p2 p3 , where p1 , p2 , p3
are distinct big prime numbers. Gp i is the subgroup of G with order pi , g is the generator of
Gp 1 and X3 is the generator of Gp 3 . Randomly choose h∈R Gp1 . Finally, the global public
parameter is published as GP RA = {N, g, h, X3 , Σsig }, where Σsig = {KeyGen, Sign, V erif y}
is the secure signature scheme against chosen-plaintext attack.
CASetup: On input GP RA, this algorithm outputs CAi ’s public parameter CAP ARi ,
public key CAP Ki and master key CAM SKi . First of all, each CAi runs the algorithm
KeyGen in the Σsig to generate a pair of secret key and public key < ski , pki >. CAi randomly
chooses αi , ai ∈R ZN to generate master secret key CAM SKi = (αi , ai , ski ) and empty table Ti ,
then publishes the public parameter CAP ARi = (e(g, g)αi , g ai ) and public key CAP Ki = pki .
AASetup: This algorithm takes GP RA, AAk ’s index k and the attribute universe Uk belonging to AAk as input, and outputs master secret key AAM SKk , public parameter AAP RAk
and public key AAP Kk . For each att in Uk , AAk randomly selects satt ∈R ZN and vk,i ∈R ZN ,
then computes Tatt = g satt and Vk,i = g vk,i . Finally, AAi sets its master secret key AAM SKk =
(vk,i , {satt |att ∈ Uk }), and publishes the public parameter AAP ARk = ({Tatt |att ∈ Uk }) and
public key AAP Kk = Vk,i .

3.2

Key Generation

In this phase, a responder submits his/her information to request the public and secret keys.
620

Distributed Multi-authority Attribute-based Encryption Scheme ...

3.2.1

Wang, Qi, Wu and Tang

CA key Generation

In this step, responder registers his/her gid to CAi for requesting the responder-identity keys
and ﬁnally the rppkgid,i is published. The detailed procedure is shown in Algorithm 1.
Algorithm 1: Responder-identity-Keys Generation
Input: responder’s identiﬁer gid
Output: responder’s signature σgid,i , public key rppkgid,i , a pair of secret keys
0
1
, rpskgid,i
>
< rpskgid,i
∗
1 randomly select ci ∈ ZN , rgid,i ∈ ZN , Rgid,i , Rgid,i , Rgid,i ∈ Gp3 ;
rgid,i
a r
0
2 compute: rpskgid,i = ci , Lgid,i = ggid,i Rgid,i , Lgid,i = (g i ) gid,i Rgid,i , μi = αu,i ,
μ1i = αi − αu,i ;
3 for j from 0 to 1 do
μ

4
5
6
7
8
9
10
11
12

j
i

r

j
gid,i
compute rpskgid,i
= g ai +ci hgid,i
Rgid,i ;
end
for k from 1 to K do
randomly choose Rgid,k,i from Gp 3 ;
(a +c )r

compute Γgid,k,i = Vk,ii i gid,i Rgid,k,i ;
end
generate σgid,i = Sigski (gid||Lgid,i ||Lgid,i || ∪K
k=1 Γgid,k,i ) and
rppkgid,i = (gid, Lgid,i , Lgid,i , {Γgid,k,i }, σgid,i );
add (ci , gid) to Ti ;
0
1
return σgid,i , rppkgid,i , < rpskgid,i
, rpskgid,i
>

3.2.2

AA key Generation

When a responder submits his/her keys to AAk for the secret key concerning some attribute
att ∈ Uk in his/her attribute set ASgid . The authorities ﬁrst will verify the identity of the
responder according to the formula:
?

V ALID ←

?

rpsk

e(g, Γgid,k,i ) = e(Vk,i , L gid,i Lgid,i gid,i )
V erif ypki (gid||Lgid,i ||L gid,i || ∪K
k=1 Γgid,k,i , σgid,i )

(1)

If it fails to pass one of the veriﬁcation, AAk outputs ⊗ which means that the responder is
invalid and the system will end the whole procedure.
If the veriﬁcation is correct, AAk will run the Algorithm 2 to generate raskgid,i . After
running the algorithm, AAk transmits ASgid to the cloud server to ﬁnd a matcher.

3.3

Encryption

This algorithm is performed on the initiator’s hand-held device. Suppose the initiator’s real
identity is ID, the personal proﬁle is mprof ile , the symmetric identity encryption key is Kid , the
personal proﬁle encryption key is Kprof ile , the access policy is A = (A, ρ), the secure symmetric
encryptions are EKid (·) and EKprof ile (·). The access policy is deﬁned by a LSSS matrix (A, ρ),
where A is a l × n matrix and ρ will map each row Ax in A to get an attribute ρ(x). ρ is
621

Distributed Multi-authority Attribute-based Encryption Scheme ...

Wang, Qi, Wu and Tang

Algorithm 2: Attribute Key Generation
Input: responder’s identiﬁer gid, attribute att
Output: the attribute secret key raskgid,i
1 randomly select Ratt,gid ∈ Gpi ;
2 for i from 1 to D do
3
for ∀att ∈ Uk ∩ ASgid do
(a +c )r
satt,i /vk,i
4
compute paskatt,gid,i = (Γgid,k,i )satt /vk,i Ratt,gid = Tatti i gid,i Rgid,k,i
Ratt,gid ;
s

6
7
8
9
10

/v

att
k,i
set Ratt,gid,i = Rgid,k,i
Ratt,gid ;

5

(a +c )r

paskatt,gid,i is denoted as Tatti i gid,i Ratt,gid,i ;
end
end
generate raskgid,i = {raskatt,gid,i |att ∈ ASgid };
return raskgid,i

required that when mapping diﬀerent row, the attribute must not be the same. The detailed
encryption procedure is shown in Algorithm 3.

Algorithm 3: Encryption
Input: ID, mprof ile , Kid , Kprof ile , GRP A, AAP ARk , CAP ARi , EKid (·), EKprof ile (·)
Output: ciphertext: CA,ρ , CTid , CTprof ile
n
1 choose a random vector v = (s, v2 , ..., vn ) ∈ ZN ;
2 for x from 1 to l do
3
select a random number rx , where rx ∈ ZN ;
−rx
4
compute Cx = hAx ·v Tρ(x)
;
5 end
∗
a s
6 compute C = g and C = g i ;
7 for sth in {id, prof ile} do
d

compute CTKsth = Ksth

8

e(g, g)

αi s

i=1
9
10

11

12

end
compute CTid = EKid (ID) and CTprof ile = EKprof ile (mprof ile );
⎞
⎛
d
αi s
=
K
e(g,
g)
,
CT
K
id
id
⎟
⎜
i=1
⎟
⎜
d
⎜
αi s ⎟
⎟
⎜ CTKprof ile = Kprof ile
e(g,
g)
,
⎟ , x ∈ {1, 2, ..., l};
deﬁne CA,ρ = ⎜
i=1
⎟
⎜
⎟
⎜ {Cx = hAx ·v T −rx , C x = g rx },
⎟
⎜
ρ(x)
⎠
⎝ C = gs ,
ai s
C =g
return CA,ρ , CTid , CTprof ile

622

Distributed Multi-authority Attribute-based Encryption Scheme ...

3.4

Wang, Qi, Wu and Tang

Proﬁle Matching and Decryption

First, the cloud server will help the responder ﬁnd a matcher. If the responder’s attribute set
ASgid satisﬁes the access policy A = (A, ρ), which means there exists constants ωx ∈ ZN and
ρ(x)∈ASgid ωx Ax = (1, 0, ..., 0), then the cloud server transmits CA,ρ , CTid , CTprof ile to the
responder. When receiving the ciphertexts, the responder runs Algorithm 4 to decrypt.
Algorithm 4: Decryption
0
1
, rpskgid,i
>, DKid (·),
Input: raskgid,i , μ0i , μ1i , CA,ρ , CTid , CTprof ile , < rpskgid,i
DKprof ile (·)
Output: initiator’s identity ID and personal proﬁle mprof ile
⎧
0
e((C )rpsk gid,i C i ,rpskgid,i
)
⎪
⎪
ωx
rpsk gid,i
⎨ Π
(e(C
,L
)e(C
,rask
e(g, g)αu,i
x
x
ρ(x)∈ASgid
ρ(x),gid,i ))
gid,i
→
;
1 compute
rpsk gid,i
1
e((C
)
C
,rpsk
)
e(g, g)(αu −αu,i )
⎪
i
gid,i
⎪
ω
⎩
x
rpsk gid,i
Πρ(x)∈ASgid (e(Cx ,Lgid,i

2
3
4
5
6

4

for sth ∈ {id, prof ile} do
compute Ksth = D

)e(C

x ,raskρ(x),gid,i ))

CTKsth

Πi=1 (e(g,g)αu,i e(g,g)(αi −αu,i ) )

end
compute ID = DKid (CTid ), mprof ile = DKprof ile (CTprof ile ), where DKid (·) and
DKprof ile (·) are corresponding decryption algorithms of Kid and Kprof ile ;
return ID, mprof ile

Security Analysis

In this section, we give security proof of our proposed scheme to achieve multi-authority privacypreserving friend discovery system. Suppose there exists an adversary A and a challenger C.
Deﬁnition 1. Our proposed scheme can achieve privacy-preserving if it is secure in the security game in Section 2.2.
Lemma 1.

Our proposed scheme achieves privacy against adversaries.

Proof. Suppose the adversary A can break our proposed scheme with advantage AdvA , then
the challenger C can break the underlying multi-authority CP-ABE scheme with the advantage
AdvC which equals to AdvA .
Setup: the multi-authority CP-ABE scheme gives C the public parameters GP K =
{N, g, h, X3 , Σsig }, CP Ki = e(g, g)αi , CAP Ki = V erif yKeyi , AP Kk = ({Tatt |att ∈ Uk }),
ACP Kk = Vk,i . C randomly selects ai ∈ ZN and gives A the following public parameters GP RA = {N, g, h, X3 , Σsig }, CAP ARi = (e(g, g)αi , g ai ), CAP Ki = pki , AAP ARk =
({Tatt |att ∈ Uk }), AAP Kk = Vk,i and Ti = ∅. Then, speciﬁes the target uncorrupted CA
with index i∗ and a set of corrupted AAs. C inputs i∗ and gets CM SKi = {αi , SignKeyi },
AM SKk = (vk,i , {satt |att ∈ Uk }). Then C gives CAM SKi = (αi , ai , SingKeyi ) and
AAM SKk = AM SKk to A.
Key query phase 1. (1) When A submits gid and i∗ to the random oracle OCAKeyGen
0,M A
and C submits (gid, i∗ ) to the multi-authority CP-ABE scheme obtaining ucskgid,i
=
∗
623

Distributed Multi-authority Attribute-based Encryption Scheme ...

Wang, Qi, Wu and Tang

1,M A
rgid,i∗
αi∗ −αu,i∗ rgid,i∗
A
A
g αu,i∗ hrgid,i∗ Rgid,i∗ , ucskgid,i
h
Rgid,i∗ , LM
Rgid,i∗ and ΓM
∗ = g
gid,i∗ = g
gid,k,i∗ =
MA

rM A

MA

MA

∗

Rgid,k,i∗ . C randomly selects ci ∈ Z∗N , tgid,i∗ ∈ ZN , R ∈ Gp 3 and sets rgid,i∗ =
Vk,igid,i
∗
C computes the following parameters and sends them to A:
⎧
α
1
u,i∗
1
a ∗ +ci∗
⎪
0,M A a ∗ +c
∗
r
0
⎪
i
i∗ = g ai∗ +ci∗ h gid,i R i
pcsk
=
(ucsk
)
∗
⎪
∗
gid,i
gid,i
gid,i∗
⎪
⎪
α ∗ −α
1
⎪
i
u,i∗
1
⎪
ai∗ +ci∗
1,M
A
1
⎪
a ∗ +ci∗
⎪
pcskgid,i
= g ai∗ +ci∗ hrgid,i∗ Rgid,i
∗ = (ucskgid,i∗ ) i
∗
⎪
⎨
∗
(a ∗ +c ∗ )r
Γgid,k,i∗ = Vk,i∗i i gid,i Rgid,k,i∗
⎪
⎪
pcsk gid,i∗ = ci∗
⎪
⎪
1
⎪
⎪
∗
r
a +ci∗
⎪
∗ = g gid,i (R gid,i∗ ) i∗
L
⎪
gid,i
⎪
ai∗
⎪
⎩
L gid,i∗ = (g ai∗ )rgid,i∗ (R gid,i∗ ) ai∗ +ci∗ R

MA
rgid,i
∗
(ai∗ +ci∗ ) ,

(2)

Then C adds (ci∗ , gid) to Ti .
(2) The adversary A submits (pcpkgid,d , k, att) to OAAKeyGen to obtain attribute key, C ﬁrst
veriﬁes:
?

?

pcsk

∗

e(g, Γgid,k,i∗ ) = e(Vk,i∗ , L gid,i∗ Lgid,i∗gid,i )
V erif ypki∗ (gid||Lgid,i∗ ||L gid,i∗ || ∪K
k=1 Γgid,k,i∗ , σgid,i∗ )

V ALID ←

(3)

If the veriﬁcation is passed, C randomly chooses Ratt,gid ∈ Gpi and computes
(a

paskatt,gid,i∗ = (Γgid,k,i∗ )satt /vk,i∗ Ratt,gid = Tatti
s

/v

∗ +ci∗ )rgid,i∗

Ratt,gid,i∗

(4)

∗

att
k,i
Ratt,gid . Finally, C transmits paskatt,gid,i∗ to A.
where Ratt,gid,i∗ = Rgid,k,i
∗
Challenge phase. The adversary A gives C the access policy A∗ = (A∗ , ρ) and two
messages m0 , m1 with the same length. Then C submits (A∗ , m0 , m1 ) to the multi-authority
CP-ABE scheme and gets the following ciphertexts:
⎧
d
α s
⎪
⎪
CTKsth = mb
e(g, g) i (sth ∈ {id, prof ile})
⎪
⎪
⎨
i=1
C = gs
(5)
⎪
ai s
⎪
C
=
g
⎪
⎪
∗
⎩
−rx
{Cx = hAx v Tρ(x)
, Cx = g rx }(x ∈ {1, 2, ..., l})

It is noted that the above operations are with the restriction that ASgidA cannot satisfy the
access policy A∗ .
Key query phase 2. A is once again to repeat the operations in Key query phase 1.
Guess. The adversary A outputs a guess b of b, and C submits b to the multi-authority
CP-ABE scheme.
From the above analysis, it is obviously that the distribution of parameters, keys and ciphertexts are the same as the real scheme, there we can get AdvC = AdvA .

5

Performance Analysis

In this section, we evaluate the proposed scheme with several existing works in terms of eﬃciency
and practicability. We assume that both of the initiator and the responder have mobile devices
with a 2.3 GHz CPU, e.g., Nexus 5 announced in 2013. This smart phone supports both
624

Distributed Multi-authority Attribute-based Encryption Scheme ...

Wang, Qi, Wu and Tang

Bluetooth 4.0 and dual frequency Wi-Fi. We use Eclipse to implement the simulation code and
it was written in Java. We perform the eﬃciency simulation and comparisons between the [19],
[20] and our proposed scheme. The size of users’ attribute sets is ﬁxed in 30 and n denotes the
number of participated responders.
Figure 2(a) and Figure 2(b) illustrate the computational cost among [19], [20] and our
scheme respectively on the initiator’s and responder’s ends. It is obvious that in [19] [20]
the computational cost increase as the number of responders grows since it is required for the
initiator to generate one group signature for each responder. Figure 2(c) shows communication
overhead comparison among [19], [20] and our proposed scheme. It is appatently that the
communication cost of [19] and [20] sharply grows as the number of responders increases from
50 to 500.

(a) Computational Cost on Initia- (b) Computational Cost on Retor’s End
sponder’s End

(c) Communication Cost

Figure 2: Computation and Communication Comparison

6

Conclusion

In this paper, a distributed multi-authority attribute-based encryption friend discovery scheme
is proposed to achieve multi-level privacy and users can easily achieve ﬁne-grained access control. The detailed security analysis demonstrates that the scheme can resist chosen-plaintext
attack as well as collusion attack in the standard model and performs well in terms of storage,
computational and communication cost. In our future work, we will improve the scheme by
involving the functions of ciphertexts updating and revocation.

Acknowledgements
This work is supported by the National Natural Science Foundation of China under Grant
No. 61103035 and Grant No. 31470028, and the Fundamental Research Funds for the Central
Universities of Central South University (2016zzts337).

References
[1] Lan Zhang, Xiang-Yang Li, and Yunhao Liu. Message in a sealed bottle: Privacy preserving friending in social networks. In Distributed Computing Systems (ICDCS), 2013 IEEE 33rd International
Conference on, pages 327–336. IEEE, 2013.
[2] E Noah. Mobile social networking shows promise, but rich media has higher engagement, 2011.
Available at http://www.emarketer.com/Articles.

625

Distributed Multi-authority Attribute-based Encryption Scheme ...

Wang, Qi, Wu and Tang

[3] Yufeng Wang and Jing Xu. Overview on privacy-preserving proﬁle-matching mechanisms in mobile
social networks in proximity (msnp). In Information Security (ASIA JCIS), 2014 Ninth Asia Joint
Conference on, pages 133–140. IEEE, 2014.
[4] Guojun Wang, Qin Liu, and Jie Wu. Hierarchical attribute-based encryption for ﬁne-grained
access control in cloud storage services. In in Proc. of ACM Conference on Computer and Communications Security (CCS, pages 735–737, 2010.
[5] Justin Manweiler, Ryan Scudellari, and Landon P Cox. Smile: encounter-based trust for mobile
social services. In Proceedings of the 16th ACM conference on Computer and communications
security, pages 246–255. ACM, 2009.
[6] Anna-Kaisa Pietil¨
ainen, Earl Oliver, Jason LeBrun, George Varghese, and Christophe Diot. Mobiclique: middleware for mobile social networking. In Proceedings of the 2nd ACM workshop on
Online social networks, pages 49–54. ACM, 2009.
[7] Rongxing Lu, Xiaodong Lin, Xiaohui Liang, and Xuemin Shen. A secure handshake scheme with
symptoms-matching for mhealthcare social network. Mobile Networks and Applications, 16(6):683–
694, 2011.
[8] Rui Zhang, Rui Zhang, Jinyuan Sun, and Uanhua Yan. Fine-grained private matching for
proximity-based mobile social networking. In INFOCOM, 2012 Proceedings IEEE, pages 1969–
1977. IEEE, 2012.
[9] Ming Li, Ning Cao, Shucheng Yu, and Wenjing Lou. Findu: Privacy-preserving personal proﬁle
matching in mobile social networks. In INFOCOM, 2011 Proceedings IEEE, pages 2435–2443.
IEEE, 2011.
[10] Fang Qi and Wenbo Wang. Eﬃcient private matching scheme for friend information exchange. In
Algorithms and Architectures for Parallel Processing, pages 492–503. Springer, 2015.
[11] Ben Niu, Tanran Zhang, Xiaoyan Zhu, Hui Li, and Zongqing Lu. Priority-aware private matching
schemes for proximity-based mobile social networks. arXiv preprint arXiv:1401.8064, 2014.
[12] Gianpiero Costantino, Fabio Martinelli, and Paolo Santi. Privacy-preserving interest-casting in
opportunistic networks. In Wireless Communications and Networking Conference (WCNC), 2012
IEEE, pages 2829–2834. IEEE, 2012.
[13] Jin Li, Man Ho Au, Willy Susilo, Dongqing Xie, and Kui Ren. Attribute-based signature and its
applications. In Proceedings of the 5th ACM Symposium on Information, Computer and Communications Security, pages 60–69. ACM, 2010.
[14] Siamak F Shahandashti and Reihaneh Safavi-Naini. Threshold attribute-based signatures and
their application to anonymous credential systems. In Progress in Cryptology–AFRICACRYPT
2009, pages 198–216. Springer, 2009.
[15] Vipul Goyal, Omkant Pandey, Amit Sahai, and Brent Waters. Attribute-based encryption for ﬁnegrained access control of encrypted data. In Proceedings of the 13th ACM conference on Computer
and communications security, pages 89–98. Acm, 2006.
[16] John Bethencourt, Amit Sahai, and Brent Waters. Ciphertext-policy attribute-based encryption.
In Security and Privacy, 2007. SP’07. IEEE Symposium on, pages 321–334. IEEE, 2007.
[17] Jun Zhou, Zhenfu Cao, Xiaolei Dong, Xiaodong Lin, and Athanasios V Vasilakos. Securing mhealthcare social networks: Challenges, countermeasures and future directions. Wireless Communications, IEEE, 20(4):12–21, 2013.
[18] Carmit Hazay and Tomas Toft. Computationally secure pattern matching in the presence of
malicious adversaries. In Advances in Cryptology-ASIACRYPT 2010, pages 195–212. Springer,
2010.
[19] Xavier Boyen and Brent Waters. Full-domain subgroup hiding and constant-size group signatures.
In Public Key Cryptography–PKC 2007, pages 1–15. Springer, 2007.
[20] Xiaohui Liang, Zhenfu Cao, Jun Shao, and Huang Lin. Short group signature without random
oracles. In Information and Communications Security, pages 69–82. Springer, 2007.

626

