Intelligent Agents as Cells of Immunological
Memory
Krzysztof Cetnarowicz1, Gabriel Rojek2 , and Rafal Pokrywka3
1

Institute of Computer Science
AGH University of Science and Technology
al. Mickiewicza 30, 30-059 Krak´
ow, Poland
cetnar@agh.edu.pl
2
Department of Computer Science in Industry
AGH University of Science and Technology
al. Mickiewicza 30, 30-059 Krak´
ow, Poland
rojek@agh.edu.pl
3
IBM SWG Laboratory
ul. Armii Krajowej 18, 30-150 Krak´
ow, Poland
rpokrywka@gmail.com

Abstract. Application of mechanisms of immune memory in the computer security domain allows to increase performance of certain class of
security systems that are based on detection of attacks without a priori
knowledge of attack’s technique. Immune memory should enable the system to memorise once encountered attacks and prevent it together with
its consequences in the future. The use of agent technologies gives new
possibilities in the management of stored attack’s patterns — patterns of
obsolete attacks should be deleted but those of new and frequent should
be maintained and generalised. In this paper ideas from agent technology and immune memory domain are introduced into computer security,
tested and discussed.

1

Introduction

Work presented here is a part of research on Host Intrusion Detection System
(HIDS) which is based on anomaly detection. This kind of security systems
are usually placed in key nodes of network infrastructure. The system detects
anomalies by comparing normal and current behaviour of monitored processes.
This approach allows to detect an attack without a priori knowledge of attack’s
technique. To model the behaviour of a process the Markov model with variable
order is used.
Here we would like to focus on mechanisms which will enable the system
to record attacks and to use this recorded information to prevent the same or
similar attacks in the future. In addition detection ought to be faster and the
level of false alarms should decrease. All those merits should be achieved by the
This paper is related to my knowledge and activities before I joined IBM.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 855–862, 2006.
c Springer-Verlag Berlin Heidelberg 2006

856

K. Cetnarowicz, G. Rojek, and R. Pokrywka

realisation of mechanism similar to the natural immune memory. Agent technologies should allow to maintain stable in number population of recognisable
patterns. The population should also dynamically adapt to all current threats
by removal of agents responsible for detection of obsolete attacks and maintaining those responsible for detection of new and frequent ones. Agents use simple
neural network to make decisions about particular threat. This should also enable them to generalise and detect similar attacks to those recorded. Similar
attacks are those with only slightly changed technique.

2

Overview of the Natural Immune Memory

The human immune system is designed to protect an organism against pathogens.
The most important elements of the system are lymphocytes which in great number circulate through the body and detect foreign cells. Basically there are two
types of lymphocytes: T and B. They both cooperate in detection and elimination of pathogens. They also cooperate in creation of immune memory which we
would like to model.
Immune memory is created during the primary immune response. This response is usually slow and has low intensity. The secondary immune response is
initiated by memory cells and is very fast, intensive and often runs without any
clinical symptoms of infection. Additionally the fact that it is triggered by infection with new, but similar to previously seen, pathogens means that immune
memory is associative.
The primary response consists of several steps. First the lymphocyte of type
B detects newly encountered pathogen. Then it receives conﬁrmation of positive
detection from lymphocyte T. This conﬁrmation is called co-stimulation. Next it
is activated and starts to mutate with high rate until it becomes speciﬁc to this
one particular kind of pathogens. After the completion of this step the speciﬁc Bcell proliferate and diﬀerentiate into plasma cells and memory cells. The former
secrete antibodies which participate in elimination of the pathogen, the later
memorise the pathogen. Memory cells do not need any co-stimulation to become activated and to mount the secondary response, during which they rapidly
proliferate and diﬀerentiate into plasma cells. This results in a fast increase of
the number of antibodies and a very fast elimination of the threat. A detailed
description of the entire immune system and can be found in [1], [4] and [5].

3

Mechanisms of Anomaly Detection

In this section a basic information about the HIDS used in our researches into
immune memory is presented. The system is based on anomaly detection in
behaviour of processes working on a given host. Behaviour is represented by
sequences of system calls. Grounds for this choice can be found in [2] and [3].
Analysis of conditional entropy of the sequences suggests that it is reasonable
to choose one of the statistical model which incorporates conditional probability
to build a proﬁle of these sequences. Here we have chosen the Markov chain with

Intelligent Agents as Cells of Immunological Memory

857

variable order. This model provides a probability of the next system call having
seen previous n. In this case n is a length of history and depends on the actual
context — hence variable order. The proﬁle is created during the training phase
from the sequences of system calls representing normal behaviour according to
the algorithm presented in [7]. An overview of Markov models can be found in [6].
Executing the next system call is a single step associated with the probability
provided by the Markov model. During the monitoring phase this probability is
mapped to some amount of penalty points. It is done through a penalty function
ξ : [0, 1] → IR. To be useful this function should give a large amount of penalty
points for probability equal to 0 and small amount if the probability is close to
1. In our research the following function was used:
ξ(x) =

a
+c .
x+b

(1)

The a parameter controls how convex the function is, b and c parameters modiﬁes
the amount of points the function returns for a given probability. All three
parameters must be carefully chosen. In each step the computed penalty points
are added to a penalty account Ξ. To limit aggregation of history the penalty
account is also multiplied by dumping factor ζ < 1 (3).
Ξ0 = 0
Ξi+1 = ζ(Ξi + ξi,i+1 )

(2)
(3)

where ξi,i+1 is the amount of the penalty points computed when going from i-th
step to (i + 1)-th step. If the penalty account exceeds a certain threshold τ an
alarm is ﬁred. Figure 1 presents example plot of the penalty account and the
threshold. From observations it can be concluded that each process has its own
characteristic plot of behaviour what is a very important feature.
Subsequent values of the penalty account form a signal which is unique for
particular process and is also unique for an anomaly. It is reasonable though to
remember and analyse this signal and through this recognise intrusions. Anomaly detector described in this section is a ﬁrst-line analyser. It ﬁres an alarm
whenever signal exceeds the threshold.
The main disadvantage of all anomaly detection methods is the possibility
of false alarms. In addition detection is often too slow and attack or exploit
could have been already executed. In this case any alarm has only informative
value. Immune memory can speed up the moment of detection and thus possibly
prevent the consequences of an attack. It can also lower the level of false alarms
with time.

4

Intelligent Immunological Memory

The main idea of presented research is to realise memory cells as intelligent
agents which are able to remember part of the process’ signal (subsequent values
of the penalty account). The memory agent is born in the moment of raising an

858

K. Cetnarowicz, G. Rojek, and R. Pokrywka

penalty account
threshold

penalty points

200

150

100

50

0
0

100

200
300
executed system calls

400

500

Fig. 1. Example plot of the penalty account and the threshold

alarm by the anomaly detector. Because of the possibility of false alarms this
newly created agent needs a second signal to become fully functional. This signal
comes from an administrator who must conﬁrm that detected anomaly is really
a threat. It is a kind of co-stimulation like in the natural immune system. This is
the only place where human intervention is required. After the administrator’s
decision the agent is turned into one of the two types:
– anomaly speciﬁc — in case there was an anomaly (co-stimulation). The goal
of this agent is to remember particular pattern of an attack and detect its
future appearances.
– anergic — in case it was an false alarm (no co-stimulation). This agent’s aim
is to remember false alarm pattern and prevent future appearances of this
false alarm.
Agents of both types use neural network to recognise patterns in the process’
signal. Neural network also enables the agent to recognise similar patterns to that
remembered. The anomaly speciﬁc agent has simply its neural network trained
to remember a particular attack’s pattern. Anomaly speciﬁc agents are able to
initiate adequate response such as killing the process or tracking all execve calls.
Anergic agents are speciﬁc to patterns of false alarms and if they manage to
detect something no response should be initiated (there is an analogical mechanism in the natural immune system). Anergic agents are able to lower the level
of false alarms with time. For IDS systems it is crucial to keep false alarm rate as
low as possible. This is because usually the number of normal events in a system
is signiﬁcantly larger than the number of abnormal events. Normal events are
therefore analysed more often and even if false alarm rate is low most raised

Intelligent Agents as Cells of Immunological Memory

859

alarms turn out to be false. This problem is known as base rate fallacy and is
directly implicated by Bayes’ theorem. More details can be found in [8].
4.1

Life Energy

To maintain a stable in number population of agents and also to build a population which can dynamically adapt to current threats an idea of life energy is
introduced. At the beginning an agent receives some ﬁxed amount of life energy
Ep . In each step the energy is decreased by 1. There is also determined a certain probability of death of the agent, which depends on the actual level of the
agent’s life energy. The probability is given by the following function:
p(x) =

− E1s + 1 for x < Es
0
for x ≥ Es

(4)

where Es is an arbitrarily chosen value. When the agent happens to detect
something its life energy increases also by arbitrarily chosen value Ea . This
mechanism makes it possible to delete agents which detect obsolete patterns.
It also keeps alive those agents responsible for detection of frequently occurring
patterns.
4.2

Neural Network

The ADALINE (ADAptive LINear Element) neuron is capable of recognising
the most similar patterns to the remembered one what is a key feature for our
purposes. Since the agent is (in this version) responsible only for detection of
one particular pattern its neural network consists of one ADALINE neuron. The
pattern is represented by a vector of m last values of the process signal. The
neuron also has m inputs and m input weights. For now it is assumed that the
length of the pattern is constant.
The activation of the neuron is given by the following formula:
m

wi xi

y=

(5)

i=1

where wi is the i-th weight and xi is the i-th input value. Inputs are often written
simply as vector X and weights as vector W . From properties of ADALINE
the more input vector X is similar to the weight vector W the greater the
activation [9].
The neuron is learned through delta-rule which is an iterative process of
adjusting the vector of weights according to the formula below:
W = W + ηδX
δ =t−y

(6)
(7)

where η is the learning ratio, t is the target value that the neuron should give
for this particular input vector X, y is the actual neuron’s output for the input

860

K. Cetnarowicz, G. Rojek, and R. Pokrywka

vector X. The agent’s decision is positive when the current output is close enough
to the target value, for example when it is s = 99% of the t. On the choice of
s depends agent’s capabilities of generalisation. The s parameter deﬁnes also
patterns similarity. In other words the agent groups similar patterns of similar
anomalies.

5

Experimental Results

Datasets for tests were obtained from publicly available repository prepared by
researchers from Computer Science Department, University of New Mexico [10].
The datasets consists of normal and anomalous traces of privileged processes.
A trace is a sequence of system calls only.
To measure how fast an anomaly is detected a MTFA (Mean Time to First
Alarm) metric is used. The MTFA is deﬁned as:
ρ∈San

alarm1 (ρ)

|San |

(8)

where San is a suite of anomalous traces, |San | is the size of the suite and
alarm1 (ρ) is a number of system call when the trace ρ was ﬁrst identiﬁed as
anomalous. The rate of false alarms is measured simply as the ratio between
the number of times normal trace is identiﬁed as anomalous and the number of
times a trace was classiﬁed correctly.
In performed tests traces of sendmail were used. The normal database of this
program consists of 346 traces and 1799764 system calls. Anomalous database
consists of 25 traces 6755 system calls. There are traces of decode and sunsendmailcp exploits available and also an error condition — forwarding loop. There
was 518229 normal system calls used in the training phase and 1281535 and all
anomalous calls in the monitoring phase.
The testing phase begins when there is trained anomaly detector and empty
agents population. The parameters for the anomaly detector were as follows:
ζ = 0.95, τ = 40. For the penalty function it was assumed that in each step
the maximal amount of penalty points was 15 and for probability 1 the function returned 0. Therefore the b and c parameters could be computed. The a
parameter was set to 20. This parameter combination gave the best results and
was chosen empirically. The population of anergic agents is created during runs
through normal database and theirs Ep was chosen adequately to the size of the
normal traces. Anomaly speciﬁc agents are created in the ﬁrst and next runs
E
through anomalous database. The Es parameter was set to 3p and Ea = Ep .
Those parameters were also chosen empirically so that to achieve a stable agents
population. The size of pattern was m = 30.
Tests have shown that speciﬁc memory agents detects anomalous traces faster
than anomaly detector alone. It can be seen in a decrease in MTFA (Fig. 2).
After the ﬁrst run through normal database anergic agents have lowered falsealarm rate down to 0.0 (Fig. 3). Figure 5 presents a growth of the population
of anergic agents with time. The number of agents doesn’t fall down since all

Intelligent Agents as Cells of Immunological Memory

160
false alarm rate

5e-5

140
MTFA

861

120
100
80
60

4e-5
3e-5
2e-5
1e-5
0.0
0

a

b

a

Fig. 2. Decrease in MTFA after the use
of speciﬁc agents. The ’a’ column refers
to the result when no speciﬁc agents were
used, ’b’ when agents were used.

Fig. 3. Decrease in the level of false
alarms when anergic agents are used. The
’a’ column refers to the result without and
’b’ with anergic agents.

70
population size

350
population size

b

300
250
200
150
100
50

60
50
40
30
20
10

0

0
0

5

10

15

20

25

x1000 of system calls

0

20

40

60

80 100

x10000 of system calls

Fig. 4. The growth of population of spe- Fig. 5. The growth of population of anerciﬁc agents
gic agents

patterns responsible for false alarms are present in the test suite. The growth
of population of speciﬁc agents is presented on Fig. 4. At ﬁrst all anomalous
traces were included in the test suite what is reﬂected in the rapid growth and
stabilisation of the population. Next, after two runs through the anomalous
database, the traces of the decode exploit were removed. It can be seen that the
population has shrunk adequately to the new situation.

6

Conclusions and Further Work

In performed tests it has been shown that memory agents are useful as an improvement of intrusion detection systems based on anomaly detection. They
may help to prevent intrusions when a particular patch has yet to be developed.

862

K. Cetnarowicz, G. Rojek, and R. Pokrywka

Memory agents speed up the detection and lower false-alarm rate. Anergic agents
are also useful when there is some change in program behaviour caused by, for
example, library update. Other advantages include the reduction in amount of
administrator’s work and the adaptation of the agents population to the external
conditions through mechanism of life-energy. However the disadvantage is that
in real implementation the computer resources consumption is very high.
Tests presented here provide only a proof of concept and further work is
needed. There are a few directions in which further research can go. First another potential beneﬁts from using agent technologies must be mentioned. For
example an ability to immunise other hosts in a LAN/WAN area. In this case
a property of mobility must ﬁrst be given to an agent. Additional beneﬁts like
better generalisation and prediction may be achieved by using specialized neural
networks used in pattern recognition in ﬁnancial analysis. This may result in
further improve of MTFA. More investigation into identiﬁcation by behaviour is
also needed.

References
1. Hofmeyr, S.A.: An Interpretative Introduction to the Immune System. To Appear
in the Design Principles for the Immune System and other Distributed Autonomous
Systems, Oxford University Press (2000)
2. Forrest, S., Hofmeyr, S.A., Somayaji, A., Longstaﬀ, T.: A Sense of Self for Unix
Processes. In IEEE Symposium on Security and Privacy (1996) pages 120–128
3. Hofmeyr, S.A., Forrest, S., Somayaji, A.: Intrusion Detection Using Sequences of
System Calls. Journal of Computer Security Vol. 6 (1998) pages 151–180
4. Wierzcho´
n, S.T.: Sztuczne systemy immunologiczne. Teoria i zastosowania. (in polish), EXIT, Warszawa (2001)
5. Kim, J. W.: Integrating Artiﬁcial Immune Algorithms for Intrusion Detection. PhD
Thesis, Department of Computer Science, University College London (2002)
6. Bengio, Y.: Markovian Models for Sequential Data. Neural Computing Surveys 2
(1999) pages 129–162
7. Ron, D., Singer, Y., Tishby, N.: The Power of Amnesia: Learning Probabilistic
Automata with Variable Memory Length. Machine Learning, 25(2–3) (1996) pages
117–149
8. Axelsson, S.: The Base-Rate Fallacy and the Diﬃculty of Intrusion Detection.
ACM Transactions on Information and System Security (TISSEC) 3 (2000) pages
186–205
9. Tadeusiewicz, R.: Sieci Neuronowe. (in polish), Wyd. 2, Akademicka Oﬁcyna
Wydawnicza RM, Warszawa (1993)
10. Data sets available on-line at http://www.cs.unm.edu/˜immsec/systemcalls.htm.
2006

