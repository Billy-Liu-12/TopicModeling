Developing Collaborative Social Software
Ismail Bhana and David Johnson
Advanced Computing and Emerging Technologies Centre,
School of Systems Engineering,
The University of Reading,
Reading, RG6 6AY, United Kingdom
{i.m.bhana, d.johnson}@reading.ac.uk

Abstract. The Internet has an increasing role in facilitating communication
between people and groups of people. As access to the Internet and World Wide
Web is widely available, collaborative services enabled over the Internet are
also burgeoning. In this paper, we present the current issues and our techniques
for developing collaborative social software. We discuss online communities in
the context of social collaborative systems. We then describe our approach
to the development of supporting software for online communities and
collaboration.

1 Introduction
The Internet has an increasing role in facilitating communication between people and
groups of people. Traditional forms, such as telephones, mail and even face-to-face
meetings, are gradually being assumed by computer based forms where socialisation
is enhanced through rich media sharing, reflection on past experiences and greater
availability of services. Communication software allows for audio conferencing,
video conferencing, as well as real-time application sharing. Reflection is supported
by allowing the extensive logging of communications and the ability to annotate these
logs. Content sharing can provide instant publishing of and access to information. As
access to the Internet and World Wide Web (WWW) is widely available, collaborative services enabled over the Internet are also burgeoning.
In this paper, we present the issues and techniques for developing collaborative
social software. In section 3 we discuss online communities and our approaches to
supporting such communities. We then go on to describe our approach to the
development of supporting software for online interaction and collaboration.

2 Related Work
ABC [1] is an exploration into how to conceptualise and model human activities in
the context multi-user interactions. ABC consists of a Java-based cross-platform
development framework and supporting runtime infrastructure on which applications
supporting both synchronous (i.e. real-time) and asynchronous cooperation or
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 581 – 586, 2006.
© Springer-Verlag Berlin Heidelberg 2006

582

I. Bhana and D. Johnson

collaboration can be built. ABC focuses on activity sharing rather than the application
sharing that is more commonly found in CSCW.
Friendster [2] is a Web-based Internet social networking service that supports
online communities with shared content (pictures, videos, and Blogs) and online
profiles that are accessible to other community members. The objective is to enable
individuals to connect, form social networks and interact in virtual communities that
are linked by shared acquaintances. Friendster is based on the circle of friends
technique for networking individuals in virtual communities and has its roots in Ryze
[3], a business networking site founded in 2001.
The DreamTeam framework [4] consists of an environment that is designed to
facilitate the rapid development of collaborative distance learning applications. The
motivation behind DreamTeam is to hide the complexity of the underlying network
and to enable developers to build collaborative applications transparently, using the
facilities and services of the DreamTeam runtime infrastructure.

3 Online Community
Several common features characterise an online community or 'networked
communities' [6]:
•
•
•
•
•

Technological mediation of communications.
Persistence of the overall context or activity of the community.
Multiple interaction styles allowing entities to communicate in a range of ways.
Real-time interaction capabilities facilitating spontaneous collaborations.
Supporting multiple users as opposed to one-to-one contacts.

We identify three interaction styles for communication that encompass all of the
aforementioned factors:
• One-to-one - Direct communication from one participant to another. Examples of
this include email, audio/video chat and instant messaging (IM).
• One-to-many - A single participant communicating with multiple participants.
Most commonly seen examples of this are publishing information on the WWW in
the form of personal web-pages or Blogs. Other examples include audio/video
conferencing.
• Many-to-many - Multiple entities communicating with each other in a larger
context, for example collaborative authoring in Wikis [7] and knowledge sharing in
discussion forums.
In building online communities, both synchronous and asynchronous communication can play a role. Ad hoc collaborations enable entities to self organise and
communicate in real-time, as is the norm in audio/video/IM chat and conferencing.
The ability to edit or annotate content allows entities to communicate over greater
lengths of time where organisation of real-time meetings cannot be realised, or the
nature of the task requires drawn-out periods to complete. Examples of persistence
include publishing information on the WWW using Wikis, discussion forums and
Blogs.

Developing Collaborative Social Software

583

Issues of identity also come into play as community building, whether online or
not, require contributions from and collaboration between identifiable individuals.
Establishing an identity is pivotal in building relationships with others within an
online community, especially if there is no pre-existing relationship outside the
community context. For example, an online community may bring together entities
with no experience of each other but on the other extreme, a community might be
formed that mirrors existing relationships in the 'real' world. In the latter case,
establishing identity is not always necessary.
We identify three enablers for supporting identity in an online community:
• Profiles – A profile represents a persona that a participant wishes to project to the
community.
• Portfolios – A record of participant’s experiences. A portfolio represents
achievements, experience, and evidence, including reflections on each of these.
Dependant on the context, parts of portfolios are publishable to the community for
others to form opinions.
• Participations – The process of interacting with other community entities. By
communicating and collaborating with others, one builds an identity purely
through interaction, rather than publishing some record of identity. As community
participants form opinions of each other, social norms, reputations and individual's
roles can be defined. Norms and roles are not static once identified, and can change
as collective experiences go on.
As an individual builds up a persona defined by their experiences through
contributing, communicating and collaborating with others in a community, issues
regarding intellectual property arise. Typically information is centralised. Users'
profiles, portfolios and content tend to reside in one place so that access may be
tightly controlled; this is normally the case with Web-based community services.
However, there is a growing need to be able to share and exchange information to
support community interactions, such as personal data and content, between multiple
different community systems (Websites or applications) transparently and provide
services that unify various user profiles, portfolios and participations across multiple
systems.
In most cases, access to profile, portfolio and participation data is controlled by the
service provider for a particular community system, forum or community website
(with limited user control). Most service providers require users to register and agree
to certain terms and conditions of service that specify how user information is handled
by that provider alone. This has the affect of hindering the process of interoperation of
community service where there is no dialog between providers (or where services are
hosted by competing organisations). Options here do exist, such as Microsoft Passport
[8], but there is a need for open specifications and technology to facilitate the
transference of user data (as we have defined above) transparently between services
and community systems – ideally where it is managed and controlled by the
participants themselves.
Depending on the needs of a service provider, we submit that a balance between
the needs of individual community systems to enable meaningful contextual

584

I. Bhana and D. Johnson

interactions and freedom of the participants to control access to profile, portfolio and
participation data transparently across multiple community systems is needed.

4 Collaborative Communities with Coco
Coco [9] consists of a set of peer-to-peer (P2P) Internet web services that support the
creation of spontaneous multi-user collaborative sessions, allowing users to selforganise and communicate, share tasks, workloads, and content, and interact
transparently using multiple different computing devices, networks, and operating
systems. Coco is designed to handle both heterogeneity (interoperability between
systems) and to scale from very small to very large communities using P2P
technologies.
Coco is built on a services-based architecture with collaborative community
services hosted by JXTA peers and peer groups. Community data (such as profiles,
portfolios, and participations) is represented using RDF data structures and exchanged
by peers using the Coco metadata content service [10]. Synchronous interactions are
supported by the Coco Messaging Service which allows groups of participants to
engage in real-time video, audio, and IM interactions and the Interaction Service,
which supports real-time presence notification within group interactions. The
objective in providing distinct services is to allow collaborative community applications to access either all or a subset of Coco services hosted by participating peers.
To fulfill the need for enabling collaboration across a range of devices, we are
developing a version of Coco aimed at mobile devices, such as PDAs and mobile
phones. MicroCoco [11] is being developed using Java 2 Micro Edition (J2ME) [12]
and JXTA for J2ME (JXME) [13] technologies. JXME interoperates with JXTA
protocols allowing for mobile devices to participate in JXTA networks. The services
provided by MicroCoco are a subset of the full platform. This is because the hardware
constraints allow a limited amount of bandwidth for communication with other full
Coco peers. For example, a group of Coco peers may be able to participate in video
conferencing; however a MicroCoco peer running on a mobile phone may not
necessarily have the bandwidth to deal with an incoming video stream, or the
hardware capabilities to display that stream. A MicroCoco peer could however
participate in sessions that require more asynchronous communications such as
instant messaging, content sharing and co-authoring.
We assume that the mobile device will not be a user’s primary computing device
and have designed MicroCoco accordingly. To overcome some of the problems with
mobile devices, we pair mobile peers with desktop peers. The mobile peer can then be
used for particular tasks whilst away from the desktop, such as searching for content,
whilst actually redirecting downloads to the paired desktop peer. This content
redirection allows the user to still consume large amounts of content whilst using a
constrained mobile device.
To support seamless collaboration across devices, we are implementing a session
handoff mechanism that allows a user collaborating on one device to transfer session
information to another device. The concept of Application Session Handoff (ASH)
has been identified and practically demonstrated by UCLA's Pervasive Computing
Laboratory project, iMASH [14]. In [14], the authors discuss the need for continuous

Developing Collaborative Social Software

585

computing – the ability to migrate application sessions between heterogeneous
platforms. We plan on implementing this concept for collaborative sessions in Coco
where some of the issues of dealing with platform heterogeneity are inherently solved
through the use of Java and JXTA technologies.

5 Conclusions
This paper has presented a number of issues that reflect our experiences in the
development of collaborative community systems. We submit that the goal of future
community systems should be to support transparency via interoperability in the
underlying architecture. Such transparency will enable a diverse range of community
systems (including websites and applications) to access profile data, portfolios, and
historic participations of participants and built community facilities by consuming
collaborative services from a range of sources.
There are a number of potential areas of future work, including:
• Managing context switching – the implementation of a facility (possibly by via the
incorporation of a new service into the design) that allows users to dynamically
migrate from one device to another without affecting the continuity of
collaboration.
• Support for user roles – Coco does not currently provide mechanisms for defining
user roles within a collaborative context. Roles are, however, fundamental to
effective collaborative and in future the platform needs to provide extended support
for complex roles.
• Support for user activities – research into user activities, via case studies, will
enable us to look more closely into the social aspects of online communities,
particularly where mobile technologies are involved.
• Technological performances. Evaluating consistency of centralised vs. decentralised communities in terms of user-experience (speed of forming communities,
development of roles, and socialisation).

References
1. Bardram, J. E.: Supporting Mobility and Collaboration in Ubiquitous Computing.
Technical Report CfPC 2003–PB–38, Center for Pervasive Computing, Aarhus, Denmark,
(2003).
2. Friendster, online community of friends: http://www.friendster.com, (2005)
3. Ryze, business networking: http://www.ryze.com/, (2005)
4. Marsic, I.: An Architecture for Heterogeneous Groupware Applications, Piscataway, NJ,
USA: Rutgers University, (2000).
5. Mynatt, E. D., Adler, A., Ito, M., and O'Day, V. L.: Design for network communities. In
Proceedings of the SIGCHI Conference on Human Factors in Computing Systems
(Atlanta, Georgia, United States, March 22 - 27, 1997). S. Pemberton, Ed. CHI '97. ACM
Press, New York, NY, 210-217.
6. Wiki, What Is Wiki: http://wiki.org/wiki.cgi?WhatIsWiki, (2005)
7. Microsoft Passport: http://www.microsoft.com/net/default.mspx , (2005)

586

I. Bhana and D. Johnson

8. Bhana, I. Johnson, D. Alexandrov, N.: Supporting ad hoc Collaboration in Peer-to-Peer
Networks", Proc. of 17 International Conference on Parallel and Distributed Computing,
San Francisco (2004)
9. Bhana, I. Johnson, D.: A Peer-to-Peer Approach to Content Dissemination and Search in
Collaborative Networks", Proc. of International Conference on Computational Science
2005, Atlanta (2005)
10. Bhana, I. Johnson, D.: Knowledge Management for Collaborative Learning, Proc. of the
Interactive Computer-aided Learning 05 conference, Villach, Austria (2005)
11. Java 2 Platform Micro Edition (J2ME), http://java.sun.com/j2me/, (2005)
12. JXME: JXTA Platform Project, http://jxme.jxta.org/proxied.html, (2005)
13. Bagrodia, R., Bhattacharyya, S., Cheng, F., Gerding, S., Glazer, G., Guy, R., Ji, Z., Lin, J.,
Phan, T., Skow, E., Varshney, M., and Zorpas, G. 2003. iMASH: interactive mobile
application session handoff. In Proceedings of the 1st international Conference on Mobile
Systems, Applications and Services (San Francisco, California, May 05 - 08, 2003).
MobiSys '03. ACM Press, New York, NY, 259-272.

