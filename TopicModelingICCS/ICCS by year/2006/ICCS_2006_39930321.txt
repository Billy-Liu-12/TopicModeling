Coalescing Cellular Automata
Jean-Baptiste Rouquier1 and Michel Morvan1,2
1

ENS Lyon, LIP, 46 all´ee d’Italie, 69364 Lyon, France
2
EHESS and Santa Fe Institute
{jean-baptiste.rouquier, michel.morvan}@ens-lyon.fr

Abstract. We say that a Cellular Automata (CA) is coalescing when
its execution on two distinct (random) initial configurations in the same
asynchronous mode (the same cells are updated in each configuration at
each time step) makes both configurations become identical after a reasonable time. We prove coalescence for two elementary rules and show
that there exists infinitely many coalescing CA. We then conduct an experimental study on all elementary CA and show that some rules exhibit
a phase transition, which belongs to the universality class of directed
percolation.

1

Introduction

The coalescence phenomenon, as we call it, has been observed for the ﬁrst time
by Nazim Fates [1], in the context of asynchronous cellular automata. Coalescing
CA exhibit the following behavior: starting from two diﬀerent initial random conﬁgurations and running the same updating sequence (the same cells are updated
at each time step in both conﬁgurations), the conﬁgurations quickly become
identical, i.e. the dynamics not only reach the same attractor, they also synchronize their orbits. This of course appears in trivial situations, for example if the
CA converges on a single ﬁxed point, but Nazim Fates has also observed it in a
case where the coalescing orbit is absolutely non trivial.
The goal of this paper is to explore this rather strange emergent phenomenon
in which the asymptotic behavior seems to be only related to the (random)
sequence of update of the cells and not to the initial conﬁguration. This work
shows that, in some cases, the randomness used during evolution is as important
as the one used during initialization: this stochastic dynamic, with high entropy,
is perfectly insensitive to initial condition (no chaos here).
The results presented here are of two kinds. First, we prove the existence
of inﬁnitely many diﬀerent (we precise this notion) non trivial coalescent CA.
Secondly, we study by simulation the behavior of all elementary CA (ECA) with
regards of this coalescence property, in an asynchronous context in which at each
step each cell has a ﬁxed probability α to be updated. We show that over the
88 diﬀerent ECA, six situations occur: a/ 37 ECA never coalesce; b/ 20 always
coalesce in a trivial way (they converge to a unique ﬁxed point); c/ 6 always
coalesce on non trivial orbits; d/ 14 combine a/, b/ and c/ depending on α (4
combine a/ and b/, 3 combine b/ and c/, and 7 combine a/ and c/); e/ 7 enter
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 321–328, 2006.
c Springer-Verlag Berlin Heidelberg 2006

322

J.-B. Rouquier and M. Morvan

either full agreement (coalescence) or full disagreement; last, f/ 4 combine e/
with either a/, b/ or c/.
We also study the transition between non coalescence and coalescence when α
varies for the ECA that combine a/ and c/: there is a phase transition belonging
to the universality class of directed percolation. We thus get a new model of this
class, with a few variants. An unusual fact among directed percolation models
is that the limit of the sub-critical regime is neither a single absorbing state,
nor a set of ﬁxed points, but a non trivially evolving phase. Its originality and
links to other domains could help understanding this class and hopefully lead to
analytical results.
The paper is organized as follows. Section 2 gives deﬁnitions and notations.
We prove in section 3 that, under certain conditions, CA 6 and 7 (using the
Wolfram’s numbering of ECA) are coalescing and show how to construct from
them coalescing CA with arbitrarily many states. We also prove that CA 15
and 170 either coalesce or enter total disagreement, each case occurring with
probability 12 . In Section 4, we describe the exhaustive simulation study of all
ECA and then check the directed percolation hypothesis. Moreover, we prove
that some CA exhibit two phase transitions: one for small α and one for high α.

2

Definitions and Notations

In this paper, we consider the dynamics of some CA when they are run on an
asynchronous mode. Let us start by deﬁning the synchronisms we work with.
Definition 1. An asynchronous ﬁnite CA is a tuple (Q, d, V, δ, n, μ) where
–
–
–
–
–
–
–

Q is the set of states;
d ∈ N∗ is the dimension;
V = {v1 , . . . , v|V | }, the neighborhood, is a finite set of vectors in Zd ;
δ : Q|V | → Q is the transition rule;
n ∈ N∗ is the size;
U := (Z/nZ)d is the cell space (with periodic boundary condition);
μ, the synchronism, is a probability measure on {0, 1}U .

A conﬁguration specifies the state of each cell, and so is a function c : U → Q.
The dynamic is then the following. Let ct denote the conﬁguration at time t,
(c0 is the initial conﬁguration). Let {Mt | t ∈ N } be a sequence of independent
identically distributed random variables with distribution μ. The conﬁguration
at time t + 1 is obtained by
ct+1 (z) :=

ct (z)
δ ct (z + v1 ), . . . , ct (z + v|V | )

if Mt (z) = 0
.
if Mt (z) = 1

In other words, for each cell z, we apply the usual transition rule if Mt (z) = 1
and freeze it (keep its state) if Mt (z) = 0.

Coalescing Cellular Automata

323

Here are the two synchronisms we use. They are the most natural, even if
others are possible (like systematic or alternating sweep, or updating some cells
more often, but this require non independent Mt and so a more general formalism). If x ∈ {0, 1}U , let |x|1 be the number of 1 in the coordinates of x.
The Partially Asynchronous Dynamic Let 0 < α ≤ 1. For each cell, we update
it with probability α, independently from its neighbors. μ is thus the product
measure of Bernoulli distributions: μ(x) := α|x|1 (1 − α)|x|0 (with 00 = 1). The
case α = 1 corresponds to the synchronous dynamic.
The Fully Asynchronous Dynamic At each step, we choose one cell and update
it. Which deﬁnes μ(x) as 1/n if |x|1 = 1 and μ(x) := 0 otherwise.
We now introduce the deﬁnition of coalescing CA to formalize the observation
of [1]. The principle is to use two initial conﬁgurations, and to let them evolve
with the same outcome of the random variables {Mt | t ∈ N }. In other words, we
use two copies of the CA, and at each time step, we update the same cells in both
copies. This comes down to using the same source of randomness for both copies,
like in [2] (on another system) where the authors observe a synchronization.
Definition 2. An asynchronous finite CA is coalescing if, for any two initial
configurations, applying the same sequence of updates leads both configurations
to become identical within polynomial expected time (with respect to n).
Any nilpotent CA (converging toward a conﬁguration where all states are identical) is coalescing if it converges in polynomial time. But there are non nilpotent
coalescing CA, which we call non trivial. We now consider only those CA.
In the following, we heavily use the simplest CA, namely the Elementary CA:
one dimension (d = 1), 2 states (Q = {0, 1}), nearest neighbors (V = {−1, 0, 1}).
There are 28 = 256 possible rules, 88 after symmetry considerations. We use the
notation introduced by S. Wolfram, numbering the rules from 0 to 255.

3

Formal Proof of Coalescence

In this section, we prove that there are inﬁnitely many coalescing CA. For that,
we prove the coalescence of two particular CA and show how to build an inﬁnite
number of coalescing CA from one of them. An easy way to do that last point
would be to extend a coalescing CA by adding states that are always mapped to
one states of the original CA, regardless of their neighbors. However, we consider
such a transformation to be artiﬁcial since it leads to a CA that is in some sense
identical. To avoid this, we focus on state minimal CA: CA in which any state
can be reached. Note that among ECA, only 0 and 255 are not state-minimal.
We ﬁrst exhibit two state-minimal coalescing CA (proposition 1); then, using
this result, deduce the existence of an inﬁnite number of such CA (theorem 1);
and ﬁnally describe the coalescent behavior of two others ECA (proposition 2).
Proposition 1. Rules 6 and 7 are coalescing for the fully asynchronous dynamic
when n is odd.

324

J.-B. Rouquier and M. Morvan

Proof. We call number of zones the number of patterns 01 in a conﬁguration,
which is the number of “blocks” of consecutive 1 (those blocks are the zones).
We ﬁrst consider only one copy (one conﬁguration).
Here is the transition taNeighbors 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 0 1 0 0 0 1 0 0 0
ble of 6. Since one cell at
New state 0
0
0
0
0
1
1
0
a time is updated, and updating the central cell of 101 or 010 does not change its state, zones cannot
merge.
On each pattern 111, the central cell can be updated (lead- · · · 0 0 0 1 · · ·
ing to the pattern 101) before its neighbors (with probability · · · 0 0 1 1 · · ·
1
3 ) with expected time n. On each pattern 0001, the opposite
sequence is possible. It happens without other update of the · · · 0 1 1 1 · · ·
four cells with probability 1/43 and with an expected time of · · · 0 1 0 1 · · ·
3 n. So, as long as there are patterns 000 or 111, the number of zones increases
with an expected time O(n). Since there are O(n) zones, the total expected time
of this increasing phase is O(n2 ).
The conﬁguration is then regarded as a concatenation of words on {0, 1}∗ .
Separation between words are chosen to be the middle of each pattern 00 and 11,
so we get a sequence of words that have no consecutive identical letters, each word
being at least two letter long (that is, words of the language “(01)+ 0? | (10)+ 1?”).
We now show that borders between these words follow a one way random walk
(towards right) and meet, in which case a word disappear with positive probability. The CA evolves therefore towards a conﬁguration with only one word.
Updating the central cell of 100 does not change its state, so the borders
cannot move towards left more than one cell. On the other hand, updating the
central cell of 001 or 110 make the border move. One step of this random walk
takes an expected time O(n).
The length of a word also follows a (non-biased) random walk, which reaches
1 after (on average) O(n3 ) steps, leading to the pattern 000 or 111. This pattern
disappears with a constant non zero probability like in the increasing phase. The
expected time for O(n) words to disappear is then O(n4 ).
Since n is odd, the two letters at the ends of the words are the same, i.e. there
is one single pattern 00 or 11, still following the biased random walk. We now
consider again the two copies. This pattern changes the phase in the sequence
(01)+ , it is therefore a frontier between a region where both conﬁgurations agree
and a region where they do not. The pattern in the other conﬁguration let us
come back to the region where the conﬁgurations have coalesced. We study the
length of the (single) region of disagreement. It follows a non biased random
walk determined by the moves of both patterns.
When this length reaches n, as opposite, the only · · · 1 0 1 0 0 1 0 1 · · ·
change happens when the fourth cell is updated, and it · · · 0 1 0 1 1 0 1 0 · · ·
decreases the length. So, the random walk cannot indeﬁnitely stay in state n.
On the other hand, when the length reaches 1, one · · · 0 1 0 1 0 0 1 0 · · ·
possibility is the opposite, where updating the ﬁfth cell · · · 0 1 0 1 1 0 1 0 · · ·
leads to coalescence.

Coalescing Cellular Automata

325

The other possibility is opposite, where updating the · · · 0 1 0 1 1 0 1 0 · · ·
ﬁfth then the fourth cell leads to the former possibility. · · · 0 1 0 0 1 0 1 0 · · ·
In each case, coalescence happens with a constant non zero probability. One step
of this random walk takes an expected time O(n), the total expected time of the
one word step is thus O(n3 ) (details on expected time can be found in [3]).
So rule 6 is coalescing. The only diﬀerence of 7 is that 000 leads to 010, which
does not aﬀect the proof (only the increasing phase is easier).
Remark 1. If n is even, the proof is valid until there is only one word, at which
point we get a conﬁguration without 00 nor 11. There are two such conﬁgurations, if both copies have the same, it is coalescence, otherwise both copies
perfectly disagree (deﬁnitively). Both happen experimentally.
Theorem 1. For the fully asynchronous dynamic, there are non trivial stateminimal coalescing cellular automata with an arbitrarily large number of states,
and therefore infinitely many non trivial state-minimal coalescing CA.
Proof. Let A2 be the product of a CA A = (Q, d, V, δ, n, μ) by itself, deﬁned as
(Q2 , d, V, δ 2 , n, μ) where δ 2 (a, b), (c, d), (e, f ) := δ(a, c, e), δ(b, d, f ) . Intuitively, A2 is the automaton we get by superposing two conﬁgurations of A and
letting both evolve according to δ, but with the same Mt . If A is state-minimal,
so is A2 .
Let A be a coalescing CA. Then A2 converges in polynomial expected time
towards a conﬁguration of states all in {(q, q) | q ∈ Q }. From this point, A2
simulates A (by a mere projection of Q2 to Q) and is therefore coalescing (with
2
an expected time at most twice as long); and so are (A2 )2 , (A2 )2 , etc. We
have built an inﬁnite sequence of CA with increasing size.
Proposition 2. 15 and 170, for both asynchronous dynamics, coalesce or end
in total disagreement, each case with probability 1/2.
Proof. 170 (shift) means “copy your right neighbor”. The conﬁgurations agree
on a cell if and only if they agreed on the right neighbor before this cell was
updated. So, it is a CA with two states: agree or disagree. This CA is still 170.
This rule converges in polynomial time towards 0∗ (corresponding to coalescence)
or 1∗ (full disagreement) [3]. By symmetry, each case has probability 1/2.
15 means “take the state opposed to the one of your right neighbor”, and the
proof is identical (the quotient CA is still 170).

4

Experimental Study and Phase Transition

In this section, we describe experimental results in the context of partially asynchronous dynamic. We show that many ECA exhibit coalescence and make a
ﬁner classiﬁcation. Speciﬁcally, we observe that some ECA undergo a phase
transition for this property when α varies. We experimentally show that this
phase transition belongs to the universality class of directed percolation.

326

4.1

J.-B. Rouquier and M. Morvan

Classifying CA with Respect to Coalescence

Protocol. We call run the temporal evolution of a CA when all parameters (rule,
size, α and an initial conﬁguration) are chosen. We stop the run when the CA
has coalesced, or when a predeﬁned maximum running time has been reached.
Let us describe the parameters we used. We set n = 500 and n = 2 000 and
got the same results. [3] showed rigorously that α close to 1 (more updates)
1
). We thus
does not mean faster convergence (indeed, it is proportional to α(1−α)
repeat each run three times: for α ∈ {0.05, 0.50, 0.95}. The maximum number of
time steps is equal to a few times n2 . For each rule, we do 30 runs: 10 random
initial conﬁgurations (to ensure coherence) times 3 values of α.
Results. We get the following empirical classes of behaviour:
a/ Some CA never coalesce (or take a too long time to be observed): 4, 5, 12,
13, 25, 28, 29, 33, 36, 37, 41, 44, 45, 51, 54, 60, 72, 73, 76, 77, 78, 90, 94, 104
105, 108, 122, 132, 140, 142, 150, 156, 164, 172, 200, 204, 232.
– Some CA coalesce rapidly.
b/ The trivial way to do this is to converge to a unique ﬁxed point. One
can consider the two copies independently, and wait for them to reach
the ﬁxed point, the CA has then coalesced. This is the case for 0, 2, 8,
10, 24, 32, 34, 38, 40, 42, 56, 74, 128, 130, 136, 138, 152, 160, 162, 168.
c/ The non trivial rules are 3, 11, 19, 35, 46, 154.
d/ Some CA combine two of the three previous behaviors, depending on α. 18,
26, 106, 146 combine a/ and b/; 50, 58, 134 combine b/ and c/; 1, 9, 27, 57,
62, 110 and 126 combine a/ and c/ (see ﬁg. 1).
e/ Some CA end in either full agreement between conﬁgurations (coalescence)
or full disagreement, depending on the outcome of Mt and the initial conﬁguration: 14, 15, 23, 43, 170, 178, 184.
f/ 6 combines the previous point (for small α) with b/, 7 do the same but with
c/, 22 and 30 combine it (for small α) with a/.
Let us to study the phase transition (coalescence or not) when α changes, that is,
rules 1, 9, 27, 57, 62, 110 and 126. We test the hypothesis of directed percolation.
Some rules (9, 110, 126) show two phase transitions, one for low α, noted 9 ,
one for high α, noted 9h . The ones for low α (9 , 110 and 126 ) are “reversed”,
that is, coalescence (sub-critical regime) occurs for higher α. 57 is also reversed.
4.2

Directed Percolation

Due to lack of space, we refer to [4] for a presentation of directed percolation,
which also explains damage spreading, another point of view on this phenomenon.
Our active sites are the cells where the conﬁgurations disagree (density of
such sites is written ρ). Percolation appears when varying α, see ﬁg. 1. The aim
is thus to identify β assuming that ρ(α) = c (α − αc )β for some c and αc .

Coalescing Cellular Automata

327

Fig. 1. (color online) rule 110, n = 500. Time goes from left to right, during 500 steps.
Active sites are dark, coalesced site are light (with light blue standing for state 1,
0.566), branches die. Right:
white for 0). Left: sub-critical phase (α = 0.47 < αc
supercritical phase (α = 0.65 > αc ), active sites spread.

Measure of αc . We use the method described in [4]: plot the density ρ of
active sites versus time in logarithmic scale and ﬁnd the α value for which one
gets a straight line (for α < αc , the AC coalesce faster, for α > αc , it has a
positive asymptotic ρ). We used random initial conﬁguration with each state
equiprobable. To get readable plots we needed up to n = 106 cells and 107 time
steps. We get (recall that αc is not universal, it is just used to compute β):
rule
1
9
9h
27
62 110 110h 126 126h 57
αc > . . . 0.102 0.073 0.757 0.856 0.598 0.073 0.566 0.101 0.720 0.749
αc < . . . 0.103 0.074 0.758 0.858 0.599 0.075 0.567 0.102 0.721 0.750
Note that the αc of 1 and 126 , like 9 and 110 , are very close.
Measure of β. We now plot ρ vs α (ﬁg. 2). The assumption ρ = c (α − αc )β
is valid only near αc . To determine which points should be taken into account,
we plot ρ(α) on a logarithmic scale with x-origin roughly equal to αc (precision
does not aﬀect the result). We keep only the beginning of the curve which is a
straight line. We varied the number of points taken into account to estimate the
loss of precision due to this choice.
Protocol n = 10 000. We let the system evolve for Ttr = 100 000 steps, then
measure ρ during Tsamp = 10 000 step and compute the average. We repeat
such a run for each α value with a ﬁne sampling. The fact that the curve is
smooth (except very near αc ) tells us that measures do not depend much on the
randomness (nor on Tsamp ) and that we do not need error bars. We also checked
that the results do not vary when we change n and Ttr .

328

J.-B. Rouquier and M. Morvan

Fig. 2. ρ(α). Rule 110, n = 10 000. Fitted curve agrees with points used for the fit
(bold).

The ﬁt gives the following ranges, taking into account uncertainty about αc
and which points to keep for the ﬁt. Experimental value for β measured on other
systems is 0.276.
rule
1
9
9h
27
62 110 110h 126 126h 57
β > . . . 0.265 0.270 0.273 0.258 0.270 0.270 0.271 0.250 0.260 0.248
β < . . . 0.279 0.295 0.283 0.305 0.281 0.291 0.281 0.276 0.276 0.281
As expected, this model seems to belong to the universality class of directed
percolation (except perhaps 27, due to higher noise and thus lack of precision).
Source code is available on cimula.sf.net.

References
1. Fat`es, N., Morvan, M.: An experimental study of robustness to asynchronism for
elementary cellular automata. Complex Systems 16 (2005) (to appear).
2. Kaulakys, B., Ivanauskas, F., Mekauskas, T.: Synchronization of chaotic systems
driven by identical noise. International Journal of Bifurcation and Chaos 9(3) (1999)
533–539
3. Fates, N., Regnault, D., Schabanel, N., Thierry, E.: Asynchronous behavior of
double-quiescent elementary cellular automata. In: LATIN. (2006) (to appear).
4. Hinrichsen, H.: Nonequilibrium critical phenomena and phase transitions into absorbing states. Advances in Physics (2000) 815

