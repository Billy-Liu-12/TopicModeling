Delays in Biological Regulatory Networks (BRN)
Jamil Ahmad1 , Adrien Richard2 , Gilles Bernot2 ,
Jean-Paul Comet2 , and Olivier Roux1
1

IRCCyN UMR CNRS 6597
BP 92101, 1 rue de la No¨e, 44321 Nantes Cedex 3, France
2
Programme ´epig´enomique and IBISC, Universit´e d’Evry
Tour Evry 2, Boulevard Fran¸cois Mitterrand, 91025 Evry cedex, France

Abstract. In this article, we propose a reﬁnement of the modeling of
genetic regulatory networks based on the approach of Ren´e Thomas.
The notion of delays of activation/inhibition are added in order to specify which variable is faster aﬀected by a change of its regulators. The
formalism of linear hybrid automata is well suited to allow such reﬁnement. We then use HyTech for two purposes: (1) to ﬁnd automatically all
paths from a speciﬁed initial state to another one and (2) to synthesize
constraints on the delay parameters in order to follow any speciﬁc path.

1

Introduction to Biological Regulatory Networks

Biologists often represent their knowledge on a biological system in terms of
graphs[1]. Biological regulatory networks (BRN) represent interactions between
biological entities which can be genes or their products, proteins. For example,
genetic regulatory networks are graphs where vertices represent genes or regulatory products (e.g. RNA, proteins) and edges represent interactions between
them. These interactions are further directed (regulators are distinct from targets) and signed (+ for activation, − for inhibition).
It is now clear for researchers that the semantics of a biological regulatory
system and more generally an interaction system, is encoded in the dynamics
of the system and not only in the entities of this system. Biologists often use
the previously described regulatory graphs as a basis for generating dynamical
models using either continuous representation or discrete ones.
– In diﬀerential models the activity of each gene is represented by a concentration of the associated RNA or proteins xi , and the evolutions of all concentrations x = (xi )i∈[1,n] obey a diﬀerential equation system dx/dt = f (x).
Observation leads biologists to consider only highly non-linear models with
some strong threshold eﬀects. The derivation of the dynamics from the interaction graph is not trivial even if the type of each interaction is known,
because a lot of parameters have to be inferred, and a tiny modiﬁcation of
a parameter can lead to a strong change in the dynamics.
– In discrete models, the threshold eﬀects are highlighted and allow modellers
to discretize the concentrations. The ﬁrst approach has been based on drastic
discretization since all genes can be either on (present) or oﬀ (absent) [2].
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 887–894, 2006.
c Springer-Verlag Berlin Heidelberg 2006

888

J. Ahmad et al.

This boolean model has been generalized into a multi-valued model [3, 4],
in which logical identiﬁcation of all steady states [5, 6] becomes possible.
The dynamics of these networks are based on abstraction of continuous-time
switching networks which are a special type of hybrid systems as studied in,
for example, control theory. Such continuous-time switching networks have
been used to model dynamics in, for example, the sporulation network of
Bacillus subtilis [7]. The derivation of the dynamics from the interaction
graph remains diﬃcult even if the number of possible models is now ﬁnite.
Since the formalism consists essentially in the discretization of the continuous
diﬀerential equation system, the state space is divided into set of domains
representing the symbolic qualitative states of the network. The transitions
between the diﬀerent states depend on logical parameters that play the role
of limits of the solutions of the diﬀerential equation system of each domain
in the continuous space. These limits are sometimes called attractors or
targets [8].
The modeling activities then focus on the determination of parameters of the
model which lead to a dynamic coherent with the speciﬁcation (formal translation of experimental facts). Formal veriﬁcation is not possible in the general
framework of diﬀerential equation systems. In [9] authors focus on a particular discrete model and use model checking in order to verify if the temporal
properties are satisﬁed. Bernot et al. [8] proposed to consider all possible parameterizations, to generate all possible dynamics, to call for each of them a
model checker for veriﬁcation and to select only models which lead to a dynamic coherent with the speciﬁcation. The enormous number of models limits
this brute force approach.
One can also notice that the transition systems obtained in the formalism
of R. Thomas [2] or of H. de Jong [9] are not deterministic: they abstract all
possible continuous trajectories but they introduce some traces which do not
correspond to continuous ones. This is due to a complete and total abstraction
of time. To overcome this point Ad´ela¨ıde and Sutre [10] showed that under some
conditions of equality of degradation constants, this abstraction can lead to a
dynamic which does not present the same drawback.
In this article we propose to take into account activation and inhibition delays
in the formalism of R. Thomas following [11] where delays have been introduced
to study traces closer to the experiment facts. After having brieﬂy presented R.
Thomas modelling in section 2, we introduce in section 3 the reﬁnement based
on delays. The example presented in section 4 allows us to present an algorithm
for searching paths between two speciﬁed states (section 5). Finally we show how
this algorithm can be helpful for parameter synthesis (section 6). The section 7
is devoted to conclusion.

2

Modeling of R. Thomas

In a directed graph G = (V, A), we note G− (v) and G+ (v) the set of predecessors
and successors of a node v ∈ V respectively.

Delays in Biological Regulatory Networks (BRN)

889

Deﬁnition 1. A biological regulatory network, or BRN for short, is a tuple
G = (V, A, l, s, t, K) where
–
–
–
–
–

(V, A) is a directed graph denoted by G,
l is a function from V to N with l(v) > 0 if G+ (v) = {},
s is a function from A to {+, −},
t is a function from A to N such that {t(u, v)|v ∈ G+ (u)} = {1, ..., l(u)},
K = {Kv |v ∈ V } is a set of maps: for each v ∈ V , Kv is a function from
−
2G (v) to {0, ..., l(v)} such that Kv (ω) ≤ Kv (ω ) for all ω ⊆ ω ⊆ G− (v).

The map l describes the domain of each variable v: if l(v) = k, the abstract
concentration on v holds its value in [0, 1...k]. Similarly, the map s represents
the sign of the regulation (+ for an activation , - for an inhibition).
t(u, v) is the threshold of the regulation: the regulation takes place iﬀ the
abstract concentration of u is above t(u, v), in such a case the regulation is said
active. The condition on these thresholds states that each abstract level of u
plays a role in the set of regulations of v. For all x ∈ [0...l(u) − 1[, the set of
active regulations of u, when the expression level of u is x, diﬀers from the set
when the expression level is x + 1.
Finally, the map Kv allows us to deﬁne what is the eﬀect of a set of regulators
on the speciﬁc target v. If this set is ω ⊆ G− (v), then, the target v is subject to
a set of regulations which makes it to evolve towards a particular level Kv (ω).
Deﬁnition 2 (States). A state μ of a BRN G = (V, A, l, s, t, K) is a function
from V to N such that μ(v) ∈ {0, ..., l(v)} for all variable v ∈ V . We denote E G
the set of states of G.
When μ(u) > t(u, v) and s(u, v) = +, we say that u is a resource of v since
the activation takes place. Similarly when μ(u) < t(u, v) and s(u, v) = −, u is
also a resource of v since the inhibition does not take place (the absence of the
inhibition is treated as an activation).
Deﬁnition 3 (Resource function). Let G = (V, A, l, s, t, K) be a BRN. For
−
each v ∈ V we deﬁne the resource function ωv : E G → 2G (v) by:
ωv (μ) = {u ∈ G− (v) | (μ(u) ≥ t(u, v) and s(u, v) = +) or
(μ(u) < t(u, v) and s(u, v) = −)}.
As said before, at the state μ, Kv (ωv (μ)) gives the level towards which the
variable v tends to evolve. We consider three cases, (1) if μ(v) < Kv (ωv (μ)) then
v can increase by one unit, (2) if μ(v) > Kv (ωv (μ)) then v can decrease by one
unit and (3) if μ(v) = Kv (ωv (μ)) then v can not evolve. The state graph of BRN
represents the set of the states that a BRN can adopt with transitions between
them deduced from these rules.
Deﬁnition 4 (State graph). Let G = (V, A, b, s, t, K) be a BRN. The state
graph of G is a directed graph G = (E G , T ) with (μ, μ ) ∈ T if there exists v ∈ V
such that :
Kv (ωv (μ)) = μ(v) and μ (v) = μ(v) + αv (μ) and μ(u) = μ (u), ∀u ∈ V \{v}
where αv (μ) = +1 if Kv (ωv (μ)) > μ(v) and −1 otherwise.

890

3

J. Ahmad et al.

Reﬁnement Based on Delays

In the semantics that we use, a state can have several successors, each of them
corresponding to the evolution of the expression level of a unique gene (the
dynamic is asynchronous). One way to overcome this indeterminism is to use
timing constraints in terms of parameters with a path algorithm (section 5).
These parameters represent time delays for the discrete changes in expression
levels of a gene. To be more precise, when an order of activation/inhibition
arrives, the biological machinery starts to increase/decrease the corresponding
protein concentration, but this action takes time. These times are abstracted by
−
these time delays. We use two types of time delays d+
v (x) and dv (x) to represent
the time required to change the expression level of a gene v from an abstract
level x to x + 1 and from the level x to x − 1 respectively as shown in ﬁgure 1.
(a)

(b)

v

v

x+1

x+1

x

d+
v(x)
Activation order

t
(x+1)
dv
Inhibition order

x

d-v(x+1)
d+v(x)
t
Activation order Inhibition order

Fig. 1. Approximate evolution (a) of the actual evolution (b) of a gene’s expression

4

Example of a BRN

Consider three genes a, b and c which interact according to the graph of ﬁgure 2(a). From this BRN, we obtain the table of resources (ﬁgure 2-(c)) and state
graph as shown in ﬁgure 2-(b).
In the table of ﬁgure 2, ωv is the set of resources of a gene v ∈ {a, b, c}, that is
the set of biological entities which helps variable v to increase. The evolution of
the expression level of a gene v depends on its resources ωv . Table of ﬁgure 2-(c)
011

111

b
+

(a)

a

110

010

+

(b)
001

+
c
000

100

μ0
μ1
μ2
(C) μ3
μ4
101
μ5
μ6
μ7

a
0
0
0
0
1
1
1
1

b
0
0
1
1
0
0
1
1

c
0
1
0
1
0
1
0
1

ωa
{}
{c}
{}
{c}
{}
{c}
{}
{c}

ωb
{}
{}
{}
{}
{a}
{a}
{a}
{a}

ωc Ka (ωa ) Kb (ωb ) Kc (ωc )
{}
0
0
0
1
0
0
{}
0
0
1
{b}
{b}
1
0
1
{}
0
1
0
{}
1
1
0
0
1
1
{b}
1
1
1
{b}

Fig. 2. BRN (a) and its state graph (b) according to the attractor parameters:
Ka ({}) = Kb ({}) = Kc ({}) = 0 and Ka ({c}) = Kb ({a}) = Kc ({b}) = 1.(c) Associated table of resources

Delays in Biological Regulatory Networks (BRN)
+
ha == da
ha
0

011
+
hc== dc
hc 0
010

h == db
b
hb 0

ha== da
ha
0

h == db
b
hb 0

001
hc== dc
hc 0

000

111

hc== dc+
hc 0
+
hb== db
hb
0

110
+
hb== db
hb
0
101

ha== d+a
ha
0
ha == da
ha
0

891

hc== dc
hc
0
100

Fig. 3. Transition system for the BRN of ﬁgure 2 along with guard conditions

helps the reader to reconstruct the state graph representing the dynamics of the
BRN. The edges in the graph give the possible transitions between states which
can occur with time. The circuit (010, 011, 001, 101, 100, 110, 010) represents
an unstable circuit in the dynamics and the two states not involved in the circuit
are the only two stable states.
We associate a clock hv , to each variable v ∈ {a, b, c}. All the clocks of the
system increase continuously and simultaneously1 . The guard hv == dα
v , where
α ∈ {+, −} gives the condition for the transition. The clock of a variable is set to
zero when this variable changes its abstract level. In ﬁgure 3 all the transitions
are labeled with guards and clock initializations.

5

Searching Paths Between Two States

The analysis of the hybrid reﬁnement of the BRN is performed by using a linear
hybrid model checker HyTech [12]. The delays are deﬁned as parameters whose
values are unknown. We associate timing constraints with qualitative states of
a BRN in terms of time delay parameters. Our path algorithm ﬁnds all the
possible paths between two qualitative states of a regulatory network. We have
implemented this algorithm in HyTech and obtained the exact path between any
two qualitative states of a BRN by applying timing constraints in terms of delay
parameters.
Algorithm 1 is the pseudocode of the HyTech implementation. pre and post
operators returns respectively the predecessors and successors of a state including the state itself. The diﬃculty of the algorithm lies in the fact that it converts the breadth-ﬁrst search (induced by the post operator) into the depth-ﬁrst
search of a path. The algorithm consists of two main loops. In the outer loop the
algorithm exhaustively searches the final state from the initial state and
accumulates the accessed states in a set named states accumulated. When
1

It is possible to go from x to x via the increasing (resp. decreading) of variable v if
−
the time delay d+
v (resp. dv ) is achieved by the clock associated to v.

892

J. Ahmad et al.

Algorithm 1.

Finds paths between two states

1: Path(initial state, ﬁnal state)
2: states accessed :=initial state; // The ﬁrst accessed states is the initial state
3: reached := initial state; // The ﬁrst visited state is the initial state
4: path := initial state; // Path is set to initial state
5: states accumulated := initial state;
6: // while exist accessible states of a BRN from initial state
7: while not empty(states accessed) do
8:
// The set of accessed states is now the successors of the previously accessed states
9:
states accessed := post(states accessed) - states accessed;
10:
path := states accessed - path; // Find new states of a path
11:
states accumulated := states accumulated
path; // Set that accumulates the states
12:
states accumulated := states accumulated - initial state; // Remove the initial state
13:
14:
15:
16:
17:
18:
19:
20:
21:
22:
23:
24:
25:
26:
27:
28:
29:
30:
31:
32:

from
the set
states accessed := states accessed - reached; // Remove all previously visited states from set
of accessed states
reached :=reached states accessed; // The previously visited states will now be the accessed
states
// Check if ﬁnal state is accessed
if not empty(path
ﬁnal state) then
states accessed1:= ﬁnal state;
reached1 := ﬁnal state;
path1:=ﬁnal state;
//The nested loop starts here
while not empty(states accessed1) do
// The set of accessed states is now the predecessors of the previously
// accessed states in a set of accumulated states
states accessed1 := (pre(states accessed1)-states accessed1)
states accumulated;
path1:=states accessed1 - path1;
path states := path states path1; // Set that accumulates the states of one discovered
path
states accessed1 := states accessed1 - reached1;
reached1:= reached1
states accessed1;
end while
print path(path states); // To print the states of a path
end if
end while

the algorithm ﬁnds the final state then it starts the nested loop and begins backward search from final state and takes the intersection of each accessed states with the set states accumulated. If the intersection is not empty
then the algorithm gives the intersection as a state of the path which is accumulated in a set path states. Finally the algorithm invokes the procedure
print path(path states) to print the states of a path in proper order.

f:111

2:011

D

f:111
f:111

A

5:101

1:000

4:000

C

8:110
9:010

6:100

3:001

i:010

B

7:000

Fig. 4. How the algorithm ﬁnds the ﬁnal states from initial state and vice versa. The
empty state shows the accessibility of ﬁnal state through other path.

Delays in Biological Regulatory Networks (BRN)

893

The dashed lines (A), (B) and (C) of ﬁgure 4 represent the successive sets of
accumulated states when the algorithm ﬁnds the ﬁnal state f during the outer
loop. The inner loop is used for backward search and the dashed arrow (D) shows
this search for the ﬁrst path. Algorithm 1 ﬁnds the three paths between states
(0,1,0) and (1,1,1) in the example of ﬁgure 3.

6

Parameters Synthesis

The delay parameters used for the increasing and decreasing of the expression
level of a gene v can be synthesized in HyTech to form timing constraints for
each transition that takes place in paths between two states. The conjunction of
constraints along any sequence of transitions gives the synthesized parameters
constraint for the given path.
–
–
–
–

For
For
For
For

the
the
the
the

transition
transition
transition
transition

(0,1,0)
(0,1,1)
(0,0,1)
(1,0,1)

→
→
→
→

(0,1,1):
(0,0,1):
(1,0,1):
(1,1,1):

−
d+
c ≤ db
−
db ≤ d+
a
−
+
−
−
d+
+
d
c
a ≤ da + db + dc
+
−
+
−
+
−
da + db ≤ dc ∧ da + d+
c ≤ da + db

Now if we desire to ﬁnd only the path shown by the bold line in ﬁgure 3,
then we use the timing constraints which are synthesized2 by HyTech for the
transitions in one path starting from a state where ha = hb = hc = 0 (see
below). Thus, we draw an equivalence between the path (0, 1, 0) → (0, 1, 1) →
(0, 0, 1) → (1, 0, 1) → (1, 1, 1) and the region described by the conjunction of
−
−
−
+
+
+
+
−
−
+
constraints: (d+
c ≤ db ) ∧ (db ≤ da ) ∧ (dc + da ≤ da + db + dc ) ∧ (da + db ≤
−
−
+
+
−
dc ) ∧ (da + dc ≤ da + db ).

7

Conclusion

We propose in this paper a reﬁnement based on delays for BRN modelling. The
introduction of delays allows one to distinguish paths from one state to another
one. This reﬁnement reintroduces time in the abstraction of R. Thomas, and this
way is diﬀerent from the reﬁnement of [13] and [10] which split the state space
by partitioning the domains of the state space. The present work describes how
the introduction of time can be helpful for modeling such networks, allowing the
modeller to verify temporal properties. It is now crucial to confront this modelling with real experiments. Our experience in modeling in a multidisciplinary
context will help to initiate biological modeling with delays.
Our future work is threefold: (1) formal representation of parameters constraints, (2) parameter synthesis: we have to check when a path is equivalent to
an empty region and what this really means, and (3) cycles: we have to check if
there are cycles in the state graph of a BRN.
2

The interested readers can contact the authors for the HyTech codes and results.

894

J. Ahmad et al.

References
1. de Jong, H.: Modeling and simulation of genetic regulatory systems: a literature
review. J. Comput. Biol. 9(1) (2002) 67–103.
2. Thomas, R.: Logical analysis of systems comprising feedback loops. J. Theor. Biol.
73(4) (1978) 631–56
3. Snoussi, E.: Qualitative dynamics of a piecewise-linear diﬀerential equations : a
discrete mapping approach. DSS 4 (1989) 189–207
4. Thomas, R.: Regulatory networks seen as asynchronous automata : A logical
description. J. theor. Biol. 153 (1991) 1–23
5. Snoussi, E., Thomas, R.: Logical identiﬁcation of all steady states : the concept of
feedback loop caracteristic states. Bull. Math. Biol. 55(5) (1993) 973–991
6. Devloo, V., Hansen, P., Labb´e, M.: Identiﬁcation of all steady states in large
networks by logical analysis. Bull. Math. Biol. 65(6) (2003) 1025–51
7. de Jong, H., Geiselmann, J., Batt, G., Hernandez, C., Page, M.: Qualitative simulation of the initiation of sporulation in Bacillus subtilis. Bulletin of Mathematical
Biology 66(2) (2004) 261–299
8. Bernot, G., Comet, J.P., Richard, A., Guespin, J.: Application of formal methods to
biological regulatory networks: Extending Thomas’ asynchronous logical approach
with temporal logic. Journal of Theoretical Biology 229(3) (2004) 339–347
9. de Jong, H., Geiselmann, J., Hernandez, C., Page, M.: Genetic network analyzer:
qualitative simulation of genetic regulatory networks. Bioinformatics 19(3) (2003)
336–44.
10. Ad´ela¨ıde, M., Sutre, G.: Parametric analysis and abstraction of genetic regulatory
networks. In: Proc. 2nd Workshop on Concurrent Models in Molecular Biology
(BioCONCUR’04), London, UK, Aug. 2004. Electronic Notes in Theor. Comp.
Sci., Elsevier (2004)
11. Thomas, R., Kaufman, M.: Multistationarity, the basis of cell diﬀerentiation and
memory. Chaos 11 (2001) 180–195
12. Henzinger, T.A., Ho, P.H., Wong-Toi, H.: HYTECH: A model checker for hybrid
systems. International Journal on Software Tools for Technology Transfer 1(1–2)
(1997) 110–122
13. Batt, G., Ropers, D., de Jong, H., Geiselmann, J., Page, M., Schneider, D.: Qualitative analysis and veriﬁcation of hybrid models of genetic regulatory networks:
Nutritional stress response in Escherichia coli. In Morari, M., Thiele, L., eds.:
Eighth International Workshop on Hybrid Systems: Computation and Control,
HSCC 2005. Volume 3414 of Lecture Notes in Computer Science., Springer (2005)
134–150

