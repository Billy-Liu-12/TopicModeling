Logic Mining for Financial Data
G. Felici1 , M.A. Galante2 , and L. Torosantucci3
1

2

Istituto di Analisi dei Sistemi ed Informatica del CNR,
Viale Manzoni 30 - 00185 Roma, Italy
felici@iasi.cnr.it
Istituto di Analisi dei Sistemi ed Informatica del CNR,
Viale Manzoni 30 - 00185 Roma, Italy
galante@iasi.cnr.it
3
Banca Nazionale del Lavoro
luca.torosantucci@bnlmail.com

Abstract. In this paper we consider a new strategy for supporting timing decisions in stock markets. The approach uses the logic data miner
Lsquare, based on logic optimisation techniques. We adopt a novel concept of good session, based on the best return expected within a given
time horizon. Such deﬁnition links indirectly the buying decision with
the selling decision and make it possible to exploit particular features of
stock time series. The method is translated into an investment strategy
and then it is compared with the standard buy & hold strategy.

1

Introduction

In this paper we investigate a new approach for the analysis and the forecasting
of ﬁnancial data. Such approach is based on the combination of Logic Data
Mining with ﬁnancial Technical Analysis. Logic Data Mining is a particular
type of automated learning that derives from data a set logic rules that exploit
the structure of the data, if present, and then allows to classify new records with
a good level of accuracy. We use the Lsquare System [6], a logic data miner based
on logic programming designed speciﬁcally for application to logic data that has
some original features particularly useful in this context. Technical Analysis is
based on a number of indicators that are computed from the values of a stock
in diﬀerent time intervals. It typically considers the opening, closing, minimum,
and maximum values of a stock in one or more time intervals (e.g., the daily
sessions) and computes from such values some indicators that suggest to buy or
to sell the security under analysis. In this paper we brieﬂy overview the basic
concept of ﬁnancial theory, provide a general overview of the method proposed,
describe the learning algorithm used, and present computational results.

2

Financial Theory and Learning Applications

One of the most representative theories in ﬁnance is the Eﬃcient Market Hypothesis (EMH) of Fama ([4], [5]). This hypothesis states that security prices
fully, instantaneously and rationally reﬂect all available information about that
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part IV, LNCS 3994, pp. 460–467, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Logic Mining for Financial Data

461

security. A price that fully and rationally reﬂects all available information implies that the market is perfectly rational and that every kind of information can
be unequivocally interpreted. A price that instantaneously reﬂects all available
information implies that the time reaction of the market is so fast that it is
not possible to take advantage of new data. For these reasons, if the EMH is
true, it is not possible to implement an investment strategy that constantly obtains greater returns than the market, usually represented by an index (e.g. the
S&P500). The discussion on market eﬃciency is not only academic. Generally,
investors pick the asset of a portfolio by using either Fundamental Analysis or
Technical Analysis (TA). The fundamentalist states that, in general, prices do
not reﬂect the real value of the underlying ﬁrm. This implies that the market
is not rational and the stock can be either overpriced or underpriced, according
to the misunderstanding of the available information. The fundamentalist also
believes that every mistake will be corrected by the market. On the contrary, the
follower of Technical Analysis believes that the market, on average, is rational.
If a market is really eﬃcient, both technical and fundamental analysis can not
constantly ensure greater returns than the market. For this reason, according to
the EMH, the best strategy for an investor should be to buy and hold a representative portfolio of the market. After the ﬁrst exhaustive claim of the EMH made
by Fama in 1970, a great number of papers seemed to conﬁrm unequivocally the
eﬃciency of the market. At the same time, a lot of research showed the unpredictability of prices and markets. In the 1980s a few papers highlight the ﬁrst
anomalies regarding the eﬃcient market hypothesis, but only at the end of that
decade and the beginning of the 1990s the idea of the EMH was reconsidered.
In 1989 Samuelson changed his original opinion [13] and stated that eﬃciency
is not a perfect paradigm for the market. In his work, he recalls papers which
show statistically signiﬁcant deviations from the random walk and the fact that
it is possible to ﬁnd, on long time horizons, a tendency of the price. Several
papers test the eﬀectiveness of technical analysis by means of empirical research
on speciﬁc timing strategy (among them, [3] [5], [11], [12]). The work presented
in this paper falls into this last category, but is characterized by the application
of Data Mining techniques, that provide a large number of non parametric, non
linear and non statistic models to extract knowledge from observed data. Often,
the complexity of such models requires sophisticated optimisation techniques.
Such tools have appeared in ﬁnancial literature in recent years and seem to play
a key role to uncover the hidden and local regularities that may allow to beat
the market in the short to mid term, contradicting the EMH in its strong form
but not necessarily in its weak or semi-strong form. Their eﬀectiveness is often
to be accounted to their capability of using models that go beyond the standard
linear models of multidimensional statistic regression, as shown in the many
applications described in [8], [9], [10].

3

An Overview of the Method

In this section we describe the proposed method to determine the timing to buy
and to sell a stock in a proﬁtable way. We provide the list of the TA indicators

462

G. Felici, M.A. Galante, and L. Torosantucci

used and the deﬁnition of good session; we consider the problem of identifying
the right training period and the problem of when is it useful to learn from data.
The learning tool Lsquare and its role in the whole picture will be treated in
Section 4.
3.1

The Learning Approach

We intend to learn from a number of previous sessions whether the current
session is good to sell or to buy a given stock. To accomplish this task we must
start from the deﬁnition of a number of measures of each session and a way
to identify whether a session is good or not. Such data, properly processed by
a learning algorithm, may identify some relation between the measures of the
session and its type (good, not good), that can be used for making a decision
about the right operation to make in the current session. In the following we will
refer to daily sessions (technically a session may be identiﬁed by any ﬁxed time
interval). We ﬁrst provide some notation. We refer to t as the current session
(or day) where we want to make the decision. The Training Period T P is the
number of days before t that we want to analyse to support our decision. We
indicate with T the length in days of the training period. Each session i ∈ T P
is represented by a vector of m measures Vi = vi1 , vi2 , ..., vim . Each session can
belong to one of two classes: class A (buy) or class B (don’t buy). Then, we
apply a learning algorithm to determine a classiﬁcation rule into A or B of the
sessions in the T P based on their description by vectors Vi , i ∈ T P . Such rule
is used to determine whether today’s session, St , belongs to class A or class B
and take appropriate action. In the next sections we will see how we determine
the measures in Vi and what determines the belonging of a session to A or B.
3.2

The Indicators of Technical Analysis

Technical Analysis (TA) developed a great number of analysis instruments. Typically, four diﬀerent types are considered: Trend Instruments, that identify the
trend by means of straight lines which pass through as great a number as possible of local minimum and maximum of prices; Moving average, by which traders
buy (sell) when the chart is over (under) its moving average; Oscillator Indicators, that are simple mathematical models which deﬁne critical situations of
the market. The presence of a speciﬁc codiﬁed pattern (the codiﬁcation is based
on the analysis of the past) can describe the most probable consequence for the
price in the future. Contrary to fundamental strategies, technical analysis does
not use public information such as announcements of new prospects or balance
sheet items; according to traders, the current price correctly reﬂects this information. Generally, four time series are used, which are composed of the highest
price, the lowest price, the closing price and the open price of a signiﬁcant period
of time, called session. The length of the session depends on the time horizon
of the single investor. The most common session is daily, but investors with a
shorter time horizon can also use a shorter session, for example of an hour or ﬁve
minutes. On the other hand, investors with a longer horizon can use a session

Logic Mining for Financial Data

463

of a week or a month. We have tested and implemented the most common TA
indicators, on diﬀerent time periods, and veriﬁed their eﬀectiveness in spotting
a good session when used as input data for the logic data miner. We omit for
brevity a detailed description of the indicators listed below, as they are common
knowledge in the ﬁnancial literature: Moving Average (MA), Relative Strength
Indicator (RSI), Stochastic Oscillator, P-Momentum, On balance volume (OBV),
Price and Volume Trend (PVT), Volume Accumulation Oscillator (VAO).
The most serious obstacle to the investigation of technical analysis is his great
number of instruments which can be combined to implement a timing investment strategy. Each instrument concentrates his analysis on a particular aspect
of the market; even if a timing strategy based on one or more TA indicators may
be reasonable from a ﬁnancial point of view, it is unlikely to ensure a better
result than the market in varying conditions. Moreover, each instrument generally depends on a set of parameters and these parameters depend on the current
market and on the time horizon of the investor. Typically these parameters are
thresholds which permit to establish if a stock is over- or under-bought. Unfortunately, there is not a rigorous method to ﬁx them. We have tackled these two
open problems in the following way. First, we have represented each session by
a large number of indicators, with diﬀerent values of n, and determined experimentally what set of indicators was providing better overall performances in our
learning scheme. Once such reduced set was determined, we used it to represent
each session, using the selected indicators to determine the components of the
vectors Vi for all sessions in the training period T P (see section 3.1). Second,
we have avoided the choice of thresholds for the indicators using a particular
feature of the learning method Lsquare that automatically maps rational values
into intervals in an optimal way with respect to the learning task.
3.3

The Good Sessions and the Timing Strategy

One of the problems that is encountered when using a learning method for
ﬁnancial decision is what is to be considered a good (or bad) session; in other
words, what are the classes (e.g., the A and B of section 3.1) that we would like
to be able to recognize in the future to make good decisions. Such deﬁnition is
strongly dependent on the investment strategy that will use this information. In
this paper we have adopted an original deﬁnition of good session that is related
with the time horizon in which the trader intends to operate. Let us assume
that this time horizon, indicated with h, is a measure of the frequency in which
we want to operate on the stock (for example, 10 days). For a given session i,
let closei , openi , mini , maxi , be the opening, closing, minimum, and maximum
prices in the session, respectively. For session i, let the Best Return Within h be
deﬁned as:
BRWh (i) = maxj=i,i+h

closej − closei
.
closei

Such value represents the maximum increase in value that could be obtained
on that stock buying it on the closing price of day i and selling it within the

464

G. Felici, M.A. Galante, and L. Torosantucci

next h days, at closing price. For a given training period T P , consider now the
distribution of BRWh (i), i ∈ T P , and take the value λ as the splitting point that
separates the highest 25% of that distribution from the rest. Now, assume one
can correctly predict whether today’s session t has BRWh (t) higher than λ or
not. This would imply a very simple investment strategy that guarantees returns
that are signiﬁcantly higher than the market. Obviously such strategy cannot be
applied in practice, as we cannot know in advance the value of BRWh (t); but, if
we can estimate with a good level of accuracy whether it is above the current λ,
we can expect high returns and sell the stock within h sessions as soon as it rises
above λ. On the other hand, if the prediction turns out to be incorrect, that is,
if the stock price does not rise as much as λ in h sessions, we sell the stock and
tolerate that potential loss.
3.4

The Identiﬁcation of the Training Period

The strategy described above is applied anew in each session t, computing new
indicators and new classiﬁcation rules from a T P of given length determined with
a sliding time window. A relevant question to answer is what is the appropriate
length of the training period; the length is obviously dependent from the time
horizon h. Such parameter requires proper tuning and has been found that a
value of 75 days when h = 10 provides good performances for the stocks analysed.
Another crucial issue is whether the information contained in the training period
is intersting for learning or not. In this setting, two major considerations arise.
As far as the current trend of the stock is concerned, an immediate information
is found in the value of λ. If in session t its training period T P has λ < 0, we
know that even in the best 25% of the sessions in T P there are sessions that do
not provide any gain in the value of the stock. In such case the session is skipped,
no learning is applied and the stock is not purchased. When the distribution of
BRWh (i), i ∈ T P , is very ﬂat, the information available in T P is not suﬃciently
varied to provide good support for diﬀerentiation of the two classes. It may
also happen that all sessions in the training period are positive sessions: they
provide a value of BRWh (i) suﬃciently large, and thus the recognition problem
is not relevant for the success of the investment. To apply this consideration
is a systematic way, we adopt a ﬁltering rule based on the mean μ and the
variance σ of the distribution of BRWh (i), i ∈ T P and set a threshold σ o and
two thresholds μlow and μhigh to implement the above considerations.

4

The Learning System Lsquare

The learning tool used in this application, Lsquare, is a particular learning
method that operates on data represented by logic variables and produces rules
in propositional logic that classify the records in one of two classes. The general
scheme of this method is the one of automatic learning, where the records presented in a training set are used to infer the rules that link the class variable
with some measures; these rules are then used to classify new records and predict
their class. Here we intend to apply this method in each daily session, using as

Logic Mining for Financial Data

465

training data the previous T sessions, represented by a vector Vi of measures
derived from a set of TA indicators. The training set, or T P , is divided into
class A (good sessions, that have the value of the Best Return Within h days
larger than λ (see Section 3.3)), and class B (the other sessions in T P ). The
choice of Lsquare is motivated by the fact that it uses a logic representation
of the description variables, that are to all extents logic variables, and of the
classiﬁcation rules, that are logic formulas in Disjunctive Normal Form (DNF).
Such feature enables to analyse and interpret the classiﬁcation formula also from
the TA point of view, exploiting the relation between the indicators and their
threshold values. The learning of propositional formulas from data is tackled also
by other learning methods, such as the strongly heuristic, simple and widely used
decision trees (originally proposed in [2]), to the more sophisticated LAD system
([1]), to the greedy approach proposed in [14]. The Lsquare system and some of
its additional components have been described in [6], and its detailed description
is out of the scope of this paper. Here we simply mention the fact that the rules
are determined using a particular problem formulation that amount to be a well
know and hard combinatorial optimisation problem, the minimum cost satisﬁability problem, or MINSAT, that is solved using a sophisticated program based
on decomposition and learning techniques [15]. The DNF formulas identiﬁed are
composed of conjunctive clauses that are searched for in order of coverage of the
training set, and are formed by few clauses with large coverage (the interpretation of the trends present in the data) and several clauses with smaller coverage
(the interpretation of the outliers in the training set). Lsquare is equipped with
an automatic method to map continuous variables into binary ones (a complete
description of this method may be found in [15]). This approach tries to solve the
problem related with the choice of the thresholds in the use of TA indicators: we
can in fact use the natural representation of many of them (e.g., the 0-100 value
of the indicator RSI see section 3.2) and let the system choose the thresholds
at which these indicators become useful to diﬀerentiate the good from the bad
sessions.

5

Experiments

In this section we describe the results obtained by the application of our method
to time series of stocks. In each experiment we consider an experiment period,
in which each day represent a separated session. We assume to dispose of a ﬁxed
amount of capital to invest, say K, available at the beginning of the experiment
period. Some necessary hypotheses were also made, that may reduce part of
the risks related with the application of investment strategies in real markets:
we do not allow to buy or sell a portion of the available capital, we assume to
successfully buy or sell the stock at the closing price of each session, and we
discount a ﬁxed 0.02% transaction cost each time the stock is bought. Having
chosen a training period T P of length T , a time horizon h, σ o , mulow , and
muhigh , we then perform the following steps (where t is the current session and
T P is the set of sessions from t − T − 1 − h to t − 1 − h):

466

G. Felici, M.A. Galante, and L. Torosantucci

INVESTMENT STRATEGY(T P , h, σ o , mulow ,muhigh )
1. Initialize. Set i = 0, d∗ = −1, λ∗ = −1, goto step 1
2. Classify T P . For each session i ∈ T P , compute BRWh (i). From the distribution of
BRWh (i), I ∈ T P , compute λ, μ and σ. For each session i ∈ T P , if BRWh (i) > λ
deﬁne session I to be in set A, and to be in set B otherwise; goto step 2
3. Evaluate bad. If (λ ≤ 0) or (σ < sigmao and μ < mulow ) then go to step 6, else
goto step 3
4. Evaluate good. If (λ > 0) and (σ < sigmao and μ > muhigh ) then go to step 5,
else goto step 6
5. Learn and Classify. Process the sessions in T P by Lsquare to learn classiﬁcation
rules for A and B. Apply such rules to current session t. If session t is classiﬁed in
A, goto step 5, else goto step 6
6. Buy. If capital is available, use all of it to buy stock. set λ∗ = λ and d∗ = t + h
and goto step 1
7. Sell. If BRWh (t) > λ∗ or t >= day ∗ , sell all stock and goto step 1

We have considered two diﬀerent stocks in diﬀerent periods, making sure that
the data obtained was correct and complete. The main parameters involved
were initially tuned with several runs, and then used in the two experiments
described below. We use a value of 10 for the time horizon h and 75 days as
training period. The decision thresholds σ o , mulow , and μhigh were set to 1,
2.0 and 3.0 respectively. The ﬁrst experiment refers to the daily sessions of the
Future Bund (the future on the decennial german government bond), in the 200
days from November 22nd 2002 to October 10th , 2003. In this period the Bund
has a positive trend with little ﬂuctuations and our system is able to improve on
Buy & Hold strategy by a signiﬁcant ratio (see Figure 1, a)). At the end of the
period, the Buy & Hold reports a gain of 1.049%, outoperformed by the 5.003%
obtained by the proposed method. In the second experiment we take into account
a stock with more ﬂuctuations, in order to test the capability of the method in a
diﬀerent situtation. The consider case is the Alitalia bond from August 27th 2004
to June 6th , 2005. While Buy & Hold registers a loss of −4.639%, the proposed

1200

1065
1055

1150

1045
1035
1100

STRA

1015

B&H

value

value

1025
STRA

1050

B&H

1005
1000

995
985

950

975

199

190

181

172

163

154

145

136

127

118

91

109

82

100

73

64

55

46

37

28

19

10

900
1

199

190

181

172

163

154

145

136

127

118

91

days

109

82

100

73

64

55

46

37

28

19

10

1

965

days

Fig. 1. Comparison with Buy and Hold for German Bund (a) and Alitalia (b)

Logic Mining for Financial Data

467

method obtains, at the end of the period, a positive 6.148% (see Figure 1, b)).
We also note that the proposed strategy shows better performances for each
session of the experiment period.

References
1. Boros E., Ibaraki T., Makino K., 1999, Logical analysis of binary data with missing
bits Artiﬁcial Intelligence 107, 219-263.
2. Breiman, Friedman, Olshen, Stone, 1984, Classiﬁcation & Regression Trees,Paciﬁc
Grove, Wadsworth.
3. Elton-Gruber, 1995, Modern Portfolio Theory and Investment Analysis, John &
Wiley & Sons Inc.
4. Fama, E. Eﬃcient capital markets: A review of theory and empirical work, ”Journal
of Finance 25, 383-417, 1970
5. Fama ”Eﬃcient capital markets: II”, Journal of Finance 46, 1575-1617, Dic. 1991
6. Felici G., Truemper K., 2001, ”A MINSAT Approach for Learning in Logic Domains”, INFORMS Journal on Computing, Vol.13, No.3, pp. 1-17
7. Frankfurter G., McGoun E., Anomalies in ﬁnance: what are they and what are
they good for? International Review of Financial Analysis 10 (4) (2001) 407-429.
8. Leigh W., Modani N., Purvis R., Roberts T., Stock market trading rule discovery
using technical charting heuristics, Expert Systems with Applicatyions, 23 (2002),
155-159
9. Leigh W., Purvis R., Ragusa J.M., Forecasting the NYSE composite index with
technical analysis, pattern recognizer, neural network, and genetic algorithm: a case
study in romantic decision support, Decision Support Systems 32 (2002), 361-377
10. Kovalerchuk B., Vityaev E., Data Mining in Finance: Advances in Relational and
Hybrid Methods, Kluwer Academic Publishers, Norwell Massachussetts, 2000
11. Pinches G.E., The Random Walk Hypothesis and Technical Analysis, Financial
Analysts Journal, March-April 1970.
12. Pring M.J., Technical Analysis Explained : The Successful Investor’s Guide to
Spotting Investment Trends and Turning Points, McGraw-Hill; 4 edition (February
20, 2002)
13. Samuelson, The Judgement of Economic Science on Rational Portfolio Management: Indexing, Timing, and Long Horizon Eﬀect, Journal of Portfolio Management, n 1, 1989.
14. Triantaphyllou, E., and A.L. Soyster, On the Minimum Number of Logical Clauses
Which Can be Inferred From Examples,” Computers and Operations Research,
Vol. 23, No. 8,1996, pp. 783-79 9
15. Truemper K. Design of Logic-Based Intelligent Systems, Wiley-Interscience, 2004

