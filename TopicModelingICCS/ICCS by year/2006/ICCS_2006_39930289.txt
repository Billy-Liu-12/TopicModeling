Emergent Spatial Patterns in Vegetable
Population Dynamics: Towards Pattern
Detection and Interpretation
Stefania Bandini, Sara Manzoni, Stefano Redaelli, and Leonardo Vanneschi
Dept. of Informatics, Systems, and Communication
University of Milan–Bicocca
Via Bicocca degli Arcimboldi 8, 20126 Milan, Italy
{bandini, manzoni, redaelli, vanneschi}@disco.unimib.it

Abstract. In this paper we present an ongoing research that aims at
providing an interpretation and detection method for spatial patterns
supporting ecosystem management in the study of forest systems according to a distributed modeling and simulation approach. To this aim
an innovative analysis method inspired by the Chinese Go game is under
design. The originality of the approach concerns the detection within
system configurations of known patterns whose interpretations are well–
known by expert Go players.

1

Introduction

The CAFFE (Cellular Automata For Forest Ecosystems) project is an interdisciplinary research that involves computer science, biology, and ecosystem management. It involves the Artiﬁcial Intelligence Lab (L.INT.AR.) of the Department
of Informatics, Systems and Communication of the University of Milano–Bicocca
and the System Research Department of Austrian Research Center (ARC). The
main aim of this ongoing research is the development of methods for sustainable
aﬀorestation and management of forests. A central role is played in this project
by computer supported simulations of the dynamics of forest systems. The modeling approach adopted by CAFFE for the forest system is based on Cellular
Automata (see [1]) and describes the forest as the result of competition between
heterogeneous vegetable populations.
In this paper, we focus on the part of the CAFFE project that aims at designing a method to support the analysis step of software simulations of vegetable
populations in the forest model. This goal is particularly relevant (and ambitious) due to the distributed modeling approach that is at the basis of the forest
system simulation. Analyzing the dynamics of complex systems modeled and
simulated according a distributed approach is still a challenging issue in this
research ﬁeld: in the simulation of the dynamics of a forest composed by diﬀerent species, we can have a very complex system behavior. A very interesting,
and diﬃcult, type of simulation analysis may aim at recognizing collective emergent behaviors occurring during the system simulation. Most of the available
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 289–296, 2006.
c Springer-Verlag Berlin Heidelberg 2006

290

S. Bandini et al.

approaches to analyze the dynamics of complex systems are based on statistics
and probability theory and they aim at deriving macro level interpretations by
aggregating and correlating variables of the micro level(s). Within the context
of forest ecosystems for instance, the dynamics of the forest (e.g. biomass) is
computed aggregating the features of living trees taking into account diﬀerent
age and dimensions of trees [2]. Another common approach to complex system
analysis concerns the detection and interpretation of recurring patterns [3]. According to the latter approach, in this paper we propose a method to interpret
detected spatial patterns that can emerge in system conﬁguration when it is
adopted a modeling approach based on Cellular Automata (CA). The originality and peculiarity of our proposal is its inspiration by Chinese Go game.
Go game, due to the simplicity of its playing rules but also to the complexity
of possible conﬁgurations and the consequent complexity of playing tactics and
strategies, has inspired several models (e.g. in economy, military, art, semiology,
culture, and many others [4]). In Go game two populations (i.e. black and white
stones) compete for survival in a territory with limited space. During the game,
black and white stones situated on the Go board cannot move, but they can be
put onto a board site, survive or die as result of a metaphorical competition on
the local territory with neighboring stones. A key concept for the death or the
survival of Go pieces is the notion of liberty: if a group of pieces has no liberties
(i.e. none of its elements is adjacent to a free site), it is removed from the board.
As ﬁrst step of this research, we have studied a subset of the patterns that
can be observed on the Go board during the game and we have applied their
interpretations to study the dynamics of a forest ecosystem modeled according to
CA approach. As in Go game, in the CA–based model of forests, trees of diﬀerent
species live in a territory, compete for limited resources. The concept of liberty
for plants can refer to favorable survival conditions and free available space for
reproduction. Starting from these, and other, analogies (see Section 3), between
Go rules and the behavior of entities of the CA–based forest model, we propose
to experiment the adoption of Go interpretation of Go board conﬁgurations to
analyze the dynamics of the forest system.
After a summary of the CA–based model of forest previously presented in [1],
in Section 3 we introduce a subset of Go patterns and we show how their interpretation can be applied to forest ecosystems. Moreover, in Section 4 we introduce
an overview and some ﬁrst ideas about pattern detection problem. The paper
ends with future directions for the research.

2

The CA–Based Forest Model

In this section we give an overview of the CA–based model of forests. To introduce the model, in the following we report cell state and update rule, and the
CA initial conﬁguration.
The Cells: Each cell of the automaton represents a square portion of terrain
that contains some resources (i.e. water, light, nitrogen, and potassium) and can
host a tree.

Emergent Spatial Patterns in Vegetable Population Dynamics

291

The ﬁnite set Q of cell states can be deﬁned by:
S
Q = {R, M, P, T, ZT , NT , UG
T , UT , RT , MT , GT , S}

where R is a vector referring to the amount of resources present in the cell.
M and P indicate respectively the maximum amount of each resource and the
amount of each resource produced by the cell at each update step. T is a ﬂag
indicating whether a tree is present in the cell, while ZT = {zTr , zTt , zTl , zTf } is
a vector deﬁning the size of the diﬀerent parts of the tree (in our model, roots,
S
trunk, leaves, and fruits). NT , UG
T , UT and RT are vectors related to the amount
of resources needed or used by the tree living in the cell. The ﬁrst one deﬁnes
the amounts of each resource the tree takes from the cell. The second and the
third ones deﬁne the amount of each resource needed at each update step by
the tree to grow and the amount of each resource needed to survive. RT deﬁnes
the amount of each resource stored by the tree at previous update steps. MT is
a vector of threshold values for diﬀerent parameters deﬁning the tree, such as
maximum size, maximum age, minimum age for reproduction, maximum number
of seeds produced for each mass unity of fruits, and so on. GT = {gTr , gTt , gTl , gTf }
is a vector deﬁning the growth rate of each of the parts of the tree when enough
resources are available. S = {s1 , . . . , sl } is a vector deﬁning the number of seeds
present in the cell for each of the species growing in the territory.
The Update Rule: At each update step of the automaton, the tree present
in each cell (if any) takes the resources it needs from the cell itself and uses
them to survive, grow (if enough resources are available), and produce seeds.
If a tree is present in cell C(i, j) (C(i, j) is the cell located at position (i, j)
in the lattice), it takes from it a given quantity (deﬁned by NT (i, j)) of each
available resource R(i, j). The amount of resources taken depends on the size
of the tree ZT (i, j). If the resources available in the cell exceed its needs, the
tree stores some resources adding them to vector RT (i, j). Conversely, if the
resources available in the cell are not suﬃcient, the tree uses resources stored at
previous update steps. If also the resources stored are not suﬃcient for the tree to
survive, according to UST (i, j)), the tree dies. The tree also dies when it reaches
its maximum age deﬁned in vector MT (i, j). A tree can also produce some seeds,
according to its age and to the size of its fruits (zTf (i, j)), as a consequence the
seed vector S(i, j) is updated. A newborn plant can sprout in a vacant cell, if
the latter contains a seed of its specie, and again enough resources. If seeds from
diﬀerent species are present in the cell, the winning specie is chosen at random,
with probability proportional to the number of its seeds. Moreover, we deﬁned
the update rule in order to reproduce the increasing inﬂuence that a growing
tree can have on neighboring cells. For example, its roots can extend beyond
the limits of the cell hosting it. Or, when it gets taller, it shades an increasingly
wider area around itself, thus having a negative inﬂuence on the growth of other
trees in its neighborhood. We modeled the impact of a tree in a given position
on its neighborhood by making resources ﬂow from richer cells to poorer ones.
In other words, a cell hosting a large tree is poor on resources, since the tree at
each update step takes most (or all) of them. If the neighboring cells are vacant,

292

S. Bandini et al.

their resources remain unused, and thus are richer than the one hosting the tree.
Therefore, if we let resources ﬂow from richer cells to poorer neighbors, the eﬀect
is that in practice a large tree starts to collect resources also from neighboring
cells.
Let rh (i, j) be the amount of resource h contained by cell C(i, j), and assume that we are using the von Neumann neighborhood. rh (i, j), the amount of
resource i after this update sub–step, is deﬁned as:
rh (i, j) =

rh (i, j) +

rh (i+1,j)+rh (i−1,j)+rh (i,j+1)+rh (i,j−1)
4

2

In other words, we can see each cell as divided in four parts, each one containing
the amount rh (i, j)/4 of resource h, and corresponding to one of the neighbors.
The amount of resource h contained in each part is balanced with the corresponding part of the neighbors. In case we adopt the Moore neighborhood, we
can imagine the cells as split into eight portions.
The CA Initial Configuration: The initial conﬁguration of the CA can be deﬁned by the user, by setting appropriate resource parameters for each cell. Also,
some trees might be already present on the territory, with all the variables deﬁning their type. Otherwise the territory might be empty with the only presence
of some seeds. According to the type of territory interested by the simulation,
several types of soils and available resources for trees growth and reproduction
can be set.

3

The Go–Based Pattern Interpretation Method

The analogies between Go game and the CA–based model of forests above
sketched are going to be formalized. Very broadly in the CA–based model of
forests, trees of diﬀerent species live in a territory, compete for limited territory
resources, can be born, die, and they cannot change their position. Moreover,
the concept of liberty for plants can refer to favorable conditions for growth and
reproduction. At the same time a Go board represents a territory divided in
cells, and it can be viewed as a CA with three possible states for each cell: void,
black or white (if there is a Go piece of the black or white team). Starting from
these analogies, our proposal suggests to exploit this game to study emergent
patterns in the dynamics of complex systems, by studying some spatial patterns
well–known by advanced Go players [5], and to verify whether their interpretation can be suitably and fruitfully applied to interpret similar spatial patterns
occurring in dynamics conﬁgurations of the CA–based forest model.
We introduce now some common spatial patterns that can emerge during Go
games and that are well–known by Go players. Each spatial pattern is interpreted
by Go players in terms of game competition, and we brieﬂy describe how the
interpretation of Go patterns can be applied to interpret spatial patterns that
emerge from the evolution of the CA–based model of forests. This interpretation
is validated by preliminary but encouraging results of experiments conducted

Emergent Spatial Patterns in Vegetable Population Dynamics

293

Fig. 1. Patterns in Go game: Ko, Geta, Shicho, Iki, Tsugi (from the left to the right)

on a CA–based model of the Italian Alps ecosystem (not reported here due to
the lack of space but presented in [6]). An example of the Go game patterns is
shown in Fig. 1.
Ko pattern: Ko is the conﬁguration in Go game where pieces of diﬀerent teams
compete on a little free territory (i.e. a set of positions not occupied by stones),
and no one of the two adversaries is able to take control of the territory in a
stable way. In the performed simulations with the CA–based forest model, we
observed similar unstable situations in which two or more tree species compete
for a little territory without stable dominance. The occurrence of Ko pattern can
be useful in the detection of areas in witch there are a good equilibrium between
the living species.
Geta pattern: Geta pattern corresponds to the local capture of a group of
adversary pieces by a set of stones that surrounds it. Similarly if a group of trees
is surrounded by plants of another specie and it is forced to be limited within a
little and close territory zone, sooner or later it will die. In fact, trees and plants
that are forced in a little zone have little space to harvest the needed resources
for survival and reproduction. The occurrence of Geta pattern can be a good
sign of the presence of a dominant specie in the given area.
Shicho pattern: Shicho is a pattern in which a group of Go stones expands itself
towards another side of the Go board. Shicho does not imply the movement of
single stones that are part of the moving group. Group movement occurs in time–
space (i.e. group movement is the result of stones removal from some positions
and the positioning of others in adjacent ones). In forests Shicho occurs when
an homogeneous group of plants is situated in a zone where resources are not
suitable to satisfy their needs. Since new born trees are more likely to survive if
they grow up on areas rich of resources, also in this context, we can observe as
emergent phenomenon, a group shifting in space–time. The occurrence of Shicho
pattern may indicate a soil impoverishment or the rising up of a new dominant
specie in the area.
Iki pattern: Iki is a strong pattern that can not be captured by the adversary.
Iki corresponds to a part of Go board surrounded by stones of the same color,
with some free positions in its inner side to form two ‘eyes’, in Go jargon. This
formation has two internal liberties that, according to Go playing rules, cannot
be occupied by adversary pieces. A spatial pattern in forest dynamics similar to
Iki is characterized by a strong group that can survive for long time assuring part
of the territory to its individuals. In fact, trees of this group have vacant cells in

294

S. Bandini et al.

their neighborhood and this guarantees the availability of space and resources
for their survival and reproduction. The occurrence of Iki pattern shows the
stability of the involved specie in the given area.
The Tsugi pattern: Tsugi is a Japanese word that means ‘connection’. Connections are very important in Go competition, because two stones connected
to form a group are stronger than they alone. In fact, it is more diﬃcult for the
adversary to build a group able to surround connected stones (i.e. it may require
a lot of stones). Tsugi phenomenon occurs in a natural way also in forests. Each
group of plants expands itself by reproduction, and when two groups expand toward one another, there is the possibility to create a connection between them.
As in Go game, two connected groups of plants are stronger because they can
support each other. When a plant dies neighboring ones can replace it, and when
two groups are connected, neighbors increase in number. Beside this aspect, an
isolated little group of trees can easily fall in the Geta phenomenon but if it is
connected to another group, it is no more possible to surround it. Tsugi pattern
occurs in particular in a situation of a new territory colonization or during a
repopulation phase of a given area. In the both cases it indicates an unstable
situation.
All these patterns can be used for a meaningful interpretation of important
phenomena in some simulation scenarios. In particular they can be useful, for
example, in the case of artiﬁcial repopulation of forest in a given area with the
introduction of new species. In this case it is important to understand if the
new specie can survive and what are the reactions of the other living species.
But while the occurrence of Ko phenomenon means a good equilibrium between
species, the frequency of Iki and Tsugi indicates the formation of a strong dominance presence in the area, and Geta and Shicho mean the disadvantage of a
specie in comparison with the others. All these considerations can support the
decision maker in the illustrated domain problem.
A central issue to be considered in developing a method for pattern interpretation concerns the development of a method to support the detection of
emergent patterns during system dynamics. This task can be very diﬃcult for
a human operator that analyzes the dynamics of the CA–based forest model, in
particular for large scenarios involving several tree species. Therefore the main
future work that starts from ﬁrst positive results on Go–based pattern interpretation concerns the development of a detection method capable of recognizing
known patterns. In the following section we report an overview and some ﬁrst
ideas about pattern detection problem.

4

Towards a Pattern Detection Method

In its most general sense, pattern detection can be deﬁned as “the extraction of
consistent information from (possibly noisy) spatiotemporal data”. Alternatively,
it can be deﬁned as ”the act of taking in raw data and taking an action based on
the category of the data” [7]. As such, it can be accomplished by a large set of
many diﬀerent machine learning methods. Pattern recognition aims to classify

Emergent Spatial Patterns in Vegetable Population Dynamics

295

data (patterns) based on either a priori knowledge (supervised learning) or on
statistical information extracted from the patterns (unsupervised learning). In
general, a complete pattern recognition system consists of (1) a sensor that gathers the observations to be classiﬁed or described; (2) a feature extraction mechanism that computes numeric or symbolic information from the observations; (3)
a classiﬁcation or description scheme that does the actual job of classifying or describing observations, relying on the extracted features. In our applications, the
observations are already given by the structure of the cellular grid at a given time
step. Thus, step (1) is not necessary. Many Artiﬁcial Intelligence and statistical
techniques have been developed for feature extraction (point (2)). Some examples
are: discriminant analysis, principal component analysis, principal curve, factor
analysis, independent component analysis, some forms of clustering and feature
selection. All these techniques may be useful for our application, particularly
in presence of large cellular grids. We are particularly interested in discriminant
analysis, where new basic features may be considered as the current states of the
grid cells and new feature may be constructed (eventually replacing the old ones)
via linear or non-linear combinations, so that classiﬁcation (point (3)) is easier.
The choice of the classiﬁcation scheme (point (3)) for pattern detection in our
application is probably the most delicate: a large number of machine learning
techniques have been used with success in many pattern detection applications
which have similarities with ours. For example, in [8], Ripley introduces the use
of many diﬀerent Neural Networks models for pattern detection in many applications, such as classifying galaxies by shape, identifying ﬁngerprints, highlighting
potential tumors on a mammogram, handwriting recognition. While the second,
third and fourth of these applications can be considered “simpler” than ours, the
ﬁrst one has some similar characteristics, in particular for the fact that galaxies
are modelled as complex systems, in a similar way as we do for forests. In [9],
Babuskame presented a way to solve some pattern recognition applications by
means of fuzzy systems. Fuzzy rules may provide more ﬂexibility and decisional
power to the system. In [10] contains many contributions on the use of evolutionary techniques (like Genetic Algorithms) for solving many pattern detection
applications. The contribution given by Wah et al. in this book (chapter 5) is
particularly interesting, because it deals with the generalization of learned rules
in genetic-based learning. Furthermore, chapters 9 to 13 of this book present
some hybrid techniques integrating Fuzzy, Neural and Genetic approach. Given
the complexity of our application, we are particularly interested in this last kind
of system. Fuzzy, Neural and Genetic systems, in fact, are characterized by a
high degree of diversity. Hybrid pattern recognition schemes have been proposed
in order to combine their strengths and avoid their weaknesses. Some good discussions about this issue are contained in [11], where several techniques are
combined into single pattern recognition systems. Hybrid methods have been
known about for a long time, but they have gained new interest only recently.
Nevertheless, in our opinion, they have never been applied to complex systems
like detection of spatial patterns in vegetable population and forest dynamics.

296

S. Bandini et al.

This research ﬁeld looks promising and interesting and we plan to investigate it
in the future.

5

Conclusions and Future Works

In this paper we have proposed a method for pattern interpretation of emergent
phenomena that aims at supporting ecosystem management in the study of forest
systems by simulation. This proposal has been validated by preliminary but
encouraging results of experiments conducted on the CA–based model applied
to an area of Italian Alps ecosystem. These experiments were conducted to verify
the correct evolution of Go–like patterns with reference to the forest simulation
scenario (their positive results are available in [6]). A deeper experimentation
campaign is under development in collaboration with ARC’s domain experts in
order to apply the presented approach on real data scenarios.
The main future work that starts from these results concerns the development
of a detection method capable of recognizing and interpreting known patterns
during system dynamics (ﬁrst ideas have been introduced in Section 4). Another
important future development of this research can be the study of new patterns
for the interpretation of other phenomena obtained by the introduction of other
system elements in the model (e.g. urbanization or pollution as eﬀect of the
human presence, or desertiﬁcation as eﬀect of other natural interactions).

References
1. Bandini, S., Pavesi, G.: “Simulation of vegetable populations dynamics based on
cellular automata” In Bandini, S., Chopard, B., Tomassini, M., eds.: Cellular
Automata, Volume 2493 of LNCS, Berlin, Springer-Verlag (2002)
2. D.G.Green, “Modelling plants in landscape”, in Plants to Ecosystem – Harek T.
Michalewicz, ed. CSIRO, Lollingwood Ans., 1997.
3. S.Wolfram, “Cellular automata as models of complexity”, Nature, 311:419-424,
1984.
4. Reysset, P.: Le Go: aux sources de l’avenir. Chiron (1994)
5. Soletti, G.: Note di Go. FIGG (Federazione Italiana Giuoco Go). Avaiable for
download at www.figg.org
6. Bandini, S., Manzoni, S., Redaelli, S.: “Toward the Interpretation of Emergent
Spatial Patterns through GO Game: The Case of Forest Population Dynamics” In
proceedings of Simulation and Formal Analysis of Complex Systems (WOA 2005)
7. R. O. Duda, P. E. Hart and D. G. Stork. Pattern classification (second edition).
Wiley. New York. 2001.
8. B. D. Ripley Pattern Recognition and Neural Networks. Cambridge University
Press. 1996.
9. R. Babuska. “Fuzzy clustering algorithms with applications to rule extraction”.
In P.S. Szczepaniak and P.J.G. Lisboa, editors, Fuzzy Systems in Medicine, pages
139-173. Springer-Verlag, Heidelberg, 2000.
10. S. K. Pal and P. P. Wang Genetic Algorithms and Pattern Recognition. Boca
Raton, FL: CRC Press. 1996.
11. H. Bunke and A. Kandel. Hybrid methods in pattern recognition. World Scientific
Series in Machine Perception and Artificial Intelligence, Vol. 47. 2002.

