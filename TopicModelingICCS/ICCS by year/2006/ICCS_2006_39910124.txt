A Note on the Simplex Method for
2-Dimensional Second-Order Cone Programming
Yu Xia
The Institute of Statistical Mathematics,
4-6-7 Minami-Azabu, Minato-Ku,
Tokyo 106-8569, Japan
yuxia@ism.ac.jp

Abstract. We transform a 2-dimensional second-order cone program
to a standard linear program in order to pivot a vector based on its
three states. Related properties of the transformation are given. Based
on the transformation, we interpret the simplex method and its sensitivity analysis for the 2-dimensional second-order cone programming,
especially the state changes. Finally, we give some applications of the
2-dimensional second-order cone programming.
Keywords: Second-order cone programming, linear programming, simplex method, basis, sensitivity analysis.

1

Introduction

A second-order cone (SOC) in Rn+1 is the set
⎧
⎨
def
Qn+1 = x ∈ Rn+1 : x0 ≥
⎩

n

x2i
i=1

⎫
⎬
⎭

.

We omit the subscript n + 1 of Q when it is clear from the context. We write
x ≥Q 0 interchangeably with x ∈ Q, since Q induces a partial order. Other
names of Q include Lor´entz cone, ice-cream cone, and quadratic cone.
The standard form primal and dual second-order cone programming (SOCP)
problem is the following:
Primal
min
cT1 x + · · · + cTn x
s.t.
A1 x1 + · · · + An xn = b ,
xi ≥QNi 0 (i = 1, . . . , n) ;

Dual
max bT y
(1)
s.t. ATi yi + si = ci (i = 1, . . . , n) ,
si ≥QNi 0 (i = 1, . . . , n) .

Supported in part by a dissertation fellowship from Rutgers University, U.S.A. and
a postdoctoral fellowship for foreign researchers from JSPS (Japan Society for the
Promotion of Science). I thank my Ph.D. supervisor Professor Farid Alizadeh for
motivation and discussion of the paper and for ﬁnancial support from his grants. I
thank comments and suggestions of an anonymous referee.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 124–131, 2006.
c Springer-Verlag Berlin Heidelberg 2006

A Note on the Simplex Method for 2-Dimensional SOCP

125

Here Ni ∈ N is the dimension of variables xi and si (i = 1, . . . , n); y ∈ Rm is a
dual variable; b ∈ Rm , ci ∈ RNi , Ai ∈ Rm×Ni (i = 1, . . . , n) are data.
SOCP is a useful tool for many practical applications and theoretical developments; see [1], [2] for a survey. Interior point methods have been extended
to SOCP. On the other hand, simplex methods remain widely used practical
procedures for linear programming (LP) because of the low running time of
each step – linear vs cubic for that of interior point methods. These features
are especially useful for “ warm starting ” and large scale computing. Parallel simplex methods and cluster computing grids further facilitate the very
large scale application. Unfortunately, no simplex-like method possessed of the
above merits exists for SOCP, because of the nonlinear nature of SOC. In
this note, we consider a subclass of SOCP which simplex methods can be extended to. Observe that an LP model is a 1-dimensional SOCP model. When
Ni = 2(i = 1, . . . , n), (1) is the following LP model, where we write the jth entry
of xi as (xi )j .
Primal
min
cT1 x + · · · + cTn x
s.t.
A1 x1 + · · · + An xn = b ,
(xi )0 ≥ (xi )1 (i = 1, . . . , n) ,
(xi )0 ≥ −(xi )1 (i = 1, . . . , n) ;

Dual
max bT y
s.t. ATi yi + si = ci (i = 1, . . . , n) ,
(si )0 ≥ (si )1 (i = 1, . . . , n) ,
(si )0 ≥ −(si )1 (i = 1, . . . , n) .
(2)

Note that the constraints (xi )0 ≥ 0 (i = 1, . . . , n) can be obtained by adding
(xi )0 − (xi )1 ≥ 0 and (xi )0 + (xi )1 ≥ 0 together. Nevertheless, it is not straightforward to extend the pivot rules for the simplex method to (2). Pivots for LP
change variable states between positivity and zero — a variable enters the basis
when it becomes zero and leaves the basis when it becomes positive. However,
a vector associated with an SOC has three states: in the interior of the SOC
(int Q), in the boundary of the SOC (bd Q), and zero.
In this note, we show how to transform (2) into a standard form LP model.
With this, we interpret the simplex method and its sensitivity analysis for the 2dimensional SOCP based on the original SOC variables of (2). We also give some
applications of the 2-dimensional SOCP for motivations of developing eﬃcient
algorithms for it.
The rest of the paper is organized as follows. In § 2, we give a transformation
that maps (2) into a standard form LP model. Properties of the transformation
are also discussed. In § 3, we interpret the simplex method for the 2-dimensional
SOCP and give the sensitivity analysis for the simplex method. In § 4, we present
some applications of the 2-dimensional SOCP.

2

The Transformation

In this part, we give a transformation of a 2-dimensional second-order cone
program to a standard form linear program. We also prove the equivalence of
the standard form linear program to (2) and give its properties.

126

Y. Xia

First, we observe that for any xi ∈ Q1 (i ∈ {1, . . . , n}), the state of xi is
determined by the number of active constraints:
(xi )0 + (xi )1 ≥ 0 ,

((+)-constraint)

(xi )0 − (xi )1 ≥ 0 .

((-)-constraint)

That is, xi = 0 iff both (+) and (-)-constraints are active; xi ∈ bd Q iff only
one of the (+) and (-) constraints is active; xi ∈ int Q iff neither of the (+1) and
(-) constraints is active.
The transformation. Deﬁne
√

def
P˜ =

2
√2
2
2

√

2
2√
− 22

.

Then P˜ is an orthogonal matrix. In addition, P˜ T = P˜ , P˜ 2 = I.
T def
Let vi = [(vi )0 , (vi )1 ] = P˜ xi (i = 1, . . . , n). Then the following holds.
1. xi ≥Q 0 iff vi ≥ 0.
In addition, xi ∈ int Q iff vi > 0; xi = 0 iff vi = 0; xi ∈ bd Q iff one of (vi )0
and (vi )1 is positive and the other one is zero.
2. |(vi )0 | is the distance of xi from the line (xi )0 = −(xi )1 ; |(vi )1 | is the distance
of xi from the line (xi )0 = (xi )1 ; vi 2 is the distance of xi from 0.
(a) vi ≥ 0 ⇐⇒ xi ∈ Q and vi are the distances of xi from the two boundaries
of SOC, i.e. the (+) and (-)-constraints.
/ Q and −(vi )1 is the distance of xi
(b) (vi )0 ≥ 0 and (vi )1 < 0 ⇐⇒ xi ∈
from SOC.
(c) (vi )0 < 0 and (vi )1 ≥ 0 ⇐⇒ xi ∈
/ Q and −(vi )0 is the distance of xi
from SOC.
(d) vi ≤ 0 ⇐⇒ xi ∈
/ Q and vi 2 is the distance of√xi from SOC.
√
3. 2vi are the two eigenvalues of xi . The columns of 22 P˜ are two eigenvectors
√
√
2 ˜
of xi . In other words,
P ( 2vi ) is the spectral decomposition of xi
2

(see [1]).
Standard form linear program. Let P be a block diagonal matrix with each block
def
def
being P˜ . Let c˜ = P c, A˜ = AP . We consider the following standard form linear
program:
Dual
Primal
˜
min
cT v
max bT y
(3)
˜ = b,
s.t.
Av
s.t. A˜T y + w = c˜,
w ≥ 0.
v ≥ 0;
Complementary slackness. Let (vi ; wi ) = (P x; P s). Then
vi · wi = 0 ⇐⇒ xi ◦ si = 0 ,
def

where vi · wi =

(vi )0 (wi )0
def (xi )0 (si )0 + (xi )1 (si )1
, xi ◦ si =
.
(vi )1 (wi )1
(xi )0 (si )1 + (xi )1 (si )0

(4)

A Note on the Simplex Method for 2-Dimensional SOCP

127

Equivalence between (2) and (3). By duality theorem, a triple (v; w; y) solves
(3) iff
˜ =b
Av
˜T

A y+w =˜
c
v·w=0
v≥0
w≥0.
And (x; s; y) is a solution to (2) iff it satisﬁes the following conditions [1].
Ax = b
T

A y+s=c
x◦s=0
x ≥Q 0
s ≥Q 0 .
Together with (4) and the properties of P , we have that (x; s; y) is a solution
to (2) iff (P x; P s; y) solves (3). In addition, they have the same objective value.
Strong duality. The properties of P and (4) also imply that the strong duality for
the 2-dimensional SOCP holds if (i) both the primal and the dual have feasible
solutions, or (ii) the primal has feasible solutions and the objective value is below
bounded in the feasible region. For higher dimensional SOCP, neither (i) nor (ii)
is suﬃcient for strong duality, see [1].

3

The Simplex Method

In this part, we interpret the simplex method for the 2-dimensional SOCP.
Basic solution. Without loss of generality, we assume A has full row rank; otherwise, either the linear constraints are inconsistent or some linear constraints are
redundant. Let AB be an m×m nonsingular matrix of A. Since P is nonsingular,
A˜B is nonsingular, too. The constraints for which the column of the corresponding variable vi belongs to A˜B are the basic constraints. Other constraints are the
nonbasic constraints. The set of basic constraints is the basis. The corresponding vector x is the basic solution. If a basic solution x also satisﬁes Ax = b and
x ≥Q 0, x is called a basic feasible solution.
Let Bx represent the number of boundary blocks of a basic solution x, Ix the
number of its interior blocks, and Ox the number of its zero blocks.Then
Bx∗ + 2Ix∗ ≤ m .

128

Y. Xia

The simplex method. Next we interpret the primal simplex method with Bland’s
pivoting rule. Other simplex methods can be explained in a similar way.
1. Solve a phase I problem to get a basic feasible solution to the primal of (3).
Assume the corresponding partition of the index set i(k) | i ∈ {1, . . . , n},
k ∈ {−, +} (i is the block index, k indicates the boundary constraints (+)
or (−)) is B and N, where A˜B ∈ Rm×m is nonsingular. Let vB and vN be
˜−1 ˜
the basic and nonbasic constraints, i.e. vB = A˜−1
B b − AB AN vN .
−1 ˜
T
˜
2. If ˜
cN − (AB AN ) c˜B ≥ 0, x = P v is optimal for (2). Stop. Otherwise, there
< 0. That indicates that
exists index i(k) such that c˜N − (A˜−1 A˜N )T ˜
cB
B

i(k)

if xi is moved away from the boundary k, the objective may be decreased.
˜
3. Check the columns of (A˜−1
B AN )i(k) for such i(k)’s. If there exists an i(k)
−1
such that (A˜B A˜N )i(k) ≤ 0; then the problem is unbounded, i.e. xi can be
moved arbitrarily away from the boundary k to decrease the objective value
¯ from
inﬁnitely. Otherwise, from the i(k)’s choose the smallest index ¯i(k);
−1 ˜
˜
the indices j(l)’s with (AB AN )j(l),i(k) > 0 choose the smallest index ¯j(¯l).
Move x¯j to boundary ¯
l, and move x¯i away from boundary k¯ at a distance
−1
−1 ˜
˜
˜
(AB b)¯j(¯l) /(AB AN )¯j(¯l),¯i(k)
¯ .
4. Go to step 2 with the new basic, nonbasic constraints and coeﬃcient matrix.
The state of the variable. In the above algorithm, each pivot aﬀects at most two
constraints: one active constraint becomes inactive, and one inactive constraint
becomes active. Next, we consider how the state of x is aﬀected by the pivots.
1. ¯i = ¯j
In this case, x¯i must be moved from one boundary to the other boundary
of Q.
2. ¯i = ¯j
In this case, the pivot aﬀects two variables. The total number of active
constraints for x¯i and x¯j is unchanged after the pivot. That total number
can be only 1, 2, 3.
(a) The number is 1. This means that the pivot makes an interior variable
boundary and a boundary variable interior.
(b) The number is 2. This means that after the pivot, a zero and an interior
variable become two boundary variables, or vice versa.
(c) The number is 3. This means that a zero variable is changed to a boundary variable, and a boundary variable is changed to a zero variable by
the pivot.
Other methods for linear program, such as dual simplex algorithm, primal-dual
simplex algorithm (see [3]) can also be applied to the 2-dimensional second-order
cone program.
Sensitivity analysis. We can also perform sensitivity and parameter analysis on
the 2-dimensional second-order cone programming.

A Note on the Simplex Method for 2-Dimensional SOCP

129

Given a basic optimal solution for the primal-dual pair (2) with objective
value ζ:
∗ T ∗
vN
ζ = ζ ∗ − wN
−1 ˜
∗
∗
˜
vB = vB − AB AN vN
,

where
∗
vB
= A˜−1
B b
∗
vN = 0
∗
cB − ˜cN
wN
= A˜TN A˜−T
B ˜
∗
T ˜−1
ζ = c˜B A b .
B

Next, we give the ranges of changes in cost coeﬃcients c and right-hand side
b, under which current classiﬁcation of optimal basic and nonbasic constraints
remains optimal.
We ﬁrst consider the change of right-hand side b.
Assume b is changed to b + tΔb. The original basic constraints are now
¯ B = A˜−1
v
B (b + tΔb) ≥ 0 .
¯ B ≥ 0, the current basis is still optimal. Solve v
¯ B ≥ 0 for t, we obtain
If v
(A˜−1 Δb)j(l)
min − B−1
j(l)∈B
(A˜ b)j(l)

−1

≤t≤

B

−1

(A˜−1 Δb)j(l)
max − B−1
j(l)∈B
(A˜ b)j(l)

.

B

And the objective will be ζ ∗ + t˜
cTB A˜−1
B Δb.
Assume c is changed to c + tΔc. The dual nonbasic constraints are now
¯ N = w∗ + ΔwN ,
w
where
˜
ΔwN = A˜−1
B AN

T

Δ˜
cB − Δ˜cN .

¯ N ≥ 0 for t, we obtain
¯ N ≥ 0. Solve w
The current basis remains optimal if w
min −

i(k)∈N

Δwi(k)
wi(k)

−1

≤t≤

max −

i(k)∈N

Δwi(k)
wi(k)

−1

.

cTB A˜−1
And the objective will be ζ ∗ + tΔ˜
B b.
Combining the above results, we can obtain that for simultaneous changes of
right-hand side and cost coeﬃcients.

130

4

Y. Xia

Application

In this part, we give some applications of the 2-dimensional second-order cone
programming.
Given a scalar u, its absolute value |u| is equivalent to the optimal value of
the following 2-dimensional SOCP model:
min u0
s.t. (u0 , u)T ≥Q 0.
Therefore, given Ai ∈ Rni ×m , bi ∈ Rni (i = 1, . . . , k), the L1 and L∞ norms
associated with the aﬃne transformation of a vector Ai x + bi can be formed as
2-dimensional SOCP models. Below are some examples.
Minimize the sum of weighted norms. Given some weights wi (i = 1, . . . , k)
for the k aﬃne transformations of a vector x, the problem of minimizing the
weighted sum of L1 or L∞ norm can be formulated as a 2-dimensional SOCP
model.
1. Minimize the sum of weighted L1 − norms.
k

n

i
(uij )0
min i=1 wi j=1
s.t. Ai x + bi = ui (i = 1, . . . , k)
T
[(uij )0 , (ui )j ] ≥Q 0 (i = 1, . . . , k; j = 1, . . . , ni ).

We use (ui )j to represent the jth entry of vector ui = [(ui )1 , . . . , (ui )ni ]T .
And (uij )0 is a variable not belonging to ui .
2. Minimize the sum of weighted L∞ − norms.
k

min i=1 wi (ui )0
s.t. Ai x + bi = ui (i = 1, . . . , k)
T
[(ui )0 , (ui )j ] ≥Q 0 (i = 1, . . . , k; j = 1, . . . , ni ).
Minimize the largest norm. The problem of minimizing the largest L1 or L∞
norm of the k norms can be cast as a 2-dimensional SOCP model.
1. Minimize the largest L1 − norm.
min t
s.t. Ai x + bi = ui (i = 1, . . . , k),
[(uij )0 , (ui )j ]T ≥Q 0 (i = 1, . . . , k; j = 1, . . . , ni ),
t,

ni
j=1 (uij )0

T

≥Q 0 (i = 1, . . . , k).

2. Minimize the largest L∞ − norms.
¯ i 1 can be formulated as the follow.
The problem min max1≤i≤k v
min t
s.t. Ai x + bi = ui (i = 1, . . . , k),
T
[t, (ui )j ] ≥Q 0 (i = 1, . . . , k; j = 1, . . . , ni ).

A Note on the Simplex Method for 2-Dimensional SOCP

131

Minimize the sum of r largest norms. Similarly as minimizing the sum of r
largest Euclidean norms [1], the problem of minimizing the sum of r largest L1
or L∞ norms can be formulated as a 2-dimensional SOCP model.
1. Minimize the sum of r largest L1 − norm.
r

min i=1 ui + rt
s.t. Ai x + bi = vi (i = 1, . . . , k)
T
[(vij )0 , (vi )j ] ≥Q 0 (i = 1, . . . , k; j = 1, . . . , nj )
t + ui ,

ni
j=1 (vij )0

T

≥Q 0

(i = 1, . . . , k)

2. Minimize the sum of r largest L∞ − norm.
r

min i=1 ui + rt
s.t. Ai x + bi = vi (i = 1, . . . , k)
T
[(vi )0 , (vi )j ] ≥Q 0 (i = 1, . . . , k; j = 1, . . . , nj )
[t + ui , (vi )0 ]T ≥Q 0 (i = 1, . . . , k)
Here, vi = [(vi )1 , . . . , (vi )ni ]T . And t, ui , (vij )0 , (vi )0 are scalar variables.

5

Conclusion

We’ve transformed a 2-dimensional SOCP model into a standard form LP model
and interpreted the simplex method and its sensitivity analysis for the model.
Some applications have also been given.

References
1. F. Alizadeh and D. Goldfarb. Second-order cone programming. Math. Program.,
95(1, Ser. B):3–51, 2003.
2. Miguel Sousa Lobo, Lieven Vandenberghe, Stephen Boyd, and Herv´e Lebret. Applications of second-order cone programming. Linear Algebra Appl., 284(1-3):193–228,
1998.
3. Robert J. Vanderbei. Linear programming: foundations and extensions. Kluwer
Academic Publishers, Boston, MA, 1996.

