Phase Response Curves, Delays and
Synchronization in Matlab
W. Govaerts and B. Sautois
Department of Applied Mathematics and Computer Science, Ghent University,
Krijgslaan 281-S9, B-9000 Ghent, Belgium
{willy.govaerts, bart.sautois}@ugent.be
Abstract. MatCont is a Matlab software package for the study of
dynamical systems. We extended this package with the functionality of
computing the phase response curve or PRC of a neural model. An important application lies in the study of synchronization of neurons. In
synchronization studies, often the delays in a network are discarded or
set to zero. We show in this paper that the delay can be crucial for the
ability of neurons in an excitatory network to synchronize. We also show
that, by studying the PRC of a neural model, one can compute the necessary delay to allow synchronization or phase-locking in a network of
such neurons.

1

Introduction

Cl MatCont [1] and its GUI version MatCont [2] are matlab packages for
the study of dynamical systems and their bifurcations. Among other things,
they support the numerical continuation of equilibria, limit cycles, limit points,
Hopf points, fold, ﬂip, and torus bifurcations of cycles. Both packages are freely
available at http://www.matcont.ugent.be/. The matlab platform, for which
the packages are written, is attractive for both developer and user. The problem
of speed, which arises since matlab is not compiled, is solved by incorporating
C-code, while preserving the program’s portability and user-friendly features.
In neural modeling, a phase response curve is a function that indicates the
response of a spiking neuron to an input pulse. A positive value means that the
next spike will be ﬁred sooner, a negative value means that the next spike is
delayed. In Cl MatCont and MatCont we have incorporated the functionality of calculating the phase response curve (PRC) and its derivative (dPRC) of
limit cycles during continuation.
In the present paper, we show the importance of the PRC and dPRC for
synchronization and phase-locking properties of neurons in a network with excitatory connections. In studies of such networks, very often delays are regarded as
being of less importance, or simply set to zero ([3],[4]). We show that in fact, the
delays of connections play a crucial role in the ability of neurons to phase-lock
or synchronize. This necessary delay can be computed using the PRC.
We restrict ourselves to networks of identical neurons, with uniform excitatory
connections. More chaotic synchronization studies have been made, using other
software, e.g. in Mathematica [5], [6].
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 391–398, 2006.
c Springer-Verlag Berlin Heidelberg 2006

392

2

W. Govaerts and B. Sautois

The matlab Software

Cl MatCont and MatCont are packages for the study of dynamical systems
and their bifurcations. They are successor packages to packages written in compiled languages (Fortran, C, C++). The full Matlab platform of Cl MatCont
and MatCont is attractive because it makes them more user-friendly than
other packages, and portable to all operating systems, as matlab is platformindependent. Also, matlab has GUI-development tools built-in and allows a
standard handling of data ﬁles, graphical output, etcetera. A typical screenshot,
showing several of the windows that can be opened in MatCont, is shown in
Figure 1.

Fig. 1. Typical screenshot from MatCont

MatCont uses the matlab standard ODE-solvers for time-integration of
dynamical systems. Also, it makes intensive use of the linear algebra routines
that form the core of matlab. Further, it uses the sparse solver routines that
are provided in matlab.
On the other hand, the code is inevitably slower than a compiled programming
language. It is possible however, through some intermediate C-code, to have the
C-code and matlab-code communicate with each other. Because there is a Ccompiler present in every version of matlab, we can supply the C-source-code
and let the program compile the C-code at runtime. This causes a slight delay
at startup of the program, negligible when compared to the time needed to
do further computations. The advantage of this approach is that it keeps the
program completely platform-independent. The platform-dependent compiled
C-code is only generated at runtime, and is thus adapted to the machine.

3

Phase Response Curve of a Model

The phase response curve or PRC of a periodically spiking neuron expresses its
reaction to an input pulse given at a certain time during its cycle period.

Phase Response Curves, Delays and Synchronization in Matlab

393

Fig. 2. Left: PRC (φ) for the Hodgkin-Huxley system. Right: dPRC (φ ) for the same
system. The equations and parameter values for this model are given in [7].

More formally, the phase response curve is a function, which is deﬁned over
the timespan of one cycle in the spike train of a ﬁring neuron with no extra input.
As starting point of the period we take the peak of a spike. At each point of
the cycle, the phase response curve (PRC) indicates the eﬀect on the oncoming
spikes of an input pulse to the neuron at that particular time in its cycle.
If we denote by Told the period of the unperturbed cycle, and by Tnew the
period when the input pulse α is given at time t, the linearized phase response
curve is deﬁned by
G(t, α)
,
α
Told − Tnew (α)
G(t, α) =
.
Told
PRC(t) = φ(t) = lim

α→0

(1)

Note that time t is expressed in ms, and the input pulse α in mV. Thus, G(t, α)
is dimensionless, and the actual PRC, φ, has units 1/mV.
It is also possible to compute the derivative of the PRC (dPRC or φ ), which
can be useful, as we show in this paper. This function has units 1/mV*ms. An
example of both curves is given in Figure 2. For a more detailed discussion of linearized PRCs and how we compute them using our software package MatCont,
we refer to [7].

4

1:1 Phase-Locking to Repeated Inputs

Consider an oscillator with period T , which gets repeated external inputs with a
ﬁxed period which is close to T , say TΔ . The ability of the oscillator to phase-lock
with this input is an important concept, as discussed in [8] and [9].
Say the oscillator or neural model ﬁres a spike at time t = 0, and gets an
input with strength α at time t = t1 . Then the next spike of the neuron will
occur at time t = T − αT φ(t1 ). If we call t2 the distance between the following
spike and input, then
t2 = (t1 + TΔ ) − T (1 − αφ(t1 ))

(2)

t2 = (t1 + TΔ ) + αT φ(t1 ) mod T

(3)

So

394

W. Govaerts and B. Sautois

Fig. 3. The spikes show the spiking regime of the Hodgkin-Huxley neuron. The circles
indicate when the repetitive input comes in. It is clear that this is a phase-locked state,
for t1 ≈ 7 ms, with period 16.28 ms.

Any ﬁxed point of this map has the property that
TΔ + αT φ(t1 ) = 0 mod T

(4)

Thus, in such points, 1:1 phase locking is possible. Since the linearized PRC of
a neuron can only be used reliably for α small enough, the period of the inputs
is not too diﬀerent from the oscillator’s original period.
The formula can be understood as follows: when the PRC for a certain delay
is positive (negative), then the next spikes will be sped up (delayed), therefore
there can only be synchronization if TΔ < T (TΔ > T ).
The so obtained ﬁxed point of the map t1 → t1 + TΔ + αT φ(t1 ) − T is stable
if and only if its unique multiplier 1 + αT φ (t1 ) has modulus less than 1, i.e.
−2
< φ (t1 ) < 0
αT

(5)

So, if an oscillator gets a series of inputs of which the period is close to its own
original period (TΔ satisﬁes (4)), and the delay t1 meets constraint (5), then one
can get stable synchronization of the oscillator to the inputs.
These results were tested on the Hodgkin-Huxley equations, with inputs of
strength 1, for which the PRC and dPRC are shown in Figure 2. For an input
with a longer period, both φ and φ will have to be negative at the input time to
allow phase-locking, so the inputs will come earlier than about 8.5 ms after the
last spike. In all cases with negative φ and negative φ , φ > −2/T = −0.125,
so constraint (5) is always satisﬁed. And ﬁnally, the exact timing of input and
spike at the phase-locked state will depend on the period of the spike. Since
TΔ > T , we know that TΔ − T = T φ(t1 ). E.g. when we give inputs with period
TΔ = T (1 + 0.01) ≈ 16.28, the neuron will always phase-lock with the inputs
in such a timing that the inputs will reach the neuron at time t1 , such that
φ(t1 ) = −0.01, and in the negative regime of φ , this is the case for t1 = 6.747
ms. The experimental results are shown in Figure 3, with circles indicating the
times of arriving input. An analogous analysis can be done for inputs arriving
with a shorter period than that of the uncoupled model.

Phase Response Curves, Delays and Synchronization in Matlab

5
5.1

395

Two Single-Spiking Neurons
Synchronization

Consider two identical neurons with excitatory connections to each other, and
suppose that the connection has a delay of duration t1 and a connection strength
of size α. Suppose the neurons, without input, have period T , and the linearized
PRC of the neurons is given by the function φ. Finally assume that neuron 1
ﬁres at time t = 0, and neuron 2 at time t = Δ, Δ < t1 .
Then neuron 1 gets an input signal at time Δ + t1 and neuron 2 gets a signal
at absolute time t1 , which is in relative time, relative to its spike, t1 − Δ (due
to the phase diﬀerence). For the next spikes we conclude:
- neuron 1 will ﬁre its next spike at t = T − αT φ(t1 + Δ).
- neuron 2 will ﬁre its next spike at t = (Δ + T ) − αT φ(t1 − Δ).
The time diﬀerence map (for the time diﬀerence between spikes of the two
neurons)
(6)
Δ → Δ + αT φ(t1 + Δ) − αT φ(t1 − Δ)
has the trivial ﬁxed point Δ = 0 which is stable if and only if its unique multiplier
1 + 2αφ (t1 ) has modulus less than 1, i.e.
−1
< φ (t1 ) < 0
(7)
αT
Once the neurons are synchronized, the new period is T − αT φ(t1 ).
This shows that for two identical neurons with excitatory connections to synchronize, the connection delay plays a crucial role. Moreover, the delays that
allow synchronization, can be determined from the period of the uncoupled neuron, its PRC and its dPRC.
Consider two identical Hodgkin-Huxley neurons, connected through excitatory connections with strength 1. From the plot of φ in Figure 2, we notice that
φ (t1 ) is always greater than −1/T ≈ −0.0624. So constraint (7) is always met
when φ (t1 ) < 0. So whenever we initiate the neurons with a connection delay
t1 such that α ≤ 1, φ (t1 ) < 0, the neurons will move to synchronization with
new period T − αT φ(t1 ).
An example is shown in Figure 4. The ﬁrst plot shows the start, and the
second one the result, when starting with 2 HH-neurons, ﬁring 1 ms apart, and
with a connection delay of 6 ms. They clearly converge, with a new period of
16.1 ms, which matches our formula.
Analogously, experiments support the theory that there is synchronization of
the two neurons with a shorter emerging period when φ (t1 ) < 0 and φ(t1 ) > 0,
and there is no synchronization if φ (t1 ) > 0.
5.2

1:1 Phase-Locking

If a neuron has a phase response curve φ such that φ(t1 + Δ) = φ(t1 − Δ), for a
certain connection delay t1 and a phase diﬀerence Δ, then this point is a ﬁxed
point of the map (6).

396

W. Govaerts and B. Sautois

Fig. 4. Left: 2 HH-neurons spiking with 1 ms diﬀerence in timing. Right: The 2 neurons
have converged.

Fig. 5. Left: PRC for the Connor system. Middle: dPRC for the same system. Right:
phase diﬀerence between two spiking neurons with excitatory connection, evolving to
a stable state.

This ﬁxed point is stable when
|1 + αT φ (t1 + Δ) + αT φ (t1 − Δ)| < 1
−2
< φ (t1 + Δ) + φ (t1 − Δ) < 0
αT

(8)

So the fall of φ must be steeper than its rise.
As an example, this is the case in the Connor model. The equations for this
model are given in [10]. Figure 5 shows the PRC (left) and dPRC (middle) of the
Connor model at parametervalue I = 8.49. When the connection delay t1 = 64,
then Δ ≈ 22 is a ﬁxed point, such that φ(t1 + Δ) = φ(t1 − Δ) = 0.019. Also
φ (t1 + Δ) = −8e − 4 and φ (t1 − Δ) = 6e − 4, so constraint (8) is met. A result
is shown in the rightmost picture in Figure 5; it shows how the phase diﬀerence
between two spiking neurons moves from its initial value, chosen at 35 ms, to 22
ms, the stable ﬁxed point.

6

Synchronization of an N-Neuron Single-Spiking
Network

It is possible to generalize the theory for a 2-neuron network to an N-neuron
network. Consider a network of N identical oscillators with period T and PRC
φ. Suppose this is an all-to-all connected excitatory network, with all connections
having a delay t1 and strength α.

Phase Response Curves, Delays and Synchronization in Matlab

397

Let X = (x1 x2 ... xN )T be a vector of time variables close to each other such
that oscillator 1 spikes at time x1 , oscillator 2 at time x2 , etc. Then the next
spikes will be ﬁred at times
⎛
⎞
x1 + T − αT φ(t1 + x2 − x1 ) − ... − αT φ(t1 + xN − x1 )
⎜ x2 + T − αT φ(t1 + x1 − x2 ) − ... − αT φ(t1 + xN − x2 )
⎟
⎟ (9)
A(X) = ⎜
⎝ ...
⎠
xN + T − αT φ(t1 + x1 − xN ) − ... − αT φ(t1 + xN −1 − xN )
If there is synchronization, i.e. x1 = x2 = ... = xN , then all components of A(X)
are equal to x1 + T − α(N − 1)T φ(t1 ). So the period of the synchronized state
must be T − α(N − 1)T φ(t1 ).
We want to know whether this synchronized state is stable and attracting.
Consider the map
⎛
⎞
T (1 − α(N − 1)φ(t1 ))
⎜ T (1 − α(N − 1)φ(t1 )) ⎟
⎟
F : X → A(X) − ⎜
(10)
⎝
⎠
...
T (1 − α(N − 1)φ(t1 ))
F has a ﬁxed point (0 ... 0)T and its Jacobian FX evaluated there is
⎞
⎛
−αT φ (t1 )
...
−αT φ (t1 )
1 + αT φ (t1 )(N − 1)
⎟
⎜
1 + αT φ (t1 )(N − 1) ...
−αT φ (t1 )
−αT φ (t1 )
⎟
⎜
⎠
⎝
...
...
...
...
−αT φ (t1 )
...
... 1 + αT φ (t1 )(N − 1)

(11)

To determine the asymptotic stability of the synchronized state, we consider
the diﬀerence vector Y = (y2 ... yN )T = (x2 − x1 ... xN − x1 )T .
The diﬀerence vector of F (X) is G(Y ) = (F2 (X) − F1 (X) ... FN (X) −
F1 (X))T where Fi is the i - th component of F .
So the stability of the synchronized state is determined by the map G. Its
Jacobian GY can easily be obtained from FX and is given by
⎞ ⎛
⎞
⎛
αT φ (t1 ) ... αT φ (t1 )
1 + αT φ (t1 )(N − 1) ...
−αT φ (t1 )
⎠+⎝
⎠
⎝
...
...
...
...
...
...
... 1 + αT φ (t1 )(N − 1)
−αT φ (t1 )
αT φ (t1 ) ... αT φ (t1 )
(12)
This is a diagonal matrix with (N − 1) equal diagonal elements and thus all
eigenvalues equal to 1 + αN T φ (t1 ). So the synchronization is asymptotically
stable if
−2
< φ (t1 ) < 0
(13)
αN T
This is the generalization of constraint (7) to the synchronization of an Nneuron network with all-to-all excitatory connections.
This is again conﬁrmed by tests on a network of Hodgkin-Huxley neurons.
Figure 6 shows on the left the initial state: 8 HH neurons, ﬁring spikes 1 ms

398

W. Govaerts and B. Sautois

Fig. 6. Left: 8 HH-neurons spiking with 1 ms diﬀerence in timing. Right: The 8 neurons
have converged.

apart. They are connected through excitatory connections, giving each other
pulses of size 1 (mV). The connections have a delay of 6 ms. After 20000 ms, the
result is shown on the right of the ﬁgure: all 8 neurons have synchronized strongly.
Acknowledgement. Bart Sautois is a research assistant of the Research Foundation - Flanders (FWO - Vlaanderen).

References
1. Dhooge, A., Govaerts, W., Kuznetsov, Yu.A., Mestrom, W., Riet, A.M.: A
continuation toolbox in matlab. Manual (2003), http://www.matcont.ugent.
be/doc_cl_matcont.zip
2. Dhooge, A., Govaerts, W., and Kuznetsov, Yu.A.: MatCont: A matlab package
for numerical bifurcation analysis of ODEs. ACM TOMS 29,2 (2003) 141-164
3. Hansel, D., Mato, G., Meunier, C.: Synchrony in excitatory neural networks. Neural
Comput. 7 (1995) 307-337
4. van Vreeswijk, C., Hansel, D.: Patterns of synchrony in neural networks with spike
adaptation. Neural Comput. 13 (2001) 959-992
5. Guti´errez, J.M., Iglesias, A.: A Mathematica package for the analysis and control
of chaos in nonlinear systems. Comp. Phys. 12,6 (1998) 608-619
6. Iglesias, A., Galvez, A.: Revisiting some control schemes for chaotic synchronization
with Mathematica. LNCS 3516 (2005) 651-658
7. Govaerts, W., Sautois, B.: Computation of the phase response curve: a direct numerical approach. To appear in Neural Comput. 18,4 (2006)
8. Brown, E., Moehlis, J., Holmes, P.: On the phase reduction and response dynamics
of neural oscillator populations. Neural Comput. 16 (2004) 673-715
9. Izhikevich, E.M.: Dynamical systems in neuroscience: the geometry of excitability
and bursting. To be published by the MIT press (2006)
10. Connor, J.A., Walter, D., McKown, R.: Modiﬁcations of the Hodgkin-Huxley axon
suggested by experimental results from crustacean axons. Biophys. J. 18 (1977)
81-102

