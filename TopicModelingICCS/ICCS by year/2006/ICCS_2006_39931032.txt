Empirical Analysis of the Spatial Genetic
Algorithm on Small-World Networks
Yong Min1 , Xiaogang Jin1,2, , Xianchuang Su3 , and Bo Peng1
1

3

AI Institute, College of Computer Science, Zhejiang university,
Hangzhou 310027, China
2
Ningbo Institute of Technology, Zhejiang university, Ningbo 315100, China
xiaogangj@cise.zju.edu.cn
College of Software Engineering, Zhejiang university, Hangzhou 310027, China

Abstract. Genetic algorithm (GA) has been widely used in optimizing
and solving various problems since ﬁrst proposed, and its characters also
have been deeply studied. In this paper, we investigate the beneﬁts of genetic algorithm whose population is distributed on small-world networks.
In particular, we pay our attention to the complexity of how small-world
aﬀects the behavior of spatial GA. Our work shows that, on a complex
problem, the behavior of spatial GA on the small-world networks is inﬂuenced by at least two diﬀerent factors: local selection and asymmetric
topology. It is more complex than previous results from simple lattice
models. Our results could provide lots of potential methods to improve
the performance of spatial GA and give some guidance for designing of
parallel genetic algorithm. We also present many future problems on the
inﬂuence of small-world to spatial GA.

1

Background

1.1

Spatial GA and Local Selection Eﬀect

Inﬂuence of spatial structure on evolution has been researched from various
ﬁelds: biology[1][8][10], mathematics[6] and computer science[9][11]. These researches have proved that the spatial structure would deeply aﬀect evolution.
Spatially structured population has been also proposed in genetic algorithm as a
tool for improving the searching properties of GA. Spatial GA is a kind of genetic
algorithm whose population has certain spatial structure. The previous studies
on spatial structure of population were primarily related to the parallelism genetic algorithm (PGA)[3][5]. Here, we should mention about ﬁne grained parallel
genetic algorithm: the population is distributed on a network, therefore, one individual and his directly connected neighbors form a deme. Any individual could
only interact with their neighbors, when we perform operators of GA, such as
selection or mutation. The authors noted that the performance of the algorithm
Supported by Zhejiang Provincial Natural Science Foundation of China under Grant
No. Y105697 and Ningbo Natural Science Foundation (2005A610004).
Corresponding author.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 1032–1039, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Empirical Analysis of the Spatial Genetic Algorithm

1033

degraded as the size of the deme increased. This eﬀect, called local selection,
has been researched further by Jayshree Sarma and Kenneth De Jong[7]. Their
results show that the critical parameter of spatial GA is the ratio of the radius
of the neighborhood to the radius of the underlying networks. Moreover, the
coeﬃcient of the growth rate of the best individual in the population is shown
to be an inverse exponential function of this ratio.
1.2

Small-World

The networks that occur in lots of social, biological, and man-made systems are
usually neither completely regular (such as lattices), nor completely random.
These networks usually possess two characters: one is average vertex-to-vertex
distances increase only logarithmically with the total number of vertices, another is so-called “clustering” that two neighbors of a vertex will often also
be the neighbors of another. The networks that have above two characters are
named “Small-World”. In order to study the spatial GA on the small-world networks, we need a artiﬁcial model of small-world networks. Watts and Strogatz[2]
have proposed an famous model for the small-world (WS model), which perhaps
ﬁts better than real small-world networks. Fig.1.1 and Fig.1.2 schematically describes the process for building small-world of WS model. The details of WS
mode can be found at [2].

(1)

(2)

(3)

Fig. 1. The Watts-Strogatz Model. AND Super-Star Structure.
1) The regular lattice with periodic boundary conditions, so that the system becomes
a ring. Each vertex connected to its z nearest neighbors, where in this case z=6 (radius
of the neighorhood rn : 2rn = z). 2) The Watts-Strogatz model is created by rewiring
a small fraction of the links (in this case ﬁve of them) to new sites chosen at random.
3) The super-star structure.

1.3

Asymmetric Topological Structure

More recent discoveries of spatial inﬂuence of evolution, from Erez Lieberman
et al.[4], suggest that the ampliﬁcation of selection occurs at a large amount
of vertices feeds into single vertices which then feed into possibly further single
vertices until they feed into the central hub and ﬁnally the hub feeds back into the
these vertices. This feedback loop acts as a ﬁlter that reduces stochastic eﬀect of

1034

Y. Min et al.

random drift. Fig.1.3 illustrates a such structure[4]. Generally, in a network, we
deﬁne that the sum of weight of any vertex’s leaving links (Wout ) is 1. Therefore,
for a vertex, if sum of weight of entering links (Win ) is equal to 1, this vertex
neither suppress nor amplify selection; if Win < 1, this vertex amplify selection;
if Win > 1, this vertex suppress selection. In sum, the asymmetric topology could
aﬀect the behaviors of evolution.
In this paper, it is the ﬁrst time that explores the eﬀects of asymmetric topology for genetic algorithm. We also want to illustrate that the behavior of spatial
GA on small-world is complicate, which is aﬀected by at least two factors: local
selection and asymmetric topology.

2
2.1

Experimental Setup
Algorithm

Our experiments base on Matlab’s Genetic Algorithm and Direct Search (GADS)
toolbox, and we modify its algorithm to ﬁt for our requirements. The more details
of Matlab’s GADS toolbox can be found in Matlab’s documents and website[12].
In our GA (we call it NGA: genetic algorithm on networks) which is similar
with grained parallel GA, but it run on a single machine, the population is distributed on small-world networks generated by WS model. NGA has three main
steps which are diﬀer from standard genetic algorithm(SGA: Standard algorithm
in Matlab): First step is preserving several elites to next generation according
to the ranking of individuals’ ﬁtness. One individual just preserve one time. The
preserved individuals will be stored in the same position at network as their
current position. Second step is generating mutation oﬀspring whose number is
m. In the step, we ﬁrst choose m unoccupied vertices from underlying network,
which are labelled by vi , (i = 1, 2, . . . , m). For each vi , we should choose a parent
from the individuals in vi and its neighbors, and the mutation of the parent will
occupy vi in next generation. Third step is generating crossover oﬀspring. Generating method likes method described in second step, but it needs two parents for
one oﬀspring and the oﬀspring is generated by crossover operator. The main difference between NGA and SGA is whether the sequence or position of individuals
can be ignored. SGA’s population is a simple set of individuals, but structure of
population of NGA is corresponding to the underlying network structure.
2.2

Deﬁnition of Success and the Diversity of Population

At the end of algorithm running, the best individual’s ﬁtness is fe , and the target
ﬁtness is ft . In our experiments, the value of ﬁtness is just the value of target
functions. We say running of algorithm is success, if |fe − ft | < 0.01.
In our NGA, the coding space is {0, 1}L, size of population is n. The population is P = {a1 , a2 , . . . , an }, where aj = (a1j , a2j , . . . , aLj ), j = 1, 2, . . . , n, so,
the diversity of population is deﬁned as:
D(P ) = 1 −

1
L·n

L

n

(max{
l=1

n

j=1

n

(1 − alj )} − min{

(alj ),
j=1

n

(1 − alj )});

(alj ),
j=1

j=1

Empirical Analysis of the Spatial Genetic Algorithm

1035

obviously, 0 ≤ D(P ) ≤ 1. When D(P ) = 0, the diversity of population is
minimal, and it is maximal, when D(P ) = 1.
2.3

Experiment 1

In order to ensure that the results of our experiments are correct, we need
to prove NGA is “equivalent to” SGA, when NGA plays on a fully connected
network. It is imply that the improving or worsening comes from small-world
eﬀect but from program. Here, we use Rastrigin’s function, which is commonly
used for testing genetic algorithm, to test both NGA on fully connected networks
and SGA. The deﬁnition of two-dimensional Rastrigin’s function is: R1 (x, y) =
10 · n + [x2 − 10 · cos(2πx)] + [y 2 − 10 · cos(2πy)], and the target task is: min(R1 ),
where x, y ∈ [−5.12, 5.12].
The NGA has been deﬁned above, and SGA come from the Matlab toolbox.
Main parameters for Matlab’s GA algorithm are presented in below table:
Parameter Name
Value
Population Type
bitstring (length is 18)
Elite Count
10 percents of population
Crossover Probability 80%
Maximal Generation 100
Selection Method
roulette
Crossover Method
single point
what is meaning of these parameters and how they aﬀect the behavior of algorithm can be found in Matlab documents[12]. Other default parameters also can
be found in the documents. Every algorithm will repeat 100 times independently,
and we will compare NGA with SGA at these parameters: success rate, diversity
of population and convergent speed. From those, we want to prove that NGA is
“equivalent to” SGA.
2.4

Experiment 2

In this experiment, we want to explore how small-world aﬀects the performance
and behavior of spatial GA. Therefore, we will execute NGA on a series of
small-world networks of WS model. These small-world networks base on onedimensional lattice that have 256 vertices and rn = 2. The rewiring probability
pi , (1 ≤ i ≤ 29) of those networks is:
pi =

(i − 1)/256 ; 1 ≤ i ≤ 21
(i − 21)/10 ; 22 ≤ i ≤ 29

Therefore, there are 29 diﬀerent networks: Gi . Gi ’s rewiring probability is pi ,
where 1 ≤ i ≤ 29.
We choose Rosenbrock’s function: R2 (x, y) = 100 · (y − x2 )2 + (x − 1)2 for
ﬁtness function, and target task is: min(R2 ), where x, y ∈ [−5.12, 5.12]. (SGA

1036

Y. Min et al.

performs badly in Rosenbrock’s function. Therefore, it ﬁts for describing the
improvement and the properties of NGA on small-world.) The parameters of
algorithm in experiment 1 and 2 are identical except the maximal generation is
200 in this experiment and every algorithm will repeat 120 times independently.
In regular lattices, the degree of any vertex is identical. It is 4 in this experiment. By rewiring, many vertices’ degree would be bigger than 4, and some
others would be smaller than 4. Here, vertices are labeled by vi , 1 ≤ i ≤ 256,
and the degree of vertices is labeled by degree(vi ). we deﬁne asymmetric factor
U as:
U=
degree(vi ), where degree(vi ) > 4, 1 ≤ i ≤ 256
Although this is a crude deﬁnition for asymmetry, it would be eﬀective in our
experiment.
Comparing with NGA on small-world, we also use same experimental conditions to test SGA and NGA on regular lattices (the size of one-dimensional
lattices is also 256, and 1 ≤ rn ≤ 128).

3
3.1

Results and Analysis
Experiment 1

The results of experiment 1 are presented in Fig.2.1 and Fig.2.2. Two curves
in the ﬁgure almost coincide, and success rate of NGA and SGA is 93% and
91% respectively. Therefore, we can imply NGA is “equivalent to” SGA, when
it base on the fully connected networks. According to the results, we can ignore
the inﬂuence of program in next experiments.
3.2

The Beneﬁts of Small-World

The “success rate” is the percentage of successful runs. The success rates of
diﬀerent algorithms are presented in below table:
Algorithm
Success Rate
NGA on small-world (Best)
0.6750
NGA on small-world (Worst)
0.4083
NGA on regular lattice (radius = 2)
0.5750
NGA on regular lattice (Best, radius = 4)
0.6917
SGA
0.3858
From the table, we can ﬁnd: 1) the worst performance of NGA on small-world
is even better than the performance of SGA; 2) the best performance of NGA
on small-world is much better than the performance of NGA on regular lattice
on which small-world model base; 3) the best performances of NGA on regular
lattice and on small-world are approximate sameness, but, comparing with regular lattice, average connected degrees reduce by half in small-world model, For

Empirical Analysis of the Spatial Genetic Algorithm
70
NGA
SGA

Average Fitness

Diversity of Population

1

0.8

0.6

0.4

0.2

NGA
SGA

60
50
40
30
20
10

0
0

20

40

60

80

100

0
0

120

20

Generations

(1)

60

80

100

120

(2)
Diversity of Population

1

30
25
20
15
10
5
0
0

40

Generations

35

Average Distances

1037

5

10

15

Networks

(3)

20

25

30

Network 1
Network 6
Network 11
Network 16
Network 21
Network 26

0.8

0.6

0.4

0.2

0
0

50

100

150

200

250

Generations

(4)

Fig. 2. Results of Experiment
(1) is graph of the average diversity of population at each generation. (2) is graph
of average ﬁtness of population at each generation (mirror the convergent speed of
GA). (3) is graph of average distances for all 29 networks. (4) is graph of diversity of
population at each generation for G1 , G6 , G11 , G16 , G21 , G26 .

parallel GA, it means that the cost of communication of network will decline
dramatically.
In sum, the small-world plays a extraordinary role in promoting the performance of genetic algorithm.
3.3

Relationships Between Average Vertex-to-Vertex Distances and
the Diversity of Population

The relationships between average vertex-to-vertex distances (labeled by L) and
diversity is described by Fig.2.3 and Fig.2.4. There are two obvious factors: First,
the changing rate of diversity increase with the decreasing of L; Second, L of
G11 , G16 and G21 is similar, at the same time, the diversity curves of G11 , G16 and
G21 is also close to each other. Therefore, we can deduce that L would determine
the changing rate of diversity of population in spatial GA. It is reasonable.
Shorter L would promote individuals’ diﬀusion. It let a few advantage segments
of “gene” occupy more and more individuals in the population, and disadvantage
segments of “gene” are replaced rapidly and disappear ultimately.
3.4

Diﬀerent Results from Previous Researches

Jayshree Sarma and Kenneth De Jong’s results[7] show that the critical parameter, which deeply aﬀects the behavior of spatial GA, is the ratio (labeled by R) of

1038

Y. Min et al.

radius of neighborhood to the radius of the underlying networks. However, from
Fig.3, we ﬁnd two opposite phenomenons: First, trends of two curves (Fig.3.2)
aren’t consistent totally; Second, the turning-points of two curves cannot match
to each other. Although the improving from local selection is clear from above
results, the two factors would support our opinion that R cannot entirely determines the behavior of spatial GA on small-world, on the contrary, the crucial
role of R in evolution on regular lattices is obvious.
3.5

New Discovery: The Inﬂuence of Asymmetric Topology

From Fig.3.1, we can ﬁnd an interesting phenomenon: two curves’ turning-points
are well matched to each other (these points include: 8, 9, 10, 11, 16, 17, 19, 20,
21), and there are just a few unmatched points, such as 15 and 22. All of those
cannot be explained by contingency. Therefore, we could say asymmetric topology of underlying networks could also aﬀects the behavior of spatial GA on
small-world. I concede that two curves are unmatched at tail, however, I think
the most possible reason is our asymmetric factor U cannot correctly reﬂect the
degree of asymmetry of small-world, when there are too many rewired links.
In sum, the results of our experiments suggest that the inﬂuence of asymmetric
topology cannot be ignored, when you design a spatial GA. Additionally, the performance of spatial GA might be further improved by well designed asymmetric
topology.

0.75

500

16
Success Rate

Success Rate
0
0

5

10

15

Networks

20

25

0
30

0.7

Success Rate

Asymmetric Factor

Success Rate
Asymmetrical Factor

Ratio of Two Radiuses

14

0.65

12

0.6

10

0.55

8

0.5

6

0.45

4

0.4
0

(1)

5

10

15

20

25

Ratio of Two Radiuses

1

2
30

Networks

(2)

Fig. 3. Results of Experiment 2
(1) is the graph of asymmetric factor for all 29 networks; (2) is the graph of ratio of
the average connected radius of the vertex to the radius of the underlying networks for
all 29 networks.

4

Conclusion and Future Works

In our experiments, spatial GA on small-world exhibit its outstanding beneﬁts,
comparing with SGA and spatial GA on regular networks. In common sense,
these beneﬁts seem to be due to local selection eﬀect. Furthermore, we have found
that another factor, asymmetric topology of networks, also play a subtle role in

Empirical Analysis of the Spatial Genetic Algorithm

1039

the spatial GA, and we have given a few evidences to support this discovery. The
discovery could provide us a potentially valuable tool to improve the performance
of spatial GA, and also helps us to understand the behaviors of evolution on
small-world.
Admittedly, our work is just a beginning of exploring spatial GA on smallworld networks. In the future, more works need to be done to analyze the
properties of the behavior of spatial GA on small-world, such as more details
about asymmetric topology, relationships between local selection and asymmetric topology on small-world, and how to develop more eﬃcient genetic algorithm
with asymmetric topology.

References
1. C. Hauert, M. Doebeli: Spatial structure often inhibits the evolution of cooperation
in the snowdrift game. Nature, 428 (2004) 643-646
2. D. J. Watts, S. H. Strogatz: Collective dynamics of ’small-world’ networks. Nature,
393 (1998) 440-442
3. E. Cantu-Paz: Eﬃcient and Accurate Parallel Genetic Algorithm. Kluwer Academic Press (2000)
4. E. Lieberman, C. Hauert, M. A. Nowak: Evolutionary dynamics on graphs. Nauture, 433 (2005) 312-312
5. E. Alba, M. Tomassini: Parallelism and evolutionary algorithms. IEEE Transactions on Evolutionary Computation, 6(5) (2002) 443-462
6. H. Ebel, S. Bornholdt: Coevolutionary games on networks. Phys. Rev. E. 66 (2002)
56-118.
7. J. Sarma, K. De Jong: An analysis of the eﬀects of neighborhood size and shape on
local selection algorithms, Parallel Problem Solving from Nature IV, Berlin, (1996)
236-244
8. M.Nakamaru, H.Matsuda, Y.Iwasa: The evolution of cooperation in a latticestructured population.Journal of theoretical Biology, 184 (1997) 65-81
9. M. Giacobini, M. Tomassini, A. Tettamanzi: Takeover time curves in random and
small-world structured populations. GECCO’05, June 25-29, 2005, Washington,
D.C., USA
10. M. A. Nowak, R. M. May: The spatial dilemmas of evolution. Int. J. Bifurcation
Chaos, 3 (1993) 35-78
11. N. Williams, M. Mitchell: Investigating the success of spatial coevolution.
GECCO’05, June 25-29, 2005, Washington, D.C., USA
12. The Matlab’s genetic algorithm and direct search toolbox documents:
http://www.mathworks.com/access/helpdesk/help/toolbox/gads/

