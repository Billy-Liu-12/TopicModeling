Collaborative Trust-Based Shortest Secure Path
Discovery in Mobile Ad Hoc Networks
Seungtak Oh, Chilgee Lee, and Hyunseung Choo
School of Information and Communication Engineering,
Sungkyunkwan University,
440-746, Suwon, Korea
+82-31-290-7145
choo@ece.skku.ac.kr

Abstract. As routes in MANET are composed of only mobile terminals
based on a multi-hop mechanism, MANET may encounter severe situations where intermediate nodes disturb delivering packets adversely.
Accordingly, the stability of routing protocols is very important for operating the ad hoc networks eﬃciently and securely. However ﬁnding
a secure end-to-end path is not easy, since the nodes in MANET are
characterized by uncertain trust relationship each other. In this paper, a
comprehensive mechanism for discovering the most secure and shortest
paths, is proposed. This proposed mechanism is based on the Dijkstra
algorithm, and regards distance weight and trust weight highly. The metric value which can determine the routing path is to be extracted from
the distance value and the trust level. According to the simulation results, even though the communication cost increases up to about 8%, the
security level of the shortest path is improved signiﬁcantly.

1

Introduction

Mobile Ad Hoc Network (MANET) is an infrastructureless network, consisting
of a set of mobile nodes without any support of base stations or access points.
A node in MANET is responsible for relaying packets to other nodes in addition
to a terminal station. Then some packets transmitted from a source node can be
delivered to a destination node by way of various intermediate nodes, under the
store-and-forward function. Therefore, MANET can be easily applied to next
generation applications such as telematics, USN and home networks, because of
its ﬂexibility and agility in establishment.
Unfortunately, in the presence of malicious nodes, MANET is highly vulnerable to attacks, due to dynamically changing topology, frequent appearance of
nodes, and lack of centralized security infrastructure. An attacker can attempt
to cause legitimate packets to be routed in dysfunctional ways or inject packets
This research was supported by the Ministry of Information and Communication,
Korea, under the Information Technology Research Center support program supervised by the Institute of Information Technology Assessment, IITA-2005-(C10900501-0019). Corresponding author: H. Choo.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 1089–1096, 2006.
c Springer-Verlag Berlin Heidelberg 2006

1090

S. Oh, C. Lee, and H. Choo

into the network by an attack to consume valuable network resources. In the
case of wormhole attack that is not easy to detect, an attacker receives packets
in one part of the network and tunnels them to another part and replays them
in the diﬀerent part. Consequently, it is very important to realize robust and
secure routing protocols.
There are basically two stems to solve these problems in MANET: the one is
how to identify legitimate users, the other is how to establish secure paths. Many
researches are currently interested in the user identiﬁcation using certiﬁcates
[4, 6, 7], but it is not easy to realize without any certiﬁcate authority(CA) infrastructure. And also several secure routing protocols have been developed so
far, but it is very hard to ﬁnd out the best one among these protocols because
of its preliminary conditions such as sharing a secret key, requiring a certain
infrastructure, and so on.
With regard to the insecurity of MANET environment, a further study on combining user identiﬁcation and secure routing protocol will be intensely needed. By
now, there have been some works on trust relationship so as to enhance the security level of the routing paths, but has not been any research upon how to initialize the trust level on each node and estimate the trust level of other nodes. In
this paper, a solution is presented, discovering the shortest and most secure path
by employing a new collaborative trust relationship mechanism. This mechanism
considers the distance weight and the trust weight, and shows how to assign the
initial trust weight and reckon the trust level. In simulation, it is conﬁrmed that
the proposed mechanism increases the communication cost up to about 8%, but
the security level of the shortest path is improved signiﬁcantly.
The remainder of this paper is organized as follows. The related works regarding secure routing protocols in MANET are presented in Section 2. In section
3, the solution is explained in detail. In Section 4, the results of simulation are
discussed, and the eﬀectiveness of the proposed mechanism is veriﬁed. Finally,
Section 5 concludes this paper.

2

Related Works

Current eﬀorts toward the design of a secure MANET environment have mainly
focused on user identiﬁcation by means of a certiﬁcate and representative secure
routing protocols. SRP[1] relies on the availability of a Security Association(SA),
a shared key KST , between the source node(S ) and the destination node(T ),
without intermediate nodes requiring cryptographic validation of control traﬃc.
The success of this protocol depends on an eﬃcient distribution of shared secret
keys. S. Capkun and J. Hubaux introduce a realistic solution that enables the
establishment of secret keys between all pairs of nodes through oﬄine authority
or fully self-organized mechanism[2]. This solution, however, has a potential risk
to share a secret key with a malicious node, as the indirect user identiﬁcation
between a pair of nodes fully relies on the security association of its friend node.
Another secure routing protocol, ARAN[3] requires the use of a trusted certiﬁcate
server, and is composed of two distinct stages. The goal of the ﬁrst stage is to

Collaborative Trust-Based Shortest Secure Path Discovery

1091

enable the source node to verify whether the intended destination is reached or
not. The second stage is primarily used for secure discovery of the shortest path.
ARAN introduces authentication, message integrity and non-repudiation, but
is not a suitable mechanism for an isolated MANET environment, due to the
requirement for the certiﬁcate server. And SEAD routing protocol is proposed
in [5]. It makes use of eﬃcient one-way hash chains. The basic idea of SEAD is
to authenticate the sequence number and the metric of a routing table update
message using hash chains elements. An attacker cannot generate any value,
in the hash chain of the node, which the node will use in the future as it is
impossible to invert a one-way hash function. SEAD, however, cannot prevent
the same distance attack where a node receives an advertisement for a particular
sequence number and metric and then it readvertises the same sequence number
and metric.
On the other hand, N. Pissinou, T. Ghosh and K. Makki introduce an extension of the AODV[8] routing protocol which is called T-AODV[9, 10]. When
a node desires ﬁnding a path to another node, it initiates route discovery by
broadcasting a Route Request packet(RREQ). The packet header contains a
trust level ﬁeld, in addition to the other ﬁelds in AODV RREQ. When an intermediate node receives the RREQ packet, it rebroadcasts the packet, after
modifying the trust level ﬁeld to include the trust level of the node transmitting it the RREQ. Every node veriﬁes the rebroadcasted RREQ packet from its
next node to verify transmitting of proper information. If the validation fails,
it immediately broadcasts a warning message questioning the trustworthiness of
that speciﬁc node. The ﬁnal route selection is based upon the trust level metric.
However, this is not suﬃcient in ﬁguring out how to share the trust level, and
calculate the trust levels set on each of the edges of a route path.
In [11], A. Pirzada and his group address a trust-based routing scheme. Whenever a node transmits data, it places its receiver in promiscuous mode. As soon as
it hears its intermediate neighbor forwarding the packet, the sender node checks
the integrity of the packet by veriﬁcation process. If the integrity check passes, it
conﬁrms that the intermediate node has acted in a good manner and so its direct
trust counter is increased. Similarly, if the integrity check fails or the intermediate node does not transmit the packet, its corresponding direct trust counter
is decreased. In order to propagate trust information, each node appends the
direct trust value of the preceding node from which it had received the RREQ
packet before forwarding the packet. This mechanism can detect grey hole, black
hole, and modiﬁcation attacks, but has a critical ﬂaw that most of nodes must
always set its receiver in promiscuous mode, and then the information of other
nodes can be easily disclosed.

3

Shortest Secure Path Discovery Mechanism

In Figure 1, simply applying the Dijkstra algorithm, which can search the shortest path, may undergo a serious problem such as wormhole attacked covertly by
a malicious node M in MANET.

1092

S. Oh, C. Lee, and H. Choo
3

M

B
5

3

5

S

E
8

5

6

4

G

D

2
10

C

2
3

F

H

Fig. 1. Single-Source Shortest Paths

If the trust level is considered, the shortest path is established by following
S → B → E → G → D, but if not, it is constructed by following S → B → M
→ D. Eventually, the shortest path which is composed of a malicious node can’t
aﬀord a secure path absolutely. To overcome this problem, we propose a new
mechanism, which can ﬁnd an secure path by appending the trust weight to every
edge among nodes, in addition to the distance weight. A graph G(V,E) represents
a set of nodes and a set of edges in MANET respectively. Here a node means an
element in V and an edge means a connection between two nodes containing the
distance weight and the trust weight. Then the two edge elements are handled
respectively. The running condition of the proposed mechanism requires that
secure routing protocols, such as T-AODV, discovering the shortest path ought
to have the trust weight information regarding the previous nodes in response
packets.
3.1

Trust Level

The edge element E may demonstrate the trust weight between a pair of nodes,
and has a real number between 0 and 1. When a node attempts to connect to
MANET in the proposed mechanism, initially, certiﬁcates have to be exchanged
with each other through a point-to-point network, that is, secure side channel,
following realistic mutual identiﬁcation with neighbor nodes.
Otherwise, connection to MANET is impossible. Mutual authentication by
certiﬁcates is not explained further in this paper.
8/1

B
7/1

A

C
3 / 0.9

8/1

G

5/1

3/1

F

5 / 0.9

6 / 0.7
3 / 0.9

5/1

D

5 / 0.7

E

Fig. 2. Edges with Distance and Trust Weight

Collaborative Trust-Based Shortest Secure Path Discovery

1093

In Figure 2, all edges have two numbers that the ﬁrst number means the
distance weight and the second number the trust weight. And the solid line edges
represent the situation that two nodes, facing each other, execute the mutual
authentication directly, its trust weight is always 1. Otherwise, the dotted line
edges mean that no mutual authentication occurs directly. Here Trust(P), the
trust level from a source node to a destination node, can be evaluated using the
following equation.
T rust(P ) =

tw,

minp
i=0 (twi )
ln(η+1) ,

for η = 1
for η > 1

(1)

Here, η represents for the number of hops. The trust level is always 1 on
the condition that mutual authentications are executed oﬄine and the number
of hops is 1. Otherwise, the trust level depends on the minimum of the trust
weights from a source node to a destination node and the number of hops. In
Equation (1), the natural log, ln(η+1), is used when the number of hops is
greater than 1, so that the trust level can be diﬀerentiated by the number of
hops even though the same trust level. That is, the more the number of hops
increases, the less the trust level decreases.
Furthermore, if several routing paths to a destination node are discovered,
the path having the highest trust level is selected as the shortest secure path.
3.2

Routing Path Discovering Algorithm

In addition to Trust(P), it is essential to aggregate all the distance weights of
a path to ﬁnd the shortest path. Distance(P), the distance value from a source
node to a destination node, can be deﬁned as Equation (2).
p

dw(vi−1 , vi )

Distance(P ) =

(2)

i=1

M etric(P ) =

Distance(P )
T rust(P )

(3)

That is, Distance(P ) aggregates the distance weight (dw) from a source node
to a destination node. The shortest routing path may be the path with the
smallest distance value to the destination node. In addition to the distance, the
proposed algorithm manages the Trust(P) and its weight. Trust(P) basically
chooses the smallest trust weight of all the edges on a path. Eventually a new
Metric(P), which directs the shortest and secure routing path in Equation (3),
is deﬁned.
In Table 1, the proposed algorithm, regarding the critical functions, is described. The proposed algorithm uses the metric value in order to determine the
most eﬃcient path.

1094

S. Oh, C. Lee, and H. Choo
Table 1. Proposed Algorithm

Proposed(G,w,s )

Relax(u,v,dw,tw )

1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.

Initialize-Single-Source(G,s )
d[s ] ← 0
t[s ] ← 1
m[s ] ← 0
pred[s ] ← NIL
Q ← V[G ]
while Non-Empty(Q )
do u ← Extract-Min(Q )
S ← S ∪ {u }
for each v ⊆ Adj[u ]
do Relax(u,v,dw,tw )

1. if (m[u ]+(dw(u,v )/tw(u,v )))<m[v ]
2.
do d[v ] ⊆ d[u ]+dw(u,v )
3.
t[v ] ⊆ min(t[u ],tw(u,v ))
/log(h[v ]+1)
4.
m[v ] ⊆ d[v ]/t[v ]
5.
Decrease-Key(Q,v,m[v ])
6.
pred[v ] ⊆ u

4

Performance Evaluation

The Dijkstra algorithm written in C++ language is used for simulation, and some
functions are appended or modiﬁed to realize the proposed scheme. The modiﬁed
program is executed a total of ﬁve times under such conditions, as the network
consists of 130 nodes and 120 links. More detailed simulation environments are
presented in Table 2. The distance weight is randomly generated from a minimum
of 3 to a maximum of 52, and the trust weight from a minimum of 0.3 to a
maximum of 1.
Table 2. Simulation Environments
Times
1st
2nd
3rd
4th
5th
Total

Vertices
130
130
130
130
130
650

Edges
503
501
500
503
503
2,510

Paths
124
123
126
127
128
628

Figure 3 presents the characteristic of the number of paths in terms of the
number of hops, which composes some of the simulation results. In Figure 3, we
can ﬁnd the phenomenon that the distribution curve of hops highly increases at
approximately 4 hops of both algorithms, which have 628 paths equally, and that
there is no path consisting of 8 hops or more, in the proposed algorithm. This is
the reason that the proposed algorithm intends to discover the most secure path
within a nearby boundary, because the more the number of hops increases, the
less the trust level decreases.
Figure 4 shows the fact that distance average in the Gaussian distribution generally increases from 128.66 to 136.82, and then, compared with Dijkstra, the
distance graph is shifted slightly toward the right. Therefore, it is expected that

Collaborative Trust-Based Shortest Secure Path Discovery

1095

240

Dijkstra
Proposed

210
180

Paths

150
120
90
60
30
0
0

1

2

3

4

5

6

7

8

9

10

11

Hops

Fig. 3. No. of Paths in terms of the No. of Hops

Dijkstra
Proposed

50

Gauss fit to Dijkstra Algorithm:
Chi^2/DoF
R^2

0.93603

Area

Center

20.46747

Paths

40
Width

Offset

Height

------------------------------------------------------

30

6143.9

128.66

107.27

0.57303 45.701

20
Gauss fit to Proposed Algorithm:

10

Chi^2/DoF
R^2

0.95037

Area

Center

11.78557

0
0

50

100

150

200

Distance

250

300

350

Width

Offset

Height

-----------------------------------------------------6167.3

136.82

122.30

0.59758 40.235

Fig. 4. Correlation of Distance and Paths

the increase in distance will bring the communication cost up to about 8%. However, it is possible to obtain more secure paths by adjusting the threshold level
appropriately. For instance, if the threshold level is set to 0.4, only the path which
its trust level is more than the threshold level is to be accepted as a secure one.

5

Conclusion

The proposed mechanism is located in the sublayer of secure routing protocols
considering the trust level. In oﬀering routing information from them, it is possible to select the most secure and shortest path from the unreliable MANET
environment, by means of the ability to perceive the trust levels of opposite
nodes. Even though the proposed mechanism works with the trust weight as
well as the distance weight, it does not make any diﬀerences in a viewpoint of
the number of hops, except for rising the communication cost slightly. Consequently, discovering the shortest secure paths in MANET by using the proposed
mechanism, provides one of the best solutions, and basically prevents internal
malicious nodes from attacking or disguising, such as in the case of a wormhole[4].

1096

S. Oh, C. Lee, and H. Choo

References
1. P. Papadimitratos, Z.J. Haas, ”Secure routing for mobile ad hoc networks”, SCS
Communication Networks and Distributed Systems Modeling and Simulation Conference(CNDS 2002), 2002.
2. Srdjan Capkun, Jean-Pierre Hubaux and Levente Buttyan, ”Mobility Helps Peerto-Peer Security”, IEEE Transactions on Mobile Computing, VOL. 5, NO. 1, pp.
43-51, 2006.
3. K. Sanzgiri, B.Dahill, B.N. Levine, C. Shields, E.M. Belding-Royer, ”A Secure
Routing Protocol for Ad Hoc Networks”, Proceedings of the 10 th IEEE International Conference on Network Protocols (ICNP02), 2002.
4. Karlof, David Wagner, ”Secure routing in wireless sensor networks: attacks and
countermeasures”, Ad Hoc Networks 1, pp. 293-315, 2003.
5. Y.C. Hu, D.B. Johnson, A. Perrig, ”SEAD: secure eﬃcient distance vector routing
for mobile wireless ad hoc networks”, Proceedings of the 4th IEEE Workshop on
Mobile Computing Systems and Applications(WMCSA 2002), pp. 3-13, 2002.
6. G. Montenegro and C. Castelluccia. ”Statistically Unique and Cryptographically
Veriﬁable(SUCV) Identiﬁers and Addresses”, Proc. Symp. Networks and Distributed Systems Security(NDSS 2002), Internet Society, pp. 87-99, 2002.
7. Srdjan Capkun, Levente Buttyan, Jean-Pierre Hubaux, ”Self-Organized PublicKey Management for Mobile Ad Hoc Networks”, IEEE Transactions on Mobile
Computing, VOL. 2, NO. 1, pp. 52-64, 2003.
8. C.E. Perkins, E.M. Royer, ”Ad-hoc on-demand distance vector(AODV) routing”,
in: The Second IEEE Workshop on Mobile Computing Systems and Applications,
New Orleans, LA, USA, February 1999.
9. Niki Pissinou, Tirthankar Ghosh, Kia Makki, ”Collaborative Trust-Based Secure
Routing in Multihop Ad Hoc Networks”, Proceedings of Networking ’04:Springer
Verlag, Series:Lecture Notes in Computer Science, Vol.3042, pp. 1446-1451, Athens,
Greece, May 9-14, 2004.
10. Tirthankar Ghosh, Niki Pissinou, Kia Makki, ”Collaborative Trust-based Secure
Routing Against Colluding Malicious Nodes in Multi-hop Ad Hoc Networks”, Local
Computer Networks, 2004. 29th Annual IEEE International Conference on, pp.
224-231, Nov 16-18, 2004.
11. Asad Amir Pirzada, Amitava Datta, Chris McDonald, ”Trust-based routing for
ad-hoc wireless networks”, Networks, 2004.(ICON 2004). Proceedings. 12th IEEE
International Conference on Volumn 1, pp. 326-330, Nov 16-19, 2004.

