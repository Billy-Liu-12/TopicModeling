A Novel Control Plane Model
of Extensible Routers
Kun Wu, Jianping Wu, and Ke Xu
Department of Computer Science and Technology,
Tsinghua University, Beijing 100084, P.R. China
{kunwu, xuke}@csnet1.cs.tsinghua.edu.cn,
jianping@cernet.edu.cn

Abstract. The extensible router is the next generation router architecture. This paper studies the extensibility of the router control plane,
which contains complicated modules such as routing protocol processing, router information management, etc. It is diﬃcult to decide when to
extending the control plane, and how many nodes are needed. Moreover,
the module dispatching conﬁgurations is another issues. This paper describes the extensible architecture of the router system and the control
plane. It deﬁnes three variables to evaluate the extensibility. And a twostep extensible model is provided to achieve the maximum extensibility
under these evaluations. Finally, the experiments show that the model is
correct and eﬃcient.

1

Introduction

1.1

Motivation

The next generation router will concentrate in the extensible architecture[1][2][3].
The single chassis router, which has been widely used in the conventional router
system, cannot catch up with the Internet explosion [4]. A fully extensible structure is borrowed from computer clusters[5], which can help in meeting the expanding requirements of the future Internet.
In the recent years, research on the scalability in the data plane has grown
enormously. However, very few solutions can be found by far on how to make a
control plane extensible enough, which is as critical as that of the the data plane.
While the system is becoming larger and larger by clustering more small nodes,
the routing protocol processing and other service routines can cause bottlenecks
in both of the processing power and the memory storage.
1.2

Previous Work

The router extensibility is an interesting topic. Some demos or products under
the extensible architectures have been released. The systems can be extended
This work was supported by the National Key Fundamental Research Plan (973) of
China (No 2003CB314801).
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part IV, LNCS 3994, pp. 33–40, 2006.
c Springer-Verlag Berlin Heidelberg 2006

34

K. Wu, J. Wu, and K. Xu

to multiple chassis with speciﬁc inter-connecting networks. Many manufactures
announced their systems, such as the CRS from CISCO, T640 from Juniper
and Avici’s TSR system. The interconnecting styles embedded are very diﬀerent. CRS uses the multi-stage inter-connecting network. And, TSR employs a
3D-torus architecture. However, the majority research and improvement are located in the extensibility on the data plane. Very few evolutions can be found
on the control plane, which can not keep up with the extension on the date
plane.
Nevertheless, some research groups are active on the extensible control plane,
especially to provide an extensible router software platform. The Scout[1] is an
conﬁgurable operating system, which can provide the functional extensibility.
Click[6] is a module-oriented router model, which is composed by simple elements. Router Plugins[7] is also a way to extend the router functions by import
new plugins onto the processing path. However, all of these models are mainly
focusing on the functional extensibility, other than the structure extending. Zebra is an excellent module-based routing software platform. It is well designed
and implemented under a structural manner. It can contribute much on the extensible router system although it is not extensible itself. The XORP[8] is an
active project on providing a ﬂexible and extensible software router platform
for network reach. It provides a ﬂexible well-deﬁned structure. However it is not
focus on the performance-driven extensibility.
In this paper, we analyze the evolution of the modern router architecture, and
provide a feasible model for extensible router systems. Section2 give a overview
of the architecture of router and the control plane. Section3 describes the extensibility requirements and analyze the key issues. Section4 presents the extensible
model in details. Section5 evaluates the performance of the model. Section6 gives
a conclusion of the paper.

2

Architecture Overview

In this section, we will describe why an extensible model is necessary, and what
the structure it looks like. Fig1 depicts the conceptual extensible router architecture. The forward entities are the components located in the data plane.
They are connected by the interconnecting network. This is beyond this paper’s
discussion, which focus on the control plane.
As shown in Fig. 1, the control entities are the control part of each node.
The system running control and routing processing are located in them, which
constitute the control plane. The control entities are connected together by a
communication network. This communication network can be implemented in
diﬀerent ways, such as a switch, or even a virtual network provided by the data
plane. The main problem now is how to distribute the processing modules to
diﬀerent control entities in the control plane.
The control plane architecture is shown in Fig. 2. The concrete processes on
each control entity are represented as modules, such as OSPF processing. The
lines in Fig. 2 represent the relationships between each pair of nodes.

A Novel Control Plane Model of Extensible Routers

35

Fig. 1. Extensible Router Architecture

Fig. 2. Control Plane Architecture

3

Extensibility Requirements

Beneﬁted from the optical technology improvements[9][10], the interface speed
and density reach to an extreme high level. The core router will provide carrier
class high availability to achieve non-stop forwarding[11]. Moore’s Law[12] shows
that the computer performance would double every 18.6 months. But the data
traﬃc in Internet has grown with a tremendous speed[13][14], which is approximately doubling each year. It is not possible to support the traﬃc and processing
in one box.
One of the key issues for extensibility is to limit the cost increasing during the
extending. The overall cost is denoted as C(n) for a n-nodes router. The eﬀect
function is E(n), which is a integrated measurement for that the extension can
as the Extending Cost Rate (ECR).
beneﬁt. We deﬁne the derivative ΔC(n)
Δn
ΔE(n)
The Δn shows the eﬃciency, which is deﬁned as the Extending Eﬃciency
Rate (EER). The requirements for the extensibility is to minimize the ECR,
and maximize the EER respectively. Moreover, we deﬁne Extending Balance
Level (EBL) to reﬂect the balancing result, which can be measured by the
geometric mean for the utilities on each node.
Under the current philosophy of parallel computing, it is impossible to reduce
ECR to a level lower than zero. We deﬁne the inherent cost for one problem,
ˆ In the extended system with n nodes, Cˆ
i.e. routing processing in router, as C.
can be distributed as cˆi , where i = 0, 1, · · · , n − 1. The communications among

36

K. Wu, J. Wu, and K. Xu

these nodes can introduce overheads, including the extra temporary memory,
the inter-process communication, the scheduling, etc. The overhead on node j
caused by information issued by node i is presented as oij . These overheads
will add to the overall cost. We denote the relationship between node i and
node j as rij , and the Ri×j is the relation matrix. The sets of overheads and
relation values are O and R. A non-decreasing function F (rij ) : R → O can
be given to convert the relationship to overhead. That is oij = F (rij ). According to the information theory, the information from node i to j cannot
be negative, rij ≥ 0. And, there will be no overhead on node j caused directly by node i, if node j is not depended directly on node i. Then we have
F (0) = 0. So for ∀i, j = 1, 2, · · · , n, we have oij = F (rij ) ≥ F (0) = 0.
That is oij ≥ 0. While being extended to n nodes, the total cost is the accumulate cost and overhead on all the n nodes. Call (n) = Σci + ΣΣoij =
all (n−1)
Cˆ + ΣΣF (rij ). Then we have ΔC(n)
= Call (n)−C
= ΔΣΣF (r( ij)). It
Δn
n−(n−1)
shows that the potential extensibility is controlled by the relationship matrix
and the convert function. Let G (n) = ΣΣF (rij ) be the integrated overhead
for a n-nodes system under certain distributed scheme. Hence, the ECR can be
written as
n

n

F (rij )

ECR(n) = ΔG (n) = Δ

(1)

i=1 j=1

For node i, we write the resources it can provided as ai . The total resources in
n
the extensible system will be A(n) = i=1 a(i). After cutting oﬀ the overhead,
we get the available resources A(n) − G (n). Therefore, the EER can be written
as
(2)
EER(n) = an − ΔG (n) = an − ECR(n)
And, by deﬁnition, we can write the extending balance level as
n

EBL(n) =

ci
a
i=1 i

1
n

(3)

From these equations, we can point out that the extending result is dominated
by the correlation between each pair of the nodes, the contribution of the relation
to the cost, the capability of the new participant node, and the system-wise
balance level.

4

Extensibility Model

Consider the situation that the information dependence of the tasks, which are
separated onto the new coming node against those on the rest nodes, increase
to a large value, so that the overhead will overwhelm the capacity. In the router
systems, many high cost tasks are also too tightly coupled to be separated.
At some point when the the overhead for dispatching a new module is greater
than the incremental capacity, the extending upper-bound is reached. By the

A Novel Control Plane Model of Extensible Routers

37

deﬁnitions, we can calculate the extension limitation for a system by the ECR
and EER, so that the system can still be extended to more nodes. But it is
not enough. Because it has no senses to assign a trivial module to a new node,
although it will contribute to the ECR and EER. The balance level (EBL) decides
which and how many modules should be dispatched. So, the EBL is used to
evaluate if an extension scheme is good or bad while the node number is given.

ΔG (4)

ΔG (3)
ΔG (2)

Fig. 3. Extending Path

The extensibility model contains two parts. One is to decide how many nodes
are needed for the given system load. The other is to assign the modules to these
separated nodes.
The ﬁrst step is depicted in Fig. 3. The left ﬁg shows the cost increasing with
the load under diﬀerent amount of nodes. The number of nodes is denoted as n.
n = 1 means the single chassis system.
The function in Equation1 is a converter from information to overhead. F (rij )
is the overhead on node j caused by the information issued by node i. While
considering a real router system employ a multi-tasks operating system (OS), the
job scheduling, bus arbitration, and buﬀer management can introduce the side
eﬀect of OS overhead. Long term measurement can show us that the processing
overhead at node j , with the attached management overhead is counted in,
can increase faster than the increment of information from i to j. Hence, the
conversion function F (rij ) is roughly a convex function. This is why the curve
with a larger node number is above that with a smaller one. And the space
between every two adjacent curves has the same trend.
While the total node capacity is considered, we will have the relationship
between system resource and overall cost along with variety of the load. This
is illustrated in right part of Fig. 3. The horizontal lines from l1 to l4 is the
capabilities with node number n = 1, 2, 3, 4. Each horizontal line is a resource
level the system can provide. The space from the line to the corresponding
cost curve describes the resource available. This space reduces with the load
increasing. A threshold is introduced here to preserve some resources for the

38

K. Wu, J. Wu, and K. Xu

current conﬁguration. While the threshold is reached, a decision must make
if it will transfer to higher resource level. The decision points are shown as
p1 , p2 , p3 , p4 . And, for each value of n, we will have the EER as the shadow
areas.
If we connect each decision point and the next horizontal lines, which is depicted as the bold line in the right ﬁgure, a decision border is given. We name it
as the Extending Path. The area above the path is all the permitted conditions.
And the area below can be resource exhausted-prone situations. From this ﬁgure, we can decide how many nodes needed, and what eﬃciency the extension
can achieve.
Now, the second step is to give a suitable modules distributing conﬁguration
so that the EBL is maximized. For simplicity, we will inspect the situation in a
simple system, which has the typical modules as following.
–
–
–
–
–

RT M GT : route management processing, i.e. forwarding table maintaining.
OSP F : OSPF protocol processing
BGP : BGP protocol processing
T RAN S: transport layer support computing, i.e. TCP/UDP/IP.
M GM T : system management processing, i.e. MIB collecting.

And the information dependencies among them are listed below:
–
–
–
–
–

M IB: Management Information Base.
RTBGP : BGP routing table changes.
RTOSP F : OSPF routing table changes.
U P DBGP : BGP update information.
U P DOSP F : OSPF update information.

We can sort the information dependencies in a more general sense.
M IB
ΔRTBGP > ΔRTOSP F
ΔU P DBGP > ΔU P DOSP F
So, we can arrange the dependencies into the following table.
Table 1. Information Dependencies
Source
RT M GT
OSP F
BGP
T RAN S
M GM T

RT M GT
OSP F
BGP
T RAN S M GM T
0
ΔRTBGP
ΔRTOSP F
ε
M IB
ΔRTOSP F
0
0
ΔU P DOSP F M IB
ΔRTBGP
0
0
ΔU P DBGP M IB
ε
ΔU P DOSP F ΔU P DBGP
0
M IB
ε
ε
ε
ε
0

The source of the information ﬂow is list in the ﬁrst column. Each one of the
rest columns is the information dependencies to the ﬁrst item in the column.
A small value ε is introduced for the dependencies that can be ignored. From
the table we can classify the modules into three levels. The Level I is the closely
associated module, i.e. the M GM T , is tightly coupled with every other modules.

A Novel Control Plane Model of Extensible Routers

39

The Level II is the partly coupled module, such as OSP F or BGP , which is
much depend on some of the other partly coupled modules. The Level III is the
weakly coupled service module, i.e. T RAN S, which depends loosely on other
modules.
To balance the load on each node, we have the following guidelines for modules
dispatching schemes.
1. Distribute Level I modules evenly to each node.
2. Distribute Level II modules in the descent order.
3. Distribute Level III modules with the corresponding modules in Level II.
For a router system, the task granularity cannot small enough to achieve a
fully balanced conﬁguration, because many resource-consuming tasks are composed by modules tightly-coupled. However, the guidelines can achieve the maximum EBL under this condition.

5

Model Evaluations

100

0.7

80
60
40
20

Lower Bound
Experimental

0.6
Balance Level

Error of the Decison Point Position

We simulate the 2-step extensible model under one PC. Each router node is
implemented as a process, and the modules are programmed as resourcesconsuming threads. The router system is abstracted as a typical router system containing the modules BGP, OSPF, route management, Transport layer
and management routines. The information dependencies are assigned as the
dynamic traﬃcs among the modules under the same manner as Table 1. The
results are shown in Fig. 4.
The experiment for extending decision points shows that the simulating results are almost the same as the decision path in Fig. 3, except that the simulating decision points come some earlier before the calculating. That’s an error
introduced by the dynamic randomness of the modules.
The experiment for the module dispatching conﬁguration shows that the system load is balanced to some extend. The balance level is not far beyond the
theoretical lower bound.

n=1

n=2

n=3

n=4

0.5
0.4
0.3
0.2
0.1

0

0
Load of the Whole System

Fig. 4. Experiment Results

2

3
4
Number of Nodes

40

6

K. Wu, J. Wu, and K. Xu

Conclusion

The extensible router is the next generation core router architecture. This paper
focuses on the extensibility of the control plane. The control plane structure
is deeply inspected. EER, EFR, and EBL are given to evaluate the extension
schemes. We present a two-steps extensible model in this paper. The ﬁrst step
is to decide how many nodes are needed for the extension and when to extend.
The next step contains a list of rules to ﬁnd out a modules conﬁguration scheme
so that the extension is balanced.

References
1. S.Karlin, L.Peterson. “VERA: An extensible router architecture”, Computer Networks, Vol. 38, Issue 3 (February 2002).
2. Lukas Ruf, Ralph Keller, Bernhard Plattner, “A Scalable High-performance Router
Platform Supporting Dynamic Service Extensibility On Network and Host Processors”, ICPS’04, 2004.
3. H.J.Chao, “Next Generation Routers”, Proceedings of the IEEE, vol.90, no.9, Sep.
2002, pp.1518-1558.
4. H.Jonathan Chao, Kung-li Deng, Zhigang Jing, “A Petabit Photonic Packet Switch
(P3 S)”, IEEE INFOCOMM’03, San Francisco, April 1-3, 2003.
5. Buyya, R. (ed.), “High Performance Cluster Computing: Architectures and Systems”, Volume 1 and 2, Prentice Hall PTR, NJ, USA, 1999.
6. E. Kohler, R. Morris, B. Chen, J. Jonnotti, M. F. Kaashoek, “The Click Modular
Router”, ACM Transactions on Computer Systems 18(3), Aug. 2000.
7. D Decasper, Z Dittia, G Parulkar, B Plattner, “Router Plugins: A Software Architecture for Next-Generation Routers” ACM Transactions on Networking, 2000.
8. M Handley, O Hodson, E Kohler, “XORP: An open platform for network research”,
Proceedings of HotNets-I Workshop, October, 2002.
9. F.Masetti, D.Zriny, etc, “Design and Implementation of a Multi-Terabit Optical
Burst/Packet Router Prototype”, OFC’2002, 2002.
10. Yang Chen, Chunming Qiao, Xiang Yu, “Optical Burst Switching(OBS): A New
Area in Optical Networking Research”, IEEE Network, 2004.
11. Avici Inc. ”Non-Stop Routing Technology”, white paper, 2002.
12. Gordon E. Moore, “Cramming More Components Onto Integrated Circuits”, Electronics, April 19, 1965.
13. Roberts, L.G., “Beyond Moore’s law: Internet growth trends”, Computer Vol.33,
Jan 2000.
14. K. G. Coﬀman and A. M. Odlyzko, “Internet growth: Is there a ‘Moores Law’ for
data traﬃc?”, in Handbook of Massive Data Sets. Norwell, MA: Kluwer, 2001

