Deriving the Dependence Structure
of Portfolio Credit Derivatives
Using Evolutionary Algorithms
Svenja Hager and Rainer Sch¨
obel
Department of Corporate Finance,
Faculty of Economics and Business Administration,
Eberhard-Karls-University of T¨
ubingen,
Mohlstraße 36, 72074 T¨
ubingen, Germany

Abstract. The correct modeling of default dependence is essential for
the valuation of portfolio credit derivatives. However, for the pricing of
synthetic CDOs a one-factor Gaussian copula model with constant and
equal pairwise correlations for all assets in the reference portfolio has
become the standard market model. If this model were a reﬂection of
market opinion there wouldn’t be the implied correlation smile that is
observed in the market. The purpose of this paper is to derive a correlation structure from observed CDO tranche spreads. The correlation
structure is chosen such that all tranche spreads of the traded CDO can
be reproduced. This implied correlation structure can then be used to
price oﬀ-market tranches with the same underlying as the traded CDO.
Using this approach we can signiﬁcantly reduce the risk to misprice oﬀmarket derivatives. Due to the complexity of the optimization problem
we apply Evolutionary Algorithms.

1

Introduction

Although it is still of interest to ﬁnd empirical sources of correlation data, people
increasingly use the market of synthetic collateralized debt obligations (CDOs)
to derive information about the correlation structure of the underlying of a CDO.
An observed CDO premium can be interpreted as an indicator of asset correlation. Therefore, more and more tranched products are quoted in terms of an
implied correlation parameter instead of the spread or the price of a tranche. The
implied correlation of a tranche is the uniform asset correlation that makes the
tranche spread computed by the standard market model equal to its observed
market spread. The standard market model is a Gaussian copula model that
uses only one single parameter to summarize all correlations among the various
borrowers’ default times. But obviously a ﬂat correlation structure is not able to
reﬂect the heterogeneity of the underlying asset correlations since the complex
relationship between the default times of diﬀerent assets can’t be expressed in
one single number. Obviously, the standard market model doesn’t reﬂect market opinion because the implied correlation smile emerges. Typically, mezzanine
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part IV, LNCS 3994, pp. 340–347, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Deriving the Dependence Structure of Portfolio Credit Derivatives

341

tranches trade at lower implied correlations than equity and senior tranches on
the same portfolio. This phenomenon is called implied correlation smile. Despite
the questionable explanatory power of the implied correlation parameter, the
implied correlation of a CDO tranche is often used to price oﬀ-market products
with the same underlying as the traded CDO.
Recently, more and more researchers examine diﬀerent approaches to explain
and model the correlation smile. Gregory and Laurent [2] and Andersen and
Sidenius [1] introduce dependence between recovery rates and defaults. In a
second extension Andersen and Sidenius introduce random factor loadings to
permit higher correlation in economic depressions. Both approaches are able to
model a smile. Hull and White [4] discuss the eﬀect of uncertain recoveries on
the speciﬁcation of the smile.
The correlation smile shows clearly that it is not appropriate to use the implied correlation of a traded CDO tranche to value non-standard tranches on the
same collateral pool. To address these shortcomings we take the implied correlation approach one step further and imply a correlation matrix that reproduces
all given tranche spreads of a CDO simultaneously. The dependence structure
is chosen such that the resulting tranche prices are concordant with observed
market prices or, respectively, such that the observed correlation smile is reproduced. Hager and Sch¨
obel [3] showed that heterogeneous correlation structures
are able to model a smile. After we derived a suitable asset correlation structure,
we can use this dependency to price oﬀ-market products with the same underlying. In this study we use Evolutionary Algorithms (EAs) to derive a dependence
structure from observed CDO tranche spreads. We show systematically why EAs
are suitable for this kind of application. So far, there is only a limited amount
of studies that connect EAs with derivative pricing. To our knowledge we are
the ﬁrst to apply EAs to the implied correlation problem and we are the ﬁrst
to derive a correlation matrix that is not necessarily ﬂat from a set of observed
tranche spreads.

2

The Optimization Problem

Suppose for the moment that we know the tranche spreads of an actively traded
CDO. We assume that the CDO consists of an equity tranche, a mezzanine
tranche and a senior tranche. Our goal is to derive a correlation matrix Σ that
replicates the given tranche spreads of the equity, the mezzanine and the senior
tranche simultaneously. Denote these target values as se , sm and ss . It is intuitively clear that in general there can be more than one correlation matrix that
obel [3] disleads to the respective tranche spreads se , sm and ss . Hager and Sch¨
cuss this subject. Note that there might also be combinations of tranche spreads
that can’t be reproduced by any correlation matrix. However, there is no way
to derive the correlation matrix Σ in closed form since even the portfolio loss
distribution can’t be computed in closed form for arbitrary correlation matrices.
To measure the quality of an obtained correlation matrix Σ, we ﬁrst compute the appendant equity, mezzanine and senior tranche spreads se (Σ), sm (Σ)

342

S. Hager and R. Sch¨
obel

and ss (Σ) and compare them with the given target values se , sm and ss . The
goal is to ﬁnd a correlation matrix such that the corresponding spreads agree.
The optimization problem discussed in this study is rather complex because the
search space is high dimensional and multi-modal and the objective function
is non-linear, non-diﬀerentiable and discontinuous. Note that for arbitrary correlation matrices often both se (Σ), sm (Σ), ss (Σ) and se , sm , ss are obtained
via Monte-Carlo simulation. In this case we have to deal with noise. Since our
optimization problem is characterized by these properties the number of applicable optimization techniques is restricted. Therefore, we choose EAs to address
this challenging problem. EAs are stochastic search methods that are inspired
by the Darwinian theory. They model the collective learning process within a
population. The starting population is generally initialized by random. In the
course of the generations the population is supposed to evolve toward successively better regions of the search space by randomized processes of selection,
recombination and mutation. The generations are searched until a suﬃciently
good solution is found or until a termination criterion is met. Similar to other
heuristic search methods, it is not guaranteed that EAs ﬁnd the global optimum,
but they generally ﬁnd good solutions in a reasonable amount of time.
Consider the function f (Σ) which measures the sum of the relative deviations
of the obtained tranche spreads from the target spreads:
f (Σ) =

|se (Σ) − se | |sm (Σ) − sm | |ss (Σ) − ss |
+
+
.
se
sm
ss

In our optimization problem low values of f (Σ) stand for high quality. In a
population based optimization strategy with λ individuals, we neglect the overall
performance of a certain generation and just consider the best individual in the
respective generation. The objective function registers the quality of the best
individual that has been generated so far. Let h(t) denote the objective function
at time t and let Σ k,τ denote the k th individual in generation τ , k ∈ {1, ..., λ},
τ ∈ {1, ..., t}. Consequently, the objective function, that has to be minimized, is
h(t) =

3

min

(f (Σ k,τ )) .

k∈{1,...,λ}, τ ∈{1,...,t}

Pricing of Synthetic CDOs

In this study we always assume that the intensity based approach describes
the default of one obligor and that the Gaussian copula model with an arbitrary
correlation matrix describes the dependency between the obligors’ default times.
In our optimization problem all model parameters are known except for the
pairwise linear correlations.
Following Laurent and Gregory [5] we consider a synthetic CDO, whose underlying consists of n reference assets, and assume that asset j has exposure n1
and default time τj . Nj (t) = 1{τj ≤t} denotes the default indicator process. The
n
cumulative portfolio loss at time t is therefore L(t) = n1 j=1 Nj (t). A CDO is

Deriving the Dependence Structure of Portfolio Credit Derivatives

343

a structured product that can be divided into various tranches. The cumulative
default of tranche (A, B), 0 ≤ A < B ≤ 1 is the non-decreasing function
ω(L(t)) = (L(t) − A)1[A,B] (L(t)) + (B − A)1]B,1] (L(t)) .
The tranche spread s(A,B) depends on the thresholds A and B. Let B(t) be the
discount factor for maturity t. T stands for the maturity of the CDO and let
t1 , ..., tI denote the regular payment dates for the CDO margins.
The default payments can be written as
⎡
⎤
E⎣

n

B(τj )Nj (T )(ω(L(τj )) − ω(L(τj− )))⎦ .

(1)

j=1

The margin payments are based on the outstanding nominal of the tranche. Since
defaults often take place between regular payment dates we have to distinguish
between the regular payments
I

B(ti )E [B − A − ω(L(ti ))]

s(A,B)

(2)

i=1

and the accrued payments. Accrued margins are paid for the time from the last
regular payment date before τj (this date is called tk(j)−1 ) until τj . The accrued
payments can be written as
⎡
⎤
s(A,B) E ⎣

n

B(τj )Nj (T )(τj − tk(j)−1 )(ω(L(τj )) − ω(L(τj− )))⎦ .

(3)

j=1

A synthetic CDO can be compared with a default swap transaction because the
CDO margin payments are exchanged with the default payments on the tranche.
The spread s(A,B) is derived by setting the margin payments in (2) and (3) and
the default payments in (1) equal.

4
4.1

Experimental Settings and Results
Description of the Genotype

Correlation matrices are symmetric positive semi-deﬁnite matrices whose matrix
elements are in [−1, 1]. The diagonal of a correlation matrix always consists
of ones. In the following, Σ = (Σij )i,j=1,...,n denotes the correlation matrix.
We use Σ as phenotype and a row vector ρ = (ρi )i=1,...,n ∈ [−1, 1]n as realvalued genotype. The pairwise linear correlation between asset i and asset j
can be computed as Σij = ρi ρj , i = j and Σij = 1, i = j. Using this socalled one-factor approach we can avoid Monte-Carlo simulations and provide
semi-explicit expressions for CDO tranche spreads (see Laurent and Gregory
[5]). Note that there are correlation matrices that can’t be represented by the
one-factor approach.

344

S. Hager and R. Sch¨
obel

The initial population consists of randomly generated vectors ρ ∈ [−1, 1]n .
An arbitrary vector ρ automatically leads to a symmetric, positive semi-deﬁnite
matrix with elements Σij = ρi ρj , i = j and Σij = 1, i = j.
In this study we compare several standard recombination and mutation
schemes. They are carried out according to custom.
Note that recombination and mutation can breed vector elements with |ρi | >
1. To make sure that the pairwise correlations are in [−1, 1], deﬁne a censored
vector ρ∗ = (ρ∗i )i=1,...,n with ρ∗i = min(max(ρi , −1), 1) that replaces ρ. We maintain this modiﬁed representation of the genotype.
We consider two cases of suitable termination conditions. Naturally, reaching
the optimum of the objective function with a certain precision should be used
as stopping condition. Therefore, we stop our algorithm as soon as the objective
function falls below a predeﬁned value. Furthermore, we terminate the EA when
the total number of function evaluations reaches a given limit.
4.2

Setup

To assess the potential of our approach, we work with simulated data. We compare the performance of a Monte-Carlo Search, a Hill-Climber ((1 + 1)-ES),
an Evolution Strategy with 4 parent and 20 oﬀspring individuals ((4, 20)-ES)
and a generational Genetic Algorithm with 40 individuals (GA(40)). We mutate individuals by adding realizations of normally distributed random variables
with expected value 0 and standard deviation 0.05 unless explicitly mentioned
otherwise. We apply global mutation operators, i.e. every vector element is subject to mutation. In case of the (4, 20)-ES we use elite selection and 1-point
crossover. Our focus is on the application of diﬀerent mutation operators. We
consider the 1/5-rule, global mutation without a strategy parameter and global
mutation with a strategy parameter that controls the mutation step size. The
mutation probability is 0.95, the crossover probability is 0.50. In case of the
GA(40) we focus on the selection and crossover parameters. We use proportional selection and tournament selection with a tournament group size of 10.
We use 1-point crossover and intermediate crossover and we use global mutation
without a strategy parameter. The crossover probability is 0.95, the mutation
probability is 0.50. In our study we just consider non-negative pairwise linear
correlations and therefore non-negative genotypes for the sake of simplicity. As
soon as the objective function falls below 5% we terminate the algorithm. At
most 2000 function evaluations are carried out.
We consider a CDO that consists of three tranches. The respective attachment
and detachment levels are 0%-5%, 5%-15%, 15%-100%. We assume that the
underlying is a homogeneous pool of 10 names with equal unit nominal. The
default intensity of each obligor is 1%, the recovery rate is 40%. The time to
maturity is 5 years. Our goal is to ﬁnd a correlation matrix that models an
observed compound correlation smile. The given implied compound correlations
are 0.24 for the equity tranche, 0.05 for the mezzanine tranche and 0.35 for the
senior tranche. At ﬁrst, we compute the spreads of the equity, the mezzanine
and the senior tranche using the respective implied correlations. We get 802.2

Deriving the Dependence Structure of Portfolio Credit Derivatives

345

bps, 204.4 bps and 9.0 bps. Then, we have to ﬁnd a correlation matrix that
reproduces all three tranche spreads simultaneously.
4.3

Performance

To make sure that we obtain reliable results, we repeat each implementation
25 times. We compute the mean value of the objective functions over the 25
runs, and we also consider the 10% and the 90% quantiles. Our focus is on the
decline of the objective function in the course of the generations. To compare the
performance of the diﬀerent algorithms consider ﬁgure 1. It shows the objective
functions for the diﬀerent implementations.
At ﬁrst we compare a Monte-Carlo search and a (1 + 1)-ES to analyze the
search space. Generally, the Monte-Carlo search is rather ineﬃcient especially in
high dimensional search spaces. Whenever the Monte-Carlo search performs as
well as a Hill-Climber or a population-based EA, the search space is probably
very ﬂat or very cragged or non-causal. However, in our case the Hill-Climbing
strategy clearly outperforms the random search. Often, (1 + 1)-strategies are
very eﬃcient in simple unimodal search spaces. But if a Hill-Climber starts up
the wrong hill, it has no chance to know that it has found an inferior optimal
solution. Therefore, Hill-Climbing strategies frequently can’t handle situations
in which there are several local optima.
Then we extend the (1 + 1)-ES to a multistart (1 + 1)-ES. We obtain several
diﬀerent solution matrices (see ﬁgure 2 for two examples). These matrices yield
tranche spreads that are suﬃciently close to 802.2 bps, 204.4 bps and 9.0 bps, i.e.
the sum of the percentual deviations is less than 5%. This leads to the conclusion
that the search space is multimodal. A multistart (1 + 1)-ES reduces the risk of
premature convergence.
We now compare diﬀerent implementations of a (4, 20)-ES and a GA(40). The
performance of the diﬀerent ES implementations is nearly identic, the conﬁdence
intervals widely overlap. There is only a very small diﬀerence, but the global mutation strategy with one strategy parameter outperforms the other approaches.
Then we compare the diﬀerent GA implementations. The performance of the
diﬀerent GA implementations diﬀers considerably. The GA with tournament selection combined with 1-point crossover leads to the best result. The GA with
proportional selection and 1-point crossover performs moderately. The GA with
proportional selection and intermediate crossover converges too fast to a dissatisfactory solution. This implementation yields the worst result. It is important
to know that by means of recombination the hyperbody formed by the parents
generally can’t be left by the oﬀspring individuals. Especially the intermediate
crossover technique causes volume reduction since it successively narrows the
search space, such that eventually the optimal solution can’t be attained any
more after a few generations.
We ﬁnally compare all algorithms on the basis of function evaluations needed
to obtain a suﬃciently good result. The (1 + 1)-ES performs slightly better than
the (4, 20)-ES implementations, there is only a very small diﬀerence. However,
the GA implementations cant keep up with the ES implementations.

346

S. Hager and R. Sch¨
obel
Monte−Carlo Search

(1+1)−ES

25

25
10% Quantile
Mean Value
90% Quantile

15

10

5

500

1000
Evaluations

1500

(4,20)−ES, Global Mutation, 1/5−Rule

1000
Evaluations

1500

2000

15

10

500

1000
Evaluations

1500

10% Quantile
Mean Value
90% Quantile

20

Best Individual

Best Individual

500

25

15

10

5

2000

500

1000
Evaluations

1500

2000

(4,20)−ES, Global Mutation Without Strategy Param.

GA(40), Proportional Selection, 1−Point Crossover

25

25
10% Quantile
Mean Value
90% Quantile

20
15

10

5

500

1000
Evaluations

1500

15

10

5

2000

GA(40), Proportional Selection, Interm. Crossover

500

1000
Evaluations

1500

2000

GA(40), Tournament Selection, 1−Point Crossover

25

25
10% Quantile
Mean Value
90% Quantile

20

10

500

1000
Evaluations

1500

2000

10% Quantile
Mean Value
90% Quantile

20

Best Individual

15

5

10% Quantile
Mean Value
90% Quantile

20

Best Individual

Best Individual

10

(4,20)−ES, Global Mutation With Strategy Parameter

10% Quantile
Mean Value
90% Quantile

20

Best Individual

15

5

2000

25

5

10% Quantile
Mean Value
90% Quantile

20

Best Individual

Best Individual

20

15

10

5

500

1000
Evaluations

Fig. 1. Performance of diﬀerent algorithms

1500

2000

Pairwise Linear Correlation

Pairwise Linear Correlation

Deriving the Dependence Structure of Portfolio Credit Derivatives

1

0.5

0
1

2

3

4

5

6

7

Assets

8

9
10

9 10
7 8
5 6
4
3
1 2
Assets

347

1

0.5

0
1

2

3

4

5

6

Assets

7

8

9
10

9 10
7 8
5 6
4
3
1 2
Assets

Fig. 2. Exemplary correlation matrices

5

Conclusion

In this study we used the concept of Evolutionary Algorithms to derive possible
dependence structures of the underlying of a traded CDO from observed tranche
spreads. These dependence structures can then be used to price oﬀ-market products with the same underlying as the CDO. Using this strategy we can reduce
the pricing discrepancy that comes up when the implied correlation approach is
applied. We presented several implementations of Evolutionary Algorithms and
discussed their performance.

References
1. Andersen, L., Sidenius, J.: Extensions to the Gaussian copula: Random recovery
and random factor loadings. The Journal of Credit Risk 1(1) (2004) 29-70
2. Gregory, J., Laurent, J.P.: In the core of correlation. Risk, October (2004) 87-91
3. Hager, S., Sch¨
obel R.: A note on the correlation smile. T¨
ubinger Diskussionsbeitrag
297 (2005)
4. Hull, J., White, A.: Valuation of a CDO and an nth to default CDS without MonteCarlo simulation. The Journal of Derivatives 12(2) (2004) 8-23
5. Laurent, J.P., Gregory, J.: Basket default swaps, CDOs and factor copulas. The
Journal of Risk 7(4) (2005) 103-122

