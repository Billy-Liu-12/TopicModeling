Crises Management in Multiagent Workflow Systems
Małgorzata Żabińska
Department of Computer Science, AGH University of Science and Technology,
al. Mickiewicza 30, 30-059 Kraków, Poland
zabinska@agh.edu.pl

Abstract. High degree of complexity of processes connected with compound
chains of operations requires search for new models and methods. Moreover,
one should take into account possibilities of presence of undesired situations,
called crises, when system functions in real conditions. The aim of the work is
to create a model of a system based on application of agents, which manages a
process of realization of chains of operations (either a "matter" to be processed
or production process) and its structure in such a way that it is possible to synchronise the model by real process. In the paper, a concept of multiagent system
solving this problem, concerning potential crisis situations, as well as prototype
realisation for a sample application have been shown.

1 Introduction
Methods of supporting processes of automatic management of chains of operations:
either production (assembly line) or related to flow and processing of documents
(document workflow), have been worked out for many years. Different practical solutions on the basis of workflow systems [5] have been proposed, but none of them
solves all related problems which may appear in process of business or production
enterprise management. Moreover, existing workflow solutions have disadvantages.
The first of them is that they are static: workflow systems use some fixed model of a
system, resulting from future system work conditions. Potential change of conditions
causes limitation of usefulness of a model, and thus – a system, as well. Therefore it
requires repetition of analysis and change of a model, which implies new outlays.
Especially essential and difficult problem is potential appearance of undesirable situations, the so-called "crisis situations", during realisation of operations chains. There
exist a group of crises, which can be considered at design of the system, especially
when applying modern concepts, e.g. agents' approach, i.e. creating a system of management on the basis of multiagent system. It seems that just a concept to merge agent
systems with workflow systems can enable removal of at least some of the abovementioned disadvantages, by assurance required system dynamics and flexibility
connected with real conditions of management process of operation realization. The
aim of the work is to create a model of the system based on application of agents. It
should manage both: a process of realization of chain of operations ("matters" to be
processed related to flow and processing of documents or similarly – production
process) as well as structure of the process, in such a way, that synchronization of the
model by a real process is possible.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 735 – 742, 2006.
© Springer-Verlag Berlin Heidelberg 2006

736

M. Żabińska

2 A Concept of Multiagent System for Management of Chain of
Operations by Example of Flow of Documents
The basic idea of workflow system is functioning as an assembly line with multiple
posts which act as narrowly specialised service points. These posts may supply the
same, similar or completely different services. In case of a system for management of
chains of operations on documents, input documents contain, among others, information on a procedure which they are to be subjected, i.e. a list of types of posts, which
they should visit for processing (performing appropriate operations on them). On the
basis of this information, documents are directed to proper service points.
In workflow systems based on application of agents, these agents support and coordinate processes making a workflow. They move within a system according to
defined principles. During performing operations, they may carry resources of the
system with themselves (e.g. data: documents or descriptions of procedures), reducing
at the same time the need to access common resources. Various types of agents related to different types of tasks in the system, are applied. Usually a single workflow
agent is responsible for control of a single process. Mobile Tasks Agents, which migrate to places where these tasks are performed, are singled out, as well as Personal
Agents, which make interface between agents and the part of the system for task realization. There are also such approaches, where more types of agents are present, that
are connected with their roles in the system as more detailed and individual assignment of tasks ([4]). Nevertheless in the existing approaches, potential crisis situations
related to real conditions of functioning of a system serving process of chains of operations, have not been considered.
The presented concept of multiagent system for management of process being a
chain of some operations (on documents or technological ones), takes into consideration crises and comprises essential details presented below. The main element of the
concept consists in representation of a structure of an enterprise as a graph [6]. Fundamental elements of the system are objects, which are subjected to processing in
production process or in process of document processing during performing some
"matter" – related to realization of some operations on them. These elements are represented by agents choosing optimal path in a graph according to a given criteria (i.e.
the best one in the defined sense: the cheapest, the most expensive, the quickest, etc.).
Nodes of the graph representing operations performed on these elements (agents) are
also managed by a system, which consists of agents of the appropriate type (performing these operations or collecting information and proposing changes in the
graph structure).
Agent of the first type (Task Agent or Document Agent) is a basic element of the
system and possesses its own description of operations (e.g. in the form of own
graph), which have to be performed on it. It has also a given strategy of choice (e.g.
the quickest, the cheapest, by the given date). Agent-element of the system pays for
each operation (by means of real transfer of currency, with counters or otherwise). It
makes the fundament for market decisions on further route. In case of a system for
service of documents, such an agent is created at the moment of introduction of a
document into the system and it migrates with it through appropriate posts in the
system. The agent's task is to choose a route of a document through these posts, and it

Crises Management in Multiagent Workflow Systems

737

is connected with the certain document until the end of its processing, i.e. until removal from the system.
Nodes of the graph, storing transferred means, make up market decisions concerning development (here also: creation) or reduction (also: liquidation) of connections.
Agents of the second type (Post Agent) connected with graph nodes are used for this
purpose and they negotiate as well, cooperation concerning realization of changes in
the graph. For a system of service of documents, the agent assigned to a graph node
(post of service) should realize the service in the node and make information about
the node available (service characteristics). The latter one makes a basis for choice of
a route (a node i.e. a post) by an agent of the first type (agent-element of the system).
Additionally, the other agent – of the third type (Information Agent) should collect
information on system functioning and propose changes in the structure of the system.
We can also anticipate an agent of the fourth type (Monitoring or Supervisor Agent),
which controls the work of the whole system and on the basis of information collected
from subordinate agents, decides on potential changes in the structure of the system
(maybe necessary because of presence of some crisis situation). Functions of agents
of the third and the fourth type can be merged in one agent or split between two of
them. In the concept of the system for service of operations chains (on the example of
processing of documents) taking into account potential crises described in the next
chapter, main types of above-mentioned agents have been considered, as well as existence of additional specialized agents. As for latter ones, there may be e.g. three
types of agents, related to division of their auxiliary roles in the system: New-Tasks
Agent, Revising-Tasks Agent, Waiting-Tasks Agent. Two former ones perform roles
of Personal Agent, having possibility of communication with the user of the system.
A model of communication in such a system, i.e. between the user and agents, as well
as agents themselves, is shown in the diagram (Fig.1.).

New -Tasks
Agent
1: new
task
creation

user
2: Get
data
on tasks

1.10: update agent
preferences

1.1: creation
of a new
agent

Post
Agent

1.8: performing
operation
1.4: join
queue

Document
Agent

Waiting -Tasks
Agent

1.9: declare
state
changes

1.7: direct
to post

2.3: get data on tasks
2.4: return data on tasks

1.3: return data
on agents 1.5: get data
on agents

1.6: return
data on
agents

1.2: get data on agents

Revising -Tasks
Agent

2.1: get data on agents
2.2: return data on agents

Suprvisor
Agent

Fig. 1. A concept of communication in the proposed multiagent system

738

M. Żabińska

3 Crisis Situations and Their Service in the Proposed Multiagent
System
During real work of a system for management of process of operations chains realization, a number of undesirable situations may occur. Most of them can be considered
during creation of a model of a system, especially when designing a solution as a
multiagent system. A short description of the most typical crisis situations, with proposals of solutions in the system based on agent approach is presented below. Selected UML sequence diagrams show activities to be performed by the system to
solve chosen crisis situations. Unfortunately, some crises require intervention of a
human-being (e.g. system administrator), but they are fortunately less probable.
A post (Post Agent) is overloaded – a queue is too long (1). Such a situation may
often occur. The simplest solution is to assign the other agent, which either takes over
all tasks (in case of total inoperability of a post), or only some part of them, such as to
unload a congestion (to shorten a queue). Supervisor Agent is responsible for assignment of a new Post Agent to support the post. However the former one should be
informed about the situation by Information Agent. A model of solution of crisis
situation (1): overloaded post (a queue is too long) is shown in Fig. 2.
A post (Post Agent) idle – null queue of tasks (2). This crisis situation is recognised
on getting data about agents (Post Agents) by Supervisor Agent. Thus each time when
some agent (Document Agent) wants to know something about certain post or other
agents, Supervisor Agent finds out idle state of a post and may remove it from the
structure. In case of Post Agent which has been idle for a long time, it is assigned by
Supervisor Agent as the first one to be used for service of crisis situation (1): too long
queue (overloaded post). When a great number of unused Post Agents appears, it is
possible to remove some of them and create one agent responsible for all tasks, which
have belonged to liquidated agents – predecessors.
Document
Agent

Waiting-Tasks
Agent

Suprvisor
Agent

Post
Agent

get data on agents
return data on agents
declare to queue
get data on agents

direct to post

return data on
agents

perform operation

get data on agents
create new post
direct to post

return data on
agents

Fig. 2. Sequence diagram for service of crisis situation (1): overloaded post

Crises Management in Multiagent Workflow Systems

739

Document (Document Agent) is lost (3). This case is difficult to be modelled, because the moment of the loss (or its recognition) is usually not known. Supervisor
Agent should check each given interval of time, whether state of agents is appropriate
and thus it may recognise the loss of a document. Each document is accompanied by
Document Agent, which sends message to Information Agent when going through a
post. When Document Agent is lost, Information Agent should have possibility of
reconstruction of a document route and locating the point of loss. It should also discover whether a document (Document Agent) has been destroyed (killed), or whether
trial to take over the data carried by the latter one has occurred (and inform Supervisor Agent about it). In the worst case, i.e. when reconstruction of the already processed data is impossible, such a loss implies direction of a document to repetition of
processing. To serve such a crisis, one can plan auxiliary agents to convoy Document
Agent (especially in environments of high level of threat). They take over the data at
threat, or when it is not possible, they direct a task (document) to process it again
(with Supervisor Agent, making the decision, as an intermediary).
Loss of Information Agent (4). Such a crisis situation has to be discovered by Supervisor Agent, which is responsible for creation of a new Information Agent. The
latter one takes over all tasks of its predecessor. Sequence diagram modelling this
crisis situation is shown in Fig. 3.
User
RevisingTasks
Agent

Supervisor
Agent

get data on tasks
get data on agents

create new
agent

Information
Agent

return data on agents
get data

return data

return data on tasks

Fig. 3. Service of crisis situation (4): loss of Information Agent

Loss of Supervisor Agent (5). Such a type of a crisis makes continuation of system
work impossible, whereas Supervisor Agent does not exist any more. Thus there is no
agent monitoring the system as a whole, i.e. flow of information from Information
Agent, collecting data from Posts Agents about posts' load, as well as data flow between Posts Agents. The solution is to create a new Supervisor Agent. It requires
transferring a message (maybe coming from Information Agent) about crisis situation

740

M. Żabińska

and intervention of a human-being (e.g. System Administrator) to cause creation of a
new Supervisor Agent (what may require restart of the system or at least its part).

4 Realization of Multiagent System for Management of
Operations Chain by Example of Flow of Documents
Let us consider operations chain, e.g. some matter to be settled that is connected with
flow of documents between posts, where documents are being processed. A proposal of
realization (prototype version) of such a system with the use of agents [3] will be presented below with assumptions concerning a concept of multiagent system application:
documents for processing are generated by the system; user gives a number of documents to be generated and intervals of time; user defines an arrangement of posts (a
graph); posts may be of different type and have different characteristics within the type;
there are characteristics of the post, viz. type, location, cost of the way to other posts,
price, time and quality of service; the final (proposed ) structure of the system (a graph)
should be stored; possibility of crises shown in the previous chapter is considered.
The system comprises the following basic types of agents, shown in brief in a description of a concept: Document Agent – mobile agent, which accompanies a document during its "life" in the system; it collects information about available posts
(which services they have, of what quality, for what price, what the waiting time for
realisation of service is, price of the way between a document and the post), and it
chooses posts for document service, as well; each document has its own agent. Post
Agent – agent connected with a graph node; it realizes its service and makes information on its post available – what it does, with what quality, for how much and how
long, what estimated waiting time for service is (the queue of documents for the post);
each post has its own agent. Information Agent – the global agent of the system,
which collects information from Posts Agents, generates reports on load of single
posts, and proposes potential changes of the structure (i.e. the number of posts and
their arrangement). Supervisor Agent – supervises the whole work of the system,
communicates with Information Agent, and undertakes decisions on introduction of
proposed changes of system structure (based on data delivered by the latter one).
The main task of Document Agent is to choose a sequence of posts to process the
document, which the agent is connected with. Documents are introduced into the
system and then they flow between posts realizing subsequent tasks on its way. Each
document has its individual route, i.e. ordered list of nodes (appropriate processing
posts), through which it should go and a priority which indicates how quickly it
should finish its way through all posts (the higher priority, the more important the
document is). Document Agent chooses the subsequent post (node of the graph)
among posts performing certain service, which is planned for a document in the next
step of processing procedure of the document.
For this purpose each post i.e. the node of the graph (or Post Agent) makes the following information available: type – a sort of service (integer number from 0 to 100);
price – price of service (integer number from 0 to 100); time of service – measured in
simulation steps (or virtual units of simulation time, up to 100); quality – service
quality (integer number from 0 to 100); length of the current queue – number of tasks
waiting for service (here: documents).

Crises Management in Multiagent Workflow Systems

741

The next post is chosen by comparison of characteristics of considered posts. The
following criteria are used: price, time length of a queue, cost of the route and quality
– taking into account all posts of a given type. The value "result" is calculated for
each post, which is considered:
result = quality + price + distance + (priority* (time* (queue +1)))
If two or more posts have the same value, then only the period of time to the end of
service of document is taken into account: time * (queue+1). If it is not enough, the
following values: distance (route or cost, quality and price) are compared. Finally if
posts are identical (as a result of comparison), then choice of the post is performed by
drawing a post from the poll of posts left after the previous step. Documents leave the
system after their service is finished at the last post from the list.
The main task of Information Agent is observation of system work, evaluation of
structure of processing system and proposing changes of structure of workflow system. All the time during work of the system (or simulation), Information Agent traces
realization of operations on documents – collects information from Post Agents and
generates reports. They contain data on the current state of posts: id of agent, type,
price, quality, length of queue, number of documents already having been served
(from the beginning of simulation). On the basis of this information, changes of the
structure i.e. removal or addition of posts, are made by Supervisor Agent.
For this purpose the following calculations are performed: real time of work is calculated for each Post Agent, as product of service time of the document and the number of served documents, divided by the total time of simulation (program run):
work time = (service time * number of served)/simulation time
The result is the value from range [0, 1]. On this basis, the number of posts of a
given type, which should compose the system, is calculated as it follows:
number of posts = sup(worktime1 + worktime2 +...+ worktimeN)
where N: number of posts of a given type (given group).
Procedure of change of the number of posts is the following: if the calculated number of posts is less than the current number of posts of a given type, posts are removed
in order opposite to calculated value of time of post work, until the number of posts of
this type (a new value) is reached. Next, groups of posts which have not decreased
their cardinality and mean lengths of their queues were greater than zero, are checked.
Then it is necessary to add a post or posts to a group. To do this, data concerning
queues to posts, collected by Information Agent during work of the system, is used.
Behaviour of a queue is described by some value – a queue indicator, calculated as
quotient of number of documents in the queue (a current length of the queue) and
theoretical number of so-far served documents (i.e. number of documents served from
the beginning of the run, on the assumption that the post has been working all the
time). The theoretical number of served documents is calculated as quotient of the
time from the beginning of simulation and the time of document service by this post.
Therefore queue indicator is defined as it follows:
queue indicator = length of the queue * service time / simulation time

742

M. Żabińska

These queues’ indicators are collected until the last document is introduced into the
system. Next, their average value is calculated, summed up within the group and
rounded to the integer value. It makes the number of posts to add to a group of posts
of a given type. It is assumed that parameters of added posts are as parameters of the
post, the most loaded in the group. The time of arrival of the last document to a group
is the time of finishing simulation when there are no queues; thus when a satisfactory
number of posts to serve all documents exist.

5 Conclusion
A concept of multiagent system for management of chains of operations (technological ones or performed on documents), which takes into account undesirable situations
(called crises) has been presented in the paper.
Roles of agents connected with assignment of tasks in multiagent workflow system
have been described. An outline of realization of a prototype multiagent system for
management of documents flow and crisis situations, which may appear in real process composed of chain of documents processing operations has been shown.
The prototype system has been realized according to incremental model of software
development. The current – first increment is related to creation of basic functions,
comprising main agents and principal parts of the system. It should be enriched with the
following elements: additional functions connected with auxiliary agents, service of rare
crises, elements of optimization, and elements related to system security.
It seems that multiagent system of the proposed type can make processes of analysis and evaluation of existing workflow systems – effective, as well as the process of
designing such systems – more efficient, by considering real working conditions, i.e.
threat of potential crises.

References
1. Ambroszkiewicz, S., Cetnarowicz, K., Kozlak, J., Nowak, T., Penczek, W.: Modelling
Agent Organizations. In: Klopotek, M., Michalewicz, M., Wierzchon, S. T. (eds.): Proceedings of the Conf. Intelligent Information System. Advances in Soft Computing, Springer
Verlag Berlin (2000) 135-144
2. Cetnarowicz, K., Kozlak, J.: Multi-Agent System for Decentralized Computer Network
Management. Management and Control of Production and Logistics, IFIP, IFAC, IEEE
Conference, ENSIEG, LAG Grenoble, France (2000)
3. Cetnarowicz, K., Żabińska M.: Management of operations realization process based on multiagent system, (in Polish), In: Proc. of the VIII Int. Conf. Management of Business Enterprise. Theory and Practice, AGH, Kraków (2005)
4. Stormer, H. and Knorr, K.: AWA – eine Architektur eines agentbasierten WorkflowSystems. In: Tagungsband 5. Internationale Tagung Wirtschaftsinformatik (WI 2001),
Augsburg, Germany, (2001) 147–160
5. Workflow Management Coalition. Terminology – Glossary. Document Number WFMCTC-1011, www.wfmc.org
6. Żabińska M., Cetnarowicz, K.: Multi-Agent Simulation Model for Control of Transport System, In: Štefan, J., (ed): Proceedings of 37 Int. Conf. MOSIS'03, ISBN 80-85988-86-0,
MARQ, Ostrava, Czech Republic, (2003) 327-334

