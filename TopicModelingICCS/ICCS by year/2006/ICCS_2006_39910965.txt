A Home-Network Service System Based on
User’s Situation Information in Ubiquitous
Environment
Yongyun Cho, Joohyun Han, Jaeyoung Choi, and Chae-Woo Yoo
School of Computing, Soongsil University,
1-1 Sangdo-dong, Dongjak-gu, Seoul 156–743, Korea
{yycho, jhhan}@ss.ssu.ac.kr,
{choi, cwyoo}@comp.ssu.ac.kr

Abstract. In this paper, we propose a home-network service system
that can support home services appropriate to user’s situation information in ubiquitous computing environments. The suggested system uses
a uWDL workﬂow service scenario describing a user’s situation information as service execution constraints to support context-aware home services. The suggested system consists of a context handler and a context
mapper. The context handler represents contexts described in a uWDL
document as a context subtree, which expresses not only context data
but also relation information among services into the ﬁelds of its node.
The context mapper uses a context comparison algorithm for context
comparison between context subtrees and user’s situation information.
The algorithm can distinguish contexts that have the same values but
diﬀerent types with user’s contexts and selects a context that has all
together values and types entirely equal to those of user’s contexts.

1

Introduction

For a smart home, execution of all the home services must be dependent on
user’s situation contexts, which are dynamically generated in ubiquitous environments [1]. uWDL (ubiquitous Workﬂow Deﬁnition Language) is a workﬂow
language based on a structural context model which expresses context information as transition constraints of workﬂow services [2]. Through a uWDL workﬂow
service scenario, an user can describe what services must be executed according to situation information. For execution of context-aware services, we need a
method that can recognize contexts in a scenario and select a service correspondent with situation information.
In this paper, we present a uWDL-based home-network system that represents
contexts described in a uWDL workﬂow service scenario document as rule-based
context subtrees, and derives service transition according to user’s state information in ubiquitous environments.
This work was supported by Korea Research Foundation Grant (KRF-2004-005D00172).
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 965–968, 2006.
c Springer-Verlag Berlin Heidelberg 2006

966

2

Y. Cho et al.

Related Work

Context in a ubiquitous environment means any information that can be used to
characterize the situation of an entity [3]. In ubiquitous environments, context
can be expressed with a RDF-based triplet form [2]. RDF(Resource Description
Framework) [4] is a language to describe resource’s meta-data and it expresses
a resource as a triplet of {subject, predicate, objective}. The existing workﬂow
languages, such as BPEL4WS [5], WSFL [6], and XLANG [7], do not include any
element to describe context information in ubiquitous computing environments
as transition conditions of services.
uWDL [2] can describe context information as transition conditions of services
through the <context> element consisting of the knowledge-based triplet - subject, verb, and object. The uWDL reﬂects the advantages of current workﬂow
languages such as BPEL4WS, WSFL, and XLANG, and also contains rule-based
expressions to interface with the DAML+OIL ontology language [8].

3
3.1

A uWDL-Based Home-Network Service System
A System Architecture

Figure 1 shows the architecture of the suggested uWDL scenario-based smarthome system, which is aware of user’s situation information in ubiquitous computing environments.

Fig. 1. A smart-home system’s architecture based in a uWDL workﬂow service
scenario

A Home-Network Service System Based on User’s Situation Information

967

As shown in Figure 1, the suggested system supports context-aware home services using a uWDL service scenario, in which an user’s situation information is
described as a services execution condition. A uWDL context mapper in Figure 1
uses a context subtree for context comparison with user’s situation information.
Through the context comparison, the uWDL context mapper searches home service networks for a home service appropriate to a user’s situation information
generated from ubiquitous computing environments. If it ﬁnds a service corresponding to a speciﬁc user’s situation information, the uWDL context mapper
calls the service to oﬀer context-aware home service to users.
3.2

A uWDL Context Handler and a uWDL Context Mapper

As a result of a parsing, the uWDL handler makes a DIAST (Document Instance
Abstract Syntax Tree) that represents the structure information of a uWDL
document as a tree data structure. At this time, a context described as RDFbased triplet entity in a uWDL scenario is constructed as a subtree of the parse
tree. Contexts that the context mapper uses for the comparison are described
in a triplet based on RDF. Context information from the sensor network can
be embodied as a triplet consisting of subject, verb and object according to the
structural context model based in RDF. The context mapper extracts context
types and values of the entity objectiﬁed from sensors. It then compares the
context types and values of the objectiﬁed entity with those of the DIAST’s
subtree elements related to the entity. In the comparison, if the context types
and values in the entity coincide with the counterpart in the DIAST’s subtree,
the context mapper drives the service workﬂow. For that, we deﬁne a context
embodied with a structural context model from the sensor network as OC and
a context described in a uWDL scenario as UC. OC means a context objectiﬁed
with the structural context model, and UC means a context described in a uWDL
scenario. Also, OCS and UCS that mean each set of OC and UC.

4

Experiments and Results

For an experiment, we have developed an uWDL scenario for home-network
services through PDA. The example scenario is as follows: John has a plan to
go back his home at 8:00 PM, take a warm bath, and then watch a recorded
TV program, which he wants to see after a bath. When John arrives to his
apartment, an RFID sensor above the apartment door transmits John’s basic
context information (such as name, notebook’s IP address) to the uWDL home
server. If the conditions, such as user location, situation, and current time, are
satisﬁed with contexts described in the uWDL workﬂow service scenario, then
the server will prepare warm water. When he sits the sofa in the living room after
he ﬁnishes a bath, the service engine will turn on the power of TV in the living
room and play the TV program that was recorded already. For the experiment,
we use a Pentium IV 3.0 GHZ computer with 1GB memory based in Windows
XP OS as a uWDL home service engine and a PDA with 512MB memory based
in Windows CE for the experiment. Figure 2 shows the result.

968

Y. Cho et al.

Fig. 2. A result of hit-time of OC and UC according to hit-position and conditions of
OC’s s, v, and o

5

Conclusion

In this paper, we presented a home-network service system that can recognize a
uWDL workﬂow service scenario document, and can drive home services according to a user’s situation information. Through experiments, we deﬁned contexts
described in a uWDL scenario as OC and contexts objectiﬁed from ubiquitous
computing environments. We showed an experiment in which the uWDL mapper compared contexts of UCSs and OCSs through the context comparison algorithm, and measured hit-times and service transition accuracy to verify the
eﬃciency of the algorithm. Through the results, we found that the hit-times were
reasonable in spite of increment in the OCs amounts. Therefore, this uWDL context comparator will contribute greatly to the development of the context-aware
application programs in ubiquitous computing environments.

References
1. W. Keith Edwards and Rebecca E. Grinter, Ubicomp 2001, LNCS 2201, pp. 256-272,
2001.
2. Joohyun Han, Yongyun Cho, Jaeyoung Choi: Context-Aware Workﬂow Language
based on Web Services for Ubiquitous Computing, ICCSA 2005, LNCS 3481, pp.
1008-1017, (2005)
3. Anind k. Dey: Understanding and Using Context, Personal and Ubiquitous Computing, Vol 5, Issue 1, pp.69-78 (2001)
4. W3C: RDF/XML Syntax Speciﬁcation, W3C Recommendation (2004)
5. Tony Andrews, Francisco Curbera, Yaron Goland: Business Process Execution Language for Web Services, BEA Systems, Microsoft Corp., IBM Corp., Version 1.1 (2003)
6. Frank Leymann: Web Services Flow Language (WSFL 1.0). IBM (2001)
7. Satish Thatte: XLANG Web Services for Business Process Design, Microsoft Corp.
(2001)
8. R. Scott Cost, Tim Finin: ITtalks: A Case Study in the Semantic Web and
DAML+OIL, University of Maryland, Baltimore County, IEEE (2002) 1094-7167

