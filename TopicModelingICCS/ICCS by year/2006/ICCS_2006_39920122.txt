A Virtual Test Facility for Simulating
Detonation-Induced Fracture of
Thin Flexible Shells
Ralf Deiterding, Fehmi Cirak, Sean P. Mauch, and Daniel I. Meiron
California Institute of Technology, MC 158-79, Pasadena CA 91125, USA
{ralf, cirak, sean, dim}@cacr.caltech.edu
http://www.cacr.caltech.edu/asc

Abstract. The ﬂuid-structure interaction simulation of detonation- and
shock-wave-loaded fracturing thin-walled structures requires numerical
methods that can cope with large deformations as well as topology
changes. We present a robust level-set-based approach that integrates
a Lagrangian thin shell ﬁnite element solver with fracture and fragmentation capabilities with an Eulerian Cartesian detonation solver with
optional dynamic mesh adaptation. As an application example, the rupture of a thin aluminum tube due to the passage of an ethylene-oxygen
detonation wave is presented.

1

Introduction

The Center for Simulation of Dynamic Response of Materials at the California
Institute of Technology has developed a virtual test facility (VTF) for studying
the three-dimensional dynamic response of solid materials subjected to strong
shock and detonation waves propagating in ﬂuids [7]. The ﬂuid ﬂow is simulated
with a Cartesian ﬁnite volume upwind method in Eulerian coordinates that considers the solid as a moving embedded body by utilizing a ghost-ﬂuid approach
(see Sec. 2). In the present paper, the fracturing thin-walled solid is modeled as a
Kirchhoﬀ-Love type thin-shell in Lagrangian coordinates. The ﬁnite element discretization of the underlying energy functional is accomplished with subdivision
ﬁnite elements (see Sec. 3).
The evolving shell geometry is implicitly represented on the Cartesian ﬂuid
mesh by a scalar level set function, which stores the unsigned distance to the solid
surface. As the solid deforms, the level set function is updated on-the-ﬂy by a
highly eﬃcient auxiliary algorithm based on geometric characteristic reconstruction and scan conversion (see Sec. 4). In the VTF, we apply a loosely coupled
temporal splitting method for updating the boundary’s position and velocity between time steps. The ﬂuid-structure coupling approach and its implementation
on distributed memory computing platforms are brieﬂy described in Sec. 5. As
a large-scale three-dimensional computational example, we present in Sec. 6 the
simulation of the rupture of a thin aluminum tube due to an internal detonation
wave arising from the combustion of an ethylene-oxygen mixture. Simulations of
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 122–130, 2006.
c Springer-Verlag Berlin Heidelberg 2006

A VTF for Simulating Detonation-Induced Fracture of Thin Flexible Shells

123

this type will be compared directly to available experimental results [1] and will
serve as a validation case for the VTF.

2

Eulerian Detonation Solver

The governing equations of detonation wave propagation in gases are the inviscid Euler equations [9]. Throughout this paper, we consider only the simpliﬁed
case of a single exothermic chemical reaction A −→ B with a progress variable
Y corresponding to the mass fraction ratio between the partial density of the
reactant A and the total density ρ, i.e. Y = ρA /ρ. The governing equations of
the hydrodynamic model are
∇ · (ρu)
=0,
∂t ρ +
∂t (ρE) + ∇ · ((ρE + p)u) = 0 ,

∂t (ρu) + ∇ · (ρu ⊗ u) + ∇p = 0 ,
∂t (Y ρ) +
∇ · (Y ρu)
=ψ.

(1)

Herein, u is the velocity vector and E the speciﬁc total energy. The hydrostatic
pressure p is given by p = (γ −1)(ρE − 12 ρuT u−ρY q) with γ denoting the ratio of
speciﬁc heats and q the heat release due to the chemical reaction per unit mass.
A one-step reaction would typically be modeled with an Arrhenius law such as
ψ = −kY ρ exp(−EA ρ/p) [9], but in the speciﬁc case considered here, we utilize
the constant volume burn model suggested by Mader [10]. This model neglects
the detailed chemical depletion, and therefore the internal detonation structure,
but ensures the right propagation speed and the correct state in chemical equilibrium at all grid resolutions. The model is intended to be applied together
with the fractional step method that numerically decouples chemical reaction
and hydrodynamic transport. First, the homogeneous system (1) is advanced at
a full time step, then the reactant density ρA , pressure p, and total energy E
are modiﬁed locally in each cell; the total density ρ and the velocity vector u
remain unaltered. The algorithm for the detonation model reads:
V := ρ−1 , V0 := ρ−1
0 , VCJ := ρCJ , Y := 1 − (V − V0 )/(VCJ − V0 )
if 0 ≤ Y ≤ 1 and Y > 10−8
if Y < Y and Y < 0.9 then Y := 0
if Y < 0.99 then p := (1 − Y )pCJ else p := p
ρA := Y ρ, E := p /(ρ(γ − 1)) + Y q0 + 12 uT u
In the latter, the index 0 indicates the unreacted state (assumed to be constant),
while CJ refers to the equilibrium values that can be calculated in advance
following Chapman-Jouguet theory [9, 6] for a given detonation velocity.
For the shock-capturing ﬁnite volume upwind scheme, we utilize a straightforward extension of the ﬂux-vector splitting method by Van Leer (cf. [6]). Secondorder accuracy in smooth solution regions is achieved with the MUSCL-Hancock
variable extrapolation technique [12]. Geometrically complex moving boundaries
are incorporated in the upwind scheme by using some of the ﬁnite volume cells
as ghost cells for enforcing immersed moving wall boundary conditions [8]. The
boundary geometry is mapped onto the Cartesian mesh by employing a scalar
level set function φ that stores the unsigned distance to the boundary surface

124

R. Deiterding et al.

and allows the eﬃcient evaluation of the boundary outer normal in every mesh
point as n = −∇φ/|∇φ|. Note that for topologically closed boundary surfaces
the signed distance may be used instead of the unsigned distance [5]. A cell is
considered to be a valid ﬂuid cell, if the distance at the cell midpoint satisﬁes
the condition φ > h/2 and as an exterior ghost cell otherwise. The mesh received from the shell solver corresponds to a two-dimensional manifold surface
mesh (cf. Sec. 3) and the utilization of condition φ > h/2 is a straightforward,
unambiguous solution to achieve the mandatory thickening of this mesh by the
shell thickness h. The contour line φ = h/2 eﬀectively represents the embedded
boundary for the ﬂuid solver (depicted as dotted line around shell elements in
Fig. 1). The hydrodynamic load on each shell element is evaluated as the diﬀerence between the approximated pressure values at φ = h/2 in the positive and
negative direction of each element’s normal, i.e. pF := p+ − p− .
For the governing equations (1), the boundary condition at a rigid wall moving with velocity w is u · n = w · n. Enforcing the latter
with ghost cells, in which the discrete values are
+
located at the cell centers, requires the mirrorp
ing of the primitive values ρ, u, p, ρA across
the embedded boundary. The normal velocity
in the ghost cells is set to (2w · n − u · n)n,
pwhile the mirrored tangential velocity remains
unmodiﬁed. Mirrored values are constructed by
calculating spatially interpolated values in the
point x
˜ = x + 2φn from neighboring interior
cells. We employ a dimension-wise linear interpolation for this operation, but it has to be em- Fig. 1. Ghost cells (shaded gray)
around shell elements and conphasized that directly near the boundary the
struction of mirrored values
number of interpolants needs to be decreased
to ensure the monotonicity of the numerical solution. This property is essential in simulating hyperbolic problems with discontinuities, like detonation waves. Figure 1 also highlights the necessary reduction
of the interpolation stencil for some exemplary cases. The interpolation locations
are indicated by the origins of the arrows normal to the contour line that deﬁnes
the embedded boundary. After the application of the numerical scheme, cells
that have been used to impose internal boundary conditions are set to the entire
state vector of the nearest cell in the ﬂuid interior. This operation ensures proper
values in case such a cell becomes a regular interior cell in the next step due to
boundary movement. The consideration of w in the ghost cells guarantees that
the embedded boundary propagates at most one cell in every time step.
In order to supply a ﬁne local temporal and spatial resolution eﬃciently, the
ﬁnite volume scheme described above has been incorporated into a block-oriented
hierarchical mesh adaptation method. The numerical scheme is then applied as
a single-grid routine in a loop over all subgrids (see [6] or [7] for details).

A VTF for Simulating Detonation-Induced Fracture of Thin Flexible Shells

3

125

Lagrangian Thin-Shell Solver

The Kirchhoﬀ-Love type thin-shell model applied in this study takes the membrane as well as bending response of the surface into account, and has been
discretized with subdivision ﬁnite elements [2, 3]. The underlying kinematic assumptions allow for arbitrarily large displacements as well as rotations of the
shell. Fracture initiation and propagation is considered as a progressive failure
phenomenon in which the separation of the crack ﬂanks is resisted by cohesive
tractions. The relationship between the crack-opening displacements and the
tractions is given by a cohesive model. Cohesive interface elements are inserted at
inter-element edges and constrain the opening of the crack ﬂanks to the deformation of the shell middle surface and its normal. This approach allows for fracture
in an in-plane or tearing mode, a shearing mode, or a “bending of hinge” mode.
To kinematically describe a fractured thin-shell as sketched in Fig. 2, we
consider a shell of uniform thickness h occupying an undeformed conﬁguration V .
The position vector ϕ of a material point on the
undeformed shell body is assumed to be
ϕ = x + θ3 n

(2)

with −h/2 ≤ θ3 ≤ h/2. The position vector of the shell middle surface is denoted by
x and its out-of-surface unit normal by n. In
other words, the shell middle surface represents
a two-dimensional manifold in IR3 . The deforFig. 2. Fractured shell body:
mation mapping ϕ maps the shell body into the Opposite crack ﬂanks and corredeformed conﬁguration V and is discontinuous sponding normals.
across the crack
[[ϕ]] = ϕ+ − ϕ− = [[x]] + θ3 [[n]]

(3)

where the superscripts + and − refer to the opposing crack ﬂanks. Further,
the ﬁrst term describes the discontinuity of the deformation of the middle shell
surface, and the second term the discontinuity in the shell out-of-surface normal.
The discontinuities in the deformations can also be interpreted as the opening
displacement of the crack.
A standard semi-inverse approach is followed for obtaining the shell equilibrium equations in weak from. To this end, the assumed reduced kinematic
equations for the shell body (Equations (2) and (3)) are introduced into the
conventional virtual work expression for the three-dimensional body. As previously mentioned, we consider fracture as a gradual separation phenomenon,
resisted by cohesive tractions. Consequently, the internal virtual work expression contains the virtual work of the cohesive interface (δΠC,int ) in addition to
the virtual work of the bulk material (δΠS,int )
δΠS,int + δΠC,int − δΠext = 0

(4)

126

R. Deiterding et al.

with
h/2

h/2

P : δF μ dθ3 dΩ ,

δΠS,int =
Ω

−h/2

δΠC,int =
ΓC

−h/2

T · [[ϕ]] μ dθ3 dΓ C

where P is the ﬁrst Piola-Kirchhoﬀ stress tensor, T the related traction vector at
the cohesive surface, and F the deformation gradient. The virtual work expression for the bulk material is integrated over the undeformed shell middle surface
Ω and for the cohesive interface over the crack path Γ C . The scalar factor μ
accounts for the curvature of the shell in the volume computation [3].
Next, we brieﬂy outline the discretization of the governing equation (4). A detailed presentation of the used subdivision ﬁnite element discretization technique
can be found in [2] and [3]. In this approach, the reference (x) and deformed (x)
shell surfaces are approximated using smooth subdivision surfaces belonging to
the Sobolev space H2 with square-integrable curvatures. The subdivision interpolation within one element is accomplished with shape functions, which have
support on the element as well as on the one-ring of neighboring elements. The
overlapping local subdivision interpolants, each deﬁned over one patch, together
lead to a global interpolant with square-integrable curvatures. In the presence of
fracture, the smoothness and/or continuity of the interpolation has to be relaxed
and the subdivision interpolant needs to be modiﬁed (see [4] for details).
Once fracture nucleates along an element edge, the element patches on the
left and right side of the cracked edge interact only through cohesive tractions.
The cohesive tractions are self-balanced internal forces derived from a cohesive
fracture model [4]. In this model, the opening displacement [[ϕ]] plays the role of
a deformation measure while the traction T is the conjugate stress measure.
Finally, the inelastic behavior of the bulk material, i.e. the relation between
P and F , is described with a conventional J2 plasticity model with isotropic
power-law hardening. The rate-dependent behavior is described with a power
viscosity law and constant rate sensitivity.

4

Eﬃcient Level Set Evaluation

In Sec. 2, we have sketched the concept of employing a distance function to
represent a complex embedded boundary on a Cartesian mesh. While distance
functions are easily prescribed for single elementary geometric objects, their evaluation can be cumbersome for complex shapes. In coupled Eulerian-Lagrangian
simulations, this complex shape is deﬁned by the deforming shell surface mesh.
One can eﬃciently compute the distance on a grid by solving the eikonal
equation with the method of characteristics and utilizing polyhedron scan conversion [11]. For a given grid point, the relevant closest point on the triangular
mesh lies on one of the primitives (faces, edges and vertices) that comprise the
surface. The characteristics emanating from each of these primitives form polyhedral shapes. Such a characteristic polyhedron contains all of the points which
are possibly closest to its corresponding face, edge or vertex. The closest points
to a triangle face must lie within a triangular prism deﬁned by the face and

A VTF for Simulating Detonation-Induced Fracture of Thin Flexible Shells

Fig. 3. The characteristic polyhedra for
faces and edges of an icosahedron

127

Fig. 4. Scan conversion of a polygon in
2-D and slicing of a polyhedron to form
polygons

its normal; the closest points to an edge lie in a cylindrical wedge deﬁned by
the line segment and the normals to the two incident faces (see Fig. 3 for face
(a) and edge (b) polyhedra as an example). Analogously, polygonal pyramids
emanating from the vertices are also possible (not shown). We then determine
the grid points that lie inside a characteristic polyhedron with polyhedron scan
conversion. The polyhedron is ﬁrst sliced along each sheet of the grid lattice
to produce polygons, cf. Fig. 4. Simple geometric formulas are ﬁnally used to
calculate the distance.
By utilizing the outlined techniques, and evaluating the distance exactly only
within a small distance around the surface, a highly eﬃcient algorithm can be
formulated that has linear computational complexity both in the number of
Cartesian mesh points and the surface triangles [11, 7].

5

Fluid-Structure Coupling

The explicit ﬂuid and solid solvers are weakly coupled by successively applying appropriate boundary conditions in a time-operator splitting technique. In
the case of inviscid ﬂows, the compatibility conditions are simply the continuity of the velocity component normal to the embedded boundary un in solid
(S) and ﬂuid (F), i.e. uSn = uF
n , and the continuity of the component normal
of the solid’s Cauchy traction vector, pS = (σn)n with
σ = 1/det(F )F P , and the hydrodynamic pressure
update φ(t)
pF , i.e pS = pF . We use the update algorithm of Fig. 5
+/−
wF := uS (t)
to implement these conditions numerically. After evalupdate ﬂuid( Δt )
uating the distance function φ for the currently availpS := pF (t + Δt)
able shell surface mesh, the embedded wall boundary
update solid( Δt )
velocities for the ﬂuid solver are set to the solid veloct := t + Δt
ities in the nearest shell element midplane. The same
velocity w is enforced in the ﬂuid on upper (+ ) and
lower (− ) side of each element. After setting embed- Fig. 5. Basic coupling
ded rigid wall boundary conditions as sketched in Sec. algorithm
2 and the ﬂuid update, a new hydrodynamic pressure
load pF := p+ − p− on each shell element is derived (compare Fig. 1). With these
new boundary conditions, the cycle is completed by advancing the solid by Δt,

128

R. Deiterding et al.

Fig. 6. Coupled simulation of detonation-driven rupture of a thin aluminum tube. Two
snapshots of the fracturing tube with velocity iso-contours (lower row); cuts through
the ﬂuid domain show the resulting hydrodynamic venting (upper row).

which in practice is typically done by taking multiple, smaller time steps in the
solid solver to eﬀectively accommodate the more restrictive stability condition
in the solid. An extended version of above coupling scheme compatible with the
optional ﬂuid mesh adaptation method with recursive time step reﬁnement has
also been developed [7].
In our current implementation, ﬂuid and shell solver are parallelized separately for distributed memory machines using rigorous domain decomposition
methods. The two independent solvers run on two disjoint set of processors. To
facilitate the eﬃcient exchange of the distributed ﬂuid-shell boundary information (surface mesh and velocities to the ﬂuid; pressure loadings to the solid)
we have implemented a non-blocking high-level communication library that determines the necessary point-to-point communication patterns by intersecting
Cartesian bounding boxes enclosing the local domains.

6

Detonation-Driven Fracture Example

We present one representative simulation that corresponds to an experimental
conﬁguration studied by Chao [1]. The setup consists of a detonation tube of
1.52 m, ﬁlled with C2 H4 + 3 O2 at p0 = 180 kPa and ρ0 = 2.33 kg/m3, to which
a thin-walled aluminum (Al6061-T6) test tube is attached. The test specimen
has a length of 45.7 cm, an inner radius of 1.975 cm, and a wall thickness of
0.89 mm. While the lower end of the entire device is closed, a thin diaphragm
seals the upper end. To ensure a reproducible fracture pattern Chao’s specimen
has a central longitudinal notch of 6.32 cm at the middle, which is modeled as
an initial crack in the computations.
The mixture is thermally ignited at the closed end. A combustion wave arises
that has the characteristics of a freely propagating self-sustained detonation
when it enters the test specimen. Utilizing the full GRI 3.0 reaction mechanism Chapman-Jouguet theory predicts its velocity to be DCJ = 2404 m/s
and an adiabatic mixture coeﬃcient for the fully reacted state of 1.24 [1]. For

A VTF for Simulating Detonation-Induced Fracture of Thin Flexible Shells

129

Pressure MPa

the simpliﬁed detonation model of Sec. 2, we choose γ = 1.24 and evaluate
q0 ≈ 5.20 MJ/kg, pCJ ≈ 6.10 MPa, and ρCJ ≈ 4.16 kg/m3. A one-dimensional
simulation is used to calculate the ﬂow ﬁeld at the moment the detonation
enters the specimen. The one-dimensional data is then taken as initial conditions for the three-dimensional reactive Euler equations. Fig. 7 shows the
detonation propagation in the one-dimensional case and the development of a
Taylor rarefaction wave due to the closed end
is clearly visible. To model this wave correctly,
9
0.080ms (after ignition)
0.328ms (transducer 1)
the Cartesian ﬂuid domain also encompasses
8
0.628ms (start specimen)
7
0.818ms (end specimen)
0.92 m of the downstream end of the deto6
nation tube as a static embedded boundary.
5
4
Fig. 6 shows computational results of a typi3
cal coupled ﬂuid-structure interaction simula2
1
tion with a shell mesh of 8665 elements and a
uniform Cartesian ﬂuid mesh of 40 × 40 × 725
0
0.5
1
1.5
2
2.5
Distance [m]
cells that required ≈ 900 h CPU on 27 nodes
of a Pentium-4-2.4 GHz dual processor system
Fig. 7. 1d detonation propagation
(21 ﬂuid and 33 solid processes). 1300 coupled
through tube and specimen
time steps with ﬁxed step size to a ﬁnal time
of 0.26 ms have been calculated (20 solid solver
sub-steps in each ﬂuid time step). The left graphic of Fig. 6 shows the beginning
of the crack opening at t ≈ 0.15 ms (detonation propagating from left to right).
The snapshot on the right shows the rupture at the ﬁnal time t = 0.26 ms. The
venting of high pressure reacted gas out of the tube is clearly visible. During
this simulation, level set evaluation and ﬁnite volume scheme (excluding parallel
synchronization operations) have about the same computational costs on each
ﬂuid processor.

7

Conclusions

A parallel level-set-based ﬂuid-structure coupling method for the time-accurate
simulation of thin ﬂexible shells dynamically responding to gaseous detonation
waves has been described. The approach has been demonstrated to handle arbitrary topology changes and large deformations and is computationally very
eﬃcient. Its implementation in the software framework “Virtual Test Facility”
is freely available for research purposes (cf. http://www.cacr.caltech.edu/asc).

References
1. T.-W. Chao. Gaseous detonation-driven fracture of tubes. PhD thesis, California
Institute of Technology, 2004.
2. F. Cirak, M. Ortiz, P. Schr¨
oder. Subdivision surfaces: a new paradigm for thin-shell
ﬁnite-element analysis. Int. J. Numer. Meth. Engineering, 47:2039–2072, 2000.
3. F. Cirak and M. Ortiz. Fully C 1 -conforming subdivision elements for ﬁnite deformation thin-shell analysis Int. J. Numer. Meth. Engineering, 51:813–833, 2001.

130

R. Deiterding et al.

4. F. Cirak, M. Ortiz, and A. Pandolﬁ. A Cohesive Approach to Thin-Shell Fracture and Fragmentation. Computer Methods in Appl. Mechanics and Engineering,
194:2604–2618, 2005.
5. F. Cirak and R. Radovitzky. A Lagrangian-Eulerian Shell-Fluid Coupling Algorithm Based on Level Sets. Computers & Structures, 83:491–498, 2005.
6. R. Deiterding. Parallel adaptive simulation of multi-dimensional detonation structures. PhD thesis, Brandenburgische Technische Universit¨
at Cottbus, Sep 2003.
Available at http://www.cacr.caltech.edu/˜ralf/html/pub.htm.
7. R. Deiterding, R. Radovitzky, S. P. Mauch et al. A virtual test facility for the
eﬃcient simulation of solid materials under high energy shock-wave loading. Engineering with Computers, 2005. Invited submission.
8. R. P. Fedkiw, T. Aslam, B. Merriman, and S. Osher. A non-oscillatory Eulerian
approach to interfaces in multimaterial ﬂows (the ghost ﬂuid method). J. Comput.
Phys., 152:457–492, 1999.
9. W. Fickett and W. C. Davis. Detonation. University of California Press, Berkeley
and Los Angeles, California, 1979.
10. C. L. Mader. Numerical modeling of detonations. University of California Press,
Berkeley and Los Angeles, California, 1979.
11. S. P. Mauch. Eﬃcient Algorithms for Solving Static Hamilton-Jacobi Equations.
PhD thesis, California Institute of Technology, 2003.
12. E. F. Toro. Riemann solvers and numerical methods for ﬂuid dynamics. SpringerVerlag, Berlin, Heidelberg, 2nd edition, 1999.

