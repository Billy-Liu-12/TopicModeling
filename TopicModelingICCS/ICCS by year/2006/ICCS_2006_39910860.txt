Computationally Eﬃcient Technique for
Nonlinear Poisson-Boltzmann Equation
Sanjay Kumar Khattri
Department of Mathematics, University of Bergen, Norway
sanjay@mi.uib.no
http://www.mi.uib.no/∼sanjay

Abstract. Discretization of non-linear Poisson-Boltzmann Equation
equations results in a system of non-linear equations with symmetric
Jacobian. The Newton algorithm is the most useful tool for solving nonlinear equations. It consists of solving a series of linear system of equations (Jacobian system). In this article, we adaptively deﬁne the tolerance
of the Jacobian systems. Numerical experiment shows that compared to
the traditional method our approach can save a substantial amount of
computational work. The presented algorithm can be easily incorporated
in existing simulators.

1

Introduction

Lets consider the following non-linear elliptic problem
− div ( grad p) + f (p, x, y) = b(x, y) in Ω

and p(x, y) = pD

on ∂ΩD .
(1)
The above problem is the Poisson-Boltzmann equation arising in molecular biophysics. See the References [2, 7, 9, 10, 11, 12]. Here, Ω is a polyhedral domain in
R2 , the source function b is assumed to be in L2 (Ω) and the medium property
is uniformly positive.
A Finite Volume discretization of the nonlinear elliptic equation results in a
system of non-linear equations
F(p) := A1 ph + A2 (ph ) − bh = 0 .
T

(2)

Here, F = [F1 (p), F2 (p), · · · , Fn (p)] , A1 is the discrete representation of the
symmetric continuous operator −div ( grad) and A2 is the discrete representation of the non-linear operator f (p, x, y).
A Newton-Krylov method for solving the non-linear equation (2) is given by
the Algorithm 1. In the Quasi-Newton method (see Algorithm 2), we are solving
the Jacobian equation (J (pk ) Δp = −F(pk )) approximately. We are solving the
system J (pk ) Δpk = −F(pk ) + rk with rk is chosen adaptively. The quasiNewton iteration is given by the Algorithm 2. In the Algorithms 1 and 2, · L2
denotes the discrete L2 norm and maxiter is the maximum allowed Newton’s
iterations. It is interesting to note the stopping criteria in the Algorithm 2. We
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 860–863, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Computationally Eﬃcient Technique

861

Algorithm 1. Newton-Krylov Algorithm
Mesh the domain;
Form the non-linear system : F(p);
Set the iteration counter : k = 0 ;
while k ≤ maxiter or Δp L2 ≤ tol or F(p) L2 ≤ tol do
Solve the discrete system : J (pk ) Δp = −F(pk ) with a ﬁxed tolerance;
pk+1 = pk + Δp;
k ++ ;
end
Algorithm 2. Quasi-Newton-Krylov Algorithm
Mesh the domain;
Form the non-linear system : F(p);
Set the iteration counter : k = 0;
while k ≤ maxiter or Δp L2 ≤ tol or F(p) L2 ≤ tol do
Solve the discrete system : J (pk ) Δp = −F(pk ) with a tolerance
1.0 × 10−(k+1) ;
pk+1 = pk + Δp;
k ++ ;
end

are using three stopping criterion in the Algorithms. Apart from the maximum
allowed iterations, L2 norm of residual vector ( F(p) L2 ) and also L2 norm of
diﬀerence in scalar potential vector ( Δp L2 ) are being used as stopping criterion
for the Algorithms. Generally in the literature, maximum allowed iterations and
the residual vector are used as stopping criteria [9, 10, 11, and references therein].
If the Jacobian is singular than the residual vector alone cannot provide a robust
stopping criteria.

2

Numerical Experiment

Let us solve (3) in the domain Ω = [−1, 1] × [−1, 1] with k = 1.0 [2, 7, 8, 9]. Ω is
divided into four equal sub-domains (see Figure 1) based on .
− ∇ · ( ∇p) + k sinh(p) = f

in Ω

and p(x, y) = x3 + y 3

on ∂ΩD .
(3)
For solving the linear systems, we are using ILU-preconditioned the ConjugateGradient (CG) method. For the Newton algorithm the tolerance of the CG
method is 1.0 × 10−15 . For the quasi-Newton method the tolerance of the CG
method varies with the iterations k of the Algorithm 2 as follows : 1.0×10−(k+1) ,
k = 0, 2, . . . , 14. Figures 3, 4 and 2 reports the outcome of our numerical work.
The Figures 3 and 4 compares convergence of the quasi-Newton and Newton
methods. The Figure 2 reports computational complexity of the quasi-Newton

862

S.K. Khattri

100

= 1.0

= 100.0

3

80

CG−Iterations

4

O

1

= 100.0

2

60

Newton
Quasi−Newton

40

= 1.0

20

0
0

2

4

6

8

10

12

14

Iteration

Fig. 1. Distribution of medium property
in the domain Ω = [−1, 1] × [−1, 1]

Fig. 2. Computational work required by
the Quasi-Newton and Newton methods

0

5

10

10
Newton
Quasi−Newton

Newton
Quasi−Newton
0

10

/ ||Δp ||

0 L2

−10

−15

||Δp ||

10

n L2

||A(pn)||L2 / ||A(p0)||L2

−5

10

10

−10

10

−15

10

−20

−20

10

−5

10

1

5

9

13 15

Iteration [ n ]

Fig. 3. Convergence of the L2 norm of
residual vector A(p)

10

0

1

10

10
Iteration [ n ]

Fig. 4. Convergence of the L2 norm of difference vector Δp

and the Newton methods. It can be notice, even if initial iterations of the NewtonKrylov algorithm are solved approximately, the convergence rate of the algorithm
remains unaﬀected. The Figure 2 shows that such an approximation saves a
substantial amount of computational eﬀort.

3

Conclusions

Quasi-Newton method for solving non-linear system of equation with symmetric
Jacobian matrix is presented. Numerical work shows that the presented technique is computationally eﬃcient compared to the traditional Newton-Krylov
method. An eﬃcient solution technique for Poisson-Boltzmann equation is of
interest to the researchers in computational chemistry, bio-physics and molecular dynamics. The presented algorithm can be easily implemented in existing
simulators.

Computationally Eﬃcient Technique

863

References
1. Khattri, S.K. : Analyzing Finite Volume for Single Phase Flow in Porous Media.
Journal of Porous Media. Accepted for Publication, (2006).
2. Aksoyw, B. : Adaptive Multilevel Numerical Methods with Applications in Diﬀusive Biomolecular Reactions. PhD Thesis, The University of California, San Diego
(2001).
3. Khattri, S.K. : Newton-Krylov Algorithm with Adaptive Error Correction for
the Poisson-Boltzmann Equation. MATCH Commun. Math. Comput. Chem., 56,
(2006).
4. Chow, S.-S. :
Finite element error estimates for nonlinear elliptic equations of
monotone type. Numer. Math., 54, (1989), 373–393.
5. Eymard, R., Gallou¨et, T., Hilhorst, D. and Na¨ıt Slimane, Y. : Finite volumes and
nonlinear diﬀusion equations. RAIRO Math. Model. Numer. Anal., 32, (1998),
747–761.
6. Lui, S.H. : On Schwarz Alternating Methods For Non Linear Elliptic PDEs. SIAM
Journal on Scientiﬁc Computing, 21, (2000), 1506-1523.
7. Fogolari, F., Brigo, A. and Molinari, H. : The Poisson Boltzmann equation for
Biomolecular electrostatics: A Tool for Structural Biology. Journal of Molecular
Recognition, John Wiley & Sons Ltd., 15, (2002), 377–392.
8. Kuo, S.S., Altman, M.D., Bardhan, J.P., Tidor, B. and White, J.K. : Fast Methods
for Simulation of Biomolecule Electrostatics. International Conference on Computer Aided Design, (2002).
9. Host, M., Kozack, R.E., Saied, F. and Subramaniam, S. : Treatment of Electrostatic Eﬀects in Proteins: Multigrid-based Newton Iterative Method for Solution
of the Full Nonlinear Poisson-Boltzmann Equation. Proteins: Structure, Function,
and Genetics, 18, (1994), 231–245.
10. Host, M., Kozack, R.E., Saied, F. and Subramaniam, S. : Protein electrostatics:
Rapid multigrid-based Newton algorithm for solution of the full nonlinear PoissonBoltzmann equation. J. of Biomol. Struct. & Dyn., 11, (1994), 1437–1445.
11. Host, M., Kozack, R.E., Saied, F. and Subramaniam, S. : Multigrid-based Newton iterative method for solving the full Nonlinear Poisson-Boltzmann equation.
Biophysical Journal, 66, (1994), A130–A130.
12. Holst, M. and Saied, F. : Numerical solution of the nonlinear Poisson-Boltzmann
equation: Developing more robust and eﬃcient methods. J. Comput. Chem., 16,
(1995), 337–364.
13. Baker, N., Sept, D., Holst, M. and McCammon, J.A. : The adaptive multilevel
ﬁnite element solution of the Poisson-Boltzmann equation on massively parallel
computers. IBM J. Research and Development, 45, (2001), 427–438.

