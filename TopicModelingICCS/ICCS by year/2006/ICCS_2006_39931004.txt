Automatic Services Composition in the Grid
Environments
Wenju Zhang, Fei Liu, Shudong Chen, and Fanyuan Ma
Shanghai Jiaotong University, Shanghai,
P.R. China, 200030
{zwj03, liufei001, chenshudong, fyma}@sjtu.edu.cn

Abstract. Diﬀerent planning techniques have been proposed so far
which address the problem of automated composition of web services.
However, in realistic cases, the planning problem is far from trivial.
Such issue is more serious when services are embraced in grid environments, which are usually resource-conscious. We propose a planning
techniques for the automated composition of grid services described in
OWL-S process models. The technique allows for the synthesis of plans
that encode compositions of grid services with the usual programming
constructs. We apply this technique in our DDGrid project and do some
preliminary experimental evaluations.

1

Introduction

Currently, the problem of the composition of services is addressed by two orthogonal eﬀorts from the industry and the Semantic Web community. Our research
aims to develop intelligent middleware components that encapsulate the expertise required to use grids. Earlier, we used AI planning techniques to automatically generate executable job workﬂows from high-level speciﬁcations of desired
results. We integrated our planner in a grid environment to extract relevant
knowledge from existing grid middleware.
The rest of this paper is organized as follows. Section 2 introduces the grid
environments of our techniques apply. Section 3 presents how OWL-S process
models can be translated into state transition systems and the principle and
deﬁnition of automatic grid services composition. Section 4 provides an example and a preliminary experimental evaluation. Section 5 discusses the relevant
ontologies and planning techniques. We conclude in Section 6.

2

Grid Environments and Integration

Middleware services such as those that the Globus toolkit provides help users
obtain information about available resources, component software, data ﬁles and
This research work was supported in part by the the National High Technology
Research and Development Program of China (863 Program), under Grant No.
2004AA104270.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 1004–1007, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Automatic Services Composition in the Grid Environments

1005

the execution environment. We have used several of these services as knowledge
sources for our planner as part of its integration in the DDGrid (Drug Discovery
Grid, www.ddgrid.ac.cn) project for planning and execution in grids. An AI
planner and the typical services composition environment shown in Figure 1.

.
Fig. 1. An AI planner and the typical services composition environment

A complete planning-based solution for Grid or Web services composition
must address execution as well as construction of workﬂows. Grid and Web
planning systems make decisions in dynamic environments in which the services
that are composed as part of a plan may become unavailable during its execution.
Finding an optimal allocation of processors for tasks in a workﬂow is NP-hard
and tools must focus on ﬁnding reasonable heuristics or on identifying families
of problems that can be solved eﬃciently. In a dynamic environment, the system
needs to make time-dependent decisions when an initial workﬂow allocation is
found to be inappropriate during execution.

3

OWL-S Process Models and Automated Composition

OWL-S process models are declarative descriptions of the properties of web service programs. Process models distinguish between atomic processed and composite processes as mentioned before.
We encode OWL-S process models as state transition systems, which describe
dynamic systems that can be in one of their possible states and can evolve to
new states as a result of performing some actions.
The execution structure corresponding to domain Σ and plan π is the Kripke
structure Σπ = S, S0 , R , where:
– S is the set of conﬁgurations;
– S0 ⊆ P are the initial conﬁgurations;
– R ⊆ S × S are the transitions between conﬁgurations.
The execution structure Σπ represents the evolutions of the domain Σ controlled
by the plan π. It is the execution structure Σπ that must satisfy the composition
goal G. If Σπ |= G, we say that π is a valid plan for G on Σ.

1006

W. Zhang et al.

In presence of partial observability, at each plan execution step, the plan
executor has to consider a set of domain states, each equally plausible given
the initial knowledge and the observed behavior of the domain so far. Thus in
general, given a belief B, performing an action a and taking into account the
obtained observation o gets to a new belief Evolve(B, a, o):
Evolve(B, a, o) = {s : ∃s ∈ B.s ∈ T (s, a) ∧ M(s ) = o}.
Planning in this framework consists in searching through the possible evolutions
of initial beliefs, to retrieve a conditional course of actions that leads to beliefs
that satisfy the goal.

4

An Example and Experimental Evaluation

Our techniques are general, but we have applied them in the context of DDGrid
project. The Drug Discovery Service (as shown in Figure 2), also called Composed Grid Service (CGS), is composed by three related grid services we provided: a Virtual Chemical DataBase Data Service, a Dock Service and a Payment
Service. The idea is that of combining these three services so that user may directly request the CGS to complete the molecule docking task.

Fig. 2. A DDGrid Services Composition Example

Fig. 3. The Execution Time of
the CGS with Diﬀerent Number of
Molecule

The Initial State: The planner receives as input an initial state that captures
information from several sources, including
– Hardware/Software resources available to the user. those information obtain
from the grid middleware of DDGrid.
– The dock application’s speciﬁcal parameters. such as the protein ﬁle description, the ligand atom ﬁle description, etc.
– Estimates of computation power of every Virtual Organization and bandwidths between the resources.
– The identiﬁcation of the grid user and the authorization policy.

Automatic Services Composition in the Grid Environments

1007

Composition Goals: The composition goals express requirements for the services to be automatically generated. In our example (see Figure 2), The CGS
should try to reach the ideal situation when the user has submitted his job,
and the VCDB data service has the corresponding molecule to dock. Finally,
the dock grid service ﬁnish the job and the user pay for it through the payment
service.
We have executed the composed grid service in our DDGrid platform. The
planner performed 6 actions, docking 1050 molecules. The eﬀectiveness and performance can be seen partially from Figure 3.

5

Related Work

Several projects have recently demonstrated planning techniques for Web and
Grid Services. Other projects use knowledge bases to facilitate Grid use. The
myGrid project uses OWL and OWL-S to describe application components as
Semantic Web Services. These descriptions support matching and discovery of
components through a description logic reasoner.
Other planning techniques have been applied to related problems in the ﬁled
of grid and web services [1, 3, 4]. The interactive composition of information gathering services has been tackled in [2] by using Constraint Satisfaction Problems
techniques.

6

Conclusion and Future Work

In this paper, we have shown how ontologies and OWL-S process models can be
used to generate automatically new composed grid services. This is achieved by
translating OWL-S process models to state transition systems and by generating
automatically a plan that can express conditional and iterative behaviors of the
composition. Our preliminary experimental evaluation shows the potentialities
of the approach.

References
1. J. Blythe, E. Deelman, and Y. Gil, Automatically Composed workﬂows for Grid
Environments, IEEE Intelligent Systems, 2004.
2. S. Thakkar, C. Knoblock, and J.L. Ambite. A View Integration Approach to Dynamic Composition of Web Services, In Proceedings of ICAPS’03 Workshop on
Planning for Web Services, 2003.
3. William K. Cheung et al., Towards Autonomous Service Composition in A Grid
Environment, In Proceedings of the IEEE International Conference on Web Services(ICWS’04), 2004.
4. Tatiana Kechkaylo, Planning for Grid Applications with Explicit Reservations, The
14Th International Conference on Automated Planning & Scheduling(ICAPS’04),
2004.

