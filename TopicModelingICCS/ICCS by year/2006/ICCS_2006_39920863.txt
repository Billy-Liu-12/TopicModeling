HiSP: A Probabilistic Data Mining Technique
for Protein Classiﬁcation
Luiz Merschmann and Alexandre Plastino
Departamento de Ciˆencia da Computa¸ca
˜o
Universidade Federal Fluminense
Niter´
oi, Brazil
{lmerschmann, plastino}@ic.uff.br
http://www.ic.uff.br

Abstract. In this work, we propose a new computational technique to
solve the protein classiﬁcation problem. The goal is to predict the functional family of novel protein sequences based on their motif composition.
In order to improve the results obtained with other known approaches,
we propose a new data mining technique for protein classiﬁcation based
on Bayes’ theorem, called Highest Subset Probability (HiSP). To evaluate our proposal, datasets extracted from Prosite, a curated protein
family database, are used as experimental datasets. The computational
results have shown that the proposed method outperforms other known
methods for all tested datasets and looks very promising for problems
with characteristics similar to the problem addressed here.

1

Introduction

Proteins are complex organic macromolecules made up of amino acids. They
are fundamental components of all living cells including many substances, such
as enzymes, structural elements, and antibodies, that are directly related with
the functioning of an organism. Hence, the knowledge of the proteins’ functions is very important. Until recently, the function of the proteins could be
identiﬁed only by time-consuming and expensive experiments. However, in the
post-genomic era, with the huge amount of available sources of information, new
challenges arise in protein function characterization. Moreover, computer-based
methods to assist in this process are becoming increasingly important.
Various protein sequence databases are readily available and can be used in
the task of assigning proteins to functional families. This is a typical data mining
task, and therefore, this problem can be viewed as a classiﬁcation problem.
Hence, the need of an eﬃcient method to solve this problem is evident. In this
work, we propose a new data mining method, based on motif analysis, for the
protein classiﬁcation problem.
Since the protein function is closely related with the occurrence of motifs in
its sequence, the motif composition has been used for the function prediction of
Work sponsored by CNPq PhD scholarship.
Work sponsored by CNPq research grant 300879/00-8.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 863–870, 2006.
c Springer-Verlag Berlin Heidelberg 2006

864

L. Merschmann and A. Plastino

proteins [1]. The diﬃculty in this task arises because many proteins share one
or more motifs with proteins that belong to diﬀerent functional families.
The data mining method proposed in this work uses a database which stores
information about previously studied proteins (i.e., proteins grouped into families according to the functions they perform) to predict the functional family
of novel proteins. Some motif databases have been developed, such as Prosite,
Prints, Blocks, Pfam, among others [2].
The datasets used in this study, named genbase10, genbase18, genbase28, and
genprosite, were extracted from Prosite database [3]. Each documentation entry
in this database represents a protein class and is associated with a function. The
entry PDOC00343, for example, corresponds to class “Kinesin motor domain
signature and proﬁle”. In Prosite database, every documentation entry is coded
by a PDOCxxxxx number. Each protein class is associated with pattern(s) and,
in some cases, also with proﬁle(s).
Pattern is a short conserved amino acid sequence which is part of a region
known to be important for the biological function of a protein or which includes
biologically signiﬁcant residue(s), while proﬁle is a table (also called weight matrix) built on alignment of multiple protein sequences. Unlike patterns, proﬁles
seek to characterize a protein family over its entire length [4]. Patterns and
proﬁles are represented by PSxxxxx codes. For simplicity, in this paper, both
pattern and proﬁle will be referred as motifs.
The classiﬁcation problem we address in this work can be stated as follows.
Given a dataset of proteins, called training dataset, where each protein is characterized by their motifs and functional family (also referred as protein class),
the goal is to assign newly discovered protein sequences to one of the protein
families represented in the training dataset.
1.1

Contributions

In this work, we propose a computational technique to solve the protein classiﬁcation problem1 . The main motivation was to improve results presented in
previous works for large datasets. The method proposed in [6] reached only
41.4% of accuracy for a database containing approximately 40000 proteins in
1100 diﬀerent classes.
The new data mining technique we propose is inspired in Bayes’ theorem [7].
The main characteristic of the proposal is the protein classiﬁcation based on the
evaluation of its subsets of motifs. We compare the results of our approach with
those obtained by other methods proposed in literature. In addition, accuracy
and speed performance of our approach are presented using all proteins present
in Prosite database (release 18.0).
The remaining of this paper is structured as follows. Section 2 gives an
overview of related works. Section 3 presents our approach for the protein classiﬁcation problem. The experiments and results are discussed in Section 4.
Finally, in Section 5, the conclusions and some future work directions are
presented.
1

This proposal was preliminarily and brieﬂy explored in [5].

HiSP: A Probabilistic Data Mining Technique for Protein Classiﬁcation

2

865

Related Works

Reference [8] adopted the decision tree method for assigning protein sequences
to functional families based on their motif composition. The datasets used in
the experiments were extracted from Prosite database. The experimental results
showed that the obtained decision tree classiﬁers presented a good performance.
Reference [9] presented a preprocessing software tool, called GenMiner, which
is capable of processing three important protein databases and transforming their
data into a suitable format for the Weka data mining tool [10] and MS SQL Analysis Manager 2000 [11]. GenMiner was developed in Java to communicate with
the Weka data mining module. Weka was chosen because it provides a variety
of data mining algorithms and its open sourceness facilitates the interconnection with GenMiner. The decision tree technique was used for mining protein
data and experiments produced interesting results that conﬁrmed the system’s
capability of eﬃciently discovering properties of novel proteins.
Reference [6] proposed a data mining approach for motif-based classiﬁcation of
proteins. In this work, ﬁnite state automata were used to induce protein classiﬁcation rules, which were applied to the test datasets in the experiments. The form
of the extracted rules is X → Y . The left part is a set of motifs, while the right
part is a set of protein families. Every extracted classiﬁcation rule had three qualitative attributes: support, conﬁdence and interest. In the performed experiment,
only simple classiﬁcation rules of the form “M otif → Class” were considered.
The extracted rules were applied in descending order, following their interest attribute. A conducted comparative experiment showed that the achieved results
outperformed those obtained in [9].
Reference [1] adopted the decision tree technique for assigning protein
sequences to functional families. A training dataset of peptidase sequences (extracted from Merops protease database [12]), represented by their motifs composition, was used to automatically construct decision trees. Every protein sequence
in the training dataset was labeled with the corresponding Merops functional
family. The conducted experiments aimed at comparing the decision trees constructed using motifs generated by a tool called Meme with trees constructed
using expert annotated Prosite motifs. The classiﬁcation results showed that
decision trees built using a motif-based representation of protein sequences constructed using Meme outperformed decision trees constructed using Prosite.

3

The Proposed Method

Based on the experience obtained when exploring this protein classiﬁcation problem, we noted the promising idea of classifying a protein by discovering subsets
of its motifs that strongly characterize some class. In this way, the classiﬁer assigns the protein to the class which is better characterized by one of the subsets
of its motifs.
Consider the protein P22216 contained in genbase18, which is composed by
the following set of motifs M={PS50006, PS50011, PS50321, PS50322} and belongs to class PDOC50006. We can derive from this dataset that all proteins

866

L. Merschmann and A. Plastino

which contain the subset of motifs S={PS50006, PS50321} are associated with
the class PDOC50006, that is, 100% of such proteins belongs to PDOC50006.
This is a strong probability. On the other hand, the entire set of motifs M is
never associated with the class PDOC50006. We believe that the search for subsets associated to high class probabilities can lead to an appropriate classiﬁer
technique.
Therefore, we propose the following approach to predict the class of an unknown protein X, based on the exploration of subsets of its characteristics, called
Highest Subset Probability (HiSP) classiﬁer.
Let MX be the set of motifs present in the protein X. Analogous to naive
Bayes classiﬁers [7], supposing that there are m classes, {C1 , C2 , . . . , Cm }, X is
assigned to class Ck , 1 ≤ k ≤ m, if and only if
P (Ck |X) > P (Cj |X) for all j, 1 ≤ j ≤ m,

j = k.

(1)

In a diﬀerent way from the naive Bayes classiﬁer, we calculate P (Ci |X), 1 ≤
i ≤ m, as follows:
P (Ci |X) = max{P (Ci |t)}
where
P (Ci |t) =

for all t ⊆ MX , t = ∅,

P (Ci ∧ t)
.
P (t)

(2)

(3)

Now, one needs to calculate P (Ci ∧t) and P (t). P (Ci ∧t) stands for the probability of a protein pertaining to Ci and having the subset t. P (t) is the probability
of the subset t occurring. They are estimated from the training dataset in the
following way:
FCi t
,
(4)
P (Ci ∧ t) =
N
where FCi t and N are the number of samples (proteins) of class Ci having the
subset t, and the total number of training samples, respectively. And
P (t) =

Ft
,
N

(5)

where Ft is the number of samples having the subset t.
Nevertheless, this method can incur expensive computational costs when the
number of motifs per protein is large. However, in the case of the problem addressed in this work, the application of this method is feasible, once in the Prosite
database (release 18.0), for example, the average number of motifs per protein
is 1.56 with a standard deviation of 0.90.
The pseudo-code for HiSP is presented in Fig. 1. Let C = {C1 , C2 , . . . , Cm } be
the set of classes, and T rainingP roteins = {a1 , a2 , . . . , az } be the set of training
proteins, each one labeled with a class Ci ∈ C. Mx is the set of motifs present
in the protein x. The test protein bj will be assigned to a class Ck ∈ C using
the CLASSIFIER procedure. In line 1, the variables bestClass and biggestP rob
are set to initial values. For each subset of motifs present in the test protein

HiSP: A Probabilistic Data Mining Technique for Protein Classiﬁcation

867

procedure CLASSIFIER(C, T rainingP roteins, bj )
1: bestClass ← NO CLASS; biggestP rob ← 0;
2: for each t ⊆ Mbj (such as t = ∅) do
3:
Ft ← 0;
4:
Ft [i] ← 0; ∀i = 1, . . . , m
5:
for each ar ∈ T rainingP roteins do
6:
if (t ⊆ Mar ) then
7:
Ft [s] ← Ft [s] + 1, where Cs is the class of the protein ar ;
8:
Ft ← Ft + 1;
9:
end if
10:
end for
11: end for
12: for each Ci ∈ C do
13:
for each t ⊆ Mbj (such as t = ∅) do
14:
P (Ci |t) ← Ft [i]/Ft ;
15:
if (P (Ci |t) > biggestP rob) then
16:
bestClass ← Ci ;
17:
biggestP rob ← P (Ci |t);
18:
end if
19:
end for
20: end for
21: Return (bestClass);
end.
Fig. 1. Pseudo-code for HiSP

(line 2), Ft (frequency of the subset t) and the vector Ft [i] (frequency of training
samples of class Ci having the subset t) are initialized (lines 3 and 4), and the
training dataset is scanned in order to compute them (lines 5 to 10). In lines
12 to 20, P (Ci |t) is calculated for each class Ci ∈ C (as described in Equation
(3)). In line 15, if P (Ci |t) = biggestP rob, then the following criterion is adopted
for solving this tie: if P (Ci |t) = P (Cj |t ) and Ft [i] > Ft [j], where t is the
subset associated with biggestP rob, then Ci takes precedence over Cj . Finally,
the protein classiﬁcation is returned in line 21.

4

Evaluating the Proposed Method

In this section, we compare the results of our approach with those obtained by
the other two classiﬁers: the automata-based technique [6], and decision tree
method [9].
For the classiﬁcation problem addressed in this work, the samples correspond
to the proteins, each protein is composed by a set of motifs, and the classes are
associated with the protein functional families.
Three diﬀerent datasets are used in the comparative tests. The datasets named
genbase10, genbase18, and genbase28 contain 662, 2233, and 2934 proteins belonging to 10, 18, and 28 classes, respectively. These datasets were also used in

868

L. Merschmann and A. Plastino

[6]. However, such datasets correspond to a subset of proteins and classes present
in Prosite database. Therefore, in order to evaluate the proposed method considering a more realistic scenario, we also conducted tests using a dataset, called
genprosite, which contains all proteins and classes from Prosite database (release
18.0), i.e., 75384 proteins in 1200 diﬀerent classes.
Although k-fold cross-validation [13] is the most accepted method for estimating classiﬁer accuracy in current machine learning and data mining researches,
for comparison purpose, we adopted the same technique used in [6], called holdout [13]. According to this approach, the dataset is randomly divided into two
disjoint datasets, a training dataset and a test dataset. Then, the training dataset
is used by the classiﬁer in the classiﬁcation task, whose performance is estimated
using the test dataset.
The accuracy (ACC) was used to measure the classiﬁcation performance
in [6]. Again, for comparison purpose, we also adopted it, which is given by
ACC =

number of proteins correctly classiﬁed
.
total number of proteins in the dataset

(6)

In the same way performed in [6], we repeat ten times the holdout method. We
randomly generate ten tests, each one containing a training and a test dataset.
Each test dataset was constituted by 10% of the total number of proteins. The
accuracy was obtained by calculating the average of the values obtained from
the ten tests.
Prosite database contains some proteins associated with more than one functional family. Therefore, the datasets used in the tests include proteins belonging
to more than one class. In this case, the protein is repeatedly represented in the
dataset so that each protein is associated with an unique class. This format
of protein representation in the datasets has a drawback in the evaluation of
classiﬁer performance. For example, suppose that the test dataset has a protein
appearing k times, each one with a diﬀerent class. Since the classiﬁcation result of this protein will be unique (independently of the number of times that
it is represented in the test dataset), considering only the k repetitions of this
protein, the classiﬁcation accuracy will be at most 1/k. Therefore, for the test
datasets that contain protein(s) belonging to more than one class, the accuracy
measure can not achieve 100%. Then, the maximum accuracy possible for each
test dataset (Upper Bound column), as well as the comparative results for each
classiﬁcation method are shown in Table 1. The datasets are listed in the ﬁrst
column. Each other column shows the accuracy (average of ten tests) for each
method. The parenthesis in HiSP column contain the standard deviation for
each average.
The experiments evidence that the proposed approach reached encouraging
classiﬁcation performance. The results presented in Table 1 show that HiSP
outperformed the methods applied in [6] and [9] for all tested datasets. It is
worth noting that HiSP reached high accuracy on a more realistic scenario, i.e.,
for genprosite database.
Although genprosite dataset has not been used in the experiments conducted
in [6], a dataset containing all proteins and classes from a previous Prosite

HiSP: A Probabilistic Data Mining Technique for Protein Classiﬁcation

869

Table 1. Accuracy comparison
Datasets Approach in [6] Approach in [9]
HiSP
Upper Bound
genbase10
93.71
80.13
99.85 (0.48)
100
genbase18
94.31
84.27
97.57 (1.12)
99.91
genbase28
75.98
74.49
83.24 (2.18)
99.45
genprosite
—–
—–
85.71 (0.49)
98.55

database version was considered in their performance evaluation. Such dataset
was composed by approximately 40000 proteins in 1100 diﬀerent classes. The accuracy was 41.4%. HiSP reached a performance more than twice better (85.71%)
for a dataset containing 75384 proteins in 1200 diﬀerent classes.
As mentioned in Section 3, HiSP can incur expensive computational costs
for proteins with a large number of motifs. Thus, we decided to measure the
CPU time spent to classify one instance. The experiments were carried out on
an AMD XP 2600+ PC, with 512 Mbytes of RAM.
For genprosite dataset, the average classiﬁcation CPU time per instance of
HiSP was 0.6 seconds. The good behavior of HiSP is due to the small number
of motifs per proteins on average. However, the speed performance of HiSP is
directly inﬂuenced by the number of motifs per protein in a test dataset, since
the amount of subsets of motifs evaluated in the classiﬁcation process depends
on the number of motifs of each protein.
In Prosite database (release 18.0), each protein is constituted by at most ten
motifs, and the average number of motifs per protein is 1.56 with a standard
deviation of 0.9. For genprosite dataset, which contains all proteins from Prosite
database, when a protein contains two motifs, HiSP spent, on average, 0.3 seconds to classify it. On the other hand, for proteins containing ten motifs (the
worst case in Prosite database), HiSP spent, on average, 108 seconds to classify
them. However, we may observe that 98% of the proteins in genprosite dataset
contain at most ﬁve motifs. And, for ﬁve motifs, the HiSP strategy takes on
average 3.2 seconds to classify a protein. So, we can conclude that the proposed
method works very appropriately for the problem addressed in this work.

5

Conclusions

We have presented a computational technique to classify protein sequences based
on their motif composition. In order to improve the results presented by automatabased technique [6] and decision tree method [9], we proposed a new data mining
technique, called HiSP. Its main idea is the evaluation of subsets of attribute values
to classify an instance. The computational experiments have shown that HiSP
outperformed the results presented in [6] and [9] for all tested datasets. Also, the
run time evaluation showed that, on average, HiSP presented a good behavior.
Therefore, we can conclude that the idea of classifying samples according to the
class which is better characterized by one of the subsets of their attribute values

870

L. Merschmann and A. Plastino

looks very promising for problems with characteristics similar to the one addressed
in this work.
In future works, we intend to evaluate this classiﬁcation approach considering
diﬀerent kinds of applications and databases.

Acknowledgments
The authors are grateful to research group of Bioinformatics Laboratory at
the National Laboratory for Computing Sciences (LNCC, Brazil), especially to
Cl´audia Barros Monteiro Vitorello for all help and suggestions. Also, the authors
would like to thank Fotis Psomopoulos for his willingness to share the datasets
with them and to answer their numerous questions about his paper.

References
1. Wang, X., Schroeder, D., Dobbs, D., Honavar, V.: Automated data-driven discovery
of motif-based protein function classiﬁers. Information Sci. 155 (2003) 1–18
2. Henikoﬀ, S., Henikoﬀ, J.G.:
Protein family databases.
In: Encyclopedia
of life sciences. Macmillan Publishers Ltd, Nature Publishing Group (2001)
http://www.els.net.
3. Falquet, L., Pagni, M., Bucher, P., Hulo, N., Sigrist, C.J., Hofmann, K., Bairoch,
A.: The prosite database, its status in 2002. Nucleic Acids Res. 30 (2002) 235–238
4. Sigrist, C., Cerutti, L., Hulo, N., Gattiker, A., Falquet, L., Pagni, M., Bairoch, A.,
Bucher, P.: Prosite: a documented database using patterns and proﬁles as motif
descriptors. Brief Bioinformatics 3 (2002) 265–274
5. Merschmann, L., Plastino, A.: A bayesian approach for protein classiﬁcation. In:
Proc. of the 21st Annual ACM Symposium on Applied Computing, Dijon, France
(2006) (to appear as a short paper).
6. Psomopoulos, F., Diplaris, S., Mitkas, P.A.: A ﬁnite state automata based technique for protein classiﬁcation rules induction. In: Proc. of the 2nd European
Workshop on Data Mining and Text Mining in Bioinf., Pisa, Italy (2004) 54–60
7. Duda, R., Hart, P.: Pattern Classiﬁcation and Scene Analysis. John Wiley & Sons,
New York (1973)
8. Wang, D., Wang, X., Honavar, V., Dobbs, D.L.: Data-driven generation of decision
trees for motif-based assignment of protein sequences to functional families. In:
Proc. of the Atlantic Symposium on Computational Biology, Genome Information
Systems & Technology, North Carolina, USA (2001)
9. Hatzidamianos, G., Diplaris, S., Athanasiadis, I., Mitkas, P.A.: GenMiner: A data
mining tool for protein analysis. In: Proc. of the 9th Panhellenic Conference On
Informatics, Thessaloniki, Greece (2003) 346–360
10. Witten, I.H., Frank, E.: Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations. Morgan Kaufmann (1999)
11. Seidman, C.: Data Mining with Microsoft SQL Server. Microsoft Press, Redmond,
WA (2000)
12. Rawlings, N.D., Barret, A.J.: Merops: The peptidase database. Nucleic Acids Res.
28 (2002) 323–325
13. Han, J., Kamber, M.: Data Mining: Concepts and Techniques. Morgan Kaufmann
Publishers, New York (2001)

