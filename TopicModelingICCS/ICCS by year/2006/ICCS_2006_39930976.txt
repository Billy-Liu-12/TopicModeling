Cooperative Processes for Scientiﬁc Workﬂows
Khaled Gaaloul, Fran¸cois Charoy, and Claude Godart
LORIA - INRIA - CNRS - UMR 7503
BP 239, F-54506 Vandœuvre-l`es-Nancy Cedex, France
{kgaaloul,charoy,godart}@loria.fr

Abstract. The work described in this paper is a contribution to the
problems of managing in data-intensive scientiﬁc applications. First, we
discuss scientiﬁc workﬂows and motivate there use in scientiﬁc applications. Then, we introduce the concept of cooperative processes and
describe their interactions and uses in a ﬂexible cooperative workﬂow
system called Bonita. Finally, we propose an approach to integrate and
synthesize the data exchanged by the mapping of data-intensive science
into Bonita, using a binary approach, and illustrate the endeavors done to
enhance the performance computations within a dynamic environment.

1

Introduction

With the technological improvements and continuous increasing of scientiﬁc requirements, scientiﬁc applications are becoming complex, involving large-scale
distributed environments and huge data exchanges. Since data processing can be
costly, sharing these data products can save the expense of performing redundant
computations [1]. The goal of scientiﬁc workﬂows is to provide an environment
where scientists share their resources to pursue common goal. Indeed, the view
that scientists typically perform experiments, where experiments can be considered as ordered collections of steps acting on data and involving a variety of
distinct activities, motivates the exploitation of workﬂow technologies to scientiﬁc endeavors. In addition, the scientiﬁc domain speciﬁes others requirements
as the need to execute in a dynamic environment where resources are not know a
priori [2]. To deal with those requirements, scientiﬁc workﬂows need more ﬂexibility to cope with dynamic environments and more capabilities to manage large
data streaming. However, the eﬀorts done for the integration of distributed applications and heterogeneous data are still insuﬃcient. Reusing analytical steps
within a workﬂow instance involves an integration eﬀort. Each analytic step consumes and produces data with a particular structural representation. To compose
activities, the structural diﬀerences between the activities must be resolved, and
this resolution is typically performed by the scientist either manually or by writing a special-purpose program or script [3]. Moreover, analytical steps used to be
rigid and lack of ﬂexibility. That is why, our research focuses on reducing those
eﬀorts by providing means, described in section 3, that facilitate the analysis
and modeling of scientiﬁc applications.

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 976–979, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Cooperative Processes for Scientiﬁc Workﬂows

977

The remainder of this paper is organized as follows. Section 2 brieﬂy describes
scientiﬁc workﬂows and motivates its use through an experimental example. Section 3 refers to the ﬂexible cooperative workﬂow system Bonita, where we take
a closer look to cooperative processes within Bonita. In section 4, we deﬁnes our
proposition for data-intensive science within our workﬂow system. In particular,
we present a technique for mapping heterogeneous data within scientiﬁc workﬂows based on a binary approach. Section 6 concludes the paper and discusses
some future works.

2

Preliminaries and Motivations

Traditionally, the scientiﬁc work is concentrated around experiments. Collecting, generating, and analysing large amounts of heterogeneous data is the
essence of such work. The scientiﬁc experiments which have to be carried out
during such a development process are typically composed of series of steps or
tasks [4]. A global abstract view of a scientiﬁc work is that it consists of one
or more steps with input and output data. There are many others aspects that
scientiﬁc environments has to capture. These include mechanisms for cooperative work (e.g., ensuring the communication and the coordination for a group
to work together in the pursuit of a shared goal) and data management (e.g.,
managing data format evolution in scientiﬁc experiments). Scientiﬁc projects
can be considered as ordered collections of steps acting on data and involving
a variety of distinct activities. So it motivates the exploitation of the workﬂow
paradigm.
Scientiﬁc workﬂow is the application of workﬂow technology to scientiﬁc endeavours, and is recognized as a valuable approach for assisting scientists in
accessing and analyzing data. Its applications scopes are the support for large
data ﬂows, the need to decide on further steps after evaluating the previous
ones [4], the need to monitor and control workﬂow execution including ad-hoc
changes, and the need to execute in a dynamic environment where resources are
not know a priori and may need to adapt to changes [2].
As an example, consider the development of prototypes by digitalization. We
aim to develop, from an original model, a prototype that will be used for testing,
measuring and controlling (e.g., metrology) the new model. First, we try to
identify a number of features belonging to the original model by digitalization it.
Then according to the experience, which includes outcomes (measurements, cost
aspects, etc.), we conduct another experiments (reconstruction and modiﬁcation)
to simulate it afterwards. If successful, the prototype will be ready to be tested
depending on scientists requirements.
From a workﬂow point of view, this scientiﬁc experiment is typically composed
of series of tasks, which are intertwined according to some control sequence (e.g.,
conditional branches), and receiving/producing manifold information. Thus, the
scientiﬁc workﬂow seems to be an appropriate paradigm to integrate it.

978

3

K. Gaaloul, F. Charoy, and C. Godart

Using BONITA for Scientiﬁc Workﬂows

Bonita is a ﬂexible cooperative workﬂow system which incorporates the anticipation of activities as a ﬂexible mechanism of a workﬂow execution. The principle
of anticipation is to allow an activity to escape the traditional start-end synchronization model by ensuring intermediate results used as preliminary input into
succeeding activities [5]. Our approach consists in adding ﬂexibility to scientiﬁc
workﬂow executions with minimal changes of the workﬂow model. We try to
reach this goal by relaxing the way the model is interpreted. Scientists can take
some initiatives regarding the way they start the assigned activities. The use of
Bonita will ensure several advantages such as cooperative processes by ensuring
numerous interactions between heterogeneous applications, the communication
and the coordination for scientists to work together in the pursuit of a shared
goal.
As described in section 2, we can ensure the ﬂexibility of the scientiﬁc experiment. Actually the step of reconstruction and modiﬁcation, called CAD task, is
not completely ﬁnished. So we can anticipate it by passing to the next activities
with the possibility of return. The anticipation in Bonita oﬀers new alternatives
in a dynamic environment. When the user selects an activity, he obtains the
list of the executing activities: executing or anticipating states, and his assigned
activities: ready or anticipable (see ﬁgure 1). Therefore, in our example, by anticipating the CAD’s step we will have the opportunity to optimize the process,
to send a feedback to this step, and eventually add/remove an activity.

Fig. 1. Ensuring ﬂexiblity for a scientiﬁc workﬂow execution

4

Mapping Data-Intensive Science into BONITA

Bonita integrates a great number of services to control and simplify many cooperative aspects such as Java Message Service (JMS) to notify the deﬁnition
and execution changes within a workﬂow process, and Jabber service that allows the users to receive notiﬁcations at real-time and exchange diﬀerent kinds
of messages. However, those services lack of heterogeneity and dynamic changes,
so they can not deal with the runtime message evolution. Therefore, we need to
extend the workﬂow engine so that it controls the data ﬂow.
Storing and transmitting data in binary form is often desirable both to conserve I/O bandwidth and to reduce storage and processing requirements. PBIO
(Portable Binary Input/Output) is a general approach to deal with binary data

Cooperative Processes for Scientiﬁc Workﬂows

979

in storage and transmission [6]. Users register the structure of the data that they
wish to transmit/store or receive/read and PBIO transparently masks the diﬀerences [6]. We integrate the PBIO approach to support the messages exchange. It
manages the input/output data by storing the streaming of data and matching
the appropriate records with the relevant activity. Here, CAD’s activity communicates with both Simulation and SR activities where the Simulation activity
receives CAD’s data as input and SR sends data to CAD as feedback.

5

Conclusions and Future Directions

In this paper, we have presented an approach for scientiﬁc workﬂow execution.
Our approach exploits two distinct speciﬁcations for a scientiﬁc process: cooperative process and process messaging. We believe that anticipating activities
and optimizing data streaming allow dynamic analysis and high performance
communication. We plan to further implement this approach by developing a
framework adapted for a scientiﬁc workﬂow execution based on Bonita and the
PBIO approach.

Acknowledgements
This work was partially supported by Auraryd LLC. Software Company (France),
within a bilateral cooperation with the ECOO research team (LORIA) on Scientiﬁc Workﬂow and Knowledge Infrastructure in Workﬂow Management.

References
1. Ewa Deelman, James Blythe, Yolanda Gil, Carl Kesselman, Gaurang Mehta, Sonal
Patil, Mei-Hui Su, Karan Vahi, and Miron Livny. Pegasus: Mapping scientiﬁc workﬂows onto the grid. In European Across Grids Conference, pages 11–20, 2004.
2. Jia Yu and Rajkumar Buyya. A taxonomy of scientiﬁc workﬂow systems for grid
computing. SIGMOD Record, 34(3):44–49, 2005.
3. Shawn Bowers and Bertram Lud¨
ascher. An ontology-driven framework for data
transformation in scientiﬁc workﬂows. In DILS, pages 1–16, 2004.
4. Claudia Bauzer Medeiros, Gottfried Vossen, and Mathias Weske. WASA: A
workﬂow-based architecture to support scientiﬁc database applications (extended
abstract). In Database and Expert Systems Applications, pages 574–583, 1995.
5. Daniela Grigori, Fran¸cois Charoy, and Claude Godart. Anticipation to enhance
ﬂexibility of workﬂow execution. In DEXA, pages 264–273, 2001.
6. Sandip Agarwala, Greg Eisenhauer, and Karsten Schwan. Lightweight morphing
support for evolving middleware data exchanges in distributed applications. In
ICDCS ’05: Proceedings of the 25th IEEE International Conference on Distributed
Computing Systems (ICDCS’05), pages 697–706, Washington, DC, USA, 2005. IEEE
Computer Society.

