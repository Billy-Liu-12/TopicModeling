Computational Science: An Intermingling of
Science, Mathematics, and Computer Science
Frederick R.W. McCourt
Departments of Chemistry and Physics, University of Waterloo, 200 University
Avernue West, Waterloo, Ontario, Canada N2L 3G1

Abstract. The development of a full undergraduate program in computational science, with both a broad-swath academic plan and four
specialization plans, one each in biochemistry, chemistry, earth sciences,
and physics, is described. The reasons behind the establishment of the
program are presented, and the evolution of the program over the past
ﬁve years is described. Some of the initial diﬃculties encountered in setting up such a cross-disciplinary and relatively ﬂexible program of this
type are also pointed out.

1

Background Information

Some background information regarding the University of Waterloo (UW) will be
useful prior to discussing our program in Computational Science. UW is what can
be referred to as a medium–sized comprehensive university, with six Faculties:
Applied Health Sciences, Arts, Engineering, Environmental Studies, Mathematics, and Science. It was founded in 1957 as an engineering school with auxiliary
faculty members for the teaching of those arts and science courses required for
graduates of the academic programs to meet the speciﬁcations required for accreditation as professional engineers. All academic programs were oﬀered only
under a concept referred to as ‘cooperative education’, in which students alternate academic terms of four months duration with ‘work terms’ of four months
duration, during which they are employed by a company or agency participating
with the University of Waterloo in one of its ‘work–study’ programs.
Independent Arts and Science Faculties had evolved by 1960, each oﬀering
academic programs, leading to BA and BSc degrees, respectively. They both
began by oﬀering programs only in the usual mode of sequential four–month
Fall/Winter terms per year; not much later, however, the Science Faculty saw
the advantages of oﬀering some of its programs in the cooperative education
mode developed by the Faculty of Engineering. It was not for another ﬁfteen
or so years that the Faculty of Arts also began oﬀering some of its academic
programs in the cooperative mode. Today, the University of Waterloo has over
10,000 coop students, spread over all six Faculties. Graduate programs in most
areas of endeavour had also emerged by the mid-1960s.
This new university recognized quite early on that digital computers were going to revolutionize our society and, consequently, in the mid–1960s a decision
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 193–198, 2006.
c Springer-Verlag Berlin Heidelberg 2006

194

F.R.W. McCourt

was taken to create a Faculty of Mathematics centered on the discipline of Computer Science, but oﬀering both graduate and undergraduate degrees in all areas
of mathematics as well as in the area of computer science. This initiative was
a bold one forty years ago: its success can be seen in the approximately 3500
undergraduate students who register annually in the Faculty of Mathematics,
with about two–thirds of them working towards a baccalaureate in computer
science.
The University of Waterloo is probably best known for its Faculties of Engineering and Mathematics, speciﬁcally for their electrical and computer engineering and computer science academic programs, respectively. The Faculty
of Science is the fourth largest (or third smallest) Faculty at the University of
Waterloo and is made up of four Departments and two Schools: Departments of
Biology, Chemistry, Earth Sciences, and Physics, and Schools of Optometry and,
most recently, of Pharmacy. Each academic unit has its own degree program(s);
in addition, some units partner with others to oﬀer joint programs, such as Biochemistry, Bioinformatics, Chemical Physics, and Geochemistry, or participate
in the broader Faculty of Science programs, such as Honours Science, Honours
Science and Business, and Honours Computational Science, via specializations
in their core disciplines.
The Computational Science program is the youngest full program in the Faculty of Science and is also one of the youngest programs at the Univeristy of
Waterloo. A set of program plans was borne out of the perception that there
was a need in modern society for graduates of an academic program in which the
combination of a thorough grounding in a conventional area of science, coupled
with a signiﬁcant degree of mathematical sophistication and a strong computer
science background, would create graduates who would be prepared to tackle a
wide variety of problems arising in today’s world.

2

The UW Computational Science Program

The Computational Science program at UW has been designed to provide a
series of academic plans for students who either wish to attain fairly intensive
coverage of one of the traditional areas of science while simultaneously acquiring
a broad background in mathematics together with an in–depth knowledge of
computer science or who wish a broader but less intensive coverage of all of
the traditional areas of science but with the same coverage of mathematics and
computer science. The program has four academic plans that focus upon speciﬁc
traditional areas of science, namely biochemistry, chemistry, earth sciences, and
physics, as areas of specialization, plus one academic plan for those who do not
wish to specialize in one speciﬁc area of science. The Biology Department did not
participate in this program as it had already joined forces with the Computer
Science Department in mounting a four–year degree program in Bioinformatics.
A typical full program plan at UW consists of forty term lecture courses (each
comprised of 33 lectures) plus any other speciﬁed laboratory and/or ﬁeld courses.
All Computational Science program plans have a common set of seventeen core

Computational Science

195

Table 1. Core courses for all Computational Science program plans
Faculty

Course Number

Basic Course Content

Science

CHEM 120/120L
CHEM 123/123L
EARTH 121/121L
EARTH 122/122L
PHYS 121/121L
PHYS 122/122L

Properties of matter
Chemical reaction rates, equilibrium
Natural geological processes
The Earth’s history and resources
Particle dynamics, conservation laws
Wave motion, gravitation, and heat

Engineering ENVE 224

Probablilty and statistics

Mathematics MATH 114
MATH 127
MATH 128
MATH 227
MATH 228
CS 123
CS 126
CS 230
CS 234
CS 370

Linear algebra
Diﬀerential calculus
Integral calculus
Multivariate and vector calculus
Ordinary diﬀerential equations
Programming principles using JAVA
Principles of software development
Computers and computer systems
Data types and structures
Numerical computation

term courses, consisting of six freshman science courses with accompanying laboratories, six mathematics courses, and ﬁve computer science courses. This set
of courses can be found in Table I. Each student in the program must also select
two additional elective junior or senior level computer science courses to complete the basic core component of the program. The remaining twenty–one term
courses depend upon the speciﬁc plan chosen by a student: however, because of
the need to acquire a reasonable depth of knowledge in mathematics and computer science in addition to the basic areas of science, plans in this program
contain at most six free electives.
Each specialization plan contains a set of courses that are considered core
for the particular specialization, a number of courses from which to select specialization electives, plus a few free electives, while the non-specialized plan has
an additional core set of seven chemistry, four earth science, and four physics
courses, for a total of ﬁfteen additional core science courses, plus six free electives.
The structures of the various plans are shown in Table II.
We believe that the current structures of the Computational Science program
plans allow students a reasonable level of ﬂexibility for choosing courses that
are of interest to them and to tailor an academic plan that suits their perceived
needs. The program is challenging, and has so far attracted a number of very
capable, even gifted, students, judging from the number from this program who
make the Dean’s Honours list each term.
The seven specialization electives associated with the Biochemistry Specialization have been structured to allow students to obtain three–course sequences
at the sophomore level and above in at least two of the traditional analytical,

196

F.R.W. McCourt
Table 2. Course structures for Computational Science plans at UW
Plan

Number of term courses
Basic Core Other Core
Electives
Free
Specn

No Specialization

19

15

–

6

Specialization:
Biochemistry
Chemistry
Earth Sciences
Physics

19
19
19
19

10
8
11
12

7
7
5
4

4
5
5
5

inorganic, and organic chemistry subdisciplines. Similarly, the seven specialization electives associated with the Chemistry Specialization have been structured
so as to ensure that students will complete three–course sequences in physical
chemistry plus two of the other three traditional subdisciplines of chemistry.

3

Growing Pains with the Initial Version of the Program

Two problems were encountered when this program was ﬁrst oﬀered in 2001.
First, students were being asked to choose a particular plan of study upon entry
into their freshman year: this had the consequence that changes in plan were
diﬃcult to handle after the ﬁrst term had been completed, as each specialization
plan already contained at least one required specialization core course by the
end of the Winter term. Second, the initial version of the program had calculus,
chemistry, computer science, and physics/earth science courses in each of the
two freshman terms, plus a linear algebra course in the ﬁrst term and either a
free elective or a specialization core course in the second term. This turned out
to be the more serious problem for the initial group of 35 students: not only did
they ﬁnd all these courses rather demanding, but also there seemed to them to
be almost no overlap of content. Moreover, as they were also adapting to the
signiﬁcant diﬀerences between life in high school and university environments,
many of the students found the program overwhelming, with the end result being
that a number of them fell by the wayside.
To make our Computational Science program more ﬂexible, and at the same
time to help students undergo a less demanding adaptation into the university
environment, all ﬁve plans were rearranged to allow the creation of a common
ﬁrst year. This not only alleviated much of the pressure on the freshman group,
but also allowed the decision of whether to specialize or not to be made at the
beginning of the sophomore year rather than prior to starting university. At
present, all students entering this program share a common ﬁrst year of study
with two term courses each of freshman calculus, chemistry, earth sciences, and
physics, and one term course in each of linear algebra and introductory computer science programming principles. Upon completion of this set of common

Computational Science

197

introductory courses, students are asked either to choose one of the four areas
of specialization or to indicate that they wish to remain in the broader nonspecialized plan.
An ongoing concern for students in this program is the number of timetable
conﬂicts that can arise due both to the cross–disciplinary nature of the program
itself and to its crossing of Departmental and, especially, Faculty lines. Because
the number of students in the program is still relatively small (roughly ﬁfteen to
twenty students in each year of the program) and a smaller still number of students take any particular course following the freshman year, there is not much
opportunity to negotiate time changes for lecture courses that are in conﬂict.
This requires the program advisor to be thoroughly conversant with all available
antirequisite courses and to be able to suggest and/or approve changes to individual plans to allow similar, though not necessarily equivalent, courses to be
substituted as needed in order to facilitate successful completion of a particular
student’s academic plan.

4

Some Comments and Observations

After ﬁve years of operation, despite having had to go through a number of
growing pains, we have concluded that our Computational Science program can
be considered a success. While it does not yet draw as many students as we had
originally envisaged, this may be in part due to some of the speciﬁc growing pains
mentioned above and in part to the fact that we have not been overly aggressive
in promoting our program, especially in Ontario high schools. Support for this
latter observation comes from anecdotal evidence based upon discussions with
students who have transferred into our program from other Faculty programs
on the UW campus, during which comments have been made to the eﬀect that
had they been aware of the UW Computational Science program when they
graduated from high school, they would have entered it directly at that time. This
may in large part be because while the Computational Science program has equal
billing with Departmental programs (such as those in Chemistry and Physics) in
the Faculty of Science brochure sent out to all Science applicants, students who
have applied to other Faculties would not normally receive information about
this particular program.
We haven’t been able to obtain any signiﬁcant statistics on post–graduate
employment or studies as we have yet to graduate a full class from this relatively new program. However, one potentially relevant measure of success of
the Computational Science program lies in the success rate for placement of the
roughly two–thirds of our students who follow the cooperative mode of study:
there have been almost no work placement problems, even though students in
our program compete directly for these work–term positions against students
from both the Computer Science and Computer Engineering programs at UW.
This observation is further corroborated by the level of satisfaction with the
performance of our students expressed by the coop work–term employers. Further, we are aware of two of our forthcoming graduates who have applied to

198

F.R.W. McCourt

carry out graduate work in chemistry and physics departments in the USA and
in Canada: one has already informed us that he has been accepted by a major
Canadian graduate school in chemistry, conditional upon successful completion
of his Computational Science with Chemistry Specialization degree at UW. Of
course, Computational Science students and graduates have diﬀerent overall skill
sets than do CS students and graduates: on the one hand, they take roughly half
the number of CS courses taken by CS students, and on the other hand, they
have both a broader and deeper coverage of traditional Science subjects.
It is worth pointing out that a number of computationally intensive courses
have been created in the Faculty of Science at the University of Waterloo over
the past four years, mainly arising because of the existence of a core of computationally literate students, some of whom are associated with the Computational
Science program itself. Courses that fall into this category are: BIOL 366 (Introduction to Bioinformatics), BIOL 382 (Computational Modelling of Cellular
Systems), CHEM 355 (Computational Physical Chemistry), CHEM 452 (Computational Quantum Chemistry), CHEM 465 (Molecular Modelling and Protein Folding), PHYS 239 (Scientiﬁc Computation 1; numerical analysis applied
to physics problems), PHYS 339 (Scientiﬁc Computation 2; Monte Carlo and
molecular dynamics methods). There are also a number of other courses that
have become available through a new complementary Computational Mathematics program introduced very recently by the Faculty of Mathematics. While
this newer computationally oriented program has a number of aims in common
with our Computational Science program, it has a stronger mathematics focus
and does not have the strong science background of our our program. Finally, it
should be said that additional computationally intensive courses will be created
in the next few years, all of which can enrich the experience of students in our
Computational Science program.

5

Conclusion

Academic plans of the type oﬀered under the aegis of a Computational Science
program should appeal to a select group of modern students who have a desire
to couple their interests in science with their fascination for digital computers
and the power of numerical procedures and simulation methods. Computational
Science provides both a suﬃcient challenge to good students and a recognition
of what can be accomplished when the power of digital computation is combined
with in–depth scientiﬁc training.

