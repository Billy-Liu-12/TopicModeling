An Ontology for Network Services
Pedro Al´ıpio, Jos´e Neves, and Paulo Carvalho
Universidade do Minho, Departamento de Inform´
atica,
4710-057 Braga, Portugal
{pma, jneves, pmc}@di.uminho.pt

Abstract. Most of the network service speciﬁcations use XML based
models. However, as XML imposes a hierarchical structure, several types
of relations may not be modeled. Therefore, richer speciﬁcation languages
are required in order to specify all network services vocabulary and how
it relates with management tasks and with network conﬁguration. This
paper presents an ontology based model for network services, overcoming
those semantic gaps and creating a better ground for reasoning over
services fostering their self-conﬁguration.

1

Introduction

Many network service management tasks such as service administration, service
quality monitoring, service conﬁguration, and resource optimization are often
performed manually. This work can be time-consuming and very sensible to
human errors. Moreover, it requires a growing number of highly skilled personnel,
bringing huge costs to Internet Service Providers (ISPs).
Frequently, ISPs network services are expressed through Service Level Agreements (SLAs), where a technical part called Service Level Speciﬁcation (SLS) is
included. Several proposals of SLA and SLS speciﬁcation have been presented,
fostering a common ground for interoperability among domain and interdomain
network service conﬁguration agents. However, none of those speciﬁcation is expressive enough to include the necessary knowledge to map service requirements
into network conﬁgurations.
An ontology deﬁnes a common vocabulary for information interchange in
a knowledge domain [1] and allows: (i) sharing common understanding of the
structure of information among people or software agents; (ii) the reuse of domain
knowledge; (iii) making domain assumptions explicit; (iv) separating domain
knowledge from the operational knowledge; (iv) analysing domain knowledge [2].
This work suggests the use of an ontology for ISP network service speciﬁcation
instead of the traditional approaches.
This paper has the following structure: related work and the state-of-the-art in
network service speciﬁcation is presented in Section 2; the concepts and relations
used to model service vocabulary and conﬁguration mappings are explained in
Section 3; ﬁnally, conclusions and future work are presented in Section 4.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part III, LNCS 3993, pp. 240–243, 2006.
c Springer-Verlag Berlin Heidelberg 2006

An Ontology for Network Services

2

241

Related Work

Network service speciﬁcations, apart from being a key aspect for QoS provisioning, provide a valuable input for network conﬁguration. Therefore, deﬁning
a network service ontology, including SLA semantics and vocabulary is crucial
for ensuring Quality of Service (QoS). Several working groups are committed to
SLS deﬁnition and management [3, 4, 5, 6]. Usually, XML is the preferred network services speciﬁcation language. However, pure XML forces a hierarchical
structure and it does not allow complex relations between objects.
Lately, ontologies are being used to bring semantics to the World-Wide Web
(WWW). The WWW Consortium (W3C) developed the Resource Description
Framework (RDF) [7], a language for encoding knowledge on Web pages to make
it understandable to electronic agents searching for information. More recently,
several ontology speciﬁcation languages were developed with more expressive
constructs aimed at facilitating agent interaction on the Web [8, 9].
Most of the ontology speciﬁcation languages rely on XML and RDF only as
underneath platform [8, 10, 9]. As a result, these ontologies may be validated,
parsed or transformed with regular XML tools. Nevertheless, reasoning (queries,
veriﬁcation and taxonomical inference) is often performed by knowledge based
systems that use other formalisms.

3

Network Service Specification Ontology

The main objective of the ontological representation of network services is to create a common vocabulary, including a service classiﬁcation, and to map service
attributes into network conﬁgurations. The model comprises three abstraction
layers: (i) a higher level including the SLA and the service classiﬁcation; (ii) a
medium level including service level speciﬁcation sections, as it is presented in
[6]; (iii) a lower level, including the mappings to network conﬁgurations following
the guidelines for Diﬀerentiated Services (Diﬀserv) [11].
3.1

Service Classification

Network traﬃc is classiﬁed in three groups: (i) Network Control for routing
and network control function; (ii) Operations, Administration and Management (OAM) for network conﬁguration and management functions; and (iii)
the User/Subscriber traﬃc group for ISP functions which may be divided into
nine diﬀerent categories, namely: Telephony service; Signalling service; Multimedia Conferencing service; Real-time Interactive service; Multimedia Streaming
service; Broadcast Video service; Low Latency Data service; High Throughput
Data service; and Default service class.
Although User/Subscriber services are classiﬁed into nine groups, some are
used by the same application category. In this model, four application categories are considered: (i) Application Control, including the Signalling service;
(ii) Media-Oriented, including Telephony, Broadcast Video, Multimedia Conferencing and Real-time Interactive services; (iii) Data, including the Low Priority,

242

P. Al´ıpio, J. Neves, and P. Carvalho

Low Latency and High Throughput services; and (iv) Best Eﬀort, including the
Default Service. This ontology also includes a relationship between an SLA and a
service speciﬁcation, where each SLA may in fact include several diﬀerent service
classes, as some applications require signalling.
3.2

Service Level Specification Sections

The SLS ontology includes aggregation relations representing the following SLS
sections: (i) the traﬃc classiﬁcation section, deﬁning the ﬁelds which identify an
individual or aggregate ﬂow; (ii) the traﬃc conditioning section, containing rules
to identify in or out-of-proﬁle traﬃc; (iii) the scope of the service, deﬁning the
boundaries of the region over which the service will be enforced; (iv) the expected
QoS performance parameters; (v) the service scheduling section, deﬁning the
time period when the service is available; and (vi) the service reliability section,
deﬁning parameters related to the consistency and reliability of the service to
be provided.
3.3

Network Configuration

This level of the ontology model should be observed as node centric instead of
service centric as conﬁgurations are in fact performed on the nodes. In the ISP
network there are two main types of nodes: edge nodes (Ingress and Egress), and
core nodes. Edge nodes are far more complex as they include policers and classiﬁers, while core nodes just assure that the Per-Hop Behaviour (PHB) speciﬁed
by the ingress is kept for each packet. As a result, the following conﬁgurations
are possible: (i) conﬁguration of the queueing disciplines; (ii) conﬁguration of
queue congestion control, and (iii) mapping classes into queues.
Associated to a node link, there may be both priority queueing and rate
queueing disciplines. A priority queueing system is a combination of a set of
queues and a scheduler that empties them in priority sequence. When asked
for a packet, the scheduler inspects the highest priority queue, and if there is
data present returns a packet from that queue. Similarly, a rate-based queueing
system is a combination of a set of queues and a scheduler that empties each
at a speciﬁed rate. Each queue is associated to a DiﬀServ Code Point (DSCP)
and some queues may have congestion control trough Active Queue Management
(AQM) consisting of a variety of procedures that use packet dropping or marking
to manage the depth of a queue.

4

Conclusion and Future Work

This work intends to go much further than a service speciﬁcation. Service speciﬁcations usually include several sections, which describe the service requirements
with diﬀerent technical perspectives: traﬃc classiﬁcation, traﬃc conditioning,
scope, expected QoS, scheduling and service reliability. However, those speciﬁcations never include network conﬁguration and the related information. In
those approaches, mapping services into network conﬁgurations cannot be done

An Ontology for Network Services

243

conceptually, because XML is often used and it imposes a hierarchical structure, which is not adequate to specify complex relations between services and
network devices. By modeling network services in terms of an ontology, those
limitations are overcome. Moreover, several classes and relations may not be
explicitly deﬁned, as they may be deducted through inference rules.
Work is currently in progress to create a service speciﬁcation beyond its technical aspects, involving the administrative and management perspectives.
Acknowledgements. A PhD grant provided by Funda¸ca
˜o para a Ciˆencia e
Tecnologia (SFRH/ BD/ 17579/2004) is gratefully acknowledged.

References
1. Gruber, T.R.: Toward principles for the design of ontologies used for knowledge
sharing. Int. J. Hum.-Comput. Stud. 43 (1995) 907–928
2. Noy, N.F., McGuinness, D.L.: Ontology Development 101: A Guide to Creating Your First Ontology. Stanford Knowledge Systems Laboratory Technical Report KSL-01-05 and Stanford Medical Informatics Technical Report SMI-2001-0880
(2001)
3. Morand, P., Boucadair, M., P. Levis, R.E., Asgari, H., Griﬃn, D., Griem, J.,
Spencer, J., Trimintzios, P., Howarth, M., Wang, N., Flegkas, P., Ho, K., Georgoulas, S., Pavlou, G., Georgatsos, P., Damilatis, T.: Mescal D1.3 - Final Speciﬁcation of Protocols and Algorithms for Inter-domain SLS Management and Trafﬁc Engineering for QoS-based IP Service Delivery and their Test Requirements .
Mescal Project IST-2001-37961 (2005)
4. Diaconescu, A., Antonio, S., Esposito, M., Romano, S., Potts, M.: Cadenus D2.3 Resource Management in SLA Networks. Cadenus Project IST-1999-11017 (2003)
5. Alipio, P., Lima, S., Carvalho, P.: XML Service Level Speciﬁcation and Validation.
In: 10th IEEE Symposium on Computers and Communications (ISCC’05). (2005)
975–980
6. Goderis, D., T’joens, Y., Jacquenet, C., Memenious, G., Pavlou, G., Egan, R.,
Griﬃn, D., Georgatsos, P., Georgiadis, L., Heuven, P.V.: Service Level Speciﬁcation Semantics, Parameters, and Negotiation Requirements. Internet-Draft,
drafttequila-sls-03.txt (work in progress) (2003)
7. Brickley, D., Guha, R.: Resource Description Framework (RDF) Schema Speciﬁcation. http://www.w3.org/TR/rdf-schema, W3C (1999)
8. Hendler, J., McGuinness, D.: Darpa agent markup language. IEEE Intelligent
Systems 15 (2000)
9. Bechhofer, S., van Harmelen, F., Hendler, J., Horrocks, I., McGuinness, D.L., PatelSchneider, P.F., , Stein, L.A.: OWL Web Ontology Language Reference. W3C
(2004)
10. Connolly, D., van Harmelen, F., Horrocks, I., McGuinness, D.L., Patel-Schneider,
P.F., Stein, L.A.: DAML+OIL Reference Description. W3C (2001)
11. Babiarz, J., Chan, K., Baker, F.: Conﬁguration Guidelines for DiﬀServ Service
Classes. Internet Draft (work in progress) (2005)

