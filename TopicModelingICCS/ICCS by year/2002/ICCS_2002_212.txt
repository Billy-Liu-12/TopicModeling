A Web-Based Problem Solving Environment
for Solution of Option Pricing Problems
and Comparison of Methods
Minas D. Koulisianis, George K. Tsolis, and Theodore S. Papatheodorou
High Performance Information Systems Laboratory,
Computer Engineering & Informatics Department,
University of Patras, 26500, Patras, Greece
{mik,gkt,tsp}@hpclab.ceid.upatras.gr

Abstract. In this paper we present a Problem Solving Environment
(PSE) for solving option pricing problems and comparing methods used
for this purpose. An open underlying library of methods has been developed to support the functionality of the proposed PSE. PHP, a serverside, cross-platform, HTML embedded scripting language, is exploited to
make the proposed environment available through the World Wide Web.
The PSE is not addressed to expert users only. It is simple in use, fast
and interactive, proposing dynamically selections depending on user’s input. The output is returned in ”real time”, in either simple or graphical
representation.

1

Introduction

In recent years a very important progress in the area of option pricing methodologies and implementations has been observed [3]. Large financial institutions
and many researchers have developed their own methods to solve a wide range
of option pricing problems, as fast and accurately as possible. However, availability of these methods for the single user/investor is in question, as there are
obviously great benefits for those institutions/investors using the best methods.
In the work presented in this paper, a significant number of option pricing
algorithms have been implemented, providing a library of solution methods. In
more detail, this library contains popular, widely applied methods [5, 17], as
well as new state-of-the-art methods, for some categories of options, proposed
recently by the authors [11–13]. To make such a library useful to a wide community of users, we need tools to provide remote access. For this reason, a Problem
Solving Environment (PSE) has been developed, providing services for remote
submission and monitoring of results from a Web-browser. The proposed PSE
is not addressed to expert users only. The end-user poses the problem through
a series of high-level definitions. The PSE facilitates this procedure providing
the necessary guidance. After processing the input data, the server returns the
results in simple arithmetic form (e.g. option prices) or through graphical representations (e.g. charts). A PHP platform [1] is used to enable communication
between the PSE and the underlying option pricing library.

2

Minas D. Koulisianis et. al.

The structure of the paper is as follows. In Section 2 we provide some option pricing basics. The main characteristics of the proposed PSE are discussed
in Section 3, while the underlying library of methods supporting the PSE is
described in Section 4. The detailed definition and solution process is given in
Section 5. Finally, conclusions and future work are stated in the last Section.

2

Option Pricing Basics

Options are kind of financial derivative products, which are based on one or
more underlying assets [17]. The underlying assets include stocks, stock indices,
foreign currencies, commodities and other. Options on stocks were first traded
on an organized exchange in 1973. Since then there has been a dramatic growth
in options markets and they are now traded on many exchanges throughout the
world. Huge volumes of options are also traded by banks and financial institutions.
There are two basic types of option contracts, calls and puts. A call (put)
option gives the holder the right (not the obligation) to buy (sell) the underlying
asset, by a certain date, for a certain price. The price of the contract is known as
the exercise price; the date in the contract is known as the expiration or exercise
date. American options can be exercised at any time up to the expiration date,
while European options can be exercised only on the expiration date itself. Most
of the options that are traded on exchanges are American.
The process of calculating the fair price for which an option should be offered in the financial markets is known as the option valuation or option pricing
problem. A number of input parameters are required and play significant role in
this calculation, namely risk-free interest rate, volatility of the option, dividend
yield, exercise price and expiration date.
In the current work we concentrate on stock options. A mathematical formulation commonly used for this class of options, is based on the well-known Black
Scholes model [2]. Closed form solutions are difficult to find [4, 17] most of the
times, e.g. for American options and, of course, they are favorable whenever they
exist. In case that closed form solutions can not be obtained, numerical methods
comprise an efficient approach [3, 17, 5, 8]. Other approaches include binomial or
multinomial trees and simulation methods [5, 17].

3

Proposed Problem Solving Environment

Generally speaking, a PSE must satisfy a number of basic requirements [9]:
1. Ease of use even by non-expert end-users.
2. Wide applicability.
3. Guided and user-friendly problem definition, including on-line help, validity
checks, dynamic PSE-user interaction and error handling.
4. Presentation and analysis of results in a meaningful and easily understandable way.

A Web-Based Environment for Option Pricing

3

A significant number of environments exist for solving option pricing problems, each of which imposes its own restrictions, has its own advantages and uses
its own underlying methods. Many of them are intended for professional use by
stock-exchange companies, financial investment houses, etc. and as a result they
are not offered for use by the single user/investor.
However, individual researchers, and a small number of financial companies,
have developed PSEs that can be accessed through the World Wide Web. Their
use and applicability are most of the times very restricted, because they deal
with a small number of cases. Morever, the methods used in some cases may
become slow and inefficient or even unable to achieve the desirable accuracy.
Representative underlying platforms supporting existing environments include
Java, JavaScript, or even Plain Html.
The PSE presented in this paper, first of all satisfies all basic requirements
mentioned above. More than that it has a number of very important advantages
over the existing environments just mentioned:
1. Underlying library of methods: An underlying library of algorithms constitutes the basic component of the proposed PSE. A wide range of methods
from traditional to new, state-of-the-art, methods recently proposed by the
authors, have been implemented and comprise the basis of this library. The
user is given the ability of selecting methods and defining not only financial
but also, ”numerical” parameters, interfering in this way directly with the
underlying library.
2. Availability through the Web: An efficient web technology is used to support
implementation of the proposed PSE under the World Wide Web. More
specifically, a PHP platform enables communication between the underlying
option pricing library and the end-user working on a Web-browser. The
availability of the PSE through the web, facilitates access from different
places and long distances. At the same time, due to the PHP platform used,
user submissions are satisfied in ”real time”.
3. Simplicity / Guidance / Functionality: The user defines his problem through
a series of simple steps. The PSE provides the necessary guidance, interacts
dynamically with him/her and proposes selections that depend on input.
Morever, mechanisms like on-line help or a variety of validity checks ensure
for the proper functionality of the PSE.
4. Graphical Representation of the Output: The results returned to the user are
not exclusively of numeric type. Most of the times, a graphical representation
of the output is displayed.
5. Open Architecture: The proposed PSE is open. The underlying library of
methods can be enriched by addition of new ones. The web front-end can be
easily extended to support new methods.
As a drawback, one can mention the absence of an underlying expert system. The PSE proposes a list of methods, not the best one. To overcome this
deficiency, a comparison menu is provided through which the end-user has the
option to compare methods of the same type for a given problem. The resulting

4

Minas D. Koulisianis et. al.

charts of execution times lead directly to conclusions about the efficiency of the
compared methods.
The proposed PSE can be accessed through a typical Web-browser. Its architecture is apparent in Figure 1. First the user is guided to define the problem
and choose from a variety of proposed solution methods. At the same time,
parameters that are critical for the solution process are entered. After all necessary input has been provided, the problem is directed to the server for solution.
There, a Web-server takes all responsibility to call the required methods from
the underlying library and pass the required input parameters to them. The
output produced is finally returned to the browser. Typical output consists of
option prices and other valuable information like execution times. As already
mentioned, communication between the browser and the server is based on an
underlying PHP platform the graphical capabilities [1] of which are exploited to
produce chart representations.
End-User

Problem
Definition

Server

Submit problem

PHP

Platform

Problem
Solution

Return results

Web
Browser

Underlying
Option
Pricing
Library

Fig. 1. Proposed Problem Solving Environment Architecture

4

Underlying Option Pricing Library

A plethora of stock option pricing methods have been developed to support the
proposed PSE. Generally speaking, they can be enlisted in two basic categories:
popular, widely used methods that can be found in the literature of the past
three decades, and new methods, proposed recently by the authors. Up to this
time the library contains methods for pricing European and American options
on stocks. A categorization of these methods is given in Figure 2.
For European options, three basic categories of methods have been developed, namely closed form, grid and tree. Closed form solutions come directly
from the Black-Scholes Partial Differential Equation [2]. The other categories
are essentially based on numerical approximations. Tree methods (binomial and
multinomial) are very easy to implement but they are generally inefficient. Grid

A Web-Based Environment for Option Pricing

5

Options

European

Other

Grid

Closed form Tree

American

Other

Simulation Grid

Tree

LCF Moving Boundary
Explicit
Finite
Difference

Collocation
Finite
Difference

BlackScholes
Multinomial
PSOR
MI
DIM-2 Binomial Multinomial
Implicit
Monte
Binomial
CrankIPSOR DIM
Carlo
Nicholson 3-diagonal 5-diagonal
Explicit

Fig. 2. Categorization of methods supported by the underlying option pricing library

methods have the advantage of providing option prices for a range of underlying
asset prices based on a preselected grid; a discretization method plays significant role in the efficiency and performance of these methods. Discretizations
supported by the underlying library up to now include Finite differences [17]
(explicit, implicit and Crank Nicholson) and Collocation [15] (3-diagonal and
5-diagonal).
For American options, again grid methods, either based on Linear Complementarity Formulation (implicit) [6, 10] or making explicit use of the moving
boundary (explicit) [14, 16] as well as tree methods (binomial and multinomial)
[17, 5] have been implemented. The library contains five implicit grid methods:
two iterative techniques, namely Projected Successive OverRelaxation (PSOR)
[7] and Improved PSOR (IPSOR)[12], and three direct techniques, namely Moving Index (MI) [11], Direct Inverse Multiplication (DIM) and Stable DIM (SDIM)
[13]. Monte Carlo simulation can be also used, although it is not an efficient approach [17].
As already mentioned, the underlying library is open, and new methods can
be added at any time to cover other kinds of financial derivatives (e.g. options
on indices, currencies or commodities with simple or exotic payoff functions [5]).

5

Problem Definition and Solution Process

In this Section, we describe the sequence of the steps followed for problem definition and solution. As described in Figure 3, the user is first prompted to select

6

Minas D. Koulisianis et. al.

the type of problem (exercise policy and option type), enter the necessary input
parameters and choose operation (pricing and comparison). In response, the PSE
proposes a list of available methods. Selecting one of them, the user is prompted
again to define more parameters and make further selections, which depend on
the specific method (e.g. choose a discretization method and define a grid, if a
grid method has been selected). In case that a grid method has been selected,
the output provided is a chart of option prices as a function of the underlying
asset price and the user has the capability of getting ”immediately” option prices
for every value of the underlying asset price. For another PSE function, the user
may select comparison of methods for a given problem, getting execution time
charts. In this case, the PSE again is responsible for proposing a list of available
methods based on selections and data provided by the user.

Option
Type

Exercise
Policy

Execution
Time
Chart

Discretization
Method

Input
Variables

Pricing or
Comparison

Grid Methods Input Variables
for Available
Methods

Comparison

List of
Methods

Other Methods
Pricing

Option
Price

Underlying
Asset Price

Option
Price

User selection

Option
Price
Line Chart

Underlying
Asset Price

User data entry

Discretization
Method

Grid
Methods

Input
Variables

Method

Other Methods

PSE proposition (list of selections)

PSE production of results

Fig. 3. Problem definition and solution process

For reasons of clarity, we now describe in more detail an indicative problem
solution, giving exactly the steps followed through a web-browser. First of all,
the end-user must determine if the option is European or American, call or put,
if he/she is going to execute simple option pricing or comparison and finally
enter the necessary input parameters, i.e. exercise price, interest rate, volatility,
dividend and time to expiration. This is done, by making the suitable selections
and completing the empty fields onto the form provided for this function (see
Figure 4).

A Web-Based Environment for Option Pricing

7

Fig. 4. First stage of problem definition

The next step depends on the operation chosen in the first step. If ”pricing”
operation has been asked then the user can select only one of the available
methods and define the required parameters. For example, if a grid method was
selected a discretization method as well as a number of grid points and a number
of time steps are necessary. Morever, if the method is iterative, a termination
error should be entered. For the IPSOR method, an increment factor (see [12] for
details), must also be defined. For the binomial method, only the number of time
steps and the underlying asset price must be entered (other fields become noninput fields). If operation ”comparison” was selected in the first step, then the
user has the capability of comparing methods of the same type for the solution of
the same problem. In this case he/she must select the methods to be compared
and define the necessary input parameters. Only methods of the same type can
be compared, otherwise the comparison does not make sense. For example, it
is meaningful to compare MI with PSOR and DIM, because they are all grid
methods, but none of them can be compared with the binomial method because
it is a tree method. The complete picture is given in Figure 5.
For reasons of reporting, in all cases, the output has the form of a summary
containing both information of problem definition and the results obtained. The
form of the output primarily depends on the operation chosen in the first step
and the method selected in the second step. For example, for grid methods, it
has the form of a chart and the user has the capability of getting option prices

8

Minas D. Koulisianis et. al.

Fig. 5. Sample screen of the second stage of problem definition

for various values of the underlying asset. Figure 6 shows a sample screen for
this case.
If a comparison were executed, then a chart of execution times for the selected
methods is returned to the user (see Figure 7).
Finally, we should mention that a significant number of validity checks are
performed for every method and special care is taken when something goes
wrong. For example, if DIM method is selected, then a stability check takes place
before execution. In case that a stability problem exists, the user is informed that
he can not execute this method for the current input.
The proposed PSE can be accessed through the following URL:
http://iason.hpclab.ceid.upatras.gr/pricing/pricing.html

6

Conclusions and Future Work

In this paper we have presented a PSE for the solution of the option pricing
problem. The proposed PSE has a number of very desirable properties. First, it
is very simple and easy to use even by non-expert users. Second, it is available
through the World Wide Web and provides immediate answers to the user in
”real time”. Third, although an expert system does not support the current
environment, guidance is provided to the user and response of the PSE depends
on user selections. However, the main advantage of the proposed PSE over other

A Web-Based Environment for Option Pricing

Fig. 6. Sample screen of the output for the case of pricing

Fig. 7. Sample screen of the output for case of comparison of methods

9

10

Minas D. Koulisianis et. al.

existing ones is that it is based on an open, expandable, underlying library of
methods.
Implementation and addition of new methods, for the solution of option
(and other derivatives) pricing problems, in the open library, is the main task of
future work. Incorporation of these methods in the proposed PSE to make them
available for use through the World Wide Web is another important task. Other
types of comparisons are also under study and will be implemented to enrich the
functions performed by the PSE.

References
1. Atkinson, L.: Core PHP Programming. Prentice Hall, California (1999)
2. Black, F., Scholes, M.: The Pricing of Options and Corporate Liabilities. Journal of
Political Economy 81 (1973) 637–654
3. Broadie, M., Detemple, J.: American option valuation: new bounds, approximations
and a comparison of existing methods. Rev. Financial Stud. 9(4) (1996)
4. Broadie, M., Detemple, J.: Recent Advances in Numerical Methods for Pricing
Derivative Securities. Numerical Methods in Finance, Cambridge University Press,
Cambridge (1997)
5. Clewlow, L., Strickland, C.: Implementing Derivatives Models. Wiley, New York
(1998)
6. Cottle, R., Pang, J., Stone, R.: The Linear Complementarity Problem. Academic
Press, New York (1993)
7. Cryer, C.: The solution of a quadratic programming problem using systematic overrelaxation. SIAM J. Control vol. /bfseries 9, (1971) 385–392
8. Geske R. and Shastri K.: Valuation by Approximation: A Comparison of Alternative
Option Valuation Techniques. Journal of Financial and Quantitative Analysis (1985)
9. Houstis, E., Papatheodorou T., Rice, J.: Parallel ELLPACK: An Expert System for
the Parallel Processing of Partial Differential Equations. Intelligent Mathematical
Software Systems, North Holland, Amsterdam (1990) 63–73
10. Huang J. and Pang, J.: Option Pricing and Linear Complementarity. Journal of
Finance 2(3) (1998)
11. Koulisianis, M., Papatheodorou, T.: A ’Moving Index’ method for the solution of
the American options valuation problem. Mathematics and Computers in Simulation, Elsevier Science 54(4-5) (2000)
12. Koulisianis, M., Papatheodorou, T.: Improving Projected Successive OverRelaxation Method for Linear Complementarity Problems. 5th IMACS Conference on
Iterative Methods in Scientific Computing, Heraclion, Greece (2001)
13. Koulisianis, M., Papatheodorou, T.: Pricing of American Options using Linear
Complementarity Formulation: Methods and their Evaluation. working paper (2001)
14. Pantazopoulos, K.: Numerical Methods and Software for the Pricing of American
Financial Derivatives. phD Thesis, Purdue University (1998)
15. Papatheodorou, T.: Tridiagonal C 1 -Collocation. Mathematics and Computers in
Simulation 30 (1988) 299–309
16. Papatheodorou, T., Koulisianis, M., Hadjidoukas, P.: Numerical Methods for the
American Option Valuation Problem and their Experimental Comparative Evaluation. 16th IMACS World Congress, Lausanne (2000)
17. Willmott, P., Dewynne, J., Howison, S.: Option Pricing, Mathematical Models and
Computation. Oxford Financial Press, London (1993)

