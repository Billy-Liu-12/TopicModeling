Position of Modern Peer-to-peer Systems in the
Distributed Systems Architecture
Mojca Ciglari
University of Ljubljana – Faculty of Computer Science,
Trzaska 25, 1000 Ljubljana, Slovenia
mojca.ciglaric@fri.uni-lj.si

Abstract. Recently, the hottest development in the area of distributed
computing is the appearance of peer-to-peer systems. In the paper, we compare
the definitions of distributed systems with those of peer- to-peer systems and
stress the characteristic aspects.

1 Introduction
The idea of a distributed system is present ever since man first attempted to connected
two computers with each other. Today, the concept of distributed systems is no more
viewed as a novelty. Distributed systems are penetrating into virtually all areas of
computing. Their wide-spread usage is constantly encouraged with technical and
infrastructural development, and consequently several new ideas are emerging that
even increase their importance and popularity. One of them is certainly peer-to-peer
computing.
The idea within peer-to-peer computing is to use the free edge resources and
combine their power into something like a giant file system or a supercomputer. In the
paper, we first outline a few definitions of a distributed system and apply them to
peer-to-peer systems. Further we mention some popular peer-to-peer applications,
with emphasize on their similarities and differences. We also discuss characteristics
of peer-to-peer concept and how they fit into the frame of distributed systems. .

2 Related Work
In the early 1978, a respected author P. H. Enslow recognized a "distributed
processing" cliché and a paper [Ens78] is a brilliant result of his attempt to clarify the
original meaning of a term distributed system. He discusses the five essential
characteristics that a new born class of systems should exhibit, envisions the course of
development and introduces a precise terminology whose value time didn't lessen a
bit.
Later, we observe several quite similar attempts to redefine the concept of
distribution. Let us mention the paper [Ozs91] which presents a three-dimensional
classification of the distributed database system implementation alternatives with

regard to heterogeneity, distribution and autonomy of system parts. The paper
[Leff91] presents a classification of transaction processing systems in a similar
manner. However, Coulouris et al in [Cou01] give a different definition, highlighting
the fact that the system components communicate only by passing messages.
Peer-to-peer systems became really popular with the thought-provoking success of
Napster in 2000. Since they represent such a new topic, we find only one significant
book [Ora01], which presents the goals of best-known peer-to-peer systems, their
problems and solutions used. On the other hand, a quite a few related sites and essays
can be found on the Internet. There are definitions from Peer-to-peer working group
[p2pwg], Shirky and Dougherty, well-known peer-to-peer analysts [Shi00], [Dou01],
share their opinions on what peer-to-peer computing is and what is not. Then there are
homepages of probably every peer-to-peer system, application or company among
others all of those mentioned in the paper, and most of them offer their overview,
design philosophy and at least some technical information.

3 What Is a Distributed System?
The idea of distributed systems is quite old: it emerged at the same time as the idea of
networking, but not until lately technical possibilities enabled their widespread use.
This section lists a few descriptions of a distributed system that will help us with the
characterization of peer-to-peer systems in the remainder of the paper.
Five characteristics
Enslow [Ens78] states that at least four physical components of a system might be
distributed: hardware, data, processing, control (operating system). Their mutual
interleaving, dependency and (co)operation are characterized with the following
features:
a. Multiple (possibly heterogenous) resources, dynamically assigned to specific
tasks.
b. Physical distribution of these resources.
c. High-level operating system on top of unique local OS-es (at least as a
design philosophy).
d. System transparency (the server does not have to be identified).
e. Cooperative autonomy – interaction of physical and logical resources.
3D Cube
Later, the distinction between distributed database systems and distributed processing
systems somewhat affected also the characteristics and classification. Distributed
database systems took shape of a three dimensional cube [Osz91] regarding to the
degrees of control, autonomy and heterogeneity decentralization, as shown in Fig. 1.
Interoperable systems as a subclass of multidatabase (heterogenous database
systems) are further described in [Bri92] as most loosely coupled information-sharing
systems. Global function is limited to simple data exchange and does not support full
database functionality. Communication protocols are usually standardized.

A Quintuple
Leff and Pu’s classification [Leff01] of distributed processing systems differentiates
them according to the values of the following five parameters: set of machines, set of
processes, degree of heterogeneity, set of logical data, set of sites. Possible values are
one and many or low and high degree. The system is then described by the quintuple
of the above values.
We can capture the essential features of each system and from that gather the
potential benefits and/or problems known from similar configurations.
Distribution (single site / several sites)

Autonomy (no, some, full)

Heterogeneity (homogenous, heterogeneous)
Fig. 1: Three dimensions of a distributed database system.
Passing Messages
On the first page of their very comprehensive book [Cou01], Coulouris et al present
us with a very simple and effective definitionon. HW or SW components located at
networked computers communicate and coordinate their actions only by passing
messages. No high-level control is required.

4 What is Peer-to-Peer?
Peer-to-peer is a catchword today, but it is not yet commonly agreed what it denotes.
Is it a system, concept, architecture or merely an idea? Peer computers are those who
have equal standing, as in rank or class. The idea of peer application architecture
seem appropriate considering application architecture gradation: stand-alone
applications, client and server applications, peer-to-peer applications – exchanging the
roles of client and server.
The Internet was originally designed as a peer-to-peer system, but soon the clientserver concept prevailed and Internet became more and more centralized around a few
sites that generate a majority of all the traffic.
With the expansion of the Internet, we observed how the hosts divided their roles:
some of them are servers, they offer services and data, while the majority of small,
usually home computers (PCs) act as clients. These are sometimes referred to as an
edge of the net. Clients just need to know how to ask a question (request a service)
and receive a response. If a person with such a client machine wanted, for example, to
publish his homepage, he often found a well-known server and uploaded it there.

With the today's form of "commercial Internet" we observe less cooperative and
more selfish behaviour of its users. The idea within peer-to-peer computing is to use
the free edge resources and combine their power into something like a giant file
system or a supercomputer. The cooperation should be enforced by means of system
design: either the system would not work properly without cooperation, or it would
reward proper behaviour and punish misbehaviour. (Napster set an example of such
motivating design: while one was downloading his favourite mp3, the others were
able to download files from his own collection.)
Sharing resources
P2P working group defines peer-to-peer computing as sharing of computer resources
and services by direct exchange. Further it lists four bussines areas that would benefit
from it: collaboration, edge services (caching), distributed computing and resources,
intelligent agents.
Edges of the net
Shirky [Shi00] is more precise: P2P is a class of applications that take advantage of
resources (storage, cycles, content, human presence), available at the edges of
Internet. He also suggests a “litmus test” for P2P system, considering only variable
connectivity and high autonomy of network edges.
PIE – Presence, Identity, Edge
Dougherty [Dou01] cites and explains Shirky’s definition. He introduces the term PIE
to describe the core elements of peer-to-peer applications: Presence (is the resource
online?), Identity (uniqueness of the available resources) and Edge resources
(typically PCs).

5 P2P in a Distributed System Architecture
Now let's go back to the definition and characteristics of distributed systems.
The idea within peer-to-peer computing is to use the free edge resources and
combine their power into something like a giant file system or a supercomputer.
(Edge resource: a personal computer, often acting as a client machine, typically with
low average resource usage)
Comparison with the Enslow's definition of distributed system:
• Multiple heterogenous resources
YES
• Physical distribution
YES
• High-level OS
a kind of
• System transparency
some forms
• Cooperative autonomy
YES (high autonomy)
In the context of peer-to-peer systems, 25 years later we absolutely agree with
statements a and b. As for c, we notice the absence of high-level operating system that

would unify and integrate the control of the components. On the other hand, it could
be replaced with the adherence to certain standards, protocols, middleware etc.
System transparency concept is further extended into several classes and we
discuss them separately in the next subsection.
Level of autonomy is a very important element. Enslow’s idea of cooperative
autonomy meant that, although able to refuse a request, the components are basically
willing to cooperate. In peer systems, if possible, level of autonomy is even higher.
Any resource must be able to refuse a request or break up the communication or
processing at any moment
Ideal peer system is fully decentralized, with no hosts with special administrative
role. Building such a system can be quite difficult – many popular systems use so
called hybrid approach to introduce a sense of hierarchy in the system (Jabber,
Napster).
We do not observe a high-level operating system. Usually, control is distributed.
System components are peers, highly autonomous, able to decide for themselves
when and for how long they want to act as a part of the distributed computing system.
Transparency:
Enslow assumes that client doesn't have to worry about which of the servers would
carry out the request. In peer-to.peer systems, this is often true – depends on the
system category. If there are no dedicated servers than everyone can act as a server!
Colouris defines several types of transparency (based on ANSA’s definition):
• Access transparency: local and remote resources accessed in a same way:
SOMETIMES
• Location transparency: resources accessed without knowledge about their
location: YES.
• Concurrency transparency: several processes can use the resource
simultaneously and they don't have to know about the concurrency control:
YES
• Replication transparency: "invisible" multiple instances of a resource:
OFTEN - depends on the resource and implementation.?
• Failure transparency: concealment of hardware or software faults:
PARTIALLY due to replication.
• Mobility (migration) transparency: allows the movement of resources: YES.
(the concept of transience)
• Performance transparency: allows the system to be reconfigured as loads
vary. YES.
• Scaling transparency: system and applications can expand without changes
in structure or applications (system scales to accommodate a growing load).
YES
P2P system types – architecture
With an eye on overall system architecture, we can identify two types:
1. With a central server / coordinator that serves as a pointer to the other edge
computers, assigns the load and combines the results (Napster – file sharing;

Jabber – XML based instant messaging or passing info from one
user/process to another).
2. Without central server: pure P2P (Gnutella – protocol for file-sharing
purposes, idea of a transient Web: sources of information constantly
changing locations. Freenet)
Where possible, authors are inclined to eliminate server and make the system as
much decentralized as possible, using direct communication.
Popular Examples of Peer-to-Peer Systems
1. File or information sharing: Napster, Gnutella; FastTrack, Freenet (virtual
information store).
2. Distributed processing: Seti@home, Popular Power, Distributed Net
3. Real-time communication (chat, messaging): Jabber
4. Collaboration: Groove Networks

5 Conclusions
Obviously, peer-to-peer systems offer several advantages that end users already
recognized. In the paper, we tried to clarify the idea behind peer-to-peer with regard
to well known “distributed” ideas. We didn’t stress the problems that peer philosophy
is to overcome (legal, security etc), but rather surveyed the basic concepts in this
field.

References:
[Ens78] Enslow, P. H., Jr.: What is a "Distributed" Data Processing System?, Computer
January 1978, 13-21.
[Ozs91] Ozsu, M. T., Valduriez, P.: Distributed Database Systems: Where Are We Now?,
IEEE Computer, August 1991, 68-78.
[Leff91] Leff, A., Pu, C.: A Classification of Transaction Processing Systems, IEEE
Computer, June 1991, 63-75.
[Bri92] Bright, M. W., Hurson, A. R., Pakzad, S. H.: A Taxonomy and Current Issues in
Multidatabase Systems, IEEE Computer, March 1992.
[Cou01] Coulouris, G., Dollimore, J., Kindberg, T.: Distributed Systems Concept and Design,
3rd edition, Addison-Wesley, 2001.
[Ora01] Oram, A. (ed.): Peer-to-Peer: Harnessing the Power of Disruptive Technologies,
O'Reilly, 2001.
[p2pwg] Peer-to-peer working group, http://www.peer-to-peerwg.org/whatis/index
[Shi00] Shirky, C.: What is P2P… And What Isn't, The O'Reilly Network, November 2000,
http://www.oreillynet.com/pub/a/p2p/2000/11/24/shirky1-whatisp2p.html
[Dou01] Dougherty, D.: All the Pieces of a PIE, http://www.oreilly.com/catalog/p2presearch/
chapter/ch01.html, to appear in: Shirky, C., Truelove, K., Dornfest, R., Gonze, L.: 2001 P2P
Networking Overview, O’Reilly 2001 (in press);

