Learning Computational Methods for Partial
Diﬀerential Equations from the Web
André Jaun1 , Johan Hedin1 , Thomas Johnson1 , Michael Christie2 ,
Lars-Erik Jonsson3 , Mikael Persson4 , and Laurent Villard5
1

4

Alfvén Laboratory, Royal Institute of Technology, SE-100 44 Stockholm, Sweden,
jaun@fusion.kth.se, Web-page: http://pde.fusion.kth.se
2
Center for Educational Development, Chalmers, SE 412 96 Göteborg, Sweden
3
Unit for Pedagogy and Didactics, University, SE 412 96 Göteborg, Sweden
Electromagnetics, Chalmers Institute of Technology, SE 412 96 Göteborg, Sweden,
5
CRPP, Ecole Polytechnique Fédérale, CH-1015 Lausanne, Switzerland

Abstract. A course has been developed to learn computational methods
from the web1 and has been tested with postgraduate students from remote universities. Short video conferences or video recordings provide an
overview and introduce more detailed studies with numerical experiments
in Java-powered course notes. This enables every participant to work at
his own pace and to develop his intuition for ﬁnite diﬀerences, ﬁnite elements, Fourier, Monte-Carlo and Lagrangian methods. Assignments are
carried out in a regular web browser and are compiled into web pages
where the students explain with their own words, equations and programs
how to derive, implement and run computational schemes. Our experience shows that the technology is rapidly acquired from templates, using
practical examples for the advection, diﬀusion, Black-Scholes, Burger,
Korteweg-DeVries and Schrödinger equations.

1

Introduction

Computational methods are part of the problem-solving skills that need to be
mastered by professionals working in a quantitative ﬁeld. At an advanced level,
excellent textbooks generally provide a robust mathematical foundation for one
speciﬁc approach; they however miss the overview and examples, which are necessary at an introductory level to choose the right method and implement a
practical solution. Convinced that the Internet technology can be of great value
in this context, we created a problem-based learning environment where the acquisition of knowledge is motivated by well deﬁned tasks; in parallel, we switched
from a teaching-centered to a learning-centered course where the students explore
the material with the focus, order and pace they choose by themselves. This paper describes the learning method we tested 1997-2000 with summer courses
involving 10-20 participants geographically dispersed around Stockholom and
Göteborg. Together with the educational material, it is our nice human experience and the encouraging results that we would like to share here with you.
1

http://pde.fusion.kth.se

V.N. Alexandrov et al. (Eds.): ICCS 2001, LNCS 2073, pp. 1170–1175, 2001.
c Springer-Verlag Berlin Heidelberg 2001
�

Learning Computational Methods for Partial Diﬀerential Equations

2

1171

A Distance Learning Setup

The course begins with an announcement in the schools’ mailing lists2 outlining
the subject. A link to the course notes on the web and former student projects
enables potential participants to judge if the content is aligned with their target
curriculum. This way of proceeding reﬂects the current trend towards a free market for university courses and is well adapted to oﬀering teaching services outside
traditional school boundaries, such as sister universities and private companies.
Every morning during two weeks, the students are encouraged to attend a
lecture in one of the video-conference rooms and may download a video recording
from the Internet. Both are optional and serve as an introduction to a second
active learning phase where the knowledge is acquired with experiments in the
Java-powered course notes. Most of the time is spent carrying out the exercises
in a regular browser, form where they are automatically compiled into Web
pages. Once they are ready, the students submit their solutions electronically for
correction to a (human) teacher. Discussion forums exploit the ability of quick
learners to answer simple questions from peers and enable the teacher to focus
on the problems where his expertise is most useful and precious. A third week
is generally necessary to fulﬁll all the requirements and is well spent in building
up a working knowledge in a variety of methods by solving concrete problems.
Being active researchers in theoretical plasma physics, it is clear that we
could only devote a limited amount of time to the entire project. How much
can be achieved in a total of six months teaching over three years, how large
is the technology burden and how useful are the electronic tools in this context
was largely unknown. Moreover, is it reasonable to expect students to visit universities and even pay for courses if the notes are readily accessible from the
Internet? Our experience shows that those students who have the possibility to
attend classes locally or through video-conference still do so for the stimulation
and discussions they get from the teacher and peers. Those who cannot strongly
value the ﬂexibility of delivering exercises when and from where they like and
yet to beneﬁt from a close personal supervision with corrections from a teacher.

3

Classroom or Video Lectures Provide an Overview

Classroom lectures introduce web page equivalents of the course notes [1] and are
broadcast by video conference or (RealVideo) recordings to remote participants.
The lessons are short (30-40 minutes) to keep the attention of the audience; every
now and then, a short quiz stimulates lively discussions locally before the conclusions are shared in a more orderly manner between remote classrooms. The
JBONE applet (Java Bed for ONE dimensional problems) is used to test new
schemes directly in the web browser; this adds an unprecedented animation and
interactivity to the lecture and is extremely valuable when comparing the numerical properties of diﬀerent time evolution schemes. Menus select the equation
2

students97@engineering.myschool.edu, phd-students@yourschool.edu

1172

A. Jaun et al.

(advection diﬀusion, Burger’s shock waves, Korteweg-De Vries solitons, BlackScholes options, Schrödinger, etc), the initial condition (box, Gaussian, cosine,
soliton, put option, wavepacket) and editable text ﬁelds control the parameters
(velocity, diﬀusion, dispersion, time step, etc) directly in the web browser. A
mouse click starts the simulation, making it extremely easy and convincing to
illustrate for example the linear instability that occurs when the time step gets
too large in an explicit ﬁnite diﬀerence advection scheme, or to show how the
more subtle aliasing in spectral methods aﬀects a non linear train of solitons.

Fig. 1. Screen capture of the web browser displaying an analytical formula, the algorithm with a hyperlink into the source code and the JBONE applet – all after execution
of the Monte-Carlo integration with 1000 particles to illustrate the connection between
the motion of random walkers and diﬀusion.

Learning Computational Methods for Partial Diﬀerential Equations

4

1173

Active Learning with Experiments from Home

An advantage of using widespread, platform independent technology is that the
students can reproduce and modify the demonstrations back in their oﬃce or
directly from home. Repeating the line of thought from the classroom, the text
and ﬁgures take the reader through series of analytical derivations that yield
a computational scheme. Hyperlinks point to the relevant sections in the code
and show how every algorithm has been implemented. Default parameters are
preset to illustrate speciﬁc properties, but can be modiﬁed to verify if a topic
has been correctly understood.
Example: From Brownian motion to diﬀusion. Both are fundamental in science and engineering and are often hard to understand
�for undergraduates. An analytical derivation of the RMS displacement < ξi2 > in
a particle’s random walk connecting the diﬀusion coeﬃcient to the square
of the mean free path divided by the collision time D = λ2mf p /2τc might
en-light a few, but is likely to loose a majority in the algebra. Using the
Monte-Carlo evolution from the applet displayed in ﬁgure 1, it is simple
to demonstrate ﬁrst how the random motion of a single particle can be
described with the Java code
for (int j=0; j<numberOfParticles; j++){
particlePosition[j] +=
random.nextGaussian() *
Math.sqrt(2 * diffusCo * timeStep);
}
Distributing 1000 particles to approximate an initial Gaussian distribution,
the same algorithm immediately shows what diﬀusion means. Change the
initial condition to a cosine or a square box and it is equally rewarding to
demonstrate how short wavelength modes decay more rapidly than long
wavelengths.

Having part of the students studying away from the campus, is it possible
to use the technology to stimulate personal interactions with the teacher and
peers? Yes, better than we thought!

5

Assignments Carried out Directly on the Web

Exercises in the ﬁrst session are designed to familiarize the students with the
electronic publishing on the web; templates show how the building blocks are
used in relevant schemes to assimilate TEX and Java directly through the context.
Teaching at an advanced level where copying is not an issue, we distribute a list of
all the solutions web pages and let the students compare and discuss the results

1174

A. Jaun et al.

with each other. Our top pick of the best solution creates a healthy competition
where everybody tries to become a member of a very exclusive list.
Part of the students choose to carry out an additional one week project,
applying their favorite method to a topic of interest such as the Black-Scholes
equation for a European call option, a tunable ﬁnite elements integration
for the Schrödinger equation, a mesh reﬁnement procedure, iterative solvers,
etc. Given the small amount of time allocated for each project, the scope
remains of course limited; by cross-checking each other’s reports on the web,
the students nevertheless get an overview of a rather broad range of applications.
The material. A single TEXsource generates both the printed course
notes and the hyperlinked web pages. Running open software translators
such as latex2html [2], tth [3] and scripts embedded in a makeﬁle, the
static web material can eﬀectively be produced with no additional cost to
what is required to print the notes and slides. Writing the JBONE applet
from scratch was quite an eﬀort for the teachers, but the object-oriented
language and the encapsulated structure of the code enables students with
little programming experience to gradually modify existing schemes and
add their own. A substantial amount of documentation (programming tree,
keyword index) is created automatically using the javadoc utility, which is
part of the standard Java development kit. An automatic download service
has been set up for teachers and individuals who would like to use, modify
and tailor our material for their speciﬁc needs.

6

Working with Discussion Forums

News groups or discussion forums prove to be an ideal tool allowing a suﬃcient
number of participants to interact in a geographically distributed environment.
Not only do students help and discuss with each other at virtually any time of
the day and night, but the advice they get or provide is usually helpful and competent. Some supervision is required, but instead of answering a dozen times to
the same question (often for organizational matters), the teacher can intervene
once for an announcement and spend the rest of the time clarifying discussions
that remain very informal and help the students to understand the subject in
their own language. To encourage interactions between students and create the
feeling of belonging to the same virtual classroom, we now reward relevant contributions as well as the assignments.

7

Evaluation and Conclusion

Three classes with 11,18,15 participants went through considerably diﬀerent
learning schemes since the ﬁrst time the course was taught in a conventional
manner (in 1997), introducing a problem based learning with the JBONE applet (1999), using video-conferences between two universities (2000) and allowing now for a distance learning at any time and from anywhere on the Web. We

Learning Computational Methods for Partial Diﬀerential Equations

1175

cannot really draw statistically signiﬁcant conclusions about the eﬀectiveness of
each; anonymous evaluations and discussions with the students do nevertheless
indicate that the largest beneﬁts come the problem-based learning and the simple
user interface. These are much more challenging to implement than hyper-linked
documents, when ﬁrewalls, diﬀerent computer platforms, versions of software and
operating systems can quickly become a technology nightmare!
Templates provide the most eﬃcient help for the electronic submission of
the home assignments. This allows the questions asked in the discussion forums
to deal mainly the computational aspects – the substance of the course. One
participant proposed to create a discussion group reserved for alumni to maintain
valuable contacts after graduation.
In its full electronic form, the course clearly requires a well-maintained web
server, which is generally administered by an assistant in a university. Because
of the ask once, answer to all nature of the discussion forums, assistants can
however be employed very eﬃciently and the overall teaching load is ﬁnally
similar to a conventional setup.
Some ﬂexibility is required from both the lecturer and the students in order to
exploit the new possibilities and work around the weaknesses of a course taught
at a distance. Our experience however shows that the pedagogical content is
by no means reduced if the technology can be used to support a problem-based
learning context with a forum allowing the students to discuss and understand
the material with their own words. The enthusiasm from all the participants
including the teaching assistants is a very gratifying experience and should be
an additional encouragement to try similar experiments elsewhere.

Acknowledgements
This work is supported in part by the Summer University of Southern Stockholm
(SUSS) and Ericsson.

References
1. Jaun A., Hedin J., Johnson T., Numerical Methods for Partial Diﬀerential Equations. TRITA-ALF-1999-05 (1999), http://pde.fusion.kth.se
2. Drakos N., Text to Hypertext conversion with LaTeX2HTML. Baskerville 3 (1993)
12, http://cbl.leeds.ac.uk/nikos/tex2html/doc/latex2html/latex2html.html
3. Hutchinson, I., TTH: a TeX to HTML translator.
http://hutchinson.belmont.ma.us/tth/

