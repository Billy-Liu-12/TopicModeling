A General Framework for Trinomial Trees
Ali Lari-Lavassani and Bradley D. Tifenbach
Mathematical and Computational Finance Laboratory. Department of Mathematics
and Statistics. University of Calgary. Calgary, Alberta T2N 1N4

Abstract. Three general trinomial option pricing methods are formally
developed and numerically implemented and explored. Applications to
American option pricing are presented for one and two factor models.

1

Introduction

Hull and White introduced trinomial trees for processes with additive noise and
linear drift. In this work we unify the abstract features of these constructions
and generalize them to encompass the case of nonlinear drifts, and outline some
general Conditions such constructions should satisfy. Increasing computing performance allows for actual implementations of these methods in trading environments. Since our ultimate objective is to develop diﬀerent algorithms, we assume
throughout, that all processes are in a risk neutral world, see to [T, 00] for more
on these issues, and [JW, 00] for many up to date references.

2
2.1

Continuous Processes
Generalities

Consider the following stochastic diﬀerential equation (SDE)
dst = a(st , θ(t)) dt + b (st ) dzt

(1)

where the drift and volatility functions a and b satisfy the usual integrability
conditions described, e.g., in [KP, 99] and the parameter θ(t) is a continuous
function of time designed to capture a given term structure or the seasonal
shape of the expectation curve ϕ(t) = E(st | s0 ) for t ∈ [0, T ]. The construction
of additive trinomial trees requires constant standard deviations. We henceforth
assume that the following transformation exists and is invertible, leading to the
new variables
�
ds
, St := S(st ) , st := s(St ).
S=σ
b(s)
Then by the Ito formula we have
dSt = A(St , θ(t)) dt + σ dzt , with A(St , θ(t)) := σ(

a(st , θ(t)) b� (st )
−
). (2)
b(st )
2

We next discuss mean reverting processes since they will be used as examples.
V.N. Alexandrov et al. (Eds.): ICCS 2001, LNCS 2073, pp. 597–606, 2001.
c Springer-Verlag Berlin Heidelberg 2001
�

598

2.2

A. Lari-Lavassani and B.D. Tifenbach

Mean Reverting Processes with Additive Noise

[HW, 94 a,b] develop models with additive noise, suitable for short term interest
rates. In a slightly modiﬁed notation their one factor model writes as
dst = α(l(t) − st ) dt + σ dzt

(3)

where α and σ are constant, l(t) is the time varying reversion level.
Their two factor model is the system
dst = α(l(t) + vt − st ) dt + σ1 dzt1 ,

dvt = −δ vt dt + σ2 dzt2

(4)

where v0 = 0, the parameters α, δ, σ1 and σ2 are constants and the Brownian
motions have instantaneous correlation ρ12 . Assuming the generic condition,
α �= δ, this system decouples via the new variable yt = st + vt /(δ − α):
dyt = α(l (t) − yt ) dt + σ3 dzt3

, dvt = −δ vt dt + σ2 dzt2

(5)

where σ32 = (σ12 (δ − α)2 + 2 ρ12 σ1 σ2 (δ − α)+ σ22 )/(δ − α)2 and zt3 is another
Brownian motion, with the correlation between zt2 and zt3 being given by ρ23 =
(ρ12 σ1 + σ2 /(δ − α))/σ3 .
2.3

Mean Reverting Processes with Multiplicative Noise

[P, 98] introduces processes with multiplicative noise and constant coeﬃcients to
model energy spot prices. A partial study of the dynamics of these equations and
implementations via binomial trees, can be found in [LSW, 00]. For generalizations of these models and numerical implementations see [T, 00]. We follow the
latter and allow one of the parameters, see l(t) below, to be a function of time,
in order to capture seasonality or match the term structure of forward markets.
The generalized one factor mean reverting model with multiplicative noise is
dst = α(l (t) − st )dt + σ st dzt

(6)

where α and σ are constant and l(t) is the time varying reversion level. We next
transform this equation into an additive process by putting S t = ln st . Then the
Ito formula yields (after also substituting L(t) = ln l(t))
σ2
(7)
)dt + σ dzt .
2
Note that the drift is no longer linear. The generalized two factor system is
dSt = (α(eL(t)−St − 1) −

dst = α (lt − st ) dt + σ1 st dzt1 ,

dlt = β (t) lt dt + σ2 lt dzt2

(8)

where the parameters α, σ1 and σ2 are constants, β (t) captures the term structure and or seasonality of forward markets, and zt1 and zt2 are Brownian motions
with instantaneous correlation ρ12 . Under the change of variable St = ln st and
Lt = ln lt , the system becomes

A General Framework for Trinomial Trees

dSt = (α(eLt −St − 1) −

599

σ2
σ2
) dt + σ1 dzt1 , dLt = (β (t) − 2 ) dt + σ2 dzt2 .
2
2

To decouple this system introduce the variable Yt = Lt − St so that
dYt = α (B(t) − eYt ) dt + σ3 dzt3

,

dLt = (β (t) −

σ22
) dt + σ2 dzt2
2

(9)

σ 2 −σ 2

where, B(t) = 1 + α1 (β(t) + 1 2 2 ), σ32 = σ12 − 2ρ12 σ1 σ2 + σ22 and zt3 is another
Brownian motion, with the correlation between zt2 and zt3 being ρ23 = (σ2 − ρ12
σ1 )/σ3 . Note that (9) is in the format required for trinomial tree construction.

3
3.1

Trinomial Trees
Inﬁnitesimal Structure

For the SDE (2), denote the mean and variance of the displacement ΔSt =
St+Δt − St by Mt (Δt) and Vt (Δt) respectively. We then have the expansion
Proposition 1. Mt (Δt) = A(St , θ(t))Δt + O(Δt2 ) and Vt (Δt) = σ 2 Δt +
O(Δt2 ).
� t+Δt
Proof. Mt (Δt) = t
E(A(Su , θu )|A(St , θ(t)) du. Expanding the integrand
� t+Δt
yields, Mt (Δt) = t
(A(St , θ(t)) + O(Δt)) du and hence the result. Now,
� t+Δt
� t+Δt
A(Su , θ(u)) du + t
σ du −
Vt (Δt) = E[(St+Δt − Mt (Δt) − St )2 ] = E[( t
� t+Δt
2
2
2
Mt (Δt)) ] = E[( t
σ du) + O(Δt )]. After using a theorem in [KP, 99] p.
� t+Δt
86, the latter becomes, ( t
E(σ 2 ) du) + O(Δt2 ) = σ 2 Δt + O(Δt2 ).
3.2

The Discrete Process

Discretize the interval [0, T ] into n time steps of length Δt = T /n, set ti = i
Δt and let Sti = Sij . A trinomial tree for St is a discrete process on a two
dimensional lattice whose integer nodes are indexed by (i, j). From (i, j), over
the interval [ti , ti+Δt ], it is only possible to branch to one of the three nodes
(i + 1, hij + 1), (i + 1, hij ) or (i + 1, hij − 1), called respectively, the up, middle
(u)
(m)
(d)
and down nodes, with respective probabilities pij , pij and pij . By deﬁnition,
hij is assigned so that Si+1,hij is as close as possible to the expected value
E(Sti +Δt |Sti = Sij ). To remove extra degrees of freedom, we suppose that the
up and down jumps have increments of equal length from the middle node:
Condition 1. ΔSij := Si+1,hij +1 − Si+1,hij = Si+1,hij − Si+1,hij −1 .
Let ηti (Δt) = E(Sti +Δt |Sti = Sij ) − Si+1,hij be the oﬀset between
the expected value and the middle node. Since by deﬁnition, M ti (Δt) =
E(Sti +Δt |Sti = Sij ) − Sij we also have ηti (Δt) = Sij + Mti (Δt) − Si+1,hij .
Now by the very deﬁnition of hij it follows:

600

A. Lari-Lavassani and B.D. Tifenbach

Lemma 1. With the above notation, ηti (Δt) < ΔSij /2.
Note that Sij = Si0 + j ΔSij , where Si0 , the position of the median node of
the ith branch, and the analytical form of hij will be deﬁned for each of the tree
constructions developed next; in all cases S00 = S0 . This construction allows for
multiple jumps. The maximum and minimum values of j are recursively deﬁned
by setting jmax (0) = jmin (0) = 0, and for i = 1, ..., n, jmax (i) = hi−1,jmax (i−1) + 1
and jmin (i) = hi−1,jmin (i−1) − 1. This relies on the natural
Condition 2. hij < hij � for j < j � .

By deﬁnition of hij this is the case if E(Sti +Δt |Sti = Sij ) < E(Sti +Δt |Sti =
Sij � ). This is equivalent to St + Mt (Δt) being increasing in St , and leads to:
Proposition 2. Suppose 1 +

d
dSt Mt (Δt)

> 0, then Condition 2 holds.

Remark 1. In practice it is enough to satisfy the above hypothesis to the order
O(Δt) and for Δt small enough.
Lemma 2. For the processes (3), (7) and (9) the hypothesis of the above Proposition holds if Δt is chosen small enough.
Proof. We use Proposition 2. The linear case (3) is trivial, as for (7) and (9), let
d
Mt (Δt) = 1 − α eL−St Δt. By mean reversion
L denote l(t) or Lt . Then 1 + dS
L − St cannot grow large and since the time horizon [0, T ] is compact, L − St is
bounded. Hence Δt can be chosen small enough to yield the result.
Matching the ﬁrst and second moments of the continuous processes (2) and
the above discrete process over every subinterval [ti , ti+Δt ] leads to the system
(u)

(m)

(d)

pij (Si+1,hij +1 − Sij ) + pij (Si+1,hij − Sij ) + pij (Si+1,hij −1 − Sij ) = Mti (Δt)
(u)

(m)

(d)

pij (ΔSij − ηti (Δt))2 + pij ηt2i (Δt) + pij (ΔSij + ηti (Δt))2 = Vti (Δt)
(u)

(m)

(d)

pij + pij + pij = 1

which has for solutions
(u)

pij =
(d)

pij =

1 Vti (Δt) + ηt2i (Δt) ηti (Δt)
+
)
(
2
2
ΔSij
ΔSij

,

(m)

pij

=1−

Vti (Δt) + ηt2i (Δt)
2
ΔSij

1 Vti (Δt) + ηt2i (Δt) ηti (Δt)
−
)
(
2
2
ΔSij
ΔSij

To remove one degree of freedom we now make the assumption
�
Condition 3. ΔSij = 3Vij (Δt).
Note that [HW, 90] suggests this assumption in the inﬁnitesimal limit as
Δt → 0. Using Condition 3 in the above equations yields the following formulas
generalizing those of [HW, 94 a,b], after dropping the Δt in ηt (Δt):

A General Framework for Trinomial Trees

601

ηt2i
1 1 ηt2i
η ti
2
1 1 ηt2i
ηti
(m)
(d)
+
),
p
=
,
p
=
+ (
−
+ (
ij
ij
2
2
2 − ΔS ).
6 2 ΔSij
ΔSij
3 ΔSij
6 2 ΔSij
ij
(10)
(u)
(d)
These probabilities are in [0, 1]. Indeed both pij and pij can be viewed as
quadratic expressions of ηti (Δt)/ΔSij with negative discriminants, leading to
(u)
(d)
positive values. It then suﬃces to verify that pij + pij ≤ 1 and this follows
from Lemma 1. The above can be summarized in
Theorem 1. Assuming conditions 1, 2 and 3, and matching the ﬁrst and second
moments Mt (Δt), Vt (Δt) of the continuous process with those of the discrete
trinomial process, at each node (i, j), lead to a trinomial tree whose probabilities
(u)
(m)
(d)
are given by (10). Furthermore, all probabilities pij , pij and pij are in [0, 1].
(u)

pij =

Remark 2. The complete tree speciﬁcation still requires to determine hij . This
will depend on the tree geometry adopted and the actual SDE considered.
√
Remark 3. Condition 3 and Proposition 1 yield the values ΔSij = σ 3Δt +
O(Δt) and Mt (Δt) = A(St , θ(t))Δt + O(Δt2 ). Therefore once hij is known the
entire tree is known.
Remark 4. This trinomial tree is Z2 -symmetric. Indeed, let Z2 = {−1, 1} act
on {u, m, d} by: −1.u = d, −1.d = u, 1.m = m. This action holds both for the
nodes and the probabilities.

4
4.1

Three Tree Geometries
Fixed Grid Geometry (FGG)

In FGG the nodes are arranged in a ﬁxed rectangular grid. All positions are referenced relative to the root. That is Si0 = S0 for all i, and for j ∈ [jmin (i), jmax (i)]
�
�
Mti (Δt)
Sij = S0 + jΔSij , hij = j +
, ηti (Δt) = Mti (Δt) − (hij − j)ΔSij ,
ΔSij
where here and in the sequel, [ ] denotes the nearest integer.
4.2

Drift Adapted Geometry (DAG)

In DAG one ﬁrst deﬁnes the median nodes Ψi as being precisely connected by
the drift of the process. Each branch of the tree is then shifted up or down from
these median nodes. That is for j ∈ [jmin (i), jmax (i)], the tree is speciﬁed by
Ψ0 = S0 , mi (Δt) = E(Sti +Δt |Sti = Ψi ) − Ψi ,

Ψi = S0 +

�
�
Mti (Δt) − mi (Δt)
Sij = Ψi + jΔSij , hij = j +
.
ΔSij

i−1
�
k=0

mk (Δt)

602

A. Lari-Lavassani and B.D. Tifenbach

Note that ηti (Δt) = Mti (Δt) − mi (Δt) − (hij − j)ΔSij , and by construction,
those associated with all median nodes (i, 0) are all zero; consequently, by (10),
(u)
(m)
the branching probabilities of all median nodes are pi0 = 1/6, pi0 = 2/3, and
(d)
pi0 = 1/6. Finally, note that mi (Δt) = A(Ψi , θ(ti ))Δt + O(Δt2 ).
4.3

Forward Tree Geometry (FTG)

Forward Trees are constructed in two stages. We ﬁrst construct a preliminary
tree and then shift its median nodes S�i0 onto the expected values Φ(ti ) = E(Sti
| S0 ), for all i. We call the SDE (2) preliminarizable if for some constant θ�
� = 0 and
A(0, θ)

∂A
� �= 0.
(0, θ)
∂θ

(11)

Then by the implicit function theorem, there is a unique curve θ(S) deﬁned for
� so that A(θ(S), θ) = 0. We next deﬁne the preliminarization of
(S, θ) near (0, θ)
St to be the process S�t deﬁned by
� + σ dz with S�0 = 0.
dS�t = A(S�t , θ)dt
� := E(S�t | S�0 = 0) = 0 + O(Δt2 ) for all t ∈ [0, T ].
Condition 4. Φ(t)
Heuristically (11) yields Condition 4, indeed by Proposition 1, E(S�t+Δt
� Δt + O(Δt2 ), starting at t = 0, one would get, by (11)
�
|St ) − S�t = A(S�t , θ)
�
Φ(Δt) = 0 + O(Δt2 ) and continuing in this manner n times, leads to a total
error of nO(Δt2 ) = O(Δt). The preliminary tree is then the trinomial tree for
S�t , constructed using either FGG or DAG. For j ∈ [jmin (i), jmax (i)], S�t at node
(i, j) is given by
�
�
�t (Δt)
M
i
�
�t (Δt) − (�
�
, η�ti = M
hij − j)ΔSij
Sj = j ΔSij , hij = j +
i
ΔSij
Note that the above data do not depend on i hence one needs only to compute
{max jmax (i), i ∈ [0, n]} − {min jmin (i), i ∈ [0, n]} +1 sets of node data. The ﬁnal
tree is formed by shifting the median nodes of the preliminary tree S�j onto Φ(ti ),
while maintaining branching probabilities: the node (i, j) in the ﬁnal Forward
Tree for St is Sij = Φ(ti ) + S�j .
We now address the important issue of the validity of the FTG construction,
which we distinguish by a hat superscript. The DAG and FTG are approximations of (2), if they are obtained by matching the ﬁrst and second moments of this
SDE. This implies that ηti (Δt) should yield the same values, to the order (Δt),
�t (Δt)−(�
for both trees. Hence, M
hij −j)ΔSij = Mti (Δt)−mi (Δt)−(hij −j)ΔSij .
i
Assuming that almost everywhere on these trees �
hij = hij , we then have

A General Framework for Trinomial Trees

603

Proposition 3. With the above notations, the DAG and FTG trees yield the
same option values if �
M ti (Δt) = Mti (Δt) − mi (Δt); or up to O(Δt),
� = A(Ψi + jΔSij , θ(ti )) − A(Ψi , θ(ti )) =
A(jΔSij , θ)

∞
�
∂kA
k=1

∂S

(Ψi , θ(ti ))
k

k

(jΔSij )
.
k!
(12)

Proposition 4. The process (3) is preliminarizable and satisﬁes (12). The same
is true for (7) and (9) if σ � α and provided mean reversion is strong.

Proof. In the linear case (3), θ(t) = l(t) and A(st , l(t)) = α(l(t) − st ). Then (11)
obviously holds, and (12) reduces to the true identity α(0 − jΔs ij ) = −αjΔsij .
As for (7), θ(t) = L(t) and A(St , L(t)) = α(eL(t)− St − 1) − σ 2 /2. Then (11)
2
α( e−jΔSij − 1) =
holds with θ� = ln(2α+ σ 2 )/2α and (12) leads to 2α+σ
2α
L(t)− Ψt −jΔSij
2
(e
− 1). If σ � α, then 2α + σ /2α ≈ 1; also strong mean
αe
reversion forces L(t) − Ψi ≈ 0, and hence the result follows. Regarding (9) the
argument is analogous for St and it is trivially true for Lt .
Remark 5. The above propositions provide a rigorous justiﬁcation for the famous
tree construction of Hull and White. It also establishes that the construction can
be used in the nonlinear case but some errors might be expected.
The main diﬃculty in implementing FTG is to compute Φ(t) while matching
forward market features and Term Structures. If the drift of (1) has an aﬃne
functional form, say a(st , θ(t) = f (t) st + g(t), then the expected value ϕ(t) =
E(st | s0 ) satisﬁes the ordinary diﬀerential equation ϕ̇(t) = a(ϕ(t), θ(t)). Then
given the parameter θ(t) in a functional form exogenously or as a vector matching
forward market data, it is always possible to solve for ϕ(t). It is however not true
that Φ(t) = S(ϕ(t)). One can still manage to calculate the transformed expectations, by ensuring that they are consistent with the expected value equations
�jmax (i)
Pij sij at every branch in the tree, where Pij is the probability
ϕi = j=j
min (i)
of reaching node (i, j). Provided we have calculated the branching probabilities
at all nodes by (10), the Pij ’s may be computed recursively by P00 = 1 and
Pij =

�
k

Pi−1,k q[(i − 1, k) → (i, j)]

for i ∈ [1, n], where q[(i − 1, k) → (i, j)] is the probability of branching from
node (i − 1, k) to node (i, j). Since at node (i, j), st is given by the inverse
transformation sij = s(Sij ), the desired Φi ’s are deﬁned implicitly, for i ∈ [0, n],
by the following equations, which can always be solved by an iterative technique,
jmax (i)

ϕi =

�

j=jmin (i)

Pij s(Φi + j ΔSij )

(13)

604

A. Lari-Lavassani and B.D. Tifenbach
Table 1. American Call Option on a One Factor Model with Additive Noise
Time
Step
100
200
400
800

Opt.
277588
277643
277706
277743

FGG
Time Error
0.052 1748
0.198 1205
0.791 578
3.157 207

DAG
Opt. Time
278184 0.052
278025 0.209
277935 0.834
277868 3.326

Error
3671
2081
1189
519

Opt.
278247
278056
277951
277876

FTG
Time Error
0.058 4272
0.103 2354
0.484 1306
1.629 558

Remark 6. When the original process st has additive noise as in the Hull and
White equations, the above procedure can be greatly simpliﬁed. Indeed, in this
case it is not necessary to transform to another stochastic variable St , before
building the Forward Tree. In other words, we construct a tree directly for s t .
Therefore, st and their preliminarizations s�t are positioned at s�j = ϕ(ti ) + j
Δs and s�j = j Δs, respectively, for i ∈ [1, n] and j ∈ [jmin (i), jmax (i)], and
most importantly, it is never needed to employ (13). This drastically reduces the
computational cost.

5

Numerical Applications to American Options

We now numerically explore the algorithms discussed. To implement two factor
models via trinomial trees, we use the standard technique introduced by [HW,
94] consisting in building a tree for each security separately, forming the direct
product of the trees and subsequently adjusting the branching probabilities to
induce correlation. Implementing nonlinear models are new and have not received
much attention in the literature as they are quite harder than the linear cases.
For these we choose as underlying process energy spot prices. We price daily
American call options. The risk free interest rate is set to be 0.05, time to
maturity is 0.25, and we denote by K the strike price. The errors reported are
the diﬀerences between the option value and the ”true” value which is obtained
by running each method for high number of time steps n. Our goal is to only
demonstrate the convergence patern and the the eﬃciency of the algorithms.
5.1

Models with Additive Noise

Consider the one factor model (3) with l(t) = 0.03 e0.1t , α = 3, σ = 0.015,
s0 = 0.03 and K = 0.03. The ”true” values are obtained for n = 1600. Time
is in seconds, option values are to be multiplied by 10−10 and the errors by
10−11 . The results are reported in Table 1. As for the two factor model (5), l(t)
is the same and α = 3, δ = 0.1, σ1 = 0.01, σ2 = 0.0145, ρ12 = 0.6, s0 = 0.03
and K = 0.03. The ”true” value is for n = 400 and time is in 1000 seconds.
Option values are to be multiplied by 10−8 and the errors by 10−9 . The results
are reported in Table 2.

A General Framework for Trinomial Trees

605

Table 2. American Call Option on a Two Factor Model with Additive Noise
Time
Step
50
100
150
200

Opt.
239966
239787
239721
239688

FGG
Time Error
0.212 3289
1.748 1501
3.268 846
7.745 515

DAG
Opt. Time
239994 0.230
239789 1.878
239725 3.526
239689 8.311

Error
3569
1526
882
519

Opt.
240119
239852
239767
239720

FTG
Time Error
0.198 4667
1.574 1992
2.927 1140
6.905 674

Table 3. American Call Option on a One Factor Model with Multiplicative Noise
Time
Step
100
200
400
800

5.2

Opt.
1.4335
1.4303
1.4287
1.4280

FGG
Time Error
0.9310 60
3.2550 27
12.558 11
51.164 4

DAG
Opt. Time
1.4339 0.8810
1.4304 3.3250
1.4288 13.119
1.4280 52.646

Error
63
28
12
4

Opt.
1.4317
1.4289
1.4276
1.4269

FTG
Time Error
0.721 52
2.573 24
9.784 10
39.39 3

Models with Multiplicative Noise

Let p(t) = 12.57 e0.80t −0.94 cos 2πt+0.02 sin 2πt. With 1998 NYMEX spot crude
oil data, we imposed in (7) that l(t) models trend and seasonal eﬀects with a
general expression involving exponential and periodic functions. This leads after
calibration to l(t) = p(t), α = 36.7 and σ = 0.336. We use S0 = 12.5, K = 13.50.
The ”true” value obtained for n = 1600, is 1.4276 for FGG and DAG, and 1.4265
for FTG. The unit for computational cost is in seconds and the reported errors
are to be multiplied by 10−4 . The results are reported in Table 3.
Using techniques such as those discussed in [T,00], a calibration of the two
d
E(lt ))/E(lt ), with E(lt ) =
factor model (8), on the above data yields β(t) = ( dt
p(t), α = 36.7, σ1 = 0.336, σ2 = 0.317; ρ = 0. We use S0 = 12.5, K = 13.50.
The ”true” value obtained for n = 800 is 2.0816 for FGG and DAG and 1.7853
for FTG. The unit for computational cost is in 1000 seconds, the reported errors
are to be multiplied by 10−4 . The results are reported in Table 4.

Table 4. American Call Option on a Two Factor Model with Multiplicative Noise
Time
Step
100
200
300
400

Option
2.0869
2.0836
2.0827
2.0823

FGG
Time Error
0.08 53
0.63 20
2.13 11
4.98 6

DAG
Option Time
2.0866 0.09
2.0837 0.71
0.0827 2.35
2.0822 5.53

Error
50
21
10
6

Option
1.7881
1.7863
1.7858
1.7856

FTG
Time Error
0.14 29
1.09 11
3.54 6
8.58 3

606

5.3

A. Lari-Lavassani and B.D. Tifenbach

Conclusions

We developed three methods for arranging the tree geometry: (FGG) originated
in [HW, 93], as for (DAG) we carried out to the end our interpretation of a foot
note suggestion made in [HW, 90]; ﬁnally, (FTG) was designed to match the
term structures of forward markets and was proposed in [HW, 94 a,b], in the
case of linear drifts and without giving any proofs. In this paper, we established
the validity of this construction in a more general context. The numerical performance of FGG and DAG are virtually identical. Mixed results are achieved
for FTG: for the nonlinear cases (7) and (8) the positions of the median nodes
are obtained by the painstaking calculation (13); and in this case, FTG is only
slightly faster than the other methods in the one factor case and actually takes
longer for the two factor model. Alternatively, in the linear models (3) and (5),
the median nodes are revealed by the solution of the ordinary diﬀerential equation mentioned after Remark 5. This enhancement allows the FTG to run twice
as fast as the other methods in the one factor model and slightly faster in the two
factor case. One conclusion is that FTG is extremely eﬀective when the model
considered has linear drift and additive noise. Although FTG’s performance was
slower when the transformed drift is nonlinear, it still is of value. Indeed, we
imposed for the reversion level l(t) an exogenous functional form. In practice
the expected value of the spot price ϕ(t) is derived from the knowledge of futures prices and market price of risk analysis. In this case, of all the methods
considered only the FTG is able to match this expectation.

References
[HW, 90] Hull, John C. and Alan White. 1990. Valuing Derivative Securities Using the
Explicit Finite Diﬀerence Method. J. of Financial and Quantitative Analysis. Vol.
25, No. 1, March. pp. 87-10.
[HW, 93] Hull, John C. and Alan White. 1993. One-Factor Interest-Rate Models and
the Valuation of Interest-Rate Derivative Securities. J. of Financial and Quantitative Analysis. Vol. 28, No. 2, June. pp. 235-253.
[HW, 94a] Hull, John C. and Alan White. 1994. Numerical Procedures for Implementing Term Structure Models I: Single-Factor Models. J. of Derivatives. Fall. pp. 7-16.
[HW, 94b] Hull, John C. and Alan White. 1994. Numerical Procedures for Implementing Term Structure Models: Two-Factor Models. J. of Derivatives. Winter. pp. 3748.
[JW, 00] James, Jessica and Webber, Nick. Interest Rate Modelling. Wiley. 2000.
[KP, 99] Kloeden, Peter E. and Eckhard Platen. 1999. Numerical Solution of Stochastic
Diﬀerential Equations. Springer-Verlag.
[LSW, 00] Lari-Lavassani, Ali, Mohamadreza Simchi and Antony Ware. A Discrete
Valuation of Swing Options. Preprint, 2000.
[P, 97] Pilipovic, Dragana.1997. Energy Risk: Valuing and Managing Energy Derivatives. McGraw-Hill.
[T, 2000] Bradley Tifenbach. 2000. Numerical Methods for Modeling Energy Spot
Prices. MSc Thesis. University of Calgary. 181 pages.

This work is partially funded by grants from the National Science and Engineering Research Council of Canada and MITACS a Canadian Network of
Centres of Excellence.

