Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header,
This Procedia
space isComputer
reserved
for 108C
the Procedia
header,
Science
(2017) 1933–1942
This space is reserved for the Procedia header,
This space is reserved for the Procedia header,

do
do
do
do

not
not
not
not

use
use
use
use

it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Comparison of Handling Pressure in Poisson Solver for
Comparison
of
Pressure
in
Solver
Comparison
of Handling
HandlingMethod
Pressure
in Poisson
PoissonPressure
Solver for
for
Immersed
Boundary
Considering
Comparison
of HandlingMethod
Pressure
in PoissonPressure
Solver for
Immersed
Boundary
Considering
Immersed BoundaryCondition
Method Considering Pressure
Immersed BoundaryCondition
Method Considering Pressure
Condition
Kyohei TAJIRI11 , Hidetoshi
NISHIDA1 , and Mitsuru TANAKA1
Condition
Kyohei TAJIRI , Hidetoshi NISHIDA1 , and Mitsuru TANAKA1
1
1
Kyohei
TAJIRI
, Hidetoshi Kyoto
NISHIDA
, and Mitsuru TANAKA1
Department
of Mechanophysics,
Institute
1
1 of Technology, Kyoto, Japan 1
Kyohei
TAJIRI
, Hidetoshi
NISHIDA
, and
MitsuruKyoto,
TANAKA
Department
of Mechanophysics,
Kyoto
Institute
of Technology,
Japan
tajiri@kit.ac.jp

Department of Mechanophysics,
Kyoto Institute of Technology, Kyoto, Japan
tajiri@kit.ac.jp
Department of Mechanophysics,
Kyoto Institute of Technology, Kyoto, Japan
tajiri@kit.ac.jp
tajiri@kit.ac.jp

Abstract
Abstract
In the Cartesian grid approach, the immersed boundary method (IBM) is well used to handle the
Abstract
In
the Cartesian
grid approach,
the immersed
method grid.
(IBM)However,
is well used
handle the
boundary
of an object
with complicated
shapeboundary
on the Cartesian
the to
conventional
Abstract
In
the Cartesian
grid approach,
the immersed
boundary
method grid.
(IBM)However,
is well used
to
handle the
boundary
of an the
object
with complicated
shape
on thenear
Cartesian
the
conventional
IBM
generates
unphysical
pressure
oscillations
the
boundary
because
of
the
pressure
In
the Cartesian
grid approach,
the immersed
boundary
method grid.
(IBM)However,
is well used
to
handle
the
boundary
of
an
object
with
complicated
shape
on
the
Cartesian
the
conventional
IBM
generates
the unphysical
pressure
oscillations
near
the
boundary
because
of thecondition
pressure
jump
between
inside
and
outside
of
the
boundary.
The
IBM
considering
pressure
boundary
of
an
object
with
complicated
shape
on
the
Cartesian
grid.
However,
the
conventional
IBM
generates
the unphysical
pressure
oscillations
near
boundary
because
of thecondition
pressure
jump
between ininside
and
outside
of the
boundary.
Thethe
IBM
considering
pressure
was
proposed
order
to remove
the
pressure
oscillations
byboundary
solving
the
governing
IBM
generates
the
unphysical
pressure
oscillations
near
the
because
of theequations
pressure
jump
between
inside
and
outside
of
the
boundary.
The
IBM
considering
pressure
condition
was
proposed
order to condition
remove the
pressure
oscillations
by solving
the
governing
considering
theininside
pressure
onthe
theboundary.
boundary.
In this
method,
there
are twoequations
ways of
jump
between
and
outside
of
The
IBM
considering
pressure
condition
was
proposed
inpressure
order to condition
remove the
oscillations
by solving
the
governing
equations
considering
the
onpressure
the boundary.
In this
method,
there
are two
ways of
the
handling
the
pressure
on
the
boundary
in
the
Poisson
solver.
In
this
paper,
the
effect
was
proposed
in order to condition
remove the
oscillations
by solving
the
governing
equations
considering
the
onpressure
the boundary.
In this
method,
there
are two
ways of
the
handling
thepressure
pressure
on the by
boundary
inconsidering
the Poisson
solver.
In condition
this
paper,
the effect
of
removing
the
pressure
oscillations
the
IBM
the
pressure
is
investigated.
considering
the
pressure
condition
on the boundary.
In this
method,
there
are two
ways of
the
handling
the
pressure
on
the
boundary
in
the
Poisson
solver.
In
this
paper,
the
effect
removing
the
pressure
oscillations
by the
IBM
considering
the pressure condition
is investigated.
And,
the
influence
by
the
difference
in
the
handling
of
the
on
the
boundary
in
the
the
handling
the pressure
on the by
boundary
inconsidering
the Poisson
In condition
this paper,
the effect of
removing
the
pressure
the
thesolver.
pressure
is investigated.
And,
thesolver
influence
byoscillations
the difference
in IBM
the handling
of the
pressure
on the flow
boundary
Poisson
is investigated.
In the
numerical
simulations
ofpressure
incompressible
aroundina the
2D
removing
the
pressure
oscillations
by
the
IBM
considering
the
condition
is
investigated.
And,
thesolver
influence
by the difference
in the handling
of theof incompressible
on the flow
boundary
ina the
Poisson
is investigated.
In the
numerical
simulations
around
2D
circular
cylinder,
the
present
IBM
indicates
a
greate
effect
of
removing
the
pressure
oscillations.
And,
thesolver
influence
by the difference
in the handling
of theofpressure
on the flow
boundary ina the
Poisson
is investigated.
In the
numerical
simulations
incompressible
2D
circular
cylinder,
the
present
IBM
indicates
a greate
effect
of removing
thehandling
pressurearound
oscillations.
And,
it
does
not
occur
difference
of
the
result
by
the
difference
of
the
the
pressure
Poisson
solver is investigated.
In the
numerical
simulations
ofremoving
incompressible
flow around
a 2D
circular
cylinder,
the
present
IBM
indicates
a
greate
effect
of
the
pressure
oscillations.
And,
does not occur
difference
of the Therefore,
result by the
of
handling
the with
pressure
on
theitboundary
in the
Poisson
it isdifference
possible
to the
select
a method
less
circular
cylinder,
present
IBMsolver.
indicates
a greate
effect
of removing
thehandling
pressure
oscillations.
And,
does not the
occur
difference
of the Therefore,
result
by the
of
the
the
pressure
on
theitboundary
in thein
Poisson
solver.
it degrading
isdifference
possiblethe
to quality
select
aofmethod
with
less
computational
amount
the
Poisson
solver
without
the
result.
It
is
And,
does not occur
difference
of the Therefore,
result by the
of
the
handling
the with
pressure
on
theitboundary
in thein
Poisson
solver.
it degrading
isdifference
possiblethe
to quality
select
aofmethod
computational
amount
the
Poisson
solver
without
the
result.
Itless
is
concluded
that
the
present
IBM
is
very
promising
as
improved
method
in
order
to
remove
the
on
the boundary
in theinPoisson
solver. Therefore,
it degrading
is possiblethe
to quality
select aofmethod
with less
computational
the
Poisson
without
is
concluded
that amount
the present
IBM
is verysolver
promising
as improved
method
in orderthe
to result.
removeItthe
pressure
oscillations
in
the
conventional
IBM.
computational
amount
in the
Poisson
solver
without
degradingmethod
the quality
of the
result.
Itthe
is
concluded
that
the
present
IBM
is
very
promising
as
improved
in
order
to
remove
pressure oscillations in the conventional IBM.
concluded
that
the
present
IBM
is
very
promising
as
improved
method
in
order
to
remove
the
Keywords:
Computational
Dynamics,
Computational Method, Cartesian Grid Approach, Im©
2017 Theoscillations
Authors.
Published
by
Elsevier
B.V. IBM.
pressure
in theFluid
conventional
Keywords:
Computational
Fluid
Dynamics,
Computational
Method,
Cartesian
Approach,
ImPeer-review
under
responsibility
ofconventional
the scientific
committee
of the International
Conference
Computational
Science
pressure
oscillations
in thePressure
IBM.
mersed Boundary
Method,
Boundary
Condition,
Incompressible
Flow onGrid
Keywords:
Computational
Fluid Dynamics,
Method, Cartesian
mersed Boundary
Method, Pressure
BoundaryComputational
Condition, Incompressible
Flow Grid Approach, ImKeywords:
Computational
Fluid Dynamics,
Method, Cartesian
mersed
Boundary
Method, Pressure
BoundaryComputational
Condition, Incompressible
Flow Grid Approach, Immersed Boundary Method, Pressure Boundary Condition, Incompressible Flow

1 Introduction
1 Introduction
1
CFD Introduction
is used in various industrial fields and shortening of time for numerical simulation is an
1
Introduction
CFD
is used
in various
industrial
fields and
shortening
for numerical
simulation
is an
important
issue.
Selection
of coordinate
system
is also of
antime
important
factor for
shortening
of

CFD
is used
in various
industrial
fields and
shortening
for numerical
simulation
is an
important
issue.
Selection
of coordinate
system
also of
antime
important
factor for
of
time
numerical
simulation.
Conventionally,
theisboundary
fitted
areshortening
adopted
CFD for
is used
in various
industrial
fields and
shortening
of
time
for coordinates
numerical
simulation
is for
an
important
issue.
Selection
of
coordinate
system
is
also
an
important
factor
for
shortening
of
time
for
numerical
simulation.
Conventionally,
the
boundary
fitted
coordinates
are
adopted
for
the
flow around
object with
complicated
shapeisbecause
the high computational
accuracy.
important
issue.anSelection
of coordinate
system
also anofimportant
factor forareshortening
of
time
for
numerical
simulation.
Conventionally,
the
boundary
fitted
coordinates
adopted
for
the
flow around
an generation
object withmay
complicated
because
of more
the high
computational
accuracy.
However,
the grid
consume shape
a huge
time for
complicated
shape.
On the
timeflow
for numerical
simulation.
Conventionally,
the because
boundary
fitted
coordinates
are
adopted
for
the
around
an
object
with
complicated
shape
of
the
high
computational
accuracy.
However, the grid generation may consume a huge time for more complicated shape. On the
the flow around
an generation
object withmay
complicated
of more
the high
computational
However,
the grid
consume shape
a hugebecause
time for
complicated
shape.accuracy.
On the
However, the grid generation may consume a huge time for more complicated shape. On the1
1
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
1
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.151

1934	

Comparison of handling of pressure
NISHIDA and TANAKA
Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942

other hand, in the Cartesian coordinates, the grid generation is very easy. Therefore, recently
the numerical simulations on the Cartesian coordinates are actively performed.
In the Cartesian grid approach, the immersed boundary method (IBM) [8] is well used to
handle the boundary of an object with complicated shape on the Cartesian grid. In the IBM,
the boundary of the object is considered to be a cluster of virtual boundary point. In order
to satisfy the velocity condition on the virtual boundary, e.g., the non-slip condition, the IBM
requires only the additional forcing term in the momentum equations. Therefore, it is easy to
apply the IBM to the object with complicated shape. As for the estimation of the additional
forcing term, there are mainly two ways, that is, the feedback [4, 11] and direct [2] forcing
term estimations. Generally, the direct forcing term estimation [2] is adopted. However, the
conventional IBM with the direct forcing term estimation generates the unphysical pressure
oscillations near the virtual boundary because of the pressure jump between inside and outside
of the virtual boundary. In order to remove the unphysical pressure oscillations, the seamless
IBM (SIBM) [7] was proposed. In the SIBM, the forcing term is added not only on the grid
points near the virtual boundary but also in the region inside the virtual boundary. In the
original IBM and SIBM, the pressure condition on the virtual boundary is not considered.
Then, the governing equations are solved in both inside and outside of the virtual boundary.
The IBM considering pressure condition [12] was proposed in order to remove the pressure
oscillations by solving the governing equations considering the pressure condition on the virtual
boundary. In this method, the pressure on the virtual boundary is estimated from the pressure
condition on the virtual boundary and the pressure near the virtual boundary. Therefore,
the governing equations are solved in only the region outside the virtual boundary by using
the velocity and the pressure on the virtual boundary. Then, the grid number required for
the numerical simulation is reduced because the grid is not necessary in the region inside the
virtual boundary. In this method, there are two ways of the handling the pressure on the
virtual boundary in the Poisson solver. One is to solve the pressure equation while renewing
the pressure on the virtual boundary. The other is to solve the pressure equation while fixing
the pressure on the virtual boundary.
In this paper, the effect of removing the pressure oscillations by the IBM considering the
pressure condition is investigated. And, the influence by the difference in the handling of the
pressure on the virtual boundary in the Poisson solver is investigated.

2
2.1

Immersed Boundary Method
Governing Equations

The non-dimensional continuity equation and incompressible Navier-Stokes equations are written as,
∂ui
∂xi
∂ui
∂t

=

0,

=

Fi −

(1)
∂p
+ Gi ,
∂xi

(2)

where, Re denotes the Reynolds number defined by Re = L0 U0 /ν0 . U0 , L0 and ν0 are the
reference velocity, the reference length and the kinematic viscosity, respectively. ui = (u, v) and
p are the velocity components and the pressure. Gi in the momentum equations denotes the
2

	

Comparison of handling of pressure
NISHIDA and TANAKA
Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942

additional forcing term for the IBM. Fi denotes the convective and diffusion terms.
Fi

2.2

=

−uj

1 ∂ 2 ui
∂ui
+
.
∂xj
Re ∂xj ∂xj

(3)

Numerical Method

The incompressible Navier-Stokes equations ( 2) are solved by the second order finite difference
method on the collocated grid arrangement. The convective, diffusion and pressure terms are
discretized by the conventional second order centered finite difference method. For the time
integration, the fractional step approach [9] based on the forward Euler method is applied. For
the incompressible Navier-Stokes equations in the IBM, the fractional step approach can be
written by
u∗i

=

un+1
i

=

uni + ∆tFin ,


∂pn
n
∗
+ Gi ,
ui + ∆t −
∂xi

(4)
(5)

where u∗i denotes the fractional step velocity and ∆t is the time increment. The resulting
pressure equation is solved by the SOR method.

2.3

Forcing Term Estimation

In order to adopt the IBM, the additional forcing term in the momentum equations, Gi , should
be estimated. In this paper, the direct forcing term estimation is adopted. The direct forcing
term estimation is shown in Fig. 1. In the figure, I, J are the grid index. The forcing term can
be determined by
Gni = −Fin +

∂pn
Ū n+1 − uni
,
+ i
∂xi
∆t

(6)

where Ūin+1 denotes the velocity linearly interpolated from the velocity on the near grid point
and the velocity (uvb ) determined by the velocity condition on the virtual boundary. Namely,
the forcing term is specified as the velocity components at next time step satisfy the relation,
= Ūin+1 . In the forcing term estimation for the IBM, the grid points added forcing term
un+1
i
are restricted near the virtual boundary only (show Fig. 1(a)). In this approach, the nonnegligible velocity appears inside the virtual boundary. Also, the pressure distributions near
the virtual boundary show the unphysical oscillations because of the pressure jump. In the
SIBM, the forcing term is added not only on the grid points near the boundary but also in the
region inside the boundary shown in Fig. 1(b) in order to remove the unphysical oscillations near
the boundary. In the region inside the boundary, the forcing term is determined by satisfying
the relation, Ūin+1 = Ūb , where Ūb is the specified velocity, e.g., Ūb = 0 in the stationary
solid media. In the present IBM, the governing equations are solved only outside the virtual
boundary by considering the pressure condition on the virtual boundary in order to avoid the
pressure jump.

2.4

Differential Expression Near the Virtual Boundary

In the original IBM and SIBM, the governing equations are solved in both inside and outside
of the virtual boundary without considering the pressure condition on the virtual boundary, so
3

1935

1936	

Comparison of handling of pressure
NISHIDA and TANAKA
Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942

(a) Original and present IBM

(b) SIBM

Figure 1: Direct forcing term estimation and grid points added forcing terms.

the differential expression near the virtual boundary is the same as in other region. In the IBM
considering the pressure condition [12], the velocity and the pressure on the virtual boundary
are determined by the virtual boundary condition. Therefore, it is unnecessary to solve the
governing equations in the region inside the virtual boundary by using the velocity and the
pressure on the virtual boundary. In this paper, the differential expression near the virtual
boundary is given as following.
The pressure on the virtual boundary is estimated by using the Taylor series expansion from
the pressure condition on the virtual boundary and the pressure near the virtual boundary [6,
12]. In this paper, the pseudo pressure condition on the virtual boundary (∂p/∂n = 0) is
considered. For example, in Fig. 2, the pressure on the virtual boundary point, vb, is estimated
by using the Taylor series expansion in two variables with reference to the points m = 1 to 2
in the region of fluid media. However, in the case of the point 2 is in the region of solid media,
an alternative point 2’ in the region of fluid media is chosen. In Fig. 2, n = (nx , ny ) denotes
the unit normal vector at the virtual boundary point. The reference points are chosen from
the surrounding grid points in the normal direction. The relationship between pressure on the
virtual boundary and reference points is approximated by

 

∂p 
∂p 
pm = pvb + lmx
+
l
,
my
∂x vb
∂y vb

(7)

where lmx , lmy are the distance components from the virtual boundary point to the reference
points. The pressure condition on the virtual boundary is written by



∂p 
∂p 
∂p 
= nx
+ ny
= 0.
∂n vb
∂x vb
∂y vb

(8)

By substituting the equation ( 8), the equation ( 7) is rewritten to

4




nx
∂p 
lmy
.
pm = pvb + lmx −
ny
∂x vb

(9)

	

Comparison of handling of pressure
NISHIDA and TANAKA
Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942

Then, the pressure on the virtual boundary pvb and
pvb

∂p 
∂x vb

Am

=
=
=



∂p 
∂x 

vb

can be determined by

−A2 p1 + A1 p2
,
A1 − A 2
p1 − p2
,
A1 − A 2
nx
lmx −
lmy .
ny

(10)
(11)
(12)

The pressure on the grid point (I − 1, J) is estimated by
pI−1,J = pvb + (|lm1 | − ∆x)


∂p 
,
∂x vb

(13)

where, ∆x is the grid spacing in the x direction. As a result, discretization on the grid point
(I,J) is handled in the same manner as other grid points by using the estimated pressure pI−1,J .
In this approach, there are two ways of the handling the pressure on the virtual boundary in
the Poisson solver. One is to solve the pressure equation while renewing the pressure on the
virtual boundary (Case-1). The other is to solve the pressure equation while fixing the pressure
on the virtual boundary (Case-2).
The velocity gradient on the grid point (I, J) near the virtual boundary is represented by
one-sided difference written in

∂u 
−3uI,J + 4uI+1,J − uI+2,J
.
(14)
=
∂x I,J
2∆x

3

Flow Around a 2D Stationary Circular Cylinder

In order to validate the present IBM, the flow around a 2D stationary circular cylinder is
considered. In this paper, the calculation results by two ways (Case-1 and Case-2) in the present
IBM approaches are compared with the results by the original IBM and SIBM. In the case-1,
the Poisson equation is solved while renewing the pressure on the virtual boundary and the

Figure 2: Handlling near the virtual boundary.

Figure 3: Computational domein for 2D stationary circular cylinder.
5

1937

1938	

Comparison of handling of pressure
NISHIDA and TANAKA
Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942

additional forcing term. In the case-2, the Poisson equation is solved while fixing the pressure
on the virtual boundary and the additional forcing term. In the original IBM and SIBM, the
pressure equation is solved while fixing the additional forcing term. The computational domain
is shown in Fig. 3. The diameter of the circular cylinder is D = 1 and θ is an angle from rear
stagnation point of the circular cylinder. The computational grid is the hierarchical Cartesian
grid that is fine near the circular cylinder. In this paper, the simulation is performed on three
grids to investigate the influence of the grid resolution. The grid resolutions near the virtual
boundary are ∆ = ∆x = ∆y = 0.025, 0.0125 and 0.00625 respectively. The impulsive start
determined by the uniform flow (u = 1, v = 0) is adopted. On the inflow boundary, the velocity
is fixed by the uniform flow and the pressure is imposed by the Neumann condition obtained
by the normal momentum equation. The velocity is extrapolated from the inner points and
the pressure is obtained by the Sommerfeld radiation condition [5] on the outflow and side
boundaries. On the virtual boundary, the velocity condition is the non-slip (u = 0, v = 0)
condition. The Reynolds number is set as Re = 40 and 200.
Figure 4 shows the pressure coefficient Cp distributions at each grid resolution in Re = 40.
The pressure on the virtual boundary is interpolated from the grid points around the virtual
boundary in the region of fluid media. In the present IBM, the results at all grids are in
good agreement with each other and also with the reference result. The oscillations of the
pressure can be hardly seen even on the coarse grid (∆ = 0.025). On the other hand, in the
original IBM, the valid pressure on the virtual boundary cannot be obtained by interpolation.
In addition, the results by the SIBM is improved significantly than the results by the IBM,
however, the small oscillations of the pressure appear. Figure 5 shows the pressure contours
at ∆ = 0.0125. In the original IBM, the oscillations of the pressure appear near the virtual
boundary. Therefore, it is considered that the valid pressure on the virtual boundary could not
be obtained by the original IBM. In the present IBM and SIBM, the pressure oscillations do not
appear and the smooth pressure distribution is obtained near the virtual boundary. Figure 6
shows the pressure coefficient distributions on the boundary of a temporary circular cylinder in
the original IBM. The radius of the temporary circular cylinder is a diagonal line of grid longer
than the radius of the actual circular cylinder. The smooth pressure coefficient distributions
are obtained. Therefore, it is predicted that the valid results can be obtained except near the
virtual boundary even in the original IBM. Figure 7 shows distributions of the normal derivative
of the pressure on the virtual boundary at ∆ = 0.0125. The normal derivative of the pressure on
the virtual boundary is estimated by the first order one-sided difference using the interpolated
pressure on the virtual boundary and temporary boundary. In the present IBM, the pressure
condition on the virtual boundary is satisfied compared with the original IBM and SIBM. In
Table 1, the drag coefficient, the wake length and the pressure difference between front and rear
¯
stagnation points at ∆ = 0.0125 are shown with the reference results [1, 3]. And, |∂p/∂n|
is the
space-averaged value of the absolute value of the normal derivative of the pressure on the virtual
boundary. The results in the present IBM (Case-1, Case-2) are in good agreement with each
other and the results are closer to the reference ones than the ones in the SIBM. In the original
IBM, it is difficult to estimate accurate quantitative values by the pressure oscillations near the
virtual boundary. The quantitative values in parentheses are estimated on the boundary of the
temporary circular cylinder. Furthermore, in the present IBM (Case-1, Case-2), the pressure
condition on the virtual boundary is well satisfied compared with the original IBM and the
SIBM even if it is estimated by simple calculation.
Figure 8 shows the pressure coefficient distributions at ∆ = 0.0125 in Re = 200 at the
time which the lift coefficient is maximum. In the present IBM, the very smooth pressure
distribution is obtained. And, the results at Case-1 and Case-2 are in good agreement with
6

	

Comparison of handling of pressure
NISHIDA and TANAKA
Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942

each other. On the other hand, in the original IBM, the valid pressure on the virtual boundary
cannot be obtained because of the severe pressure oscillations. In addition, the results by the
SIBM is improved significantly than the results by the IBM, however, the small oscillations
of the pressure appear. Figure 9 shows distributions of the normal derivative of the pressure
on the virtual boundary at ∆ = 0.0125 at the time which the lift coefficient is maximum.
The normal derivative of the pressure on the virtual boundary is estimated by the first order
one-sided difference using the interpolated pressure on the virtual boundary and temporary
boundary. In the present IBM, the pressure condition on the virtual boundary is satisfied
compared with the original IBM and SIBM. In Table 2, the time-averaged drag coefficient,
the amplitude of lift coefficient and the Strouhal number at ∆ = 0.0125 are shown with the
¯
reference results [10]. And, |∂p/∂n|
is the space-averaged value of the absolute value of the
normal derivative of the pressure on the virtual boundary at the time which the lift coefficient
is maximum. The results in the present IBM (Case-1, Case-2) are in good agreement with
each other and with the reference ones. In the original IBM, it is difficult to estimate accurate
quantitative values. Furthermore, in the present IBM (Case-1, Case-2), the pressure condition
on the virtual boundary is well satisfied compared with the original IBM and the SIBM.
Therefore, it can be found that the present IBM is effective to remove the pressure oscillations that appear in the conventional IBM. It does not occur difference of the result by the
difference of the handling the pressure on the boundary in the Poisson solver.

(a) Present IBM (Case-1)

(b) Present IBM (Case-2)

(c) Original IBM

(d) SIBM

Figure 4: Pressure coefficient distributions (Re = 40)
7

1939

1940	

Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942
Comparison of handling of pressure
NISHIDA and TANAKA

(a) Present IBM (Case-1)

(b) Present IBM (Case-2)

(c) Original IBM

(d) SIBM

Figure 5: Pressure contours for 2D stationary at ∆ = 0.0125 (Re = 40)

Figure 6: Temporary pressure coefficient distributions by the original IBM (Re = 40)

8

Figure 7: Normal derivative of pressure on
the virtual boundary at ∆ = 0.0125
(Re = 40)

	

Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942
Comparison of handling of pressure
NISHIDA and TANAKA

CD

LV /D

PE

¯
|∂p/∂n|

Present IBM (Case-1)

1.540

2.310

0.853

0.67

Present IBM (Case-2)

1.540

2.310

0.853

0.67

Original IBM

0.729 (1.653)

2.458

0.163 (0.929)

12.12

SIBM

1.555

2.308

0.880

1.83

Dennis et al.[1]

1.522

2.345

0.826

-

Fornberg[3]

1.498

2.240

0.800

-

Table 1: Comparison of characteristic quantities for 2D stationary circular cylinder at ∆ =
0.0125 (Re = 40).

Figure 8: Pressure coefficient distributions at
∆ = 0.0125 (Re = 200)

Figure 9: Normal derivative of pressure on
the virtual boundary at ∆ = 0.0125
(Re = 200)

C¯D

CLamp

St

¯
|∂p/∂n|

Present IBM (Case-1)

1.345

0.681

0.199

0.76

Present IBM (Case-2)

1.346

0.681

0.199

0.76

Original IBM

0.362 (1.739)

0.081 (0.351)

0.195

16.22

SIBM

1.354

0.676

0.199

2.19

Rosenfeld[10]

1.329

0.674

0.197

-

Table 2: Comparison of characteristic quantities for 2D stationary circular cylinder at ∆ =
0.0125 (Re = 200).

9

1941

1942	

Kyoheicondition
Tajiri et al.. /. .Procedia Computer Science 108CTAJIRI,
(2017) 1933–1942
Comparison of handling of pressure
NISHIDA and TANAKA

4

Concluding Remarks

In this paper, the effect of removing the pressure oscillations by the IBM considering the
pressure condition was investigated. And, the influence by the difference in the handling of
the pressure on the virtual boundary in the Poisson solver was investigated. In the case-1,
the Poisson equation is solved while renewing the pressure on the virtual boundary. In the
case-2, the Poisson equation is solved while fixing the pressure on the virtual boundary. In the
numerical simulations of incompressible flow around a 2D circular cylinder, the present IBM
indicated a greater effect of removing the pressure oscillations than the SIBM. Moreover, it was
found that the grid dependence in the present IBM is smaller than in the original IBM and
SIBM. It did not occur difference of the result by the difference of the handling the pressure on
the boundary in the Poisson solver. Therefore, by selecting Case-2, the computational amount
in the Poisson solver is less than Case-1 and the result equivalent to the result by Case-1 can
be obtained. It is concluded that the present IBM is very promising as improved method in
order to remove the pressure oscillations in the conventional IBM.

References
[1] S. C. R. Dennis and G. Z. Chang. Numerical solutions for steady flow past a circular cylinder at
reynolds numbers up to 100. Journal of Fluid Mechanics, 42(3):471–489, 1970.
[2] E. A. Fadlun, R. Verzicco, P. Orlandi, and J. Mohd-Yosof. Combined immersed-boundary finitedifference methods for three-dimensional complex simulations. Journal of Computational Physics,
161(1):35–60, 2000.
[3] B. Fornberg. A numerical study of steady viscous flow past a circular cylinder. Journal of Fluid
Mechanics, 98(4):819–855, 1980.
[4] D. Goldstein, R. Handler, and L. Sirovich. Modeling a no-slip flow boundary with an external
force field. Journal of Computational Physics, 105(2):354–366, 1993.
[5] K. Kawakami, H.Nishida, and N. Satofuka. An open boundary condition for the numerical analysis of unsteady incompressible flow using the vorticity-streamfunction formulation (in japanese).
Transactions of the Japan Society of Mechanical Engineers Series B, 60(574):1891–1896, 1994.
[6] H. Nishida. Development of seamless immersed boundary method to various partial differential
equations. In Proceedings of Korea-Japan CFD Workshop 2015, pages 1–15, 2015.
[7] H. Nishida and K. Sasao. Numerical simulation of incompressible flows using immersed boundary method considering the pressure condition. In Proceedings of International Conference on
Computational Fluid Dynamics 2006, pages 185–186, 2006.
[8] C. S. Peskin and D. M. McQueen. A three-dimensional computational method for blood flow in
the heart i. immersed elastic fibers in a viscous incompressible fluid. Journal of Computational
Physics, 81(2):372–405, 1989.
[9] C. M. Rhie and W. L. Chow. Numerical study of the turbulent flow past an airfoil with trailing
edge separation. AIAA Journal, 21(11):1525–1532, 1983.
[10] M. Rosenfeld. Grid refinement test of time-periodic flows over bluff bodies. Computers & Fluids,
23(5):693–709, 1994.
[11] E. M. Saiki and S. Biringen. Numerical simulation of a cylinder in uniform flow: application of a
virtual boundary method. Journal of Computational Physics, 123(2):450–465, 1996.
[12] K. Tajiri, H. Nishida, and M. Tanaka. Numerical simulation of incompressible flows using immersed boundary method considering the pressure condition. In Proceedings of 9th International
Conference on Computational Fluid Dynamics, pages 1–12, 2016.

10

