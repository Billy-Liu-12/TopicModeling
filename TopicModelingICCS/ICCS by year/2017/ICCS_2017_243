Available online at www.sciencedirect.com

ScienceDirect
Procedia Computer Science 108C (2017) 295–304

This space is reserved for the Procedia header, do not use it
This space is reserved for the Procedia header, do not use it
This space is reserved for the Procedia header, do not use it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Simultaneous
Simultaneous Prediction
Prediction of
of Wind
Wind Speed
Speed and
and Direction
Direction by
by
SimultaneousEvolutionary
Prediction ofFuzzy
WindRule
Speed
and
Direction
by
Evolutionary Fuzzy Rule Forest
Forest
Evolutionary Fuzzy Rule Forest
Pavel
Pavel Krömer
Krömer and
and Jan
Jan Platoš
Platoš
Pavel
Krömer
and
Jan
Platoš
Department of Computer Science,

Department of Computer Science,
VŠB–Technical University of Ostrava, Ostrava, Czech Republic
VŠB–TechnicalDepartment
University of
Ostrava,
of Ostrava,
Computer
Science,Czech Republic
{pavel.kromer,jan.platos}@vsb.cz
{pavel.kromer,jan.platos}@vsb.cz
VŠB–Technical
University of Ostrava, Ostrava, Czech Republic
{pavel.kromer,jan.platos}@vsb.cz

Abstract
Abstract
An
accurate estimate of wind speed and direction is important for many application domains
Abstract
An accurate estimate of wind speed and direction is important for many application domains
including
weather
prediction,
and e.g. traffic
management.
These
two environmenAn accurate
estimate
of windsmart
speedgrids,
and direction
is important
for many
application
domains
including
weather
prediction,
smart
grids,
and e.g. traffic
management.
These
two environmental
variables
depend
on
a
number
of
factors
and
are
linked
together.
Evolutionary
fuzzy rules,
including
weather
prediction,
smartofgrids,
and
e.g.are
traffic
management.
These two environmental
variables
depend
on a number
factors
and
linked
together. Evolutionary
fuzzy rules,
based
on fuzzy
information
retrievalofand
genetic
have been
used to solve
a variety
tal variables
depend
on a number
factors
andprogramming,
are linked together.
Evolutionary
fuzzy
rules,
based
on fuzzy
information
retrieval and
genetic
programming,
have been
used to solve
a variety
of
real–world
regression
and
classification
tasks.
They
were,
however,
limited
by
the
ability
to
based
on fuzzyregression
information
and genetic
have been
used to
a variety
of
real–world
andretrieval
classification
tasks.programming,
They were, however,
limited
bysolve
the ability
to
estimate
only
one
variable
by
a
single
model.
In
this
work,
we
introduce
an
extended
version
of
of real–world
and
tasks.
They
were,
limited
by the version
ability to
estimate
only regression
one variable
byclassification
a single model.
In this
work,
wehowever,
introduce
an extended
of
this
predictor
that
facilitates
an
artificial
evolution
of
forests
of
fuzzy
rules.
In
this
way,
multiestimate
only one
by an
a single
model.
In thisofwork,
weofintroduce
an extended
version
of
this predictor
thatvariable
facilitates
artificial
evolution
forests
fuzzy rules.
In this way,
multiple
variables
can
befacilitates
predictedan
byartificial
a single evolution
model that
is
able to
comprehend
complex
relations
this
predictor
that
of
forests
of
fuzzy
rules.
In
this
way,
multiple variables can be predicted by a single model that is able to comprehend complex relations
between
inputcan
and
variables.
The model
usefulness
conceptcomplex
is demonstrated
ple
variables
beoutput
predicted
by a single
that of
is the
ableproposed
to comprehend
relations
between
input and
output
variables.
The usefulness
of
the
proposed
concept is demonstrated
by
the
evolution
of
forests
of
fuzzy
rules
for
simultaneous
wind
speed
and
direction
prediction.
between
input
and
output
variables.
The
usefulness
of
the
proposed
concept
is
demonstrated
by the evolution of forests of fuzzy rules for simultaneous wind speed and direction prediction.
by2017
the The
evolution
forests by
of Elsevier
fuzzy rules
©
Authors.of
Published
B.V. for simultaneous wind speed and direction prediction.

Peer-review
responsibility
the scientific
committee ofclassifier,
the International
Conference
Computational
Science
Keywords: under
machine
learning,offuzzy
rules, compound
forecasting,
windonspeed
and direction
Keywords: machine learning, fuzzy rules, compound classifier, forecasting, wind speed and direction
Keywords: machine learning, fuzzy rules, compound classifier, forecasting, wind speed and direction

1
1 Introduction
Introduction
1
Introduction
Prediction of wind speed and direction in specific locations is an important part of operational

Prediction of wind speed and direction in specific locations is an important part of operational
weather
forecasting
[1] and
hasdirection
many applications
in different
including
traffic,
Prediction
of wind speed
and
in specific locations
is domains
an important
part energy,
of operational
weather forecasting
[1] and
has many applications
in different
domains
including
energy,
traffic,
logistics
and
planning,
and
e.g.
emergency
response
[2].
weather
[1] and has
applications
in [2].
different domains including energy, traffic,
logistics forecasting
and planning,
e.g. many
emergency
response
Numerical
weather and
prediction
is based response
on computational
simulations of atmospheric prologistics
and planning,
e.g. emergency
[2].
Numerical
weather prediction
is based on computational
simulations of atmospheric processes.
The
simulations
rely
on
approximate
solutions
of
systems
of nonlinear
partial differenNumerical
weather prediction
is based onsolutions
computational
simulations
of atmospheric
processes.
The simulations
rely on approximate
of systems
of nonlinear
partial differential
equations
that,
in
a
simplified
way,
describe
the
evolution
of
the
atmosphere
[1]. However,
cesses.
The simulations
on approximate
solutions
of systems
of nonlinear
partial
differential equations
that, in a rely
simplified
way, describe
the evolution
of the
atmosphere
[1]. However,
atmospheric
are notthe
always
suitable
for practical
applications
and
tial
equationsnumerical
that, in aprediction
simplifiedmodels
way, describe
evolution
of the
atmosphere
[1]. However,
atmospheric
numerical
prediction
models
are not always
suitable
for practical
applications
and
operational
weather
forecasting.
Instead,
sophisticated
numerical
prediction
suites
that
combine
atmospheric
numerical
predictionInstead,
modelssophisticated
are not always
suitable prediction
for practical
applications
and
operational weather
forecasting.
numerical
suites
that combine
multiple
data
pre and
post–processing
strategies
with several
computational
models
various
operational
weather
forecasting.
Instead,
sophisticated
numerical
prediction suites
thatof
multiple data
pre and
post–processing
strategies
with several
computational
models
ofcombine
various
aspects
of operational
weather forecasts
are created.
Accurate
local adaptation
of numerical
multiple
pre and post–processing
strategies
with several
computational
models
of various
aspects ofdata
operational
weather forecasts
are created.
Accurate
local adaptation
of numerical
weather
forecasts
[1]
is
increasingly
demanded
by
applications
such
as
smart
grids
and auaspects
operational
forecasts
are created.
Accurate local
of numerical
weather offorecasts
[1] isweather
increasingly
demanded
by applications
such adaptation
as smart grids
and autonomous
(environmentally–powered)
wireless
sensor
and
actuator
networks.
The
traditional
weather
[1] is increasingly demanded
by applications
such
as smartThe
grids
and autonomousforecasts
(environmentally–powered)
wireless sensor
and actuator
networks.
traditional
tonomous (environmentally–powered) wireless sensor and actuator networks. The traditional
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
1
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
1
10.1016/j.procs.2017.05.195

296	

Simultaneous Prediction of Wind
Speed
andetDirection
by Computer
Evolutionary
Fuzzy
Forest
Pavel
Krömer
al. / Procedia
Science
108CRule
(2017)
295–304

Krömer

statistical adaptation methods are nowadays complemented by machine learning approaches
that utilize historical data observations to create accurate location–specific forecasting models [3, 4].
In the field of energy, knowledge of wind speed and direction is very important for wind
energy generation, integration, and management. Predicting the amount of generated wind
energy is crucial for the safe and effective operation of stochastic renewable energy sources such
as wind turbines and wind farms. The estimation of wind energy potential is essential for growth
of renewable energy applications that gain on importance in both developed and developing
regions [5,6]. Wind speed and direction can be forecasted with different time horizons. Long and
mid–term forecasts are needed for energy sources operations management (e.g. maintenance).
Short–term forecasts are essential for energy generation control [7]. The requirements of resource
and cost constrained devices such as wireless sensor nodes and active RFID tags emphasize the
need for well–localized but computationally inexpensive wind parameter forecasting models.
Fuzzy sets and fuzzy logic provide methods and tools for accurate and sensitive data analysis and processing [8]. Fuzzy decision trees [9], if–then rules [10], rule–based systems [11], and
hybrid models [12, 13] are examples of efficient, transparent, and easily interpretable classifiers
and value estimators. Besides their modelling capabilities and accuracy, fuzzy models are popular due to their linguistic character that allows their comprehension. They are also suitable
for use with resource constrained devices such as embedded systems because they can be expressed in a computationally lightweight form (e.g. lookup table, series of instructions). The
creation of accurate, coherent, and well–interpretable fuzzy systems is, however, a non-trivial
process [14–16].
In this work, evolutionary fuzzy rules [13] are employed to establish a new compound model
for joint wind speed and direction prediction. In order to accomplish this goal, the method is
extended from a single–output estimator, implemented as a single fuzzy data processing tree, to
a more general model that can estimate multiple output values at once. Genetic programming
is employed to evolve the estimator from data. A set of computational experiments with a
meteorological data set documents the usefulness of the proposed evolutionary approach and
shows that it is able to deliver results on par or better than a widely–used kernel–based machine
learning algorithm, support vector regression.
The rest of this work is organized in the following way. Related approaches, dealing with
the artificial evolution of fuzzy systems, are briefly summarized in section 2. The proposed
fuzzy rule forest and the underlying method of evolutionary fuzzy rules are detailed in section 3. Experimental evaluation of the proposed approach on a real–world data set is presented
in section 4 and major conclusions are drawn in section 5.

2

Related work

Evolutionary methods have been used in the area of fuzzy systems and linguistic modelling
extensively [14–16]. They were employed for system learning [14,15,17], parameter optimization
and tuning [16], and e.g. rule selection [16]. The need for bio–inspired learning and optimization
in the area of fuzzy systems is often underlined by the need to process high–dimensional and
high–volume data [17].
The use of evolutionary computation in fuzzy systems is the field of study of genetic fuzzy
systems [15]. The symbolic nature of evolutionary algorithms such as genetic programming
makes them a suitable tool to search for interpretable fuzzy models and rules. There are two
main approaches to evolutionary fuzzy system learning [15]. In the Pittsburgh approach, each
chromosome models the whole evolved system (e.g. a complete rule base) and uses the artificial
2

	

Simultaneous Prediction of Wind
Speed
andetDirection
by Computer
Evolutionary
Fuzzy
Forest
Pavel
Krömer
al. / Procedia
Science
108CRule
(2017)
295–304

Krömer

evolution in a traditional, population–based manner. The Michigan approach, on the other
hand, takes the entire population as a model of a single fuzzy system that is in every generation
iteratively improved in a process similar to trajectory–based machine learning.

2.1

Artificial evolution of fuzzy systems

Artificial evolution of fuzzy systems has been the subject of a vast number of research works
and multiple reviews [15, 16]. Evolutionary learning of conjunction–based and implication–
based fuzzy rule bases was proposed in [18, 19]. The use of genetic programming (GP) has
improved the readability and interpretability of fuzzy rules without the loss of system accuracy.
It was also shown that conjunction and implication–based rules require different fitness criteria.
Fuzzy systems, evolved by genetic programming according to [18, 19], were applied in the areas
of structural engineering and structural design. Another GP–based approach to learning of
understandable and compact fuzzy rule bases was presented in [20]. The authors proposed an
algorithm featuring a context–free grammar for fuzzy rule generation, a Michigan–like rule base
encoding and a combined local and global fitness of rules in the population. Moreover, several
additional mechanisms such as diversity maintenance and fuzzy rule hierarchy were used to
improve the process. The study evaluated the algorithm on a series of high–dimensional problems, taken mostly from the UCI machine learning repository. It was shown that the proposed
algorithm, named GP–COACH, outperformed several other machine learning algorithms.
An application of a hybrid genetic algorithm for creation of fuzzy rule–based classification
systems for high–dimensional problems was proposed in [17]. The authors used a genetic algorithm with local search (in fact a memetic approach) in combination with integer programming
to create a well–interpretable rule base. The evolutionary algorithm was employed to find
several classification rules for each problem class and the integer programming was utilized
to select rules from the set of all generated rules. The algorithm was evaluated on several
high–dimensional problems from the UCI machine learning repository and it was shown that it
can produce compact sets of well–interpretable rules. A genetic fuzzy classification model was
introduced in [21]. The work suggested the use of a multi–gene genetic programming to learn
if–then fuzzy rules for classification. The multi–gene GP represents each individual as a series
of tree–like genes that form partial problem solutions. A high–level gene combination constitutes a complete solution associated with each chromosome. The method was evaluated on a
series of well–known data sets and shown competitive with established algorithms including e.g.
GP–COACH [20].
This short overview demonstrates that evolutionary algorithms represent a family of first–
class instruments frequently employed for fuzzy system development. In this work, a novel
compound evolutionary–fuzzy method for joint wind speed and direction is proposed.

3

Evolutionary fuzzy rules

Evolutionary fuzzy rules (FR) [13, 22] are simple yet successful classification and regression
instruments based on the merger of fuzzy information retrieval and genetic programming. The
fuzzy set theory provides the theoretical background behind fuzzy information retrieval and
evolutionary fuzzy rules. The concepts of information retrieval are employed to interpret processed data and to define the classification and regression model. Genetic programming [23]
is used as a generic, problem–independent meta–heuristic machine learning algorithm for the
evolution of symbolic rules.
3

297

298	

Simultaneous Prediction of Wind
Speed
andetDirection
by Computer
Evolutionary
Fuzzy
Forest
Pavel
Krömer
al. / Procedia
Science
108CRule
(2017)
295–304

Krömer

Essentially, evolutionary fuzzy rules are soft classifiers heavily inspired by the area of information retrieval (IR). In the IR, extended Boolean IR model utilizes fuzzy set theory and
fuzzy logic for flexible and accurate search [24]. It uses extended Boolean queries that consist
of search terms, operators, and weights, and evaluates them against an internal representation (index) of a collection of documents. Evolutionary fuzzy rules use similar basic concepts,
data structures, and operations, and employ them for general data processing tasks such as
classification, prediction, and so forth.
The data, processed by a fuzzy rule, is a real–valued matrix. Each row of the matrix
corresponds to a single data record which is interpreted as a fuzzy set of features. A general
data matrix, D, with m rows (records) and n columns (attributes, features) can be mapped to an
IR index that describes a collection of objects. Each fuzzy rule is a symbolic expression that can
be parsed into a tree structure. The tree structure consists of nodes and leafs (terminal nodes).
In the fuzzy rule, three types of terminal nodes are recognized. A feature node represents
the name of an input feature (variable). A past feature node defines a requirement on certain
feature in a previous data record. The index of the previous data record (current - 1, current 2 etc.) is a parameter of the node. A past output node puts a requirement on a previous output
of the predictor. The index of the previous output (current - 1, current - 2 ) is a parameter of
the node. An example of a fuzzy rule written down using an infix notation is given bellow:
f1:0.5 and:0.4 (f2[1]:0.3 or:0.1 ([1]:0.1 and:0.2 [2]:0.3))
where f1:0.5 is a feature node, f2[1]:0.3 is a past feature node, and [1]:0.5 is a past output
node. Different node types can be used when dealing with different data sets. For example,
past feature past output nodes are useful for time series analysis and to process data sets where
the ordering of records matters. However, they are infeasible for models of regular data sets.
The feature node is the basic building block of all FR–based classifiers and value estimators for
arbitrary data sets.
The operator nodes, supported within the framework of evolutionary fuzzy rules, are and,
or, not, prod, and sum nodes. However, more general and domain specific operators can be
used as well. Both nodes and leafs are weighted to soften the criteria they represent. The
operators and, or, not, prod, and sum are evaluated using fuzzy set operations, extensions
of crisp set operations to fuzzy sets. They are defined using the characteristic functions of
combined fuzzy sets [25]. The standard t-norm (1) and t-conorm (2) are used to implement and
and or operators, respectively. Fuzzy complement is used to evaluate of the not operator (3).
Product t-norm (4) is employed to evaluate the prod operator, and its dual product t-conorm (5)
is employed to evaluate the sum operator.
t(x, y) = min(x, y)
s(x, y) = max(x, y)

(1)
(2)

c(x) = 1 − x
tprod (x, y) = xy

(3)

sprod (x, y) = a + b − ab

(5)

(4)

The FRs have been successfully used for classification [13, 22] and regression [13]. Although
machine–generated, they retain the understandable structure and ease of interpretation inherited from extended Boolean search expressions and allow a soft classification/regression without
the complexity and computational costs of full–featured fuzzy rule–based systems [13]. Their
tree structure, however, makes them infeasible for application scenarios involving simultaneous
prediction of multiple output variables. In this work, a minimalist generalization of FR to a
forest of fuzzy rules is proposed.
4

	

Simultaneous Prediction of Wind
Speed
andetDirection
by Computer
Evolutionary
Fuzzy
Forest
Pavel
Krömer
al. / Procedia
Science
108CRule
(2017)
295–304

3.1

Krömer

Fuzzy Rule Forest

Evolutionary fuzzy rule forest (FRF) is a compound classifier comprising of k evolutionary
fuzzy rules that are simultaneously applied to a vector of input variables, d ∈ D, and generate
a vector of k output values, (o1 , o2 , . . . , ok )
F RF (d) = (F R1 (d), F R2 (d), . . . , F Rk (d)) = (o1 , o2 , . . . , ok ).

(6)

The FRF is a straightforward extension of FRs that enables its application in domains where
models with multiple outputs are needed. Each FR in the model processes input data independently and generates a single output value. It uses the same set of operators as FR and
introduces only a single modification to one of the terminal nodes. The past output node has
in an FRF two parameters: index of the previous output and index of the corresponding FR.
That allows the use of previous estimates, produced by all rules in the forest, as building blocks
of the evolved compound predictor. A graphical example of an FRF is provided in fig. 1.
F R2

F Rk

sum:0.1

or:0.44

F R1
and:0.4

f1:0.5

or:0.1

not:0.45

f2[1]:0.9 and:0.2

o[0,3]

[1]:0.1

or:0.7

f1:0.45

f7:0.45

prod:0.15

f2[1]:0.2

[1]:0.41

f1:0.35

[2]:0.3

f5:0.11

[2]:0.3

Figure 1: Example of a fuzzy rule forest.
The evaluation of an FRF is simple and involves the calculation of the outputs of all FRs in
the forest. The calculations are independent and can be performed in parallel. The evolution
of FRF is in the proposed approach performed by genetic programming. A Pittsburgh–like
approach was adopted for FRF representation. An FRF chromosome consists of a series of
instructions in reverse polish notation. They encode the operations of the forest and are interpreted by a virtual stack machine. The instruction set contains instructions corresponding to
the operations of FR nodes and one special instruction, SI. SI is a reserved system instruction
that represents the end of the code of one rule in the FRF. Using this approach, an entire FRF
comprising of multiple FRs can be stored in a single linear chromosome, as illustrated in fig. 2.
The length of the chromosomes depends on the number and size of the encoded FRs and may
vary between the individuals in the population. GP operators were implemented with respect
to the semantics of the FRF and are applied directly to the chromosomes. They were designed
so that when applied to correctly formed FRs (valid instruction sequences), they guarantee that
the modified chromosome will contain only correctly formed FRs as well.
Mutation is implemented by a stochastic application of the following operations: i) removal
of a randomly selected subtree, ii) replacement of a randomly selected node by a new randomly
generated subtree, iii) replacement of a randomly selected node by another compatible node,
5

299

300	

Simultaneous Prediction of Wind Speed and Direction by Evolutionary Fuzzy Rule Forest
Pavel Krömer et al. / Procedia Computer Science 108C (2017) 295–304



F R1

I(1)

I(2)



...

I(i−1)



SI



F R2

I(i+1)



...

I(j−1)



SI



Krömer

F R3

I(j+1)

...



I(k−1)

I(k)



Figure 2: An example of a FRF chromosome. I(i) stands for an executable FR instruction and
SI is the separator instruction.
and iv) a combination of the above. The linear structure of FRF chromosomes enables the use
of traditional genetic recombination strategies with only minor modifications. A modified one–
point crossover, implemented in a way that maintains the number and correctness of the FRs in
the forest, was employed. The crossover operator selects a random gene, x, from a FR, F R(x) ,
located in the first parent chromosome. Then, a random gene compatible with x is selected from

the corresponding FR in the second parent chromosome, F R(x)
∈ F RFp2 . Finally, the marked
parts of parent chromosomes (single genes or complete subtrees) are exchanged between F RFp1
and F RFp2 to form two new offspring chromosomes. The actions, required to implement both
proposed genetic operators, can be executed by the stack machine very efficiently.
The fitness function used by the FRF is a weighted linear combination of the fitness values
of all FRs in the forest
ffit (F RF ) =

k

i=1


(F Ri ).
wi · ffit

(7)


(F Ri ), can be an arbitrary similarity,
The fitness function employed by individual fuzzy rules, ffit
error, or goodness–of–fit measure. In this work, a fuzzy version of the generalized F–score IR
measure (Fβ ), used in the original FR design [13, 22], was employed. It is a simple aggregation
method that combines the precision (specificity) and recall (sensitivity) of the estimator into a
single quality score.

4

Experiments

The proposed method was employed to learn a one–step–ahead wind speed and direction model
from a data set with annual meteorological records taken at a single location. The data set
was downloaded from the University of Waterloo weather station data archive1 . It contains a
number of meteorological and auxiliary variables measured by an automated weather station
in 15–minute intervals between the years 1998 and 2017. The data set was preprocessed and
cleaned to be more suitable for the conducted experiments. Redundant and confusing variables
such as battery voltage and wind speed and direction at rain gauge were removed and only
temporal information, air temperature, relative humidity, atmospheric pressure, and current
wind speed and direction remained as input variables. Next step wind speed and direction
values were used as output (target) variables. All variables were normalized to the range [0, 1]
to conform with the requirements of the FRF method. Weather records from 1998 were used
as training data and weather records from following decade (1999 – 2009) as test data sets.
A joint one–step–ahead wind speed and direction estimator was learned by the artificial
evolution of the FRF model. A series of computational experiments was performed to evaluate
1 http://weather.uwaterloo.ca/data.html

6

	

Simultaneous Prediction of Wind Speed and Direction by Evolutionary Fuzzy Rule Forest
Pavel Krömer et al. / Procedia Computer Science 108C (2017) 295–304

Krömer

MAE
predictor
FRF (speed)
FRF (dir.)
−SVR1 (speed)
−SVR2 (dir.)

Min

Mean (σ)

Max

0.02552
0.07324

0.02634 (0.00086)
0.07801 (0.00527)

0.02847
0.09678

–
–

–
–

0.02828
0.08600

Table 1: Final mean absolute error (MAE) of
the prediction models on the training data set.
Figure 3: Boxplot of training results.
the ability of the proposed compound approach to learn target variables. The results obtained by
an evolutionary FRF were compared to those delivered by a single–output kernel–based machine
learning model. In the case of the single–output predictors, separate models of wind speed and
direction were created. Support vector regression was used as a baseline model because it is an
algorithm frequently used in the domains of wind speed and direction forecasting [3–5].
The FRF used the following fixed parameters, selected on the basis of best practices, past
experience, and initial trial–and–error runs: population size 100, mutation probability 0.02,
crossover probability 0.8, and the maximum number of generations 10,000. Due to the stochastic
nature of the method, all FRF experiments were repeated 30 times independently and the
average results are reported. The employed support vector regression algorithm was −SVR [26]
with linear kernel, penalty coefficient C = 1.0,  = 0.1, and tolerance (stopping criterion) set
to 0.001.

4.1

Results

The ability of the proposed approach to learn a compound wind speed and direction model from
data and to predict wind variables was evaluated in a series of computational experiments. The
results of model training in terms of mean absolute error (MAE) of output variables normalized
to the interval [0, 1] are summarized in table 1. The table illustrates that the best and average
wind speed forecasting models discovered by FRF achieve approximately 10 and 7 percent lower
error than the −SVR model. In case of one–step–ahead wind direction forecasting, best and
average FRF models were 15 and 10 % better than the −SVR wind direction model. The worst
FRF model had 0.6 % higher MAE than the −SVR wind speed model and 12% higher MAE
than the −SVR wind direction model. That indicates that the majority of independent FRF
runs ended with a predictor more accurate than −SVR. It is also worth reminding that each
FRF estimator models both output variables while separate wind speed and direction models
were tranined by support vector regression. The results of model training are also visualized
in fig. 3. The boxes span from the first (Q1 ) to the third (Q3 ) quartile and median (Q2 ) is
illustrated by a red line. Whiskers are placed at Q1 − 1.5(Q3 − Q2 ) and Q3 + 1.5(Q3 − Q2 ),
respectively. Outliers are indicated by ’+’ and the result of −SVR by a ’×’ marker, respectively.
Figure 3 shows that the −SVR models have an error corresponding roughly to Q3 +1.5(Q3 −Q2 )
of FRF training error. That means that only 0.7 % or less FRF models have learned the training
data with a lower accuracy.
7

301

302	

Krömer
et al. / Procedia
Computer Science
108C
(2017)
295–304
Simultaneous Prediction of WindPavel
Speed
and Direction
by Evolutionary
Fuzzy
Rule
Forest

Krömer

Next, the ability of the best found FRF model to estimate one–step–ahead wind speed
and direction from previously unknown data was evaluated. The FRF model with the lowest
training MAE was selected and used to predict wind parameters for data sets collected in the
same location between the years 1999 – 2009. FRF and −SVR–based forecasts are summarized
in table 2. The table clearly shows that the FRF model has achieved lower error than both
−SVR models for all validation data sets.
Data set (year)
predictor 1999

2000

2001

2002

2003

2004

2005

2006

2007

2008

2009

FRF (speed) 0.03023 0.03241 0.02352 0.02317 0.02984 0.03004 0.02667 0.03489 0.02737 0.02882 0.03080
FRF (dir.) 0.07521 0.07924 0.06895 0.06289 0.06537 0.06387 0.07064 0.07089 0.07358 0.06883 0.07236
−SVR1 (speed) 0.03248 0.03423 0.02778 0.02493 0.03234 0.03150 0.04242 0.03754 0.03151 0.03138 0.03280
−SVR2 (dir.) 0.09020 0.09121 0.07478 0.06985 0.07568 0.07391 0.08235 0.07793 0.08054 0.07613 0.08050

Table 2: MAE of prediction models applied to test data sets.
Graphical illustrations of −SVR wind speed forecasts on the training and on the first test
data set are provided in fig. 4. Wind direction forecasts by −SVR are shown in fig. 5. The
figures demonstrate that wind direction forecasting is a harder task than wind speed forecasting.
Apparently, wind direction has in the location where the data was collected a higher variance
and is less predictable than wind speed. A visual illustration of the predictions by the best
evolved FRF model is shown in fig. 6.

(a) Training (1998)

(b) Test (1999)

(a) Training (1998)

(b) Test (1999)

Figure 4: SVR wind speed model (−SVR1). Figure 5: SVR wind direction model (−SVR2).

(a) Wind speed (1998)

(b) Wind direction (1998)

(c) Wind speed (1999)

(d) Wind direction (1999)

Figure 6: The best joint wind speed and direction model evolved by FRF.

8

	

Pavel
Krömer
al. / Procedia
Science
108CRule
(2017)
295–304
Simultaneous Prediction of Wind
Speed
andetDirection
by Computer
Evolutionary
Fuzzy
Forest

5

Krömer

Conclusions

A new machine learning model based on fuzzy information retrieval and genetic programming
was in this work proposed for joint wind speed and direction forecasting. The proposed approach
extends an older multi–paradigm algorithm – evolutionary fuzzy rules – to model multiple
output (target) variables at the same time and facilitates an artificial evolution of fuzzy rule
forests. Fuzzy rule forests are composed of multiple fuzzy rules encoded as a series of instructions
for a virtual stack machine. The chromosomes employ a reverse polish notation that simplifies
the application of genetic operators that evolve the model. Although particular mutation and
crossover operators are used in this work, any suitable mutation and recombination strategies,
implemented with respect to chromosome structure and semantics, can be employed to evolve
fuzzy rule forests. The virtual stack machine is lightweight, memory efficient, and well–scalable.
It is suitable for massively parallel environments and can be implemented in a data–parallel
manner.
The proposed approach is evaluated on simultaneous wind speed and direction prediction.
This real–world problem has a number of practical applications and has been addressed by a
number of machine learning approaches in the past. Inexpensive location–specific wind speed
and direction forecasting are of special interest for resource-constrained devices such as wireless
sensor nodes and active RFID tags. A series of computational experiments with a meteorological
data set revealed that the proposed approach is competitive when compared with a traditional
kernel–based support vector regression method. The resulting lightweight classifier can be used
for an inexpensive approximation of one–step–ahead wind speed and direction.

Acknowledgement
This work was supported by the Czech Science Foundation under the grant no. GJ16-25694Y
and by the projects SP2017/100 and SP2017/85 of the Student Grant System, VŠB-Technical
University of Ostrava.

References
[1] J. Coiffier, Fundamentals of Numerical Weather Prediction. Cambridge University Press, 2011.
[2] M. Brettle, “Can numerical weather prediction replace observations?,” Weather, vol. 61, no. 7,
pp. 194–195, 2006.
[3] M. G. De Giorgi, S. Campilongo, A. Ficarella, and P. M. Congedo, “Comparison between wind
power prediction models based on wavelet decomposition with least-squares support vector machine (ls-svm) and artificial neural network (ann),” Energies, vol. 7, no. 8, pp. 5251–5272, 2014.
[4] M. Mohandes, T. Halawani, S. Rehman, and A. A. Hussain, “Support vector machines for wind
speed prediction,” Renewable Energy, vol. 29, no. 6, pp. 939 – 947, 2004.
[5] X. Liu, X. Kong, and K. Y. Lee, “Wind speed prediction with high efficiency convex optimization
support vector machine,” in Proceeding of the 11th World Congress on Intelligent Control and
Automation, pp. 908–915, June 2014.
[6] T. Sile, L. Bekere, D. Cepite-Frišfelde, J. Sennikovs, and U. Bethers, “Verification of numerical
weather prediction model results for energy applications in latvia,” Energy Procedia, vol. 59,
pp. 213 – 220, 2014. European Geosciences Union General Assembly 2014, EGU Division Energy,
Resources & the Environment (ERE).
[7] T. El-Fouly, E. El-Saadany, and M. Salama, “One day ahead prediction of wind speed and direction,” Energy Conversion, IEEE Transactions on, vol. 23, pp. 191–201, March 2008.

9

303

304	

Simultaneous Prediction of Wind
Speed
andetDirection
by Computer
Evolutionary
Fuzzy
Forest
Pavel
Krömer
al. / Procedia
Science
108CRule
(2017)
295–304

Krömer

[8] J. C. Bezdek, J. Keller, R. Krisnapuram, and N. R. Pal, Fuzzy Models and Algorithms for Pattern
Recognition and Image Processing (The Handbooks of Fuzzy Sets). Secaucus, NJ, USA: SpringerVerlag New York, Inc., 2005.
[9] C. Marsala and B. Bouchon-Meunier, “An adaptable system to construct fuzzy decision trees,”
in 18th Int. Conf. of the North American Fuzzy Inf. Processing Society - NAFIPS (Cat.
No.99TH8397), pp. 223–227, 1999.
[10] A. Verikas, J. Guzaitis, A. Gelzinis, and M. Bacauskiene, “A general framework for designing a
fuzzy rule-based classifier,” Knowledge and Information Systems, pp. 1–19, 2010.
[11] D. Dubois and H. Prade, “What are fuzzy rules and how to use them,” Fuzzy Sets and Systems,
vol. 84, no. 2, pp. 169 – 185, 1996.
[12] J. S. R. Jang, “ANFIS: adaptive-network-based fuzzy inference system,” IEEE Transactions on
Systems, Man, and Cybernetics, vol. 23, no. 3, pp. 665–685, 1993.
[13] P. Krömer, S. S. J. Owais, J. Platos, and V. Snásel, “Towards new directions of data mining by
evolutionary fuzzy rules and symbolic regression,” Computers & Mathematics with Applications,
vol. 66, no. 2, pp. 190–200, 2013.
[14] J. Casillas, O. Cordón, and F. Herrera, “Learning fuzzy rules using ant colony optimization algorithms,” in Abstract proceedings of ANTS2000 From Ant Colonies to Arti Ants: A Series of
International Workshops on Ant Algorithms, pp. 13–21, 2000.
[15] O. Cordón, F. Gomide, F. Herrera, F. Hoffmann, and L. Magdalena, “Ten years of genetic fuzzy
systems: current framework and new trends,” Fuzzy Sets and Systems, vol. 141, no. 1, pp. 5 – 31,
2004.
[16] O. Cordón, “A historical review of evolutionary learning methods for mamdani-type fuzzy rulebased systems: Designing interpretable genetic fuzzy systems,” International Journal of Approximate Reasoning, vol. 52, no. 6, pp. 894 – 913, 2011.
[17] E. K. Aydogan, I. Karaoglan, and P. M. Pardalos, “hga: Hybrid genetic algorithm in fuzzy rulebased classification systems for high-dimensional problems,” Applied Soft Computing, vol. 12, no. 2,
pp. 800 – 806, 2012.
[18] M. Freischlad and M. Schnellenbach-Held, “A machine learning approach for the support of preliminary structural design,” Advanced Engineering Informatics, vol. 19, no. 4, pp. 281 – 287, 2005.
[19] M. Freischlad, M. Schnellenbach-Held, and T. Pullmann, “Evolutionary generation of implicative
fuzzy rules for design knowledge representation,” in EG-ICE, pp. 222–229, 2006.
[20] F. Berlanga, A. Rivera, M. del Jesus, and F. Herrera, “GP-COACH: genetic programming-based
learning of COmpact and ACcurate fuzzy rule-based classification systems for High-dimensional
problems,” Information Sciences, vol. 180, no. 8, pp. 1183 – 1200, 2010.
[21] A. Koshiyama, T. Escovedo, D. Dias, M. Vellasco, and R. Tanscheit, “GPF-CLASS: a genetic
fuzzy model for classification,” in Evolutionary Computation (CEC), 2013 IEEE Congress on,
pp. 3275–3282, 2013.
[22] P. Kromer, J. Platos, V. Snasel, and A. Abraham, “Fuzzy classification by evolutionary algorithms,” in Systems, Man, and Cybernetics (SMC), 2011 IEEE Int. Conf. on, pp. 313–318, 2011.
[23] M. Affenzeller, S. Winkler, S. Wagner, and A. Beham, Genetic Algorithms and Genetic Programming: Modern Concepts and Practical Applications. Chapman & Hall/CRC, 2009.
[24] G. Pasi, “Fuzzy sets in information retrieval: State of the art and research trends,” in Fuzzy
Sets and Their Extensions: Representation, Aggregation and Models (H. Bustince, F. Herrera, and
J. Montero, eds.), vol. 220 of Studies in Fuzziness and Soft Computing, pp. 517–535, Springer
Berlin / Heidelberg, 2008.
[25] L. A. Zadeh, “Fuzzy sets,” Information and Control, vol. 8, pp. 338–353, 1965.
[26] A. J. Smola and B. Schölkopf, “A tutorial on support vector regression,” Statistics and Computing,
vol. 14, pp. 199–222, Aug. 2004.

10

