Available online at www.sciencedirect.com

ScienceDirect
This
This
This
This

space
is reserved
for the
Procedia
header,
Procedia
Computer Science
108C
(2017) 58–67
space is reserved for the Procedia header,
space is reserved for the Procedia header,
space is reserved for the Procedia header,

do
do
do
do

not
not
not
not

use
use
use
use

it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Efficient
Efficient
Efficient
Efficient

Community
Community Re-creation
Re-creation in
in Multilayer
Multilayer Networks
Networks
Community
Re-creation
in
Multilayer
Using
Boolean
Operations
Community
in Multilayer Networks
Networks
Using Re-creation
Boolean Operations
1Using Boolean Operations
2
Abhishek SantraUsing
, Sanjukta
Bhowmick
, and Sharma Chakravarthy1
Boolean
Operations
Abhishek Santra1 , Sanjukta Bhowmick2 , and Sharma Chakravarthy1
1
2
1
Abhishek Santra
Bhowmick
Chakravarthy11
Information
Technology
Laboratory,
CSESharma
Department
1 , Sanjukta
2 , and
1
Abhishek Santra
, Sanjukta
, and
Chakravarthy
Information
Technology
Laboratory,
CSESharma
Department
University
of Texas
atBhowmick
Arlington,
Arlington,
Texas, USA

2
2
2
2

Department
Department
Department
Department

of
of
of
of

1
University
of Texas
at Arlington,
Arlington,
Texas, USA
Information
Technology
Laboratory,
CSE
Department
Computer
Science,
University
of Nebraska
at Omaha,
Omaha,
1
Information
Technology
Laboratory,
CSE
Department
Computer
Science,
University
of Nebraska
at Omaha,
Omaha,
University
of Texas
at Arlington,
Arlington,
Texas, USA
University
of Texas
at Arlington,
Arlington,
Texas, USA
Computer
Science,
University
of Nebraska
at Omaha,
Omaha,
Computer Science, University of Nebraska at Omaha, Omaha,

Nebraska,
Nebraska,
Nebraska,
Nebraska,

USA
USA
USA
USA

Abstract
Abstract
Networks are useful mathematical representations of systems of interrelated entities. In
Abstract
Networks
areentities
useful can
mathematical
representations
of systems
of interrelated
entities.
In
cases
where the
be related via
different factors,
the models
can be extended
to form
Abstract
cases
where
the
entities
can
be
related
via
different
factors,
the
models
can
be
extended
to
form
Networks
are
useful
mathematical
representations
of
systems
of
interrelated
entities.
In
networks
of networks
or mathematical
multilayer networks.
However,ofanalyzing
multilayer
networks
can get
Networks
areentities
useful
representations
systems
of interrelated
entities.
In
networks
of
networks
or
multilayer
networks.
However,
analyzing
multilayer
networks
can
get
cases
where
the
can
be
related
via
different
factors,
the
models
can
be
extended
to
form
increasingly
more
expensive
as related
the number
of layersfactors,
increase.
cases
where
the
entities
can
be
via
different
the
models
can
be
extended
to
form
increasingly
more
as
number
of layers
increase.
networks
of networks
or multilayer
networks.
However,
analyzing
get
We address
theexpensive
problem
of the
efficiently
finding
communities
in multilayer
multilayer networks
networks.can
Comnetworks
of networks
or multilayer
networks.
However,
analyzing
multilayer
networks
can
get
increasingly
more
expensive
as
the
number
of
layers
increase.
We
address
the
problem
of
efficiently
finding
communities
in
multilayer
networks.
Communities
aremore
groups
of tightly
connected
entities
that
indicate that entities in the group are
increasingly
expensive
as
the
number
of
layers
increase.
munities
are groups
of tightly
connected
entities
that indicate
that
entities conditions,
in
the group
are
We address
problem
ofthat
efficiently
finding easily
communities
in
multilayer
networks.
Comsimilar.
Here
wethe
demonstrate
given certain
verifiable
structural
which
We address
the
problem
ofthat
efficiently
finding easily
communities
in
multilayer
networks.
Comsimilar.
Here
we
demonstrate
given
certain
verifiable
structural
conditions,
which
munities
are
groups
of
tightly
connected
entities
that
indicate
that
entities
in
the
group
are
we
term as
selfgroups
preserving
communities,
weentities
can use that
fundamental
Boolean
operations
combine
munities
are
of tightly
connected
indicate
that
entities
in theto
group
are
we
term
as
self
preserving
communities,
we
can
use
fundamental
Boolean
operations
to
combine
similar.
Here
we
demonstrate
that
given
certain
easily
verifiable
structural
conditions,
which
the
communities
obtained
fromthat
eachgiven
network
layer
to obtain
the structural
communities
over the which
entire
similar.
Here
we
demonstrate
certain
easily
verifiable
conditions,
the
communities
obtained
from each
network
to obtain datasets
the
communities
overtoaccidents,
the
entire
we term
asnetwork.
self preserving
communities,
we
can layer
use
Boolean
operations
combine
multilayer
Our approach,
when
applied
to fundamental
real-world
such
as traffic
we term
asnetwork.
self preserving
communities,
we
can layer
use
fundamental
Boolean
operations
toaccidents,
combine
multilayer
Our
approach,
when
applied
to
real-world
datasets
such
as
traffic
the
communities
obtained
from
each
network
to
obtain
the
communities
over
the
entire
shows
that we canobtained
reduce the
time
to network
find communities
in multilayer
networks by
over
the
communities
from
each
layer
to obtain
the communities
over
the40%.
entire
shows
that
we
can
reduce
the
time
to
find
communities
in
multilayer
networks
by
over
40%.
multilayer
network.
Our
approach,
when
applied
to
real-world
datasets
such
as
traffic
accidents,
Our proposed
technique
makes when
severalapplied
important
contributions
to the
nascent
area
of mulmultilayer
network.
Our
approach,
to
real-world
datasets
such
as
traffic
accidents,
shows
we canWe
reduce
the
time
to find
communities
in multilayer
byfrom
overmultiple
40%.
Ourthat
proposed
technique
makes
several
important
to networks
the results
nascent
area
of
multilayer
networks.
present
an
elegant
and
low-cost contributions
method
to combine
shows
that
we canWe
reduce
the
time
to find
communities
in multilayer
networks
byfrom
overmultiple
40%.
tilayer
networks.
present
an
elegant
and
low-cost
method
to
combine
results
Our
proposed
technique
makes
several
important
contributions
to
the
nascent
area
of
mullayers,
without
recomputing
the combined
layers. Ourcontributions
method also to
makes
it easierarea
to add
and
Ournetworks.
proposed
technique
makes
several
important
the results
nascent
of mullayers,
without
recomputing
the
combined
layers.
Our
method
also
makes
it
easier
to
add
and
tilayer
We
present
an
elegant
and
low-cost
method
to
combine
from
multiple
process
new
information
at
individual
layers.
Together,
our
approach
addresses
both
the
variety
tilayer
networks.
We present
an elegant
andlayers.
low-cost
method
toalso
combine
results
from
multiple
process
new
information
at
individual
layers.
Together,
our
approach
addresses
both
the
variety
layers,
without
recomputing
the
combined
Our
method
makes
it
easier
to
add
and
aspect
of big data
by handling
data
types
as method
well as also
the volume
by
enabling
layers,
without
recomputing
the multiple
combined
layers.
Our
makes
itaspect
easier
to
add
and
aspect
of
big
data
by
handling
multiple
data
types
as
well
as
the
volume
aspect
by
enabling
process
new
information
at
individual
layers.
Together,
our
approach
addresses
both
the
variety
fast
analysis
of data fromatmultiple
networks.
process
new
information
individual
layers.
Together,
our
approach
addresses
both
the
variety
fast
analysis
databyfrom
multiple
networks.
aspect
of bigofdata
handling
multiple
data types as well as the volume aspect by enabling
aspect
of big
bynetwork;
handling
multiple
types composability
as well as the volume aspect by enabling
Keywords:
Multilayer
Graph
analysis;
Lossless
©
2017
The
Authors.
Published
by Elsevier
B.V. data
fast
analysis
ofdata
data
from
multiple
networks.
Keywords:
Multilayer
Graph
analysis;
Lossless
fast analysis
of responsibility
data network;
from multiple
networks.
Peer-review
under
of the
scientific
committee
of thecomposability
International Conference on Computational Science
Keywords: Multilayer network; Graph analysis; Lossless composability
Keywords: Multilayer network; Graph analysis; Lossless composability

1 Introduction
1 Introduction
1
Introduction
Networks
(or graphs) are important tools for modeling systems of interrelated entities that arise
1
Introduction
Networks
graphs)
are important
for modeling systems
of interrelated
entities
that arise
in a wide (or
variety
of disciplines
suchtools
as bio-informatics,
epidemiology
and social
sciences.
The

in
a widerepresent
variety
ofthe
disciplines
suchthe
as bio-informatics,
epidemiology
and social
sciences.
The
Networks
(or
graphs)
are
important
tools
for modeling
systems
of interrelated
entities
thatthem.
arise
vertices
entities
and
edges
depict the
pair-wise
relationship
between
Networks
(or
graphs)
are
important
tools
for modeling
systems
of interrelated
entities
thatthem.
arise
vertices
represent
the
entities
and
the
edges
depict
the
pair-wise
relationship
between
in
a
wide
variety
of
disciplines
such
as
bio-informatics,
epidemiology
and
social
sciences.
The
Analysis
ofvariety
the networks
can help
us as
understand
the characteristics
ofand
the social
underlying
systems.
in
a widerepresent
ofthe
disciplines
such
bio-informatics,
epidemiology
sciences.
The
Analysis
of
the
networks
can
help
us
understand
the
characteristics
of
the
underlying
systems.
vertices
entities
and
the
edges
depict
the
pair-wise
relationship
between
them.
For
example,
communities
or groups
of tightly
connected
vertices,
inrelationship
gene correlation
networks,
vertices
represent
the
entities
and
the
edges
depict
the
pair-wise
between
them.
For
example,
communities
or groups
tightly [6].
connected
vertices, in of
gene
Analysis
of the
networks
can
helpfunctionality
us of
understand
the characteristics
thecorrelation
underlyingnetworks,
systems.
indicate
genes
that
have similar
Analysis
of the
networks
can
helpfunctionality
us of
understand
the characteristics
thecorrelation
underlyingnetworks,
systems.
indicate
genes
that
have similar
For example,
communities
or groups
tightly [6].
connected
vertices, in of
gene
For
example,
communities
or
groups
of
tightly
connected
vertices,
in
gene
correlation
networks,
indicate genes that have similar functionality [6].
1
indicate genes that have similar functionality [6].
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
1
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
1
10.1016/j.procs.2017.05.246

	

Community Re-creation in Multilayer
Santra,
Bhowmick
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C (2017)
58–67and Chakravarthy

However, in many real-world situations, multiple types of relationships can exist between a
pair of entities. For example, connections in social networks can be via email, via phone or via
direct conversations. In these cases, a more accurate representation is to model separate networks based on each type of relationship. The set of these networks together form a multilayer
network. We assume the entities or vertices are the same in each layer, but their connections
change from layer to layer (we provide a more formal description in Section 3).
This higher accuracy comes at the cost of increased analysis time. If there are n layers,
corresponding to n different relationships, then 2n − 1 combinations of the layers are possible,
and for each combination we have to separately analyze the multilayer network thus formed.
Moreover, each new layer added will increase the cost of analysis exponentially, and the analysis
has to be recomputed for each such addition.
Our Contribution. To address this critical issue of expanding costs, we propose a
novel method to combine results from individual layers by using simple Boolean
functions. Specifically, consider an AND-composed network, formed by combining the layers
of the multilayer network using an AND-operation (i.e. an edge is retained only if it is present
in all the layers). Let CAN D be the set of communities in the AND composed network. Let the
sets of communities C1 . . . Ci . . . Cn be obtained from the network layers 1 . . . i . . . n, respectively.
Let CCOM B be the communities formed by AND operations over the communities from each
layer. We show that if each of the individual communities in the sets C1 . . . Ci . . . Cn conform to
a special property which we call self-preserving, then CCOM B would be equivalent to CAN D . To
summarize, if the set of communities from each network layer conforms to the self preserving
property, then the AND-operation on these communities produces the same set of communities
as that obtained from the AND-composed network.
Based on this observation we propose an algorithm where we first compute the communities
from each layer, check whether they are self-preserving and then combine them using an ANDoperation to compute the combined communities in AND-composed network. In addition to
providing analytical proofs, we also validate the correctness of our algorithm empirically on a
dataset of traffic accidents and a dataset of storms.

2

Related Work

Recently, multilayer networks [10] have been used to analyze varying interactions among the
same set of entities such as co-authorship network in different conferences [3], citation network
across different topics, interaction network based on calls/bluetooth scans [8] and friendship
network across different social platforms. In each of these cases, the relationship among the
entities is of the same type, and well-defined. In contrast, we focus on events that are associated
with different types of relations, and the connections are determined based on a threshold. There
has been relatively less work on creating and analyzing this type of multilayer networks.
Further, in order to holistically study an event, we have to study the impact of the combinations of the different network layers. Although, techniques based on information theory have
been proposed for multilayer protein-protein interactions [7], this is only for reducing the number of redundant layers through aggregation, but not as a generalized approach for composing
different layers to represent the corresponding combination of features as proposed here.
Community detection involves finding groups of tightly connected vertices in a network. This
is a well-studied problem in network analysis, and recent work has also looked into community
detection algorithms for multilayer networks [9,11]. Here we propose a novel approach by which
communities from individual layers can be combined to obtain communities of the composed
network. To the best of our knowledge, this technique of inferring the communities of the
2

59

60	

Community Re-creation in Multilayer
Santra,
Bhowmick
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C (2017)
58–67and Chakravarthy

combined network from layers of individual communities has not been studied before.

3

Creating Multilayer Networks

In this section we first provide a formal definition of multilayer networks and then describe how
we create these multilayer networks from multi-featured datasets.
Multilayer Networks. A multilayer network is defined by a set of n graphs G1 (V1 , E1 ),
G2 (V2 , E2 ), . . ., Gn (Vn , En ) and a set of edges E1,2 , E2,3 , . . . , En−1,n . Each graph Gi is formed
of the vertex set Vi , and the edge set Ei , which connects the vertices in Vi . The edges in set Ei,j ,
connect the vertices in graph Gi to the vertices in graph Gj . We term the edges in E1 , . . . , En
as intra-edges since they connect vertices in the same network, while the edges in E1,2 , . . .,
En−1,n are termed as inter-edges since they connect vertices in two different networks.
In this paper, we consider a specific type of network also known as a multiplex network.
A multiplex network consists of multiple types of relations, but the same type of entity. This
means that all vertex sets V1 , . . . , Vn , will represent the same set of entities, while each edge
set E1 , . . . En , will represent a different type of relation. We assume that each network has
the same set of vertices, i.e., V1 = V2 = . . . = Vn , and no relations across the networks are
necessary. Therefore, E1,2 , E2,3 , . . . , En−1,n are all empty sets.
Table 1: List of Notations used for Defining the Concepts.
Nf
Number of event features
NI

Number of event instances

Ii

The ith event instance

fk

The k th event feature

tk

f k type ∈ {numeric, nominal, date, time, location}

fik

Value of Ii for f k

Dtk (fik ,fjk )

Distance between Ii and Ij based on f k

τf k

Threshold value for similarity with respect to f k

Gk (Vk , Ek )/Gk

The k th layer

Vk

Set of nodes in the k th layer

Ek

Set of edges in the k th layer

(uki , ukj )

An edge between Ii and Ij in the k th layer

Multi-Source Datasets. Many real-world events are associated with multiple features (or
attributes). Formally, if NI is the total number of event instances and Nf is the total number
of event features, then in general the ith event instance, Ii , can be represented as an Nf -tuple,
N
Ii =< fi1 , fi2 , ..., fi f > ∀i ∈ {1, NI }, where fij is the j th feature’s value.
We define the distance metric, denoted by Dtk (fik , fjk ), as the measure of similarity between
two instances. It represents the distance between the ith and the j th instances based on the k th
event feature, which is of type tk . A lower distance value indicates higher similarity. The sample
distance measures, as defined by us, for the different types of features are as follows.
• Numeric (tk = numeric): These features are defined by real numbers. The distance metric is
defined as the absolute difference between their values.
3

	

Community Re-creation in Multilayer
Santra,
Bhowmick
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C (2017)
58–67and Chakravarthy

• Nominal (tk = nominal): These features have a discrete set of values. The distance metric is
0 if there is an exact match and undefined ( φ) otherwise.
• Date (tk = date): These features depict the date of the event. The distance measure is the
number of days between the occurrences of two instances.
• Time (tk = time): This feature gives the exact time of the event in hours, minutes and
seconds. To compute the distance metric we divide the day into 48 intervals of 30 minutes
each from [0000-0030) to [2330-0000). We assume that two events taking place around the
same time interval will be similar in nature, even if they happen on two different dates. The
distance measure is computed as the number of 30 minute intervals between two occurrences.
• Geographical Location (tk = location): The geographical location of an event is given by its
latitude and longitude. The distance metric is based on the haversine formula ( [5]) that
calculates the great-circle distance between two points on the earth’s spherical surface.
Creating the Multilayer Network. We now represent a multi-featured dataset as a multilayer network. For a given feature, a pair of events is similar if the value of the corresponding
distance metric is below a specified threshold. We create a separate network for each feature.
Two vertices (event instances) are connected in a network, if for that corresponding feature,
they are similar. Our multilayer network is created using the following information:
• A set, I, of all the event instances such that I = {I1 , I2 , ..., INI }.
• The type of the ith feature, ti . For the current paper, we have considered ti ∈ {numeric,
nominal, date, time, location}.
i
, fni ), to calculate the distance between two event instances, Im and In .
• The metric, Dti (fm
• A specified threshold value, τf i , that dictates the similarity between any two instances with
respect to the ith feature.
Formally, in the ith layer, the j th instance, Ij , will be depicted by the j th vertex, uij . The
presence of an undirected and unweighted edge in this layer, (uij , uik ), will depict that the j th
and the k th instances are similar to each other with respect to the ith feature. Each layer is
uniquely defined by the feature it represents, and will be denoted as Gi (Vi , Ei ) or Gi .

Figure 1: Snapshot of Multilayer Network (for features Light, Weather and Location) from the
Accident Dataset
Figure 1 shows a multilayer network for four accident instances. Similarity among the
accidents is considered with respect to two nominal features - Light Conditions and Weather
Conditions and one location based feature - (Latitude, Longitude), with the threshold value for
distance metric being 2 miles. Note that the connectivity of each layer is different, highlighting
the unique perspective of each feature. For instance, accident 2 and accident 3 had the same
light conditions when they occurred, but didn’t share the weather conditions. Representing
multi-featured datasets using multilayer networks provides the following benefits;
• Ease of handling the dataset incrementally. The multilayer network representation makes it
easy to add or delete new features into the data set. This is because each layer is generated
independently from other layers and hence only the affected layer has to be changed.
• Inferring relationships across features. The network model allows us to identify the strength
4

61

62	

Community Re-creation in Multilayer
Santra,
Bhowmick
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C (2017)
58–67and Chakravarthy

of relationships among instances. For example, instances that have an edge between them
across multiple layers are more strongly related than if they have an edge in only one layer.
• Identifying importance of combined features. The multilayer framework allows us to measure
the impact of combined features and identify their importance based on factors such as the
edge density, the number of connected components and the community structure.

4

Combining Network Layers Using Boolean Operations

Our goal is to develop efficient algorithms for finding communities in multilayer networks. For
a network with n layers, we can have a total of 2n − 1 different feature combinations of the
layers. We consider the following types of aggregation between any two layers Gi and Gj ; i)
both Gi and Gj , ii) Gi exclusively and, iii) Gj exclusively. For example, for a dataset with
two layers, light and weather, the combinations can be generated in the following ways: i) both
light and weather, ii) only light and not weather or iii) only weather and not light.
Since the vertex set remains the same for each layer, we want to combine the layers such that
the property of a vertex in one network layer does not conflict with the property of the same
vertex in another layer. Formally, consider that X(Gi ) is an analysis function for a multilayer
network G, with respect to the layer where the edges are defined by the feature f i . Our goal
is to define aggregation functions θ1 and θ2 , such that X(Gi θ1 Gj ) = X(Gi ) θ2 X(Gj ). That
is, the results obtained by analyzing an aggregation of network layers are equivalent to the
results obtained by first analyzing those individual layers and then combining their results.
To accomplish these aggregation goals we use the fundamental Boolean algebraic operators,
AND, OR and NOT. Given below is a brief description of how aggregation (or composition) of
individual layers is performed using these operators.
AND Composition. The AND composition over a set of layers includes an edge only if
it occurs in all the layers. Thus the pairs of event instances connected by edges satisfy the
threshold parameters for each of the required features.

Figure 2: Primitive Boolean Compositions for the Layers shown in Figure 1
Formally, the AND composition of two layers, Gi ( Vi , Ei ), Gj ( Vj , Ej ), will produce the
Dj
, is
AND-composed network, GiAN Dj ( ViAN Dj , EiAN Dj ). A representative vertex, uiAN
m
added to the set of vertices, ViAN Dj , for each event instance Im . For any event instance
pair, Im and In , if an edge exists between their representative vertices in both the layers, Gi
Dj
Dj
and Gj , then an edge, (uiAN
, uiAN
) becomes a part of the set of edges, EiAN Dj . This can
m
n
be generalized to k layers - (Gi1 AND Gi2 ) AND Gi3 ) ... AND Gik ), where a pair of event
ij
, fnij ) ≤ τf ij , for every j ∈ [1, k].
instances will have an edge between them if Dtij (fm
OR and NOT Compositions. The OR-Composed network can be generated to correspond to a union of edges (Figure 2 (b)). Unlike the AND and OR composition, the NOT
composition is applied to a single layer, which leads to the complement of the layer (Figure 2
(c)). Since these compositions are based on Boolean algebra, they will obey the associative,
5

	

Community Re-creation in Multilayer
Santra,
and Chakravarthy
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C Bhowmick
(2017) 58–67

Figure 3: Complex Compositions for the Layers shown in Figure 1
commutative, distributive and De Morgan’s laws. Thus any complex composition of layers can
be expressed using the defined AND, OR, and NOT operations, few of which have been shown
in Figure 3.

5

Community Re-creation in AND-Composed Networks

In this section, we analytically show that if communities of individual layers follow certain characteristics then we can reproduce the communities of the composed networks, by using Boolean
operations. This reduces the computational time because we can re-create the communities
using simple Boolean operations, rather than expensive community detection methods.
Re-creating Communities in AND-composed Networks. We first introduce the
concept of self preserving communities. A community is self preserving if the vertices in it are
so tightly connected such that even if only a subset of connected vertices remain in a community,
they will form a smaller community rather than joining an existing larger community.
Formally, consider a network G, that has a community whose vertices are given by the set
Cv . Now consider the network induced by a subset of vertices CvS ∈ Cv . If the vertices in CvS
form a community by themselves, for any subset CVS of Cv , where CvS  ≥ 3 and the vertices
in CvS are connected, then community Cv is self preserving.

Figure 4: Communities of Two Layers and their corresponding AND-Composed Layer
Lemma 1.1 If the communities in networks Gx and Gy are self-preserving, then the ANDcombination of the communities produced by each of these networks will be same as the communities produced by the AND-composed network created from Gx and Gy
6

63

64	

Community Re-creation in Multilayer
Santra,
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C Bhowmick
(2017) 58–67and Chakravarthy

Proof. Consider two networks Gx and Gy that have the same set of vertices, but different set
of edges. Moreover, both networks have only self-preserving communities. Now consider the
network GxAN Dy , which is the AND-composition of Gx and Gy . Only edges that are in both
Gx and Gy will be in the AND-composed network. Therefore the communities formed in the
AND-composed network will be based on a subset of edges from Gx and Gy . Since both Gx
and Gy have self preserving communities, therefore the communities formed in GxAN Dy will be
formed from the subsets of the communities in Gx and Gy . Most importantly, due to the self
preserving nature, no new grouping of vertices will be formed in GxAN Dy . Therefore we can
reconstruct the communities in GxAN Dy by taking the intersection of the communities of Gx
and Gy .
An example of such reconstruction is
given in Figures 4-5. Figures 4 (a) and
4 (b) show two layers and their corresponding communities, all of which are selfpreserving. Figure 4 (c) shows the ANDcomposed network and the resultant communities. Figure 5 shows that for this example, we can reconstruct the communities
for the AND-composed network by taking
the intersection of the communities from
Figure 5: Pairwise Intersection of the Communithe two layers.
ties in the Individual Layers Re-creates the Communities of the AND-Composed Layer

6

Experimental Results

We now present our experimental results on generating multilayer networks from datasets with
multiple features and re-creating the communities of the composed layers. Specifically, we i)
construct user-defined individual layers, ii) perform Boolean compositions of the generated individual layers and iii) validate that the communities obtained by intersecting the communities
of the individual layers are same as the communities obtained from the composed layer.
We used the Dataset of Road Accidents that occurred in the United Kingdom in the year
2014 [1]. Out of a total of 32 attributes, we use three nominal features - light conditions with
domain as {daylight, darkness: lights lit, darkness: lights unlit, darkness: no lighting, darkness:
lighting unknown}, weather conditions with domain as {fine + no high winds, raining + no
high winds, snowing + no high winds, fine + high winds, raining + high winds, snowing +
high winds, fog or mist, other} and road surface conditions with domain as {dry, wet or damp,
snow, frost or ice, flood, oil or diesel, mud} for the first three individual layers (G1 , G2 and G3 ).
The latitude and longitude values of accident locations were grouped to form the geographical
location based fourth layer, G4 and time was the fifth layer G5 .
Our algorithms were implemented in C++ and executed on a Linux based machine with 4
GB RAM, 500GB of local disk space, installed with UBUNTU 13.10. We used Infomap [4] to
detect communities, with a parameter setting that assigns any node to at most one community.
Generating Layer per Feature. Three layers of our network, light, weather and road
conditions are of nominal type, therefore an edge is added if the values match exactly. For
layers G4 and G5 the appropriate threshold has to be determined. There is a trade-off here,
because too low a threshold can lead to loss of information, and too high a threshold leads to a
dense network that is expensive to analyze. To identify the appropriate threshold, we plotted
different thresholds for distance (G4 ) and time (G5 ) layers versus the density of the layer at
7

	

Community Re-creation in Multilayer
Santra,
and Chakravarthy
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C Bhowmick
(2017) 58–67

that threshold. Based on the intervals where the density peaked, we selected the threshold for
the distance and time at 10 miles and 1.5 hours, respectively.
For our experiments we AND-composed each of the nominal layers with the distance and
time layers to ensure that we are considering accidents within the same distance radius and
same time interval. Thus when we refer to the Light layer we mean that it is Light AND
Distance AND Time. We refer to the Weather and Road Condition layers similarly.
Communities in the Individual
Layers. We now find the communities in
the individual layers to identify groups of
accidents that are similarly influenced by
different features. In Figure 6 we plot the
community allocation for a random set of
accidents in the Light, Weather and Road
layers, using squares, triangles and circles,
respectively. For a given accident shown by
the X-axis, the Y-axis depicts the community to which it belongs, in each layer.
As can be seen from the figure, there are
several accidents that are grouped together
by multiple layers. But there are certain
accidents like accident IDs 23 and 24 that
were influenced in a similar manner with
respect to the Road layer only. The main
Figure 6: Distinct Layer-wise Communities
takeaway is that there are accidents
that are influenced by different subgroups of features.

Figure 7: Comparison of the Jaccard Index (JACi,RCi ) between the ith largest actual community
and the ith largest recreated community, for AND-Compositions of Light, Weather and Road
layers, for 3000 Accidents.
Identifying Self-Preserving Communities. We now identify whether the communities
in the individual layers are self-preserving or not. To do this we compute the internal clustering
co-efficient of the vertices. The internal clustering co-efficient is a variation of local clustering
co-efficient, except that we only consider the neighbors that share the same community as the
vertex. Therefore, it is the ratio of the number of edges between the neighbors of the vertex in
the same community to the total possible edges between the neighbors.
8

65

66	

Community Re-creation in Multilayer
Santra,
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C Bhowmick
(2017) 58–67and Chakravarthy

Re-creation of Communities in the AND-Composed Network. We determined
that all the communities in the Light, Weather and Road layers were self-preserving. Therefore we can re-create the communities in the AND-composed layers by simply intersecting the
communities of the individual layers.
Due to space restrictions, we only show the similarity between the communities obtained
from 2 of the 4 possible AND-composed networks and the communities re-created by intersecting
the communities of the individual layers, for 3000 accident instances (Figure 7). The similarity
between the communities was computed using the Jaccard Index (J). For two sets A and B,
JA,B = A∩B
A∪B . Thus a Jaccard value of 1 means that the two sets are identical. The Jaccard
value was 1 for the 5 largest communities for each of the AND-composed networks. We observed
exactly the same results (J = 1) when testing on smaller datasets of 1000 and 2000 accidents.
This empirically validates that the communities in AND-composed networks can be
successfully re-created by intersecting the communities of the individual networks.
Time to Re-create the Communities. Figure 8 compares the time to re-create the
communities versus the time to generate them in the AND-composed networks on the 3000
accident dataset. To generate the communities in the individual layers it took 7.406 seconds,
8.504 seconds and 7.08 seconds, for Light, Weather and Road Layers, respectively. It took
5.372 seconds, 5.072 seconds, 5.032 seconds and 4.96 seconds to perform the intersection
of layer-wise communities to re-create the communities for Light AND Weather AND Road,
Light AND Weather, Weather AND Road and Light AND Road layers, respectively.
In comparison it took 22.691 seconds, 13.265 seconds, 14.465 seconds and 12.08
seconds to create the AND-composed layers and 3.992 seconds, 5.271 seconds, 6.122 seconds and 4.438 seconds to obtain the communities for them, respectively. This shows that
the re-creation method was about 47% faster, a total of 43.426 seconds compared to a total
of 82.324 seconds. This is likely to improve further as the number of features increases.
These experiments were also executed on Datasets of 1000 and 3000 Storms that occurred
in the United States in 2016 [2] (results not shown due to lack of space). Communities in
three individual layers, created using the nominal features - Month of occurrence, Storm Type
and State of occurrence, exhibited the similar self preserving nature and therefore, the exact
recreation of any AND-composed layer community was possible, with comparable time savings.
Discussion on the self-preserving
nature of communities: Based on experiments we have performed on diverse data
sets (e.g., storm data and accident data), it
appears that nominal type features, which
generate an edge only if the participating
nodes have the same value for that feature,
will lead to layers with clique-like communities, and thus each vertex will have internal clustering co-efficient of 1. Clearly,
these communities will be self-preserving.
Figure 8: Comparison of Time between Generat- We verified these from the networks created
ing and Re-creating the Communities for AND- using nominal features of the datasets used.
On the other hand, existence of edges in
Composed Layers for 3000 Accident Dataset
the layers generated using numeric features
will depend on the threshold values chosen for their distance metrics. In this case, there is
no guarantee about the structure of the generated layers and the self-preserving nature of the
communities may or may not hold. Further detailed analysis is required in order to formulate
9

	

Community Re-creation in Multilayer
Santra,
and Chakravarthy
AbhishekNetworks
Santra et al. / Procedia Computer Science
108C Bhowmick
(2017) 58–67

algorithms for re-creating communities where the self-preserving property is not guaranteed.

7

Conclusion and Future Extensions

In this paper we propose a novel approach to efficiently find communities in multilayer networks.
Our contributions facilitate several aspects of multilayer network analysis. First, using our
combination method it will be relatively easy to combine the layers since the combination can
be achieved by simply taking a union or intersection of the edges as needed. Furthermore, as we
have shown in Section 5, the results obtained from the individual networks can be integrated
using Boolean operations to obtain the same results that we would have obtained from the
combined network. For example, we only need to solve n clustering problems and use these to
obtain clusters on the rest of the layer combinations. Second, our method facilitates addition
of new features. Not only can new entries be easily added via simple node, edge and/or layer
additions, but the results can be updated quickly by simply combining the new result with
the old ones via Boolean operations. Our initial experimental results on real-world datasets
have demonstrated that our algorithm can indeed be used to obtain communities in combined
networks very efficiently, with savings of over 40%.
Our primary future work is to extend our reconstruction strategy to networks where communities may not be self-preserving. We also plan on extending this work by introducing weighted
and directed edges, modifying the composition schemes with respect to such type of edges and
handling other types of features and distance metrics to create a generalized formulation of
applying Boolean operation based reconstruction.

References
[1] Road safety - accidents 2014. https://data.gov.uk/dataset/road-accidents-safety-data/
resource/1ae84544-6b06-425d-ad62-c85716a80022.
[2] Storm events database - usa 2016. https://www.ncdc.noaa.gov/stormevents/ftp.jsp.
[3] Brigitte Boden, Stephan Gnnemann, Holger Hoffmann, and Thomas Seidl. Mining coherent subgraphs in multi-layer graphs with edge labels. In Proc. of the 18th ACM SIGKDD Conference on
Knowledge Discovery and Data Mining (SIGKDD 2012), Beijing, China, pages 1258–1266, 2012.
[4] Ludvig Bohlin, Daniel Edler, Andrea Lancichinei, and Martin Rosvall. Community detection and
visualization of networks with the map equation framework. 2014.
[5] Michael John De Smith, Michael F Goodchild, and Paul Longley. Geospatial analysis: a comprehensive guide to principles, techniques and software tools. Troubador Publishing Ltd, 2007.
[6] Kathryn Dempsey, Kanimathi Duraisamy, Hesham Ali, and Sanjukta Bhowmick. A parallel graph
sampling algorithm for analyzing gene correlation networks. Procedia Computer Science, 4(0):136
– 145, 2011. Proceedings of the International Conference on Computational Science, {ICCS} 2011.
[7] Manlio De Domenico, Vincenzo Nicosia, Alex Arenas, and Vito Latora. Layer aggregation and
reducibility of multilayer interconnected networks. CoRR, abs/1405.0425, 2014.
[8] Xiaowen Dong, Pascal Frossard, Pierre Vandergheynst, and Nikolai Nefedov. Clustering with
multi-layer graphs: A spectral perspective. CoRR, abs/1106.2233, 2011.
[9] Jungeun Kim and Jae-Gil Lee. Community detection in multi-layer graphs: A survey. SIGMOD
Record, 44(3):37–48, 2015.
[10] Mikko Kivelä, Alexandre Arenas, Marc Barthelemy, James P. Gleeson, Yamir Moreno, and Mason A. Porter. Multilayer networks. CoRR, abs/1309.7233, 2013.
[11] Peter J. Mucha and Mason A. Porter. Communities in multislice voting networks. Chaos, 20(4),
2010.

10

67

