Available online at www.sciencedirect.com

ScienceDirect
This space
isComputer
reservedScience
for the
header, do not use it
Procedia
108CProcedia
(2017) 745–754
This space is reserved for the Procedia header, do not use it
This space is reserved for the Procedia header, do not use it
This space is reserved for the Procedia header, do not use it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Study
Study
Study
Study

of
of
of
of

Algorithms
for Fast
Computation
Algorithms
Algorithms for
for Fast
Fast Computation
Computation
Expansion
Problem
Algorithms
for Fast
Computation
Expansion
Problem
Expansion
Problem
Farid
Smaı̈1 and Problem
Hideo Aochi1
Expansion
Farid Smaı̈11 and Hideo Aochi11
Farid Smaı̈ and Hideo Aochi

Bureau de Recherches Géologieques
et Miniére, Orléans,
1
1
Farid
Smaı̈
andh.aochi@brgm.fr
Hideo
Aochi
Bureau de Recherches
Géologieques
et Miniére,
Orléans,
f.smai@brgm.fr;
Bureau de Recherches
Géologieques
et Miniére, Orléans,
f.smai@brgm.fr; h.aochi@brgm.fr
f.smai@brgm.fr;
h.aochi@brgm.fr
Bureau de Recherches
Géologieques
et Miniére, Orléans,

of
of
of
of

Crack
Crack
Crack
Crack

France
France
France
France

f.smai@brgm.fr; h.aochi@brgm.fr

Abstract
Abstract
A
problem of quasi-static growth of an arbitrary shaped-crack along an interface requires many
Abstract
A
problem
of quasi-static
growth
of an arbitrary
an interfacebut
requires
many
times
of iterations
not only
for finding
a spatialshaped-crack
distribution along
of discontinuity
also for
deA
problem
of quasi-static
growth
of an arbitrary
shaped-crack
along
an interface requires
many
Abstract
times
of
iterations
not
only
for
finding
a
spatial
distribution
of
discontinuity
but
also
for
determining
the
crack
tip.
This
is
crucial
when
refining
model
resolution
and
also
when
the
times
of
iterations
not
only
for
finding
a
spatial
distribution
of
discontinuity
but
also
for
deA
problem the
of quasi-static
growth
ofcrucial
an arbitrary
shaped-crack
along
an interface
requires
many
termining
crack
tip.
This
is
when
refining
model
resolution
and
also
when
the
phenomena
progresses
quickly
from
one
step
to
another.
We
propose
a
mathematical
reformutermining
the
crack
tip.
This
is
crucial
when
refining
model
resolution
and
also
when
the
times
of iterations
not quickly
only forfrom
finding
astep
spatial
distribution
of discontinuity
but alsoreformufor dephenomena
progresses
one
toand
another.
propose
a mathematical
lation
of the
problem
as
a This
nonlinear
equation
adopt We
different
numerical
methods
to solve
phenomena
progresses
quickly
from
one
step
to another.
We
propose
a mathematical
reformutermining
the
crack
tip.
is
crucial
when
refining
model
resolution
and
also
when
the
lation
of the problem
as atononlinear
equation
different
numerical
methods
to
solve
it
efficiently.
Compared
a previous
work
ofand
theadopt
authors,
the resulting
code
showsreformua great
lation
of theprogresses
problem
as
a nonlinear
equation
and
adopt
different
numerical
methods
to
solve
phenomena
quickly
from
one
step
to
another.
We
propose
a
mathematical
it
efficiently. of
Compared
to a previous
work
of the authors,
the resulting
codeofshows
a great
improvement
performance.
This gain
is important
fordifferent
further
application
aseismic
slip
it
efficiently.
Compared
a previous
work
ofand
theadopt
authors,
the resulting
code
shows
a great
lation
of the problem
as atononlinear
equation
numerical
methods
to
solve
improvement
of
performance.
This
gain
is
important
for
further
application
of
aseismic
slip
process
along
the
fault
interface,
in
the
context
of
plate
convergence
as
well
as
the
reactivation
improvement
of
performance.
This
gain
is
important
for
further
application
of
aseismic
slip
it
efficiently.
Compared
to a previous
work
of of
theplate
authors,
the resulting
code
shows
a great
process
along
the
fault
interface,
in
the
context
convergence
as
well
as
the
reactivation
of
fault
systems
in
reservoirs.
process
along
the
fault
interface,
in
the
context
of
plate
convergence
as
well
as
the
reactivation
improvement
of in
performance.
of fault systems
reservoirs. This gain is important for further application of aseismic slip
of
fault along
systems
reservoirs.
process
theinPublished
fault
interface,
in
the
of plate convergence
as well
as the reactivation
Keywords:
Arbitrary
shaped-crack,
Aseismic
slip, Boundary
integral equation,
Optimization.
©
2017 The
Authors.
by Elsevier
B.V.context

Keywords:
Arbitrary
shaped-crack,
Aseismic
slip, Boundary
integral Conference
equation, Optimization.
Peer-review
under
responsibility
of the scientific
committee
of the International
on Computational Science
of fault systems
in reservoirs.
Keywords:
Arbitrary
shaped-crack,
Aseismic
slip, Boundary
integral equation, Optimization.
Keywords: Arbitrary shaped-crack, Aseismic slip, Boundary integral equation, Optimization.

1 Introduction
1
1 Introduction
Introduction
Earthquakes occur to release the strain accumulated by tectonic movement and also can be
1
Introduction
Earthquakes
occur
tochange
release the
strain
accumulated
by tectonic
also canprobe
induced
due to
stress
pore
pressure
or other factors.
The movement
earthquakeand
generation
Earthquakes
occur
to releaseofthe
strain
accumulated
by tectonic
movement
and
also can be

induced
to stress
changeofofcontinuum
pore pressure
or other
Theinertia
earthquake
generation
process
is a due
boundary
problem
medium
withfactors.
or tectonic
without
term.and
The
equations
induced
due
to
stress
ofthe
pore
pressure
or other
factors.
The movement
earthquake
generation
Earthquakes
occur
tochange
release
strain
accumulated
by
also
canprobe
cess
is a boundary
problem
ofthe
continuum
medium
with
or
without inertia
term.
The
equations
of
motion
with
inertia
solve
dynamic
process
of
an
earthquake
and
the
wave
propagation,
cess
is a due
boundary
problem
ofofcontinuum
medium
withfactors.
or without
term.generation
The equations
induced
to stress
change
pore
pressure
or other
Theinertia
earthquake
proof
motion
with
inertia
solve
the
dynamic
process
of
an
earthquake
and
the
wave
propagation,
usually
within
a few
todynamic
tenths seconds.
in an
elastic,
isotropic
medium
of
motion
with inertia
solve
process For
of
anexample,
earthquake
and
the
wave
propagation,
cess
is aoccurring
boundary
problem
ofthe
continuum
medium
with
or
without
inertia
term.
The
equations
usually
occurring
within
a density
few
to tenths
seconds.
For
example,
in an
elastic,
isotropic
medium
characterized
by
medium
ρ
and
elastic
coefficients
(Lamé
constants
λ
and
µ),
it is
usually
occurring
within
a few
tenths seconds.
For
in anand
elastic,
isotropic
medium
of
motion
withbyinertia
solve
thetodynamic
process
of anexample,
earthquake
the wave
propagation,
characterized
medium
density
ρ
and
elastic
coefficients
(Lamé
constants
λ
and
µ),
it is
written
as
characterized
by medium
ρ andseconds.
elastic coefficients
(Lamé
λ and µ),
it is
usually
within a density
few to tenths
For example,
in anconstants
elastic, isotropic
medium
written occurring
as
written as
characterized
by medium density ρ and elastic coefficients (Lamé constants λ and µ), it is
ρü = (λ + 2µ)∇(∇ · u) − µ∇ × (∇ × u) + f ,
(1)
written as
ρü = (λ + 2µ)∇(∇ · u) − µ∇ × (∇ × u) + f ,
(1)
ρü = (λ + 2µ)∇(∇ · u) − µ∇ × (∇ × u) + f ,
(1)
where u is displacement field and f is body force (e.g. [2]). On the other hand, the equilibrium
where
u
is
displacement
field
and
f
is
body
force
(e.g.
[2]).
On
the
other
hand,
the
equilibrium
ρü
=and
(λ +
2µ)∇(∇
· u) −(e.g.
µ∇ ×
(∇On
×
u)
+other
f , process
(1)
theorem
of displacement
the continuumfield
medium
solves
the
quasi-static
of fault
sliding
where u is
fwithout
is bodyinertia
force
[2]).
the
hand, the
equilibrium
theorem
of the
continuum
medium
without inertia
solves
the quasi-static
process
of to
fault
sliding
often
called
as
aseismic
slip,
slow
earthquake
or
slow
slip,
which
may
last
from
hours
centuries;
theorem
of
the
continuum
medium
without
inertia
solves
the
quasi-static
process
of
fault
sliding
wherecalled
u is displacement
fieldslow
andearthquake
f is body force
(e.g.
Onmay
the other
hand,
theto
equilibrium
often
as aseismic slip,
or slow
slip,[2]).
which
last from
hours
centuries;
often
called
as aseismic
slip,medium
slow earthquake
or slowsolves
slip, which
may last from
hours
centuries;
theorem
of the
continuum
without inertia
the quasi-static
process
of to
fault
sliding
0
=
(λ
+
2µ)∇(∇
·
u)
−
µ∇
×
(∇
×
u)
+
f
.
(2)
often called as aseismic slip,
slow
earthquake
or
slow
slip,
which
may
last
from
hours
to
centuries;
0 = (λ + 2µ)∇(∇ · u) − µ∇ × (∇ × u) + f .
(2)
0 = (λ + 2µ)∇(∇ · u) − µ∇ × (∇ × u) + f .
(2)
0 = (λ + 2µ)∇(∇ · u) − µ∇ × (∇ × u) + f .
(2)1
1
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.273

1

746	

Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754 Smaı̈ and Aochi

In Equation (2), there is no more notion of time, but visco-elasticity or plasticity might be
considered as well according to the time scale and material rheology.
From the numerical point of view, the dynamic process, Equation (1), can be solved explicitly
using boundary integral equation[7, 8], finite difference[19] or spectral element methods [5]. It
can be also solved implicitly using finite element or finite volume methods, for example, but the
mechanical causality (distance where waves propagate) within a short time span allows limiting
the non-zero components in matrix of the equations. In the contrast, the quasi-static process,
Equation (2), needs to solve a full matrix due to the equilibrium equations (response in the
medium arrives infinitely) regardless of the methods.
Let us consider a quasi-static evolution of an arbitrary-shaped crack along an inteface (Σ) in
a volume V . This is a typical problem of the Earth science, called aseismic slip on a fault. Slip
should be properly distributed along the fault, so as to satisfy the stress field of the medium.
Here, ”slip”
is defined as an amount of discontinuity along the both sides of the interface;

w = uΣ+ − uΣ− [2]. In the context of earthquakes, only the shear component, parallel to the
fault interface, is generally considered. From the mechanical point of view, slip (w) at any point
starts when applied stress traction τ exceeds some critical point τp . Once it begins, stress-slip
relation is still controlled by any constitutive relation (friction law), τ = g(w, ẇ) because shear
slip continues having contact along the interface. During this process, slip w and shear traction
τ have the same vector direction. The boundary condition along the interface is then classified
into two categories, namely inside and outside of crack:
• For inside of crack (domain S), the slip w(= 0) appears such that the stress-slip constitutive relation is satisfied on it.
• For outside of crack (domain Σ∞ , the slip does not appear (w = 0), because the stress
applied on this point does not yet the rupture criteria.
For the purpose of solving Equation (2), these conditions are sufficient, as the boundary
condition surrounding the medium (speaking exactly, the boundary of interest is surrounded
by the medium) is given by either of stress or slip condition. One can write the boundary
condition:
 
 
τ  < τp
for w = 0 on Σ∞
 
.
(3)
τ = g(w, ẇ) for w = 0 on S

As Equation (3) is conditioned, one has to solve not only the distribution of w and τ , but
also the spatial limit of the ruptured area S which is variable during the simulation. This is
the reason why the calculation often requires much more iterations just for finding adequate
domain S than finding the corresponding solutions w and τ on S. If the whole fault plane is
always sliding (Σ = S), the problem reduces to find just a pair of w and τ simultaneously.
Therefore the dimension of problem is fixed, even if it is huge.
This study aims to apply the efficient ways to find quickly the correct domain size of S
and the solution (w, τ ). We reformulate mathematically the problem, describe the possible
algorithms to be implemented and show the performance for a simple test case at the end.

2
2.1

Problem and Reformulation
Boundary Integral Equation

Let us consider an infinite planar fault in a 3D infinite, isotropic homogeneous elastic medium.
A crack may grow from the model center, initially driven by the fluid migration along the
2

	

Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754 Smaı̈ and Aochi

fault [3]. This is a well-known situation as a matured fault interface at depth (ex. plate
boundary or subduction) or a fault reactivation due to fluid injection (ex. enhanced geothermal
system, geological storage, and so on). For demonstrating the procedure, we simplify the model
configuration by prefixing one direction of w and τ . Hereafter we refer slip and shear traction
just as scalars. In the medium of interest, analytical solutions exist for Equation (2) and
therefore one can rewrite it in the form of integral eqation. The stress field at any position (x)
in the medium (V ) including the interface (Σ) is [18]

 τ (x) = τ0 (x) + ∆τ

,
(4)
µ
x−ξ
 ∆τ (x) = −
· A∇wdξ
3
4π Σ |x − ξ|


2(1 − p2 ) 0
.
where τ0 is initial stress applied on the system before the phenomena and A =
0
1
p = |vS |/|vP | is the ratio of the S-wave over P-wave velocity. Using integration by parts and
assuming ∇w vanishes on boundaries, one has

µ
1
∆τ (x) =
∇ · (A∇w) dξ = γ ∗ ∇ · (A∇w)
(5)
4π Σ |x − ξ|
with γ(r) =

2.2

µ
−1
.
4π |r|

Friction Law

Next, let us specify Equation (3) for a problem of interest. A type of Coulomb criteria is often
introduced for τp , being proportional to the effective normal stress on Σ:
τp = µf σef f = µf (σn − P r).

(6)

where µf is static frictional coefficient, and the effective normal stress σef f is defined as the
applied normal stress σn reduced by a pore pressure P r. After the onset of rupture, the
function g(w) still controls the process. Many relations have been proposed after laboratory
experiments: A rate- and state-dependent friction [16] is mostly used for simulating earthquake
cycles on plate boundaries. We adopt a slip-dependent friction consisting of static (τp ) and
dynamic (τr < τp ) frictions with a gradual weakening transition [13]. This is generally used for
modeling rupture process of an earthquake [9] and also suggested for slow slip events found in
Mexico [12]. The following form of the expression is introduced:
g(w) = τp − (τp − τr )(1 −

w
w
)H(1 −
),
Dc
Dc

(7)

where τp is defined by Equation (6) and τr is similarly given as τr = µd (σn −P r) with a dynamic
frictional coefficient µd ( µd < µf ). Dc is a constant called as critical slip displacement and
H(· · · ) is Heaviside step function. For earthquake rupture on natural faults, scaling in Dc should
be important [9]. The frictional parameters (µf and µr ) and Dc may be spatially heterogeneous
along the interface Σ.
Noting that g(0) = τp , Equation (3) can be stated as complementarity constraint:

 w > 0 and g(w) − τ = 0


.
 or

 w = 0 and g(w) − τ > 0
3

747

748	

Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754

Smaı̈ and Aochi

Complementarity constraints can be transformed in equivalent nonlinear constraints (e.g. [11])
by using a function φ : R2 → R such that φ(a, b) = 0 if and only if a, b ≥ 0 and ab ≤ 0. A
simple example of such a function is the min function, φmin (a, b) = min(a, b). Writing Equation
(3) as a nonlinear constraint gives
φ(w, g(w) − τ ) = 0.

2.3

(8)

Final Formulation

Combining Equations (5) and (8), the problem can finally be formulated as a nonlinear equation
on w:
(9)
φ (w, g(w) − τ0 − γ ∗ ∇ · (A∇w)) = 0.

Knowing w, τ is given by equation (5):

τ = τ0 + γ ∗ ∇ · (A∇w).

3

Numerical computation

We discretize Σ with a regular grid and index the grid centers by xi,j = (ih1 +x0,0,1 , jh2 +x0,0,2 ).
The whole domain Σ is approximated by cell fields with constant on each cell. For any field v,
ṽ denotes the vector of its values on the grid cells.

3.1

Discretization of the stress redistribution

Equation (5) uses space convolution and differentiation to express ∆τ depending on w. Considering that w is discretized on a regular grid of Σ, the term ∇ · (A∇w) can be estimated by
a two points flux approximation (TPFA, see [4]). By denoting the sparse matrix associated to
the differential operator ∇ · A∇ with L, the vector Lw̃ approximates the values of ∇ · (A∇w)
on each grid cell.
Considering any constant by cell field v, the value of the space convolution γ ∗ v on each
cell center xi,j can be written as a discrete convolution:

µ
v(ξ)
(γ ∗ v)(xi,j ) =
dξ
4π Σ |xi,j − ξ|
 xk,l,1 +h1 /2  xk,l,2 +h2 /2
µ 
dξ
v(xi,j )
=
4π
xk,l,1 −h1 /2
xk,l,2 −h2 /2 |xi,j − ξ|
k,l


(k−i+1/2)h1
(l−j+1/2)h2
µ 
dξ
v(xi,j )
=
4π
|ξ|
(k−i−1/2)h1
(l−j−1/2)h2
k,l
µ 
=
v(xi,j )Kk−i,l−j .
4π
k,l

Using the following function Γ(x, y):
 x y
dx dy

Γ(x, y) =
x2 + y 2
0
0




y
x2 + y 2 + y
x2 + y 2 + x
x
+ log 
,
= log 
2
2
x2 + y 2 − y
x2 + y 2 − x

4

(10)

	

Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754 Smaı̈ and Aochi

the convolution kernel K is given by
Kk,l =Γ((k + 1/2)h1 , (l + 1/2)h2 ) + Γ((k − 1/2)h1 , (l − 1/2)h2 )
− Γ((k + 1/2)h1 , (l − 1/2)h2 ) − Γ((k − 1/2)h1 , (l + 1/2)h2 ).
One should note that computing a discrete convolution as a sum over the N cells of the grid
presents a computational complexity of O(N 2 ). This complexity is reduced to O(N log N ) with
the help of the fast Fourier transform.
Finally, the stress redistribution equation (5) is discretized by
∆τ̃ =

3.2

µ
K ∗ Lw̃
4π

Solving the Discrete Problem

The continuous problem (9) on w can now be discretized and consists in finding w̃ such that
F (w̃) = φ(w̃, g(w̃) − τ̃0 −

µ
K ∗ Lw̃) = 0.
4π

(11)

The Newton method is used to solve F (w̃) = 0, and defines the sequence (w̃n )n by
w̃n+1 = w̃n + ∆w̃n

with

JF (w̃n )∆w̃n = −F (w̃n ).

Here JF denote the Jacobian matrix of F . The sequence is computed from a given w̃0 until the
residual’s norm goes below a given tolerance: ||F (w̃n )|| ≤ tol.
By defining the diagonal matrices Dφ1 , Dφ2 and Dg as
(Dφ1 (a, b))i,i =

∂φ
(ai , bi )
∂a

,

(Dφ2 (a, b))i,i =

and by denoting the full matrix M =

µ
4π K

∂φ
(ai , bi )
∂b

and

(Dg (w̃))i,i = g  (w̃i )

∗ L, the Jacobian matrix is given by

JF (w̃) = Dφ1 (w̃, g(w̃) − τ̃0 − M w̃) + Dφ2 (w̃, g(w̃) − τ̃0 − M w̃)(Dg (w̃) − M ).
Due to the convolution with K involved in M , the matrix JF is full and we never assemble
or store it. To perform the inversion of JF required by the Newton steps, we used a Krylov
iterative method (e.g. GMRES, see [17]). These kind of method does not strictly need an
assembled matrix but only to perform matrix-vector products when needed. This allows us to
use the fast Fourier transform to efficiently compute the convolution. Being iterative, the Krylov
methods produce a sequence (∆w̃n,k )k to approximate ∆w̃n . We use a simple adaptive criterion
to control the termination of the method: ||JF (w̃n )∆w̃n,k + F (w̃n )|| ≤ 10−3 ||F (w̃n )||. The idea
here is that the Newton correction at a given step does not really need a high precision if this
step is still far from convergence. This adaptive criterion reduces the total number of Krylov
iterations over the whole computation. The choice of the preconditioner has an important
impact of the number of Krylov iterations. The incomplete LU factorization (ILU, see [17]) is
a robust and common choice for the preconditioner, but it requires an assembled matrix. Here,
we use the ILU factorization but on a sparse approximation, J¯F , of JF . The approximation is
done by using a sparse approximation of the kernel K, denoted K̄, such that

Kk,l if |k − l| ≤ 2
µ
K̄ ∗ L).
and J¯F = Dφ1 + Dφ2 (Dg −
K̄k,l =
4π
0
otherwise
5

749

750	

Algorithms for Crack ExpansionFarid Smaï et al. / Procedia Computer Science 108C (2017) 745–754

Parameter
Rigidity µ
Ratio of shear and compressive wave velocity p
Initial normal stress σn (t = 0)
Frictional coefficients µf and µd
Initial shear and normal stresses τ (t = 0) and σn (t = 0)
Critical slip displacement Dc

Smaı̈ and Aochi

Quantity
30 [GPa]
0.3
100 [MPa]
0.65 and 0.55
30 and 100 [MPa]
0m

Table 1: Model parameters used in this study.

4
4.1

Test Case and Result
Test Case Description

The process of pore pressure in Equation (6) P r [3] can be solved as flow in porous medium
but now is neglected. We a priori provide a spatial distribution of P r on Σ:


(12)
P r(x) = P0 + ∆P exp −|x|2 /R2 ,

Figure 1: Slip (left) and shear stress (right) computed on 101×101 grid (above) and 1001×1001
grid (below). The whole domain is (−1500m, 1500m)×(−1500m, 1500m) and results are zoomed
in (−400m, 400m) × (−400m, 400m). The grey line shows the limit between the ruptured S
(w > 0) and unruptured Σ∞ (w = 0) regions.
6

	

Algorithms for Crack ExpansionFarid Smaï et al. / Procedia Computer Science 108C (2017) 745–754 Smaı̈ and Aochi

where P0 , R and ∆P are constant, being fixed as P0 = 30 MPa, R = 300 m and ∆P ≡ σn (t =
0) − P0 − (τ (t = 0) − )/µf with  = 10−3 M P a, such that the applied stress τ exceeds the
rupture criteria τp only around the origin (radius ∼ 1 m), namely on a single element located
at the origin, initially. The model parameters are summarized in Table 1. The problem is now
to find the dimension of S and the corresponding solutions w and τ .
However, one element ruptured is not the final solution of this problem. Onset of the rupture
(sliding) on an element increases the shear stress in the surrounding, and some other elements
may reach the rupture criteria. Let us suppose a fault of 3000 m × 3000 m around the origin
where the peak of pore pressure P r is set. As a reference, we discretize the fault with an square
element of ∆s ≈ 30m length, namely 101 × 101 elements. We choose an odd number of cells
in each direction to ensure that the initial state contains exactly one cell (the origin) out of
equilibrium. We compare our original ’previous’ code [3] with our ’new’ one reformulated in
the previous section. Then we refine the spatial discretization upto 10 times, namely ∆s ≈ 3m.
Each version of the codes is characterized in the following.
• Previous code [3]: Equations (3) and (4) are programmed straightforward by Fortran90.
The convolution is directly calculated in Equation (4). In order to find the dimension of
S, iterations are held to check Equation (3). The distribution of w is solved by LevenbergMarquardt method [15].
• New code (this study): The strategy described above is implemented in Python with the
numerical libraries Numpy [14] and Scipy [10]. The FFTW library [6, 1] is used to perform
efficient fast Fourier transforms. Thanks to these libraries, the code is capable of shared
memory parallelism and thus exploiting multi-core architectures.

Figure 2: Cross section along the line x2 = 0 (dislocation direction at the center of the model)
of the slip and shear stress computed on 101 × 101 grid (blue) and 1001 × 1001 grid (red).
7

751

752	

Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754

4.2

Smaı̈ and Aochi

Results and Performance

Simulations on the test case have been performed for two grids with ten times difference in
resolution: 101 × 101 and 1001 × 1001. Figure 1 presents the final slip and shear stress for
the two grids. The observed anisotropy results from the wave velocity ratio p = 0.3. Slip and
shear stress is supposed toward x1 -direction. When p2 < 0.5, the pattern follows the dislocation
direction whereas when p2 > 0.5, the pattern is in the orthogonal direction. This anisotropy is
the best captured on the fine grid but a higher stress accumulation in the dislocation direction
is still observed on the coarse grid. Figure 2 presents the cross section of the results along the
line x2 = 0 (the dislocation direction). It shows how thin (≈ 100 m) is the stress accumulation
region around the ruptured area. This means that only 3 coarse cells can cover this length
while the fine grid can be much more accurate with about 30 cells.
In order to discuss the performance of our new implementation, other simulations for the
same test case have been performed with several n × n grids, by changing the grid size. Figure 3
shows how the CPU time increases according to the grid size. The performance of our previous
code (see [3]) is also shown for comparison. Note that both codes are ran on different machines:
our previous code is ran on a single core on Linux cluster (Bi-processor AMD Abu Dhabi at 2.6
GHz, 12 cores par processor) and new code is ran on a Intel Core i5-4590 CPU (3.3 GHz) under
Windows environment. Thus the absolute time of the performance is dependent on the used
system. However, the improvement of the performance is significant, not only in the absolute
time but also in the computational complexity.
The measured complexities are around O(n4 ) for our previous code and O(n3 ) for our new
code. The improvement of complexity is mainly explained by the computation of the convo2
) = O(n4 ) whereas
lution. Our previous code used a direct computation of complexity O(Ncell
the new code uses the fast Fourier transform to achieve a complexity of O(Ncell log Ncell ) =

Figure 3: Computation time for different grid sizes and for the new code (dashed line) and our
previous code (dotted line). All grids are n × n, n varying from 102 to 103 ; the total number of
cells, n2 , varies from 104 to 106 . The slope of each curve is estimated through linear regression.
8

	

Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754 Smaı̈ and Aochi

O(n2 log n). The global complexity of the new code is nonetheless higher than O(n2 log n)
because the number of Newton iterations increases when the grid is finer. As the theoretical
quadratic convergence of the Newton method relies on the problem regularity, the non optimal
behavior of our Newton loop may be due to the stiffness of the shear stress (see Figure 2).

5

Discussion and Conclusion

In this study, we have shown the reformulation of a nonlinear crack expanding problem in order
to improve the numerical performance. The reformulation has allowed a better understanding of
the mathematical challenges of the problem and the use of proven numerical methods (Newton,
Krylov and FFT methods) to tackle them. This leads us to a higher performance code: faster
on small grid and more efficient on larger grid, the code also takes advantage of the multi-core
architectures of modern computers.
With our previous code [3], as shown in Figure 1, we could model a fault dimension of 3000
m × 3000 m with a grid of 30 m. Under the evolution of P r due to injection and intrinsic
heterogeneity of a fault plane, complex seismicity was able to be simulated, with earthquake
magnitude from 1 to 4.5. Here magnitude
is defined as Mw = (log10 (M0 ) − 9.1)/1.5 with

seismic moment magnitude M0 = Σ (µ · w)dξ. Thus magnitude which can be simulated is
related to the grid spacing and model dimension. For the purpose of the induced seismicity in
a reservoir, it is expected to simulate micro-seismicity of magnitude much smaller than 1. It
is numerically challenging to produce a large band of magnitude in a single simulation scheme
so as to understand the behavior of the reservoir and also to assess the induced risk. With
our new implementation, it becomes possible to simulate with ten times finer grid of ∆s = 3
m. It is thus expected to produce micro-seismicity of around Mw = -0.5 to -1.0, which can be
generally several tenths to a hundred more than earthquakes of Mw = 1. The heterogeneity
of the Earth should be treated stochastically due to the limit of our knowledge. This requires
many moderate-size simulations with probabilistic distribution of model parameters rather than
a single huge simulation with deterministic parameter choice. Therefore, our new code is
expected to simulate more micro-seismicity on a larger magnitude band in the realistic context
of geoscience application.

Acknowledgments
This work has been supported by internal Research and Development fund of BRGM.

References
[1] pyFFTW. Python wrapper for FFTW.
[2] Keiiti Aki and Paul G. Richards. Quantitative seismology (second edition). University Science
Books, New York, 2002.
[3] Hideo Aochi, Blanche Poisson, Renaud Toussaint, Xavier Rachez, and Jean Schmittbuhl. Selfinduced seismicity due to fluid circulation along faults. Geophys. J. Int., 196(3):1544–1563, 2014.
[4] Robert Eymard, Thierry Gallouët, and Raphaèle Herbin. Finite volume methods. Handbook of
numerical analysis, 7:713–1018, 2000.
[5] Gaetano Festa and Jean-Pierre Volotte. Influence of rupture initiation on the intersonic transition:
Crack-like versus pulse-like modes. Geophys. Res. Lett., 33:L15320, 2006.

9

753

754	 Algorithms for Crack Expansion Farid Smaï et al. / Procedia Computer Science 108C (2017) 745–754 Smaı̈ and Aochi

[6] Matteo Frigo and Steven G. Johnson. The design and implementation of FFTW3. Proceedings
of the IEEE, 93(2):216–231, 2005. Special issue on “Program Generation, Optimization, and
Platform Adaptation”.
[7] Eiichi Fukuyama and Raul Madariaga. Integral equation method for plane crack with arbitrary
shape in 3d elastic medium. Bull. Seismol. Soc. Am., 85:614, 1995.
[8] Phlippe H. Geubelle and James R. Rice. A spectral method for three-dimensional elastodynamic
fracture problems. J. Mech. Phys. Solids., 43:1791–1824, 1995.
[9] Satoshi Ide and Hideo Aochi. Historical seismicity and dynamic rupture process of the 2011
tohoku-oki earthquake. Tectonophys., 600:1–13, 2013.
[10] Eric Jones, Travis Oliphant, Pearu Peterson, et al. SciPy: Open source scientific tools for Python,
2001–. [Online; accessed 2017-01-31].
[11] Sven Leyffer. Complementarity constraints as nonlinear equations: Theory and numerical experience. pages 169–208, 2006.
[12] Julie Maury, Hideo Aochi, and Mathilde Radiguet. Fault constitutive relations inferred from the
2009-2010 slow slip event in guerrero, mexico. Geophys. Res. Lett., 41, 2014.
[13] Mitiyasu Ohnaka. A constitutive scaling law and a unified comprehension for frictional slip failure,
shear fracture of intact rock, and earthquake rupture. J. Geophys. Res., 108:2080, 2003.
[14] Travis E Oliphant. A guide to NumPy, volume 1. Trelgol Publishing USA, 2006.
[15] William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian P. Flannery. Numerical
Recipes in Fortran: The art of Scientific Computing. Cambridge University Press, 1986.
[16] Andy Ruina. Slip instability and state variable friction laws. J. Geophys. Res., 88:10359–10370,
1983.
[17] Yousef Saad. Iterative methods for sparse linear systems. SIAM, 2003.
[18] Taku Tada, Eiichi Fukuyama, and Raul Madariaga. Non-hypersingular boundary integral equations for 3-d non-planar crack dynamics. Comput. Mech., 25:613–626, 2000.
[19] Jean Virieux and Raul Madariaga. Dynamic faulting studied by a finite difference method. Bull.
Seismol. Soc. Am., 72:345–369, 1982.

10

