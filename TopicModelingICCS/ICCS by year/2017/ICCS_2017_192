Available online at www.sciencedirect.com

ScienceDirect
Procedia Computer Science 108C (2017) 1883–1892

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Numerical Simulation of Rotation of Intermeshing
Rotors using
Added and
Method
Numerical
Simulation
of Eliminated
Rotation ofMesh
Intermeshing
Rotors
using Added and Eliminated Mesh Method
Masashi Yamakawa 1*†, Naoya Mitsunari 1 and Shinichi Asao 2
1

Kyoto Institute of Technology, Kyoto, Japan

1
College of1*†
Industrial
Technology,
Hyogo,
Masashi Yamakawa
, Naoya
Mitsunari
andJapan
Shinichi Asao 2
2

yamakawa@kit.ac.jp
Kyoto Institute
of Technology, Kyoto, Japan
College of Industrial Technology, Hyogo, Japan
yamakawa@kit.ac.jp
1

2

Abstract
To compute flows around objects with complicated motion like the intermeshing rotors, the unstructured
moving
Abstractgrid finite volume method was developed. Computational elements are added and eliminated
according
toflows
motion
of rotors,
to with
keepcomplicated
the computation
domain
around
rotors which
reverse.
To compute
around
objects
motion
like the
intermeshing
rotors,mutually
the unstructured
Also,
thegrid
geometric
conservation
satisfied inComputational
the method, using
fourare
dimensional
time
moving
finite volume
methodlaw
wasisdeveloped.
elements
added and space
eliminated
unified
domain
for control
volume.
the method,domain
accurate
computation
is carried
out reverse.
without
according
to motion
of rotors,
to keepUsing
the computation
around
rotors which
mutually
interpolation
of physical
quantities.law
Applying
to a in
flow
a sphere,
computation
procedure
was
Also, the geometric
conservation
is satisfied
thearound
method,
using four
dimensional
space time
established
with
introduction
of
concept
of
a
hierarchical
grid
distinction.
Then,
the
results
of
application
unified domain for control volume. Using the method, accurate computation is carried out without
to
the flow around
intermeshing
showed
of the
method.computation
The resultsprocedure
also showed
interpolation
of physical
quantities.rotors
Applying
to a efficacy
flow around
a sphere,
was
applicability
of the
method toofcompute
around anygrid
complicated
motion.
established with
introduction
conceptflows
of a hierarchical
distinction.
Then, the results of application
to the flow around intermeshing rotors showed efficacy of the method. The results also showed
©
2017 TheCFD,
Authors.
Published by Elsevierflow,
B.V. Moving grid, Finite volume method
Keywords:
applicability
of Simulation,
the
methodCompressible
toof
compute
flowscommittee
around any
complicated
Peer-review
under
responsibility
the scientific
of the
Internationalmotion.
Conference on Computational Science
Keywords: CFD, Simulation, Compressible flow, Moving grid, Finite volume method

1 Introduction

To
design and estimate the aerodynamic performance for a helicopter, computational fluid dynamics
1is often
Introduction
used. In this case, the characteristic part of the computation is how to express the rotation of

rotors,
then theand
overset
gridthe
method
and the performance
sliding mesh for
method
are oftencomputational
adopted.
To design
estimate
aerodynamic
a helicopter,
fluid dynamics
By the
way,
are known
which is
hashow
a high
autonomous
stability.
is often
used.
Inintermeshing
this case, therotors
characteristic
partasofa helicopter
the computation
to express
the rotation
of
In this then
system,
themethod
main rotor
cansliding
be canceled
by reversing
directions
of rotation of mutual
rotors,
the torque
oversetof
grid
and the
mesh method
are often
adopted.
rotors.
it isintermeshing
good not onlyrotors
at mobility
but also
efficiencywhich
of engine.
for computations
By Thus,
the way,
are known
as aathelicopter
has a However,
high autonomous
stability.
of
the
intermeshing
rotors,
it
is
difficult
to
adopt
the
conventional
mesh
methods
using
an overset
grid
In this system, torque of the main rotor can be canceled by reversing directions of rotation
of mutual
(Steger,
1987)it or
using not
a sliding
In the
sliding mesh
method,
overlapping
of domains
rotors. Thus,
is good
only atmesh.
mobility
butcase
alsoofatthe
efficiency
of engine.
However,
for computations
rotor avoid the
computation.
Then,
in the the
caseconventional
of overset grid
method,
a truncation
caused
of each
the intermeshing
rotors,
it is difficult
to adopt
mesh
methods
using an error
overset
grid
(Steger, 1987) or using a sliding mesh. In the case of the sliding mesh method, overlapping of domains
of each rotor avoid the computation. Then, in the case of overset grid method, a truncation error caused
*
†
*
†

Masterminded EasyChair and created the first stable version of this document
Created the first draft of this document
Masterminded EasyChair and created the first stable version of this document
Created the first draft of this document

1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.061

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

1884	

by interpolation of physical quantities will be increasing because of overlapping of most part of each
sub-grid. Thus the method may not be suitable for the computation.
As for the issue, the unstructured moving grid finite volume method with addition and elimination
of computational elements was proposed. In this method, the elements are added and eliminated
according to motion of object. Thus the single grid without overlapping of grid and without sliding
surface can be represented. To satisfy a geometric conservation law (Obayashi, 1992) on elements
adding, eliminating and moving, the finite volume method for space-time unified domain is adopted. As
other approaches, ALE method (Donea, 1982) which links motion of grid and flow velocities has also
been used. However it is not easy to assure the law perfectly. Using this method which has a function
of addition and elimination of computational elements in the unstructured grid system, expression of
every object with complicated motions has become possible theoretically. In this paper, application to a
flow around spheres passing each other shows efficacy of the method. After then, the method is applied
to a flow around intermeshing rotors.

2 Numerical Approach
2.1 Governing Equation
For large deformation of computational domain around rotors by inte rmeshing motion,
computational elements are added and eliminated. In this case, addition and elimination of elements are
carried out dynamically. However nervous grid arrangement in boundary layer might affect to such the
dynamical change of element shape. Thus, inviscid flow should be suitable. Then, three-dimensional
Euler equation is adopted as a governing equation. The following equation written in conservation law
form is

∂q ∂E ∂F ∂ G
+
+
+
= 0 .(1)
∂ t ∂x ∂y
∂z
Where,
⎛ ρu ⎞
⎛ ρ ⎞
⎜ 2
⎟
⎜
⎟
ρ
u
⎜ ρu + p ⎟
⎜
⎟
q = ⎜ ρv ⎟, E = ⎜ ρuv ⎟,
⎜
⎟
⎜
⎟
⎜ ρuw ⎟
⎜ ρw ⎟
⎜ u (e + p ) ⎟
⎜
⎟
⎝
⎠
⎝ e ⎠

⎛ ρv ⎞
⎛ ρw ⎞
⎜
⎜
⎟
⎟
⎜ ρuv ⎟
⎜ ρuw ⎟
F = ⎜ ρv 2 + p ⎟, G = ⎜ ρvw ⎟ .
⎜
⎜ 2
⎟
⎟
⎜ ρvw ⎟
⎜ ρw + p ⎟
⎜ v (e + p ) ⎟
⎜ w(e + p) ⎟
⎝
⎝
⎠
⎠

(2)

The unknown variables ρ, u, v, and e represent the gas density, velocity components in the x and y
directions, and total energy per unit volume, respectively. The working fluid is assumed to be perfect,
and the pressure p is defined by

e=

p
1
+ ρ (u 2 + v 2 ) ,
γ −1 2

where, the ratio of specific heats γ is typically taken as being 1.4.

(3)

	

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

1885

2.2 Added and Eliminated Mesh Method
If computational domain or body boundary stands still, general mesh refinement method can be
used for addition and elimination of computational elements. However, when objects move intricately
such as the intermeshing rotors, vertices are also moved as well as adding and eliminating elements. In
this case, it should be important how to satisfy a geometric conservation law. To assure the law, control
volume on the space-time unified domain (x, y, z, t) which is four-dimensional volume for threedimensional flows was adopted. Then using divergence form, equation (1) can be rewritten to

~~
.
∇F = 0ࠉ

(4)

The unstructured moving grid approach is based on a cell centered finite-volume method. Thus, flow
variables are defined at a cell center. Then, the control volume of unified domain is shown in figure 1.
The tetrahedron at n-time step tetrahedron is expressed using four-grid points ( R1n , R n2 , R 3n , R n4 ). Then
another one at n+1-time step is also represented using grid points ( R1n +1 , R n2 +1 , R3n +1 , R n4 +1 ). Here, the
space-time unified control-volume is defined by motion of tetrahedron from n to n+1 time step.
Therefore, the control-volume is structured by eight vertices ( R1n , R n2 , R3n , R n4 , R1n +1 , R n2 +1 , R3n +1 ,
R n4 +1 ). After rewriting equation (4) in surface integral form using the Gauss theorem, it is discretized
as a follow:
4

{(

) }

~ =0 .
q n (n~t )5 + q n +1 (n~t )6 + ∑ E n +1 2㸪F n +1 2㸪G n +1 2㸪q n +1 2 ⋅ n
l =1

(5)

l

Figure 1: Control-volume in space-time unified domain

When a new element is added, it is expressed as division of elements with adding a vertex. Placing
a new vertex on the center of the gridline, one element is divided to two elements as shown in figure 2.
In the case of adding new element, to satisfy the geometric conservation law, the control volume is also
deformed to a complicated polyhedron, as shown in figure 3. Here, left hand side volume is estimated
same as the last one. On the other hand, right hand side volume in figure 3 is dealt with the element
which appeared suddenly at n+1 time-step. In this case, the control volume is defined as a space which
is formed by sweeping of the element from n to n+1 time step. Here, the element shape changes from
triangle-plate to tetrahedron-volume. Thus, the control volume is structured by vertices R2n, R3n, R4n,
R2n+1, R3n+1, R4n+1 and R5n+1 in figure 3. In this case, the volume at n-step is zero, thus the discretization
should be equation (6).
On the other hand, when an element is eliminated, it is represented by merging vertex. Here, the
eliminating element is defined as element j in figure 4. Then, it is eliminated by moving vertex. When
the time-step advances from n to n+1, the volume of the element j become to zero. Thus, the elements i
and j must be dealt with as union. When the pentahedron which is structured by vertices (R1n, R2n, R3n,

1886	

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

R4n and R5n) sweeps space and changes a shape to a tetrahedron, the control volume is formed. Then
the control volume is built by vertices R1n, R2n, R3n, R4n, R5n, R1n+1, R2n+1, R3n+1 and R4n+1) in figure 5.
Then the discretization become to equation (7).
4

~} = 0
q nj +1 {(n~t )6 }j + ∑ {(E n +1 2㸪F n +1 2㸪G n +1 2㸪q n +1 2 ) ⋅ n
l

(6)

l =1

6

~} = 0
qin {(n~t )7 }i + q nj {(n~t )7 }j + qin +1{(n~t )8 }i + ∑ {(En +1 2㸪F n +1 2㸪G n +1 2㸪q n +1 2 )⋅ n
l
l =1

Figure 2: Adding new element

Figure 3: Control volume for adding element

Figure 4: Eliminating element

Figure 5: Control volume for eliminating element

(7)

	

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

The flux vectors are evaluated using the Roe flux difference splitting scheme with MUSCL approach,
as well as the Venkatakrishnan limiter. Then, to solve the implicit algorithm, the LU-SGS implicit
scheme is adopted. Then these deformations of the control volumes are carried out after confirmation
of the geometric conservation law by capturing uniform flows on moving, adding and eliminating grid.

2.3 Modification of the Element
According to adding and eliminating, sometimes the element shape largely deforms. However,
extremely skewed element may have a bad influence for calculation accuracy. Thus it should be
modified. But, additional appearance and disappearance of element for modification is not suitable. Thus,
only gridline is replaced without moving grid point. In detail, placing a new grid point on center of the
replacing gridline, temporary element is added, as shown in figure 6. Then, by moving the new grid
point, the temporary element is eliminated. On the procedure, replacement of gridline is carried out.
When two of three interior angles of triangle on modifying element satisfy the equation (8)
simultaneously, the element is estimated for replacing gridline. Furthermore, when the modified element
also satisfies the condition, the replacement is canceled.
θ tri . (l ) < 35.0 [deg] 

Figure 6: Replacement of the gridline

3 Application to Passing-Each-Other of Spheres
3.1 Computational Conditions
In this chapter, a flow around spheres passing each other is computed as a test problem.
Computational domain is shown in figure 7. As an initial condition, both spheres are placed keeping
10L distance for x direction and 0.2L distance for y direction. The sphere speed is defined as following
equation. Computational mesh is generated using MEGG3D supported by JAXA (Ito, 2002). Number
of initial cells is 871,170. However, the MEGG3D is used for making initial mesh only. Then, all
deformations of the meth are carried out by an in-house code.

Figure 7: Computational domain for spheres passing each other

1887

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

1888	

⎧10t
u1 = ⎨
⎩1.0

t < 0.1
t ≥ 0 .1

(9)

If addition and elimination of element is carried out for extremely fine element around the sphere
surface, computation cost would increase. Then, colorized blue domain which three times the diameter
of the sphere is moved according to the sphere traveling, as shown in figure 8 (right). However, when
another sphere invades into the domain, the inside elements are also added and eliminated.
By addition and elimination, the balance of coarseness and fineness of placing elements around the
sphere may be destroyed. Furthermore, extreme skewness element may be generated. To avoid the
problem, we classified sizes of elements according distance from the sphere surface. Then layering
unstructured meshes are defined as averages of initial element, as shown in figure 8 (left). The elements
on the red parts are in 24th grade. Using the color classified element, sizes of additional and eliminated
elements are modified. Then, the size of the deformed mesh is limited between half to double of the
initial mesh.

Figure 8: Classified domain (left) and moving domain (right) around the sphere

3.2 Results
Both spheres are approaching to each other (t=3.2), close together (t=4.8), and moving away from
each other (t=6.4). The meshes at each time and their enlarged view around the sphere moving
downward direction are shown in figure 9. When the both spheres are close together, by merging fine
elements around sphere the circumstance can be expressed. Furthermore, when they are moving away,
meshes around spheres are reconstructed. Then we can see similar meshes when they are approaching
each other. Thus, meshes around spheres passing each other can be represented by single mesh.
Similarly, figure 10 shows the pressure contours at each time and their enlarged view, when spheres
are approaching to each other (t=1.6), close together (t=5.0), and moving away from each other (t=6.4).
We can confirm that the moving spheres with a bow shock make a complicated interaction of shocks
when they are close together.
In future work, the parameter which can indicate the shape regularity property of the deformed
element will be taken.

	

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

t = 3.2

t = 4.8

t = 6.4
Figure 9: Mesh around spheres (left) and their enlarged view (right)

1889

1890	

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

t = 1.6

t = 5.0

t = 6.4
Figure 10: Pressure contours around spheres (left) and their enlarged view (right)

	

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

4 Application to Intermeshing Rotors
Finally, the method is applied to a flow around the intermeshing rotors. As the computational model,
Kaman K1200 KMAX (Mansur, 2011) which has two rotors was adopted. The angle formed by two
axes of rotors is 28 degrees. Then, the attack angle of blade changes linearly from root (5 degrees) to tip
(10 degrees). The phased difference of the rotor is 90 degrees. The rotors are rotated at 273 rpm which
is maximum rotation speed. At that time, blade tip speed arrives at Mach number = 0.61.

Initial state

90 degrees rotation
Figure 11: Model showing two different rotor blades separation angles and meshes

The relative position of red and green blades and its meshes are shown in figure 11. The upper figure
is initial condition and the lower one is state after rotation of 90 degrees. Furthermore, each mesh around
rotor is colorized by same color of each blade. Then, the colorized meshes themselves are moved

1891

Masashi Yamakawa et al. / Procedia Computer Science 108C (2017) 1883–1892

1892	

according to rotation of blades. The colorized blue indicates mesh around the fuselage, and it is fixed.
By comparison with meshes at different time, we can see that moving mesh can be carried out keeping
mesh quality. Then, the isosurface of velocity around the helicopter on hovering state is shown in figure
12. Extending downwash as time passes can be seen, thus, the possibility of the complicated
computation was shown.

t = 0.0

t = 95.0
Figure 12: Isosurface of velocity (v = 0.035)

t = 190.0

5 Conclusions
The unstructured mesh method adding and eliminating elements is developed and applied to flows
in this paper. The results of computation for a flow around spheres passing each other showed that an
efficacy and an availability of the method for complicated change of computational domain geometry.
Furthermore, application to a flow around the intermeshing rotors showed that a practicability of the
method and a promising feature for complicated flows.

Acknowledgment
This work was supported by JSPS KAKENHI Grant Number 16K06079 and 16K21563.

References
Steger, J. et al. (1987). On the use of composite grid schemes in computational aerodynamics,
Computer Methods in Applied Mechanics and Engineering, 64, 301-320.
Obayashi, S. et al. (1992). Freestream Capturing for Moving Coordinates in Three Dimensions,
AIAA Journal, Vol.30, pp.1125-1128.
Donea, J. et al. (1982),, Arbitrary Lagrangian-Eulerian finite element method for transient fluidstructure interactions, Computer Methods in Applied Mechanics and Engineering, 33, 689-723.
Ito, Y. et al. (2002). Surface Triangulation for Polygonal Models Based on CAD Data, Internal
Journal for Numerical Methods in Fluids, Vol. 39, Issue 1, 75-96.
Mansur, M.H. (2011). Full Flight Envelop Inner-Loop Control Law Development for the Unmanned
K-MAX®, the American Helicopter Society 67th Annual Forum, Virginia Beach, VA.

