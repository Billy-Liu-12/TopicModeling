Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header,
This Procedia
space is
reserved
for 108C
the Procedia
header,
Computer
Science
(2017) 1998–2007
This space is reserved for the Procedia header,
This space is reserved for the Procedia header,

do
do
do
do

not
not
not
not

use
use
use
use

it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Applications of an hybrid particle-grid penalization method
Applications of an hybrid particle-grid penalization method
Applications
of anand
hybrid
particle-grid
method
for the DNS
passive
control of penalization
bluff-body flows
Applications
of anand
hybrid
particle-grid
method
for the DNS
passive
control of penalization
bluff-body flows
for Chloé
the DNS
and
passive
control
of bluff-body
flows
1
1
2∗
Mimeau
, Iraj
Mortazavi
, and Georges-Henri
Cottet
for Chloé
the DNS
and
passive
control
of bluff-body
flows
1
1
2∗
Mimeau
, Iraj
Mortazavi
, and Georges-Henri
Cottet
1
1
Chloé1 Mimeau
, Iraj Mortazavi
and Georges-Henri
Cottet2∗
M2N Laboratory,
Conservatoire1 ,National
des Arts et Métiers
1
Chloé1 Mimeau
,2 Iraj
Mortazavi
,
and
Georges-Henri
Cottet2∗
M2N Laboratory,
Conservatoire
National
des
Arts
et
Métiers
Rue Conté, 75003, Paris, FRANCE
1
1

700
700
700
700

Avenue
Avenue
Avenue
Avenue

2 Rue Conté,
75003,
Paris,
FRANCE
M2N
Laboratory,
Conservatoire
National
des Arts et Métiers
chloe.mimeau@cnam.fr,
iraj.mortazavi@cnam.fr
M2N
Conservatoire
National
des Arts et Métiers
2Laboratory,
chloe.mimeau@cnam.fr,
iraj.mortazavi@cnam.fr
Rue Conté,
75003,
Paris,
LJK2 Laboratory,
University
of FRANCE
Grenoble-Alpes
2
2
Rue
Conté,
75003,
Paris,
FRANCE
LJK
Laboratory,
University
of Grenoble-Alpes
chloe.mimeau@cnam.fr,
iraj.mortazavi@cnam.fr
Centrale,
Campus
de Saint
Martin
d’Hères,
F-38401 Grenoble,
2
chloe.mimeau@cnam.fr,
iraj.mortazavi@cnam.fr
Centrale,
Campus
de Saint
Martin
d’Hères,
F-38401 Grenoble,
LJK
Laboratory,
University
of Grenoble-Alpes
georges-henri.cottet@imag.fr
2
Laboratory,
University
of Grenoble-Alpes
georges-henri.cottet@imag.fr
Centrale,LJK
Campus
de Saint
Martin d’Hères,
F-38401 Grenoble,
Centrale, Campus
de Saint Martin d’Hères, F-38401 Grenoble,
georges-henri.cottet@imag.fr
georges-henri.cottet@imag.fr

FRANCE
FRANCE
FRANCE
FRANCE

Abstract
Abstract
In this work, a hybrid particle-grid method coupled with a penalization technique is introduced
Abstract
In
this work,
a hybrid
particle-grid
method
coupledinwith
penalizationThe
technique
in order
to compute
Direct
Numerical
Simulations
threea dimensions.
methodis isintroduced
validated
Abstract
In
this
work,
a hybrid
particle-grid
coupled
a dimensions.
penalization
technique
in
order
toliterature
compute
Direct
three
method
isintroduced
validated
with
the
for
the Numerical
flow pastmethod
aSimulations
sphere
andinawith
hemisphere.
The The
approach
isisextented
to
In
this
work,
a hybrid
particle-grid
coupled
a dimensions.
penalization
technique
in
order
toliterature
compute
Direct
Numerical
inawith
three
The
method
isintroduced
validated
with
the
for
theand
flow
pastmethod
aSimulations
andflow
hemisphere.
Thehemisphere
approach
isis
extented
to
solid-porous-fluid
media
applied
tosphere
passive
control
for the
using
porous
in
order
compute
Direct
Numerical
ina three
dimensions.
The
method
is validated
with
thetoliterature
for
theand
flow
past aSimulations
andflow
hemisphere.
Thehemisphere
approach
isusing
extented
to
solid-porous-fluid
media
applied
tosphere
passive
control
for the
porous
coatings.
with
the
literature
for
the
flow
past
a
sphere
and
a
hemisphere.
The
approach
is
extented
to
solid-porous-fluid
media
and
applied
to
passive
flow
control
for
the
hemisphere
using
porous
coatings.
Keywords:
Vortex Published
methods,
particle
methods,
penalization
method,
comsolid-porous-fluid
media and
applied
to passive
flow control
for semi-Lagrangian
the hemispheremethods,
using porous
©
2017 The Authors.
by
Elsevier
B.V.
coatings.
Keywords:
Vortex
methods,
particle
methods,
penalization
method,Conference
semi-Lagrangian
methods,Science
comPeer-review
under
responsibility
the scientific
committee
of the International
on Computational
putation
flow
around aofhemisphere.
coatings.cost,
Keywords:cost,
Vortex
putation
flow methods,
around a
Keywords:
Vortex
putation cost,
flow methods,
around a
putation cost, flow around a

particle methods, penalization method, semi-Lagrangian methods, comhemisphere.
particle methods, penalization method, semi-Lagrangian methods, comhemisphere.
hemisphere.

1 Introduction
1 Introduction
1 Vortex
Introduction
methods are Lagrangian numerical methods consisting in discretizing the vorticity
1
Introduction
Vortex
methods
are Lagrangian
methods consisting
in discretizing
the vorticity
on particles
which move
according tonumerical
the flow dynamics
and carry local
vorticity values.
They

Vortex
methods
Lagrangian
methods
in
discretizing
theand
vorticity
on
which
according
tonumerical
the
flowas
dynamics
and
carry local
vorticity
values.
They
are particles
therefore
ideal move
toarestudy
vorticity
wakes
well as consisting
advection
dominated
flows
have
Vortex
methods
arestudy
Lagrangian
numerical
methods
consisting
in
discretizing
theand
vorticity
on
particles
which
move
according
to
the
flow
dynamics
and
carry
local
vorticity
values.
are
therefore
ideal
to
vorticity
wakes
as
well
as
advection
dominated
flows
have
been widely used in this context. Several works have also provided these methods a They
solid
on
particles
which
move
according
toSeveral
the
flowworks
dynamics
and
carry
local
vorticity
values.
They
are
therefore
ideal
to
study
vorticity
wakes
as
well
as
advection
dominated
flows
and
have
been
widely
used
in
this
context.
have
also
provided
these
methods
a
solid
mathematical framework to understand their convergence[6].
are
therefore
ideal
tothis
study
vorticity
wakes
as
well
as advection
dominated
flows and
have
been
widely
used
in
context.
Several
works
have
also
provided
these
methods
a
solid
mathematical
framework
to
understand
their
convergence[6].
To be efficient and competitive, vortex methods have to face several intrinsic issues. The
been
widely
used
in
this
context.
Several
works
have
also
provided
these
methods
a
solid
mathematical
framework
to understand
convergence[6].
beisefficient
andthe
competitive,
vortex
have
face several
intrinsic
issues.
The
firstTo
one
related
to
computation
oftheir
themethods
velocity
of thetovortex
elements.
For this
purpose,
mathematical
framework
to understand
their
convergence[6].
To
be
efficient
and
competitive,
vortex
methods
have
to
face
several
intrinsic
issues.
first
one
is
related
to
the
computation
of
the
velocity
of
the
vortex
elements.
For
this
purpose,
vortex methods often rely on the use of Fast Multipole Methods (FMM). This technique,The
inTo
be
efficient
andthe
competitive,
vortex
have
tovortex
face several
intrinsic
issues.
The
first
one
isby
related
computation
ofthat
themethods
velocity
of the
elements.
Fortechnique,
this
vortex
methods
rely
on
Fast
Multipole
Methods
(FMM).
introduced
[12],often
istobased
on the
the use
factof
the
velocity
field
induced
by aThis
group
of purpose,
particles
first
onemethods
isbyrelated
tobased
the
computation
ofthat
the the
velocity
of the
vortex
elements.
Fortechnique,
this
purpose,
vortex
often
rely
on
the
use
of
Fast
Multipole
Methods
(FMM).
This
introduced
[12],
is
on
the
fact
velocity
field
induced
by
a
group
of
particles
clustered around a center does not need to be computed directly from its individual members,
vortex
methods
often
relydoes
on
the
use
ofthat
Fast
Multipole
Methods
(FMM).
This
technique,
introduced
by
[12],
is
based
on
the
fact
the
velocity
field
induced
by
a
group
of
particles
clustered
around
a
center
not
need
to
be
computed
directly
from
its
individual
members,
but it can be approximated by a finite number of multipole expansions. FMM allows to retroduced
by
[12],
is
based
on
the
fact
that
the
velocity
field
induced
by
a
group
of
particles
clustered
around
a center
does
need
to be computed
from
itsvortex
individual
members,
but
canalgorithm
be approximated
bynot
finite
number
of of
multipole
expansions.
FMMelements
allows
tofrom
reduceitthe
complexity
ofa the
computation
thedirectly
velocity
of the
clustered
around
a center
does
not
need
to be computed
directly
from
itsvortex
individual
members,
but
it
can
be
approximated
by
a
finite
number
of
multipole
expansions.
FMM
allows
to
re2the
duce
algorithm
complexity
of
the
computation
of
the
velocity
of
the
elements
from
O(N ), obtained with a classical resolution of the Biot-Savart law, to O(N log(N )) and has
but
be approximated
byofa the
finite
number
of of
multipole
expansions.
FMM
allows
tofrom
reduceit2the
algorithm
complexity
computation
the velocity
of the
vortex
elements
O(N
),can
obtained
with
a classical
resolution
of the
Biot-Savart
law,
to O(N
log(N
)) and
has
∗ Masterminded
2the algorithm
duce
complexity
of
the
computation
of
the
velocity
of
the
vortex
elements
from
EasyChair
and
created
versions
3.0–3.4
of
the
class
style
O(N
), obtained with a classical resolution of the Biot-Savart law, to O(N log(N )) and has
∗ 2
and created
versions 3.0–3.4
the class style law, to O(N log(N )) and has
O(NMasterminded
), obtainedEasyChair
with a classical
resolution
of theof Biot-Savart
∗ Masterminded EasyChair and created versions 3.0–3.4 of the class style
1
∗ Masterminded EasyChair and created versions 3.0–3.4 of the class style
1
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
1
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.031

	

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

been broadly used in the context of vortex methods [15, 24, 18, 26, 30]. Another alternative to
compute velocity fields relies on grid-based Poisson solvers [23]. In that case vorticity values
have to be interpolated to an underlying grid and velocity values have to be interpolated back
to particles after solving the Poisson equation. Grid-based Poisson solvers have proved their
efficiency with respect to FMM-based vortex methods in the context of 3D problems [7].
Secondly, due to their Lagrangian framework, vortex methods also undergo the distorsion of
particle distribution in high strain regions. This phenomenon is then translated in inaccurate
computations because of a deteriorated communication between particles. One of the most
popular method to handle this issue is to remesh frequently - in general at each time-step particles on regular grids [15]. With this technique, particle methods become semi-Lagrangian
methods. In remeshed vortex methods, vorticity grid values obtained after particle remeshing
can be readily used to obtain the velocity through a grid-based Poisson solver. Moreover, it
also facilitates the treatment of the viscous effects : the resolution of the vorticity diffusion
equation can indeed be performed on the grid using Eulerian schemes.
Since they are based on a vorticity formulation of the Navier-Stokes equations, vortex methods face a third main issue related to the treatment of the no-slip boundary conditions. The
latter can be turned into a vorticity flux boundary condition that can be handled together
with the vorticity diffusion by integral equations [16, 11]. This method has been used with
success in a number of two and three-dimensional simulations using vortex particles [15, 24, 7].
These simulations use body-fitted particle distributions. Alternative methods, primarily defined and used in the context of grid-based Eulerian methods [1, 8], consist in viewing obstacles
as immersed boundaries which appear as a forcing term in the Navier-Stokes equations. The
Brinkman penalization method [2] is a particular case of immersed boundary methods. In this
approach, the fluid in which the flow evolves is assumed to be a porous medium of infinite
permeability while, on the other hand, the obstacles immersed in the fluid are considered as
media with non-zero permeability. The forcing penalization term added in the Navier-Stokes
equations directly comes from the Darcy equations that govern flows in porous media. Penalization methods, originally formulated in velocity-pressure formulation, can be extended to
vorticity formulations [13] and to vortex methods [4].
In the present work, a remeshed vortex method with Brinkman penalization is proposed
in order to simulate three-dimensional incompressible bluff body flows. This method is implemented in an efficient and adapted parallel solver. The computational performances of the
present solver and the validation of the proposed numerical method are investigated in the
context of Direct Numerical Simulations of flow past a sphere as well as an hemisphere, which
constitutes a challenging test case due to the flat rear-back surface with sharp edge of this bluff
body. In the last part of the paper, an application of the present method to passive flow control
using porous media will also be presented.

2
2.1

Vortex penalization method
Governing equations

This study is based on the vorticity formulation of the incompressible Vorticity Transport
Equations in a domain D, which read:
∂ω
1
+ (u · ∇)ω − div(ω : u) =
∆ω
∂t
Re
∆u = −∇ × ω
2

in D

(1)

in D,

(2)

1999

2000	

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

where ω, u and Re respectively denote the vorticity, the velocity and the Reynolds number.
One can distinguish in Eq. (1) the advection term (u · ∇)ω, the stretching term div(ω : u)
expressed in its conservative form and the diffusion term ∆ω/Re. The Poisson equation (2)
allows to recover the velocity field u from the vorticity field ω. This system of equations
has to be complemented by appropriate boundary conditions, both at solid boundaries and, if
necessary, at artificial boundaries.
The modeling of incompressible flow around an obstacle is realized in this work using an
immersed boundary method called the Brinkman penalization method [2, 1]. This technique
relies on the simple following idea: the fluid in which the flow evolves is assumed to be a
porous medium of infinite permeability while, on the other hand, the solid obstacles immersed
in the fluid are considered as media with zero permeability. A flow evolving in such media
may be modeled by the Brinkman-Navier-Stokes equations, which stand for the whole domain
and which contain an additional term with respect to the Navier-Stokes equations, acting as
a forcing term. In this work, the penalization term is expressed using vorticity formulation.
One therefore obtains the non-dimensional Brinkman-Vorticity Transport equations, originally
proposed by [13]:


1
∂ω
+ (u · ∇)ω − div(ω : u) = ∇ × λ χb (ub − u) +
∆ω
∂t
Re
∆u = −∇ × ω

in D,

(3)

in D,

(4)

where χb denotes the characteristic function that yields 0 in the fluid and 1 in the solid body,
ub indicates the rigid body velocity and λ = µΦH/ρku∞ is the non-dimensional penalization
parameter, with k the intrinsic permeability, µ the viscosity, Φ the porosity of the porous
material, H the height of the obstacle, ρ the fluid density and u∞ the main uniform fluid
flow velocity. The main advantage of this method is that it needs neither the mesh to fit the
boundaries nor to specify no-slip boundary conditions. In this study we set H = ρ = u∞ = 1
and we recall that the porosity Φ is close to 1 as imposed by the Brinkman equation [22].
Therefore λ essentially depends, in the inverse proportion, on the intrinsic permeability k of
the medium. We fix λ to 0 in the fluid region and to 108 in the solid region.

2.2

Numerical resolution

To discretize the penalized vorticity equations (3)-(4) we use in this work a semi-Lagrangian
vortex method. The flow is discretized onto particles that carry the physical flow properties
and the resolution of the governing equations is based on a viscous splitting algorithm, which
consists at each time step to successively solve the following equations :
∆u = −∇ × ω


∂ω
= ∇× λ χb (ub − u)
∂t
∂ω
= div(ω : u)
∂t
∂ω
1
=
∆ω
∂t
Re
∂ω
+ (u · ∇) ω = 0
∂t
LCFL
∆tadapt =
∇u∞

(5)
(6)
(7)
(8)
(9)
(10)
3

	

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

Table 1 gives the time and space discretization schemes used in this work to solve each equation
of the viscous splitting algorithm.
Equation
Poisson equation (5)
Penalization (6)
Stretching (7)
Diffusion (8)
Advection (9)
Adaptive time step (10)

Time discretization method
implicit Euler scheme
RK3 scheme
implicit Euler scheme
RK2 scheme
-

Space discretization method
spectral method
4th order centered FD
4th order centered FD
spectral method
Λ4,2 remeshed vortex method
4th order centered FD (LCFL < 1)

Table 1: Time and space discretization methods used for the resolution of the viscous splitting
algorithm (eqs. (5) to (9)).
More precisely, equations (5) to (8) are solved on the grid whereas the advection equation (9)
is solved on the particles using a remeshed vortex method. In this work, the particle advection
and remeshing procedure is performed using a directional splitting approach [17]. It consists
in solving the convection/remeshing problem direction by direction, which allows a significant
reduction of the computational efforts compared to the more traditional remeshing based on
tensor product formulas.
As regards no-slip boundary conditions, they are naturally satisfied penalizing the vorticity
transport equations and concerning far-field boundary conditions on the domain walls, we
consider periodic boundary conditions. In particular, this choice allows us to use the Fast
Fourier Transform method in order to efficiently solve the Poisson equation ∆u = ∇ × ω.
However, handling periodic boundary conditions implies special treatments on the flow fields
in order to recover the desired uniform flow at the inlet. These treatments appear in two types
of corrections discarding first the eddies coming periodically from the outlet with a smooth
absorption and then correcting the velocity flux at the inlet in order to recover the desired
uniform flow. More details about this method may be found in [19].

3

Validation studies

In order to verify the accuracy of the method, we present in this section a numerical validation
study based on DNS simulations. Transitional and laminar flows are considered for two distinct
obstacles, namely the sphere and the hemisphere. In the hemisphere case, the bluff-surface faces
the upstream flow and the flat one is oriented downstream. In both cases the non-dimensional
diameter d of the obstacle and the free stream velocity are set equal to 1. The obstacles
are centered at the origin of the computational domain D = [−2, 8.24] × [−2.56, 2.56] ×
[−2.56, 2.56]. The whole domain is discretized with an equispaced Cartesian orthogonal grid of
mesh size h and the penalization parameter is set to λ = 108 inside the body. Finally, the time
step is adaptative and calculated at each iteration according to the Lagrangian CFL condition
: ∆tadapt = LCFL/|∇u|∞ , where LCFL must be smaller than 1. In this work LCFL = 1/8.

3.1

Transitional flow past a 3D sphere

Flow past a sphere is a common benchmark to validate the accuracy of a numerical method
and to prove its capability to correctly model 3D bluff body flows. Here we perform the flow
4

2001

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

analysis at Re = 1000. At this regime, the flow past a sphere is known to be unsteady, nonperiodic, asymmetric and a Kelvin-Helmholtz instability occurs in the shear layer, propagating
in the wake which becomes fully turbulent. According to the careful grid convergence study
performed in [19], the simulation is carried out setting the grid step to h = 0.01. The adaptive
time step returns a value roughly equal to ∆t = 0.005, which corresponds to a CFL number
equal to 0.6.
A plot of the time average streamwise velocity ux along the centerline is given in Figure 1a.
The results obtained with the present method are compared to those of [27] together with the
experimental data of [29] at Re = 960. It can be seen that the length of the recirculation zone,
characterized by negative ux values, obtained in the present case (1.5 diameters) is similar to
the one obtained in [27] (approximately 1.7 diameters). Furthermore, the ux values for x/d ≥ 2
are in a very good agreement with other numerical and experimental studies ([27] and [29]) and
show the accuracy of the present method.
Concerning the time evolution of force coefficients, Figure 1b shows that the early time evolution
of the drag coefficient CD and the vertical lift coefficient CL coincide with the one found by
[24]. The mean value of the drag coefficient CD obtained in the present study is 0.485, which
agrees well with the numerical values reported by [25] and [3], respectively equal to 0.46 and
0.478.
1
0.6

0.8

0.4

cD, cL

0.6
ux / u ∞

2002	

0.4
0.2

0
-0.2

0

cD

-0.4

-0.2
0

0.2

2

4 6
x/ d

8

cL

6

8

(a)

10

12

14

16

18

20

T

(b)

Figure 1: Flow past a sphere at Re = 1000: (a) Average streamwise velocity ux along the
x-axis: comparison of the present results (red curve) with numerical results [27] (green curve)
and experimental data [29] at Re = 960 (black circles). (b) CD (solid lines) and CL (dashed
lines) time evolution: comparison of the present results (red curves) with [24] (black curves).
Isocontours of |ω| in the near wake are depicted in the XY and XZ plane for early times,
respectively in Figure 2a and 2b. They are compared to those of [24]. These figures, which show
a good agreement, reveal that the flow is initially symmetric in the XZ plane. As highlighted
by Figure 2c, the near wake becomes asymmetric at T = 18. The same value of T is reported
by [24].

3.2

Laminar flow past a 3D hemisphere

Hemispherical bodies correspond to configurations that may be used in several engineering
applications. Moreover, due to the presence of a flat back wall with sharp edges, the flow past
a hemisphere is a steep problem. To our knowledge, experimental and numerical results related
5

	

Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007
Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet

T=16

T=18

T=20

T=40

(c) in the XZ plane
(a) in the XY plane

(b) in the XZ plane

Figure 2: Isocontours of |ω| for flow past a sphere at Re = 1000. (a) and (b): Comparison
between [24] (left columns) and present results (right columns) at T = 6, 8, 10, 12. (c):
Isocontours of |ω| in the XZ plane at T = 16, 18, 20, 40. The near wake becomes asymmetric
from T = 18.

to this problem are very few. We compare here our results to those of Kim and Choi [14], who
investigated in detail the behavior of flows past a hemisphere at different Reynolds numbers,
ranging from 100 to 300. At such laminar regimes, the grid convergence of the present method
was obtained with h = 0.04. In the following simulations, the grid step is fixed to h = 0.02.
The compared results are reported in Tab. 2 for Re=200, 250 and 300. We notice that the
present results agree rather well with the literature.

Re=200
Kim & Choi [14]
Present

c¯D
0.790
0.805

Re=250
Kim & Choi [14]
Present

c¯D
0.742
0.757

Re=300
Kim & Choi [14]
Present

c¯D
0.715
0.729

c¯L
0.0 ± 0.024
0.003 ± 0.025

c¯S
0.049
0.043

Stlift
0.128
0.129

Stdrag
0.256
0.257

c¯S
0.0
0.0

Stlift
0.127
0.128

Stdrag
0.254
0.256

c¯L
0.0 ± 0.062
-0.002 ± 0.063

c¯S
0.0
-0.0016

Stlift
0.135
0.134

Stdrag
0.270
0.270

c¯L
0.0 ± 0.05
0.0 ± 0.05

Table 2: Comparison of mean drag (c¯D ), lateral lift (c¯L ), and side lift (c¯S ) coefficients and
Strouhal numbers (Stlift and Stdrag ) for flow past a hemisphere at Re = 200, Re = 250, and
Re = 300.

These validation results therefore show the capability of the present vortex penalization
method to correctly model 3D bluff body flows.
6

2003

2004	

Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007
Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet

4

Computational resources and performances

Table 3 gives the numerical setup, the resources and the CPU time-to-solution for different
bluff body flows computed in domain D. For simulations performed at Re = 300, the allocated
memory was less than 2.7 Gbytes and for simulations carried out at Re = 1000, it did not
exceed 21 Gbytes. The CPU time-to-solution shown in this table correspond to a CPU time of
about 40 seconds per time step on 64 cores for the high resolution cases with N = 1024 × 5122
(h = 0.01), and of about 8 seconds per time step on 32 cores for the lower resolution cases with
N = 512 × 2562 (h = 0.02). This indicates a weak scalability in this range of resolutions around
80%. Figure 3 gives the percentage of the different stages implied in the resolution of the 3D
penalized Vorticity-Transport-Equations (3)-(4), in one simulation time step for the execution
on 1 core. In particular, one can notice that the FFT grid-based Poisson solver only represents
5% of the total CPU cost of one time step.

Resolution
tend
N time steps
∆tadapt (mean)
N cores
CPU time

Sphere Re =
300
512 × 2562 (∼
33M pts)
75
6844
1.1 10−2
32
16 hours

Hemisphere
Re = 300
512 × 2562 (∼
33M pts)
450
42590
1.0 10−2
32
4 days

Sphere Re =
1000
1024 × 5122 (∼
268M pts)
57
11397
5.0 10−3
64
5 days

Hemisphere
Re = 1000
1024 × 5122 (∼
268M pts)
112
22352
5.0 10−3
64
10 days

Table 3: Parameter settings and CPU time costs for simulations of incompressible flows past a
3D sphere and hemisphere at Re = 300 and Re = 1000.

Figure 3: Percentage of the different stages implied in the resolution of the 3D penalized
Vorticity-Transport-Equations (3)-(4), in one simulation time step for the execution on 1 core.

5

Applications of the vortex penalization methods

Since their creation a decade ago, the vortex penalization methods have been successfully
used for different fluid dynamics applications. In [4], interface-tracking problems involving a
coupling of the vortex penalization method with a level-set approach are handled in order to
study collisions of rigid obstacles. A vortex penalization approach with level-set is also used in
[21] to evaluate the aerodynamic forces acting in the inflight aircraft ice shedding phenomenon.
In [9], a reinforcement learning algorithm is designed, based on a vortex penalization method.
7

	

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

Such method was also applied in [10] to study flow mediated interactions and in [28] to carry
out shape optimization studies for anguilliform swimmers.

Figure 4: Passive control using porous media around a 3D hemisphere (simplified side-view
mirror geometry) at Re = 1000. The flow past an uncontrolled hemisphere (case 0) is compared
to the flow past a hemisphere covered with a porous layer (case 1) or a porous ring inlay (case
2). For case 1 and case 2, the penalization parameter λ is equal to 1 (high permeability) inside
the porous zone and the thickness of the porous coating is equal to 10%d = 0.1. a) Comparison
of the vorticity magnitude. b) Comparison of the drag force Fx .
The present version of vortex penalization method, using in particular a directional algorithm for the convection/remeshing procedure and handling periodic boundary conditions at the
far-field, has been successfully used to simulate flows past bluff-bodies like spheres, hemispheres
[19] or vertical axis turbines [20] and also to perform flow simulations in a solid-fluid-porous
two-dimensional domain [20]. Indeed, the Brinkman-Navier-Stokes equations (3) appears to be
very convenient to model the flow in complex media thanks to the dimensionless penalization
factor λ, whose value allows to distinguish between the different materials. Setting the λ parameter to an intermediate value, reasonably chosen between the two extreme values λ = 0
(fluid domain) and λ = 108 (solid domain), allows to model a porous medium in which the
flow has a non-zero Darcy velocity. Here, the simulation of flows in solid-fluid-porous media
is applied to a 3D passive flow control study consisting in covering the surface of a side-view
mirror geometry (modeled by a hemisphere) with a porous coating in order to change the flow
properties at the boundary and to achieve drag reduction. As Figure 4 shows, the ring inlay
configuration provides better results in terms of flow control (important decrease of vorticity
values in the wake (Fig. 4a) and a drag force reduction of 16% (Fig. 4b) compared to the
homogeneous porous layer. This outcome may be explained by the position of the porous zone
on the hemisphere surface: indeed, in the ring inlay configuration the permeable region is only
located in the vicinity of the separation points, preventing from the resistance phenomenon
experienced by the fluid in the front part of the hemisphere in the porous layer case.
In terms of algorithmic complexity, the modeling of flows inside solid-fluid-porous media has
no direct impact on the global computational cost thanks to the penalization method. Indeed,
the treatment of the different permeabilities in the domain is handled by the penalization
equation (6) through the λ parameter whose value changes from one permeable zone to the
other. However, as shown by the above control results, the presence of porous areas on the
8

2005

2006	

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

solid surface changes the physics of the flow dynamics. In particular it modifies the velocity
gradients at the boundaries. In this study we observed that the flow acceleration inside the
porous zone in the vicinity of the separation point was higher with the ring inlay configuration
than with the porous layer one, implying stronger velocity gradients. Therefore, since the
adaptive time step is evaluated from the velocity gradient (see eq. 10), we noticed in practice
that the adaptive time step related to the ring inlay configuration was 1.5 to 1.8 times smaller
than the one related to the porous layer configuration, leading to longer simulations.

6

Conclusion

In this paper we presented a vortex penalization method for the simulation of three-dimensional
incompressible flows. The validation study presented in this paper shows the capabilities of this
approach to accurately model flows past bluff bodies. In particular, the Brinkman penalization
technique allows to easily handle flows in solid-fluid-porous media. This feature was applied
to perform passive flow control using porous medium in order to regularize flow dynamics and
to reduce drag. On going work is being accomplished to increase Reynolds number using a
bi-resolution technique [5].

References
[1] P. Angot, C.-H. Bruneau, and P. Fabrie. A penalization method to take into account obstacles in
incompressible viscous flows. Numer. Math., 81:497–520, 1999.
[2] J. P. Caltagirone. Sur l’intéraction fluide-milieu poreux : Application au calcul des efforts exercés
sur un obstacle par un fluide visqueux. C. R. Acad. Sci. Paris, 318, 1994.
[3] R. Campregher, J Militzer, S.S Mansur, and A. da Silveira Neto. Computations of the flow past a
still sphere at moderate Reynolds numbers using an immersed boundary method. J. of the Braz.
Soc. of Mech. Sci. & Eng., 31(4):344–352, 2009.
[4] M. Coquerelle and G.-H. Cottet. A vortex level-set method for the two-way coupling of an incompressible fluid with colliding rigid bodies. J. Comput. Phys., 227:9121–9137, 2008.
[5] G.-H. Cottet. Artificial viscosity models for vortex and particle methods. J. Comput. Phys.,
127:199–208, 1996.
[6] G.-H. Cottet and P. Koumoutsakos. Vortex Methods - Theory and Practice. Cambridge University
Press, 2000.
[7] G.-H. Cottet and P. Poncet. Advances in direct numerical simulation of 3D wall-bounded flows
by Vortex-In-Cell methods. J. Comput. Phys., 193:136–158, 2003.
[8] E.A. Fadlun, R. Verzicco, P. Orlandi, and J. Mohd-Yusof. Combined immersed-boundary finitedifference methods for three-dimensional complex flow simulations. J. Comput. Phys., 161(1):35–
60, 2000.
[9] M. Gazzola, B. Hejazialhosseini, and P. Koumoutsakos. Reinforcement learning and wavelet
adapted vortex methods for simulations of self-propelled swimmers. SIAM J. Sci. Comput.,
36(3):B622–B639, 2014.
[10] M. Gazzola, C. Mimeau, A. A. Tchieu, and P. Koumoutsakos. Flow mediated interactions between
two cylinders at finite re numbers. Phys. Fluids, 24, 043103:doi: 10.1063/1.4704195, 2012.
[11] G. Graziani, M. Ranucci, and R. Piva. From a boundary integral formulation to a vortex method
for viscous flows. Computational mechanics, 15:301–314, 1995.
[12] L. Greengard and V. Rokhlin. A fast algorithm for particle simulations. J. Comput. Phys.,
73(2):325–348, 1987.

9

	

Hybrid particle-grid penalization
method
Mimeau,
Mortazavi and Cottet
Chloé
Mimeau et al. / Procedia Computer Science 108C (2017)
1998–2007

[13] N. Kevlahan and J. M. Ghidaglia. Computation of turbulent flow past an array of cylinders using
a spectral method with Brinkman penalization. Eur. J. Mech., B 20:333–350, 2001.
[14] D. Kim and H. Choi. Laminar flow past a hemisphere. Physics of Fluids, 15(8):2457–2460, 2003.
[15] P. Koumoutsakos and A. Leonard. High-resolution simulations of the flow around an impulsively
started cylinder using vortex methods. J. Fluid Mech., 296:1–38, 1995.
[16] P. Koumoutsakos, A. Leonard, and F. Pepin. Viscous boundary conditions for vortex methods. J.
Comput. Phys., 113:52–61, 2014.
[17] A. Magni and G.-H. Cottet. Accurate, non-oscillatory remeshing schemes for particle methods. J.
Comput. Phys., 231(1):152–172, 2012.
[18] Y. M. Marzouk and A. F. Ghoniem. K-means clustering for optimal partitioning and dynamic load
balancing of parallel hierarchical N-body simulations. J. Comput. Phys., 207(2):493–528, 2005.
[19] C. Mimeau, G.-H. Cottet, and I. Mortazavi. Direct numerical simulations of three-dimensional
flows past obstacles with a vortex penalization method. Comp & Fluids, 136:331–347, 2016.
[20] C. Mimeau, F. Gallizio, G.-H. Cottet, and I. Mortazavi. Vortex penalization method for bluff
body flows. Int. J. Numer. Meth. Fluids, 79:55–83, 2015.
[21] F. Morency, H. Beaugendre, and F. Gallizio. Aerodynamic force evaluation for ice shedding
phenomenon using vortex in cell scheme, penalisation and level set approaches. International
Journal of Computational Fluid Dynamics, 26(9–10):435–450, 2012.
[22] D. A. Nield and A. Bejan. Convection in Porous Media. Springer, 1999.
[23] M. Ould-Salihi, G.-H. Cottet, and M. El Hamraoui. Blending finite-difference and vortex methods
for incompressible flow computations. SIAM J. Sci. Comp., 22:1655–1674, 2000.
[24] P. Ploumhans, G. S. Winckelmans, J. K. Salmon, A. Leonard, and M. S. Warren. Vortex methods
for direct numerical simulation of three-dimensional bluff body flows: Applications to the sphere
at Re = 300, 500 and 1000. J. Comput. Phys., 178:427–463, 2002.
[25] E.K.W. Poon, G. Iaccarino, A.S.H. Ooi, and M. Giacobello. Numerical studies of high Reynolds
number flow past a stationary and rotating sphere. Seventh International Conference on CFD in
the Minerals and Process Industries CSIRO, Melbourne, Australia, 2009.
[26] D. Rossinelli. Multiresolution flow simulations on multi/many-core architectures. PhD thesis, ETH
Zurich, 2011.
[27] A. Tomboulides and A. Orszag. Numerical investigation of transitional and weak turbulent flow
past a sphere. J. Fluid Mech., 416:45–73, 2000.
[28] W. M. van Rees, M. Gazzola, and P. Koumoutsakos. Optimal shapes for anguilliform swimmers
at intermediate reynolds numbers. J. Fluid Mech., 722, 2013.
[29] J.S. Wu and G.M. Faeth. Sphere wakes in still surroundings at intermediate Reynolds numbers.
AIAA J., 31(8):1448–1455, 1993.
[30] R. Yokota and L. A. Barba. FMM-based vortex method for simulation of isotropic turbulence on
GPUs compared with a spectral method. Computers and Fluids, 80:17–27, 2013.

10

2007

