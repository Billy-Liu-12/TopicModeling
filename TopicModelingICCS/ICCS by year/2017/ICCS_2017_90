Available online at www.sciencedirect.com

This
This
This
This

ScienceDirect

space is reserved for the Procedia header,
space
isComputer
reserved for the
header,
Procedia
108CProcedia
(2017) 404–414
space
is reservedScience
for the
Procedia
header,
space is reserved for the Procedia header,

do
do
do
do

not
not
not
not

use
use
use
use

it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Distributed Automatic Differentiation for Ptychography
Distributed
Differentiation
for
Ptychography
Distributed Automatic
Automatic
Differentiation
for
Ptychography2,4
1,3
1
2
Youssef
S.
G.
Nashed
,
Tom
Peterka
,
Junjing
Deng
,
and
Chris Jacobsen2,4
Distributed Automatic
Differentiation
for
Ptychography
1
2
Youssef S. G. Nashed1,3
1,3 , Tom Peterka1 , Junjing Deng2 , and Chris Jacobsen2,4
Youssef
S. G. Nashed , Tom Peterka , Junjing Deng , and Chris Jacobsen
1
Mathematics and 1,3
Computer Science Division,
Argonne National
Laboratory, USA
1
2
2,4
1
Youssef
S. G. Nashed , Tom
Peterka
, Junjing
Deng
, andLaboratory,
Chris Jacobsen
Science
Division,
Argonne
National
USA
1 Mathematics and Computer
{ynashed,tpeterka}@anl.gov
Mathematics
and Computer Science Division, Argonne National Laboratory, USA
2
{ynashed,tpeterka}@anl.gov
Advanced Photon
Source, Argonne National Laboratory, USA
{ynashed,tpeterka}@anl.gov
2
Mathematics
and Computer
Science Argonne
Division,National
Argonne Laboratory,
National Laboratory,
USA
Source,
USA
2 Advanced Photon
{junjingdeng,cjacobsen}@anl.gov
Advanced Photon
Source, Argonne National Laboratory, USA
{ynashed,tpeterka}@anl.gov
{junjingdeng,cjacobsen}@anl.gov
Department of
and Computer Science, Northwestern University, USA
2 Electrical Engineering
{junjingdeng,cjacobsen}@anl.gov
Photon
Source,
National
USAUniversity, USA
Department of Advanced
Electrical Engineering
andArgonne
Computer
Science,Laboratory,
Northwestern
ynashed@northwestern.edu
Department
of
Electrical
Engineering
and Computer Science, Northwestern University, USA
{junjingdeng,cjacobsen}@anl.gov
4
ynashed@northwestern.edu
Department of Physics
& Astronomy, Northwestern University, USA
ynashed@northwestern.edu
4 of Electrical Engineering
Department
and Computer
Science, Northwestern
University, USA
& Astronomy,
Northwestern
University, USA
4 Department of Physics
c-jacobsen@northwestern.edu
Department of Physics
& Astronomy, Northwestern University, USA
ynashed@northwestern.edu
c-jacobsen@northwestern.edu
4
c-jacobsen@northwestern.edu
Department of Physics
& Astronomy, Northwestern University, USA
c-jacobsen@northwestern.edu
1

3
3
3
3

Abstract
Abstract
Synchrotron
Abstract radiation light source facilities are leading the way to ultrahigh resolution X-ray
Synchrotron
radiation
light
sourceisfacilities
the waythe
to ultrahigh resolution
X-ray
imaging.
resolution
imaging
essentialare
to leading
understanding
structure
and
Synchrotron
radiation
light
source facilities
are
leading
the way to fundamental
ultrahigh resolution
X-ray
AbstractHigh
imaging.
High
resolution
imaging
is
essential
to
understanding
the
fundamental
structure
and
interaction
of
materials
at
the
smallest
length
scale
possible.
Diffraction
based
methods
achieve
imaging.
High
resolution
imaging
is
essential
to
understanding
the
fundamental
structure
and
Synchrotron
radiation
light
source
facilities
are
leading
the way
to ultrahigh
resolution
X-ray
interaction
of
materials
at
the
smallest
length
scale
possible.
Diffraction
based
methods
achieve
nanoscale
imaging
by
replacing
traditional
objective
lenses
by
pixelated
area
detectors
and
cominteraction
of
materials
at
the
smallest
length
scale
possible.
Diffraction
based
methods
achieve
imaging.
High
resolution
imaging
is essential
to understanding
the fundamental
structure
and
nanoscale
imaging
by replacing
traditional
objective
lensesptychography
by pixelated
area
detectors
and computational
image
reconstruction.
Among
these
methods,
isbased
quickly
becoming
the
nanoscale
imaging
by replacing
traditional
objective
lenses byDiffraction
pixelated area
detectors
and
cominteraction
of
materials
at
the
smallest
length
scale
possible.
methods
achieve
putational
image
reconstruction.
Amongofthese
methods,
ptychography
isexpense
quicklyofbecoming
the
standard
for
sub-30
nanometer
imaging
extended
samples,
but
at
the
increasingly
putational
image
reconstruction.
Among
these
methods,
ptychography
is
quickly
becoming
the
nanoscale
imaging
bynanometer
replacing traditional
objective lenses
by but
pixelated
area
detectors
and comstandard
for
sub-30
imaging
of
extended
samples,
at
the
expense
of
increasingly
high
data
rates
and
volumes.
standard
for
sub-30
nanometer
imaging
of
extended
samples,
but
at
the
expense
of
increasingly
putational
imageand
reconstruction.
Among these methods, ptychography is quickly becoming the
highThis
datapaper
rates
volumes.
presents
a new distributed
for solving
the
reconhigh
datafor
rates
and nanometer
volumes.
standard
sub-30
imaging of algorithm
extended samples,
but
atptychographic
the expense ofimage
increasingly
This paper
presents
a on
newautomatic
distributed
algorithm for Input
solvingdatasets
the ptychographic
image
reconstruction
problem
based
differentiation.
are
subdivided
between
This
paper
presents
a
new
distributed
algorithm
for
solving
the
ptychographic
image
reconhigh data rates and volumes.
struction
problem
based
on
automatic
differentiation.
Input
datasets
are
subdivided
between
multiple
graphics
processing
units
(GPUs);
each
subset
of
the
problem
is
then
solved
either
struction
problem
based
on
automatic
differentiation.
Input
datasets
are
subdivided
between
This paper
presents
a new units
distributed
algorithm
for solving
ptychographic
image reconmultiple
graphics
processing
(GPUs);
each subset
of thethe
problem
is
then solved
either
entirely
independent
of
other
subsets
(asynchronously)
or
through
sharing
gradient
information
multiple
graphics
processing
units
(GPUs);
each
subset
of
the
problem
is
then
solved
either
struction
problem based
on automatic
differentiation. or
Input
datasets
are gradient
subdivided
between
entirely
independent
of
other
subsets
(asynchronously)
through
sharing
information
with
other
GPUs
(synchronously).
The
algorithm
was
evaluated
on
simulated
and
real
data
entirely
independent
of
other
subsets
(asynchronously)
or
through
sharing
gradient
information
multiple
graphics
processing
units (GPUs);
each subset
of the problem
is then and
solved
either
with
other
GPUs
(synchronously).
The algorithm
was
evaluated
on The
simulated
real
data
acquired
at
the
Advanced
Photon
Source,
scaling
up
to
192
GPUs.
synchronous
variant
with
other
GPUs
(synchronously).
The
algorithm
was
evaluated
on
simulated
and
real
data
entirely
independent
of other
subsets
(asynchronously)
or 192
through
sharing
gradient
information
acquired
at
the
Advanced
Photon
Source,
scaling
up
to
GPUs.
The
synchronous
variant
of
our
method
outperformed
an
existing
multi-GPU
implementation
in
terms
of
accuracy
while
acquired
at
the
Advanced
Photon
Source,
scaling
up
to
192
GPUs.
The
synchronous
variant
with
GPUs
(synchronously).
The algorithm was
evaluated oninsimulated
and real while
data
of
ourother
method
outperformed
an existing
implementation
terms of accuracy
running
at
athe
comparable
execution
time.multi-GPU
of
our method
outperformed
an existing
multi-GPU
implementation
inThe
terms
of accuracyvariant
while
acquired
at
Advanced
Photon
Source,
scaling
up
to
192
GPUs.
synchronous
running at a comparable execution time.
running
atAuthors.
a comparable
execution
time.
of2017
our The
method
outperformed
an
existing
implementation
in terms of
accuracy X-ray
while
Keywords:
inverse
problems,
reconstruction,
gradient
methods, distributed
algorithms,
©
Published
byimage
Elsevier
B.V. multi-GPU
Keywords:
inverse
problems,
image
reconstruction,
methods,
distributed
algorithms, Science
X-ray
Peer-review
under
responsibility
of
the
scientific
committee ofgradient
the International
Conference
on Computational
running at inverse
a comparable
execution
time.
scattering
Keywords:
problems,
image reconstruction,
gradient
methods,
distributed
algorithms, X-ray
scattering
scattering
Keywords: inverse problems, image reconstruction, gradient methods, distributed algorithms, X-ray
scattering

1 Introduction
1
1 Introduction
Introduction
In order to understand the behavior of heterogeneous materials at nanometer length scales, one
1
Introduction
In
order
understand
behavior
materials
nanometer
length scales,
one
must
see to
their
structure.the
This
appliesoftoheterogeneous
integrated circuits
whereatthe
as-manufactured
structure

In order to understand the behavior of heterogeneous materials at nanometer length scales, one
must
see theirfrom
structure.
This applies
to integrated
where
the as-manufactured
structure
may
depart
the design,
to the ofinteraction
ofcircuits
metals
withatorganics
in contaminated
soil,
must
see to
their
structure.
This
applies
toheterogeneous
integrated
circuits
where
the
as-manufactured
structure
In
order
understand
the
behavior
materials
nanometer
length scales,
one
may
depart
from compartmentalization
the design,
to the interaction
of metals
with
organics
in
contaminated
soil,
and
to
molecular
and
transport
within
cells.
While
super-resolution
light
may depart
from
the design,
to the interaction
ofcircuits
metals where
with organics
in contaminated
soil,
must
see
their
structure.
This
applies
to
integrated
the
as-manufactured
structure
and to molecular compartmentalization and transport within cells. While super-resolution light
and to
molecular
and transport
within
cells.
While in
super-resolution
may
depart
from compartmentalization
the design, to the interaction
of metals
with
organics
contaminated light
soil,
1
and to molecular compartmentalization and transport within cells. While super-resolution light
1
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
1
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.101

	

Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen
Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414
Raster Scan
Direction

Detector

Beam
Optic or
Pinhole

Sample

Di raction Pattern

Figure 1: Simplified ptychography experiment setup. A Cartesian grid is used for the overlapping raster scan positions.

microscopy is providing new insights in biology when using fluorescence from one or a few specific
molecule types, only electron and X-ray microscopy offer the possibility of nanoscale imaging
of a material in its entirety, and it is only with X-rays that one can image specimens much
thicker than a micrometer. However, in spite of demonstrations of about 10 nm resolution Xray lens-based imaging in high contrast test structures [6] , most lens-based X-ray microscopes
are limited to 20-30 nm resolution for practical studies. An alternative approach is to collect
the far-field X-ray diffraction pattern at large angles and use iterative phase retrieval to obtain
higher resolution than X-ray lenses permit [24], but this basic approach of coherent diffraction
imaging or CDI requires samples of very limited extent. X-ray ptychography [15, 29], where
far field coherent X-ray diffraction patterns are collected as a finite-sized coherent beam is
scanned across the specimen with significant illumination spot overlaps, provides an alternative
approach which is compatible with both large imaging fields of view and freedom from lensimposed resolution limits.
While the set of far-field X-ray diffraction patterns recorded in ptychography capture the
Fourier plane magnitudes of the scattered light, the phase is lost so that these diffraction patterns cannot be directly inverted to reveal the samples structure within each illumination spot.
Mathematically, the phase inverse problem is ill-posed, meaning its solution is underdetermined
and nonunique [16].
Phase retrieval algorithms [9] are designed to solve the phase problem by iteratively trying
to find phases for the measured magnitudes that satisfy a set of constraints. In ptychography,
the constraints are derived from diffraction data redundancy. Data redundancy is achieved by
scanning the coherent illumination spot across the sample, and collecting a different diffraction
pattern at each partially overlapping scan position (see Figure 1). Ptychography has been
successful in imaging frozen-hydrated cells at 30 nm resolution [8], and integrated circuits at
41 nm resolution [14].
Many methods have been proposed for solving the phase problem. The most commonly used
algorithms follow an alternating projections scheme [30], where a randomly initialized object
wave function guess is iteratively improved by replacing the magnitude of the predicted wave
with the measurement. Variants of this method for ptychography include the Ptychographical
Iterative Engine (PIE) [29], and the Difference Map algorithm [33]. The alternating projections
2

405

406	

Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen
Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414

approach follows naturally from the underlying physics, starting with a model that is sequentially updated using the forward problem formulation and heuristics about the experimental
setup. There is, however, no guarantee that these algorithms converge to the optimal solution.
Moreover, it is inherently difficult to measure their computational complexity [27].
Alternatively, phase retrieval can be formulated as a nonlinear optimization problem [13].
The forward problem is mathematically described using a cost function, taking into account
different noise models and regularization; the inverse problem is then solved by finding the
global minimum of this cost function. This requires calculating the gradient of the cost function to direct the search algorithm. Typically, a gradient expression is explicitly derived by
symbolically differentiating the cost function. This has the advantage of using ‘out-of-the-box’
optimization methods, like Gauss-Newton [37], conjugate gradient [13], or quasi-Newton [21],
and being more computationally efficient than finite-difference methods, when appropriate approximations are used [27]. The major drawback of this method is the manual derivation of the
gradient expression. Besides requiring assumptions and approximations in the forward model
cost function, for which there exist symbolic derivatives, it also keeps the forward model tightly
coupled with the gradient calculation. With any updates to the forward model, for example
due to new experimental capabilities, the gradient expression needs to be derived again.
Automatic differentiation (AD) [28], also known as Algorithmic Differentiation, offers the
simple expressibility of alternating projections methods, along with the power of gradient directed optimization methods. AD calculates partial derivatives of a function with respect to
each of its input parameters by using the chain rule. The chain rule states that a derivative
of a complex function can be automatically computed by combining derivatives of elementary
operations, like arithmetic and trigonometric functions, that make up this function. The application of AD to the phase problem was highlighted by Jurling and Fienup who derived the
complex-valued elementary operations specific to phase retrieval algorithms [19]. They applied
‘manual automatic differentiation’ by computing the gradient by hand, but using the principles
of AD to convert forward model code to a series of gradient calculations. A related approach
was recently presented to retrieve the 3D structure of a thick specimen [17], but in optical
microscopy, employing a different forward model, error metric, and optimization strategy than
what is presented here.
This paper investigates the use of AD for ptychographic phase retrieval. We focus on method
accuracy when the gradient calculation is shared among distributed many-core computing resources and execution time on these resources. To summarize, the main contributions of this
paper are:
• a fully automatic gradient calculation from source code for ptychography as will be discussed in Section 2.2;
• an algorithm for distributing a ptychographic dataset and gradient synchronization among
multiple GPUs;
• a comparison of the new algorithm, in terms of convergence and performance, with an
existing method.

2

Background

This section defines the notation and terminology used throughout the paper. It overviews the
ptychographic phase retrieval forward model, and introduces AD basics and tools utilized in
calculating gradients for this model.
3

	

Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414
Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen

2.1

Ptychography

Ptychography solves the phase problem using interfering diffraction patterns from overlapping
scan areas in the object space. The idea itself is decades old [15], but its adoption accelerated in
the last decade [11,18,33,36]. This is mainly due to increased robustness of the inversion process,
compared to previous CDI techniques [2], and the ability to image objects much larger than
the focused beam at a resolution that is, theoretically, only limited by the beam wavelength.
Figure 1 shows a simplified diagram of a ptychography experiment. A focused beam is used
to raster scan an object in a predefined arrangement of spatially overlapping beam locations,
generating a set of J ‘far-field’ diffraction patterns at the detector plane. The forward model
for ptychography can be written as
ψj (r) = P (r − rj ) ◦ O(r).

(1)

The complex-valued object wave function O(r) interacts with the beam wave function (termed
Probe hereafter) P (r) at position rj . This interaction is approximated by the complex elementwise Hadamard product operator ◦ of the two wave functions, generating an exit wave function
ψj (r) that is propagated to the detector plane, and then measured as a real-valued diffraction
pattern Ij (q) defined as
(2)
Ij (q) = |F [ψj (r)]|2 ,
where F [.] denotes the Fourier transform from real space r to reciprocal space q.
Alternating projections reconstruction algorithms start with an initial guess of O(r), and
sometimes P (r), then proceed with calculating the exit wave function as in Equation (1). A
new estimate Ψj (q) is then computed by replacing the modulus of the Fourier transform of the
j-th exit wave with the square root of the measured diffraction pattern intensity, such that

F [ψj (r)]
Ψj (q) = Ij (q)
.
(3)
|F [ψj (r)]|
A new exit wave ψj (r) can then be computed by means of an inverse Fourier transform, as in
ψj (r) = F −1 [Ψj (q)].

(4)

This can be done for all J relative shifts in r at once [33], or sequentially and in random
order [22]. The residual {ψj (r) − ψj (r)} is then used to refine the object guess O(r) in an
iterative fashion.
As was stated in Section 1, gradient methods formulate an error metric based on the given
information and forward model specification. The simplest form of this error metric for ptychography can be written as
E=

J
1
{|F [ψj (r)]|2 − Ij (q)}2 ,
J j=1

(5)

essentially the Mean Squared Error (MSE) estimator measuring how well a forward model agrees
with measured data. More sophisticated error metrics can be defined, including regularization
and weighting functions to account for noise, numerical instability, bad detector pixels, or
beam stops [10, 13]. An analytic gradient expression is manually derived from Equation (5) by
expanding and differentiating the error metric function. Guided by the gradient information,
finding the minimum of this error function often yields a good estimate of the object wave
function.
4

407

408	

Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414
Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen

2.2

Automatic Differentiation

AD solves many problems with symbolic and numerical differentiation, such as computational
inefficiency and errors introduced by domain discretization. It can automatically provide derivatives, high-order derivatives, and partial derivatives with respect to many input parameter
functions defined in computer source code. The majority of modern programming languages
have tools for AD [4, 12], which work either by source code transformation (SCT) or operator overloading (OO). SCT tools run before the language compiler, generating source code for
derivative calculation from existing functions source code. OO tools provide the datatypes and
elementary operators to compute partial derivatives, apply the chain rule, and define the function to be differentiated. Both approaches typically use a computational graph [34], a directed
acyclic graph in which the vertices are operators or independent variables, and the edge weights
equal the partial derivative of a node with respect to the edge source node. The computational
graph is traversed to compute the root node derivative by aggregating the partial derivatives
along all paths to leaf nodes, applying the chain rule for every edge weight [5].
The past few years have seen a growing interest in AD from both academia and industry,
fueled by a need for generic, user-friendly deep learning toolkits. The backpropagation learning
algorithm used to train deep neural networks is a special case of reverse mode AD [31]. Consequently, several libraries available for deep learning also include high performance routines
for constructing computational graphs and traversing them, from top to bottom, computing
partial derivatives along the way to tune ‘neurons’ in a multilayer neural network [1, 3, 35].
TensorFlow [1] is a Python based deep learning API provided by Google with OO AD and
GPU implementation. In this paper, we use TensorFlow to automatically calculate gradients
for the ptychography forward model and error metric previously defined.

3

AD for Ptychography

Ptychographical reconstruction algorithms typically try to estimate the Fourier phases lost during measurement of the diffraction patterns (Fourier magnitudes). Once the two components,
phase and magnitude, of the Fourier function are known, the object wave function is obtained
by the inverse Fourier transform in Equation (4). In our case, however, the error metric comparison defined in Equation (5) is performed directly on the Fourier magnitude values. Instead of
solving for the Fourier phases first (in order to obtain the object function), the object function
is updated iteratively using gradient information given by AD. AD computes the partial derivative of E with respect to each pixel value in O. In practice, the complex-valued object function
is decomposed into its real and imaginary components, Or and Oi respectively, and two partial
∂E
∂E
Other independent
derivatives are computed for each component separately, ∂O
r and ∂O i .
variables, such as the probe function P , can also be added to this framework. Currently, our
algorithm requires a known probe function and retrieves the object function.
Once the partial derivatives are computed, minimizing E can be achieved by any gradientbased optimization method. In this paper we employ the Adam algorithm for stochastic optimization [20], with the following hyperparameter values: 0.8 for the learning rate, 0.9 as the
exponential decay rate of the first moment estimates, and 0.99 for the exponential decay rate
of the second moment estimates.
5

	

Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen
Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414

3.1

Distributed Algorithm

Input datasets for ptychography consist of diffraction pattern images measured from spatially
overlapping scan positions. Therefore, there exists a decomposition of the input dataset that
maintains mutual spatial information among diffraction patterns, and in which the inverse
problem is locally and independently solvable. In the case of Cartesian grid scans, a regular 2D
decomposition suffices [14, 23, 25]. Solving the ptychographic phase retrieval problem for each
sub-dataset will result in a part of the reconstructed object image. Those parts can be merged
to form the final reconstruction since the original sub-datasets overlap at the decomposition
borders.
Similar to our previous multi-GPU implementation of the PIE and ePIE reconstruction algorithms [25], we implemented two variants of the new AD-based methods. An asynchronous
version, AD async, runs the computations independently on separate GPUs without any communication except at the end of the reconstruction, when all partial results are stitched back
together using a parallel reduction-with-merge algorithm [26]. A synchronous version, AD sync,
communicates local gradient information globally to all running GPUs at every iteration, employing a Radix-k communication algorithm [26], effectively sharing a synchronized object function among all GPUs.
AD async delivers the best scaling performance in a multi-GPU distributed environment,
due to limited communication between computing resources. Post-reconstruction stitching,
however, is not as simple as a parallel gather operation. Each GPU’s partial reconstruction
exhibits spatial offsets and phase shifts relative to all other GPU reconstructions. 2D registration and phase modulation methods are required to merge all partial reconstructions into one
coherent object wave function. We use a phase correlation algorithm for 2D rigid registration
and a gain compensation technique, such as is used for photographic image stitching, for finding
a common phase offset for the final reconstruction [25].

rj

Dj

P

ψj+d1

|FFT|2

Ij+d1

-

E1

∂

g1

ψj+d2

|FFT|2

Ij+d2

-

E2

∂

g2
+

○

|FFT|2

Ij+dN

-

EN

...

+

...

ψj+dN

...

...

O

∂

gN
G

Figure 2: Block diagram of the AD sync algorithm running on N GPUs. Input data are in
gray, independent and intermediate variables are in blue, and operators are in orange.
Figure 2 shows a data flow chart of the AD sync algorithm. The object function O is
randomly initialized and shared among all GPUs. The data subdivision scheme is common to
both synchronous and asynchronous versions of the algorithm. Starting with scan area extents
as the domain to be decomposed, regular 2D offset sets [d1, d2, ...dN ] are computed based on
6

409

410	

Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen
Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414

the number N of GPUs used. Those offsets are used to define subsets in the diffraction pattern
dataset Dj and scan positions list rj . Each GPU n calculates its current diffraction pattern
estimate Ij+dn for a specific 2D region of O indexed by a different rj subset. A local MSE
En is calculated from the estimate and the measured data subset Dj+dn , for which the AD
tool derives a local gradient gn . In AD async, gn is used to update GPU’s local copies of O,
while in AD sync, local gradients are aggregated forming a global gradient G, which is then
used to update the shared object function. This process is repeated for a predefined number of
iterations, after which the AD sync algorithm is done. AD async, merges local copies of O into
one final reconstruction using the stitching algorithm introduced above.

4

Evaluation

Evaluation was performed using two datasets: a synthetic sample simulating the diffraction
patterns from a known image, and on real data from the Bionanoprobe [7] at beamline 21-ID-D
of the Advanced Photon Source at Argonne National Laboratory. Experiments were run on the
Cooley cluster at the Argonne Leadership Computing Facility (ALCF). Cooley is a visualization
platform consisting of 126 compute nodes; each node has 12 CPU cores and one NVIDIA Tesla
K80 dual-GPU card.

4.1

Simulated Data

We compared AD sync, AD async, and our previous implementations of the PIE algorithm,
termed PIE sync and PIE async, in terms of accuracy and performance. A synthetic pure
phase object was raster scanned using a regular 160×160 Cartesian grid, generating a total of
25,600 far-field diffraction patterns, each of 128×128 pixels, for a total of 1.56 GB of single
precision floating point raw data. The diffraction patterns were generated with a single-pixel
detector point-spread function, with no added noise and 90% overlap between adjacent scan
points in the horizontal and vertical directions. Results were obtained for different numbers of
GPUs after 200 iterations of all algorithms.
Performance and accuracy plots of different GPU configurations [1-128] are reported in Figure 3. Our new algorithm has a higher memory requirement than the previous implementation.
Therefore, time was only reported for AD sync and AD async running on 4 or more GPUs,
while PIE sync and PIE async were able to fit the entire simulated dataset on one GPU. This
is because of TensorFlow creating auxiliary arrays for storing the computational graph and
computing the gradients. The top left plot shows mean runtime of 5 independent runs of all
algorithms. It is clear that scaling is almost linear for the asynchronous algorithms, AD async
and PIE async, while synchronous ones suffer from communication overhead. The top right
plot shows the algorithms scaling efficiency using a 4 GPU baseline. Again, asynchronous algorithms exhibit better scaling efficiency than asynchronous algorithms. The average scaling
efficiency for AD sync is 65.7%, AD async is 77.7%, PIE sync is 61.8%, and PIE async is 95.9%.
The bottom left plot is of a weak scaling test for the new algorithms, in which the workload
assigned to each GPU was kept constant by doubling the input dataset size with the number
of assigned GPUs.
The bottom right plot of Figure 3 depicts the convergence of all algorithms, measured employing a Normalized Root Mean Squared Error (NRMSE). NRMSE was calculated pixel-wise
between object estimates and their corresponding 2D regions in the ground truth, for each GPU
and per iteration. Individual GPU errors are aggregated for all GPUs of a certain configuration
and averaged across 5 independent runs. The plotted quantity is the mean NRMSE of all GPU
7

	

Youssef S.G. Nashed et al. / Procedia Computer Science 108C (2017) 404–414
Distributed Automatic Differentiation for Ptychography
Nashed, Peterka, Deng, and Jacobsen

—

—
Figure 3: Simulated dataset performance evaluation plots. The time reported is the total
running time of the algorithms in seconds, including I/O time. NRMSE is the Normalized Root
Mean Squared Error calculated per-pixel between object function estimates and the ground
truth.
configurations of each algorithm. Both versions of our new algorithm, AD sync and AD async,
outperform their PIE counterparts in terms of final reconstruction quality and NRMSE standard deviation between runs. It is also evident from the plot that synchronous versions of the
algorithm have better convergence than the asynchronous versions. This is mainly because
of the increased statistics, found along scan region decomposition boundaries, that are only
available to communicating GPUs in the synchronous approach.

4.2

Experimental Data

In order to evaluate our algorithm’s applicability and performance, we tested it on real data
acquired at a synchrotron radiation facility. The data was acquired at the Bionanoprobe [7]
at the 21-ID-D beamline of the Advanced Photon Source. The sample is a CMOS integrated
circuit (IC) fabricated in a 65 nm technology with eight copper interconnect layers. This IC
was imaged using a 140×300 Cartesian grid of scan points (30% overlap), 10 keV X-rays, and a
detector placed 2 meters downstream to collect the diffraction patterns. The central 256×256
pixels of the detector data were selected for the reconstruction, yielding a reconstructed image
pixel size of 5.6 nm and 10.25 GB of raw input data. Such large datasets usually contain noise
resulting from finite photon counts, positional errors in the scanning stages, fluctuations in the
beam intensity, and distortions caused by air scattering, changes in sample temperature, and
bad or missing detector pixels.
8

411

Youssef S.G. Nashed et al. / Procedia Computer Science 108C (2017) 404–414
Distributed Automatic Differentiation for Ptychography
Nashed, Peterka, Deng, and Jacobsen

2.3

(a)

2

(b)

m

22 nm

0

(c)

Gray Value

WallTime (s)

412	

GPUs

Distance (nm)

Figure 4: Ptychographic reconstruction of a CMOS IC fabricated in 65 nm technology. (a) the
retrieved phase contrast showing an overlay of features at the chip wiring and gate level; (b)
Performance plot for the synchronous and asynchronous algorithms, scaling up to 192 GPUs;
(c) Line profile plot along the red line in (a) showing 22 nm resolution.
Figure 4 shows the 6.64 Terapixel reconstruction of the IC using AD sync running for 200
iterations on 32 GPUs, along with plots for estimated resolution and performance scaling up
to 192 GPUs. Because phase contrast is much stronger than absorption contrast at the X-ray
energy used, we show the phase contrast image, after phase unwrapping, from the ptychographic
reconstruction of the IC complex transmission function.

5

Conclusion and Future Work

In this paper we presented a new parallel multi-GPU algorithm for ptychographic reconstruction
based on automatic differentiation. The algorithm utilizes a production deep learning software
library, TensorFlow, for adjusting an estimate of the ptychography forward model to fit with the
measured data. In order to distribute the computation among multiple GPUs, our distributed
algorithm splits raw input data into spatially contiguous partitions that are allocated to each
GPU. Sub-problems are then either solved independently on each GPU or by communicating
current solution estimates to other GPUs. The new algorithm was evaluated on synthetic and
real data acquired at the APS. The synchronous version of the new algorithm was found to
have superior convergence properties and scaling performance when compared to an existing
implementation.
Thanks to decoupling the forward model from its optimization, one can easily amend the
forward model, tune the optimizer hyperparameters, or experiment with different gradientbased optimizers and error metrics. Future work includes adding more input parameters to the
current forward model, such as the probe function and experimental instabilities, expanding
the gradient calculation to these new parameters with the existing error metric, and comparing
the results with various modifications to the error metric. Additionally, we consider the work
presented here a steppingstone towards a 3D ptychographic reconstruction method, owing to
similarities between multilayer neural networks and the multislice propagation theory [32].
9

	

Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414
Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen

Acknowledgment
We gratefully acknowledge the use of the resources of the Argonne Leadership Computing
Facility and the Advanced Photon Source at Argonne National Laboratory. This work was
supported by Advanced Scientific Computing Research, Office of Science, U.S. Department of
Energy, under Contract DE-FC02-06ER25777. The Bionanoprobe is funded by NIH/NCRR
High End Instrumentation (HEI) grant (1S10RR029272-01) as part of the American Recovery
and Reinvestment Act (ARRA).

References
[1] M. Abadi, A. Agarwal, P. Barham, E. Brevdo, Z. Chen, C. Citro, G. S. Corrado, A. Davis, J. Dean,
M. Devin, et al. Tensorflow: Large-scale machine learning on heterogeneous distributed systems.
arXiv preprint arXiv:1603.04467, 2016.
[2] P. Bao, F. Zhang, G. Pedrini, and W. Osten. Phase retrieval using multiple illumination wavelengths. Optics letters, 33(4):309–311, 2008.
[3] J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Desjardins, J. Turian, D. WardeFarley, and Y. Bengio. Theano: A cpu and gpu math compiler in python. In Proc. 9th Python in
Science Conf, pages 1–7, 2010.
[4] C. Bischof, A. Carle, G. Corliss, A. Griewank, and P. Hovland. Adifor–generating derivative codes
from fortran programs. Scientific Programming, 1(1):11–29, 1992.
[5] C. H. Bischof, P. D. Hovland, and B. Norris. On the implementation of automatic differentiation
tools. Higher-Order and Symbolic Computation, 21(3):311–331, 2008.
[6] W. Chao, B. Harteneck, J. Liddle, E. Anderson, and D. Attwood. Soft x-ray microscopy at a
spatial resolution better than 15 nm. Nature, 435:1210–1213, 2005.
[7] S. Chen, J. Deng, Y. Yuan, C. Flachenecker, R. Mak, B. Hornberger, Q. Jin, D. Shu, B. Lai,
J. Maser, et al. The bionanoprobe: hard x-ray fluorescence nanoprobe with cryogenic capabilities.
Journal of synchrotron radiation, 21(1):66–75, 2014.
[8] J. Deng, D. J. Vine, S. Chen, Y. S. Nashed, Q. Jin, N. W. Phillips, T. Peterka, R. Ross, S. Vogt,
and C. J. Jacobsen. Simultaneous cryo x-ray ptychographic and fluorescence microscopy of green
algae. Proceedings of the National Academy of Sciences, 112(8):2314–2319, 2015.
[9] J. R. Fienup. Phase retrieval algorithms: a comparison. Applied optics, 21(15):2758–2769, 1982.
[10] J. R. Fienup. Invariant error metrics for image reconstructionc. Applied optics, 36(32):8352–8357,
1997.
[11] K. Giewekemeyer, P. Thibault, S. Kalbfleisch, A. Beerlink, C. M. Kewish, M. Dierolf, F. Pfeiffer,
and T. Salditt. Quantitative biological imaging by ptychographic x-ray diffraction microscopy.
Proceedings of the National Academy of Sciences, 107(2):529–534, 2010.
[12] A. Griewank, D. Juedes, and J. Utke. Algorithm 755: Adol-c: a package for the automatic
differentiation of algorithms written in c/c++. ACM Transactions on Mathematical Software
(TOMS), 22(2):131–167, 1996.
[13] M. Guizar-Sicairos and J. R. Fienup. Phase retrieval with transverse translation diversity: a
nonlinear optimization approach. Opt. Express, 16(10):7264–7278, May 2008.
[14] M. Guizar-Sicairos, I. Johnson, A. Diaz, M. Holler, P. Karvinen, H.-C. Stadler, R. Dinapoli,
O. Bunk, and A. Menzel. High-throughput ptychography using eiger: scanning x-ray nano-imaging
of extended regions. Opt. Express, 22(12):14859–14870, Jun 2014.
[15] W. Hoppe. Beugung im inhomogenen primarstrahlwellenfeld. i. prinzip einer phasenmessung von
elektronenbeungungsinterferenzen. Acta Crystallographica Section A, 25(4):495–501, 1969.
[16] A. Huiser and P. Van Toorn. Ambiguity of the phase-reconstruction problem. Optics letters,
5(11):499–501, 1980.

10

413

414	

Youssef S.G.for
Nashed
et al. / Procedia Computer Science
108C Peterka,
(2017) 404–414
Distributed Automatic Differentiation
Ptychography
Nashed,
Deng, and Jacobsen

[17] X. Jiang, W. Van den Broek, and C. T. Koch. Inverse dynamical photon scattering (IDPS): an
artificial neural network based algorithm for three-dimensional quantitative imaging in optical
microscopy. Optics express, 24(7):7006–7018, 2016.
[18] M. W. Jones, N. W. Phillips, G. A. van Riessen, B. Abbey, D. J. Vine, Y. S. Nashed, S. T.
Mudie, N. Afshar, R. Kirkham, B. Chen, et al. Simultaneous x-ray fluorescence and scanning
x-ray diffraction microscopy at the australian synchrotron xfm beamline. Journal of Synchrotron
Radiation, 23(5), 2016.
[19] A. S. Jurling and J. R. Fienup. Applications of algorithmic differentiation to phase retrieval
algorithms. JOSA A, 31(7):1348–1359, 2014.
[20] D. Kingma and J. Ba. Adam: A method for stochastic optimization. arXiv preprint
arXiv:1412.6980, 2014.
[21] J. Li and T. Zhou. Numerical optimization algorithm of wavefront phase retrieval from multiple
measurements. arXiv preprint arXiv:1607.01861, 2016.
[22] A. M. Maiden and J. M. Rodenburg. An improved ptychographical phase retrieval algorithm for
diffractive imaging. Ultramicroscopy, 109(10):1256–1262, 2009.
[23] S. Marchesini, H. Krishnan, B. J. Daurer, D. A. Shapiro, T. Perciano, J. A. Sethian, and F. R. N. C.
Maia. SHARP: a distributed GPU-based ptychographic solver. Journal of Applied Crystallography,
49(4):1245–1252, Aug 2016.
[24] J. Miao, P. Charalambous, J. Kirz, and D. S. yre. An extension of the methods of x-ray crystallogra
phy to allow imaging of micron-size non-crystalline specimens. Nature, 400:342–344, 1999.
[25] Y. S. Nashed, D. J. Vine, T. Peterka, J. Deng, R. Ross, and C. Jacobsen. Parallel Ptychographic
Reconstruction. Optics Express, 22(26):32082–32097, 2014.
[26] T. Peterka, D. Goodell, R. Ross, H.-W. Shen, and R. Thakur. In Proceedings of the Conference
on High Performance Computing Networking, Storage and Analysis, page 4. ACM, 2009.
[27] J. Qian, C. Yang, A. Schirotzek, F. Maia, and S. Marchesini. Efficient algorithms for ptychographic
phase retrieval. Inverse Problems and Applications, Contemp. Math, 615:261–280, 2014.
[28] L. B. Rall. Automatic differentiation: Techniques and applications. 1981.
[29] J. M. Rodenburg and H. M. Faulkner. A phase retrieval algorithm for shifting illumination. Applied
physics letters, 85(20):4795–4797, 2004.
[30] G. RW and W. Saxton. Phase determination from image and diffraction plane pictures in electronmicroscope. Optik, 34(3):275, 1971.
[31] J. Schmidhuber. Deep learning in neural networks: An overview. Neural Networks, 61:85–117,
2015.
[32] A. Suzuki, S. Furutaku, K. Shimomura, K. Yamauchi, Y. Kohmura, T. Ishikawa, and Y. Takahashi.
High-resolution multislice x-ray ptychography of extended thick objects. Physical review letters,
112(5):053903, 2014.
[33] P. Thibault, M. Dierolf, A. Menzel, O. Bunk, C. David, and F. Pfeiffer. High-resolution scanning
x-ray diffraction microscopy. Science, 321(5887):379–382, 2008.
[34] G. Tinhofer, E. Mayr, H. Noltemeier, and M. Syslo. Computational graph theory, volume 7.
Springer, 1990.
[35] S. F. Walter and L. Lehmann. Algorithmic differentiation in python with algopy. Journal of
Computational Science, 4(5):334–344, 2013.
[36] R. Wilke, M. Priebe, M. Bartels, K. Giewekemeyer, A. Diaz, P. Karvinen, and T. Salditt. Hard
x-ray imaging of bacterial cells: nano-diffraction and ptychographic reconstruction. Optics express,
20(17):19232–19254, 2012.
[37] J. Zhong, L. Tian, P. Varma, and L. Waller. Nonlinear optimization algorithm for partially coherent
phase retrieval and source recovery. IEEE Transactions on Computational Imaging, 2(3):310–322,
2016.

11

