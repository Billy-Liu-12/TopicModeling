Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header,
This Procedia
space is
reserved
for 108C
the Procedia
header,
Computer
Science
(2017) 1354–1363
This space is reserved for the Procedia header,
This space is reserved for the Procedia header,

do
do
do
do

not
not
not
not

use
use
use
use

it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Global Convergence Analysis of the Flower Pollination
Global Convergence Analysis of the Flower Pollination
Global
Convergence
Analysis Markov
of the Flower
Algorithm:
A Discrete-Time
ChainPollination
Approach
Global
Convergence
Analysis Markov
of the Flower
Algorithm:
A Discrete-Time
ChainPollination
Approach
Algorithm:
A
Discrete-Time
Markov
Chain
Approach
1
2∗
2
Xingshi He1 , Xin-She
Yang2∗, Mehmet Karamanoglu
, and Yuxin
Zhao33
Algorithm:
A
Discrete-Time
Markov
Chain
Approach
2
Xingshi He , Xin-She Yang , Mehmet Karamanoglu , and Yuxin
Zhao
1
2∗
2
Xingshi 1He
, Xin-She
Yang
, Mehmet
, and Yuxin Zhao33
College
of Science,
Xi’an
PolytechnicKaramanoglu
University, Xi’an,
2 P. R. China
1He1 , Xin-She Yang2∗
2
Xingshi
,
Mehmet
Karamanoglu
, P.
and
Yuxin
College
of
Science,
Xi’an
Polytechnic
University,
Xi’an,
R.
China
School of Science and Technology, Middlesex University, London
NW4
4BT, Zhao
UK
2 3
1
School
of Science
and Technology,
MiddlesexUniversity,
University,
London
NW4
UK
College
of Science,
Xi’an
Polytechnic
Xi’an,
P. R.
College
of Automation,
Harbin
Engineering
University,
Harbin,
P.China
R.4BT,
China
1
2 3

College
of Science,
Xi’an
Polytechnic
Xi’an,
P. R.
College
of Automation,
Harbin
Engineering
University,
Harbin,
P.China
R.4BT,
China
School
of Science
and Technology,
MiddlesexUniversity,
University,
London
NW4
UK
of Science
and Technology,
Middlesex University,
UK
College
of Automation,
Harbin Engineering
University,London
Harbin,NW4
P. R.4BT,
China
3
College of Automation, Harbin Engineering University, Harbin, P. R. China

2 3
School

Abstract
Abstract
Flower pollination algorithm is a recent metaheuristic algorithm for solving nonlinear global
Abstract
Flower
pollination
algorithm
is a recent
algorithm
for multiobjective
solving nonlinear
global
optimization
problems.
The algorithm
hasmetaheuristic
also been extended
to solve
optimizaAbstract
Flower
pollination
algorithm
is
a
recent
metaheuristic
algorithm
for
solving
nonlinear
optimization
problems.
The
algorithm
has
also
been
extended
to
solve
multiobjective
optimization with promising results. In this work, we analyze this algorithm mathematically and global
prove
Flower
pollination
algorithm
isthis
a recent
algorithm
formathematically
solving nonlinear
global
optimization
problems.
The
hasmetaheuristic
also
been
extended
to solve
multiobjective
optimization
with
promising
results.
In
work,
we
analyze
this
algorithm
and
prove
its convergence
properties
byalgorithm
using
Markov
chain
theory.
By
constructing
the appropriate
tranoptimization
problems.
The
algorithm
haswe
also
been
extended
to solvemathematically
multiobjective
optimization
with
promising
results.
In
this
work,
analyze
this
algorithm
and
prove
its
convergence
properties
by
using
Markov
chain
theory.
By
constructing
the
appropriate
transition probability for a population of flower pollen and using the homogeneity property, it
can
tion
with
promising
results.
In
thisof
work,
we
analyze
this
algorithm
mathematically
and it
prove
its
convergence
properties
by
using
Markov
chain
theory.
By
constructing
the
appropriate
sition
probability
for
a
population
flower
pollen
and
using
the
homogeneity
property,
can
be shown that the constructed stochastic sequences can converge to the optimal set. Undertranthe
its
convergence
properties
by using
Markov
chain
theory.
By constructing
the appropriate
transition
probability
for
a
population
of
flower
pollen
and
using
the
homogeneity
property,
it
can
be
shown
that
the
constructed
stochastic
sequences
can
converge
to
the
optimal
set.
Under
the
two proper conditions for convergence, it is proved that the simplified flower pollination algosition
probability
for
a for
population
of flower
pollen
and
using
the to
homogeneity
property,
italgocan
be
shown
that
the
constructed
stochastic
sequences
can
converge
the
optimal
set.
Under
the
two
proper
conditions
convergence,
it
is
proved
that
the
simplified
flower
pollination
rithm can indeed satisfy these convergence conditions and thus the global convergence of this
be
shown
that
the satisfy
constructed
stochastic
sequences
can
converge
to the
optimal
set. Under
the
two
proper
conditions
for
convergence,
it
is
proved
that
the
simplified
flower
pollination
algorithm
can
indeed
these
convergence
conditions
and
thus
the
global
convergence
of
this
algorithm can be guaranteed. Numerical experiments are used to demonstrate that the flower
two
proper
conditions
for
convergence,
it
is
proved
that
the
simplified
flower
pollination
algorithm
can can
indeed
satisfy
convergence
conditions
and
thus
the
global
this
algorithm
be guaranteed.
Numerical
experiments
demonstrate
that optimality
the of
flower
pollination
algorithm
canthese
converge
quickly
in
practiceare
andused
can to
thus
achieveconvergence
global
rithm
can can
indeed
satisfy
these
convergence
conditions
and
thus
the
global
convergence
of
this
algorithm
be
guaranteed.
Numerical
experiments
are
used
to
demonstrate
that
the
flower
pollination
algorithm
can
converge
quickly
in
practice
and
can
thus
achieve
global
optimality
efficiently.
algorithm
can
be
guaranteed.
Numerical
experiments
are
used
to
demonstrate
that
the
flower
pollination algorithm can converge quickly in practice and can thus achieve global optimality
efficiently.
Keywords:
Algorithm,
convergence
analysis,
pollination
Lévy flight,
metaheuristics,
pollination
algorithm
can
converge
quickly
in practice
and algorithm,
can thus achieve
global
optimality
©
2017 The Authors.
Published
by
Elsevier
B.V. flower
efficiently.
Keywords:
Algorithm,
analysis,
flowerofpollination
algorithm,
Lévyonflight,
metaheuristics,
Peer-review
responsibility
of the scientific
committee
the International
Conference
Computational
Science
nature-inspired
strategy,convergence
optimization
efficiently.under
Keywords: Algorithm,
analysis, flower pollination algorithm, Lévy flight, metaheuristics,
nature-inspired
strategy,convergence
optimization
Keywords:
Algorithm,
analysis, flower pollination algorithm, Lévy flight, metaheuristics,
nature-inspired
strategy,convergence
optimization
nature-inspired strategy, optimization

1 Introduction
1 Introduction
1
Introduction
Computational
intelligence and optimization have become increasingly important in many ap1
Introduction
Computational
intelligence
optimization
become
increasingly
important
in many
applications,
partly
due to theand
explosion
of data have
volumes
driven
by the Internet
and social
media,

Computational
optimization
become
increasingly
important
in many
applications,
theand
explosion
of
data have
volumes
driven
the Internet
and social
media,
and partly partly
due intelligence
todue
thetomore
stringent
design
requirements.
Inbyrecent
years,
bio-inspired
optiComputational
intelligence
and
optimization
have
become
increasingly
important
in many
applications,
partly
due
to
the
explosion
of
data
volumes
driven
by
the
Internet
and
social
media,
and
partly
due
to
the
more
stringent
design
requirements.
In
recent
years,
bio-inspired
optimization algorithms have gained some popularity [1, 2]. Many new optimization algorithms
plications,
partly
due
to
the
explosion
of
data
volumes
driven
by
the
Internet
and
social
media,
and
partlyalgorithms
thehave
more
stringent
requirements.
In recent
years,
bio-inspired
optimization
gained
somedesign
popularity
[1, 2]. characteristics
Many
new optimization
algorithms
are based
ondue
thetoso-called
swarm
intelligence
with
diverse
in mimicking
natural
and
partlyalgorithms
due
toso-called
thehave
more
stringent
design
requirements.
In recent
years,
bio-inspired
optimization
gained
some
popularity
[1,
2].
Many
new
optimization
algorithms
are
based
on
the
swarm
intelligence
with
diverse
characteristics
in
mimicking
natural
systems. Consequently, different algorithms may have different features and thus may behave
mization
algorithms
have
gained
some
popularity
[1,
2].
Many
new
optimization
algorithms
are
based Consequently,
on
the with
so-called
swarm
intelligence
withhave
diverse
inunderstanding
mimicking
systems.
different
algorithms
may
and
thus may natural
behave
differently,
even
different
efficiencies.
However,
it different
stillcharacteristics
lacksfeatures
in-depth
why
are
based Consequently,
on
the with
so-called
swarm
intelligence
withhave
diverse
characteristics
inunderstanding
mimicking
natural
systems.
different
algorithms
may
different
features
and
thus
may
behave
differently,
even
different
efficiencies.
However,
it
still
lacks
in-depth
why
these algorithms work well and exactly under what conditions.
systems.
Consequently,
different
algorithms
may
have
different
features
and
thus may behave
differently,
even
with
different
efficiencies.
However,
it
still
lacks
in-depth
understanding
why
these
algorithms
work
well
and
exactly
under
what
conditions.
In fact, there is a significant gap between theory and practice. Most metaheuristic algorithms
differently,
even is
with
different
efficiencies.
However,
itpractice.
still lacksMost
in-depth
understanding
why
these
algorithms
work
well
and
exactly
under
what
conditions.
In
fact,
there
a
significant
gap
between
theory
and
metaheuristic
algorithms
have successful applications in practice, but their mathematical analysis lacks far behind. In
these
algorithms
work
well
and
exactly
under
what
conditions.
fact, thereapplications
is a significant
between
practice. Most
metaheuristic
algorithms
haveInsuccessful
in gap
practice,
buttheory
their and
mathematical
analysis
lacks far behind.
In
∗ In
Corresponding
author:
x.yang@mdx.ac.uk
fact, thereapplications
is a significant
gap
between
theory
and
practice. Most
metaheuristic
algorithms
have
successful
in
practice,
but
their
mathematical
analysis
lacks
far
behind.
In
∗
author: x.yang@mdx.ac.uk
haveCorresponding
successful applications
in practice, but their mathematical analysis lacks far behind. In
∗ Corresponding author: x.yang@mdx.ac.uk
1
∗ Corresponding author: x.yang@mdx.ac.uk
1
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
1
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.020

	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

fact, apart from a few limited results about the convergence and stability concerning particle
swarm optimization, genetic algorithms, simulated annealing and others [3, 4, 5, 6], many
algorithms do not have theoretical analysis. Therefore, we may know they can work well in
practice, but we rarely understand why they work and how to improve them with a good
understanding of their working mechanisms.
Among most recent, bio-inspired algorithms, flower pollination algorithm (FPA), or flower
algorithm (FA) for simplicity, has demonstrated very good efficiency in solving both single
objective optimization and multi-objective optimization problems [7, 9]. This algorithm mimics
the main characteristics of the pollination process of flowering plants, which leads to both local
and global search capabilities. As this algorithm is very new, there is no mathematical analysis
yet.
The main purpose of this paper is to analyze the flower algorithm mathematically and try
to prove its convergence properties. Therefore, this paper is organized as follows. In Section 2,
the flower algorithm will be outlined briefly, followed by some simplifications so as to be used
for the detailed mathematical analysis in Section 3 and Section 4. Then, in Section 5, some
numerical benchmarks will be used to demonstrate the main characteristics of the convergence
behaviour of the flower algorithm. Finally, conclusions will be drawn briefly in Section 6.

2

Flower Pollination Algorithm and Applications

2.1

Flower Algorithm

Flower pollination algorithm (FPA), or flower algorithm, was developed by Xin-She Yang in
2012 [7], inspired by the flow pollination process of flowering plants. The flower pollination
algorithm has then been extended to deal with multiobjective optimization [8, 9]. For simplicity
in describing the flower algorithm, the following four rules can be summarized as follows [7, 9]:
1. Biotic and cross-pollination can be considered as a process of global pollination, and
pollen-carrying pollinators move in a way which obeys Lévy flights (Rule 1).
2. For local pollination, abiotic and self-pollination can be used (Rule 2).
3. Pollinators such as insects can develop flower constancy, which is equivalent to a probability that is proportional to the similarity of two flowers involved (Rule 3).
4. The interaction or switching of local pollination and global pollination can be controlled
by a switch probability p ∈ [0, 1], with a slight bias towards local pollination (Rule 4).
In order to formulate the updating formulae in the FPA, we have to convert the above rules
into updating equations. For example, in the global pollination step, flower pollen gametes are
carried by pollinators such as insects, and pollen can travel over a long distance because insects
can often fly and travel in a much longer range. Therefore, Rule 1 and flower constancy can be
represented mathematically as
= xti + γL(λ)(g∗ − xti ),
xt+1
i

(1)

where xti is the pollen i or solution vector xi at iteration t, and g∗ is the current best solution
found among all solutions at the current generation/iteration. Here γ is the parameter that
corresponds to the strength of the pollination, which essentially is also a step size. Since insects
2

1355

1356	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

may move over a long distance with various distance steps, we can use a Lévy flight to mimic
this characteristic efficiently. That is, we draw L from a Lévy distribution [9, 10]
L∼

λΓ(λ) sin(πλ/2) 1
,
π
s1+λ

(s  s0 > 0).

(2)

Here Γ(λ) is the standard gamma function, and this distribution is valid for large steps s > 0.
Though in theory the critical size s0 should be sufficiently large, s0 = 0.1 or even s0 = 0.01
can be used in practice. Here, the notation ‘∼’ means to draw random numbers that obey the
distribution on the right-hand side.
For the local pollination, both Rule 2 and Rule 3 can be represented as
xt+1
= xti + U (xtj − xtk ),
i

(3)

where xtj and xtk are pollen from different flowers of the same plant species. This essentially
mimics the flower constancy in a limited neighborhood. Mathematically, if xtj and xtk comes
from the same species or selected from the same population, this equivalently becomes a local
random walk if we draw U from a uniform distribution in [0,1].
In principle, flower pollination activities can occur at all scales, both local and global. But
in reality, adjacent flower patches or flowers in the not-so-far-away neighborhood are more likely
to be pollinated by local flower pollen than those far away. In order to mimic this feature, we
can effectively use a switch probability (Rule 4) or proximity probability p to switch between
common global pollination to intensive local pollination. To start with, we can use a naive
value of p = 0.5 as an initially value. A parametric study showed that p = 0.8 may work better
for most applications. Preliminary studies suggest that the flower algorithm is very efficient,
and has been extended to multi-objective optimization [8, 9].
It is worth pointing out that parameter tuning may be needed in all algorithms, and ideally
a self-tuning framework can be used [11]. However, in our analysis of convergence, we assume
that the parameter values are fixed, though such parameter values can be within a range. In
addition, the representations of the solution vectors in the algorithm are simply vectors, not in
any complicated forms such as quaternion representations [12].

2.2

Applications

Since the development of the basic flower pollination algorithm (FPA), there are a wide range
of diverse applications of this algorithm with more than 500 research papers published so
far in the literature. For example, a brief review by Chiroma et al. identified some of the
earlier applications [17]. Therefore, it is not possible to review even a small fraction of the
latest developments. Here, we only highlight a few recent papers. For example, Dubey et
al. presented a hybrid FPA variant for solving multi-objective economic dispatch problems
[18, 19], while Alam et al. carried out photovoltaic parameter estimation using FPA [21].
Structure optimization has also been investigated using FPA [20], and feature selection has
been done using a clonal FPA by Sayed et al. [22]. A modified FPA for global optimization has
been proposed by Nabil [23].
In addition, Velamuri et al. used FPA to optimize economic load dispatch [24], while
Rodrigues et al. developed a binary flower pollination algorithm to do EEG identification.
Furthermore, Zhou et al. introduced an elite opposition-based FPA [26] and Mahdad et al.
presented an adaptive FPA to solve optimal power flow problems [27], while Abdelaziz et al.
solved placement problems in distribution systems using FPA [28]. New variants of FPA are
still emerging [29].
3

	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

Obviously, there are other important applications, but here we will focus on the mathematical analysis of the basic FPA. Therefore, we will start with the simplified version of FPA.

2.3

Simplified Flower Algorithm

As there are two branches in the updating formulas, the local search step only contributes
mainly to local refinements, while the main mobility or exploration is carried out by the global
search step. In order to simplify the analysis and also to emphasize the global search capability,
we now use a simplified version of the flower algorithm. That is, we use only the global branch
with a random number r ∈ [0, 1], compared with a discovery/switching probability p. Now we
have

(t+1)
(t)

← xi
if r > p,
 xi
(4)

 x(t+1) ← x(t) + γG if r < p,
i
i
where G(γ, g∗ , xti ) = L(λ)(g∗ − xti ).
As the flower pollination algorithm is a stochastic search algorithm, we can summarize the
simplified version as the following key steps:

Step 1. Randomly generate an initial population of n pollen agents at the positions, X =
{x01 , x02 , ..., x0n }, then evaluate their objective values so as to find the initial best gt0 .
Step 2. Update the new solutions/positions by
(t+1)

xi

(t)

= xi + γG.

(5)
(t+1)

if r > p.
Step 3. Draw a random number r from a uniform distribution [0, 1]. Update xi
Then, evaluate the objective values of the new solutions so as to find the new, global best
gt∗ at pseudo time/iteration t.
Step 4. If the stopping criterion is met, then gt∗ is the best global solution found so far. Otherwise,
return to Step 2 and continue.

3
3.1

Convergence Analysis
Gap Between Theory and Practice

There is a significant gap between theory and practice in bio-inspired computing. Natureinspired metaheuristic algorithms work almost magically in practice, but it is not well understood why these algorithms work.
There are three main methods for theoretical analysis of algorithms, and they are: complexity theory, dynamical systems and Markov chains. On the one hand, metaheuristic algorithms
tend to have low algorithm complexity, but they can solve highly complex problems. On the
other hand, the convergence analysis typically use dynamic systems and statistical methods as
well as Markov chains. For example, particle swarm optimization was analysed by Clerc and
Kennedy [3] using simple dynamic systems, while genetic algorithms was analysed intensively
in a few theoretical studies [13, 14]. However, for other bio-inspired algorithms, especially new
algorithms, theoretical understanding lacks behind, and thus there is a strong need for further
studies in this area.
4

1357

1358	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

3.2

Convergence Criteria in Stochastic Search

For an optimization problem < Ω, f >, a stochastic search algorithm A, the kth iteration will
produce a new solution
(6)
xk+1 = A(xk , ξ),
where Ω is the feasible solution space, and f is the objective function. Here, ξ is the visited
solutions of algorithm A during the iterative process.
In the Lebesgue measure space, the infimum of the search can be defined as




φ = inf t : ν[x ∈ Ωf (x) < t] > 0 ,
(7)

where ν[X] denotes the Lebesque measure on the set X. Here Eq.(7) represents the non-empty
set in the search space, and the region for optimal solutions can be defined as

 {x ∈ Ω|f (x) < φ + } if φ is finite,
(8)
R,M =

{x ∈ Ω|f (x) < −C}
if φ = −∞,

where  > 0 and C is a sufficiently large positive number. If any point in R,M is found during
the iteration, we can say the algorithm A has found the globally optimal solution or its best
approximation.
In order to analyze the convergence of an algorithm, let us first state the conditions for
convergence [4, 15]:
• Condition 1. If f (A(x, ξ)) ≤ f (x) and ξ ∈ Ω, then f (A(x, ξ)) ≤ f (ξ).
• Condition 2. For ∀B ∈ Ω subject to ν(B) > 0,
∞


(1 − uk (B)) = 0,

k=0

where uk (B) is the probability measure on B of kth iteration of the algorithm A.
It is worth pointing out that we focus on the minimization problems in our discussions.
Lemma 1. The global convergence of an algorithm. If f is measurable and the feasible
solution space Ω is a measurable subset on n , algorithm A satisfies the above two conditions
with the search sequence {xk }∞
k=0 , then
lim P (xk ∈ R,M ) = 1.

k→∞

(9)

That is, algorithm A will converge globally [4, 15]. Here P (xk ∈ R,M ) is the probability
measure of the kth solution on R,M at the kth iteration.

4
4.1

Markov Chains and Convergence Analysis
Definitions

Definition 1. The state and state space. The positions of pollen and its global best solution g in
the search history forms the states of flower pollen: y = (x, g), where x, g ∈ Ω and f (g) ≤ f (x)
(minimization problems). The set of all the possible states form the state space, denoted by
Y = {y = (x, g)|x, g ∈ Ω, f (g) ≤ f (x)}.

(10)
5

	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

Definition 2. The states and state space of the pollen group/population. The states of all n
solutions form the states of the group, denoted by q = (y1 , y2 , ..., yn ). All the states of all the
pollen form a state space for the group, denoted by
Q = {q = (y1 , y2 , ..., yn ), yi ∈ Y, 1 ≤ i ≤ n}.

(11)

Obviously, Q contains the historical global best solution g ∗ for the whole population and all
individual best solutions gi (1 ≤ i ≤ n) in history. In addition, the global best solution of the
whole population is the best among all gi , so that f (g ∗ ) = min(f (gi )), 1 ≤ i ≤ n.

4.2

Global Convergence of the Flower Algorithm

Definition 3. For the globally optimal solution gb for an optimization (or minimization)
problem < Ω, f >, the optimal state set is defined as R = {y = (x, g)|f (g) = f (gb ), y ∈ Y }.
Theorem 1. Given the position state sequence {y(t); t ≥ 0} in the flower algorithm, the state
set R of the optimal solutions corresponding to optimal solutions form a closed set on Y .
Proof: For ∀yi ∈ R, ∀yj ∈
/ R, the probability for Ty (yj ) = yi is
P (Ty (yj ) = yi ) = P (xj → xi )P (gj → gj )P (xj → xi )P (gj → gj ).
/ R, it holds that f (gi ) ≥ f (gj ) = f (gb ) = inf(f (a)), a ∈ Ω.
Since for ∀yi ∈ R and ∀yj ∈
It is straightforward to verify that P (gj → gj )P (gj → gi ) = 0, which leads to P (Ty (yj ) =
yi ) = 0. This condition implies that R is closed on Y .
Definition 4. For the globally optimal solution gb to an optimization problem < Ω, f >,
the optimal group state set can be defined as
H = {q = (y1 , y2 , ..., yn )|∃yi ∈ R, 1 ≤ i ≤ n}.

(12)

Theorem 2. Given the group state sequence {q(t); t ≥ 0} in the flower algorithm, the optimal
group state set H is closed on the group state space Q.
Proof: From the probability
P (Tq (qj ) = qi ) =

n


P (Ty (yjk ) = yik ),

(13)

k=1

for ∀qi ∈ H, ∀qj ∈ H and Tq (qj ) = qi , we know that ∀qi ∈ H and ∀qj ∈
/ H, in order to satisfy
Tq (qj ) = qi , there exists at least one position that will transfer from the inside of R to the
/ R, 1 ≤ k ≤ n. From the previous theorem,
outside of R. That is, ∃Ty (yjk ) = yik , yjk ∈ R, yik ∈
we know that R is closed on Y , which means that P (Ty (yjk ) = yik ) = 0. Therefore,
P (Tq (qj ) = qi ) =

n


P (Ty (yjk ) = yik ) = 0.

k=1

From the definition of a closed set, we can conclude that the optimal set H is also closed on Q.
Theorem 3. In the group state space Q for flower pollen, there does not exist a non-empty
closed set B so that B ∩ H = ∅.
6

1359

1360	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

Proof: Reductio ad absurdum. Assuming that there exists a closed set B so that B ∩ H = ∅
and that f (gj ) > f (gb ) for qi = (gb , gb , ..., gb ) ∈ H and ∀qj = (yj1 , yj2 , ..., yjn ) ∈ B, which
implies that
n

P (Ty (yjk ) = yik ).
(14)
P (Tq (qj ) = qi ) =
k=1

For each P (Ty (yj ) = yi ), it holds that P (Ty (yj ) = yi ) = P (xj → xj )P (gj → gj )P (xj →
xi )P (gj → gi ). Since P (gj → gi ) = 1, P (gj → gj ), P (xj → xj )P (xj → xi ) > 0, then
P (Ty (yj ) = yi ) = 0, implying that B is not closed, which contradicts the assumption. Therefore,
there exists no non-empty closed set outside H in Q.
With the above definitions and results, it is straightforward to prove the following lemma:
Lemma 1. Assuming that a Markov chain has a non-empty set C and there does not exist
a non-empty closed set D so that C ∩ D = ∅, then limn→∞ P (xn = j) = πj only if j ∈ C, and
/ C.
limn→∞ P (xn = j) = 0 only if j ∈
In addition, we have also have the following theorem:
Theorem 4. When the number of iteration approaches infinity, the group state sequence will
converge to the optimal state/solution set H.
Proof: Using the previous two theorems and Lemma 1, it is straightforward to prove this
theorem.
Now it is ready to state the global convergence theorem.
Theorem 5. The flower algorithm has guaranteed global convergence.
Proof: First, the iteration process in the flower algorithm always keeps/updates the current
the global best solution for the whole population, which ensures that it satisfies the the first
convergence condition as outlined in the earlier section. From the previous theorem, the group
state sequence will converge towards the optimal set after a sufficiently large number of iterations
or infinity. Therefore, the probability of not finding the globally optimal solution is 0, which
satisfies the second convergence condition. Consequently, the flower algorithm has guaranteed
global convergence towards its global optimality.

5

Global Convergence and Numerical Experiments

Many optimization algorithms are local search algorithms, though most metaheuristic algorithms tend to be suitable for global optimization. For multimodal objectives with many local
modes, many algorithms may be trapped in a local optimum. As we have shown that the flower
algorithm has good global convergence property, it can be particularly suitable for global optimization. In order to show that the flower algorithm indeed has good convergence for various
functions, we have chosen 5 different functions with diverse modes and properties.
The Ackley function [16] can be written as

 d
d
1 

1
1  2
f (x) = −20 exp − 
xi − exp
cos(2πxi ) + 20 + e,
5 d i=1
d i=1


(15)

which has the global minimum f∗ = 0 at (0, 0, ..., 0).
7

	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

Figure 1: Convergence of five test functions using the flower algorithm.
The simplest of De Jong’s functions is the so-called sphere function
f (x) =

n


x2i ,

i=1

−5.12 ≤ xi ≤ 5.12,

(16)

whose global minimum is obviously f∗ = 0 at (0, 0, ..., 0). This function is unimodal and convex.
Rosenbrock’s function
f (x) =


(xi − 1)2 + 100(xi+1 − x2i )2 ,

d−1 

i=1

(17)

whose global minimum f∗ = 0 occurs at x∗ = (1, 1, ..., 1) in the domain −5 ≤ xi ≤ 5 where
i = 1, 2, ..., d. In the 2D case, it is often written as
f (x, y) = (x − 1)2 + 100(y − x2 )2 ,

(18)

which is often referred to as the banana function.
Yang’s forest-like function
f (x) =

d

i=1

d

 

|xi | exp −
sin(x2i ) ,
i=1

−2π ≤ xi ≤ 2π,

(19)

has the global minimum f∗ = 0 at (0, 0, ..., 0), though the objective at this point is non-smooth.
Zakharov’s function
f (x) =

d

i=1

x2i +

d

ix 2
i

i=1

2

+

d

ix 4
i

i=1

2

,

(20)

has its global minimum f (x∗ ) = 0 at x∗ = (0, 0, ..., 0) in the domain −5 ≤ xi ≤ 5.
By using the flower algorithm with n = 20, λ = 1.5, p = 0.8 and a fixed number of iterations
t = 1000, we can find the global minima for all the above 5 functions for d = 4. The convergence
8

1361

1362	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

graphs for all these functions are summarized and shown in Fig. 1. As we can see, they all
converge quickly in an almost exponential manner, except for Rosenbrock’s function which has
a narrow valley. Once the search has gone through some part of the valley during iterations,
its convergence becomes exponentially with a higher slope, though the rate of convergence is
still lower compared with those for other functions.
Though the theoretical analysis proves that FPA will converge, it is worth pointing out the
the rate of convergence is still influenced by both the algorithmic structure and its parameter
settings. The convergence analysis does not provide much information about how quickly the
algorithm may converge for a given problem, and consequently parameter tuning may be needed
in practice to find the best parameter settings to give a higher convergence rate.

6

Conclusions

The flower pollination algorithm is an efficient optimization algorithm with a wide range of applications. We have provided the first results on the convergence analysis of this algorithm. By
using the Markov models, we have proved that the flower pollination algorithm has guaranteed
global convergence, which laid the theoretical foundation for this algorithm and showed why
it is efficient in applications. Then, we have used a set of five different functions with diverse
properties to show that FPA can indeed converge very quickly in practice.
It is worth pointing out that the current results are mainly for the standard flower pollination algorithm. It will be useful if further research can focus on the extension of the proposed
methodology to analyze the convergence of the full flower pollination algorithm and its variants. Ultimately, it can be expected that the proposed method can be used to analyze other
metaheuristic algorithms as well.

References
[1] Kennedy J. and Eberhart R.C., (1995). Particle swarm optimization, in: Proc. of IEEE International Conference on Neural Networks, Piscataway, NJ. pp. 1942–1948.
[2] Yang X.S., (2014). Cuckoo Search and Firefly Algorithm: Theory and Applications, Studies in
Computational Intelligence, vol. 516, Heidelberg: Springer.
[3] Clerc M. and Kennedy J., (2002). The particle swarm - explosion, stability, and convergence in a
multidimensional complex space, IEEE Trans. Evolutionary Computation, 6 (1), 58–73.
[4] Jiang M., Luo Y.P., and Yang S.Y., (2007). Stochastic convergence analysis and parameter selection of the standard particle swarm optimization algorithm, Information Processing Letters,
102(1), 8-16.
[5] Ren Z.H., Wang J., and Gao Y.L., (2011). The global convergence analysis of particle swarm
optimization algorithm based on Markov chain, Control Theory and Applications (in Chinese),
28(4), pp. 462–466.
[6] Yang X.S., (2011). Review of meta-heuristics and generalised evolutionary walk algorithm, Int. J.
Bio-Inspired Computation, 3(2), 77-84 (2011).
[7] Yang X.S., (2012). Flower pollination algorithm for global optimization, in: Unconventional Computation and Natural Computation, Lecture Notes in Computer Science, Vol. 7445, pp. 240-249.
[8] Yang X.S., Karamanoglu M. and He X.S., (2013). Multi-objective flower algorithm for optimization, Procedia Computer Science, 18(1), pp. 861-868.
[9] Yang X.S., Karamanoglu M. and He X.S., (2014). Flower pollination algorithm: A novel approach
for multiobjective optimization, Engineering Optimization, 46(9), 1222-1237.

9

	

Global Convergence Analysis ofXingshi
the Flower
Pollination
He,1354–1363
Yang, Karamanoglu, Zhao
He et al.
/ Procedia Algorithm
Computer Science 108C (2017)

[10] Pavlyukevich I., (2007). Lévy flights, non-local search and simulated annealing, J. Computational
Physics, 226(9), 1830-1844.
[11] Yang X.S., Deb S., Loomes M. and Karamanoglu M., (2013). A framework for self-tuning optimization algorithm, Neural Computing and Applications, 23(7-8), 2051-2057.
[12] Fister I., Yang X.S., Brest J., First Jr. I., (2013). Modified firefly algorithm using quaternion
representation, Expert Systems with Applications, 40(18), 7220-7230.
[13] Aytug H., Bhattacharrya S., Koehler G.J., (1996). A Markov chain analysis of genetic algorithms
with power of 2 cardinality alphabets, Euro. J. Operational Research, 96(1), 195–201.
[14] Villalobos-Arias M., Coello Coello C.A. and Hernández-Lerma O., (2005). Asymptotic convergence
of metaheuristics for multiobjective optimization problems, Soft Computing, 10(8) 1001-1005.
[15] Wang F., He X.S., Wang Y., Yang S.M., (2012). Markov model and convergence analysis of cuckoo
search algorithm, Computer Engineering, 38(11), 180-185.
[16] Ackley D.H., (1987). A Connectionist Machine for Genetic Hillclimbing, Kluwer Academic Publishers, (1987).
[17] Chiroma H., Shuib N.L.M., Muaz S.A., Abubakar A.I., Ila L.B., Maitama J.Z., (2015). A review
of the application of bio-inspired flower pollination algorithm, Procedia Computer Science, 62,
435-441 (2015).
[18] Dubey H.M., Pandit M., Panigrahi B.K., (2015). Hybrid flower pollination algorithm with timevarying fuzzy selection mechanism for wind integrated multi-objective dynamic economic dispatch,
Renewable Energy, 83, 188-202.
[19] Dubey H.M., Pandit M., Panigrahi B.K., (2015). A biologically inspired modified flower pollination algorithm for solving economic dispatch problems in modern power systems, Cognitive
Computation, 7(5), 594-608.
[20] Bekdas G., Nigdeli S.M., Yang X.S., (2015). Sizing optimization of truss structures using flower
pollination algorithm, Applied Soft Computing, 37, 322-331.
[21] Alam D.F., Yousri D.A., Eteiba M.B., (2015). Flower pollination algorithm based solar PV parameter estimation, Energy Conversion and Management, 101, 410-420.
[22] Sayed S.A., Nabil E., Badr A., (2016). A binary clonal flower pollination algorithm for feature
selection, Pattern Recognition Letters, 77(1), 21-27.
[23] Nabil E., (2016). A modified flower pollination algorithm for global optimization, Expert Systems
with Applications, 57(1), 192-203.
[24] Velamuri S., Sreejith S., Ponnambalam P., (2016). Static economic dispatch incorporating wind
farm using flower pollination algorithm, Perspectives in Science, 8, 260-262.
[25] Rodrigues D., Silva G.F.A., Papa J.P., Marana A.N., Yang X.S., (2016). EEG-based person identification through binary flower pollination algorithm, Expert Systems with Applications, 62(1),
81-90.
[26] Zhou Y.Q., Wang R., Luo Q.F., (2016). Elite opposition-based flower pollination algorithm, Neurocomputing, 188, 294-310 (2016).
[27] Mahdad B. and Srairi K., (2016). Security constrained optimal power flow solution using new
adaptive partitioning flower pollination algorithm, Applied Soft Computing, 46, 501-522.
[28] Abdelaziz A.Y., Ali E.S., Abd Elazim S.M., (2016). Flower pollination algorithm and loss sensitivity factors for optimal sizing and placement of capacitors in radial distribution systems, Int. J.
Electrical Power and Energy Systems, 78(1), 207-214.
[29] Salgotra R. and Singh U., (2017). Application of mutation operators to flower pollination algorithm, Expert Systems with Applications, 79(1), 112-129.

10

1363

