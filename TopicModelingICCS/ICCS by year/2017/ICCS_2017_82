Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header,
This Procedia
space is
reserved
for 108C
the Procedia
header,
Computer
Science
(2017) 1632–1641
This space is reserved for the Procedia header,
This space is reserved for the Procedia header,

do
do
do
do

not
not
not
not

use
use
use
use

it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Decentralized Dynamic Data-Driven Monitoring
Decentralized Dynamic Data-Driven Monitoring
Dispersion Processes
on Partitioned
Domains
Decentralized
Dynamic
Monitoring
Decentralized
Dynamic Data-Driven
Data-Driven
Monitoring
Dispersion Processes
on Partitioned
Domains
1,2∗
1,3
Dispersion
Processes
on
Partitioned
Domains
Tobias Ritter1,2∗
, Stefan Ulbrich
, and Oskar von
Stryk1,2
Dispersion
Processes
on 1,3
Partitioned
Domains
1,2

of
of
of
of

Tobias Ritter , Stefan Ulbrich , and Oskar von Stryk
1
1,2∗
1,3
Graduate
School
Computational
Tobias Ritter
, Stefan
Ulbrich
Oskar von Stryk1,2
1,2∗
1,3 , andEngineering
1
2, Stefan
Tobias Ritter
Ulbrich
, and
Oskar von Stryk1,2
Graduate
School
Computational
Engineering
Department
of Computer
Science
1
1

2
Department
of Computer Science
{ritter,stryk}@sim.tu-darmstadt.de
Graduate
School Computational
Engineering
Graduate
School Computational
Engineering
2 3 Department
{ritter,stryk}@sim.tu-darmstadt.de
Mathematics
of of
Computer
Science
2 Department
3
Department
of of
Computer
Science
Department
Mathematics
ulbrich@mathematik.tu-darmstadt.de
{ritter,stryk}@sim.tu-darmstadt.de
{ritter,stryk}@sim.tu-darmstadt.de
3
ulbrich@mathematik.tu-darmstadt.de
Technische
Universität Darmstadt, Germany
3 Department of Mathematics
Department
Mathematics
Technische
UniversitätofDarmstadt,
Germany
ulbrich@mathematik.tu-darmstadt.de
ulbrich@mathematik.tu-darmstadt.de
Technische Universität Darmstadt, Germany
Technische Universität Darmstadt, Germany

Abstract
Abstract
The application of mobile sensor-carrying vehicles for online estimating dynamic dispersion
The
application
of mobile
sensor-carrying
online estimating
Abstract
processes
is extremely
beneficial.
Based onvehicles
current for
estimates
that dependdynamic
on pastdispersion
measureAbstract
processes
is
extremely
beneficial.
Based
on
current
estimates
that
depend
past
measureThe application
of mobile
sensor-carrying
vehicles
for onlinetheestimating
dispersion
ments
and forecasts
obtained
from a discretized
PDE-model,
movementdynamic
ofonthe
vehicles
can
The
application
of mobile
sensor-carrying
vehicles
for onlinetheestimating
dynamic
dispersion
ments
and
forecasts
obtained
from
a
discretized
PDE-model,
movement
of
the
vehicles
can
processes
is resulting
extremelyinbeneficial.
Basedatonmore
current
estimates
that depend
on past
be
adapted
measurements
informative
locations.
In this
work,measurea novel
processes
is resulting
extremelyinbeneficial.
Basedatonmore
current
estimates
that depend
on past
measurebe
adapted
measurements
informative
locations.
In
this
work,
a
novel
ments and forecasts
obtained
from abased
discretized
PDE-model,ofthe
of the vehicles
can
decentralized
monitoring
approach
on a partitioning
themovement
spatial domain
into several
ments
and forecasts
obtained
from abased
discretized
PDE-model,ofthe
of the vehicles
can
decentralized
approach
a partitioning
themovement
spatial
into
be adapted resulting
in measurements
at
more
informative
locations.
this
work,
novel
subdomains
ismonitoring
proposed.
Each sensor
is on
assigned
to the subdomain
itInisdomain
located
in aseveral
and
is
be
adapted
resulting
in
measurements
at
more
informative
locations.
In
this
work,
a
novel
subdomains
sensor
assigned
to model
the subdomain
locatedinto
in several
andthis
is
decentralized
based
on
a partitioning
ofrelated
the spatial
only
requiredismonitoring
toproposed.
maintainapproach
aEach
process
and ismulti-vehicle
to it
itsisdomain
subdomain.
In
decentralized
monitoring
approach
based
on a partitioning
ofrelated
the spatial
domain
into several
only
required
to
maintain
a
process
and
multi-vehicle
model
to
its
subdomain.
In
this
subdomains
is proposed. requirements
Each sensor ofis related
assigned
to the subdomain
is located
in and
is
way,
vast communication
centralized
approachesit and
costly full
model
subdomains
is proposed. requirements
Each sensor ofis related
assigned
to the subdomain
it and
is located
in and
is
way,
vast communication
centralized
approaches
costly to
full
model
only
required
maintain
a process
and multi-vehicle
model
its subdomain.
this
simulations
aretoavoided
making
the presented
approach
morerelated
scalabletowith
respect
aIn
larger
only
required
to
maintain
a
process
and
multi-vehicle
model
related
to
its
subdomain.
In
this
simulations
are avoided making
the and
presented
approach
more
scalable
to
larger
way,
vastofcommunication
requirements
of
centralized
approaches
andrespect
costly
fulla model
number
sensor-carrying
vehicles
a related
larger
problem
domain.
Thewith
approach
consists
of a
way,
vastofcommunication
requirements
of
related
centralized
approaches
and costly
full model
number
sensor-carrying
vehicles
and
a
larger
problem
domain.
The
approach
consists
of a
simulations
are
avoided
making
the
presented
approach
more
scalable
with
respect
to
a
larger
new prediction and update method based on a domain decomposition method and a partitioned
simulations
are and
avoided
making
thebased
presented
approach
more scalablemethod
with respect
to a larger
new
prediction
update
method
on
a
domain
decomposition
and
a
partitioned
number
of
sensor-carrying
vehicles
and
a
larger
problem
domain.
The
approach
consists
of a
variant of the Ensemble Square Root Filter getting along with a minimum exchange of data
number
of the
sensor-carrying
vehicles
andFilter
a larger
problem
domain.
The approach
consists
of a
variant
of
Ensemble
Square
Root
getting
along
with
a
minimum
exchange
of
data
new
prediction
and
update
method
based
on
a
domain
decomposition
method
and
a
partitioned
between sensors on neighboring subdomains. Furthermore, a cooperative vehicle controller is
new
prediction
and
update
method
based
on
a
domain
decomposition
method
and
a
partitioned
between
neighboring
subdomains.
Furthermore,
adistribution
cooperative
vehicle
controller
is
variant
the
Square
Root adaption
Filter getting
with
a minimum
exchange
of data
applied of
insensors
suchEnsemble
aon
way
that
a dynamic
of thealong
sensor
becomes
possible.
variant
of the
Square
Root adaption
Filter getting
with
a minimum exchange
of data
applied
suchEnsemble
aon
way
that
a dynamic
of thealong
sensor
possible.
betweeninsensors
neighboring
subdomains.
Furthermore,
adistribution
cooperativebecomes
vehicle controller
is
Keywords:
Dynamic
data-driven
application
Domain decomposition,
State
estimation,
Ensembetween
on
neighboring
subdomains.
Furthermore,
a cooperative
vehicle
controller
is
©
2017 Thesensors
Authors.
Published
by Elsevier
B.V. system,
applied
in
such
a
way
that
a
dynamic
adaption
of
the
sensor
distribution
becomes
possible.
Keywords:
Dynamic
data-driven
application
system,
decomposition,
State
estimation,
EnsemPeer-review
scientific
committee
of
the
Conference
on
Computational
Science
ble
Square
Root
Filter,
Decentralized
estimation,
Vehicle
control
applied
inunder
suchresponsibility
a way
thatofathe
dynamic
adaption
ofDomain
theInternational
sensor
distribution
becomes
possible.
ble
Square Root
Filter,
Decentralized
estimation,
Vehicle
control
Keywords:
Dynamic
data-driven
application
system,
Domain
decomposition, State estimation, EnsemKeywords: Dynamic data-driven application system, Domain decomposition, State estimation, Ensemble Square Root Filter, Decentralized estimation, Vehicle control
ble
Root Filter, Decentralized estimation, Vehicle control
1 Square
Introduction

1 Estimating
Introduction
atmospheric or underwater pollutant dispersion, predicting the impacts of se1
Introduction
Estimating
atmospheric
or underwater
dispersion,
predicting
of severe
conditions,
detecting
wildfirespollutant
- all these
applications
require the
the impacts
monitoring
of
1 weather
Introduction

vere
weather
conditions,
detecting
wildfiresprocesses.
- all these
require
the impacts
monitoring
of
Estimating
atmospheric
or underwater
pollutant
dispersion,
predicting
the
of sedynamical
spatially
distributed
dispersion
A applications
typical goal
of the monitoring
process
Estimating
atmospheric
or underwater
pollutant dispersion,
predicting
the impactsprocess
of sedynamical
spatially
distributed
dispersion
processes.
A
typical
goal
of
the
monitoring
vere
conditions,
detecting
wildfires
- allestimate
these applications
require
the state.
monitoring
of
is
theweather
generation
of a repeatedly
updated
online
of the current
process
For this
vere
conditions,
detecting
wildfires
- allestimate
these applications
require
the state.
monitoring
of
is
theweather
generation
of adistributed
repeatedly
updated
online
of the goal
current
process
For
this
dynamical
spatially
dispersion
processes.
A typical
of the
monitoring
process
∗ The workspatially
dynamical
distributed
dispersion
processes.
A
typical
goal
of
the
monitoring
process
of Tobias
has beenupdated
partially supported
by the ’Excellence
Initiative’
of thestate.
German
Federal
is the
generation
of aRitter
repeatedly
online estimate
of the current
process
For
this
∗ The
and
State
Governments
and
the
Graduate
Schoolsupported
of Computational
Engineering
at TU
Darmstadt.
is the
generation
of aRitter
repeatedly
online
estimate
of
the current
process
For
this
work
of Tobias
has
beenupdated
partially
by the ’Excellence
Initiative’
of thestate.
German
Federal
and∗ The
Statework
Governments
and the
Graduate
Schoolsupported
of Computational
Engineering
at TU Darmstadt.
of Tobias Ritter
has
been partially
by the ’Excellence
Initiative’
of the German Federal
∗
of Tobias Ritter
has
been partially
by the ’Excellence
Initiative’
of the German Federal
and The
Statework
Governments
and the
Graduate
Schoolsupported
of Computational
Engineering
at TU Darmstadt.
1
and State Governments and the Graduate School of Computational Engineering at TU Darmstadt.

1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.033

1
1
1

	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

purpose, forecasts obtained from a suitable process model, usually comprising partial differential equations (PDEs), are repeatedly combined with measurements provided by a wireless
sensor network. Due to the development in the field of autonomous unmanned vehicles, mobile
sensor-carrying vehicles are more and more applied in this context [4]. They are not only capable of taking measurements at different locations, also, they are able to adapt their movement
online based on the current process estimates, leading to a concept called Dynamic Data-Driven
Application System (DDDAS) [2]. In this way, measurements can be obtained at locations that
are likely to provide a higher amount of information for process estimation.
A number of monitoring approaches have been proposed in the recent past concerning the
estimation part as well as the question of how to optimally control the vehicles [17, 20, 3, 15, 5].
These approaches are all based on a centralized sensor network. A central supercomputer
performs the model prediction, receives the measurements of the sensing vehicles, fuses forecast
and prediction, generates suitable control inputs, and sends the input back to the vehicles.
Such approaches demand for vast communication ranges, own a central point of failure, and
lack scalability with respect to larger problem domains and a larger number of vehicles.
For this reason, decentralized approaches, in which the central processing node is omitted,
with information being processed on-board the sensor platforms and being exchanged with
local neighbors, are a better choice. While several general propositions concerning decentralized
estimation and control strategies have been made [11, 12], the handling of PDE-based estimation
and its relation to vehicle control remain challenging in the considered applications. Discretized
PDE-models usually require the solution of high-dimensional problems, which is not at all
tailored for onboard computational units with limited computational power. One possible
alleviation for this challenge is provided by the application of reduced order models, where the
full order dynamics are projected onto a lower dimensional space. Approaches using reduced
order models have been applied in [14] and [16] and have shown good performance for relatively
small problem domains and a low number of sensor-carrying vehicles. However, if the spatial
dimension grows and the number of vehicles increases, further simplifications become necessary
to still meet the computational restrictions.
A suitable simplification, which further supports decentralization, is the application of domain decomposition. The global problem domain is decomposed into several subdomains and
each sensor vehicle is assigned to the subdomain it is located in. Every node only performs calculations concerning its own local subdomain and communicates with sensor nodes in neighboring
subdomains to resolve boundary issues. In this way, an enormous amount of computational time
can be saved.
If domain decomposition is applied, an adequate partitioned algorithm for simulation, data
assimilation, and vehicle control has to be designed. While there is rich literature on domain
decomposition regarding the simulation of dispersion processes [19], only few work has been
published in the field of data assimilation on partitioned domains. Most of the work in this
field focusses on sparse interconnections [10] between the models. On the other hand, problems
are considered that arise from the discretization of PDEs, for which an overlapping domain
decomposition method with Kalman Filter is applied [1]. However, the propagation of the
error variance from one subdomain to another, an important process in the context of adaptive
monitoring, is avoided.
In this work, a new scalable decentralized dynamic data-driven monitoring approach working
on partitioned domains is presented. The computational effort is significantly reduced since
every node only has to maintain a model of its own subdomain and only has to integrate
measurements stemming from its own and from adjacent subdomains. Furthermore, the applied
methods provide a reduced communication effort: Only low-dimensional vectors and matrices

2

1633

1634	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

have to be communicated. A decentralized partitioned prediction and update method based
on the Ensemble Square Root Filter is proposed that is capable of propagating neighboring
measurement information as well as uncertainty over the interfaces of the subdomains. It is
combined with a cooperative feedback controller that guides the sensing vehicles to informative
measurement locations within the subdomain and also permits the movement of a vehicle from
one subdomain to a neighboring subdomain where it might be more useful.

2

Centralized Monitoring Approach

The basic methods of the dynamic data-driven monitoring approach are introduced in this
section on the basis of a centralized approach presented in previous work [15, 5, 16]. Based
thereupon, the decentralized partitioned approach is developed in Section 3.

2.1

Forecast and Observation Model

The considered dispersion process is usually modeled by a PDE so that a model forecast
starting from time t = 0 can be obtained by solving the initial boundary value problem
∂x(r, t)
+ A(x(r, t)) = f in Ω
(1a)
∂t
x(r, t) = xD (r, t)
on ∂ΩD
(1b)
∂x(r, t)
= dN (r, t)
on ∂ΩN
(1c)
∂n
in Ω.
(1d)
x(r, 0) = x0 (r)
In this formulation, the scalar function x(r, t) represents the dispersed entity to be estimated
with spatial vector r ∈ Ω and time t ∈ R+
0.
The initial boundary value problem (1) can be solved by a suitable discretization method,
e.g. the finite element method. In this way, the solution x is approximated using a vector x ∈ Rn
containing the nodal values at the positions of the nodes of the underlying grid. Combined with
a time discretization method, one can express the forecast of the state vector from time tk to
time tk+1 as
xk+1 = M(xk ),
(2)
where M describes the model forecast operator. Compared to the evolution of the true state
vector xt , a model error is made in every forecast step due to model inaccuracies and external
perturbations.
The true state vector xt can be accessed in a pointwise manner with np direct measurements
of the dispersed entity
(3)
yk = Hk (xt )k + k ,
np ×n
k
with the sensor model matrix H ∈ R
depending on the location r of the measurements.
Furthermore, an observation error k is made, which is also assumed to be Gaussian with
known covariance Rk . The model error covariance matrix Rk is diagonal since it is additionally
assumed that observations are uncorrelated.

2.2

Data Assimilation

To combine the model forecast (denoted by the superscript (·)f in the following) and the
measurements of the sensor network, a suitable data assimilation method has to be used. It is
recommendable to not only consider the mean estimate x, but also its error covariance matrix
3

	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

P. The update (superscript (·)a ) step of the commonly used Kalman Filter reads
xa = xf + K(y − Hxf )
a

(4)

f

P = (I − KH)P ,
(5)
with the identity matrix I and the Kalman gain

−1
K = Pf (H)T HPf (H)T + R
,
(6)
which is chosen such that the determinant of the analysis error covariance matrix Pa is minimized. However, the Kalman Filter cannot be applied practically here since the error covariance
matrix P has to be forecasted along with the state estimate resulting in an expensive multiplication of high-dimensional matrices.
Instead, ensemble methods that represent the covariance P implicitely by a set of different
s
state vectors {x(i) }ni=1
with ns  n are used. In this way, expensive matrix multiplications can
be avoided and (2) is used to forecast every ensemble member x(i) to observation time. With
the use of the ensemble, the mean state estimate can be determined by the mean of the sample
ns f (i)
x
f
x̄ = i=1
,
(7)
ns
whereas the error covariance matrix is the sample covariance
ns
(xf (i) − x̄f )(xf (i) − x̄f )T
f
P = i=1
= Xf (Xf )T
(8)
ns − 1
with the n × ns matrix square root Xf of Pf . In the analysis, the updated ensemble mean
x̄a can be calculated from (7) and (8) using the Kalman update (4) and (5). As (8) should
also hold after the analysis, i.e. Pa = Xa (Xa )T , the analysis ensemble has to be determined
adequately. Inserting (8) in (5) yields
(9)
Xa = Xf T
with a transformation matrix T that depends on the ensemble square root method to be used.
In this work, the direct Ensemble Square Root Filter [18] is used so that the matrix T can be
obtained from
(10)
TTT = I − (Xf )T HT (HXf (Xf )T HT + R)−1 HXf .

2.3

Vehicle Control

To considerably improve the process estimate, the measurements should be taken at the
currently most informative measurement locations. Such profitable locations can, for example,
be characterized by a high error variance Pajj , j ∈ {1, . . . , n}. Thus, a suitable control law
should be designed for the vehicles so that measuring along the vehicles’ trajectories minimizes
the trace of the error covariance matrix Pa . Finding such optimal sensor trajectories would
require the solution of an optimal control problem subject to vehicle dynamics, the evolution of
the covariance matrix and further constraints. For the considered applications, this approach
is computationally much too expensive, so that an alternative sub-optimal control approach
seems to be more appropriate.
The approach consists of two parts. First, suitable measurement locations R = {r1 , ..., rnp }
are identified in a sequential procedure. For simplicity, the sequential procedure considers the
diagonal matrix diag{Pajj }nj=1 instead of the full matrix Pa . The location rmax belonging to
maxj∈{1,...,n} Pajj is chosen as the first target point r1 . Then, the error covariance Pa is updated
using (9) with a sensor model matrix H̃ representing measurements at all already chosen target
points R. In this way, clustering of target points can be avoided. The procedure is repeated
until the number of target points corresponds to the number of vehicles. This algorithm does
4

1635

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

4

Ω8

3.5

Ω9
Ω7

3

r2 (km)

1636	

Ω6

2.5

Ω5

2

Ω4

1.5

Ω3

1

Ω1

0.5

Ω2

0
0

0.5

1

1.5

2

2.5

3

3.5

4

r1 (km)

Figure 1: Exemplary domain decomposition
n s
not require the direct computation of the matrix Pa since Pajj = i=1
(Xaji )2 .
In the second step, a cooperative feedback vehicle controller based on a mixed logical dynamical formulation is applied in a model predictive control fashion to find the control inputs
such that the prescribed target points are reached [15].

3

Decentralized Monitoring Approach

To gain scalability and to avoid a central point of failure as well as vast communication
requirements, the aforementioned centralized procedure is transformed into a decentralized
monitoring approach. The idea is that every sensor platform computes its own model forecasts,
assimilates the data obtained from own and neighboring measurements and calculates its own
control inputs. However, the methods described before cannot be simply shifted to the processing unit on-board the vehicles. Onboard computational capabilities are limited and with
higher-dimensional state vectors as well as with larger number of vehicles, the solution of the
problem takes too much time. Hence, the idea is to apply domain decomposition and assign
every vehicle to a subdomain so that only local tasks have to be fulfilled.

3.1

Domain Decomposition and Assumptions

Applying domain decomposition means sudividing the domain Ω into nd subdomains Ωi :
Ω = ∪i∈{1,...,nd } Ωi . In the context of this work, a non-overlapping domain decomposition is
applied, i.e. Ωi ∩ Ωj = ∂Ωi ∩ ∂Ωj . An exemplary decomposition is depicted in Figure 1.
The sensors are assigned to the subdomain they are located in and perform local computations in this subdomain. Computations concerning model forecasts and vehicles located far
away can be avoided. If a subdomain is occupied by several vehicles, it is assumed that every node is able to communicate with all other nodes in the subdomain and that every node
maintains the same estimates. Furthermore, to provide convergence of the whole approach and
smoothness at the interfaces Γij = ∂Ωi ∩ Ωj between the subdomains, communication with all
the sensors in the neighboring subdomains Ni = {j ∈ D : i = j ∧ Γij = ∅} is possible.

3.2

Forecast

Instead of solving the global initial boundary value problem (1), only the local model defined
on the subdomain Ωi has to be maintained by every sensor node. As the area of the subdomain
Ωi is much smaller than the area of the original domain Ω, the resulting state vector xi has also
a much smaller dimension and the state forecast can be obtained in a much shorter amount
5

	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

of time. However, one has to account for the effects stemming from neighboring domains, i.e.
one has to specify the necessary conditions at the interfaces Γij , which determine which data
is exchanged between sensors on neighboring subdomains.
A popular method is the Dirichlet-Neumann method [19], in which a Dirichlet condition
is used at the interface in one subdomain and a Neumann condition at the same interface in
the neighboring subdomain. Thereby, the conditions mutually depend on the solution at the
interfaces of the neighboring subdomains. For reasons of efficiency, this interdependence can
be removed by applying the damped Adaptive Dirichlet-Neumann method [6]. In this case,
the interface boundaries are assumed to be either outflow boundaries Γout
ij or inflow boundaries
Γin
.
While
at
the
outflow
boundaries
a
homogeneous
Neumann
condition
is set, the Dirichlet
ij
condition at the inflow boundaries prescribes the solution of the neighboring subdomain in
upstream direction at the interface. In this way, the subproblems become decoupled in each
time step and the following problem has to be solved on every subdomain
∂x
+ A(x) = f
in Ωi
(11a)
∂t
(11b)
x = xj on Γin
ij
∂x
= 0 on Γout
(11c)
ij ,
∂n
where xj is the solution of the neighboring subdomain Ωj . Additionally, the boundary conditions (1b) and (1c) as well as the initial condition (1d) concerning the considered subdomain
have to be obeyed. For advection-dominiated problems, this solution provides a sufficiently
accurate approximation of the solution on the global domain.
The discretized global state vector computed with the partitioned approach is represented
Γ
d
and the vector xi ij containing all the boundary values at the
by the vector x̃ = col{xi }ni=1
interface Γij has to be sent to the neighboring subdomain Ωj in case of an outflow boundary
or received from that subdomain in case of an inflow boundary.

3.3

Data Assimilation

In the analysis, every sensor node computes the update on its own local model incorporating
all measurements of the own subdomain as well as all measurements from all neighboring
subdomains. It is assumed that measurements in all other subdomains are far away and do not
influence the analysis state in the local subdomain. Besides a gain in efficiency, the local data
assimilation method comes along with another huge benefit. The limited ensemble size can
produce spurious correlations between distant locations in Pf causing unphysical adjustments
of model states far away from the actual observation. To suppress these correlations, local
ensemble update methods that only consider observations in a vicinity of the respecting grid
point have been developed [13, 8]. Hence, the decentralized data assimilation method proposed
in this work is closely related to these methods as well as to the parallel ensemble filters proposed
in [9, 7], but is considered for a decentralized sensor structure.
Partitioning the domain also means partitioning the ensemble set. The global partitioned
d
error covariance square root can be defined as X̃ = col{Xi }ni=1
. Thus, each column of X̃
represents a state vector, which is continuous at the interfaces. The observation error covariance
d
d
and observation matrix H̃ = blockdiag{Hi }ni=1
are partitioned accordingly.
R̃ = diag{Ri }ni=1
To update the local ensemble mean, the local Kalman gain Ki is needed. Inserting (8) in
(6) yields
(12)
Ki = Xfi (X̃f )T H̃T (H̃X̃f (X̃f )T H̃T + R̃)−1 .
Introducing localization, only measurements in the local vicinity of domain Ωi are important for
6

1637

1638	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

the update, i.e. one only needs X̃fi c = col{Xi : i = j ∨ i ∈ Ni }, R̃ci = diag{Ri : i = j ∨ i ∈ Ni }
and H̃ci = diag{Hi : i = j ∨ i ∈ Ni }. The Kalman gain can then be computed as
Ki = Xfi YiT (Yi YiT + Rci )−1 ,
Hci Xfi c

(13)

col{Hi Xfi c

with the npi × ns matrix Yi =
=
: i = j ∨ i ∈ Ni }. This means that, to
compute the Kalman gain, only relatively small-sized entities have to be exchanged between
sensors on neighboring domains: The observation error covariance matrix Ri and the forecast
covariance at measurement locations Yi . Furthermore, to perform the update step (4), the
innovation d̃c = col{yi − Hi xi : i = j ∨ i ∈ N } is needed.
For the update of the ensemble, no further exchange is needed. The update equations (9)
and (10) only require Xci Hci , i.e. Yi , and Rci to perform the local update.

3.4

Vehicle Control

To compute the control input vector, the vehicle controller described in the previous section
is applied on-board every vehicle. In contrast to the centralized case, though, only the sensor
nodes that are located in the same subdomain are considered. Hence, the number of vehicles
and target points that have to be involved in the calculation is drastically reduced. Having
solved the optimization problem, every vehicle only applies the control input that has been
calculated for itself. The consideration of the other vehicles in the domain, however, leads to
cooperation in the task of getting to the target points.
The considered applications involve a dynamic process and so it might be ineffective to work
with a fixed assignment of sensors to subdomains. From a sensor’s perspective, a measurement
in an adjacent subdomain could be much more suitable than in the own subdomain, e.g. when
the uncertainty in the neighboring subdomain is extremely high, while the estimates in the own
subdomain are rather good. Therefore, an adaptive method in which, under specific conditions,
the sensors are allowed to move from one subdomain to another should be implemented.
Introducing another type of target point can solve this problem. From time to time, the
total subdomain variance Vi = trace(Pi ) is exchanged between neighbors. If the following
condition holds for subdomains Ωi and Ωj
Vj
Vi
<
,
(14)
npi − 1
npj + 1
a sensor of subdomain Ωi should move to subdomain Ωj . In that case, the last target point in
R is replaced by a target point on the boundary Γij . As soon as this target point is reached
by a vehicle from subdomain Ωi , it moves to subdomain Ωj and is supplied with the necessary
domain information (state ensemble, forecast model, etc.) by the sensor nodes of domain Ωj .

4

Results

To evaluate the proposed partitioned monitoring approach, a process governed by the linear
homogeneous advection-diffusion equation
∂x ∂(v1 x) ∂(v2 x)
∂2x
∂2x
+
+
− D1 2 − D2 2 = 0
(15)
∂t
∂r1
∂r2
∂r1
∂r2
is considered on the two-dimensional domain Ω = [0 km, 4 km] × [0 km, 4 km]. The scenario can
be interpreted as the two-dimensional aerial dispersion of a chemical pollutant with concentration x. Typical velocity parameters for gentle wind are chosen (v1 = 3 ms−1 , v2 = 2 ms−1 ,
D1 = D2 = 20 m2 s−1 ) so that the process is advection-dominated as demanded. Besides the
model error, which is accounted for by slight perturbations of the velocity, the true initial concentration is unknown. Thus, the estimation process starts with a rather bad initial estimate,
7

	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

chosen in this scenario to be uniformly zero, x0 (r) ≡ 0. The corresponding error covariance is
formed by a Gaussian kernel function, whose center is located at (1.6 km, 1.5 km)T .
The global domain comprises approximately 10,000 nodes and is decomposed into nine
subdomains according to Figure 1. To generate measurements and to assess the performance
of the proposed monitoring approach, the true solution starting from the true initial conditions
is also simulated (twin experiment). Two sensors are initially located in every subdomain.
At first, the partitioned prediction and update procedure is briefly evaluated by omitting the
vehicle control and considering a static sensor network instead. While the simplified forecast
with the assumption of a homogeneous Neumann boundary condition at the interfaces between
subdomains inevitably leads to an additional model error, even for advection-dominated flows,
no additional error compared to its centralized counterpart is introduced by the update step
if there are no correlations between non-adjacent subdomains. Figure 2 shows the root mean
square error between true state and estimate over time – once computed on the full domain
and once using the new partitioned approach. The deviation in error between both approaches
is small and does, due to repeated measurement updates, hardly grow over time. Thus, the
prediction and update scheme can be applied without compunction in the considered scenario.
Now, the sensors are mounted onto vehicles, modeled with double-integrator dynamics,
enabling the dynamic data-driven monitoring approach proposed in this work.
The resulting dynamic data-driven estimate at t = 100 s is depicted in Figure 4(a). Compared to the true solution in Figure 4(b), deviations can be only noticed at the sides of the
concentration peaks and in the magnitude of them. In total, the monitoring approach succeeds
in providing a rather good qualitative estimate after a rather short amount of time.
The good performance is also reflected in the evolution of the root mean square error over
time plotted in Figure 2. With the first measurements, the estimate is already strongly improved. The next phase mainly consists of the redistribution of the vehicles so that the estimate
temporarily gets worse, but the adaptation leads to a further decrease in error in the following.
To compare these results, the estimation error of the original centralized approach described in
Section 2 is also evaluated. The vehicles are not restricted to stay on a local domain and follow
a global control law guiding them to more informative locations. Thus, the error obtained with
this approach is smaller than with the partitioned approach, especially when the decentralized
approach is mainly occupied with redistributing the vehicles. However, the results obtained
with the partitioned approach are not much worse, as soon as the sensors are distributed over
the subdomains in a reasonable way. Taking into account that the centralized approach requires
much more computation time due to the larger problem dimension and the larger multi-vehicle
system to be considered, further revaluates the results obtained with the partitioned approach.
For the considered application and decomposition, the speedup of the proposed approach regarding state forecast amounts to approximately 10, whereas for the speedup regarding vehicle
control, an even higher gain can be achieved. Moreover, compared to the solution obtained with
the static sensor networks discussed before, the dynamic data-driven solution is significantly
better.
The adaptive redistribution ability of the vehicles is shown by Figure 3, depicting a histogram
of the number of sensors on every domain at t = 100 s. As the main concentration field is located
in the lower and middle part of the domain, a lot of sensors in the top part are hardly needed
but are strongly required in the lower part. Thus, adapting to the current uncertainty, sensors
move from the top part to the subdomains located in the bottom and middle part of the domain.
At t = 100 s, the subdomains at the top and the small subdomain Ω1 only contain one sensor
unit, while the subdomains in the lower and middle part contain two or more.

8

1639

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

0.14
0.12
0.1
0.08
0.06
0.04

5

Number of sensors np

Partitioned Mobile
Full Mobile
Partitioned Static
Full Static

0.16

root mean square error

1640	

4

3

2

1

0.02
0

0

20

40

60

80

100

time t (s)

1

2

3

4

5

6

7

8

9

Subdomain Ωi

Figure 2: Root mean square error over time
for partitioned and full monitoring with static
and mobile sensor platforms

Figure 3: Histogram showing the number of
sensors per subdomain at t = 100 s

(a) Estimated concentration

(b) True concentration

Figure 4: Concentration field at t = 100 s

5

Conclusion

A new decentralized dynamic data-driven strategy for online estimating dispersion processes
has been proposed. To attain a strategy that is computationally tractable, even when performed
on-board the sensor platforms, domain decomposition is applied effecting every sensor node
only to perform calculations concerning the local process and sensor model. A decentralized
prediction and update method based on damped Adaptive Dirichlet-Neumann and a partitioned
variant of the Ensemble Square Root Filter requiring only minimum communication with sensors
on neighboring domains ensures global convergence. The applied vehicle controller not only
guides the vehicles cooperatively to interesting measurement locations within the subdomains
but also allows a dynamic redistribution concerning exchanges of vehicles between subdomains.
Compared to its centralized counterpart, the estimation results obtained with the new approach
rank only a little behind, whereas the computation time can be reduced significantly. For a
further reduction of computation time in the future, the additional application of reduced order
models could be helpful in context of larger problem dimensions and a more heuristic controller
would help in context of a larger number of vehicles.
9

	

Monitoring on Partitioned Domains
Ritter,
Ulbrich, and von Stryk
Tobias Ritter et al. / Procedia Computer Science 108C (2017)
1632–1641

References
[1] G. Battistelli, L. Chisci, N. Forti, G. Pelosi, and S. Selleri. Distributed finite element kalman filter.
In Proceedings of the 2015 European Control Conference (ECC), pages 3695–3700. IEEE, 2015.
[2] F. Darema. Dynamic data driven applications systems: A new paradigm for application simulations and measurements. In International Conference on Computational Science (ICCS), pages
662–669. Springer, 2004.
[3] M. Demetriou and D. Ucinski. State estimation of spatially distributed processes using mobile
sensing agents. In Proceedings of the American Control Conference, pages 1770–1776, 2011.
[4] M. Dunbabin and L. Marques. Robots for environmental monitoring: Significant advancements
and applications. IEEE Robotics Automation Magazine, 19(1):24–39, 2012.
[5] J. Euler, T. Ritter, S. Ulbrich, and O. von Stryk. Centralized ensemble-based trajectory planning
of cooperating sensors for estimating atmospheric dispersion processes. In Dynamic Data-Driven
Environmental Systems Science, number 8964 in Lecture Notes in Computer Science, pages 322–
333. Springer International Publishing, 2015.
[6] F. Gastaldi, L. Gastaldi, and A. Quarteroni. Adn and arn domain decomposition methods for
advection-diffusion equations. In Proceedings of the 9th International Conference on Domain
Decompositon Methods in Science and Engineering. Wiley & Sons, 1997.
[7] P. L. Houtekamer and H. L. Mitchell. A sequential ensemble Kalman filter for atmospheric data
assimilation. Monthly Weather Review, 129(1):123–137, 2001.
[8] B. R. Hunt, E. J. Kostelich, and I. Szunyogh. Efficient data assimilation for spatiotemporal chaos:
A local ensemble transform Kalman filter. Physica D: Nonlinear Phenomena, 230(1-2):112–126,
2007.
[9] C. L. Keppenne. Data assimilation into a primitive-equation model with a parallel ensemble
kalman filter. Monthly Weather Review, 128(6):1971–1981, 2000.
[10] U. A. Khan and J. M. Moura. Distributing the kalman filter for large-scale systems. Signal
Processing, IEEE Transactions on, 56(10):4919–4935, 2008.
[11] J. Manyika and H. Durrant-Whyte. Data Fusion and Sensor Management: a decentralized
information-theoretic approach. New York: Ellis Horwood, 1995.
[12] A. Mutambara. Decentralized estimation and control for multisensor systems. CRC press, 1998.
[13] E. Ott, B. R. Hunt, I. Szunyogh, A. V. Zimin, E. J. Kostelich, M. Corazza, E. Kalnay, D. Patil,
and J. A. Yorke. A local ensemble kalman filter for atmospheric data assimilation. Tellus A,
56(5):415–428, 2004.
[14] L. Peng, M. Silic, and K. Mohseni. A DDDAS plume monitoring system with reduced Kalman
Filter. In International Conference on Computational Science (ICCS), volume 51, pages 2533–
2542. Elsevier, 2015.
[15] T. Ritter, J. Euler, S. Ulbrich, and O. von Stryk. Adaptive observation strategy for dispersion
process estimation using cooperating mobile sensors. In Proceedings of the 19th IFAC World
Congress, pages 5302 – 5308, 2014.
[16] T. Ritter, J. Euler, S. Ulbrich, and O. von Stryk. Decentralized dynamic data-driven monitoring
of atmospheric dispersion processes. Procedia Computer Science, 80:919–930, 2016.
[17] Z. Song, Y. Chen, J. Liang, and D. Ucinski. Optimal mobile sensor motion planning under
nonholonomic constraints for parameter estimation of distributed systems. International Journal
of Intelligent Systems Technologies and Applications, 3(3/4):277–295, 2007.
[18] M. K. Tippett, J. L. Anderson, C. H. Bishop, T. M. Hamill, and J. S. Whitaker. Ensemble square
root filters. Monthly Weather Review, 131(7):1485–1490, 2003.
[19] A. Toselli and O. Widlund. Domain decomposition methods: algorithms and theory, volume 34.
Springer, 2005.
[20] D. Zhang, C. Colburn, and T. Bewley. Estimation and adaptive observation of environmental
plumes. In Proceedings of the American Control Conference, pages 4281–4286, 2011.

10

1641

