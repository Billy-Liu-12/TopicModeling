Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header, do not use it
This space
is reserved
for the
Procedia
header, do not use it
Procedia
Computer Science
108C
(2017) 38–47
This space is reserved for the Procedia header, do not use it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Mining
Mining Host
Host Behavior
Behavior Patterns
Patterns From
From Massive
Massive Network
Network and
and
Security
Logs
Mining Host Behavior Patterns
From Massive Network and
Security Logs
1,2,3
Jing Ya1,2,3
, Tingwen Liu1,2,3
, QuangangLogs
Li1,2,3
Security
1,2,3
1,2,3 , Jinqiao Shi1,2,3 , Haoliang
Jing Ya1,2,3 , Tingwen Liu
, Jinqiao
, Haoliang
1,2,3 , Quangang
1,2,3 Li
1,2,3 Shi
Zhang1,2,3 , Pin Lv1,2,3 , and Li Guo1,2,3
Zhang , Pin Lv , and Li Guo
Jing
Ya , Tingwen Liu1,2,3 , Quangang Li1,2,3 , Jinqiao Shi1,2,3 , Haoliang
1
Institute
of
Information
Engineering, Chinese
Beijing, China
1,2,3 Academy of Sciences,
1,2,3
, Pin Lv
, and
Li Guo
Zhang1,2,3
21 Institute of Information
Engineering,
Academy
ofofSciences,
School of Cyber Security,
University
ofChinese
Chinese
Academy
Sciences,Beijing,
Beijing,China
China
1,2,3

3 2 School of Cyber Security, University of Chinese Academy of Sciences, Beijing, China
National Engineering Laboratory for Information Security Technologies, Beijing, China
3 1 Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China

National
Engineering
Laboratoryshijinqiao,
for Information
Security Technologies,
Beijing, China
{yajing,
liutingwen,
liquangang,
zhanghaoliang,
lvpin, guoli}@iie.ac.cn
2
School
of Cyber Security,
University
of Chinese
Academy of Sciences,
China
{yajing,
liutingwen,
liquangang,
shijinqiao,
zhanghaoliang,
lvpin, Beijing,
guoli}@iie.ac.cn
3
National Engineering Laboratory for Information Security Technologies, Beijing, China
{yajing, liutingwen, liquangang, shijinqiao, zhanghaoliang, lvpin, guoli}@iie.ac.cn

Abstract
Abstract
Mining host behavior patterns from massive logs plays an important and crucial role in anomaMining
host behavior
patterns from
logsnetworks.
plays an important
role ina anomalies
diagnosing
and management
for massive
large-scale
Almost all and
priorcrucial
work gives
macroAbstract
lies
diagnosing
and
management
for
large-scale
networks.
Almost
all
prior
work
gives
a macroscopic
link
analysis
of
network
events,
but
fails
to
microscopically
analyze
the
evolution
of
Mining
hostanalysis
behaviorofpatterns
from
massive
plays
an important and
crucial
role
in anomascopic
link
network
events,
but logs
failsIn
tothis
microscopically
analyze
the
evolution
of
behavior
patterns
for
each
host
in
networks.
paper,
we
propose
a
novel
approach,
lies
diagnosing
and for
management
for
large-scale
networks.
Almost
allpropose
prior work
givesapproach,
a macrobehavior
patterns
each
host
in
networks.
In
this
paper,
we
a
novel
namely
Log analysis
Mining for
Patternbut
(LogM4BP),
to address the limitations
prior work.
scopic
link
of Behavior
network events,
fails to microscopically
analyze theof
evolution
of
namely
Logbuilds
Mining
for
Behavior
Pattern
(LogM4BP),
tohost’s
address
the limitations
of
prior work.
LogM4BP
a
statistical
model
that
captures
each
network
behavior
patterns
with
behavior
patterns
for
each
host
in
networks.
In
this
paper,
we
propose
a
novel
approach,
LogM4BP
buildsmatrix
a statistical
model algorithm,
that captures
host’s
network
behavior patterns
with
the
nonnegative
factorization
andeach
finally
improve
thelimitations
interpretation
andwork.
comnamely
Log Mining
for Behavior
Pattern
(LogM4BP),
to address
the
of prior
the
nonnegative
matrix
factorization
algorithm,
and
finally
improve
the
interpretation
and
comparability
of
behavior
patterns,
and reduce
the complexity
of analysis.
The workpatterns
is evaluated
LogM4BP
builds
a statistical
model
that captures
each host’s
network behavior
with
parability
of
behavior
patterns,
andareduce
the complexity
of analysis.
The work
is show
evaluated
on
a
public
data
set
captured
from
big
marketing
company.
Experimental
results
that
the
nonnegative
matrix
factorization
algorithm,
and
finally
improve
the
interpretation
and
comon
a public
datanetwork
set captured
from
a big marketing
company.
Experimental
results show
that
it
can
describe
behavior
patterns
clearly
and
accurately,
and
the
significant
evolution
parability
of behavior
patterns,
and
reduceclearly
the complexity
of analysis.
The
work is evaluated
it
can
describe
network
behavior
patterns
and
accurately,
and
the
significant
evolution
of
behavior
can be mapped
events
in real Experimental
world intuitively.
on
a public patterns
data set captured
from ato
biganomaly
marketing
company.
results show that
of behavior
patterns
can be mapped
to
anomaly
events
in real world intuitively.
it
can
describe
network
behavior
patterns
clearly
and
accurately,
and
the
significant
evolution
Keywords:
BehaviorPublished
Pattern,byNetwork
Log Mining
©
2017 The Authors.
Elsevier Management,
B.V.
Keywords:
Behavior
Pattern,
Management,
Log
Mining
Peer-review
under
responsibility
ofNetwork
the scientific
the International
Conference
on Computational Science
of behavior
patterns
can be
mapped
tocommittee
anomalyofevents
in real world
intuitively.
Keywords: Behavior Pattern, Network Management, Log Mining

1 Introduction
1 Introduction
Network and security logs, such as network health data and network flow data, carry impor1
Introduction
Network
and security
logs, such network
as network
health (e.g.
data port
and network
flow of
data,
carryattacks).
important information
for diagnosing
anomalies
scans, denial
service

tant
information
forusually
diagnosing
network anomalies (e.g.
port scans,
denial ofmassive
service logs.
attacks).
Network
managers
on analyzing
EnNetwork
and security
logs, achieve
such as troubleshooting
network health depending
data and network
flow data,
carry
imporNetwork
managers
usually
achieve
troubleshooting
depending
on
analyzing
massive
logs.
Enterprise
networks
usually
contain
various
network
devices
and
security
services
(e.g.
firewalls,
tant
information
for
diagnosing
network
anomalies
(e.g. port
scans,
denial
of service
attacks).
terprise
networks
usually
contain
various
network
devices
and
security
services
(e.g.
firewalls,
routers
and
networkusually
monitoring
programs)
from different
vendors.
Thus, large
amounts
of logs
Network
managers
achieve
troubleshooting
depending
on analyzing
massive
logs.
Enrouters
and
network
monitoring
programs)
from
different
vendors.
Thus,
large
amounts
of root
logs
that
record
hosts’
behaviors
are
generated
every
day,
which
can
be
used
to
analyze
the
terprise
networks
usually
contain
various
network
devices
and
security
services
(e.g.
firewalls,
that
record
hosts’anomalies.
behaviors are generated every day, which can be used to analyze the root
cause
ofand
network
routers
network
monitoring programs) from different vendors. Thus, large amounts of logs
cause
of
network
anomalies.
analyzing
network
securityevery
logs day,
becomes
extremely
bethatHowever,
record
hosts’
behaviors
are and
generated
whichan
be usedmaddening
to analyze task,
the root
However,
analyzing
network
and
securitylogs
logsare
becomes
ancan
extremely
maddening
task,
because
of
the
following
reasons.
First,
massive
generated
every
day,
due
to
the
increasing
cause
of the
network
anomalies.
cause
of
following
reasons.
First,
massive
logs
are
generated
every
day,
due
to
the
increasing
number
of network
devices
and security
serviceslogs
deployed
andan
the increasingmaddening
network bandwidth.
However,
analyzing
network
and security
becomes
task, benumber
of network
devices
and security
services deployed
and theextremely
increasing network bandwidth.
cause of the following reasons. First, massive logs are generated every day, due to the increasing
1
number of network devices and security services deployed and the increasing network bandwidth.
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.072

1

	

Mining Host Behavior Patterns From
Security
Logs
Ya, Tingwen Liu et al.
JingMassive
Ya et al. /Network
Procedia and
Computer
Science
108C (2017)Jing
38–47

Second, real-world logs are often multivariate and evolve over time. Third, logs that record the
same hosts’ behaviors may span across multiple network layers, services and protocols. Last
but not the least, network anomalies usually consist of several subtle behaviors scattered in
large amounts of normal logs.
A key step of analyzing such massive and complex logs is to mine the correlation of network behaviors, namely behavior patterns in this paper. Much work have been proposed to
address this maddening step [13] [14]. They give a macroscopic analysis to describe network
event patterns, for example, using tensor (sourceIP, destinationIP, Timestamp). However, they
fail to make a microscopic analysis to get the evolution of behavior patterns for each host in
networks. We argue that making a microscopic analysis for each host is very important and
crucial in understanding the root cause and impacts of network anomalies, because it provides
the evolution trend and comparability of behavior patterns and can quickly locate anomalies.
To address this problem, we present an approach named Log Mining for Behavior Patterns
(LogM4BP) that can accurately learn and identify the evolution of network behavior patterns
for each host from massive and heterogeneous network and security logs. The main idea is
to mine every host’s behavior patterns in each time window with the help of behaviors of
all hosts in a long period of time. We first calculate the feature-pattern matrix W from the
massive logs of all hosts, where in W each pattern is a set of features (e.g. CPU utilization)
extracted from logs. Then we factorize feature-host matrix Ak in the k-th time window into
the multiplication of the feature-pattern matrix W and a pattern-host matrix H k . Matrix H k
represents the patterns of each host in the k-th time window. After calculating all pattern-host
matrixes of each time window, we can observe the evolution of each host’s network behavior
patterns through the measure of dispersion by using the expected value and standard deviation
of {H k |k ∈ [1, t]}.
We evaluate the LogM4BP approach on a public data set labelled with the ground truth.
The data set is captured from a big marketing company and provided by VAST 2013 Mini
Challenge 3. Experimental results show that our work can describe network behavior patterns
clearly and accurately, and detect all the labelled and confirmed anomaly events.
The rest of the paper is organized as follows. Section 2 summarizes the related work. We
give a detailed description of our behavior mining approach LogM4BP in Section 3. Implementation details and experimental results for this work are shown in Section 4. Finally, Section 5
concludes the paper’s work.

2

Related Work

There are many commercial and open-source network management systems (NMSs) for recent
complicated network security analytics and management [1, 2, 3]. They visualize various metrics
of network security elements, and raise alarms based on predefined rules. However, these rules
often indicate obvious and severe network statuses based on domain knowledge, and cannot
describe subtle behavior patterns.
A lot of research work has been proposed in the areas of network anomalies diagnosis and
localization by analyzing various network and security logs, especially using machine learning.
Yamanishi et al. [22] proposed a technique to detect system failure from server syslog using a
mixture of Hidden Markov Models. Bahl et al. [8] developed an system named Sherlock, which
learns a dependency graph between multilevel resources in enterprise networks. G-RCA [12]
identified the root cause of the problem by matching a current event to a predefined decision
tree, which represents the causal relationships of the network events. Orion [21] extracted
the causal relationship among application traffic by analyzing each traffic delay. Meta [19]
2

39

Ak

Ak

features

Mining Host Behavior Patterns From
Security
Logs
JingMassive
Ya et al. /Network
Procedia and
Computer
Science
108C (2017)Jing
38–47Ya, Tingwen Liu et al.

features

40	

1
2
3
...
n

1
·
·
·
·
·

hosts
2
·
·
·
·
·

... m
· ·
· ·
· ·
· ·
· ·

time-windows

Figure 1: Visualized image of features tensor. The k-th slice Ak is the feature matrix at the
k-th time-window. It reflects the network behavior features during this time window.

and TAR [20] are both fault localization systems, which automatically learn fault events from
the event data sets and find the root causes of faults rapidly by indexing the network events.
NetMedic [15] monitored acts of applications and conducts detailed diagnoses of fault events
occurring in enterprise. SyslogDigest [18] constructed digest information from router syslogs
by extracting the templates of logs and grouping them within relevant routers.
Nonnegative Matrix Factorization (NMF) is wildly-used in analyzing logs for its non-negative
constraint and simpleness. Allan et al. [11] detected anomaly in Aviation Safety Reporting
System (ASRS) documents by NMF. Fujino et al. [6] presented an unsupervised approach to
extract API call topics from a large corpus of API calls with the help of NMF. Kimura et al. [13]
developed a method named Log Tensor Factorization (LTF) to build a statistical model that
captures spatial-temporal patterns of log messages. The patterns provide useful insights into
understanding the impacts and root cause of hidden network events. However, they did not
have a standard before the factorization, the meaning of template groups generated by LTF
cannot be regarded accurately .
Different from prior work on NMF, our work mines every host’s behavior patterns with the
network logs of all hosts in a long period of time, and detects anomalies with the evolutions of
the behavior patterns. We first calculate the average feature matrix which reflects the measure
of the behavior features of the hosts in network environment Then, we factorize the average
feature matrix using NMF and obtain the global feature-pattern matrix in which each pattern
has a specific meaning decided by features correlated with it. At last, we use the pattern
matrix to capture the behavior patterns for the hosts, and observe anomalies in the evaluation
of patterns.

3

Log Mining for Behavior Pattern

This section presents the technical details of our LogM4BP approach. We regard network and
security logs as a rank-3 tensor X (features, hosts, and time-windows), as shown in Fig. 1.
Features represent network status (e.g. CPU utilization) extracted from logs. LogM4BP takes
the feature tensor X as inputs and automatically outputs the evolution of network behavior
patterns for each host. Based on observing the evolution of behavior patterns, we can detect
anomalies and find suspicious hosts in networks.
LogM4BP consists of three major steps, namely Average Feature Matrix Calculation, Global
Feature-Pattern Matrix Capturing, and Host Behavior Pattern Mining, as shown in Fig. 2. We
describe each step in detail in the following subsections.
3

features

1

1
2
3
...
...
n

Ak ...

2
·
·
·
·
·

t:time-windows
3

Host Behavior
Pattern Mining

1
2
3
...
...
n

2
·
·
·
·
·

A

A

Global FeaturePattern Matrix
Capturing

... m
· ·
· ·
· ·
· ·
· ·

2

=

1
2
3
...
...
n

patterns
2 ...
· ·
· ·
· ·
· ·
· ·

W

r
·
·
·
·
·

×

1
2
...
r

2
·
·
·

hosts
3 ... m
· · ·
· · ·
· · ·

H

=

1
2
3
...
...
n

2
·
·
·
·
·

...
·
·
·
·
·

W

r
·
·
·
·
·

×

1
2
...
r

2
·
·
·

hosts
3 ... m
· · ·
· · ·
· · ·
k

H

p:patterns

patterns
m
·
·
·
·
·

patterns

hosts
3 4
· ·
· ·
· ·
· ·
· ·
k

features

features

X

hosts
3
·
·
·
·
·

features

Average Feature
Matrix Calculation

patterns

JingMassive
Ya et al. /Network
Procedia and
Computer
Science
108C (2017)Jing
38–47
Mining Host Behavior Patterns From
Security
Logs
Ya, Tingwen Liu et al.

n:features

	

t:time-windows

P

Figure 2: Architecture of LogM4BP

3.1

Average Feature Matrix Calculating

The input of this step is the given feature tensor X of dimensions m × n × t, where m is the
number of hosts in the network, n is the number of features extracted from network logs, and
t is the number of time windows the logs span. The output is the average feature matrix A.
The average feature matrix measures the behaviors of all the hosts in network, which reflects
the average distribution of behavior features. For host j, the measure value on behavior feature
i is the average of all non-zero values in all time windows, which is defined as follows:
t

Aij = t

k=1

k=1

Akij

I(Akij )

(1)

where Akij is the value of feature i for host j in the k-th time window, and I(x) is an indicator
function which is defined as:

0 x=0
I(x) =
(2)
1 x = 0

3.2

Global Feature-Pattern Matrix Capturing

This step takes the average feature matrix generated above as input and aims at capturing the
global feature-pattern matrix, which groups several related features into multiple patterns and
represents network behavior patterns in matrix.
In this paper, a pattern is defined as a set of behavior features that tend to co-occur at a
host when a single event happens in network. It can be regarded as a linear combination of
these related features. The intrinsic meaning of the pattern is decided by the features that have
large weights in global feature-pattern matrix.
Global feature-pattern matrix can be used to reduce the dimensionality of the logs, and to
find the relationship between different behavior features. We use the NMF algorithm to solve
4

41

42	

JingMassive
Ya et al. /Network
Procedia and
Computer
Science
108C (2017)Jing
38–47Ya, Tingwen Liu et al.
Mining Host Behavior Patterns From
Security
Logs

this problem. NMF factorizes a matrix A into two matrices W and H, with the property that
all the three matrices have no negative elements. Thus, the results of NMF can be interpreted
as a soft clustering of data. NMF and its many extensions are widely-used in many research
fields such as audio processing [17], text document clustering [16], image analysis [9] and brain
signal analysis [5]. The advantage of NMF is that it can extract linear combinations of related
elements that can then be used as signatures.
Given a non-negative matrix A, the NMF algorithm tries to find non-negative matrix factors
W and H such that:
A≈W ×H

(3)

In this paper, matrix A is the average feature matrix, W is the global feature-pattern matrix.
As A reflects the average distribution of behavior features for all hosts, W represents the global
behavior patterns in network.
Given a set of of n-dimensional data vectors, the vectors are placed in the columns of an
n × m matrix A, where m is the number of hosts in network. Each value in the vectors is
the features of network behavior of hosts in the network. This matrix is then approximately
factorized into an n×r matrix W which is called basis matrix (global feature-pattern matrix) to
reflect the relationship between features and behavior patterns, and an r × m matrix H which
is called coefficient matrix to show the behavior patterns for each host in network. Usually
r is chosen to be much smaller than n or m, so that W and H are smaller than the original
matrix A. In this way, we can reduce the dimensionality and complexity of logs, and capture
the correlation between behavior features and network behavior patterns for hosts in network.
In order to have a clear description of behavior patterns, we hope the patterns are as
unrelated as possible. So, this paper uses Pearson Correlation to decide the value of r, which
is a measure of the linear correlation between two variables. We choose the value of r when
max(corr(A·i , A·j ))<α, (i, j ∈ [0,r)), where α is a given threshold.

3.3

Host Behavior Pattern Mining

The inputs of this step are an ordered set of slices Ak (k ∈ [1, t]) as shown in Fig. 1 and the
pattern matrix W calculated from the last step. The output is an ordered set of behavior
patterns of all hosts, in which we can get the evolution of behavior patterns for each host.
In this step, for each matrix Ak which represents the features of all hosts in the k-th time
window, the corresponding pattern-host matrix H k is also calculated by Equation 4 used in the
global feature-pattern matrix capturing step. What’s different is that here we want to calculate
the optimal matrix H with matrixes A and W . Formally, for each matrix Ak , we want to
get H k = minH Ak − W × H. Note that this is a non-negativity constrained least squares
1
2
t
, Hlj
, · · · , Hlj
}.
problem. The evolution of host j in each pattern l ∈ [1, r] is Hlj = {Hlj
Through the evolution sequences, we can detect network anomalies and find suspicious
hosts. To detect anomalies, we introduce two observed values, namely standard deviation and
expected value, to measure
 the intensity and the location of anomalies for each host. The
standard deviation is σ = E[(Hlj − E(Hlj ))2 ], and the expected value of Hlj is E(Hlj ) = µ.
σ is used to measure the intensity of anomaly by quantifying the amount of variation of Hlj .
A high standard deviation indicates that the values in Hlj are spread out over a wide range,
which represents a high-level anomaly for host j in pattern l. And, µ is used to locate the
k
k
as anomaly if ∆ = |Hlj
− µ| > δ, where δ is a threshold. ∆ can also
anomaly by defining Hlj
be used to express the subtlety of anomalies.
5

	

Mining Host Behavior Patterns From Massive Network and Security Logs
Jing Ya, Tingwen Liu et al.
Jing Ya et al. / Procedia Computer Science 108C (2017) 38–47

Table 1: Behavior Features of Each Host Used in This Paper

Accumulated
Variables

Entropy
Variables

4

#

Features

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

AS
DU
FU
CL
MU
NP
NC
NF
NI
NO
DT
TB
TP
ES
ED
ESP
EDP

Meanings
Average value of health status
Average value of hard disk usage
Average value of file system usage
Average value of CPU utilization
Average value of memory allocation
Number of running processes
Status of network connection
Number of network flows
Number of internal flows
Number of external flows
During time for each flow
Sum of the bytes transferred
Sum of the packets transferred
Entropy of the source IPs
Entropy of the destination IPs
Entropy of the source ports
Entropy of the destination ports

Experimental Results

This section reports the experimental validation of the proposed method. We apply our method
to the VAST Challenge 2013 Mini-Challenge 3 (MC3) [4], which provides a realistic artificial
data set of a large company and a ground truth to compare with. The data set contains several
suspicious events in a network over a period of two weeks. Next, the section first describes
details of the data sets, then presents the experimental results of LogM4BP approach.

4.1

Experimental Data

The experimental data includes three types of data. The first type is network flow data, where
each flow record is a network connection with IPs, ports, protocol information, transferred
packets and bytes. The second one generated by a commercial network health monitoring
program called Big Brother, contains network health and status data. Each record is a network
health data with overall status value of each host and health measures like CPU utilization,
disk usage and memory allocation. IPS data is provided only for the second week as the third
type. In this paper, we only use the first two types.
As all the records above are structured data, we just need to do a simple data preprocessing
to obtain features contained in the data set, using basic statistical methods. And, we set 10
minutes as a time window, there are 1116 active hosts and 10 million level logs in the data set.
Table 1 shows the 17 features extracted from the data sets in each time window.
The first thirteen features are accumulated variables. Summed values can provide an indi6

43

44	

Mining Host Behavior Patterns From Massive Network and Security Logs
Jing Ya, Tingwen Liu et al.
Jing Ya et al. / Procedia Computer Science 108C (2017) 38–47

Table 2: Ground Truth of Data Set
ID

Date

Aggregate Event

ID

Date

Aggregate Event

1
2
3
4
5
6a
6b
7
8a
8b
9a
9b
10
11
12
13

2013/3/1
2013/3/15
2013/4/1
2013/4/1
2013/4/2
2013/4/2
2013/4/2
2013/4/2
2013/4/3/
2013/4/3
2013/4/3
2013/4/5
2013/4/4
2013/4/6
2013/4/6
2013/4/6

Video conference
Threatening Letter
Port Scans
Port Scans
Denial of Service
Denial of Service
Denial of Service
Port Scans
Denial of Service
Denial of Service
Denial of Service
Denial of Service
Malicious Redirects
Exfiltration
Port Scans
Port Scans

14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

2013/4/7
2013/4/7
2013/4/7
2013/4/10
2013/4/11
2013/4/11
2013/4/11
2013/4/11
2013/4/12
2013/4/12
2013/4/12
2013/4/13
2013/4/13
2013/4/14
2013/4/14
2013/4/15

Exfiltration
Threatening letter
Network Down
Port Scans
Port Scans
Denial of Service
Exfiltration
Port Scans
Botnet infection
Botnet infection
Port Scans
Port Scans
Botnet DOS Attacks
Botnet DOS Attacks
Port Scans
Port Scans

cation of payload-intensive attacks and the overall network behaviors, such as DDoS.
The following four features are four entropy variables, which measure the distributions degree
of dispersal or concentration of elements (e.g. source IPs). Some work confirmed that attacks
showing distributed or concentrated behavior in IPs and ports have peak or valley patterns in
the entropy [7]. For a given discrete set of elements M = {mi |1 ≤ i ≤ N }, the definition of
the information entropy H(M ) is expressed in terms of the probabilities of the elements:
H(M ) = −

N


p(mi ) log2 p(mi )

(4)

i=1

where p(mi ) is the probability of element mi .

4.2

Ground Truth Validation

An overview of all ground truth events is presented in Table 2. The ground truth consists of
29 official events. Next, we present the details of our experiment.
Firstly, we capture pattern matrix W with the average value of feature matrixes in a whole
period of time. Matrix W is a measure of the relationships between patterns and features. With
different numbers of patterns r, we can get different pattern matrixes, as shown in Fig. 3. With
the value of r increases, the meanings of the patterns are becoming more and more specific.
The number of patterns r is decided by the scale and depth of the research. In this paper,
we use Pearson correlation and set threshold α = 0.2 to decide the value of r. From Fig. 3,
we can get a group of distinct patterns when r = 4. For Pattern 1, Feature 9 and 14 account
for the largest proportion, which refers to various source IP addresses. Thus it is an obvious
7

	

Mining Host Behavior Patterns From
Security
Logs
Ya, Tingwen Liu et al.
JingMassive
Ya et al. /Network
Procedia and
Computer
Science
108C (2017)Jing
38–47

Figure 3: Pattern Matrix for different values of r

Figure 4: Standard Deviation σ of behavior patterns for each host
signal of port scan. Pattern 2 represents exfiltration, as Feature 1, 3 and 11 account for the
largest proportion. Pattern 3 refers to DDos features, which may cause network down and
system crashes. Pattern 4 is about various external transmission behaviors (e.g. Botnet), as
Feature 3 and 17 account for the largest proportion. Then, we mine behavior patterns with the
calculated global feature-pattern matrix W , and get evolution sequences of behavior patterns
for each host in the network.
8

45

46	

Mining Host Behavior Patterns From
Security
Logs
JingMassive
Ya et al. /Network
Procedia and
Computer
Science
108C (2017)Jing
38–47Ya, Tingwen Liu et al.

k
Figure 5: Part of evolution of ∆ = |Hlj
− µ| for host 172.20.0.15

At last, we discuss how to observe anomalies intuitively. We first calculate the Standard
Deviation(SD) of each evolution sequence. As shown in Fig. 4, each spot means the dispersion
of the specific pattern of one host. A higher σ means that the host did something unusual
at some time. We can find when and what happened to this host through its evolutions of
behavior patterns ∆, as shown in Fig. 5. We set δ = 0.6, and patterns above the δ is regarded
as a suspicious anomaly. Fig. 5 shows that the host has the feature of DDos attack, as the value
of pattern 3 is higher through a period of time. In this way, we can detect anomalies intuitively
and accurately. LogM4BP can find all the events in Table 2 except Event 1, 2, 10 and 15. From
the given data it is not possible to identify Event 1, 2 and 15, because they were not visible in
the data at all [10].
Except the suspicious network events, the results also offer interpretation and description
of behavior patterns of each host. Network managers can intuitively and accurately detect and
locate problems in the networks, while the exist works [13] [14] did not consider. It is very
crucial in understanding the root cause and impacts of network anomalies.

5

Conclusion and Future Work

This paper proposed a novel approach named LogM4BP to mathematically model the patterns
of network behaviors and captures the evolution of behaviors for each host. It enhances the
interpretation and comparability of behavior patterns, and reduce the complexity of analysis.
The work is evaluated on data sets captured from a big marketing company. Experimental
results show that the work can describe network behavior patterns conveniently and intuitively.

Acknowledgement
This work was supported in part by the National Key Research and Development Program
of China under Grant No.2016YFB0801003 and the National Natural Science Foundation of
China under Grant No. 61303260.
9

	

Mining Host Behavior Patterns From
Security
Logs108C (2017)Jing
Ya, Tingwen Liu et al.
JingMassive
Ya et al.Network
/ Procediaand
Computer
Science
38–47

References
[1] OSSIM: Open Source SIEM Open Threat Exchange Projects. https://www.alienvault.com/
open-threat-exchange/projects.
[2] Snort: A Free Lightweight Network Intrusion Detection System for UNIX and Windows. http:
//www.snort.org.
[3] The Bro Network Security Monitor. http://www.bro.org.
[4] VAST Challenge 2013: Mini-Challenge 3. http://vacommunity.org/VAST+Challenge+2013%3A+
Mini-Challenge+3.
[5] A. H. Phan A. Cichocki, R. Zdunek and S. I. Amari. Nonnegative Matrix and Tensor Factorizations: Applications to Exploratory Multi-way Data Analysis and Blind Source Separation. In
Wiley, 2009.
[6] T Mori. A Fujino, J Murakami. Discovering Similar Malware Samples Using API Call Topics. In
CCNC), 2015.
[7] M. Crovella A. Lakhina and C. Diot. Mining anomalies using traffic feature distributions. SIGCOMM Comput. Commun. Rev., 35(4), 2005.
[8] P. Bahl, R. Chandra, A. Greenberg, S. Kandula, and D. A. Maltz .et al. Towards Highly Reliable
Enterprise Network Services via Inference of Multi-level Dependencies. In SIGCOMM, 2007.
[9] D.D.Lee and H.S.Seung. Learning the parts of objects by non-negative matrix factorization.
Nature, 401(6755):788–791, 1999.
[10] J Dominik, Fischer F, Schreck T, and et al. Temporal MDS plots for analysis of multivariate data.
IEEE transactions on visualization and computer graphics, 22(1), 2016.
[11] C. Kopek B. Lamb T. Whaples E. Allan, M. Horvath and M. Berry. Anomaly Detection Using
Non-negative Matrix Factorization. In In M. Berry and M. Castellanos, editors, Survey of Text
Mining: Clustering, Classification, and Retrieval,Second Edition., 2007.
[12] Z. Ge D. Massey D. Pei H. Yan, L. Breslau and J. Yates. G-RCA: a Generic Root Cause Analysis
Platform for Service Quality Management in Large IP Networks. In In Proc. of CoNEXT, 2010.
[13] Mori T et al Kimura T, Ishibashi K. Spatio-temporal Factorization of Log Data for Understanding
Network Events. In Proc. IEEE INFOCOM, pages 610–618, 2014.
[14] Ching-Hao Mao, Chung-Jung Wu, Evangelos E. Papalexakis, Christos Faloutsos, and Kuo-Chen
Lee. MalSpot: Multi2 Malicious Network Behavior Patterns Analysis. In Proc. Springer PAKDD,
pages 1–14, 2014.
[15] P. Verkaik S. Agarwal J. Padhye S. Kandura, R. Mahajan and P. Bahl. Detailed Diagnosis in
Enterprise Networks. In Proc. of SIGCOMM, 2009.
[16] et al.. Shahnaz F, Berry M W. Document clustering using nonnegative matrix factorization. Inf.
Process. Manage., 42(2):373–386, Mar. 2006.
[17] P. Smaragdis and J. C. Brown. Non-negative Matrix Factorization for Polyphonic Music Transcription. In In Proc. of WASPA, 2003.
[18] D. Pei J. Wang T. Qiu, Z. Ge and J. Xu. What Happened in my Network? Mining Network
Events from Router Syslogs. In Proc. of IMC, 2010.
[19] D. Agrawal T. Wang, M. Srivatsa and L. Liu. Learning, Indexing, and Diagnosing Network Faults.
In Proc. of KDD, 2009.
[20] D. Agrawal T. Wang, M. Srivatsa and L. Liu. Spatio-temporal Patterns in Network Events. In
Proc. of CoNEXT, 2010.
[21] Z. M. Mao X. Chen, M. Zhang and P. Bahl. Automating Network Application Dependency
Discovery: Experiences, Limitations, and New Solutions. In Proc. of OSDI, 2008.
[22] K. Yamanishi and M. Maruyama. Dynamic Syslog Mining for Network Failure Monitoring. In
Proc. of KDD, 2005.

10

47

