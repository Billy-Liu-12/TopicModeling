Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header,
This
space
reserved
for
the
header,
This Procedia
space is
isComputer
reserved
for 108C
the Procedia
Procedia
header,
Science
(2017) 1903–1912
This space is reserved for the Procedia header,
This space is reserved for the Procedia header,

do
do
do
do
do

not
not
not
not
not

use
use
use
use
use

it
it
it
it
it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

The
The
The
The
The

1
1
1
1
2
1
2
2
2
2

THex
THex
THex
THex
THex

Department
Department
Department
Department
Department
Department
Department
Department
3
Department
Pacific
3
Department
3 Pacific
3 Pacific
Pacific
3
Pacific

Algorithm and a Simple Darcy Solver
Algorithm
and
a Simple
Darcy Solver
Algorithm
and
Simple
Algorithm
and aa Meshes
Simple Darcy
Darcy Solver
Solver
Hexahedral
Algorithm
and
a
Simple
Darcy
Solver
Hexahedral
Meshes
Hexahedral
Meshes
Hexahedral
Meshes
1 ∗
2 †
Graham Harper
, Jiangguo Liu
, and Bin Zheng33
Hexahedral
Meshes
1 ∗
2 †
Graham Harper1 ∗, Jiangguo Liu2 †, and Bin Zheng3

on
on
on
on
on

Graham Harper1 ∗, Jiangguo Liu2 †, and Bin Zheng3
Graham
Harper
, Jiangguo
Liu2 †, Fort
andCollins,
Bin Zheng
of Mathematics,
Colorado
State University,
CO 80523-1874,
USA,
1 ∗
3
Graham
Harper
,
Jiangguo
Liu
,
and
Bin Zheng
of
Mathematics,
Colorado
State
University,
Fort
Collins,
harper@math.colostate.edu
of Mathematics, Colorado State University, Fort Collins, CO
CO 80523-1874,
80523-1874, USA,
USA,
of
State
harper@math.colostate.edu
of Mathematics,
Mathematics, Colorado
Colorado
State University,
University, Fort
Fort Collins,
Collins, CO
CO
harper@math.colostate.edu
of Mathematics,
Mathematics, Colorado
Colorado
State University,
University, Fort
Fort Collins,
Collins, CO
CO
harper@math.colostate.edu
of
State
liu@math.colostate.edu
of Mathematics, Colorado
State
University,
Fort
Collins,
CO
harper@math.colostate.edu
of
Mathematics,
Colorado
State
University,
Fort
Collins,
CO
liu@math.colostate.edu
Northwest Nationalliu@math.colostate.edu
Laboratory, P.O.Box 999, Richland, WA
of Mathematics,
Colorado
State University,
Fort
Collins, WA
CO
liu@math.colostate.edu
Northwest
National
Laboratory,
P.O.Box
999,
Richland,
Bin.Zheng@pnnl.gov
Northwest Nationalliu@math.colostate.edu
Laboratory, P.O.Box 999, Richland, WA
Northwest National Laboratory,
P.O.Box
999,
Richland,
WA
Bin.Zheng@pnnl.gov
Bin.Zheng@pnnl.gov
Northwest National Laboratory,
P.O.Box 999, Richland, WA
Bin.Zheng@pnnl.gov
Bin.Zheng@pnnl.gov

80523-1874,
80523-1874, USA,
USA,
80523-1874, USA,
USA,
80523-1874,
80523-1874, USA,
80523-1874,
99352, USA,USA,
80523-1874, USA,
99352,
99352, USA,
USA,
99352, USA,
99352, USA,

Abstract
Abstract
In this paper, we first present the THex algorithm that refines a tetrahedral mesh into a
Abstract
Abstract
In
this
we
first
the
algorithm
refines
aa tetrahedral
mesh
into
hexahedral
mesh.
for efficient
implementation
of the
THex
algorithm are
discussed.
In
this paper,
paper,
we Strategies
first present
present
the THex
THex
algorithm that
that
refines
tetrahedral
mesh
into aa
Abstract
In
this
paper,
we
first
present
the
THex
algorithm
that
refines
a
tetrahedral
mesh
into a
hexahedral
mesh.
Strategies
for
efficient
implementation
of
the
THex
algorithm
are
discussed.
Then
present
lowest
order
weak
Galerkin
(WG)
(Q
, Q0THex
; RTa[0]tetrahedral
) finite element
method
hexahedral
mesh.
Strategies
for efficient
implementation
of 0the
algorithm
are
discussed.
In
thiswe
paper,
wethe
first
present
the
THex
algorithm
that
refines
mesh
into a
hexahedral
mesh.
Strategies
for
efficient
implementation
of
the
THex
algorithm
are
discussed.
Then
we
present
the
lowest
order
weak
Galerkin
(WG)
(Q
,
Q
;
RT
)
finite
element
method
0, Q
0 ; RT
[0] ) finite
for
solving
the
Darcy
equation
onefficient
general
hexahedral
meshes.
simple
solver
usesdiscussed.
constant
Then
we present
the
lowest
order
weak Galerkin
(WG)
(Q
element
method
0theThis
0THex
[0]algorithm
hexahedral
mesh.
Strategies
for
implementation
of
are
Then
we unknowns
present
theinside
lowest
order
weak
(Q0 , QThis
; RTsimple
element
method
0the
[0] ) finite
for
solving
the
equation
on
hexahedral
solver
uses
constant
pressure
hexahedra
andGalerkin
on
faces(WG)
butmeshes.
specifies
discrete
weak
gradients
of
for
solving
the Darcy
Darcy
equation
on general
general
hexahedral
meshes.
solver
uses
constant
Then
we unknowns
present
theinside
lowest
order
weak
Galerkin
(WG)
(Q0 , QThis
; RTsimple
element
method
0the
[0] ) finite
for
solving
the
Darcy
equation
on
general
hexahedral
meshes.
This
simple
solver
uses
constant
pressure
hexahedra
and
on
faces
but
specifies
discrete
weak
gradients
of
spaces.
Implementation
of
this
solver
is
these
basis
functions
in
local
Raviart-Thomas
RT
pressure
unknowns
inside
hexahedra
and
on
faces
but
specifies
the
discrete
weak
gradients
of
[0]
for
solving
the
Darcy
equation
on general
hexahedral
meshes.
This
simple
solver
uses
constant
pressure
unknowns
inside
hexahedra
and
on
faces
but
specifies
the
discrete
weak
gradients
of
spaces.
Implementation
of
this
solver
is
these
basis
functions
in
local
Raviart-Thomas
RT
[0] spaces.
straightforward.
The
solver
is
locally
mass-conservative,
and
produces
continuous
normal
fluxes,
Implementation
of
this
solver
is
these
basis
functions
in
local
Raviart-Thomas
RT
[0]
pressure
unknowns
inside
hexahedra
and on faces
butspaces.
specifies
the discrete
weak
gradients
of
Implementation
of
this
solver
is
these
basis
functions
in
local
Raviart-Thomas
RT
[0]
straightforward.
The
solver
is
locally
mass-conservative,
and
produces
continuous
normal
fluxes,
regardless
of
hexahedral
mesh
quality.
When
the
mesh
is
asymptotically
parallelopiped,
this
straightforward.
The
solver
is
locally
mass-conservative,
and
produces
continuous
normal
fluxes,
spaces.
Implementation
ofnormal
this solver
is
these
basisoffunctions
in local
Raviart-Thomas
RT[0]
straightforward.
The
solver
is
locally
mass-conservative,
and
produces
continuous
fluxes,
regardless
hexahedral
mesh
quality.
When
the
mesh
is
asymptotically
parallelopiped,
this
Darcy
solver
optimal
order
convergence
in pressure,
velocity, and
flux,
as normal
demonstrated
regardless
of exhibits
hexahedral
mesh
quality.
When the
meshand
is asymptotically
parallelopiped,
this
straightforward.
The
solver
is
locally
mass-conservative,
produces
continuous
fluxes,
regardless
of exhibits
hexahedral
meshorder
quality.
When the
mesh is asymptotically
parallelopiped,
this
Darcy
solver
convergence
in
velocity,
as
by
numerical
results. optimal
Darcy
solver
optimal
convergence
in pressure,
pressure,
velocity, and
and flux,
flux,
as demonstrated
demonstrated
regardless
of exhibits
hexahedral
meshorder
quality.
When the
mesh is asymptotically
parallelopiped,
this
Darcy
solver
exhibits
optimal
order
convergence
in pressure,
velocity, and flux,
as demonstrated
by
numerical
results.
by
numerical
results.
Darcy
solver
exhibits
optimal
order
convergence
in
pressure,
velocity,
and
flux,
as
demonstrated
Keywords:
Darcy
equation,
hexahedral
meshes,
lowest
order
elements,
THex
algorithm,
weak
Galerkin
©
2017
The
Authors.
Published
by
Elsevier
B.V.
by numerical results.
Keywords:
Darcy
equation,
hexahedral
meshes,
lowest
order
elements,
THex
weak
Peer-review
under
responsibility
the scientific
committee
of the
International
Conference
on Computational
Science
by numerical
results.
Keywords:
Darcy
equation, of
hexahedral
meshes,
lowest
order
elements,
THex algorithm,
algorithm,
weak Galerkin
Galerkin
Keywords: Darcy equation, hexahedral meshes, lowest order elements, THex algorithm, weak Galerkin
Keywords: Darcy equation, hexahedral meshes, lowest order elements, THex algorithm, weak Galerkin

1 Introduction
1
Introduction
1
Introduction
1
Introduction
Darcy
solvers have fundamental importance in numerical simulations of flow and transport in
1
Introduction
Darcy solvers have fundamental importance in numerical simulations of flow and transport in

porous solvers
media.have
Local
mass conservation
andinnormal
flux simulations
continuity are
two and
important
propDarcy
fundamental
importance
numerical
of flow
transport
in
Darcy
solvers
have
fundamental
importance
innormal
numerical
simulations
ofconvergence,
flow
and
transport
in
porous
media.
Local
mass
conservation
and
flux
continuity
are
two
important
properties
desired
for
Darcy
solvers,
in
addition
to
stability,
optimal
order
and
easy
porous
media.
Local
mass
conservation
and
normal
flux
continuity
are
two
important
propDarcy
solvers
have
fundamental
importance
innormal
numerical
simulations
ofconvergence,
flow
and
transport
in
porous
media.
Local
mass
conservation
and
flux
continuity
are
two
important
properties
desired
for
Darcy
solvers,
in
addition
to
stability,
optimal
order
and
easy
implementation
[4,Darcy
10,mass
12].
Solving
the Darcy
equation
incontinuity
complicated
3-dim
domains
could
erties
desired
forLocal
solvers,
in addition
tonormal
stability,
optimal
order
convergence,
andpropeasy
porous
media.
conservation
and
flux
are
two
important
erties
desired forAlthough
Darcy
solvers,
in addition
to
optimal
order convergence,
and
easy
implementation
[4,
10,
Solving
the
Darcy
equation
in
3-dim
domains
could
be
challenging.
tetrahedral
meshes
arestability,
fundamentally
important,
hexahedral
meshes
implementation
[4,Darcy
10, 12].
12].
Solving
the
Darcy
equation
in complicated
complicated
3-dim
domains
could
erties
desired forAlthough
solvers,
in addition
to
stability,
optimal
order convergence,
and
easy
implementation
[4,
10,
12].
Solving
the
Darcy
equation
in
complicated
3-dim
domains
could
be
challenging.
tetrahedral
meshes
are
fundamentally
important,
hexahedral
meshes
are
preferred in Although
certain
cases,
since they
require
less degrees
of important,
freedom 3-dim
(DOFs)
but can
still
be
challenging.
tetrahedral
meshes
areequation
fundamentally
hexahedral
meshes
implementation
[4,
10,
12].
Solving
the
Darcy
in
complicated
domains
could
be
challenging.
Although
tetrahedral
meshes
are fundamentally
important,
hexahedral
meshes
are
preferred
in
certain
cases,
since
they
require
less
degrees
of
freedom
(DOFs)
but
can
still
accommodate
complicated
domain
geometry.
are
preferred
in
certain
cases,
since
they
require
less
degrees
of
freedom
(DOFs)
but
can
still
be
Although
tetrahedral
meshes
are fundamentally
hexahedral
meshes
arechallenging.
preferred in
certain cases,
sincegeometry.
they
require
less degrees of important,
freedom (DOFs)
but can
still
accommodate
complicated
domain
accommodate
complicated
domain
geometry.
are
preferred in
certain cases,
sincegeometry.
they require less degrees of freedom (DOFs) but can still
accommodate
complicated
domain
∗ This author was partially supported by US National Science Foundation under grant DMS-1419077.
accommodate
complicated domain geometry.
∗
†
∗ This

author
This author was
was
author was
author was
author was
† This author was

† This
∗
† This
∗
† This

partially
partially
partially
partially
partially
partially

supported
supported
supported
supported
supported
supported

by
by
by
by
by
by

US
US
US
US
US
US

National
National
National
National
National
National

Science
Science
Science
Science
Science
Science

Foundation
Foundation
Foundation
Foundation
Foundation
Foundation

under
under
under
under
under
under

grant
grant
grant
grant
grant
grant

DMS-1419077.
DMS-1419077.
DMS-1419077.
DMS-1419077.
DMS-1419077.
DMS-1419077.

1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.148

1
11
1
1

1904	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

Hexahedral meshes can be generated using commercial softwares, e.g., Trelis/CUBIT [1]. A
sophisticated algorithm for generating hexahedral meshes is provided in [8]. In a simple way,
one could use the freely available software TetGen [9] to generate a tetrahedral mesh and then
use the THex algorithm to refine the tetrahedral mesh into a hexahedral mesh.
Hexahedral meshes may have nonflat faces that raise challenges to finite element methods
for maintaining flux continuity. For the mixed finite element methods, normal flux continuity
is obtained by employing the Piola transformation to construct finite element spaces [2, 3, 12].
The weak Galerkin methods [4, 5, 7, 11] adopt a different approach. Pressure basis functions
are set inside elements and on edges/faces between elements, but their discrete weak gradients
are specified in certain known spaces that have adequate approximation capacity and hence can
be used to approximate the classical gradient in the variational form for the Darcy equation.
Normal continuity of numerical fluxes is derived from the properties of discrete weak gradients.
Specifically in this paper, we present the lowest order WG finite element method
(Q0 , Q0 ; RT[0] ) that uses constant pressure unknowns inside hexahedra and on faces but specifies
their discrete weak gradients in local Raviart-Thomas RT[0] spaces. This Darcy solver has easy
implementation, is locally mass-conservative, and produces continuous normal fluxes. When
the mesh is asymptotically parallelopiped, the method exhibits optimal order convergence in
pressure, velocity, and flux, as demonstrated by numerical results.

2

The THex Algorithm
0

4
3
1
2

(a)

(b)

Figure 1: (a) A tetrahedron partitioned into 4 hexa.; (b) A tetrahedral mesh refined into a hexahedral mesh.
The THex algorithm divides each tetrahedron into four (4) hexahedra and hence refines a
tetrahedral mesh into a hexahedral mesh. In this process, we see proliferation of nodes, faces,
and elements. Besides the original nodes of the tetrahedral mesh, we create (see Fig.1(a))
• A new node at the centroid of each original tetrahedron: Node #14;
• A new node at the centroid of each original triangular face: Node #10,11,12,13;
• A new node at the midpoint of each original edge: Node #4,5,6,7,8,9.
Similarly,
2

	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

• Each original triangular face is divided into three (3) flat quadrilateral faces,
• Six (6) new quadrilateral faces are created inside each original tetrahedron. These new
quadrilateral faces are flat also.
See Figure 1 for an illustration of one tetrahedron being partitioned into 4 hexahedra.
For a given tetrahedral mesh, we use respectively NumNdsT, NumEgsT, NumFcsT, NumEmsT to
denote the numbers of nodes, edges, triangular faces, and tetrahedra. Similarly, we use NumNdsH,
NumFcsH, NumEmsH to denote the numbers of nodes, quadrilateral faces, and hexahedra of the
resulting hexahedral mesh. Then it is easy to see that
NumNdsH = NumNdsT + NumEgsT + NumFcsT + NumEmsT;
NumFcsH = 3*NumFcsT + 6*NumEmsT;
NumEmsH = 4*NumEmsT;

It is not difficult to handle just one tetrahedron. However, it is nontrivial to handle an
entire tetrahedral mesh. The main difficulty lies in coordinating the orientations of faces and
hexahedra.
Suppose the four vertices of a given tetrahedron are labelled locally as 0, 1, 2, 3 with 0
being the top (zenith) and 123 as the base, see Figure 1. For the THex algorithm to work
correctly, we need to ensure a tetrahedron has the correct orientation by checking its volume
being positive and swapping two base vertices if needed.
Clearly, the four triangular faces of the original tetrahedron are
#0 : (0, 1, 2),

#1 : (0, 2, 3),

#2 : (0, 3, 1),

#3 : (3, 2, 1).

Note that the orientation of the base 123 (actually now oriented as 321) is somehow
different than the other three faces. This assures that the normal vector points outwards
as we traverse the vertices in the given order.
The edges along with their connecting nodes are
#0 : (0, 1),

#1 : (0, 2),

#2 : (0, 3),

#3 : (3, 2),

#4 : (2, 1),

#5 : (1, 3).

Accordingly, the midpoints on these edges are labelled as 4, 5, 6, 7, 8, 9. The centroids of the four
faces are labelled as 10, 11, 12, 13. Finally, the centroid of the tetrahedron is labelled as 14. So
the partition scheme uses totally 15 nodes for four hexahedra, whereas the original tetrahedron
has only four (4) nodes.
As shown in Figure 1, the new hexahedra have nodal info organized as (on bottom faces
and top faces, oriented counterclockwise)
#0 :
#1 :
#2 :
#3 :

(0, 4, 12, 6,
(1, 8, 13, 9,
(2, 7, 13, 8,
(3, 6, 12, 9,

5, 10, 14, 11)
4, 10, 14, 12)
5, 11, 14, 10)
7, 11, 14, 13)

It is interesting to see that each new hexahedron involves
• one original node;
• three (adjacent) edge midpoints;
3

1905

1906	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

• three face centroids;
• one (the) element centroid.
Note that each of the original four (4) triangular faces of the tetrahedron is partitioned into
three (3) quadrilaterals. There are totally twelve (12) such quadrilaterals and they are all flat.
These 12 flat quadrilateral faces can be expressed as
#0:
#3:
#6:
#9:

(0,4,10,5),
(0,5,11,6),
(0,6,12,4),
(3,7,13,9),

#1:
#4:
#7:
#10:

(1,8,10,4),
(2,7,11,5),
(3,9,12,6),
(2,8,13,7),

#2:
#5:
#8:
#11:

(2,5,10,8),
(3,6,11,7),
(1,4,12,9),
(1,9,13,8).

In this partition process, six (6) new quadrilateral faces are created inside the original
tetrahedron, as shown below
#12: (4,10,14,12),
#15: (7,13,14,11),

#13: (5,11,14,10),
#16: (8,13,14,10),

#14: (6,12,14,11),
#17: (9,13,14,12).

Each of them appears twice (is shared by two new hexahedra). So there are totally (4*3+6*2)
24 faces. Of course, this is correct, 4 ∗ 6 = 24.
An important and challenging part of the THex algorithm is to generate the mesh info on
elements versus their faces, which is needed by the weak Galerkin, discontinuous Galerkin, and
mixed finite element methods. Note that in the THex algorithm, each triangular face of a given
tetrahedral mesh is partitioned into four quadrilateral faces, which are faces of the hexahedra
resulted from partitioning tetrahedra in the tetrahedral mesh. The global and local orientations
of these quadrilateral faces need to be sorted out and coordinated. This can be accomplished
using the set class in C++ standard template library.

3

A Weak Galerkin Solver for Darcy on Hexahedra

In this section, we present a simple solver for the Darcy equation on hexahedral meshes. This is
a novel weak Galerkin method that uses the lowest order elements (Q0 , Q0 ; RT[0] ) on hexahedra.
The method is easy to implement but still produces satisfactory results. This approach does
not use the Piola transformation. The continuity in normal fluxes is not built in the finite
element space but attained through the bilinear form in the numerical scheme.

3.1

WG (Q0 , Q0 ; RT[0] ) Elements for Hexahedra

Let E be a hexahedron with center (xc , yc , zc ) and X = x − xc , Y = y − yc , Z = z − zc . Let












1
0
0
X
0
0
w 1 =  0  , w2 =  1  , w3 =  0  , w4 =  0  , w 5 =  Y  , w 6 =  0  .
0
0
1
0
0
Z
We define a local Raviart-Thomas space as

RT[0] (E) = Span(w1 , w2 , w3 , w4 , w5 , w6 ).

(1)

The Gram matrix of the above basis is a 6 × 6 symmetric positive-definite (SPD) matrix.
We consider 7 discrete weak functions φi (0 ≤ i ≤ 6) on a hexahedral element E as follows:
4

	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

• φ0 for element interior: It takes value 1 in the interior E ◦ but 0 on the boundary E ∂ ;
• φi (1 ≤ i ≤ 6) for the six faces respectively: Each takes value 1 on the very face but 0 on
all other five faces and in the interior.
Any such a function φ = {φ◦ , φ∂ } has two independent parts: φ◦ is defined in E ◦ , whereas φ∂
is defined on E ∂ . Then its discrete weak gradient ∇w,d φ is specified in RT[0] (E) via integration
by parts [11] (implementationwise solving a size-6 SPD linear system):



(∇w,d φ) · w =
φ∂ (w · n) −
φ◦ (∇ · w), ∀w ∈ RT[0] (E).
(2)
E◦

E∂

E

Specifically, when E becomes a brick [x0 , x1 ] × [y0 , y1 ] × [z0 , z1 ], we have


∇w,d φ0





∇w,d φ1






 ∇w,d φ2
∇w,d φ3



∇w,d φ4





∇w,d φ5




∇w,d φ6

3.2

=
=
=
=

0w1
−1
w
x1 −x0 1
1
w1
x −x
1

0

+

0w2 +

0w3 +

+

0w2 +

0w3 +

+

0w2 +

0w3 +

0w1 +

=

0w1 +

=

0w1 +

=

0w1 +

−1
w
y1 −y0 2
1
w
y1 −y0 2

+

0w3 +

+

0w3 +

0w2 +
0w2 +

−1
w
z1 −z0 3
1
w
z1 −z0 3

−12
w
(x1 −x0 )2 4
6
w
(x1 −x0 )2 4
6
w4
2
(x1 −x0 )

+
+

−12
w
(y1 −y0 )2 5

0w5 +

+

0w4 +
0w4 +

+

0w4 +

+

0w4 +

+

0w5 +
6
w
(y1 −y0 )2 5
6
w5
2
(y1 −y0 )

−12
w ,
(z1 −z0 )2 6

0w6 ,
0w6 ,

+

0w6 ,

+

0w6 ,
6
w6 ,
2
(z1 −z0 )
6
w6 .
2
(z1 −z0 )

0w5 +
0w5 +

WG (Q0 , Q0 ; RT[0] ) Finite Element Scheme for Darcy on Hexahedra

In this subsection, we use the previously discussed WG (Q0 , Q0 ; RT[0] ) finite elements on hexahedra to develop a finite element scheme for solving the Darcy equation in its usual form

x ∈ Ω,

 ∇ · (−K∇p) ≡ ∇ · u = f,
x ∈ ΓD ,
p = pD ,
(3)


N
x∈Γ ,
u · n = uN ,

where Ω ⊂ R3 is a bounded polyhedral domain, p the unknown pressure, K a permeability
tensor that is uniformly SPD, f a source term, pD , uN respectively Dirichlet and Neumann
boundary data, n the outward unit normal vector on ∂Ω =: Γ, which has a nonoverlapping
decomposition into the Dirichlet boundary ΓD and the Neumann boundary ΓN .
Let Eh be a quasi-uniform hexahedral mesh for Ω and Γh be the set of all faces in the
N
D
and ΓN , respectively. Let Sh be the space
mesh. Accordingly ΓD
h , Γh denote the faces on Γ
of global discrete weak functions on Eh that are piecewise constants (degree 0 polynomials) in
the element interiors and also piecewise constants (degree 0 polynomials) on the faces. Let Sh0
be a subspace of Sh consisting of the shape functions that vanish on ΓD
h.
◦
∂
◦
Seek ph = {ph , ph } ∈ Sh (ph for the values in all element interiors, p∂h for the values on all
faces) such that p∂h |ΓD
= Q∂h (pD ) (the L2 -projection of the Dirichlet boundary data into the
h
space of all piecewise constant functions on ΓD
h ) and
Ah (ph , q) = F(q),
where
Ah (ph , q) :=

 

E∈Eh

E

∀q = {q ◦ , q ∂ } ∈ Sh0 ,

(4)

K∇w,d ph · ∇w,d q,

(5)

5

1907

1908	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

and
F(q) :=

 

E∈Eh

E

f q◦ −

 

γ∈ΓN
h

uN q ∂ .

(6)

γ

This results in a symmetric positive-definite sparse linear system, which can be solved using
conjugate-gradient type linear solvers.
After the numerical pressure ph is solved, a numerical velocity uh is obtained elementwise
via a local L2 -projection Qh back into the subspace RT[0] (E):
uh = Qh (−K∇w,d ph ).

(7)

But the projection can be omitted when K is an elementwise constant scalar matrix.
Theorem 1 (Local mass conservation). For any hexahedron E ∈ Eh , there holds


f=
uh · n.
E

(8)

E∂

Proof. In Equation (4), we take a test function q such that q has value 1 in E ◦ but vanishes
everywhere else (in the interiors of all other elements and on all faces). We thus have




f=
(K∇w,d ph ) · ∇w,d q =
Qh (K∇w,d ph ) · ∇w,d q =
(−uh ) · ∇w,d q
E
E
E



E
q ∂ (uh · n) +
q ◦ (∇ · uh ) =
∇ · uh =
uh · n,
=−
E∂

E

E∂

E

where we have used the definition of projection Qh , the definite of discrete weak gradient, and
Gauss Divergence Theorem for a vector function in the local RT[0] space.
Theorem 2 (Continuity of bulk normal flux). Let γ be a face shared by two hexahedra
E1 , E2 and n1 , n2 be their (maybe non-constant) outward unit normal vectors. There holds


(1)
(2)
uh · n1 + uh · n2 = 0.
(9)
γ

γ

Proof. In Equation (4), we take a test function q = {q ◦ , q ∂ } such that q ∂ = 1 only on γ;
q ∂ = 0 on all other faces; q ◦ = 0 in the interior of any hexahedron. Applying the definitions for
projection Qh and discrete weak gradient, and again the Divergence Theorem, we obtain


(K∇w,d ph ) · ∇w,d q +
(K∇w,d ph ) · ∇w,d q
0=
E2 
E1
=
Qh (K∇w,d ph ) · ∇w,d q +
Qh (K∇w,d ph ) · ∇w,d q
E2
E1

(1)
(2)
=
(−uh ) · ∇w,d q +
(−uh ) · ∇w,d q
E
E
1
1





(1)
(1)
(2)
(2)
(1)
(2)
= − q ∂ uh · n1 +
q ◦ uh − q ∂ uh · n2 +
q ◦ uh = − uh · n1 − uh · n2 .
γ

E1

γ

E2

γ

γ

Theorem 3 (First order convergence in pressure, velocity, and flux). Assume the
solution of the Darcy equation (3) has regularity p ∈ H 2 (Ω), u ∈ H 1 (Ω). Suppose the mesh is
asymptotically parallelopiped. Then there holds
p − p◦h  ≤ Ch,
6

u − uh  ≤ Ch,

u · n − uh · n ≤ Ch,

(10)

	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

with the above norms defined respectively as

p − p◦h 2L2 (E) ,
p − p◦h 2 :=
E∈Eh

(u − uh ) · n2 :=

u − uh 2 :=



E∈Eh

u − uh 2L2 (E)3 ,

  |E|
u · n − uh · n2L2 (γ) ,
|γ|
∂

(11)

(12)

E∈Eh γ⊂E

where C is a constant independent of the mesh size h, |E| is the hexahedral volume, and |γ| is
the area of any face of the hexahedral element.
These theoretical results are similar to those presented in [6] for quadrilateral meshes. Further rigorous analysis will be presented in our future work.

4

Numerical Results

In this section, we present numerical experiments on three examples on two types of
meshes. Type I meshes are logically 3-dim-rectangular. They are actually obtained from
h2 -perturbations of uniform brick meshes on the unit cube, as used in [12]:


 x = x̂ + 0.03 sin(3πx̂) cos(3π ŷ) cos(3πẑ),
y = ŷ − 0.04 cos(3π x̂) sin(3π ŷ) cos(3πẑ),

 z = ẑ + 0.05 sin(3πx̂) cos(3π ŷ) sin(3πẑ).

A Type II mesh starts from refinement of a tetrahedral mesh using the previously discussed
THex algorithm and goes through regular refinement of hexahedral meshes. The mesh quality
may not be good initially but improves with the successive refinement. The meshes satisfy the
asymptotically parallelopiped assumption.

Type I mesh

Type II mesh

Figure 2: Two types of hexahedral meshes. Type I: Logically rectangular and h2 -perturbed [12]; Type II:
Applying the THex algorithm to a tetrahedral mesh and then successive refinements of hexahedral meshes.
Example 1. Here Ω = (0, 1)3 (the unit cube), K = I3 , the exact pressure solution is
p(x, y, z) = cos(πx) cos(πy) cos(πz). A Dirichlet boundary condition is specified on ΓD = ∂Ω
using the exact solution value. Shown in Figure 3 are the numerical pressure profiles for Type
7

1909

1910	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

Type I mesh, h = 1/8

Type II mesh, h = 1/8

Figure 3: Example 1: Numerical pressure profiles on Type I and II hexahedral meshes.
I and II hexahedral meshes (both have mesh size h = 1/8. Shown in Table 1 are the numerical
results from the WG (Q0 , Q0 ; RT[0] ) finite element method. It is clearly observed that errors in
pressure, velocity, and flux exhibit close to 1st order convergence.
Table 1: Example 1: Convergence of errors in pressure, velocity, and flux on Type I meshes
1/h
p − p◦h 
u − uh  (u − uh ) · n
8 7.0011E-2 3.2844E-1
7.1386E-2
16 3.5623E-2 1.6527E-1
3.5469E-2
32 1.7905E-2 8.2288E-2
1.7623E-2
64 8.9652E-3 4.1069E-2
8.7969E-3
Conv.rate
0.988
0.999
1.006

Table 2: Example 2: Convergence of errors in pressure, velocity, and flux on Type I meshes
1/h p − p◦h 
u − uh  (u − uh ) · n
4 3.0310E-5 1.2359E-3
2.2008E-4
8 1.4466E-5 5.7003E-4
1.2107E-4
16 7.1904E-6 2.8141E-4
6.2760E-5
32 3.6280E-6 1.4303E-4
3.2173E-5
64 1.8858E-6 7.7512E-5
1.7172E-5
Conv.rate
1.001
0.998
0.920
Example 2. We have again Ω = (0, 1)3 , but a varying permeability and a known analytical
solution for pressure provided as [12]
 2

y + 2 cos(xy)
sin(xz)
,
cos(yz)
K =  cos(xy) (x + 3)2
p(x, y, z) = x2 (1 − x)2 y 2 (1 − y)2 z 2 (1 − z)2 .
sin(xz) cos(yz) (x + 1)2 + z 2

As seen in Table 2, for Type I hexahedral meshes, we have close to 1st order convergence in
pressure, velocity, and flux.
8

	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

Example 3 (Hexahedral meshes related to cylindrical coordinates). This example
considers a cylindrical sector domain described as
Ω = {(r, θ, z) : ri ≤ r ≤ ro , α ≤ θ ≤ β, zb ≤ z ≤ zt }.
Assume the permeability in the three directions have values Kr , Kθ , Kz respectively and there
is no any cross-wind permeability. Similar to [6], we can derive a permeability matrix in the
Cartesian coordinates as


(Kr −Kθ )xy
Kr x2 +Kθ y 2
0
2
2
2
2
x +y
x +y


 (Kr −Kθ )xy Kr y2 +Kθ x2

K(x, y, z) = 
.
0
x2 +y 2
x2 +y 2


0
0
Kz

For numerical tests, we set ri = 1, ro = 2, α = 0, β = π2 , zb = 0, zt = 1. We set Kr =
10−1 , Kθ = 10−3 , Kz = 1 to examine anisotropy. We specify the exact pressure solution as
p(r, θ, z) = r2 cos(θ) sin(θ)(z 2 − z + 1). The source term in the Darcy equation is derived
accordingly. A Dirichlet boundary condition is specified on the entire boundary of the domain
using the pressure solution value.
Table 3: Example 3: Convergence of errors in pressure, velocity, and flux on hexahedral meshes for a cylindrical
sector domain with uniform partitions in r, θ, z-directions
nr = nθ = nz
4
8
16
32
Conv.rate

p − p◦h 
2.8496E-1
1.4716E-1
7.4176E-2
3.7162E-2
0.979

For partitions nr = nθ = nz = 8
(with mesh)

u − uh 
1.9865E-1
1.0206E-1
5.1302E-2
2.5668E-2
0.984

(u − uh ) · n
5.1197E-2
2.5189E-2
1.2528E-2
6.2531E-3
1.011

For partitions nr = nθ = nz = 16
(without mesh)

Figure 4: Example 3: Numerical pressure profiles on hexahedral meshes.
Applying uniform partitions in the r, θ, z-directions respectively with nr , nθ , nz partitions,
we obtain a hexahedral mesh. The hexahedra actually have flat faces. For simplicity, we use the
9

1911

1912	

THex Algorithm and a DarcyGraham
Solver Harper
on Hexahedral
Meshes
Harper, Liu, and Zheng
et al. / Procedia
Computer Science 108C (2017) 1903–1912

same number of partitions in the r, θ, z-directions. Shown in Table 3 are the numerical results of
applying the WG(Q0 , Q0 ; RT[0] ) finite element method. Close to 1st order convergence rates in
pressure, velocity, and flux are observed. Shown in Figure 4 are the numerical pressure profiles
for respectively nr = nθ = nz = 8 and nr = nθ = nz = 16.

5

Concluding Remarks

As investigated in this paper, the THex algorithm can be employed to refine a tetrahedral
mesh into a hexahedral mesh. Then finite element solvers on these two types of meshes can be
compared for DOFs, accuracy, and other solution properties. The hexahedral meshes generated
this way usually involve obtuse dihedral angles and the mesh quality is not high. Among free
and commercial mesh generators, Gmsh, CUBIT/Trelis can be used to generate hexahedral
meshes with better quality.
The weak Galerkin finite elements (Q0 , Q0 ; RT[0] ) have be used to solve the Darcy equation
on hexahedral meshes. This Darcy solver is easier in implementation, compared to those solvers
using the mixed finite elements based on the Piola transformation [2] or the WG solvers involving
stabilizers [7]. This simple solver is locally mass-conservative and produces continuous normal
fluxes, regardless of hexahedral mesh quality. It exhibits optimal convergence in pressure,
velocity, and flux when the hexahedral mesh is asymptotically parallelopiped. Therefore, it is
a practically useful Darcy solver.

References
[1] Csimsoft. Trelis: Advanced meshing for challenging simulations.
[2] R. Falk, P. Gatto, and P. Monk. Hexahedral h(div) and h(curl) finite elements. M2AN, 45:115–143,
2011.
[3] B. Ganis, M. F. Wheeler, and I. Yotov. An enhanced velocity multipoint flux mixed finite element
method for darcy flow on non-matching hexahedral grids. Proc. Comput. Sci., 51:1198–1207, 2015.
[4] G. Lin, J. Liu, L. Mu, and X. Ye. Weak galerkin finite element methdos for darcy flow: Anistropy
and heterogeneity. J. Comput. Phys., 276:422–437, 2014.
[5] G. Lin, J. Liu, and F. Sadre-Marandi. A comparative study on the weak galerkin, discontinuous
galerkin, and mixed finite element methods. J. Comput. Appl. Math., 273:346–362, 2015.
[6] J. Liu, S. Tavener, and Z. Wang. The lowest-order weak galerkin finite element methods for the
darcy equation on quadrilateral and hybrid meshes. J. Comput. Phys., 0:Manuscript submitted,
2017.
[7] L. Mu, J. Wang, and X. Ye. A weak galerkin finite element method with polynomial reduction.
J. Comput. Appl. Math., 285:45–58, 2015.
[8] J. Remacle, J. Lambrechts, B. Seny, E. Marchandise, A. Johnen, and C. Geuzainet. Blossom-quad:
A non-uniform quadrilateral mesh generator using a minimum-cost perfect-matching algorithm.
Int. J. Numer. Meth. Engrg., 89:1102–1119, 2012.
[9] H. Shi. TetGen: A quality tetrahedral mesh generator and a 3d Delaunay triangulator.
[10] S. Sun and J. Liu. A locally conservative finite element method based on piecewise constant
enrichment of the continuous galerkin method. SIAM J. Sci. Comput., 31:2528–2548, 2009.
[11] J. Wang and X. Ye. A weak galerkin finite element method for second order elliptic problems. J.
Comput. Appl. Math., 241:103–115, 2013.
[12] M. Wheeler, G. Xue, and I. Yotov. A multipoint flux mixed finite element method on distorted
quadrilaterals and hexahedra. Numer. Math., 121:165–204, 2012.

10

