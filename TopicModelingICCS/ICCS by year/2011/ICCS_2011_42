Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1316–1325

International Conference on Computational Science, ICCS 2011

Integrating the Fault Detection Method and Run-to-Run Control for
Improving Semiconductor Process Control
Chih-Hung Jena*, Jia-Ming Wangb
a*
b

Department of Information Management,Lunghwa University of Science and Technology, Taoyuan County 333, Taiwan.
Department of Information Management,Lunghwa University of Science and Technology, Taoyuan County 333, Taiwan.

Abstract
Recently, detailed investigations of various ‘run-to-run’ (R2R) control schemes for semiconductor manufacturing have been
conducted. However, the R2R control scheme has a major problem that needs to be solved, namely, how to detect and
differentiate the faults in the control system. In view of this consideration, the objective of this research was to construct a novel
module for fault diagnosis so that the R2R control system can operate smoothly. In this study, a fault diagnostic module is added
to the multiple-input multiple-output (MIMO) R2R self-tuning control system. The proposed system integrates the R2R selftuning control, weighted sum of squared residuals (WSSR), and joint angle analysis (JAA) methods to detect the system faults,
and executes the process control. First, the WSSR is applied to detect whether the system has generated the fault characteristics.
If the process is judged to exhibit an obvious fault, the system then uses JAA to define the faulty controllable variable. Finally, a
critical step, the chemical mechanical planarization (CMP) in semiconductor manufacturing, is used to illustrate the procedure of
fault diagnosis in order to verify the feasibility in practical application.

Keywords: the R2R self-tuning control; weighted sum squared residual (WSSR); joint angle analysis (JAA)

1. Introduction
The semiconductor manufacturing industry has matured over the past decade. Traditional semiconductor
processing is usually performed with machine-dependent and static empirical models. Recently, run-to-run (R2R)
control has been widely applied in semiconductor manufacturing. R2R control uses on-line model tuning to update a
process control model so that the product quality of the next batch can be improved and further incoming products
will meet specifications. Therefore, the stated objective of R2R control is to fine-tune the control model to maintain
the process output of each run to as close to the nominal target as possible (e.g. Ingolfsson and Sachs, 1993; Butler
and Stefani, 1994; Del Castillo, 1996; Del Castillo and Hurwitz, 1997; Del Castillo and Yeh, 1998; Smith and
Boning, 1998; Patel and Jenkins, 2000; Fan et al., 2002; Jen et al., 2004). However, a major problem exists in many
semiconductor processes: there are frequent changes and process faults due to dynamic conditions. These changes

* Corresponding author. Tel.: +886-2-82093211-6319; fax:. +886-2-82093211-6302
E-mail address: f7815@mail.lhu.edu.tw.

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.142

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

1317

and faults can be generated from the operation of different devices during the same process or other reasons, such as
process aging, the influence of chemical concentrations, and device failure. That is to say, if the control system has
an obvious fault that cannot be found, this will seriously affect the control performance. Based on this consideration,
a more complete control system is proposed and constructed herein: a fault detection function is added to an R2R
self-tuning control system. Therefore, the objective of this research is to develop an integrated R2R control system
which not only can diagnose the system faults but also define the fault type. In this paper, the proposed system
combines the weighted sum of squared residuals (WSSR, see Tzafestas and Watanbe, 1990) method, joint angle
analysis (JAA, see Du et al., 2007) and MIMO self-tuning control for evaluating faults in an R2R control system.
First, the proposed system utilizes recursive least squares (RLS, see Del Castillo, 1996) with an R2R self-tuning
control to estimate the process parameters and solve the recipe (controllable factor adjustment) for the next run. If
the process has generated a fault, the integrated system then uses the WSSR to evaluate the fault situation and
applies a JAA to define the faulty controllable factor. If the system does not define an explicit faulty factor, it will
apply the on-line experiment with a least squares estimation (LSE) to update the controlled process model.
According to the updating process model, the inappropriate process model can hopefully be corrected and also
maintain stable outputs as well as superior production quality.
2. The framework of the proposed system
In Fig. 1 the basic control procedure uses the RLS method to predict the process model and applies a trust-region
algorithm to solve the optimum recipe for the next run. Next, using the process outputs, the system applies the
WSSR concept to determine whether the process has generated a significant fault. If the control system has
exhibited an obvious fault, JAA is then used to diagnose and define the faulty controllable factor. Conversely, if the
JAA does not define an explicit fault, the system applies the 2k center point design (or central composite design
(CCD)) to the center point of the nearby region, continuously collecting experimental points in order to correct the
process control model.
yt

xt

Fig. 1. Flow chart of fault diagnosis for the MIMO self-tuning control system

1318

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

2.1. MIMO R2R self-tuning control
Generally, if the process belongs to a MIMO model, the generalized model form of the second-order process can
be indicated as:
A(B)yt  k  L(B)rt -k  M(B)Dt  ( I p  CB)İt .

yt

(1)

In the above equation, rtc k (xt  k ; xii2 , t  k , i 1, 2, , n ; xi , t  k x j , t  k , i < j ) is a  2n + (n(n -1)/2)  u 1 vector where
xt  k ( x1, t  k , x2 , t  k , , xn , t  k )c is an n u 1 vector of controllable variables with time delay k , and it contains linear
and quadratic terms of the controllable variables. In addition, yt is a p u 1 vector of quality characteristics and yt  k
is an autocorrelation term of previously observed outputs. The multivariate intercept term is Dt Į  Dt , where D
is a p u p diagonal matrix of the trend parameter, t is a p u 1 vector of the discrete time index, and Į is a p u 1
vector of the process offset. Therefore, Dt is represented as a combined p u 1 vector that includes the process offset
and deterministic trend; H t is a sequence of multivariate white noise vectors of size p u1 ; the polynomial A(B) is a
p u p regression coefficients matrix for the auto-correlation term; L(B) is a p u (2n  (n(n  1) / 2)) matrix of
regression coefficients for rt  k , M(B) is a coefficients matrix for Dt , and the polynomial (I p  CB ) is a p u p
coefficients matrix for H t (see Clarke and Gawthrop, 1979; Del Castillo, 1996; and Del Castillo and Yeh, 1998).
When the process model belongs to the MIMO structure as in Eq. (2), then the one-step-ahead minimum mean
square error forecast ˆyt 1|t can be represented as follows:
ˆyt 1 t

ˆ  Lr
ˆ M
ˆ (t  1)
Ay
t
t

(2)

In (2), rt = (xt ; xii2 , t , i 1, 2, , n ; xi , t x j , t , i < j ) is a (2n  n(n  1) / 2 ) u 1 vector that contains the linear and
ˆ , L
ˆ and M
ˆ are the parameter estimates matrices as before. In this paper, the
quadratic terms of xt . The matrices A
basic framework uses the self-tuning control to execute the process control. So, the recursive least squares (RLS)
algorithm was applied to estimate the process parameters for the next run, with the expectation that the actual
process will be achieved on target. Next, the RLS algorithm repeats the following steps for the control iteration of
time index t:
Kt

Pt 1M t Ȝ  M tcPt 1M t

șˆ t> i @

șˆ t>i @1  K t yt> i @  M tcșˆ t>i @1

Rt

I 2( p+n ) ( n ( n-1)/2) K tcPt 1M t

Pt



(3)



> 2( p + n) + (n(n  1) / 2 )@

ªI
 K t M tc º Pt 1  Rt
¬ 2(p+n )(n (n-1)/2)
¼

(4)
(5)
(6)

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

1319

In Eqns. (3) - (6), the multivariate RLS algorithm with exponential discounting finds șˆ such that it minimizes
O E cE where E yt  șˆ t M t and O d 1 is a factor for discounting the old data. In addition, K t is a
2( p  n)  (n(n  1) / 2) u 1 vector for the weighting factors that explains how the one-step-ahead forecast error at
time t and previous parameter estimates should be combined to perform parameter vector updates, and Pt is a
diagonal matrix of size [2( p  n)  (n(n  1) / 2)] u [2( p  n)  (n(n  1) / 2)] proportional to the variance covariance
matrix of the parameter estimates. In Eq. (5) Rt is a diagonal matrix. To deal with the windup effect, matrix Pt is
implemented to limit the trace. By using Eqns. (3)-(6), the predicted response can be defined as a general linear
model ˆyt șˆ tcM t . The M is the regressor vector, M t ( yt 1 rt 1 t )c of size (2n  2 p  (n(n  1) / 2)) u 1 , and the
ˆ L
ˆ M
ˆ ]c is of size (2n  2 p  (n(n  1) / 2)) u p .
model coefficients matrix șˆ [A
In this study, this self-tuning control uses the cost function to realize the controllable variable adjustment. The
linear quadratic regulation (LQR) problem can be regarded as a compromise between two conflicting objectives: to
obtain good regulation performance (decrease the target deviation) as well as to decrease the variability in the
controllable variables. Therefore, the cost function is expressed as in Eq. (7):
Jt

( ˆyt 1 t  T )cȥo ( ˆyt 1|t  T )  ( xt  xt 1 )cȥ i ( xt  xt 1 )

(7)

In Eq. (7), T is a target vector of size p ×1 , and ˆyt + 1 t is an expected (predicted) vector for the next run. Because
the process control belongs to a MIMO model, the ˆyt + 1 t size is p u 1 . In addition, if a greater scaling difference is
seen between the output ( ˆyt + 1 t ) and the controllable variables, the control system can use these weight adjustments
( ȥo and ȥ i ) to improve the solving performance. On the other hand, if the scales between the outputs of the MIMO
process exhibit a greater difference, this would cause operating difficulty for Eq. (7). To overcome this problem, we
can also use the desirability function to transfer the different outputs and assume the controllable factors to be coded
in the [-1, 1] range so that the outputs and the controllable factor regions may be restricted in scale [0, 1] and [-1, 1],
respectively. Next, the optimization calculation uses the trust-region algorithm to solve the process recipe ( xt ) (see
e.g., Yamashita and Yabe, 1987; and Nash and Sofer, 1996). The constrained optimization problem, with respect to
the MIMO control system, is described as follows:
Minimize J t

Subject to

Cost Function

(8)

-1 d xi ,t d 1 (i 1, , p )

where xt is restricted in the operational region of controllable variables ( -1 d xi d 1 (i 1, , p ) ). The system then
uses the RLS estimation with a cost function to calculate the controllable variables adjustment ( xt ) and fine-tune
the process parameters.
2.2. Fault diagnosis and defining
In this section, the WSSR and JAA are used to detect and define the process fault. The WSSR concept was
introduced for detecting faults in the control system. The WSSR Theorem by Willsky (see Willsky, 1976; and
Tzafestas and Watanbe, 1990)ʿ used to detect faults, is one of the simplest methods. This method is based on the
residual sequence that can be described as:
et

Yt - Yˆt

(9)

1320

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

In the above equation, Yt is the process output vector and Yˆt is the predicted output vector. If the process is
operating normally, the innovation process is a zero mean of white noise with the covariance matrix Rt . Thus, the
WSSR can be defined as follows:
t

-1
¦ etcRt et ˁ ʳ

Nn

(10)

j=t-n+1

Eq. (10) is a chi-squared random variable with n u p degrees of freedom, where p = dim [Yt ] . When a fault occurs,
the statistical properties of et are changed and the detection rule for failure can be formulated as:
­>[  Fault
Nn = ®
¯d [  No Fault

(11)

In Eq. (11) a chi-squared table may be applied that makes it possible to decide the probability of a fault having
occurred; it is related to the length of the innovation window and the decision threshold [ . The window length is a
trade-off between the false probability and the missed alarm. When the length of the window is increased, the
probability of correct detection decreases because the effect of a fault will be smoothed out. Therefore, the [ is a
key value for evaluating the process fault.
When a process fault can be found correctly, the system then uses the JAA to define the faulty type. If a fault
signature can be obtained from information from the control system via a mechanistic model, or historical fault data,
then a fault vector for the ith fault can be decomposed using the PCA model (see Yoon and MacGregor, 2001; and
Du et al., 2007) into two components: one ( ˆf i ) lying in the model space and the other ( fi ) lying in the residual
space, as follows:
fi

ˆf  f
i
i

Cf i  (I - C ) f i

(12)

In Eq. (12), these vector components are normalized to be insensitive to their magnitudes. This can be expressed as:
fi 0

fi

fi , ˆf i 0

ˆf
i

ˆf
i

(13)

where fi 0 and ˆf i 0 are assumed z 0. A fault signature library consists of all known fault signature vectors
( i =1, 2, ,r ), described as:
Fˆ = ¬ª ˆf10 ˆf 20  ˆf r0 ¼º , F = ª¬ f10 f20  fr0 º¼

(14)

In Eq. (14), two fault signature matrices include all known fault information in both the modeled and non-modeled
spaces about the r faults.
According to the above concept, if the control system generates a fault, then a new measurement vector of
controllable factor ( X new ) can be used for the fault isolation. Now, using the different vector between the
controllable factor levels (recipe) and the measurement of controllable factors ( d0 X estimation - X new ) that can
execute the angle analysis, the above different vector is normalized as follows:
u0

d0

d0

(15)

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

1321

The angle measures between the known fault signatures ( Fˆ and F ) and the different vector ( u0 ) are used for the
fault definition. The cosine value between the new different vector and one of the known fault signatures gives the
relative measure of colinearity between them. For example, the angle measure in the residual space is:
cos T1 =u 0c f10 (-1 d u 0c f10 d 1)

(16)

where u0 and f10 are the normalized residual components of the different vector and the known fault signature for
variable x1 , respectively. If the cosine value is close to one, it means that the different vector is nearly collinear to
the fault direction. Thus, once the WSSR detects a fault, the fault can be isolated using the maximum among the row
vector cosine components. It can be described as follows:
max (u 0c F )= max ª¬ u 0c f10 u 0c f20  u 0c fr0 º¼ .
i

i

(17)

2.3. Executing the system control and diagnosing the process fault
Assume that the linear MIMO model is adequate to describe the process situation. Thus, Eqns. (1) and (2) are
taken as the real process model and the predicted model, respectively. In this study the MIMO self-tuning control is
first implemented that applies Eqns. (3)-(6) to estimate and to update the process parameters for the next run. Using
the updating process model, the optimum recipe (or the controllable factors) can be solved via Eq. (8).
If the control system generates a fault, the function of the fault detection in the system will be started for
detecting and diagnosing the fault signature. In this paper, the WSSR method in Eq. (11) is used for detecting the
system fault. If trace(N )>[ , this tells us that the system has generated a significant fault. The system then uses Eq.
(16) to calculate the cosine value and applies Eq. (17) to define the faulty controllable factor. In contrast, when the
system does not determine an explicit factor fault, this indicates that the control model has changed and induces an
inferior control performance. To settle the problem of model change, in this study, the on-line experimental manner
is applied so that the system can quickly obtain an appropriate control model (Jen and Jiang, 2008).
n

3. Simulation study

3.1. Case study for chemical-mechanical polishing (CMP) process
In this case study, the CMP process uses models from an experiment on a CMP tool (see Del Castillo and Yeh,
1998; Jen et al., 2004; Fan and Lin, 2007; and Jen and Jiang, 2008). To execute a more effective control and detect
the process faults, the three significant variables were selected using experimental and analysis screening; the three
controllable variables considered in this CMP simulation were: back pressure downforce ( x1 ), platen speed ( x2 ),
and slurry concentration ( x3 ). Moreover, in order to evaluate the system detection and the resultant quality, two
responses were measured: removal rate ( y1 ) and within-wafer standard deviation ( y2 ). In this CMP case, the target
values of two responses were set at y1 2200 and y2 400 and constraints were set at y1 ! 2000 , y2  500 , and
1 d xi d 1 .

1322

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

Fig. 2. A CMP process (refer to Jen and Jiang 2008 and Moyne et al. 2001)

The following equipment model is assumed to control the different process models. Thus, the initial model is
described as follows:
y1,t =2500+400x1,t-1 +500x2 ,t-1 -100x3 ,t-1 -7t c
y2,t =600+50x1,t-1 +100x2 ,t-1 -100x3 ,t-1 +3t c

(18)

where t c (t  53 ) 52 , implying that the age of the polishing pad is from 1 to 105 wafers; afterwards, a new pad is
substituted. The simulation procedure employed Eq. (18) to control a real process as in Eq. (19):
y1,t =2500+E11 x1,t-1 +E12 x2 ,t-1 -E13 x3 ,t-1 -G1t c +H 1,t

y2,t =600+E 21 x1,t-1 +E 22 x2 ,t-1 -E 23 x3 ,t-1 +G 2 t c +H 2,t

(19)

In Eq. (19), the process was assumed to exhibit a tendency effect. To evaluate the influences of process parameters
on system faults, the MIMO self-tuning control was used to implement a simulation case for illustrating the process
of three inputs. In this case, G c =[G1 , G 2 ] is simulated from 0.1J to 1.5J (herein J c =[-7, 3] ), and T =[2200, 400]c . In
addition, the residual vector İt =(İ1,t , İ2 ,t )c assumed that İ1,t ~ N (0, 602 ) and İ2, t ~ N (0, 302 ) . The real gains
( E11 , E12 , E13 , E 21 , E 22 , E 23 ) are assumed to be equal to the gains of the control model as in Eq. (18). When the
system simulation started, the RLS estimations in Eqns. (3) ~ (6) were calculated first; then Eqns. (7) and (8) were
used to solve the controllable variable adjustment. The control system then was assumed to generate a significant
fault from the different controllable variables. Herein, the self-tuning control was implemented so that the system
fault was generated on the 100th run. In addition, in this simulation, we assume that between the estimated recipe
X estimation and the actual recipe X new a slight difference of d0 and d0 ~ N (0, 0.012 ) is exhibited. Because this
simulated case has only three controllable variables, the faulty signatures can be defined as: f10 =[1, 0, 0]c ,
f20 =[0, 1, 0]c and f30 =[0, 0, 1]c . To evaluate the performances of WSSR and JAA, the fault in each controllable
variable was simulated based on the simulation results of 200 runs each and 200 simulation cycles, as well as the

1323

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

performance statistics, including: the fault rate, Type I error and Type ҈ error. Tables 1-3 show the simulation
results returned by using the MIMO self-tuning controller under the influences of deterministic drifts and modelmismatches.
Table 1. The performance of WSSR detection

G uJ

The fault rate

Type I error

Type II error

0.1

0.047

0

0.047

0.3

0.026

0

0.026

0.5

0.013

0

0.013

0.7

0.010

0

0.010

0.9

0

0

0

1.1

0

0

0

1.3

0.004

0.004

0

1.5

0.008

0.008

0

Table 2. The performance of JAA judgment for three controllable factors

G uJ

Total fault rate

x1 fault rate

x 2 fault rate

x 3 fault rate

0.1

0.075

0.035

0.025

0.015

0.3

0.045

0.02

0.015

0.01

0.5

0.04

0.02

0.01

0.01

0.7

0.015

0.005

0.01

0

0.9

0.005

0

0.005

0

1.1

0

0

0

0

1.3

0

0

0

0

1.5

0

0

0

0

Table 3. The performance of WSSR detection ( įJ

9

E 11 400

E 21 50

E 12 500

0.5 u J ) with the process generated model-mismatch ( 9

E 13 100

0.5 ~ 3 )

The fault rate

Type I error

Type II error

0.5

0.41

0

0.41

E 22 100

E 23 100

1

0.39

0

0.39

1.5

0.25

0.01

0.24

3

0.02

0.02

0

In Table 1, the WSSR method used the sum of residual vectors from five runs to evaluate the system faults. If
N n ! [ ( 10Vˆ H 1  10Vˆ H 2 ) , that represents that the system has generated an obvious fault. In terms of simulation
results, we find that the WSSR is indeed able to achieve the effect of fault detection when the control system
generates an obvious breakdown from the different controllable variables. In particular, the detection system uses
the WSSR method that also exhibits increasingly excellent evaluation performances when the process has a higher
deterministic drift. If the control system has been judged to exhibit a fault, the system then uses JAA to define the
faulty variable. Table 2 shows that, regardless of the degree of change of the deterministic drift, the JAA can still
maintain a superior performance for evaluating the fault of controllable variables. Using the results from Table 2, we
found that if the process exhibits more and more intense drift effect, using JAA slightly increases the accuracy rate.

1324

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

In addition, results in Table 3 ( 9 0.5 ~ 3 , 9 E11 400 E12 500 E13 100 E 21 50 E 22 100 E 23 100 ) show
that WSSR has an inferior detection performance for judging the changes of a process model (model-mismatch).
The primary reason is that the self-tuning control exhibits a robust model control. Therefore, even if there is some
difference exhibited between the real process model and the control model, the controller can still compensate for
the effect of such a model-mismatch. On the other hand, if the system merely uses the process outputs to evaluate
process change, it also seems to lack a more sensitive judgment. Based on this inference, if the WSSR detects a
system fault for the model-mismatch, this also implies that the process model generates a greater change that will
seriously affect the control quality. Next, the process model changing from a first-order model to a second-order
model can be simulated and illustrated for verifying the necessity of an updating model. In the initial stage, the
system uses the control model in Eq. (18) to control the CMP process. When the polish pad is switched, it also
indicates that the process model has undergone a greater change that will be modified to a new model, as in Eq. (20):
y1,t =2500+400x1,t-1 +500x2 ,t-1 -100x3 ,t-1 -800x12,t 1 -200x22,t 1 +1000x32,t 1 -40x1,t 1 x2 ,t 1 -100x1,t 1 x3 ,t 1 -350x2 ,t 1 x3 ,t 1 -7t c +H1,t
y2,t =600+50x1,t-1 +100x2 ,t-1 -100x3 ,t-1 -200x12,t 1 -50x22,t 1 +300x32,t 1 -30x1,t 1 x2 ,t 1 -100x1,t 1 x3 ,t 1 -100x2 ,t 1 x3 ,t 1 +3t c+H 2 ,t

(20)

Herein, a MIMO process is simulated that undergoes a process change from a first-order model to a second-order
model. Table 4 shows that the proposed control system has better performance than a pure self-tuning control does.
The proposed system uses the WSSR method, which can detect exactly when the self-tuning control does not
compensate for the situation (e.g. the process undergoes a greater change). Moreover, using an on-line experiment to
update the process model is also an essential procedure for the process change. Because the procedure not only can
obtain a nearer real model but also avoid the uncontrolled situation using the above simulation, the proposed system
should be able to satisfy the feasibility in practical application for detecting system faults.

Table 4. Simulation results comparison for CMP process when the process model has changed.

y1

y2

V y1

V y2

x1

x2

x3

V x1

V x2

V x3

A pure selftuning control

2210.4

443.61

241.63

103.64

-0.95

0.45

0.87

0.32

0.73

0.24

The proposed
system

2198.1

409.12

64.12

50.24

0.98

-0.41

0.55

0.0012

0.08

0.021

Scenario

4. Conclusion

This paper proposed a novel control framework for detecting system faults and defined the faulty types. The
novel control system combines the R2R self-tuning control, WSSR and JAA methods. This control system first uses
WSSR for detecting whether the process has generated a system fault. If the control system is found to have
exhibited a significant fault, the system then applies JAA to define the faulty controllable factor. On the other hand,
if the JAA does not define an explicit fault, that would be deemed as process model changes. The system then
applies the on-line experiment with response surface modeling to renew the control model. The RLS algorithm in
the control system then executes a parameter estimation and solves the optimum recipe for achieving a robust

Chih-Hung Jen et al. / Procedia Computer Science 4 (2011) 1316–1325

1325

control performance. Using the results from the process simulation, the findings of this research can be summarized
as follows:
z If a MIMO dynamic process exhibits more intense variation and drift, the WSSR method is more easily used
and it can also obtain superior detection performance.
z When the system executes the WSSR method, the [ is a key value. If the length of the window is increased,
the probability of correct detection will be decreased. Therefore, the [ may be reasonably determined to be
able to strengthen the judgment of the system fault.
z Using JAA, the faulty controllable factor can be more easily operated and the system faults can also obtain
more accurate diagnosis and definition.
z If JAA does not define an obvious faulty factor, then it can be looked upon as a changed control model. In this
study, the on-line experimental method could be used to update the control model so that the control system can
grasp the process dynamic changes.
In conclusion, a practical case study for the CMP process was utilized for illustrating the proposed methodology.
Using the simulation results, the proposed control system can be exact in achieving the expected performance for
detecting and defining the system faults. This also demonstrates the feasibility of the proposed system and that it can
also be more effectively executed by the MIMO dynamic process.

Acknowledgements

Research was supported by the National Science Council of Taiwan, Project Number NSC 99–2221-E-262–008.

References
1. S. W. Butler and J. A. Stefani, Supervisory run-to-run control of a polysilicon gate etch using in-situ ellipsonmetry, IEEE Transactions on
Semiconductor Manufacturing, 7, (1994), 193-201.
2. D. W. Clarke and P. J. Gawthrop, Self-tuning control. IEE Proceedings-D, 126, (1979), 633-640.
3. E. Del Castillo and A. M. Hurwitz, Run-to-run process control: literature review and extension, Journal of Quality Technology, 29, (1997),
184-196.
4. E. Del Castillo and Jinn-Yi. Yeh, An adaptive run-to-run optimizing controller for linear and nonlinear semiconductor processes, IEEE
Transactions on Semiconductor Manufacturing, 11, (1998), 285-295.
5. E. Del Castillo, A multivariate self-tuning controller for run-to-run process control under shift and trend disturbances, IIE Transactions, 28,
(1996),1011-1021.
6. Z. Du, X. Jin, and L. Wu, Fault detection and diagnosis based on improved PCA with JAA method in VAV systems, Building and Environment,
42, (2007), 3221-3232.
7. S. K. Fan and Y. Lin, Multiple-input dual-output adjustment scheme for semiconductor manufacturing processes using a dynamic dualresponse approach, European Journal of Operational Research, 180, (2007), 868-884.
8. S. K. Fan, B. C. Jiang, C. H. Jen, and C. C. Wang, SISO run-to-run feedback controller using triple EWMA smoothing for semiconductor
manufacturing processes, International Journal of Production Research, 40, (2002), 3093-3120.
9. A. Ingolfsson and E. Sachs, Stability and sensitivity of an EWMA controller, Journal of Quality Technology, 25, (1993), 271-287.
10. C. H. Jen and B. C. Jiang, Combining on-line experiment and process control methods for changes in a dynamic model, International Journal
of Production Research, 46, (2008), 3665-3685.
11. C. H. Jen, B. C. Jiang, and S. K. Fan, General run-to-run (R2R) control framework using self-tuning control for multiple-input multipleoutput (MIMO) processes, International Journal of Production Research, 42, (2004), 4249-4270.
12. J. Moyne, E. Del Castillo and A. M. Hurwitz, Run-to-run control in semiconductor Manufacturing, Boca Raton, FL: CRC Press (2001).
13. S. G. Nash and A. Sofer, Linear and nonlinear programming (New York: McGraw-Hill) (1996).
14. N. S. Patel and S. T. Jenkins, Adaptive optimization of run-to-run controllers: the EWMA example, IEEE Transactions on Semiconductor
Manufacturing, 13, (2000), 97-107.
15. T. H. Smith and D. S. Boning, Run by run advanced process control of metal sputter deposition, IEEE Transactions on Semiconductor
Manufacturing, 11, (1998), 276-284.
16. S. Tzafestas and K. Watanabe, Modern approaches to system/sensor fault detection and diagnosis, Journal A, 31, (1990), 42-57.
17. A. S. Willsky, A survey of design methods for failure detection in dynamic systems, Automatica, 12, (1976), 601-611.
18. H. Yamashita and H. Yabe, Superlinear and quadratic convergence of some primal-dual interior point methods for constrained optimization,
Mathematical Programming, 75, (1987), 377-397.
19. S. Yoon, and J. F. MacGregor, Fault diagnosis with multivariate statistical models part ҇: using steady state fault signatures, Journal of
Process Control, 11, (2001), 387-400.

