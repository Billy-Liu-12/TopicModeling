Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 781–790

Stochastic Droplet-Fiber Collisions
Simon Schr¨odera , Ferdinand Olawskyb , Martin Hering-Bertramc , Hans Hagena
a Computer

Graphics and HCI Group, University of Kaiserslautern, Germany
Institute for Industrial Mathematics ITWM, Kaiserslautern, Germany
c Department of Technology and Bionics, Rhine-Waal University of Applied Sciences, Germany
b Fraunhofer

Abstract
We present a novel method to simulate ﬁbers in ﬂows transporting droplets. We discuss how to model the collisions
of droplets and ﬁbers. Since droplet-ﬁber collision is computationally expensive we use a new stochastic approach
modeling the collision probability of droplets and ﬁbers. From a continuous spatial distribution of the particle masses
we can calculate the impact on a speciﬁc ﬁber at any arbitrary point. This gives an average mass and momentum of
the droplets which is transferred to the ﬁber. We integrate our model in a ﬁber dynamics simulation tool (FIDYST)
used to simulate industrial manufacturing processes.
Keywords: ﬂow simulation, ﬁber, droplet, particles, stochastic process, collision

1. Introduction
Simulation of industrial production processes is still an open problem in many application areas. In this paper
we show fundamental work for simulation of interaction between droplets and ﬁbers in an air ﬂow. Commonly,
an air ﬂow is used to inﬂuence the ﬁbers’ movements and the pattern how they arrange themselves on the ground.
E. g. in production processes of glass wool some binder has to be injected as droplets. Having a simulation for this
production process provides a way to plan new production machines or to improve existing ones. Simulating diﬀerent
conﬁgurations is less expensive than modifying and testing existing machines.
Up to this point, separate research has been done in each area. First of all, there is our own simulation tool
FIDYST1 (Fiber Dynamics Simulation Tool) from the Fraunhofer ITWM2 for simulation of ﬁbers in an air ﬂow. The
ﬂow simulation is done with ANSYS FLUENT and then used as input for FIDYST. Further, there is an old model
for droplet simulation by O’Rourke [1] and some enhancements to this model (cf. [2, 3, 4]). We use FLUENT for a
combined ﬂow-droplet simulation which employs the original model of O’Rourke.
There is also some basic research of droplet-ﬁber interaction for stationary ﬁbers, e. g. wires. Most papers on this
topic discuss the shape of droplets on ﬁbers or the droplet’s behavior while interacting with the ﬁber (cf. [5, 6, 7, 8, 9]).
But, there is no research on interaction of droplets with multiple moving ﬁbers.
Email addresses: simon.schroeder@itwm.fraunhofer.de (Simon Schr¨oder), ferdinand.olawsky@itwm.fraunhofer.de
(Ferdinand Olawsky), Martin.Hering-Bertram@hochschule-rhein-waal.de (Martin Hering-Bertram), hagen@informatik.uni-kl.de
(Hans Hagen)
1 http://www.itwm.fraunhofer.de/en/departments/transport-processes/products/fidyst-fiber-dynamics-simulation-tool.
html
2 http://www.itwm.fraunhofer.de/en/

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.083

782

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

In this paper, we will provide a new model for simulation of ﬁbers and droplets in an air ﬂow. A simple approach
would simulate each droplet and each ﬁber separately, calculating their collisions geometrically. But, even when
using an accelerating structure like an octree or kd-tree this approach would be computationally expensive. Instead,
we calculate a collision probability based on a spatial particle density distribution. The ﬁbers are still fully simulated
as their visualization is important for improvement of production processes.
In section 2 we introduce existing work related to our algorithm. This mainly includes the models for droplet
collisions and the ﬁber model used in FIDYST. In the following section, the ﬁber model is extended to describe
collisions of droplets with ﬁbers. Section 4 describes the simplest simulation of droplets and ﬁbers where we have
a constant droplet density distribution. Additionally, throughout the paper we assume a constant velocity of the ﬂow
and the particles in the whole domain. In section 5 we lift the restriction on the constant particle density. As a
consequence, it must be possible to evaluate the particle density at each point in space individually. This is ensured
by resampling the particle information on a regular grid. In the sections 6 and 7 we discuss the error of our algorithm
to explicit calculations and the application of this algorithm in FIDYST. Finally, we discuss our method and suggest
areas for further research.
2. State of the Art
2.1. Models
There are some models we need in order to describe our droplets and ﬁbers. Here, we discuss existing models.
The droplet model was suggested by O’Rourke [1] and is commonly used to calculate collisions in spray simulations.
For the simulation of the ﬁbers in the ﬂow a simple line strip model is used. Data such as mass, velocity, radius, etc.
is given at each sampling point of the line.
2.1.1. Droplet Model
O’Rourke’s droplet model dates back to 1981 and tries to be computationally feasible in calculating droplet collisions. This model is still commonly used in spray simulations. In order to get a signiﬁcant simulation of particles,
one would have to inject thousands of particles in each timestep. But, it is too expensive to calculate collisions in such
a model.
Instead, O’Rourke suggested computational particles which were later named parcels. A parcel represents several
particles with similar properties, like position, velocity, density, mass, temperature, etc. These parcels are used in
particle simulation to calculate their collisions and the interaction with the ﬂow. We will shortly discuss the particle
collision model in the following.
O’Rourke’s model restricts particle collisions to parcels in the same comput ational grid cell with the cell volume
V. As an example, we consider two parcels P1 and P2 . Imagine P1 to contain the larger particles called collector
drops. Particles in P2 are still called droplets. When a collision occurs the smaller droplets are collected by the bigger
collector drops. Suppose, that the parcels P1 and P2 contain n1 and n2 particles respectively, and the relative velocity
between the two parcels is vrel . For a ﬁxed timestep Δt there is the following average of droplets colliding with a
single collector drop:
n2 π (r1 + r2 )2 vrel Δt
.
(1)
n¯ =
V
Visually, the collision volume, which is the numerator of the fraction above, is a cylinder (see ﬁgure 1).
2.1.2. Line Strip Fiber Model
This model describes a ﬁber as a set of points forming a line strip. By this approach the ﬁber is discretized with
a ﬁne resolution. Each of the points holds information about the radius rF , its discretization length l, its density F ,
the velocity vF including the direction, and several other properties. According to internal and external forces, the
position and velocity are updated in every timestep of the simulation (see ﬁgure 2). This is described by the governing
system of partial diﬀerential equations used in FIDYST:
ω∂tt x(s, t) =∂ s (T (s, t)∂ s x(s, t)) − S b ∂ ssss x(s, t) + f gravity (s, t) + f air (s, t) + f contact (s, t)
∂ s x(s, t) =1

∀t ≥ 0.

(2)
(3)

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

Vcoll

r1 + r 2

783

r2

vrel Δt

air
contact

r1
gravity

Figure 2: Line strip model for ﬁbers and external
forces inﬂuencing the ﬁber.

Figure 1: Collision probability of
two droplets described by their collision volume Vcoll . The larger collector drop p1 captures the droplet
p2 .

The function parameters s and t are the ﬁber parametrization and the time respectively. On the right hand side of
the ﬁrst equation (2), the ﬁrst two terms describe internal forces due to the tractive force T and the bending stiﬀness
S b . The last three terms represent the external forces like gravity and air drag. The second equation (3) requires the
inextensibility of the ﬁber. The impact of droplets on the ﬁber will be represented in the contact forces f contact . While
the internal forces are discretized with higher order ﬁnite diﬀerences the contact models consider the ﬁber as a line
strip. Further information on the equations can be found in [10], [11], and [12].
As this model does not include information for collisions with particles it is extended in the following.
3. Stochastic Droplet-Fiber Collision Model
Similarly as in the droplet model by O’Rourke, we model the collision volume of a droplet and a ﬁber – more
precisely of a droplet and a linear segment of our ﬁber model.
3.1. Collision Volume
Fiber and droplet can only collide when they are close enough and their relative movement intersects within the
time interval Δt. This results in a rectangle with side lengths l and 2 · rF + r p as a basis for the box (see ﬁgure 3).
Intuitively, this rectangle will be orthogonal to the plane spanned by the ﬁber discretization l and the relative
velocity vrel between the droplet and the ﬁber. Hence, the normal of the rectangle is denoted by n:
n=

(l × vrel ) × l
.
(l × vrel ) × l

(4)

The height of the box is the path vrel · Δt projected to n. Thus, the height equals vrel Δt · n.
Putting everything together the formula for the collision volume reads:
Vcoll = vrel ·

(l × vrel ) × l
(l × vrel ) × l

· Δt · l · 2 · rF + r p .

(5)

4. Collision Modeling for Constant Droplet Density Distribution
In this simple model we require that the particle density is constant over the whole domain. The particle density
is deﬁned as the sum over all particles in an area times their masses m(r p ). This restriction on constant particle density
will help evaluating the new formula with a simple example.

784

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790
1.0

0.8

vrel

0.6

ﬁber segment

0.4

vrel Δtn

0.2

2(rF + r p )

l

0.002

Figure 3: Collision volume of a ﬁber and a
droplet.

0.001

0.000

0.001

0.002

Figure 4: Gaussian used for MLS with
n particles = 1000, and r p = 10−5 m.

4.1. Collision Probability
First, we deﬁne the collision probability:
Pc (r) = vrel ·

(l × vrel ) × l
(l × vrel ) × l

· Δt · l · 2 · (rF + r) ·

m(r)

(6)

with m(r) being the mass of a particle with radius r (there is a direct correlation between the mass and the radius by
the formula m(r) = p 34 πr3p as the density of a particle is assumed to be constant). The ﬁrst part of the equation is
the collision volume Vcoll as described by equation (5). The second term m(r) describes the number of particles per
volume.
In this case, r is a variable which can be any possible particle radius. The distribution of diﬀerent radii is given by
a probability density function Pr (r) satisfying Pr (r)dr = 1.
4.2. Calculation of Mass and Momentum
Since we are interested in the impact of particles on ﬁbers, we need to calculate their momentum which will be
transferred during a collision. As for the momentum I holds that
I = mcoll · v

(7)

and we required the velocity v of the particle to be ﬁxed, only the transferred mass has to be calculated in this case.
Given the collision probability Pc (r) and the radius distribution Pr (r), we ﬁnd the following to hold:
mcoll =

Pc (r) · Pr (r) · m(r)

(8)

dr.

In all cases, integration will be over the whole range of r which basically means integration from −∞ to +∞. Inserting
the collision probability of equation (6) into equation (8) we get the following result:
mcoll =

vrel · n Δt l 2 (rF + r)

= vrel · n · Δt · l · 2 · ·
= vrel · n · Δt · l · 2 · · rF

·

m(r)

Pr (r) · (rF + r) dr
Pr (r)dr +

= vrel · n · Δt · l · 2 · · (rF + μ) .
where μ denotes the expected value for r.

· Pr (r) · m(r)dr

Pr (r) · rdr
(9)

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

785

In our case, we only have a discrete represention of particles and hence there is only a discrete radius distribution.
Therefore, the expected value is described by
1
μ=
ni ri
(10)
n i
with n the total number of particels and ni the number of particles with the same radius ri .
5. Collision Modeling with Varying Droplet Density
Getting a step closer to real simulation, we allow for a varying particle density. This may be inﬂuenced either by
droplets with diﬀerent radii or by an inhomogeneous spatial distribution of the droplets. To be compatible with the
current implementation of the ﬁber simulation in FIDYST the particle density information and the expected value for
the radius should be available on a regular grid. Thus, this information has to be extracted from the particle simulation
for every grid point.
5.1. Density Grid Generation from Parcels
In the particle simulation droplets are injected as parcels in several particle streams. Each stream has its own
injection position, but they are far away from each other compared to the particle’s radius. Therefore we need to
calculate each parcel’s inﬂuence to each grid point. The simple approach where a parcel inﬂuences only one grid
point leads to aliasing artifacts. Hence, we look for a solution where the parcels inﬂuence more grid points such that
the result is smoother.
In this paper we use a moving least squares (MLS) approach in which each parcel scatters its inﬂuence according
to a bell curve. Additionally, the parcel’s movement is also taken into account.
Unfortunately, O’Rourke’s droplet model does not describe the spacial extent of the parcel. Thus, we need to
deﬁne reasonable properties which are used in the MLS. First of all, MLS calculates a value v at a speciﬁc position p
by
ω( p − pi ) · f .
(11)
v=
i

f is a function value at point p which in this case are the parameters describing the inﬂuence on the particle density.
The point pi are all grid points, and ω(·) is a weighting function dependent on the distance between the points p and
pi . Here, we use a truncated gaussian (see ﬁgure 4):
ω(d) = exp −α

d2
− exp(−α).
r2

(12)

α and r are the parameters which have to be chosen for our purposes. r is the maximum radius where ω(r) = 0.
Outside this radius we set ω(·) to zero.
5.1.1. Determination of the Minimum and Maximum Range of Inﬂuence
Assuming a very sparse distribution of particles inside a parcel we choose the maximum radius to be
rmax = r p · n particles .

(13)

There has also to be a minimum radius where all particles are optimally packed inside a spherical representation of
the parcel. According to the circle packing problem in 2D the volume fraction of equally sized small circles to one
big circle is 2 √π 3 . Correspondingly in 3D, this volume fraction equals √π18 . Throughout this paper we consider only
the two-dimensional case, but with this knowledge all formulas can be generalized for three dimensions.
With this information we can establish an equation for the minimum radius:
π
2
.
(14)
n particles · πr2p = √ πrmin
2 3
Solving this equation for rmin leads to
√
2 3
2
rmin = n particles · r p ·
.
(15)
π
Obviously, the inﬂuence of the parcel cannot be smaller than rmin .

786

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

5 cm
injection range: -2.49 cm to +2.49 cm

max radius
old

inﬂection point

7 cm

min radius
vrel

3 cm

y
new
x
Figure 5: Inﬂuence of a moving parcel on
surrounding grid points.

Figure 6: Simulation setting in 2d showing the simulation range, the injection range
and the ﬁber described as circle.

5.1.2. Identiﬁcation of the Parameter α
Since our parameter r is ﬁxed to be rmax , only the parameter α can determine the inﬂuence of the particle. One
way to do this is to ﬁx the inﬂection point of the bell curve. For this, we calculate the root of the second derivative of
ω(d) and get:
rmax
(16)
d=±√ .
2α
Now, we have to set the inﬂection point such that the main inﬂuence is inside the minimum radius rmin . Testing
has shown that locating the inﬂection point directly at rmin does not give satisfactory results. The reason for this could
be that the minimum and maximum radius diﬀer largely in their magnitude. Accounting for this, the inﬂection point
should be between these two values (see ﬁgure 5). This leads the following new equation:
rmax
κrmax + (1 − κ)rmin = √ .
2α
Solving this for α gives
α=

2
rmax
.
2 · (κrmax + (1 − κ)rmin )2

(17)

(18)

In the examples we used κ = 2.5% as testing showed this to be a good choice.
5.1.3. Minimal Particle Distance
Because the particle is moving we have to take care of this, too. For this, we introduce a distance function based
on the particle’s path and a grid point:
dist pg (λ) = (p + λΔtv) − g
(19)
with p the particle’s position, g the grid point, v the particles velocity, and therefore Δtv the travelled length in this
timestep. Together with the parameter λ the ﬁrst term describes a straight line.
In a ﬁrst step, we determine the minimal distance satisfying
min dist pg (λ) < rmax .

(20)

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

787

The λ for this can be obtained by setting the ﬁrst derivative to zero. The formula for the minimial distance in the
two-dimensional case then reads
v x Δt (g x − p x ) + vy Δt gy − py
.
(21)
λmin =
2
(v x Δt)2 + vy Δt
If λmin ≥ r the inﬂuence of this particular particle to the grid point g is zero, and thus we do not need to continue the
calculation.
5.1.4. Finding the Integration Range
In a next step, we calculate the intersections of the distance function with the maximum radius by solving the
equation
!
(22)
dist pg (λ) = rmax .
We set λ1 and λ2 to these intersection points with λ1 < λ2 and restrict these to the range [0, 1]. The impact of a particle
with position p to a grid point gi is then calculated by integratian over the path:
ωi =

λ2
λ1

ω dist pg (λ) dλ.

(23)

5.1.5. Calculating a Parcel’s Inﬂuence
From these ωi we can calculate weights wi for each grid point. E. g. if a parcel has mass m then the mass in the
grid point gi would be wi m. Certainly, it must hold that i wi = 1 as we have to ensure that i wi m = m. This is
guaranteed by setting
ωi
(24)
wi =
j ωj
where j sums over all grid points inﬂuenced by the particle i.
Then, the mass of one parcel in a grid point is calculated by
mi = wi · n particles · m p

(25)

with n particles the number of particles in this particular parcel. We sum this information over all particles. For better
results, we use the particle information from several timesteps. But, only the average mass in one timestep is of
interest. Thus, this value has to be divided by the number of timesteps which is calculated by tmaxΔt−tmin . tmax and tmin
represent the maximum and minimum simulation time, respectivly. Finally, we can calculate the particle density in a
grid point by
mi
(26)
=
h
·
h
· tmaxΔt−tmin
x
y
i
with h x and hy being the discretization step size of our grid in x- and y-direction.
Similarly, we can calculate the average radius μ in each grid point. With this, we can bilinearly – trilinearly in 3D
– interpolate these values for any arbitrary point inside our grid. Then, the interpolated density and radius μ can be
used with the formulas from section 4 to calculate collisions of droplets with ﬁbers.
6. Evaluation
In this section we compare some simulation results with other approaches. We changed all parameters in our
simulation several times. But, in this paper we only show common properties of all tests by using results which have
the most prominent manifestations of these features. More peculiarities are not found.
All test cases are done in 2D as this is suﬃcient for signiﬁcant comparisons. The simulation takes place in a
rectangular area with x ∈ [−2.5 cm, +2.5 cm] and y ∈ [0 cm, 7 cm] (see ﬁgure 6). The ﬁber is described by a circle with
its center at (0 cm, 3 cm) and a radius r = 1 cm if nothing else is mentioned.

788

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

1.4e-10

0.04
algebraic
formula
grid 100x100
grid 50x50
geometric

Mass [kg]

1.36e-10
1.34e-10
1.32e-10
1.3e-10

0.03
0.025
0.02
0.015
0.01

1.28e-10

0.005

1.26e-10
500

formula
grid 100x100
grid 50x50
geometric

0.035
Relative Error

1.38e-10

450

400

350

300

250

200

150

100

0
500

50

450

400

350

Number of Streams

300

250

200

150

100

50

Number of Streams

(a) Mass hitting the ﬁber.

(b) Relative error of the diﬀerent methods.

Figure 7: Injection of particles with constant ﬂow rate but variable number of streams.

4.5e-10

0.05
algebraic
formula
grid
geometric

Mass [kg]

3.5e-10
3e-10

formula
grid
geometric

0.04
Relative Error

4e-10

2.5e-10
2e-10
1.5e-10
1e-10

0.03
0.02
0.01

5e-11
0

0
0

2

4

6

8

10

Particles per Parcel

(a) Mass hitting the ﬁber.

12

14

16

0

100

200

300

400

500

600

700

800

900 1000

Particles per Parcel

(b) Relative error of the diﬀerent methods.

Figure 8: Injecting particles with diﬀerent ﬂow rates controlling the number of particles per parcel. 100 streams and
a grid with 100x100 points are used.
For the geometric calculation of collisions we count the particles hitting the ﬁber per timestep and multiply with
their mass. This provides us with the mass per timestep colliding with the ﬁber. Since we ﬁxed the velocity this is all
the information we need to calculate the momentum transferred from particles to the ﬁber.
At ﬁrst, we do some tests for the ﬁrst model as described in section 4. In the ﬁrst test we ﬁx the total ﬂow rate of
all streams and vary the number of particle streams (see ﬁgure 7). This results in 1-10 particles per parcel. Calculating
the actual particle density and using this value with our formula eq. (9) we get a relative error of 1‰. We can also
see that the density grid’s resolution has an impact on the error, and that the accuracy for the algorithm calculating
collisions geometrically decreases for fewer particles per parcel.
The next test still uses constant density investigating the inﬂuence of the number of particles per parcles on the
result (see ﬁgure 8). As before, the relative error of our formula is still 1‰. Additionally, we ﬁnd that the relative
error of the geometric method is approximately 2.8% in all cases. Between 700 and 800 particles per parcels the mass
of the grid method becomes larger than the correct value for the ﬁrst time. This increases the error for our formula
from this point on.
In the following we take a look at simulations with varying droplet density. This is achieved by randomly changing
the particles radii at injection. The ﬁrst example (see ﬁgure 9) shows only few particles per parcel (6-100) with
200 particle streams to demonstrate the drawbacks of the geometric method. First, there is the staged line for the
geometric method (see ﬁgure 9(a)). While changing the ﬁber radius additional particle streams hit the ﬁber only at
certain intervals. Another disadvantage of the geometric method is that for small ﬁber radii the impact is always
zero. Instead, our approach “extrapolates” for small radii. Looking at the error diagrams we see that the relative error
decreases while the absolute error increases. But, as we know from ﬁgure 8(b) the geometric method has an error on
its own. Accounting for this the error for our approach will be even less.
In addition, we found the resolution of the underlying density grid having an impact on the precision of the
result (see ﬁgure 10). Accounting for the error found in ﬁgure 8(b) we lowered the values for the adjusted geometric
calculation accordingly. The diagrams here show a smoothed version of the relative error demonstrating the trend.

789

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

1.8e-10

0.7
grid
geometric
Relative Error

Mass [kg]

1.8e-11
grid vs. geometric
linear trendline

0.6

1.4e-10
1.2e-10
1e-10
8e-11
6e-11

0.5
0.4
0.3
0.2

4e-11

0.1

2e-11

0

0

-0.1
0.0002 0.0004 0.0006 0.0008 0.001 0.0012 0.0014 0.0016 0.0018 0.002
Fiber Radius

grid-geometric
linear trendline

1.6e-11
Absolute Error [kg]

1.6e-10

1.4e-11
1.2e-11
1e-11
8e-12
6e-12
4e-12
2e-12
0

0.0002 0.0004 0.0006 0.0008 0.001 0.0012 0.0014 0.0016 0.0018 0.002
Fiber Radius

(a) Mass hitting the ﬁber.

0.0002 0.0004 0.0006 0.0008 0.001 0.0012 0.0014 0.0016 0.0018 0.002
Fiber Radius

(b) Relative Error.

(c) Absolute Error.

Figure 9: Simulation of 200 particle streams on a 100x100 grid with only about 6-100 particles per parcel. The
diagrams show the impact of changing the ﬁber radius.

0.3

0.045
100x100 grid vs. geometric
250x250 grid vs. geometric
100x100 grid vs. adjusted geom.
250x250 grid vs. adjusted geom.

0.2

100x100 grid vs. geometric
250x250 grid vs. geometric
100x100 grid vs. adjusted geom.
250x250 grid vs. adjusted geom.

0.04
0.035
Relative Error

Relative Error

0.25

0.15
0.1

0.03
0.025
0.02
0.015
0.01

0.05

0.005

0
0.002

0.004

0.006
0.008
Fiber Radius

0.01

0.012

0.014

(a) Full diagram.

0
0.004

0.006

0.008

0.01
Fiber Radius

0.012

0.014

(b) Close-up for relevant details.

Figure 10: Comparing smoothed results for diﬀerent grid resolutions. The adjusted geometric approach takes into
account that itself has an error of approximately 2.8%.
The actual error is more jagged and alternates around this curve.
7. Results
The simulation is implemented in our ﬁber simulation tool FIDYST. An example output from a simulation can be
seen in ﬁgure 11.
In this example droplets are simulated using Fluent. They are injected as parcels from the upper right corner using
ﬁve particle streams with a spray angle depicted by the two green lines. The red grid is the grid used for the simulation
and for the interpolation of the particle density. Hence, grid nodes outside the spray cone can have a droplet count
diﬀerent from zero. Fibers are injected from the upper left corner using four streams and no air drag is used. We can
clearly see the change in the ﬁbers’ direction due to the droplets and the increase of the ﬁber mass shown by their
color.
8. Conclusion and Future Work
We introduced a robust algorithm for modeling of droplet-ﬁber collisions. Using a reasonable number of parcels
for the simulation of our droplets our approach provides even better results than a geometric simulation for small
ﬁber radii because of the discrete nature of the geometric approach. Instead, our density grid provides continuous
information about particles by means of interpolation.
There are some limitations of our approach. First, we restricted the ﬂow and the particles to have constant velocity on the whole domain. This restriction has to be lifted because in real production process the air ﬂow includes
turbulences. A further limitation may be that we get only the expected value of the mass and momentum from our
calculation. This means that in every simulation step the collision will occur with the expected mass and momentum
transferred to the ﬁber. This can be enhanced by introducing a probability distribution allowing to vary the collision
probability. The last drawback is that the collision probability is not changed anywhere after a collision occured.
Intuitively, after a droplet hit a ﬁber its path should be discontinued and the droplet should not have an impact on a
ﬁber anymore. It has to be investigated if this is a problem or if it is save to make our simpliﬁed assumption.

790

Simon Schröder et al. / Procedia Computer Science 4 (2011) 781–790

Figure 11: Simulation output from FIDYST (post-processed with ParaView). sigma is the mass per ﬁber segment
length.
9. Acknowlegdements
This research has been supported by the Innovationszentrum Applied System Modeling which is funded by the
Technische Universit¨at Kaiserslautern (University of Kaiserslautern), the Fraunhofer-Gesellschaft, and the German
Federal Land Rheinland-Pfalz (Rhineland-Palatinate).
[1] P. J. O’Rourke, Collective drop eﬀects on vaporizing liquid sprays, Ph.D. thesis, Los Alamos National Lab, New Mexico (November 1981).
[2] G. H. Ko, H. S. Ryou, Droplet collision processes in an inter-spray impingement system, Journal of Aerosol Science 36 (11) (2005) 1300–
1321. doi:DOI: 10.1016/j.jaerosci.2005.02.005.
URL http://www.sciencedirect.com/science/article/B6V6B-4FTS33Y-2/2/e43fa978e084cefcc664baed9998b902
[3] G. H. Ko, H. S. Ryou, Modeling of droplet collision-induced breakup process, International Journal of Multiphase Flow 31 (6) (2005) 723–
738. doi:DOI: 10.1016/j.ijmultiphaseﬂow.2005.02.004.
URL http://www.sciencedirect.com/science/article/B6V45-4FX23NX-1/2/0360ab6dae53960d6524103ae21cc677
[4] S. Kim, D. J. Lee, C. S. Lee, Modeling of binary droplet collisions for application to inter-impingement sprays, International Journal of
Multiphase Flow 35 (6) (2009) 533–549. doi:DOI: 10.1016/j.ijmultiphaseﬂow.2009.02.010.
URL http://www.sciencedirect.com/science/article/B6V45-4VPM5HT-5/2/1e3eebe2ad7017253883bb59e290cf65
´ Lorenceau, D. Qu´er´e, Drops impacting inclined ﬁbers, Journal of Colloid and Interface Science 334 (1) (2009)
[5] K. Piroird, C. Clanet, E.
70–74. doi:DOI: 10.1016/j.jcis.2009.03.004.
URL http://www.sciencedirect.com/science/article/B6WHR-4VY2C94-9/2/147cdf646a5697967b48c7e5fc5e64a5
´ Lorenceau, C. Clanet, D. Qu´er´e, Capturing drops with a thin ﬁber, Journal of Colloid and Interface Science 279 (1) (2004) 192–197.
[6] E.
doi:DOI: 10.1016/j.jcis.2004.06.054.
URL http://www.sciencedirect.com/science/article/B6WHR-4CXTW75-2/2/424a5e2197e6d3c192b80a4c264e7bf6
[7] L. S. Hung, S. C. Yao, Experimental investigation of the impaction of water droplets on cylindrical objects, International Journal of Multiphase
Flow 25 (8) (1999) 1545–1559. doi:DOI: 10.1016/S0301-9322(98)00085-8.
URL http://www.sciencedirect.com/science/article/B6V45-3YB1RG0-2/2/8f145d0437f7b126ef2ea1f9a1df1257
[8] S. Dawar, G. Chase, Drag correlation for axial motion of drops on ﬁbers, Separation and Puriﬁcation Technology 60 (1) (2008) 6–13. doi:DOI:
10.1016/j.seppur.2007.07.027.
URL http://www.sciencedirect.com/science/article/B6THJ-4P778B1-K/2/ab5aa8a937a7f52411be27433612fd89
[9] G. McHale, M. I. Newton, Global geometry and the equilibrium shapes of liquid drops on ﬁbers, Colloids and Surfaces A: Physicochemical
and Engineering Aspects 206 (1-3) (2002) 79–86. doi:DOI: 10.1016/S0927-7757(02)00081-X.
URL http://www.sciencedirect.com/science/article/B6TFR-45DF869-8/2/c8d47f05c9123837f3da5b10d2bdbe14
[10] N. Marheineke, R. Wegener, Fiber dynamics in turbulent ﬂows: General modeling framework, SIAM Journal on Applied Mathematics 66 (5)
(2006) 1703–1726. doi:10.1137/050637182.
URL http://link.aip.org/link/?SMM/66/1703/1
[11] A. Klar, N. Marheineke, R. Wegener, Hierarchy of mathematical models for production processes of technical textiles, ZAMM - Journal of
Applied Mathematics and Mechanics 89 (2009) 941–961. doi:DOI: 10.1002/zamm.200900282.
[12] N. Marheineke, R. Wegener, Modeling and application of a stochastic drag for ﬁbers in turbulent ﬂows, International Journal of Multiphase
Flow In Press, Corrected Proof (2010) –. doi:DOI: 10.1016/j.ijmultiphaseﬂow.2010.10.001.
URL http://www.sciencedirect.com/science/article/B6V45-51726WP-2/2/47eb35982e5c2746aae60eb35620ec3e

