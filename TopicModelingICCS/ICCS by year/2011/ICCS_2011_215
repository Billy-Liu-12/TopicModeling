Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 292–301

International Conference on Computational Science, ICCS 2011

An Alternating Mesh Quality Metric Scheme for Eﬃcient Mesh
Quality Improvement✩
Jeonghyung Parka , Suzanne M. Shontza,∗
a Department of Computer Science and Engineering,
The Pennsylvania State University, University Park, PA, 16802

Abstract
In the numerical solution of partial diﬀerential equations (PDEs), high-quality meshes are crucial for the stability,
accuracy, and convergence of the associated PDE solver. Mesh quality improvement is often performed to improve
the quality of meshes before use in numerical solution of the PDE. Mesh smoothing (performed via optimization) is
one popular technique for improving the mesh quality; it does so by making adjustments to the vertex locations. When
an ineﬃcient mesh quality metric is used to design the optimization problem, and hence also to measure the mesh
quality within the optimization procedure, convergence of the optimization method can be much slower than desired.
However, for many applications, the choice of mesh quality metric and the optimization problem should be considered
ﬁxed. In this paper, we propose a simple mesh quality metric alternation scheme for use in the mesh optimization
process. The idea is to alternate the use of the original ineﬃcient mesh quality metric with a more eﬃcient mesh
quality metric on alternate iterations of the mesh optimization procedure in order to reduce the time to convergence,
while solving the original mesh quality improvement problem. Typical results of using our application scheme to
solve mesh quality improvement problems yield approximately 40-55% improvement in comparison to the original
mesh optimization procedure. More frequent use of the eﬃcient metric results in greater speed-ups.
Keywords: mesh quality improvement, mesh optimization, quality metric

1. Introduction
High-quality meshes are essential in the numerical solution of partial diﬀerential equations (PDEs) which arise in
various science and engineering applications. In particular, the quality of the mesh has been shown to signiﬁcantly
impact the accuracy, stability, and convergence of the associated PDE solver. It is known that well-shaped elements
are necessary for good numerical behavior of the PDE solver; even a few poorly-shaped elements can cause signiﬁcant
diﬃculty. Thus, mesh quality improvement is often applied before numerical solution of the PDE.
There are three main types of mesh quality improvement techniques: adaptivity [1, 2], smoothing [3, 4], and
swapping [5, 6]. In mesh smoothing, the vertex coordinates are altered without changing the connectivity of the
✩ This

work was funded in part by NSF grant CNS 0720947.
author
Email addresses: jxp975@cse.psu.edu (Jeonghyung Park), shontz@cse.psu.edu (Suzanne M. Shontz)

∗ Corresponding

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.031

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

293

vertices. Optimization techniques (e.g., [7, 8, 9, 10, 11]) are typically used for the mesh smoothing process. When an
optimization method is employed, an objective function which measures the overall mesh quality is designed. Hence,
the choice of the mesh quality metric signiﬁcantly aﬀects the performance of the optimization method. In addition,
the use of various mesh quality metrics and objective functions yields diﬀerent ﬁnal meshes.
There are numerous mesh quality metrics which have been proposed in the literature (e.g., [12, 13]). The use of
several of the mesh quality metrics in an optimization procedure yield rather similar meshes, especially when meshes
with isotropic elements are the goal. However, the amount of time required by the optimization solver depends
signiﬁcantly on the choice of metric. In particular, the use of an ineﬃcient mesh quality metric can signiﬁcantly
increase the time to convergence of the optimization method when accurate mesh smoothing is desired.
One way to reduce the execution time of the optimization method would be to create a new optimization problem
which employs a more eﬃcient mesh quality metric. However, for many applications, the choice of mesh quality
metric and the optimization problem should be considered ﬁxed, as diﬀerent element shapes are desirable for solving
diﬀerent PDEs.
Instead of changing the mesh optimization problem, we propose a simple mesh quality metric alternation scheme
for use in the mesh optimization process. The idea is to alternate the use of the original, ineﬃcient mesh quality metric
with a more eﬃcient mesh quality metric on alternate iterations of the mesh optimization procedure in order to reduce
the time to convergence, while solving the original mesh quality improvement problem. Such a technique has the
potential to make a signiﬁcant impact on mesh optimization for problems in science and engineering where very large
meshes and long optimization times are typical. For such applications, inaccurate mesh smoothing (corresponding to
just a few iterations of smoothing) is currently used as an alternative to long optimization times, whereas additional
mesh smoothing is desired.
2. Mesh Quality Improvement via Quality Metric Alternation
2.1. Quality Improvement Problem
The objective function used in this paper is
f (x) =

1
q2 ,
n 1≤i≤n i

(1)

where f is the overall mesh quality as measured by the average quality of the mesh elements, qi is the quality of
element i, and n is the number of mesh elements. The objective function is minimized, as lower values of qi denote
better quality elements for the metrics we employ.
When optimizing the mesh, the boundary vertices are held ﬁxed, i.e., xvB = xvB , where xvB are the boundary vertex
coordinates. In addition, the initial meshes and subsequent meshes cannot contain any inverted elements. We employ
a local implementation of the feasible Newton solver [8] in order to minimize (1).
2.2. Mesh Quality Metric Alternation
We propose a mesh quality metric alternation scheme for the solution of (1) whereby an ineﬃcient metric (in
the original optimization problem) is combined with a more eﬃcient metric. The metrics are applied in an alternate
fashion every other iteration. For example, alteration scheme A+B would use metric A on odd iterations and metric
B on even iterations to perform the mesh optimization. However, metric A is always used to test for convergence
of the method on each method, as the goal of the optimization is to minimize (1) as deﬁned according to A. Hence,
the goal of using scheme A+B is simply to improve the time to convergence (and not to change the optimization
problem being solved). An important question considered in this paper is which metrics can be combined to create
eﬀective alternation schemes for mesh optimization? Clearly, the choice of metrics signiﬁcantly impacts the time to
convergence.
Table 1 shows ﬁve common mesh quality metrics used for mesh optimization: edge ratio [12], area [14], edge root
mean square [12], inverse mean ratio [8], and aspect ratio [15]. Here L12 , L23 , and L13 are the lengths of the three
edges in the triangle; Lmin and Lmax are the minimum and maximum edge lengths; S is the element’s area; A is the
Jacobian matrix for the physical triangle, and W is a Jacobian matrix for the reference triangle. The ranges of mesh

294

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

quality metrics are: 1 to ∞ for EDGE, RMS, IMR, and AR, and 0 to ∞ for AREA. The ideal element of our mesh
optimization problem is an equilateral triangle; hence lower values of the quality metrics yield meshes with better
quality and it is appropriate to minimize (1).
Table 1: The mesh quality metric deﬁnitions
Quality Metric
edge ratio (EDGE)
area (AREA)

Formula
Lmin /Lmax
S cur − S avg
2
2
2
+ L13
+ L23
L12
/3

edge root mean square (RMS)
inverse mean ratio (IMR)
aspect ratio (AR)

AW −1 2F / 2 det(AW −1 )
√
2
2
2
/12S i
3 L12
+ L13
+ L23

We propose six mesh quality metric alternations based upon these metrics: EDGE+IMR, AREA+IMR, RMS+IMR,
EDGE+AR, AREA+AR, and RMS+AR, because the IMR and AR mesh quality metrics are faster than the EDGE,
AREA, and RMS mesh quality metrics when used for mesh optimization.
There are many types of convergence criterion that can be applied for mesh optimization using the above mesh
alternation schemes. For our purposes, convergence of the optimization scheme is said to occur when the optimization
procedure has progressed at least 95% of the way to the desired level of mesh quality, i.e., when
finitial − fcurrent > 0.95( finitial − fdesired ),

(2)

where finitial is the mesh quality of the initial input mesh, fcurrent is the mesh quality of the current iteration, and fdesired
is the goal mesh quality. For our experiments, the desired quality, fdesired , is set to the quality of the fully converged
local optimal solution.
3. Numerical Experiments
To determine the impact of mesh quality alternation on the optimization process, we tested the six mesh quality
metric alternations described above. Coarse approximations to the actual 2D meshes used in our experiments are
shown in Figure 1. The meshes were generated by Triangle [16]. The interior mesh vertices were perturbed in order
to design more challenging test cases. Table 2 gives their conﬁgurations. The feasible Newton method in the Mesh
Quality Improvement Toolkit (Mesquite) Version 2.1.1 [17] was employed for our experiments. (Similar trends were
observed when other solvers, e.g., quasi-Newton, were used to minimize (1).) The Mesquite code was modiﬁed to
incorporate the alternation of the mesh quality metrics on every other iteration. The Solaris machine employed for the
experiments was an UltraSPARC-III CPU with a 750MHz processor, 1GB SDRAM of memory, and 8MB L2 cache.
Table 2: The test mesh conﬁgurations
name
airplane
duck
ﬁsh
hand
mechanic
twoholes

# of vertices
72205
62372
57575
68807
69904
56088

# of elements
143205
123904
114546
136419
138610
111537

The goal of our experiment is to determine the impact that mesh quality metric alternation has on the time efﬁciency of the optimization procedure when used to minimize (1). The alternation schemes considered in this experiment are: EDGE+IMR, AREA+IMR, RMS+IMR, EDGE+AR, AREA+AR, and RMS+AR. These schemes are

295

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

(a) airplane

(b) duck

(c) ﬁsh

(d) hand

(e) mechanic

(f) twoholes

Figure 1: 2D meshes generated by Triangle [16]. These meshes are coarser, representative versions of the meshes
used in the experiments.
designed to reduce the convergence time of the optimization solver when the EDGE, AREA, or RMS metrics are used
to deﬁne (1).
Figure 2 shows the convergence history of the EDGE+IMR alternation scheme in comparison with the convergence histories of the EDGE and IMR schemes when used to optimize the quality of three test meshes. The three
optimization schemes showed similar convergence trends on the various input meshes. The ﬁgure demonstrates that
the EDGE+IMR metric was successful in reducing the convergence time over the corresponding EDGE solver by
approximately 50% when (1) was minimized according to the EDGE metric. This reduction in time was possible
through the alternation scheme since the IMR optimization solver demonstrated a much faster time to convergence
did than the EDGE solver because it took less time per iteration.
Table 3 shows the total time required for mesh quality metric alternation with the EDGE and RMS metrics used as
the base metrics. For the EDGE+IMR alternation scheme, the percentage reduction in the total time when compared
with the original EDGE solver was: 54.7% for the airplane mesh, 52.9% for the duck mesh, 53% for the ﬁsh mesh,
52.9% for the hand mesh, 40% for the mechanic mesh, and 53.3% for the twoholes mesh. Here, the more eﬃcient
IMR metric, when used in combination with the less eﬃcient EDGE metric, resulted in a faster solver than the EDGE
solver. By combining two metrics, the convergence time can be reduced without altering the original optimization
problem.
For the other combinations of quality metrics, alternation was also beneﬁcial in reducing the time to convergence
over the original optimization solver (based on the EDGE or RMS mesh quality metrics) in each case. At least 40%
improvement was obtained via metric alternation. Such a reduction was possible because optimization with the IMR
and AR mesh quality metrics was faster than optimization with either the EDGE and RMS mesh quality metrics. In

296

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

Mesh quality vs. time

Mesh quality vs. time

1.05
1.045

1.05
1.045

1000

2000 3000
time (secs)

1.04
0

4000

Mesh quality vs. time

1.05

500
1000
time (sec)

1.04
0

1500

500

1.045

Mesh quality vs. time

EDGE_IMR
EDGE_ONLY
IMR_ONLY

1.05
1.045

500
1000
time (sec)

1500

1.04
0

2000

1.06

Mesh quality

Mesh quality

1.05

1.055

1000 1500
time (secs)
(c) ﬁsh

Mesh quality vs. time

EDGE_IMR
EDGE_ONLY
IMR_ONLY

(d) hand

1.055

1.045

1.06

1.055

EDGE_IMR
EDGE_ONLY
IMR_ONLY

(b) duck

1.06

Mesh quality

EDGE_IMR
EDGE_ONLY
IMR_ONLY

1.055

(a) airplane

1.04
0

1.06

Mesh quality

EDGE_IMR
EDGE_ONLY
IMR_ONLY

1.055

1.04
0

Mesh quality vs. time

1.06

Mesh quality

Mesh quality

1.06

EDGE_IMR
EDGE_ONLY
IMR_ONLY

1.055
1.05
1.045

1000
2000
time (secs)
(e) mechanic

3000

1.04
0

200

400 600
time (sec)

800

1000

(f) twoholes

Figure 2: Mesh quality vs. time plots for EDGE+IMR mesh quality metric alternation test. The plots are zoomed
in and show only the convergence history at the beginning of the optimization. To reduce the convergence time of
the EDGE optimization solver, alternation with the EDGE+IMR alternation scheme for optimization was applied.
Approximately 50% improvement was observed in comparison with the EDGE optimization solver.
particular, mesh optimization with either the EDGE or RMS metrics took approximately 200 times as long to converge
when compared to solvers based on IMR or AR. When the metrics were combined, the average time per iteration in
the mesh quality metric alternation scheme was faster than that for the original scheme. Furthermore, the optimized
meshes obtained via the alternation schemes achieved the desired levels of quality when measured according to the
EDGE and RMS metrics.
The convergence behavior of the EDGE+AR, RMS+IMR, and RMS+AR alternation schemes was similar to that
of the EDGE+IMR alternation scheme as was discussed above. However, two of the alternation schemes studied,
i.e., AREA+IMR and AREA+AR, did not show much diﬀerence in the convergence time when compared with the
other alternation schemes. Figure 3 and Table 4 show the convergence histories and timing results for the AREA+AR
alternation scheme. (For the remainder of the paper, ﬁgures showing the results of optimizing the duck, hand, and
twoholes meshes show similar convergence trends and are omitted due to space constraints.) The convergence times
for the AREA+IMR and AREA+AR schemes were similar to those for the AREA solver. The timing results for the
alternation schemes based on the AREA metric are shown in Table 4.

297

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

Table 3: Timing results for mesh optimization with EDGE and RMS mesh quality metrics and their mesh quality
metric alternations: EDGE+IMR, EDGE+AR, RMS+IMR, and RMS+AR.

airplane
duck
ﬁsh
hand
mechanic
twoholes

EDGE
3399.36
2292.47
1911.24
2867.59
2986.64
1799.52

Total time to convergence (secs)
EDGE+IMR EDGE+AR
RMS
RMS+IMR
1538.69
1625.29
3225.57
1529.34
1077.72
1153.18
2830.56
1091.02
897.54
964.74
1909.88
904.62
1350.37
1429.75
2875.84
1370.29
1412.19
1512.19
3019.28
1424.02
840.54
898.55
1800.32
831.96

Mesh quality vs. time

Mesh quality vs. time

1.05
1.045

1.06
AREA_AR
AREA_ONLY
AR_ONLY

1.055

Mesh quality

AREA_AR
AREA_ONLY
AR_ONLY

1.055

1.04
0

Mesh quality vs. time

1.06

Mesh quality

Mesh quality

1.06

1.05
1.045

10
20
time (secs)
(a) airplane

30

1.04
0

RMS+AR
1620.61
1147.5
965.22
1451.6
1506.85
916.27

AREA_AR
AREA_ONLY
AR_ONLY

1.055
1.05
1.045

5

10
15
time (secs)
(b) ﬁsh

20

25

1.04
0

10
20
time (secs)

30

(c) mechanic

Figure 3: Mesh quality vs. time plots for AREA+AR mesh quality metric alternation test. The plots are zoomed in
and show only the convergence history at the beginning of the optimization. To improve the time eﬃciency of mesh
optimization process with AREA mesh quality metric, AR mesh quality metric was combined.
The convergence times of the AREA+AR alternation scheme were very similar to those of the AREA solver. In
particular, speed-ups of only 12-13% were observed. The percentage of reduction in the convergence times for the
individual meshes are as follows: 12.9% for the airplane mesh, 13.2% for the duck mesh, 13.1% for the ﬁsh mesh,
12.7% for the hand mesh, 12.4% for the mechanic mesh, and 13% for the twoholes mesh, respectively. The smaller
reductions in the time to convergence were not unexpected, as the AREA and AR optimization solvers only had a 1%
diﬀerence in their times to convergence. This experiment demonstrates that mesh quality metric alternation is more
beneﬁcial when two metrics are combined which correspond to optimization solvers with a large diﬀerence in their
times to convergence. Thus, appropriate selection of mesh quality metrics for the alternation schemes are required.
Figure 4 shows the elemental mesh quality distributions for the mechanic mesh after mesh optimization was
performed with the EDGE+IMR alternation scheme and the EDGE solver. (The distribution for the initial mesh is
also shown for comparison purposes.) Clearly, the optimized meshes which result from the two schemes are somewhat
diﬀerent. In particular, the distribution for the EDGE+IMR mesh has more better quality elements despite the fact
that the two meshes are of similar average quality. The diﬀerence in distributions is due to the two diﬀerent paths that
the optimization routines take to convergence. However, both optimization schemes yielded meshes that are of good
quality and met the requirements for convergence.
The optimized meshes resulting from the other alternation schemes, such as EDGE+AR, RMS+IMR, and
RMS+AR, have similar mesh quality distributions to the EDGE+IMR alternation scheme distribution. However,
mesh optimization with alternation schemes based on the AREA metric showed diﬀerent mesh quality distributions.

298

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

Table 4: Timing results for mesh optimization with the AREA mesh quality metric and its mesh quality metric
alternations AREA+IMR and AREA+AR.

airplane
duck
ﬁsh
hand
mechanic
twoholes

Total time to convergence (secs)
AREA AREA+IMR AREA+AR
28.45
24.02
24.78
24.41
20.52
21.2
22.36
18.68
19.44
26.98
22.8
23.55
27.51
23.27
24.1
21.77
18.22
18.94

Table 5: Total number of iterations and average time per iteration results for mesh quality metric alternations.
(a) EDGE mesh quality metric alternation

EDGE
19
21
16
13
27
26

airplane
duck
ﬁsh
hand
mechanic
twoholes

# of iterations
EDGE+IMR EDGE+AR
19
19
20
20
16
16
13
13
27
27
26
26

average time per iteration (secs)
EDGE
EDGE+IMR EDGE+AR
178.9135
80.98368
85.54158
109.1652
53.886
57.659
119.4525
56.09625
60.29625
220.5838
103.8746
109.9808
110.6163
52.30333
56.0071
69.21231
32.32846
34.55962

(b) RMS mesh quality metric alternation

airplane
duck
ﬁsh
hand
mechanic
twoholes

RMS
22
19
21
17
23
19

# of iterations
RMS+IMR RMS+AR
22
22
19
19
21
21
17
17
23
23
19
19

average time per iteration (secs)
RMS
RMS+IMR RMS+AR
146.6168
69.51545
73.66409
148.9768
57.42211
60.39632
90.94667
43.07714
45.96286
169.1671
80.60529
85.38824
131.273
61.91391
65.51522
94.75368
43.78737
48.22474

(c) AREA mesh quality metric alternation

airplane
duck
ﬁsh
hand
mechanic
twoholes

AREA
20
21
19
16
21
20

# of iterations
AREA+IMR AREA+AR
20
20
21
21
19
19
16
16
21
21
20
20

average time per iteration (secs)
AREA
AREA+IMR AREA+AR
1.4225
1.201
1.239
1.162381
0.977143
1.009524
1.176842
0.983158
1.023158
1.68625
1.425
1.471875
1.31
1.108095
1.147619
1.0885
0.911
0.947

Figure 5 shows the elemental mesh quality distribution for the ﬁsh mesh after optimization was performed via the
AREA+AR scheme. In this case, the meshes optimized by the AREA+AR alternation scheme and the AREA solver
exhibited similar quality distributions.
As the results of the above experiments demonstrate, in order to yield a large reduction in the time to convergence, the mesh quality metric for the optimization solver should be combined with a quality metric for which the
corresponding optimization solver is signiﬁcantly faster to converge. A further reduction in the time to convergence

299

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

4

x 10

Mesh quality distribution

4

x 10

4

x 10

2
1.5
1
0.5
0
0.4

0.6
0.8
Mesh quality

2
1.5
1
0.5
0
0.4

1

Mesh quality distribution

2.5
Number of elements

2.5
Number of elements

Number of elements

2.5

Mesh quality distribution

0.6
0.8
Mesh quality

(a) initial mesh

2
1.5
1
0.5
0
0.4

1

0.6
0.8
Mesh quality

(b) EDGE only

1

(c) EDGE+IMR

Figure 4: Mesh quality distribution (0.4 to 1) of the mechanic mesh (a) before and (b)-(c) after mesh optimization was
performed via the (b) EDGE and (c) EDGE+IMR optimization solvers.
4

x 10

2.5

Number of elements

Number of elements

Mesh quality distribution

2
1.5
1
0.5
0
0.4

0.6
0.8
Mesh quality
(a) initial mesh

1

Mesh quality distribution

4

x 10

2.5

Number of elements

4

x 10

2
1.5
1
0.5
0
0.4

0.6
0.8
Mesh quality
(b) AREA only

1

Mesh quality distribution

2.5
2
1.5
1
0.5
0
0.4

0.6
0.8
Mesh quality

1

(c) AREA+AR

Figure 5: Mesh quality distribution (0.4 to 1) of the ﬁsh mesh (a) before and (b)-(c) after mesh optimization was
performed via the (b) AREA and (c) AREA+AR optimization solvers.
may be possible through an increased frequency in the use of the fast metric in the optimization process. In order to determine whether or not this is true, an experiment with the alternation schemes EDGE+IMR+IMR and
EDGE+IMR+IMR+IMR was performed. Figure 6 shows the convergence histories for these alternation schemes as
applied to three test meshes.
As can be seen in Figure 6, the time to convergence decreased with an increase in frequency of application
of the IMR metric in the alternation scheme. A signiﬁcant reduction in the convergence time was observed when
comparing the results of the EDGE+IMR and EDGE+IMR+IMR alternation schemes. The times to convergence for
the EDGE+IMR+IMR alternation scheme were as follows: 1079.86 seconds for the airplane mesh, 760.63 seconds for
the duck mesh, 640.01 seconds for the ﬁsh mesh, 964.69 seconds for the hand mesh, 1008.43 seconds for the mechanic
mesh, and 597.87 seconds for the twoholes mesh. The corresponding percentage reductions in the optimization time
are as follows: 29.8% for the airplane mesh, 29.3% for the duck mesh, 28.6% for the ﬁsh mesh, 28.5% for the hand
mesh, 28.5% for the mechanic mesh, and 28.8% for the twoholes mesh, respectively. At least a 28% improvement

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

Mesh quality vs. time

Mesh quality

EDGE_IMR
EDGE_IMR_2
EDGE_IMR_3

0.022

10
Mesh quality

Mesh quality vs. time

0.02

10

Mesh quality vs. time

EDGE_IMR
EDGE_IMR_2
EDGE_IMR_3

0.023

10

EDGE_IMR
EDGE_IMR_2
EDGE_IMR_3

0.024

10
Mesh quality

300

0.02

10

0.022

10

0.02

10

0.018

10

0.018

10

0.017

2

10

3

10
time (secs)
(a) airplane

4

10

10

1

10

2

10
time (secs)
(b) ﬁsh

3

10

2

10

3

10
time (secs)

4

10

(c) mechanic

Figure 6: Plots of mesh quality vs. time for the EDGE+IMR alternation scheme with varying frequency of use of the
IMR metric. The plots are zoomed in and show only the convergence history at the beginning of the optimization.
The performance of the EDGE+IMR, EDGE+IMR+IMR, and EDGE+IMR+IMR+IMR schemes was investigated in
this experiment.
in time to convergence over the EDGE+IMR alternation scheme was obtained for the EDGE+IMR+IMR alternation
scheme. Overall, the percentage decrease in the optimization time when using the EDGE+IMR+IMR alternation
scheme instead of the EDGE solver for mesh optimization was approximately 67%.
Further improvement was observed when the EDGE+IMR+IMR+IMR alternation scheme was employed. However, the improvement over the EDGE+IMR+IMR alternation scheme was slightly smaller than the improvement
that was observed between the EDGE+IMR+IMR and EDGE+IMR alternation schemes. The timing results for
the EDGE+IMR+IMR+IMR mesh quality metric alternation were: 789.01 seconds for the airplane mesh, 561.38
seconds for the duck mesh, 473.49 seconds for the ﬁsh mesh, 708.55 seconds for the hand mesh, 740.53 seconds
for the mechanic mesh, and 443.34 seconds for the twoholes mesh. These correspond to the following percentage
reductions in the mesh optimization time: 27% for the airplane mesh, 26% for the duck mesh, 26% for the ﬁsh
mesh, 27% for the hand mesh, 27% for the mechanic mesh, and 25% for the twoholes mesh, respectively. Thus, the
EDGE+IMR+IMR+IMR alternation schemes exhibited a 77% reduction in the time to convergence when compared
with the EDGE optimization solver in the minimization of (1). These results demonstrate that the eﬃcient mesh quality metric can be applied for frequently in a mesh alternation scheme in order to reduce the time to convergence of the
associated optimization solver.
4. Conclusions
The choice of mesh quality metric signiﬁcantly impacts the time to convergence of the mesh optimization technique. In this paper, we proposed a mesh quality metric alternation scheme whereby the original (ineﬃcient) mesh
quality metric was alternated with a more eﬃcient metric on alternate iterations of the optimization procedure. Its
purpose is to reduce the execution time of the optimization solver, while solving the original mesh optimization problem.
Our experimental results show that the majority of mesh quality metric alternation schemes considered required
less time than the original mesh optimization procedure. It was demonstrated that because the IMR and AMR metrics
are more eﬃcient than the EDGE and RMS metrics, the former metrics can be alternated with the latter metrics to
reduce the time to convergence of the original optimization methods with the ineﬃcient metrics. Mesh alternation
schemes applying the EDGE+IMR, EDGE+AR, RMS+IMR, and RMS+AR combinations gave a 40-55% reduction
in the optimization time. Increasing the frequency of the eﬃcient metric further reduced the mesh optimization time.

Jeonghyung Park et al. / Procedia Computer Science 4 (2011) 292–301

301

For example, EDGE+IMR+IMR and EDGE+IMR+IMR+IMR converged faster than EDGE+IMR. The improvement rates from the original EDGE optimization were 67% and 77%, respectively, for the EDGE+IMR+IMR and
EDGE+IMR+IMR+IMR alternation schemes. Alternation based on the AREA metric showed only 12% improvement because optimization involving AREA is not signiﬁcantly slower than that of the more eﬃcient metrics.
In conclusion, alternation of the ineﬃcient metric from the original problem with a more eﬃcient metric on alternate iterations can signiﬁcantly reduce the time of the mesh optimization procedure. The greatest reductions occurred
when two metrics corresponding to optimization solvers with very diﬀerent convergence times were combined. Future
research will focus on determining the optimal combination of quality metrics for a given mesh optimization problem
and how changing the metric can cause a greater reduction in the mesh quality per step.
References
[1] S. Chalasani, D. Thompson, B. Soni, Topological adaptivity for mesh quality improvement, Numerical Grid Generation in Computational
Field Simulations (2002) 107–116.
[2] R. Klein, Star formation with 3-D adaptive mesh reﬁnement: the collapse and fragmentation of molecular clouds, J. Comput. Appl. Math.
109 (1999) 123–152.
[3] L. Freitag, P. Knupp, Tetrahedral element shape optimization via the Jacobian determinant and condition number, in: Proc. of the 8th International Meshing Roundtable, Sandia National Laboratories, 1999, pp. 247–258.
[4] M. B. N. Amenta, D. Eppstein, Optimal point placement for mesh smoothing, in: Proc. of the 8th ACM-SIAM Symposium on Discrete
Algorithms, 1997, pp. 528–537.
[5] L. Freitag, C. Ollivier, Tetrahedral mesh improvement using swapping and smoothing, Int. J. Num. Meth. Eng. 40 (1997) 3979–4002.
[6] B. Joe, Construction of three-dimensional improved-quality triangulations using local transformations, SIAM J. Sci. Comp. 16 (1995) 1292–
1307.
[7] J. Park, S. Shontz, Two derivative-free optimization algorithms for mesh quality improvement, Proc. of the 2010 International Conference on
Computational Science, Procedia Computer Science 1 (2010) 387–396.
[8] T. Munson, Mesh shape-quality optimization using the inverse mean-ratio metric, Math. Program. 110 (2007) 506–590.
[9] L. Freitag, P. Knupp, T. Munson, S. Shontz, A comparison of optimization software for mesh shape-quality improvement problems, in: Proc.
of the 11th International Meshing Roundtable, Sandia National Laboratories, 2002, pp. 29–40.
[10] L. Freitag, P. Plassmann, Local optimization-based simplicial mesh untangling and improvement, Int. J. Numer. Math. Eng. 49 (2000) 109–
125.
[11] V. Parthasarathy, S. Kodiyalam, A constrained optimization approach to ﬁnite element mesh smoothing, Finite Elements in Analysis and
Design 9 (1991) 309–320.
[12] P. Knupp, Algebraic mesh quality metrics, SIAM J. Sci. Comp. 23 (2001) 193–218.
[13] V. Parthasarathy, C. Graichen, A. Hathaway, A comparison of tetrahedron quality measures, Finite Elem. Anal. Des. 15 (1993) 255–261.
[14] K. Wang, M. Marek-Sadowska, Power/ground mesh area optimization using multigrid-based technique, in: DATE ’03: Proceedings of the
Conference on Design, Automation and Test in Europe, IEEE Computer Society, 2003, pp. 850–855.
[15] J. Dompierrre, M. Vallet, P. Labbe, F. Guibault, An analysis of simplex shape measures for anisotropic meshes, Comput. Meth. Appl. Mech.
Eng. 194 (2005) 4895–4914.
[16] J. Shewchuk, Triangle: Engineering a 2D Quality Mesh Generator and Delaunay Triangulator, in: Applied Computational Geometry: Towards
Geometric Engineering, Vol. 1148, Springer-Verlag Lecture Notes in Computer Science, 1996, pp. 203–222.
[17] M. Brewer, L. Freitag, P. Knupp, T. Leurent, D. Melander, The Mesquite Mesh Quality Improvement Toolkit, in: Proc. of the 12th International
Meshing Roundtable, Sandia National Laboratories, 2003, pp. 239–250.

