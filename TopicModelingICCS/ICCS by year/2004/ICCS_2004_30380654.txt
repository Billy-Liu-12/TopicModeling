A Co-evolutionary Multi-agent System for
Multi-modal Function Optimization
Rafal Dre˙zewski
Department of Computer Science
AGH University of Science and Technology, Krak´
ow, Poland
drezew@agh.edu.pl

Abstract. Niching methods for evolutionary algorithms are used in order to locate all desired peaks of multi-modal landscape. Co-evolutionary
techniques are aimed at overcoming limited adaptive capacity of evolutionary algorithms resulting from the loss of useful diversity of population. In this paper the idea of niching co-evolutionary multi-agent system (NCoEMAS) is introduced. In such a system the niche formation
phenomena occurs within one of the preexisting species as a result of coevolutionary interactions. Also, results from runs of NCoEMAS against
Rastrigin function and the comparison to other niching techniques are
presented.

1

Introduction

Terms Evolutionary Computation (EC) and Evolutionary Algorithms (EAs)
cover a wide range of global search and optimization techniques based on analogies to natural evolution. Evolutionary algorithms (EAs) have demonstrated in
practice eﬃciency and robustness as global optimization techniques. However,
they often suﬀer from premature loss of population diversity what results in premature convergence and may lead to locating local optima instead of a global
one. What is more, both the experiments and analysis show that for multi-modal
problem landscapes a simple EA will inevitably locate a single solution [10]. If
we are interested in ﬁnding multiple solutions of comparable ﬁtness, some multimodal function optimization techniques should be used. Niching methods for
EAs [10] are aimed at forming and stably maintaining niches (species) throughout the search process, thereby allowing to identify most of desired peaks of
multi-modal landscape.
The loss of diversity also limits the adaptive capacities of EAs in dynamic
environments. Co-evolutionary techniques are aimed at improving adaptive capacities and introducing open-ended evolution into EAs [11].
This paper introduces the idea of niching co-evolutionary multi-agent system (NCoEMAS), which opens new possibilities of modeling biological speciation mechanisms based on predator-prey and host-parasite co-evolution, sexual
preferences, competition for limited resources, and geographical isolation. Also,
results from runs of sample NCoEMAS against Rastrigin test function are presented and the comparison to other niching techniques is made.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 654–661, 2004.
c Springer-Verlag Berlin Heidelberg 2004

A Co-evolutionary Multi-agent System

2

655

Niching Techniques

Various mechanisms have been proposed to form and stably maintain species
throughout the search process. Most of these techniques allow niche formation
through the implementation of crowding, ﬁtness sharing or some modiﬁcations
of these mechanisms.
In the crowding (CR) technique [5] each generation, a proportion of the population G (generation gap) is selected for reproduction. For each oﬀspring CF
(crowding factor ) individuals are selected at random. The most similar individual, according to a similarity metric, is then replaced by the oﬀspring.
Mahfoud developed niching mechanism called deterministic crowding (DC)
[9]. In his technique children are directly compared to their parents. Parent is
replaced only if the competing child has higher ﬁtness.
Fitness sharing (FS) was ﬁrst introduced by Holland and further developed
by Goldberg and Richardson [7]. In sharing technique each individual is considered to be the center of a niche with radius σsh . Fitness of each individual
is reduced for every other individual, which lives in its niche, in a proportion
fi
to their similarity. The reduced ﬁtness of an individual i is given by fi = m
,
i
where fi is its raw ﬁtness and mi is the niche count. The niche count is given by
n
mi = j=1 sh(dij ), where dij is the distance between individual i and individual
j, determined by a similarity metric. The sharing function is given by
sh(d) =

1 − ( σdsh )α
0

if d < σsh ,
otherwise,

(1)

where α is a constant that regulates the shape of the sharing function (it is
commonly set to 1).
Co-evolutionary shared niching (CSN) technique was developed by Goldberg and Wang [8]. Their technique was inspired by the economic model of
monopolistic competition. The customer population is the usual population of
candidate solutions. The businessman population evolve to obtain largest payoﬀ
(best cover the peaks in multi-modal domain). Customer c is served by businessman b if b is the nearest businessman according to some similarity measure
(Hamming distance of binary strings is used). The modiﬁed customer ﬁtness
f (c)
is f (c) = m
, where Cb,t is the set of customers that are served by
b,t
c∈Cb,t

businessman b at generation t, and mb,t = Cb,t is the number of customers
that businessman b serves at generation t. The modiﬁed businessman ﬁtness is
φ(b) = c∈Cb,t f (c).

3

Previous Research in Co-evolutionary Algorithms

In classical EAs each individual in the population is considered to be a potential
solution of the problem being solved. The ﬁtness of each individual depends
only on how well it solves the problem. Selection pressure causes that better ﬁt

656

R. Dre˙zewski

individuals have the greater chance to survive and/or reproduce and the less ﬁt
ones have the smaller chance.
In co-evolutionary systems the ﬁtness of each individual depends not only
on the quality of solution to the given problem but also on other individuals’
ﬁtness. As the result of ongoing research many co-evolutionary techniques have
been proposed. Generally, each of these techniques belongs to one of two classes:
“Competitive Fitness Functions” (CFF) or multi-population [11].
In CFF based systems two (or more) individuals compete in a game and their
“Competitive Fitness Functions” are calculated based on their relative performance in that game [4]. Each time step given individual competes with diﬀerent
opponents, so its ﬁtness value varies. Because in such systems an individual’s
ﬁtness depends on other individuals’ ﬁtness, they are co-evolutionary in nature.
The second group consists of systems that use multiple populations. In such
systems a problem is decomposed into sub-problems and each of them is then
solved by diﬀerent EA [12]. Each individual is evaluated within a group of randomly chosen individuals coming from diﬀerent sub-populations. Its ﬁtness value
depends on how well the group solved the problem and on how well the individual
assisted in the solution.
Although co-evolutionary techniques are aimed at overcoming limited adaptive capacity of evolutionary algorithms resulting from the loss of useful diversity
of population, they are not very often applied in the ﬁeld of multi-modal optimization. In fact, to our best knowledge, only one niching technique based on
co-evolution was developed (CSN).
In the following sections we will present the idea of co-evolution realized in
multi-agent system, which allows us to deﬁne many co-evolutionary interactions
that exist in nature.

4

The Idea of Co-evolutionary Multi-agent Systems

The main idea of evolutionary multi-agent system (EMAS) is the modeling
of evolution process in multi-agent system (MAS) [3]. Co-evolutionary multiagent system (CoEMAS) allows co-evolution of several species of agents [6].
CoEMAS can be applied, for example, to multi-objective optimization and
multi-modal function optimization (niching co-evolutionary multi-agent system
— NCoEMAS ).
In CoEMAS several (usually two) diﬀerent species co-evolve. One of them
represents solutions. The goal of the second species is to cooperate (or compete)
with the ﬁrst one in order to force the population of solutions to locate Pareto
frontier or proportionally populate and stably maintain niches in multi-modal
domain.
It seems that CoEMAS is especially suited for modeling diﬀerent co-evolutionary interactions (resource competition, predator-prey and host-parasite
co-evolution, sexual preferences, etc.)

A Co-evolutionary Multi-agent System

657

Niche center

Partially
overlapping
niches

Merging
niches

Environment

Splitting
niche

Fig. 1. Niching co-evolutionary multi-agent system used in experiments

5

Sample Niching Co-evolutionary Multi-agent System

In ﬁgure 1 sample co-evolutionary multi-agent system for multi-modal optimization is presented. The topography of environment, in which individuals live, is
graph with every node (place) connected with its four neighbors. Within the environment two co-evolving species: niches and solutions live. There exist resource
in the environment which is given to the niches and then distributed between
solutions, that live within each niche, proportionally to their ﬁtness. The more
solutions live within the niche the more resource is given to it. Every action
(such as migration or reproduction) of individual costs some resource.
Niches can migrate within the environment and all solutions live within
niches. Each time step every solution searches for the niche that is located on the
same peak. Modiﬁed version of hill-valley function [13] is used in order to check
if two individuals are located on the same peak. If there are no niches located on
the same peak, solution creates new niche, which genotype is the copy of its own
genotype (niche is split into two niches). Then each solution searches its niche for
the reproduction partner. Reproduction takes place only when individuals have
enough amount of resource. The genotypes of all individuals are real-valued vectors. Intermediate recombination [2] and mutation with self-adaptation [1] are
used for solutions and special mutation for niches. Each time step the niche’s
genotype is mutated in such a way, that the resulting genotype is the center of
gravity of solutions that belong to the niche (ﬁtness of each individual serves as
a weight value). Niches can merge if they are at the same place and are located
on the same peak in multi-modal domain.
The system was applied to multi-modal function optimization and then compared to other niching techniques.

658

R. Dre˙zewski

Rastrigin

45
40
35
30
25
20
15
10
5
0

2
1.5
1
0.5
-2

0

-1.5
-1

-0.5

-0.5
0

-1

0.5

-1.5

1
1.5

-2

Fig. 2. Rastrigin function

6

Simulation Experiments

First simulation experiments were aimed at testing if NCoEMAS described in
previous section is able to detect and stably maintain most of peaks in multimodal domain throughout the search process. Also, the comparison to other
niching techniques such as DC and FS, and EMAS was made.
6.1

Test Function

In all experiments Rastrigin function was used as the test ﬁtness landscape
(see ﬁg. 2). This is multi-modal function commonly used in studies of niching
methods. Rastrigin function used in experiments is given by
n

10 ∗ n +

(x2i − 10 ∗ cos(2 ∗ π ∗ xi )) xi ∈ [−2.0, 2.0] for i = 1, . . . , n

(2)

i=1

where n is the number of dimensions (n = 2 in all experiments). The function
has 16 maxima for x1 , x2 ∈ [−2.0, 2.0].
6.2

Results

In this section the results from runs of NCoEMAS against Rastrigin function
are presented. Also the comparison to other niching techniques is made.
Figures 3 and 4 show the location of NCoEMAS individuals in ﬁtness landscape during the typical simulation. At the beginning there are only 5 niches
(represented with black circles) and 5 solutions (represented with dots) with
identical genotypes as niches. It can be seen that as the simulation goes on the

A Co-evolutionary Multi-agent System

40
30
20
10

40
30
20
10

2

2

1.5

1.5

1

1

0.5

0.5

0

0

-0.5

-0.5

-1

-1

-1.5
36
34
32
30
28
26
24
22
20
18

-1.5

-2
-2

-1.5

-1

-0.5

0

0.5

1

1.5

659

45
40
35
30
25
20
15
10
5
0

2

-2
-2

-1.5

-1

-0.5

0

0.5

1

1.5

2

b)

a)

Fig. 3. The location of individuals in NCoEMAS during the 0th (a) and 100th (b)
simulation step

40
30
20
10

40
30
20
10
2

2

1.5

1.5

1

1

0.5

0.5

0

0

-0.5

-0.5

-1

-1
-1.5

-1.5
45
40
35
30
25
20
15
10
5

-2
-2

a)

-1.5

-1

-0.5

0

0.5

1

1.5

45
40
35
30
25
20
15
10
5

2

-2
-2

-1.5

-1

-0.5

0

0.5

1

1.5

2

b)

Fig. 4. The location of individuals in NCoEMAS during the 1000th (a) and 5000th (b)
simulation step

individuals reproduce and locate themselves near the centers of peaks in multimodal domain. What is more the subpopulations are stable, and do not disappear throughout the simulation. The population size self-adapts to the number
of peaks in multi-modal domain.
Figure 5 shows the average number of located peaks from 10 simulations. The
peak was classiﬁed as located when there was at least one individual closer than
0.05 to that peak. The experiments was made for four techniques: CoEMAS,
EMAS, DC and FS. Each experiment was carried out with the diﬀerent values
of most important parameters (like initial population size, σsh for FS, etc.)
CoEMAS stood relatively well when compared to other techniques. On the
average, it stably maintained about 15 peaks starting from the smallest population of all techniques (between 5 and 10 individuals). DC started from 300–500
individuals, quickly located the same number of peaks but there was quite strong
tendency to lose almost all peaks during the rest part of simulation. FS technique used almost the same initial population size as DC and detected and stably
maintained about 8–9 peaks on the average. Simple EMAS was not able to stably
populate more than one peak, although it started from much bigger population

660

R. Dre˙zewski

Fig. 5. The average number of detected peaks from 10 simulations

of about 150 individuals. It turned out that in case of multi-modal landscape it
works just like simple EA.
To sum up, simple EMAS can not be applied to multi-modal function optimization without introducing special mechanisms such as co-evolution. FS and
DC have some limitations as niching techniques, for example DC has the strong
tendency to lose peaks during the simulation. The fact of relatively poor performance of DC was also observed in other works [14]. CoEMAS is valid and
promising niching technique but still more research is needed.

7

Concluding Remarks

The idea of co-evolutionary multi-agent system (CoEMAS) allows us to model
many ecological co-evolutionary interactions between species such as resource
competition, predator-prey and host-parasite co-evolution, sexual preferences,
etc.
In this paper sample CoEMAS with two co-evolving species: niches and solutions was presented. This system was applied to multi-modal function optimization. It properly detected and maintained most of the peaks in multi-modal
ﬁtness landscape and, as presented preliminary results show, has proved to be
the valid and promising niching technique. What is more, it turned out that presented system was able to detect and stably maintain more peaks of Rastrigin
function than other classical niching techniques.
Future research will include more detailed comparison to other niching techniques, CoEMAS based on the mechanisms of predator-prey or host-parasite coevolution and sexual preferences. Also the parallel implementation of CoEMAS
using MPI is included in future research plans.

A Co-evolutionary Multi-agent System

661

References
1. T. B¨
ack, D. Fogel, D. Whitley, and P. Angeline. Mutation. In T. B¨
ack, D. Fogel, and
Z. Michalewicz, editors, Handbook of Evolutionary Computation. IOP Publishing
and Oxford University Press, 1997.
2. L. Booker, D. Fogel, D. Whitley, and P. Angeline. Recombination. In T. B¨
ack,
D. Fogel, and Z. Michalewicz, editors, Handbook of Evolutionary Computation. IOP
Publishing and Oxford University Press, 1997.
3. K. Cetnarowicz, M. Kisiel-Dorohinicki, and E. Nawarecki. The application of evolution process in multi-agent world to the prediction system. In Proc. of the 2nd Int.
Conf. on Multi-Agent Systems — ICMAS’96, Osaka, Japan, 1996. AAAI Press.
4. P. J. Darwen and X. Yao. On evolving robust strategies for iterated prisoner’s
dilemma. Lecture Notes in Computer Science, 956, 1995.
5. K. A. De Jong. An analysis of the behavior of a class of genetic adaptive systems.
PhD thesis, University of Michigan, Ann Arbor, Michigan, USA, 1975.
6. R. Dre˙zewski. A model of co-evolution in multi-agent system. In V. Ma˘r´ık,
J. M¨
uller, and M. P˘echouˇcek, editors, Multi-Agent Systems and Applications III,
number 2691 in LNAI, pages 314–323, Berlin, Heidelberg, 2003. Springer-Verlag.
7. D. E. Goldberg and J. Richardson. Genetic algorithms with sharing for multimodal
function optimization. In J. J. Grefenstette, editor, Proc. of the 2nd Int. Conf. on
Genetic Algorithms, Hillsdale, NJ, 1987. Lawrence Erlbaum Associates.
8. D. E. Goldberg and L. Wang. Adaptive niching via coevolutionary sharing. Technical Report IlliGAL 97007, Illinois Genetic Algorithms Laboratory, University of
Illinois at Urbana-Champaign, Urbana, IL, USA, 1997.
9. S. W. Mahfoud. Crowding and preselection revisited. In R. Manner and B. Manderick, editors, Parallel Problem Solving From Nature, 2, Amsterdam, 1992. Elsevier
Science Publishers (North Holland).
10. S. W. Mahfoud. Niching methods for genetic algorithms. PhD thesis, University
of Illinois at Urbana-Champaign, Urbana, IL, USA, 1995.
11. J. Morrison and F. Oppacher. A general model of co-evolution for genetic algorithms. In Int. Conf. on Artiﬁcial Neural Networks and Genetic Algorithms
ICANNGA 99, 1999.
12. M. A. Potter and K. A. De Jong. Cooperative coevolution: An architecture for
evolving coadapted subcomponents. Evolutionary Computation, 8(1), 2000.
13. R. K. Ursem. Multinational evolutionary algorithms. In P. J. Angeline,
Z. Michalewicz, M. Schoenauer, X. Yao, and A. Zalzala, editors, Proceedings of
the Congress on Evolutionary Computation, volume 3, pages 1633–1640, Mayﬂower
Hotel, Washington D.C., USA, 6-9 1999. IEEE Press.
14. J.-P. Watson. A performance assessment of modern niching methods for parameter
optimization problems. In W. Banzhaf, J. Daida, A. E. Eiben, M. H. Garzon,
V. Honavar, M. Jakiela, and R. E. Smith, editors, Proceedings of the Genetic and
Evolutionary Computation Conference, volume 1, pages 702–709, Orlando, Florida,
USA, 13-17 1999. Morgan Kaufmann.

