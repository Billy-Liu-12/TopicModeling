On Highly Secure and Available Data Storage Systems*
Sung Jin Choi1, Hee Yong Youn1, and Hyung Soo Lee2
1 School

of Information and Communications Engineering
Sungkyunkwan University, Suwon, Korea
{choisj, youn}@ece.skku.ac.kr
2 Ubiquitous System Research Center,
Korea Electronics Technology Institute, Pyoungtaek, Korea
hslee@keti.re.kr

Abstract. Rapid technological advances are resulting in a greater use of data
intensive applications. For this reason and that of the alarming growth in electronic crime, security and availability are critical factors that must be considered in designing a system. This paper proposes a novel data dispersal/encryption scheme to improve both the availability and security of distributed storage system by using the Singular Values Decomposition (SVD) theorem. It handles data represented by any size matrix, and it also allows complete
recovery of original data even though stored data are partially damaged. Analysis shows that it improves the availability about 10% compared with an efficient existing scheme for both read and write operation, while it allows secure
storage simultaneously.

1 Introduction
Rapid technological advances are resulting in a greater use of distributed storage
system in world-wide organizations for communication, transport, banking, education, manufacturing, medicine, etc., leading to the handling of large quantities of data
that are especially important for these organizations on many occasions. For this
reason and that of the alarming growth in electronic crime, security becomes a serious
aspect that must be considered specifically for distributed storage system. At the same
time, due to harsh and unpredictable distributed environment, the system needs to be
designed to provide continuous service even in the presence of failures. Indeed, both
security and availability are two important criteria for distributed storage systems [1].
The main issues focused in typical distributed systems including database systems
mainly have been with the following aspects: confidentiality, integrity, and availability. The range of possible threats that affect each one of the three factors is so wide
that they cannot be tackled as a whole. Data distribution is one of the key techniques
developed for achieving a desired level of security and availability, and it involves
data encoding and partitioning algorithm. There exist many such algorithms applicable to distributed storage system including encryption, replication, striping, secret
* This work was supported by 21C Frontier Ubiquitous Computing and Networking, Korea
Research Foundation Grant (KRF - 2003 - 041 - D20421) and Brain Korea 21 Project in
2004. Corresponding author : Hee Yong Youn
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 121–129, 2004.
© Springer-Verlag Berlin Heidelberg 2004

122

S.J. Choi, H.Y. Youn, and H.S. Lee

sharing, and various combinations of them. They offer different levels of performance
(throughput), availability (probability that data can be accessed), and security (effort
required to compromise the confidentiality or integrity of stored data). Development
of new efficient data distribution and protection scheme is inevitable for allowing
highly available but secure system at the same time without significantly affecting the
performance [2].
In distributed storage system security and availability of data are greatly influenced
by the policy how the data are dispersed. High security and availability are usually
conflicting requirement. This paper, however proposes a new scheme that can allow
high security and availability of distributed storage system. It is achieved by using the
SVD theorem which is an important matrix decomposition that applicable to any size
matrix. A scheme targeting the same goal was presented in [3] using matrix eigenvalue. However, it can handle data represented by only square matrix and eigenvalues
are not guaranteed to be found, while the proposed scheme solves both the problems.
It also allows complete recovery of original data even though stored data are partially
damaged. Analysis shows that the availability is improved about 10% compared with
information dispersal scheme, while it allows secure storage since decryption without
the key is absolutely impossible.
The rest of the paper is organized as follows. Section 2 discusses existing approaches for data encryption and distribution, and Section 3 presents the proposed
scheme. Section 4 evaluates and compares the performance of the proposed scheme
with the earlier schemes, and finally concluding remark is given in Section 5.

2 Related Work
There is a wide array of data distribution algorithms including encryption, replication,
striping, erasure-resilient coding, information dispersal, and secret sharing. Threshold
algorithms, characterized by three parameters (p, m, and n), represent a large set of
these algorithms. In a p-m-n threshold scheme, data is encoded into n shares such that
any m of the shares can reconstruct the data and less than p reveal no information
about the encoded data. Thus, a stored value is available if at least m of the n shares
can be retrieved. Attackers must compromise at least p storage nodes before it is even
theoretically possible to determine any part of the encoded data. Table I lists a number of well-known threshold schemes [4].
Table 1. Threshold schemes

p-m-n
1-1-n
1-n-n
n-n-n
1-m-n
m-m-n
p-m-n

Scheme
Replication
Striping
Splitting
Information Dispersal
Secret Sharing
Ramp Schemes

On Highly Secure and Available Data Storage Systems

123

The simplest example of threshold scheme is n-way replication, which is a 1-1-n
threshold scheme. That is, out of the n replicas that are stored, any single replica provides the original data (m = 1), and each replica reveals information about the encoded data (p = 1). Another example is striping (or decimation, as in disk arrays),
wherein a large block of data is partitioned into n sub-blocks, each containing one
partition of the data (so, p = 1 and m = n). At the other end of the example is splitting, an n-n-n threshold scheme that consists of storing n-1 random values and one
value is the exclusive-or of the original value and those n-1 values; p = m = n for
splitting, since all n shares are needed to recover the original data. Replication, decimation, and splitting schemes have a single tunable parameter, n, which affects their
place in the trade-off space. With more mathematics, the full range of p-m-n threshold
schemes becomes available. For example, secret sharing schemes are m-m-n threshold
schemes. Shamir’s implementation of secret sharing is based on interpolating points
on a polynomial in a finite field. The secret values along with m-1 randomly generated values uniquely determine the encoding polynomial of order m-1. Each share is
generated by evaluating the polynomial at distinct points.
Information dispersal algorithm, a 1-m-n threshold scheme, uses the same polynomial based mathematics as Shamir’s secret sharing, but no random number; m secret
values are used to determine the unique encoding polynomial. Thus, each share reveals partial information about the m simultaneously encoded values, but the encoding is much more space efficient. Ramp schemes are p-m-n threshold schemes, and
they can also be implemented with the same approach. The points used to uniquely
determine the encoding polynomial are p-1 random values and m-(p-1) secret values.
Ramp schemes thus theoretically offer confidentiality of up to p-1 shares. They are
also more space efficient than secret sharing (so long as m>p). For p=1, ramp
schemes are equivalent to information dispersal; for p=m, they are equivalent to secret sharing [5].

3 The Proposed Scheme
We first present the theorem and definition required to explain the proposed encryption/dispersal scheme.
3.1 SVD’s Theorem and Singular Values (Finding V, D, and U)
Theorem 1: Let A be an m × n matrix and σ1 ,..., σr be all its nonzero singular values.
Then there are orthogonal matrices U (m × m) and V (n × n) and an m × n matrix D of
the form such that
A = UDV T .

(1)

Proof 1: U, V, and D (of the indicated sizes) have been already explicitly defined.
Moreover, U and V are orthogonal. It remains to show only that A = UDV T . It suffices to show that AV = UD, because V T = V−1 .

124

S.J. Choi, H.Y. Youn, and H.S. Lee

ui =

1
Avi for i = 1,...,r .
σi

(2)

By Eq. (2) σi u i = Avi for i = 1,....,r and ||Avi ||= σ i = 0 for i = r+1,…,n. So,

Avi = 0 for i= r+1,...,n . Therefore,
AV = [Av1
= [u1

Av n ] = [σ1u1
 σ1
σr
u m ] = 
 0

σr u r 0

0]

0


0 

.

(3)

Let A be an n × n matrix. A nonzero vector v is an eigenvector of A if Eq. (4) holds
for some scalarλ. λ is called an eigenvalue of A corresponding to the eigenvector v.
Eigenvalues are also known as characteristic, proper values, or latent roots.
Av = λv .
(4)
We define V, and then find the σi 's along the diagonal of D. Consider the n × n
symmetric matrix A T A . By the spectral theorem, A T A is orthogonally diagonalizable
and has eigenvalues, say λ1 ,..., λ n . Let v1 ,..., v n be the corresponding eigenvectors so
that they form an orthonormal basis of R n . V is simply
V = [v1 v 2 v n ] .

(5)
Next, we observe that all the eigenvalues are nonnegative (so A T A is positive
(A T A)vi = λ i vi
and
|| vi ||=1,
we
have
semidefinite).
Because
0 ≤ ||Avi ||2 = (Avi )T Avi = Vi T A T Avi = vi T λ i vi = λ i ||vi ||2 = λ i . Hence, λ i ≥ 0 for i=1,…,n.

By renumbering, if necessary, we order the λ i values from largest to smallest and take
their

square

roots,

such

that

σ1 = λ1 ≥

≥ σn = λ n ≥ 0 .

So,

σi = ||Avi ||, i = 1,.....,n . The numbers σ1 ,..., σn are called the singular values of A, and

they carry important information on A. These are the diagonal entries of D [6].
3.2 Encryption/Dispersal Scheme
First, we find the singular values of the elements of D. Therefore, we need a general
method for finding eigenvalue and eigenvector by using Eq. (4) and it is the Power
Method. It computes the dominant eigenvalue and an eigenvector corresponding to
the dominant eigenvalue. Without loss of generality, it is necessary to assume that A
has the following two properties:
i. There is a single eigenvalue of maximum modulus.
ii. There is a linearly independent set of n eigenvectors.
According to the first assumption, the eigenvalues can be labeled such that
(1)
λ1 > λ 2 ≥ λ 3 ≥ ≥ λ n . According to the second assumption, there is a basis {u ,
(2)

(n)

n

u ,…,u } for C such that

Au ( j) = λ j u ( j) (1 ≤ j ≤ n) .

(6)

On Highly Secure and Available Data Storage Systems

125

Let x (0) be an element of C n such that when x (0) is expressed as a linear combination of the basis elements u (1) , u (2) ,..., u (n ) , the coefficient of u (1) is not 0. Thus,
x (0) = a1u (1) + a 2 u ( 2) +

+ a n u (n ) (a1 ≠ 0) .

(7)

We form then x (1) =Ax (0) , x (2) =Ax (1) ,L,x (k) =Ax (k-1) to have
x (k ) = A k x (0) .

(8)

In the following analysis there is no loss of generality in absorbing all the coefficients
a j in the vectors u ( j) that they multiply. Hence, we may rewrite Eq. (7) as
x (0) = u (1) + u (2) +

+ u (n ) .

(9)

By this equation and (8), we have x (k) = A k u (1) + A k u (2) +


k

 λ 2  (2)
 u +
 λ1 

arrive at x (k) = λ1k  u (1) + 


+ A k u (n) . Using Eq. (6), we


λ 
+  n  u (n)  . Since λ1 > λ j for 2 ≤ j ≤ n , we

 λ1 

k

k

 λj 
 tend to 0 and the vector within the brackets converges
 λ1 

see that the coefficients 
u (1) as k → ∞.

to
x (k)

To simplify the notation, we write x (k ) in the form
= λ1k  u (1) + ε(k )  , where ε (k) → 0 as k → ∞ . In order to be able to take ratios, let ϕ

be

any

linear

functional

ϕ(x ) = λ  ϕ(u ) + ϕ(ε )  .
(k )

k
1

(1)

λ1 as k → ∞: rk ≡

(k)

Cn

on

for

which

ϕ (u (1) ) ≠ 0 .

Then

Consequently, the following ratios converges to

 ϕ(u (1) ) + ϕ(ε( k +1) ) 
ϕ(x (k +1) )
= λ1 
 → λ1 .
(k)
(1)
(k )
ϕ(x )
 ϕ(u ) + ϕ(ε ) 

This constitutes the Power Method for computing λ1 . Since the direction of the
vector x (k ) aligns more and more with u (1) as k → ∞ , the method can also give us the
eigenvector, u (1) . The eigenvectors found are

v(1) = [ s1

s n ] s n ∈ R, v(2) = [ t1

Therefore,

by

Eq.

(2)

t n ] t n ∈ R, ……, v(n) = [ z1

and

Eq.

(5),

U (U =

zn ] zn ∈ R .

1
A[v (1) v (2)
σi

v (n) ]) and

(10)
V

(V = [v(1) v (2) v(n ) ]) are actually stored data and matrix D consisting of σ becomes
Decryption Key.
 −2 1 2 
T
 , we first calculate A A . Then we
 6 6 3

Example 1: If the original data is A = 

derive λ1 =81, λ 2 = 9, λ 3 = 0 by using Theorem 2. Eigenvectors that correspond to

each λ become [ 2s 2s s ] , [ -2t t 2t ] , [ u -2u 2u ] s,t,u ∈ R . U is calculated by us-

126

S.J. Choi, H.Y. Youn, and H.S. Lee

ing U =

1
A[v (1) v (2)
σi

v (n) ] . The data actually stored in each node and Decryption Key

D and U are as follows. Here s=1, t=2 and u=3 are randomly selected.
0 1 
9 0 0 
Node1= [ 2 2 1] , Node2= [ -4 2 4 ] ,Node3= [3 -6 6 ] , U= 
, D= 


1 0 
0 3 0 
An important property of the proposed scheme is that it allows secret dispersal as a
general threshold scheme and encryption of data at the same time. That is, one cannot
extract original data even though the stored data U and V are available since it is NPhard problem to decide the original matrix using U and V. Refer to the example
above. There exist infinite ways to form V matrix by arbitrarily deciding the s, t, and
u values. As a result, the proposed scheme offers high availability and security as well
as complete recovery of original data even though data are partially damaged.
3.3 Data Recovery Scheme
We next show how the original data is recovered using Gram-Schmidt Process.
Theorem 2: Any subspace W of R n has at least one orthogonal basis and at least one
orthonormal basis. If B = {a1 ,..., a n } is a basis of W, then B' = {b1 ,..., b n } is an orthogonal basis, where
b1 = a1 ,...,b k = a k −

a k ⋅ b1
a ⋅b
b1 − k 2 b 2
b1 ⋅ b1
b2 ⋅ b2

−

a k ⋅ b k −1
b k −1
b k −1 ⋅ b k −1

(11)

Proof 2: An orthonormal Basis B'' is obtained by normalizing B' :
B'' = (

b1
b
,…, k ) .
b1
bk

(12)

Let V (v1 ,..., v n ) be the corresponding eigenvectors, so that they form an orthonormal
n

basis of R . V T is as follows, by Eq. (12).
 v
v 
V T =  1 ... k  .
v
v k 
 1

(13)

Therefore, the original data can be recovered from U, V that were stored in the storage nodes by Eq. (1).
Example 2: We obtain V T using Gram-Schmidt orthonormal Process after reading
the data stored in Node1, Node2 and Node3. Therefore,
v1 =[2, 2, 1], v 2 =[-4, 2, 4], v3 =[3, -6, 6]
V1 =

 2 / 3
 −2 / 3
 1/ 3 
v1
1
v
1
v
1
= v1 =  2 / 3 , V2 = 2 = v 2 =  1/ 3  , V3 = 3 = v 3 =  −2 / 3 ,
|| v1 || 3
|| v 2 || 6
|| v3 || 6
 1/ 3 
 2 / 3 
 2 / 3 

On Highly Secure and Available Data Storage Systems

127

 2 / 3 −2 / 3 1/ 3 
V is  2 / 3 1/ 3 −2 / 3 . We get the original data by equation A = UDV T .
 1/ 3 2 / 3 2 / 3 
T

2/3 −2/3 1/3 
0 19 0 0 
 −2 1 2
1 00 3 0 2/3 1/3 −2/3 =  6 6 3


 1/3 2/3 2/3  




4 Performance Evaluation
Different parameter values for the threshold scheme (i.e. the values of n, m and p)
create a large class of schemes. Each scheme has different property, and the best
scheme needs different parameter values according to the given condition. In order to
select an optimal scheme, we need to be able to evaluate and compare the performance of different schemes. In quantifying the schemes, the primary metric is availability.
Availability is defined as the probability that a file can be accessed at any given
time. With threshold schemes, files are encoded into n shares, of which m or more are
sufficient to fully reconstruct the file. We assume the failures of storage nodes are
independent. The general availability read and write model are
n
n
Availability read = (∑   × p ia × (1 − p a )n −i ) m
i=m  i 
N
 N
Availability write = (∑   × pia × (1 − p a ) N − i )m
i=m  i 

(14)

Here Pa is the node availability, and it is assumed to be 0.9. Also, N = n+1. Figure
1 and 2 show the comparison of read and write availability of the proposed scheme
along with striping and information dispersal scheme. Here up to 100 nodes were
tested. Note that the m value for striping, information dispersal, and proposed scheme
are n, 5, 6, respectively. The figures reveal that the proposed scheme display substantially higher availability than striping while it is consistently better than the information dispersal scheme for about 10% for both read and write operation.
Striping

In fo rmatio n Disp ersal

Pro p osed Scheme

1,00

Strip in g

In formatio n Disp ersal

Pro po sed Sch eme

0,90
0,80
Av aila bility-write

Availability-read

1 ,0 0
0 ,8 0
0 ,6 0
0 ,4 0

0,70
0,60
0,50
0,40
0,30
0,20

0 ,2 0

0,10

0 ,0 0

0,00

10

20

30

40

50

60

70

80

90

99
10

Number of Nodes (n)

Fig. 1. Comparison of read availabilities.

20

30

40

50

60

70

80

90

99

Number of Nodes (n)

Fig. 2. Comparison of write availabilities.

128

S.J. Choi, H.Y. Youn, and H.S. Lee

Figure 3 shows that how availability of the proposed scheme varies as m and n
value change. Form the figure we can see that availability gets higher as m decreases
and n increases.

1 Availability
0,9
0,8
0,7
0,6
0,5
0,4
0,3
0,2
0,1
1 2
3

m

0
4 5

6

7 8

9

10 10

9

8

7

6

5

4

3

2

1

n

Fig. 3. The availability as m changes from 1 to 10

5 Conclusion and Future Work
Most earlier schemes apply data encryption and distribution separately, which result
in some vulnerability and inefficiency. In this paper thus we propose a new approach
which integrates data encryption and distribution process into one process to improve
both the security and availability by using Singular Values Decomposition theorem.
As a result, the proposed scheme offers high availability and security as well as complete recovery of original data even though partial damage occurs to the data. The
proposed scheme can handle data represented by any size matrix, and eigenvalues are
guaranteed to be found. Analysis shows that it improves the availability about 10%
compared with information dispersal scheme for both read and write operation, while
it allows secure storage since decryption without the key is absolutely impossible. A
new model considering not only availability but also security in a more formal way
will be developed.

References
1. Mehmet Bakkaloglu, Jay J. Wylie, Chenxi Wang, Gregory R. Ganger.: On Correlated
Failures in Survivable Storage Systems: School of Computer Science Carnegie Mellon
University, Pittsburgh, PA15213 (2002)
2. Jay J. Wylie, Michael W. Bigrigg, John D. Strunk, Gregory R. Ganger, Han Kiliccote,
Pradeep K. khosla.: Survivable Information Storage systems: IEEE Computer (2000)
3. Sung Jin Choi, Hee Yong Youn, Bo Kyung Lee.: An Efficient Dispersal and Encryption
Scheme for Secure Distributed Information Storage: ICCS2003, LNCS2660, Springer
(2003) 958-967

On Highly Secure and Available Data Storage Systems

129

4. A. De Santis and B. Masucci.: Multiple Ramp Schemes: IEEE Trans. Information Theory
(1999) 1720-1728
5. R. Cannetti, R. Gennaro, S. Jarecki, H. Krawcxyk and T. Rabin.: Adaptive Security for
Threshold Cryptosystems: In Advances in Cryptology-Crypto ’99, LNCS, Springer (1999)
98-115
6. George Nakos, David Joyner.: Linear Algebra with Applications, Brooks/Cole USA (1998)
562-569

