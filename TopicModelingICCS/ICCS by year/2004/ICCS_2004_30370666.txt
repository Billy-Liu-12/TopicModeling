A Hybrid Algorithm Based on PSO and SA and Its
Application for Two-Dimensional Non-guillotine Cutting
Stock Problem*
1, 2

J.Q. Jiang , Y.C. Liang
1

1, 3**

1

, X.H. Shi , and H.P. Lee

3

College of Computer Science and Technology, Jilin University, Changchun 130012, China
ycliang@public.cc.jl.cn
2
College of Mathematics and Computer Science, National University of Inner Mongolia,
Tongliao 028043, China
3
Institute of High Performance Computing, Singapore 117528, Singapore

Abstract. In this paper we present a hybrid algorithm based on Particle Swarm
Optimization (PSO) and Simulated Annealing (SA) approaches and apply it to
two-dimensional non-guillotine cutting stock problem. The probability of
trapping at the local optimum during the searching process can be reduced
using the hybrid algorithm. Meanwhile, we propose a converting approach
which is similar to the Bottom Left (BL) algorithm to map the cutting pattern to
the actual layout. Finally, we implement the proposed algorithm on several test
problems. The simulated results show that the performance of the hybrid
algorithm is better than that of the standard PSO.

1 Introduction
The two-dimensional cutting stock problem can be stated as cutting small rectangular
pieces of predetermined sizes from a large rectangular plate (the stock plate). Nonguillotine cut means that the cuts need not go from one edge of a rectangle to the
opposite edge in a straight line. The aim is to minimize the unused area. Gilmore and
Gomory [1, 2] used linear programming to solve such kind of a problem exactly. But
because of the complexity of this problem, the exact algorithm only fits the case in
which fewer pieces are being cut. These algorithms would fail if there are more pieces
to be cut. A problem of cutting more than 20 pieces would cause some difficulty.
Recently, with the extended application of various heuristic searching algorithms,
Evolutionary Algorithms (EA) and Simulated Annealing (SA) approach have been
applied to this kind of problems [3-5]. In this paper, we will consider applying
Particle Swarm Optimization (PSO) to cutting stock problem. PSO was introduced by
Kennedy and Eberhart [6]. In the process of searching for the solution, we add SA
technique to PSO to reduce the probability of trapping at a local optimum.
*

Supported by the science-technology development project of Jilin Province of China (Grant
No. 20030520), the Key Science-Technology Project of the National Education Ministry of
China (Grant No. 02090) and the doctoral funds of the National Education Ministry of China.
** To whom correspondence should be addressed. E-mail: ycliang@public.cc.jl.cn
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 666–669, 2004.
© Springer-Verlag Berlin Heidelberg 2004

A Hybrid Algorithm Based on PSO and SA and Its Application

667

2 A Hybrid Algorithm Based on PSO and SA
PSO is an evolutionary computational model based on swarm intelligence. Suppose
that the search space is D-dimensional and m particles form the colony. The ith
particle represents a D-dimensional vector Xi (i=1, 2, …, m). It means that the ith
particle locates at Xi = (xi1, xi2, …, xiD) (i=1, 2, …, m) in the search space. The position
of each particle is a potential solution. We calculate the particle’s fitness by putting its
position into a designated objective function. When the fitness is higher, the
corresponding Xi is “better”. The ith particle’s “flying” velocity is also a Ddimensional vector, denoted as Vi = (vi1, vi2, …, viD) (i=1, 2, …, m). Denote the best
position of the ith particle as Pi = (pi1, pi2, …, piD), and the best position of the colony
as Pg (pg1, pg2, …, pgD), respectively. The PSO algorithm could be performed using the
following equations
Vi (k+1) = w Vi (k) + c1 r1 (Pi - Xi (k))/△t + c2 r2 (Pg –Xi (k))/△t

(1)

Xi (k+1) = Xi (k) + Vi (k+1)△t

(2)

where i=1, 2, …, m, k represents the iterative number, w is the inertia weight, c1 and
c2 are learning rates, r1 and r2 are random numbers between 0 and 1, ∆t is the time step
value, Vi∈[Vmin,Vmax] where Vmin and Vmax are the designated vectors. The termination
criterion for the iterations is determined according to whether the maximum
generation or a designated value of the fitness of Pg is reached [7].
Simulated annealing is a local search algorithm. The searching process starts with
an initial solution. A neighbor of this solution is then generated and the change of cost
is calculated. For a general local search process, if a reduction of cost is found then
the current solution is replaced by the generated neighbor. Otherwise, the current
solution is retained. The process is repeated until no further improvement can be
found in the neighborhood of the current solution [4].
In order to reduce the probability of trapping at a local optimum, we introduce the
SA technique to the PSO. We use PSO to search for the initial best position firstly. If
the best position Pg does not change for a specified generation, then the SA is used,
which starts with Pg for a local search. This process is repeated until the termination
condition is achieved.

3 Stock Cutting Algorithm
For the sake of simplicity, we assumed that all the pieces have fixed orientation and
all cuts on the stock plate are infinitesimally thin. The pieces cutting from the stock
plate are rectangular in shape. We describe the stock plate and the pieces in a free
coordinates. The left bottom corner of the stock plate is placed at the origin. Each
piece is denoted by a four-dimension vector (xk, yk , lk, wk), where (xk, yk ) is the position
of the left bottom corner of the piece on the stock plate, lk and wk are the length and
width of the piece, respectively. Each particle in the colony denotes a cutting pattern.
A cutting pattern is consisted of a set of pieces.
In PSO, the fitness function of a particle is taken as the ratio of the summed areas
of the pieces completely placed on the stock plate to the total area of the stock plate.

668

J.Q. Jiang et al.

In the SA the objective function of a particle is the trim loss which is the ratio of the
lost area of the stock plate to the area of the stock plate.
The cutting algorithm deals with the particles (the cutting pattern). In order to place
the pieces on the stock plate, we should convert the cutting pattern to an actual layout.
In this paper, we present a converting approach which is similar to the Bottom Left
(BL) algorithm [5]. We call it the Coordinate-based Bottom Left Algorithm (CBL). In
the BL algorithm, the piece is firstly put at the right upper corner of the stock plate
and then it is moved to the left. In this paper, in order to use the coordinates of the
piece’s left bottom corner, we place the piece according to the coordinate then move
it. We sort the pieces on xk to reduce the probability of overlapping.
Table 1. Simulated results for the five test cases

Number
of pieces
10
10
15
20
30

Trim loss of Trim loss of hybrid
Size of stock plate
PSO (%)
algorithm (%)
0
0
100 × 80
0
0
40 × 20
7.5
3.7
40 × 20
6.3
3.4
40 × 40
7.1
5.5
65 × 45

Fig. 1. A test problem with 30 pieces to be cut from the stock plate

lost area

Fig. 2. Cutting results using the hybrid algorithm

A Hybrid Algorithm Based on PSO and SA and Its Application

669

4 Conclusions and Discussions
Five test problems are used to examine the proposed hybrid algorithm. Each of the
five test problems has its own optimal solution of zero trim loss. Thus we can
estimate easily the performance of the algorithm. The number of the rectangular
pieces in each stock plate ranges from 10 to 30. The population size of the colony is
taken as 60, and the parameters in the PSO are taken as w = 0.3, c1 = 0.8 and c2 = 0.9.
The initial and final temperatures are taken as 80 and 1, respectively, in the SA. The
algorithms are written in C and run in a Pentium 4 personal computer with 2.0GHz.
The maximum number of iterations is taken as 1000.
Figure 1 shows one of the five test problems, where 30 pieces is cut from the stock
plate. Figure 2 shows the actual layout generated using the hybrid algorithm. Twentyeight pieces are cut from the stock pieces. The shade in the stock plate represents the
lost area.
Table 1 shows the simulation results for the five test cases. From the results of the
test cases it can be seen that the hybrid algorithm based on the PSO and the SA
proposed in this paper has better ability to search for the global optimum for cutting
stock problem. When the number of the pieces is smaller, both PSO and the hybrid
algorithm work well. With lager number of pieces, the performance of the hybrid
algorithm is better than the PSO’s.

References
1. P. C. Gilmore and R. E. Gomory: A Linear Programming Approach to the Cutting Stock
Problem. Operations Research, Vol.9 (1961) 849-859
2. P. C. Gilmore and R. E. Gomory: Multistage Cutting Stock Problems of Two and More
Dimensions. Operations Research, Vol.13 (1965) 94-120
3. Stefan Jokobs: On Genetic Algorithms for the Packing of Polygons. European Journal of
Operational Research, 88 (1996) 165-181
4. K. K. Lai and W. M. Chan: Developing a Simulated Annealing Algorithm for the Cutting
Stock Problem. Computer and Industrial Engineering, Vol.33 (1997) 115-127
5. T. W. Leung, C. H. Yung and Marvin D. Troutt: Applications of Genetic Search and
Simulated Annealing to the Two-dimensional Non-guillotine Cutting Stock Problem.
Computer and Industrial Engineering, 40 (2001) 201-214
6. J. Kennedy, R. C. Eberhart: Particle Swarm Optimization. Proc. IEEE Conf. on Neural
Networks, IV, Piscataway, NJ (1995) 1942–1948
7. X. H. Shi, L. M. Wan, H. P. Lee, X. W. Yang, L. M. Wang and Y. C. Liang: An Improved
Genetic Algorithm with Variable Population-size and A PSO-GA Based Hybrid
Evolutionary Algorithm. Second International Conference on Machine Learning and
Cybernetics (2003) 1735-1740

