Ontology-Based Partitioning of Data Steam for
Web Mining: A Case Study of Web Logs
Jason J. Jung
School of Computer and Information Engineering, Inha University,
253 Yonghyun-dong, Incheon, Korea 402-751
j2jung@intelligent.pe.kr

Abstract. This paper presents a nevel method partitioning steaming
data based on ontology. Web directory service is applied to enrich semantics to web logs, as categorizing them to all possible hierarchical paths.
In order to detect the candidate set of session identiﬁers, semantic factors like semantic mean, deviation, and distance matrix are established.
Eventually, each semantic session is obtained based on nested repetition of top-down partitioning and evaluation process. For experiment,
we applied this ontology-oriented heuristics to sessionize the access log
ﬁles for one week from IRCache. Compared with time-oriented heuristics, more than 48% of sessions were additionally detected by semantic
outlier analysis.

1

Introduction

As the concern for searching relevant information from the web has been exponentially increasing, the very large amount of log data have been generated
in web servers. Thus, many applications have been focusing on various ways to
analyze them in order to recognize the usage patterns of users and discover other
meaningful patterns [1], [5]. Among the whole steps of web user proﬁling mentioned in [2], we have taken the session identiﬁcation for segmenting web log data
in consideration. For partitioning each user activity into sequences of entries corresponding to each user visit, mainly two kinds of sessionization heuristics, which
are time-oriented heuristics [3] and navigation-oriented heuristics [4] have been
introduced. However, knowledge extractable from sessions identiﬁed by those
heuristics is limited like frequent and sequential patterns represented by URLs.
It means that web logs has to be sessionized with semantic enrichment based on
ontology in order to ﬁnd out more potential and meaningful information like a
user’s preference and intention. More importantly, web caching(or proxy) servers
have to track streaming URL requests from multiple clients, because they have
to increase predictability for prefetching web content that is expected in next
request. Enriching web logs with their corresponding semantic information has
been attempted in some studies [6], [10] such as mapping URLs to set of concepts
as a feature vector and a speciﬁc value, respectively. We present conceptualizing
an URL information itself by using web directory and introduce representing
conceptualized URLs as tree-like information.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3036, pp. 247–254, 2004.
c Springer-Verlag Berlin Heidelberg 2004

248

2

J.J. Jung

Data Model of Web Log and Problem Statement

Several standard data models of web logs, generally, have some problems to
analyze these web logs such as their anonymity, rotating IP addresses connections
through dynamic assignment of ISPs, missing references due to caching, and
inability of servers to distinguish among diﬀerent visits. Therefore, we note the
problem statements concentrated for semantic sessionization in this paper, as
follows.
– Weakness of IP address ﬁeld as session identiﬁer. The same IP address
ﬁeld in a web logs (within the time window or not) can not guarantee that
those requests are caused by only one user, and reversely, requests from the
diﬀerent IPs can be generated by a particular user.
– Simultaneous user requests based on multiple intention. It means
we have to consider multiple intention of users by classifying mixed logs
according to the corresponding semantics.
Each request consists of timestamp, IP address, and URL ﬁelds. URL ﬁeld
is divided into base url and reminder, which are the host name of web server
and the rest part of full URL, respectively. Then, we assume that each URL
is semantically characterized by its base URL. For example, we are given a
web log composed of eight requests ordered by timestamps from t1 to t8 . We
denote the URL set of sequential requests by < . . ., b urli +rj , . . . > mapped to
the timestamps < . . ., ti , . . . >. These logs are partitioned with respect to an
IP address ipi . After partitioning, we compare semantic distance between base
URLs in a set of requests, because we regard a semantic session as the sequence
of URL having similar semantics. In other words, we investigate if an user’s
intention is retained or not.

3

Ontology-Oriented Heuristics for Sessionization

An ontology, a so-called semantic categorizer, is an explicit speciﬁcation of a
conceptualization. It means that ontologies can play a role of enriching semantic
or structural information to unlabeled data. Web directories like Yahoo and Cora
can be used to describe the content of a document in a standard and universal
way as ontology [7]. Besides, web directory is organized as a topic hierarchical
structure which is an eﬃcient way to organize, view, and explore large quantities
of information that would, otherwise, be cumbersome [9].
In this paper we assume that all URLs can be categorized by a well-organized
web directory service. There are, however, some practical obstacles to do that,
because most of web directories are forced to manage a non-generic tree structure
in order to avoid a waste of memory space caused by redundant information [8].
We brieﬂy note that problems with categorizing an URL with web directory as
an ontology are the following:
– The multi-attributes of an URL. An URL can be involved in more
than a category. The causal relationships between categories makes their

Ontology-Based Partitioning of Data Steam for Web Mining

249

hierarchical structure more complicated. As shown in Fig. 1 (1), an URL
can be included in some other categories, named as A or B.

A
B

P

B

P
P

A

C
(1)

(2)

Fig. 1. (1) The multi-attribute of URLs; (2) The subordinate relationship between two
categories

– The relationship between categories. A category can have more than
a path from root node. As shown in Fig. 1 (2), the category C can be a
subcategory of more than one like P. Furthermore, some categories can be
semantically identical, even if they have diﬀerent labels.
• Redundancy between semantically identical categories
• Subordination between semantically dependent categories
In order to simply handle these problems, we categorize each URL to all possible categories causally related with itself. Therefore, an URL urli is categorized
to a category set Category(urli ), and the size of this category set depend on the
web directory. Each element of a category set is represented as a path from the
root to the corresponding category on web directory. Let the base URLs {b url1 ,
b url2 , b url3 } semantically enriched to {<a:b:d, a:b:f:k>, <a:c:h>, <a:b:f:j>}.
The leftmost concept “a” is indicating the root of web directory and these base
URLs are categorized to <d, k>, <h>, and <j>, respectively. In particular,
due to multi-attribute of base URL b url1 , Category(b url1 ) is composed of two
diﬀerent concepts.
We deﬁne semantic factors measuring the relationship between two log data.
All possible categorical and ordered paths for the requested URL, above all, are
obtained, after conceptualizing this URL by web directory. Firstly, the semantic
distance is formulated for measuring the semantic diﬀerence between two URLs.
Let an URL urli categorized to the sets {pathi |pathm
i ∈ Category(urli ), m ∈
[1, . . . , M ]} where M is the number of total categorical paths. As simply extending Levenshtein edit distance, the semantic distance ∆ between two URLs urli
and urlj is given by
∆ [urli , urlj ] = arg

M,N

min

m=1,n=1

min (Lm
i − LC

(m,n)

), (Lnj − LC

(m,n)
exp(LC
)

(m,n)

)
(1)

n
n
are the lengths of pathm
where Lm
i , Lj , and LC
i , pathj , and common part of
both of them, respectively. As marking paths representing conceptualized URLs
(m,n)

250

J.J. Jung

on trees, we can easily get this common part overlapping each other. ∆ compares
all combination of two sets (|pathi | × |pathj |) and returns the minimum among
values in the interval [0, 1], where 0 stands for complete matching. Exponent
(m,n)
function in denominator is used in order to increase the eﬀect of LC
. Second
factor is to aggregate URLs during a time interval. Thereby, semantic distance
matrix D∆ is given by


...
...
...
D∆ (i, j) =  . . . ∆ [urlti , urltj ] . . . 
(2)
...
...
...
where the predeﬁned time interval T is the size of matrix and diagonal elements
are all zero. Based on D∆ , the semantic mean µ is given by
µ (t1 , . . . , tT ) =

2

T
i=1

T
j=i

D∆ (i, j)

(3)

T (T − 1)

where D∆ (i, j) is the (i, j)-th element of distance matrix. This is the mean value
of upper triangular elements except diagonals. Then, with respect to the given
time interval T , the semantic deviation σ is derived as shown by
σ (t1 , . . . , tT ) =

2

T
i=1

T
j=i

2

(D∆ (i, j) − µ (t1 , . . . , tT ))
T (T − 1)

(4)

These factors are exploited to quantify the semantic distance between two
random logs and statistically discriminate semantic outliers such as the most
distinct or the N distinct data from the rest in the range of over pre-ﬁxed
threshold, with respect to given time interval.
When we try to segment web log dataset, log entries are generally timevarying, more properly, streaming. In case of streaming dataset, not only semantic factors in a given interval but also the distribution of the semantic mean
µ is needed for sessionization. This will be described in the Sect. 4. We, hence,
simply assume that a given dataset is time-invariant and its size is ﬁxed in this
section.
In order to analyze semantic outlier for sessionization, we regard the minimize
the sum of partial semantic deviation µ for each session as the most optimal
partitioning of given dataset. Thereby, the principle session identiﬁers P SI =
{psia |a ∈ [1, . . . , S − 1], psia ∈ [1, . . . , T − 1]} is deﬁned as the set of boundary
positions, where the variables S and T are the required number of sessions and
the time interval, respectively.
The semantic outlier analysis for sessionizing static logs SOAS as objective
function with respect to P SI is given by
S

SOAS (P SI) =

µi
i=1

(5)

Ontology-Based Partitioning of Data Steam for Web Mining

251

where µi means partial semantic deviation of ith segment. In order to minimize
this objective function, we scan the most distinct pairs, in other words, the
largest value in the semantic distance matrix D∆ , as follows:
T

∆M AX [Ta , Tb ] = arg max D∆ (i, j)
i=1,j=1

(6)

where arg maxTi=1 is the function returning the maximum values during a given
time interval [Ta , Tb ]. When we obtain D∆ (p, q) as the maximum semantic distance, we assume there must be at least a principle session identiﬁer between pth
and q th URLs. Then, the initial time interval [Ta , Tb ] is replaced by [Tp , Tq ], and
the maximum semantic distance in reduced time interval is scanned, recursively.
Finally, when two adjacent elements are acquired, we evaluate this candidate psi
by using SOAS (psi). If this value is less than σ , this candidate psi is inserted in
P SI. Otherwise, this partition by this candidate psi is cancelled. This sessionization process is top-down approaching, until the required number of sessions
S is found. Furthermore, we can also be notiﬁed the oversessionization, which is
a failure caused by overﬁtting sessionization, detected by the evaluation process
SOAS (P SI).

4

Session Identiﬁcation from Streaming Web Logs

Actually, on-line web logs are continuously changing. It is impossible to consider
not only the existing whole data but also streaming data. We deﬁne the time
window W as the pre-determined size of considerable entry from the most recent
one. Every time new URL is requested, this time window have to be shifted. In
order to semantic outlier analysis of streaming logs, we focus on not only basic
semantic factors but also the distribution of the semantic mean with respect to
time window, µ (W (T ) ).
As extending SOAS , the objective function for analyzing semantic outlier of
dynamic logs SOAD is given by
SOAW
D

(i)

S

(P SI) =

µk |W (i)

(7)

k=1

where the W (i) means that the time window from ith URL is applied. We want
to minimize this SOAD (P SI) by ﬁnding the most proper set of principle session
identiﬁers. The candidate psii is estimated by the diﬀerence between the semantic means of contiguous time windows and predeﬁned threshold ε, as shown
by
µ (W (i) ) − µ (W (i−τ ) ) ≥ ε

(8)

where τ is the distance between both time windows and assumed to be less
than the size of time window |W |. Similar to the evaluation process of SOAS ,
(i)
and
once a candidate psii is obtained, we evaluate it by comparing SOAW
D

252

J.J. Jung
(i−1)

SOAW
. Finally, we can retrieve P SI to sessionize streaming web logs. In
D
case of streaming logs, more particularly, a candidate psi meeting the evaluation
process can be appended into unlimited size of P SI.

5

Experiments and Discussion

For experiments, we collected the sanitized access logs from sv.us.ircache.net, one
of web cache servers of IRCache. These raw ﬁles, generated from 20 March 2003
to 26 March 2003, consist of 11 attributes and about 9193000 entries. We veriﬁed
sessionizing process proposed in this paper on a PC with a 1.2 GHz CPU clock
rate, 256 MB main memory, and running FreeBSD 5.0. During data cleansing,
logs whose URL ﬁeld is ambiguous (wrong spelling or IP address) are removed,
as referring to web directory.
Table 1. The number of sessions by time-oriented heuristics and ontology-oriented
heuristics (static and dynamic logs) from logs for seven days (20-36 March 2003).

Time-oriented
Ontology-oriented
(Static logs, SOAS )
Ontology-oriented
(Dynamic logs, SOAD )
Common Session Boundary

1

2

1563
907
(58%)
983
(63%)
47%

1359
923
(68%)
1051
(77%)
51%

3

4

5

6

7

1116 877 1467 1424 1384
692
421
807
783
844
(62%) (48%) (55%) (55%) (61%)
939
683 1118 827 1105
(84%) (78%) (76%) (58%) (80%)
49% 48% 57% 32% 74%

We compared two sessionizations based on time oriented and ontology oriented heuristics, with respect to the number of segmented sessions and the reasonability of association rules extracted from them. In case of ontology-oriented
sessionization, ﬁelds related with time such as “Timestamp” and “Elapsed Time”
were ﬁltered. Time-oriented heuristics simply sessionized log entries between two
sequential requests whose diﬀerence of ﬁeld “Timestamp” is more than 20 milliseconds with respect to the same IP address. On the other hand, for ontologyoriented heuristics, the size of time window W was predeﬁned as 50. The numbers of sessions generated in both cases are shown in Table 1. Time-oriented
heuristics estimate denser sessionization than two ontology-oriented approaches.
It means that ontology-oriented heuristics based on SOAS or SOAD , generally,
can make URLs requested over time gap semantically connected each other.
They, SOAS or SOAD , decreased the number of sessions to, overall, 58.14%
and 73.71%, respectively, compared to time-oriented heuristics. Even though
ontology-oriented heuristics searched fewer sessions, the rate of common session
boundaries (the number of common sessions matched with time-oriented heuristics over the number of sessions of SOAD ) is average 51.1%. It shows that more
than 48% of sessions not segmented by time-oriented heuristics can be detected

Ontology-Based Partitioning of Data Steam for Web Mining

253

by semantic outlier analysis. While time oriented sessionization is impossible to
recognize patterns of users who is easily changing their preferences or simultaneously trying to search various kinds of information on the web, ontology-oriented
method can discriminate these complicated patterns.
Table 2. Evaluation of the reasonability of the extracted ruleset (hit ratio (%))
1

2

3

4

5

6

7

Time-oriented
0.06 0.32 0.46 0.41 0.51 0.52 0.49
Static logs, SOAS
0.05 0.45 0.66 0.72 0.76 0.74 0.75
Dynamic logs, SOAD 0.05 0.46 0.52 0.67 0.70 0.75 0.72

We also evaluated the reasonability of the rules extracted from three kinds
of session sequences. According to the standard least recently used (LRU), we
organized the expected set of URLs, which means the set of objects that cache
server has to prefetch. The size of this set is constantly 100. As shown in Table 2,
we measured the two hit ratios by both of their sessionizations for seven days.
The maximum hit ratios in three sequences were obtained 0.52, 0.76, and 0.75,
respectively. Ontology-oriented sessionization SOAS acquired about 24.5% improvement of prefetching performance, compared with time-oriented. Moreover,
we want to note that the diﬀerence between SOAS and SOAD . For the ﬁrst
three days, the hit ratio of SOAS was higher than that of SOAD by over 5%.
Because of streaming data, SOAD showed the diﬃculty in initializing the ruleset. After initialization step, however, the performances of SOAS and SOAD
were converged into a same level.

6

Conclusions and Future Work

In order to mine useful and signiﬁcant association rules from web logs, many
kinds of well-known association discoverying methods have been developed. Due
to the domain speciﬁc properties of web logs, sessionization process of log entries is the most important in a whole step. We have proposed ontology-oriented
heuristics for sessionizing web logs. In order to provide each requested URL with
the corresponding semantics, web directory service as ontology have been applied
to categorize this URL. Especially, we mentioned three practical problems for
using real non-generic tree structured web directories like Yahoo. After conceptualizing URLs, we measured the semantic distance matrix indicating the relationships between URLs within the predeﬁned time interval. Additionally, factors
like semantic mean and semantic deviation were formulated for easier computation. We considered two kinds of web logs which are stationary and streaming.
Therefore, two semantic outlier analysis approaches SOAS and SOAD were
introduced based on semantic factors. Through the evaluation process, the de-

254

J.J. Jung

tected cadidate semantic outliers were tested whether their sessionization is reasonable or not. According to results of our experiments, investigating semantic
relationships between web logs is very important to sessionize them. Classifying
semantic sessions, 48% of total sessions, brought about 25% higher prefetching
performance, compared with time-oriented sessionization. Complex web usage
patterns seemed to be meaninglessly mixed along with “time” can be analyzed
by ontology.

References
1. Cooley, R., Srivastava, J., Mobasher, B.: Web Mining: Information and Pattern
Discovery on the World Wide Web. Proc. of the 9th IEEE Int. Conf. on Tools with
Artiﬁcial Intelligence (1997)
2. Mobasher, B., Cooley, R., Srivastava, J.: Automatic personalization based on Web
usage mining. Comm. of the ACM 43(8) (2000)
3. Berendt, B., Mobasher, B., Nakagawa, M., Spiliopoulou, M.: The Impact of Site
Structure and User Environment on Session Reconstruction in Web Usage Analysis.
Proc. of the 4th WebKDD Workshop at the ACM-SIGKDD Conf. on Knowledge
Discovery in Databases (2002)
4. Chen, Z., Tao, L., Wang, J., Wenyin, L., Ma, W.-Y.: A Uniﬁed Framework for Web
Link Analysis. Proc. of the 3rd Int. Conf. on Web Information Systems Engineering
(2002) 63–72
5. Cooley, R., Mobasher, B., Srivastava, J.: Data Preparation for Mining World Wide
Web Browsing Patterns. Knowledge and Information Systems 1(1) (1999) 5–32
6. Dai, H., Mobasher, B.: Using ontologies to discover domain-level web usage proﬁles.
Proc. of the 2nd Semantic Web Mining Workshop at the PKDD 2002 (2002)
7. Labrou, Y., Finin, T.: Yahoo! as an Ontology: Using Yahoo! Categories to Describe
Documents. Proc. of the 8th Int. Conf. on Information Knowledge Management
(1999) 180–187
8. Jung, J.J., Yoon, J.-S., Jo, G.-S.: Collaborative Information Filtering by Using
Categorized Bookmarks on the Web. Proc. of the 14th Int. Conf. on Applications
of Prolog (2001) 343–357
9. McCallum, A., Nigam, K., Rennie, J., Seymore, K.: Building Domain-Speciﬁc
Search Engines with Machine Learning Techniques. AAAI Spring Symp. (1999)
10. Berendt, B., Spiliopoulou, M.: Analysing navigation behaviour in web sites integrating multiple information systems. The VLDB Journal 9(1) (2000) 56–75

