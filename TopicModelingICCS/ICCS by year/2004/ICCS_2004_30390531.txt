Monte Carlo Algorithm for Maneuvering Target
Tracking and Classification
Donka Angelova1 , Lyudmila Mihaylova2 , and Tzvetan Semerdjiev1
1

2

Institute for Parallel Processing, Bulgarian Academy of Sciences
25A Acad. G. Bonchev St, 1113 Sofia, Bulgaria
donka@bas.bg
Department of Electrical and Electronic Engineering, University of Bristol,
Merchant Venturers Building, Woodland Road, Bristol BS8 1UB, UK
mila.mihaylova@bristol.ac.uk

Abstract. This paper considers the problem of joint maneuvering target tracking
and classification. Based on the recently proposed particle filtering approach, a
multiple model particle filter is designed for two-class identification of air targets:
commercial and military aircraft. The classification task is implemented by processing radar (kinematic) measurements only, no class (feature) measurements are
used. A speed likelihood function for each class is defined using a priori information about speed constraints. Class-dependent speed likelihoods are calculated
through the state estimates of each class-dependent tracker. They are combined
with the kinematic measurement likelihoods in order to improve the process of
classification. The performance of the suggested multiple model particle filter is
evaluated by Monte Carlo simulations.

1

Introduction

A lot of research has been performed recently concerning the problem of joint target
tracking and classification. Actually, the simultaneous implementation of these two important tasks in the surveillance systems facilitates the situation assessment, resource
allocation and decision-making [1,2]. Classification (or identification) usually includes
target allegiance determination and/or target profile assessment such as vehicle, ship
or aircraft type. Target class information could be obtained from an electronic support
measure (ESM) sensor, friend-and-foe identification system, high resolution radar or
other identity sensors. It could be inferred from a tracker, using kinematic measurements only or in a combination with identity sensors. On the other hand, target type
knowledge applied to the tracker can improve tracking performance by the possibility
of selecting appropriate target models. Classification information can assist in correct
data association and false tracks elimination in multiple target tracking systems.
Two basic alternative approaches to classification exist based on Bayesian and DempsterShafer theories. Comparative studies [1] of these inferring techniques come to the conclusion that Dempster-Shafer is more robust than the Bayesian technique, but this is
Research supported in part by Center of Excellence BIS21 grant ICA1-2000-70016, by the
Bulgarian Foundation for Scientific Investigations under grants I-1202/02 and I-1205/02, and
in part by the UK MOD Data and Information Fusion Defence Technology Center.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 531–539, 2004.
c Springer-Verlag Berlin Heidelberg 2004

532

D. Angelova, L. Mihaylova, and T. Semerdjiev

achieved at the expense of delay in time [2]. The Bayesian approach is more certain
regarding the correct decisions. Efficient approximations to the optimal Bayesian solution of joint tracking and classification (JTC) are provided by Monte Carlo methods.
Feasible implementations of the JTC task via particle filtering are reported in [3,4].
A unified algorithm for JTC is suggested in [2] within the framework of the Bayesian
theory. A bank of filters, covering the state and feature space are run in parallel with each
filter matched to different target class. A robust particle filter is proposed as a concrete
realization of the algorithm.
The accurate representation of joint state and class probability distributions is an important advantage of the particle filtering approach. The highly non-linear relationships
between state and class measurements and non-Gaussian noise processes can be easily
processed by the particle filter. In addition, flight envelope constraints, which are essential part of the JTC task, can be incorporated into the filtering algorithm in a natural and
consistent way [5].
The objective of the present paper is to explore the capabilities of this particle filtering
technique to track and classify a maneuvering target. Two air target classes are considered: commercial aircraft and military aircraft. A bank of two interacting multiple model
class dependent particle filters is designed and implemented. The novelty of the paper
relies also on accounting for two kinds of constraints : both on the acceleration and on the
speed. Two speed likelihood functions are defined based on a priori information about
speed constraints of each class. Such kind of constraints are used in other approaches
for decision making (see e.g. [6]). At each filtering step, the estimated speed from each
class dependent filter is used to calculate a class dependent speed likelihood. The speed
likelihoods are combined with kinematic likelihoods in order to improve the process of
classification.
The remaining part of the paper is organized as follows. Section 2 summarizes the
Bayesian formulation of the JTC problem according to [2,4,7,8]. Section 3 presents the
developed multiple model particle filter using both speed and acceleration constraints.
Simulation results are given in Section 4, with conclusions generalized in Section 5.

2

Problem Formulation

Consider the following model of a discrete-time jump Markov system, describing the
target dynamics and sensor measurement
xk = F (mk ) xk−1 + G (mk ) uk + B (mk ) wk ,
zk = h (mk , xk ) + D (mk ) vk , k = 1, 2, . . . ,

(1)
(2)

where xk ∈ Rnx is the base (continuous) state vector with transition matrix F , zk ∈ Rnz
is the measurement vector with measurement function h, and uk ∈ U is a known control input. The noises wk and vk are independent identically distributed (i.i.d.) Gaussian processes having characteristics wk ∼ N (0, Q) and vk ∼ N (0, R), respectively.
All vectors and matrices are assumed of appropriate dimensions. The modal (discrete)
state mk ∈ S {1, 2, . . . , s} is a time-homogeneous first-order Markov chain with
transition probabilities pij
P r {mk = j | mk−1 = i} , (i, j ∈ S) and initial proP r {m0 = i} for i ∈ S, such that P0 (i) ≥ 0, and
bability distribution P0 (i)

Monte Carlo Algorithm for Maneuvering Target Tracking

533

s
i=1

P0 (i) = 1. We assume that the target belongs to one of the M classes c ∈ C
where C = {c1 , c2 , . . . , cM } represents the set of the target classes. Generally, the
number of the discrete states s = s(c), the initial probability distribution P0c (i) and the
c
transition probability matrix [pij ] , i, j ∈ S are different for each target class.
The joint state and class is time varying with respect to the state and time invariant
k
with respect to the class [2]. Let Z k , Y k = {zi , yi }i=1 be the cumulative set of
k
k
kinematic (Z ) and class (feature) measurements (Y ) up to time k.
The goal of the joint tracking and classification task is to estimate the state xk and the
posterior classification probabilities P c | Z k , Y k , c ∈ C based on all available
measurement information Z k , Y k . If we can construct the posterior joint state-class
probability density function (pdf ) p xk , c | Z k , Y k , then the posterior classification
probabilities can be obtained by marginalisation over xk :
P c | Zk, Y k

=
xk

p xk , c | Z k , Y k

(3)

dxk .

Suppose that we know the posterior joint state-class pdf p xk−1 , c | Z k−1 , Y k−1 at
time instant k − 1. According to the Bayesian philosophy, p xk , c | Z k , Y k can be
computed recursively from p xk−1 , c | Z k−1 , Y k−1 within the framework of two
steps – prediction and measurement update [2,4].
The predicted state-class pdf p xk , c | Z k−1 , Y k−1 at time k is given by
p xk , c | Z k−1 , Y k−1

(4)

=
xk−1

p (xk | xk−1 , c) p xk−1 , c | Z k−1 , Y k−1

dxk−1 ,

where the conditional state prediction pdf p xk | xk−1 , c, Z k−1 , Y k−1 is obtained
from the state transition equation (1).
The conditional pdf of the measurements p ({zk , yk } | xk , c) = λ{xk ,c} ({zk , yk }) is
usually known. This is the likelihood λ{xk ,c} ({zk , yk }) of the joint state and feature.
When the measurements {zk , yk } arrive, the update step can be completed
p xk , c | Z k , Y k

1
= ¯ λ{xk ,c} ({zk , yk }) p xk , c | Z k−1 , Y k−1
dk

,

(5)

where d¯k = c∈C xk λ{xk ,c} ({zk , yk })p xk , c | Z k−1 , Y k−1 dxk is a normalizing constant. The recursion (4)-(5) begins with the prior density P {x0 , c} , x0 ∈
Rnx , c ∈ C, which is assumed known. Then using Bayes’ theorem, the target classification probability is calculated by the equation
P c | Zk, Y k

=

p {zk , yk } | c, Z k−1 , Y k−1 P c | Z k−1 , Y k−1
k−1 , Y k−1 }) P (c | {Z k−1 , Y k−1 })
c∈C p ({zk , yk } | c, {Z

with an initial prior target classification probability P0 (c), and c∈C P0 (c) = 1.
The class-dependent state estimate x
ˆck , c ∈ C takes part in the calculation of the combined state estimate x
ˆk
x
ˆck =

xk

xk p xk , c | Z k , Y k

dxk ,

x
ˆck P c | Z k , Y k

x
ˆk =
c∈C

.

(6)

534

D. Angelova, L. Mihaylova, and T. Semerdjiev

It can be seen from (4)-(6) that the estimates, needed for each class, can be calculated
independently from the other classes. Therefore, the JTC task can be accomplished by
the simultaneous work of M independent filters [2,4]. The scheme of the particle filter
bank, implemented in the present paper is described in Section 3.
It should be noted that because in our case we don’t have feature measurements, the
set {Y k } is replaced in the particle filter by the speed estimates from the M classes.
Together with a speed envelope which form is given in Section 3, they form a virtual
“feature measurement”.

3

Particle Filter for Maneuvering Target Tracking and
Classification

Maneuvering target model. The two-dimensional target dynamics is given by
(7)

xk = F xk−1 + G [uk + wk ] , k = 1, 2, . . .

where the state vector x = (x, x,
˙ y, y)
˙ contains target positions and velocities in the
horizontal (Oxy) Cartesian coordinate frame. The control input vector u = (ax , ay )
includes target accelerations along x and y coordinates. The process noise w = (wx , wy )
models perturbations in the accelerations. The transition matrices F and G are [9]
F = diag [F1 , F1 ] , for F1 =

1T
;
01

G = diag [g1 , g1 ] , for g1 =

T2
2

T

,

where T is the sampling interval. The target is assumed to belong to one of two classes
(M = 2), representing either a lower speed commercial aircraft with limited maneuvering capability (c1 ) or a highly maneuvering military aircraft (c2 ) [7]. The flight envelope
information comprises speed and acceleration constrains, characterizing each class. The
speed v = x˙ 2 + y˙ 2 of each class is limited respectively to the interval:
{c1 : v ∈ (100, 300)} [m/s] and

{c2 : v ∈ (150, 650)} [m/s].

The range of the speed overlap section is [150, 300]. The control inputs are restricted to
the following sets of accelerations:
{c1 : u ∈ (0, +2g, −2g)}

and

{c2 : u ∈ (0, +5g, −5g)} ,

where g [m/s2 ] is the gravity acceleration. The acceleration process uk is a Markov
chain with five states s(c1 ) = s(c2 ) = 5:
1. ax = 0,
ay = 0,
2. ax = A, ay = A, 3. ax = A, ay = −A,
4. ax = −A, ay = A, 5. ax = −A, ay = −A
where A = 2g stands for class c1 target and A = 5g refers to the class c2 . The two
target types have equal transition probabilities pij , i, j ∈ S: pij = 0.7, i = j; p1j =
0.15, j = 2, . . . , 5; pij = 0.05, j = i, i, j = 2, . . . , 5. The initial probabilities are
selected as follows: P0 (1) = 0.6, P0 (2) = P0 (3) = P0 (4) = P0 (5) = 0.1. The stan2
2
dard deviations of the process noise w ∼ N (0, diag(σwx
, σwy
)) are different for each
mode and class:
j
c1 : σw
= 5.5 [m/s2 ], j = 1, . . . , 5 and
1
j
c2 : σw = 7.5, σw
= 17.5 [m/s2 ], j = 2, . . . , 5 , where (σw = σwx = σwy ).

Monte Carlo Algorithm for Maneuvering Target Tracking

535

Measurement model. The measurement model at time k is described by

zk = h(xk ) + vk ,

h(x) =

x2 + y 2 , arctan

x
y

,

(8)

where the measurement vector z = (D, β) contains the distance to the target D and
bearing β, measured by the radar. The parameters of the measurement error vector
2
v ∼ N (0, R), R = diag(σD
, σβ2 ) are as follows: σD = 100.0 [m]; σβ = 0.15 [deg].
The sampling interval of T = 5 [s] is chosen in the simulations below.
Speed constraints. Acceleration constraints are imposed on the filter operation by an
appropriate choice of the control input in the target model. The speed constraints are
enforced through speed likelihood functions. Using the speed envelope information, the
speed likelihood functions are defined by the following relationships

if vkc1 ≤ 100 [m/s]
 0.8,
c1
c1
g1 (vk ) = 0.8 + κ1 (vk − 100) , if (100 < vkc1 ≤ 300) for κ1 = −0.7/200

0.1,
if vkc1 > 300 [m/s]

if vkc1 ≤ 150 [m/s]
 0.1,
c2
c2
g2 (vk ) = 0.1 + κ2 (vk − 150) , if (150 < vkc1 ≤ 650) for κ2 = 0.85/500

0.95
if vkc1 > 650 [m/s].
According to the problem formulation, presented in Section 2, two class-dependent filters
are working in parallel. At time step k, each filter gives state estimate {ˆ
xck , c = 1, 2}.
c
Let us assume, that the estimated speed from the previous time step, vˆk−1 , c = 1, 2 ,
is a kind of “feature measurement". The likelihood λ{xk ,c} ({zk , yk }) is factorized [2]
λ{xk ,c} ({zk , yk }) = fxk (zk ) gc (ykc ) ,

(9)

c
where ykc = vˆk−1
. Practically, the normalized speed likelihoods represent estimated by
the filters speed-based class probabilities. The posterior class probabilities are modified
by this additional speed information at each time step k. The inclusion of the speed
likelihoods is done after some “warming-up" interval, including filter initialization.

Particle Filter Algorithm. Consider the hybrid particle x = {x, m, c}, containing all
necessary state, mode and class information. Let Nc the number of particles for class c.
Then the detailed scheme of the proposed particle filter comprises the following steps:
1. Initialization,

k = 0.

For class c = 1, 2, . . . , M ,

set P (c) = P0 (c)

* For j = 1, . . . , Nc , sample
(j)
(j)
s
x0 ∼ p0 (x0 , c), m0 ∼ {P0c (m)}m=1 (c), c(j) = c
End for c

and set k = 1.

536

D. Angelova, L. Mihaylova, and T. Semerdjiev

2. For c = 1, . . . , M (possibly in parallel) execute
* Prediction step
For j = 1, . . . , Nc generate samples
(j)
(j)
s(c)
mk ∼ {pclm }m=1 for l = mk−1 ,
(j)

wk ∼ N (0, Q(mk , c)),

(j)

(j)

(j)

xk = F xk−1 + Guk (mk , c) + Gwk

* Measurement processing step : on receipt of a new measurement {zk , yk }:
(j)

(j)

For j = 1, . . . , Nc evaluate the weights wk = f (zk | xk )gc (ykc ),
c(j)

(j)

(j)

where f (zk | xk ) = N (zk ; h(xk ), R) and gc (ykc ) = gc vˆk−1 ;
calculate
p {zk , yk } | c, Z k−1 , Y k−1

=

Nc
j=1

(j)

wk

and set L(c) =

Nc
j=1

(j)

wk

* Selection step
(j)

(j)

normalize the weights wk = wk /

Nc
j=1

(j)

wk

(j)

resample with replacement Nc particles (xk ; j = 1, . . . , Nc )
(l)
from the set (xk ); l = 1, . . . , Nc ), according to the importance weights
* Compute updated state estimate and posterior model probability
x
ˆck =

1
Nc

Nc
j=1

(j)

xk ; P c (mk = l) =

(j)
Nc
j=1 mk =l
(j)
Nc
j=1 mk

, l = 1, . . . , s(c)

End for c
3. Output: Compute posterior class probabilities and combined output estimate
P c | Z k , Y k = L(c)P c | Z k−1 , Y k−1 /
M
x
ˆk = c=1 P c | Z k , Y k x
ˆck

M
c=1

L(c)P c | Z k−1 , Y k−1

4. Set k ←− k + 1 and go to step 2.

4

Simulation Results

The performance of the implemented tracking filter is evaluated by simulations over a
representative test trajectory, depicted in Fig. 1.
Measures of performance. Root-Mean Squared Errors (RMSE) [9]: on position (both
coordinates combined) and speed (magnitude of the velocity vector), average probability
of correct discrete state identification, average probability of correct class identification
and average time per update are used to evaluate the filter performance.
The results presented below are based on 100 Monte Carlo runs. The number of particles
for each class is Nc = 3000. The prior class probabilities are chosen as follows: P0 (1) =
P0 (2) = 0.5. The parameters of base state vector initial distribution x0 ∼ N [x0 ; m0 , P0 ]
are selected as follows: P0 = diag{1502 , 20.02 , 1502 , 20.02 }; m0 contains the exact
initial target parameters.
Test trajectory. The target performs two coordinated turn maneuvers with normal accelerations 2g and −5g , respectively, within scan intervals (16 ÷ 23) and (35 ÷ 37). The

Monte Carlo Algorithm for Maneuvering Target Tracking

537

selected speed value is v = 250 [m/s]. Then a maneuver is performed with longitudinal
acceleration of 1g and normal acceleration of 2g in the frame of 3 scans (45 ÷ 47).
The longitudinal acceleration increases the speed up to v = 400 [m/s]. These maneuvers are followed by another two maneuvers (during scans (48 ÷ 56) and (63 ÷ 70))
with normal accelerations of 2g and −2g , respectively. The speed values (from 250
80

class # 1
class # 2
70

y [km]

1

60

50

0.8

START
0.6

40
0.4
30

0.2

20

x [km]

10
10

20

30

40

50

Fig. 1. Test trajectory

60

70

(a)

t [scans]
80

0

0

and

10

(b)

20

30

40

50

60

70

80

Posterior probability of model 1

class # 1
class # 2
1

1

0.8

0.8

0.6

0.6

0.4

0.4

0.2

class # 1
class # 2

0.2

t [scans]

t [scans]
0

0

10

20

30

40

50

60

70

80

Fig. 2. Class probabilities without (a)

0

0

and

10

20

30

40

50

60

70

80

(b) with speed constraints

to 400 [m/s]) and the normal 5g acceleration are typical for the second class target.
After the 5g maneuver, the filter correctly recognizes the real second class, but after the
subsequent maneuvers of 2g, a tendency for misclassification is present (Fig. 2(a)) in the
filter without speed constraints. It is due to the fact, that the filtering system can “change
its mind" regarding the class identification, if the second class target performs maneuvers, natural for the first class. The advantage of incorporation of speed constraints is
illustrated in Fig. 2(b). According to the results from the RMSEs (Fig. 3) the developed
particle filter with acceleration and speed constraints can reliably track maneuvering
targets. The discrete (mode) states are determined correctly by the filter (Fig.1(b)). It

538

D. Angelova, L. Mihaylova, and T. Semerdjiev

1200

220

800

600

combined
class # 1
class # 2

200

Speed RMSE [m/s]

Position RMSE [m]

1000

combined
class # 1
class # 2

180

160

140

120

100

400
80

60
200
40

t [scans]
0

0

10

20

30

40

50

t [scans]
60

Fig. 3. Position RMSE [m]

70

(a)

20

80

and

0

10

20

30

40

50

60

70

80

(b) Speed RMSE [m/s]

should be noted that the filter’s computational complexity allows for an on-line processing. The average time per update, estimated in the MATLAB environment (on PC with
AMD Athlon processor) is 1.52 [s]. It is less than the sampling interval of 5 [s].

5

Conclusions

A Bayesian joint tracking and classification algorithm has been proposed recently in
the work [2]. Based on this approach, a particle filter is developed in the present paper
for maneuvering target tracking and classification. A bank of interacting multiple model
class dependent particle filters is designed and implemented in the presence of speed
and acceleration constraints. The acceleration constraints for each class are imposed by
using different control inputs in the target model. The speed constraints are enforced by
constructing class dependent speed likelihood functions. Speed likelihoods are calculated
at each filtering step and assist in the process of classification.
The filter performance is analyzed by simulation over a typical 2 − D target scenario.
The results show a reliable tracking and correct target type classification.

References
1. Leung, H., Wu, J.: Bayesian and Dempster-Shafer target identification for radar surveillance.
IEEE Trans. Aerospace and Electr. Systems, Vol. 36 (2000) 432–447
2. Gordon, N., Maskell, S., Kirubarajan, T.: Efficient particle filters for joint tracking and classification. Proc. SPIE Signal and Data Proc. of Small Targets, Vol. 4728, USA, (2002) 1–5
3. Herman, S., Moulin, P.: A Particle Filtering Appropach to FM-Band Passive Radar Tracking
and Automatic Target Recognition. Proc. IEEE Aerospace Conf., Big Sky, Montana (2002)
4. Mallick, M., Maskell, S., Kirubarajan, T., Gordon, N.: Littoral Tracking Using Particle Filter.
Proc. Fifth Int. Conf. Information Fusion, Annapolis, MD, USA (2002) 935–942
5. Challa, S., Bergman, N.: Target Tracking Incorporating Flight Envelope Information. Proc.
Third International Conf. on Information Fusion, Paris, France (2000) ThC2-22–27
6. Tchamova, A., Semerdjiev, Tz., Dezert, J.: Estimation of Target Behaviour Tendencies using
Dezert-Smarandache Theory. Proc. Sixth International Conf. on Information Fusion, Australia
(2003) 1349–1356

Monte Carlo Algorithm for Maneuvering Target Tracking

539

7. Challa, S., Pulford, G.: Joint target tracking and classification using radar and ESM sensors.
IEEE Trans. Aerospace and Electr. Systems, Vol. 37 (2001) 1039–1055
8. Doucet,A., de Freitas, N., Gordon, N.(ed.): Sequential Monte Carlo Methods in Practice.
Springer-Verlag, New York (2001)
9. Bar-Shalom, Y., Li, X.R.: Multitarget–Multisensor Tracking: Principles and Techniques. YBS
Publishing (1995)

