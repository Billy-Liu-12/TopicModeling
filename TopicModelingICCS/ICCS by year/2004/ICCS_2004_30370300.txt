Constraint-Based Contact Analysis between Deformable
Objects
1

2

Min Hong , Min-Hyung Choi , and Chris Lee3
1 Bioinformatics, University of Colorado Health Sciences Center,
4200 E. 9th Avenue Campus Box C-245, Denver, CO 80262, USA
Min.Hong@UCHSC.edu
2 Department of Computer Science and Engineering, University of Colorado at Denver, Campus Box 109, PO Box 173364, Denver, CO 80217, USA
minchoi@acm.org
3 Center for Human Simulation, University of Colorado Health Sciences Center,
P.O. Box 6508, Mail Stop F-435, Aurora, CO 80045, USA
chris.lee@mesanetworks.net

Abstract. The key to the successful simulation of deformable objects is to
model the realistic behavior of deformation when they are influenced by intricate contact conditions and geometric constraints. This paper describes constraint-based contact modeling between deformable objects using a nonlinear
finite element method. In contrast to the penalty force based approaches, constraint-based enforcement of contact provide accuracy and freedom from finding proper penalty coefficients. This paper is focused on determining contact
regions and calculating reaction forces at appropriate nodes and elements
within the contact regions. The displacement and deformation of all nodes are
dynamically updated based on the contact reaction forces. Our constraint based
contact force computation method guarantees tight error bound at the contact
regions and maintains hard constraints without overshoot or oscillation at the
boundaries. In addition, the proposed method doesn't require us to choose
proper penalty coefficients, thus greater numerical stability can be achieved and
generally large integration steps can be utilized for the ODE solver. Contact
conditions are formulated as nonlinear equality and inequality constraints and
the force computation is cast into a nonlinear optimization problem. Our rigidto-deformable and deformable-to-deformable contact simulation demonstrates
that the non-penetration constraints are well maintained.

1 Introduction
With the increased demand for the visual realism in character animation, medical and
scientific visualization, deformable object simulation is becoming a major issue. In
medical visualization, for example, realistic deformation is quite complex to achieve
where skin, muscle, ligaments and organs are all highly deformable and in constant
contact. Thus far, deformable object simulation and animation have been addressed
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 300–308, 2004.
© Springer-Verlag Berlin Heidelberg 2004

Constraint-Based Contact Analysis between Deformable Objects

301

from the modeling perspective where the main focus was to accurately and efficiently
represent the deformation itself based on the given external forces [8]. Previous research demonstrated how deformable bodies are reacting and influenced by the
known external forces, ignoring complex contact interplay between multiple deformable objects [1,11,17]. However, deformable object simulation should be addressed in
a broad context of interaction with surrounding environments such as surface contacts
and geometric constraints [14]. When two flexible objects collide, they exert reaction
forces on each other resulting in the deformation of both objects. While many important breakthroughs have been made in modeling the deformation, the simulation of
isolated deformable objects without an accurate contact model has few practical applications. Baraff et al. [2] have presented a flexible-body model that represents a
compromise between the extremes of the nodal and rigid formulations and demonstrated the dynamic simulation of flexible bodies subject to non-penetration constraints. However, their flexible bodies are described in terms of global deformations
of a rest shape and limited to specific geometric structures.
Also previously, a simplified particle system [11] and the depth field method [20]
have been used to simulate the contact. Joukhadar et al. [19] demonstrated a fast
contact localization method between deformable polyhedral. Hirota et al. [18] used
penalty forces to prevent self-collision of FEM-based human model. Baraff [4] also
implemented similar spring types of penalty force to prevent inter-penetration for
cloth simulation. However, these approaches allow penetration upfront and measure
the penetration depth to estimate the force to rectify the situation. These approaches
are prone to the overshoot and oscillation problem if the stiffness coefficient is not
correct, and the larger coefficients make the integration stepping suffer. However, an
even more serious problem is that determining proper values for the stiffness of the
spring is not trivial. Therefore, sliding contact between two deformable objects is
very problematic while using a penalty-based method to maintain a tight error bound.
Recent researches in cloth simulation using repulsions, penalty force and geometric
fixes [5, 10, 15] also share similar problems.
This paper demonstrates a computational scheme for representing the geometry
and physics of volumetric deformable objects and simulating their displacements
when they are colliding and preserving accurate contact positions. The proposed
technique focuses on determining contact regions of both objects and calculates accurate contact reaction forces at appropriate nodes and elements to maintain the resting
contact relations. Our penetration-free deformation is based on the consolidation of
colliding and resting contacts often used in rigid body simulation [3] and uses quadratic programming [21] to solve the non-penetration constraints.

2 Collision Detection and Contact Region Identification
Our deformation model is based on the standard nonlinear finite element method
(FEM) analysis [6, 7] with Cauchy-Green deformation tensor and we have chosen to
use a nearly incompressible Neo-Hookean material [9]. Since deformable object is
discretized with a finite number of elements, the collision detection problem can be

302

M. Hong, M.-H. Choi, and C. Lee

interpreted as determining minimum distance between two non-convex boundary
polyhedra. Collision detection has attracted considerable attention in geometric modeling and robotics [12]. A volumetric object is meshed with a set of tetrahedra and the
surface is represented with a set of triangles. An entire object is approximated with a
hierarchical tree of axis-aligned bounding boxes (AABB) to facilitate the quick collision rejection. Although an AABB quick reject test eliminates substantial computation time, actual costly intersection tests between geometric primitives at the leaves of
the trees are inevitable. We are mainly interested in vertex-face collision and with an
option to turn on and off edge-edge collision detection. This issue is detailed in the
contact force computation section.
Once the penetrated objects and the intersections are found, the simulator must
compute the exact collision time to include contact forces to prevent further penetration. Finding the exact collision time is time consuming [13], so often a numerical
estimate is preferred within a certain tolerance. In addition, finding the exact collision
time between deformable bodies using back-tracking and binary search is not practical because, unlike rigid objects which have relatively few nodes per object, soft
objects contact may include numerous nodes that can penetrate the surfaces of other
objects in a given time step. Thus potentially vast number of triangle-edge collisions
can occur repeatedly during back-tracking and simulation can be slowed down substantially. Instead, when a penetration is detected between a node and a surface, the
inter-penetrated nodes are moved back onto the surface. By doing so, we use a completely inelastic collision, similar to a zero restitution coefficient, from the colliding
node’s point of view. The artificial abrupt deformation is estimated and added to the
node’s force vector by interpolating internal forces of the colliding element based on
the distance it is moved back. Then, the simulator sets up relative velocities of the
node and surface contact points (computed with 3 nodes of the surface) to estimated
velocities which are calculated by interpolation of relative velocities to ensure the
legal condition of the collision for a non-penetration constraint. Changes in the internal force of the colliding node represent the compression and stored energy of the
colliding elements and subsequently used for expansion and separation. This process
simplifies the collision detection so that the actual contact force computation can be
done more efficiently.

3 Contact Force Computation
Once the collisions are detected and the penetrated feature list is formed, the contact
constraints are formulated and reaction forces are computed to prevent the penetration. Our collision and contact model is an extension from well-known rigid body
polygonal objects contact scheme [3] to deal with multiple contact points within the
contact region and the management of active constraint set. As fig. 1 illustrates, at a
given time step, a point x on the contactor surface (Body I) can be either in contact
with a point y on the target surface (Body J) or outside the surface. This can be verified by calculating the distance g ( x, y ) from x to y . If g ( x, y ) > 0 , there is no contact

Constraint-Based Contact Analysis between Deformable Objects

303

between the two points and the normal contact force λ between these points is equal
to zero. On the other hand, if g ( x, y ) = 0 , the two points are in contact and the contact
force has a non-zero value. These complimentary conditions can be shown as follows:
g ( x, y ) ≥ 0, λ ≥ 0, gλ = 0
To model the contact relation between deformable bodies, above conditions should be
applied at each of the contact nodal points.

Fig. 1. Contact conditions

Fig. 2. Contact conditions between two tetrahedral

Our computation model for constraint-based contact analysis focuses on converting the contact cases into non-penetration constraints and formulates the contact
forces to maintain the constraints at the contactor and target nodal points. Contact
forces are applied exactly the same as external forces and generate deformation on
both sides. Fig. 2 shows three possible contact scenarios, before, at contact, and after
the penetration between two tetrahedra with a vertex-face contact. When the two
bodies are disjoint at a given time t 0 , the prospect contact points (closest point to the
other object) on each side of object Pa and Pb are separated and the relative distance d is positive. However, when an actual penetration happens, the relative distance
becomes negative as illustrated in fig. 2. Pa (t 0 ) = Pb (t 0 ) denotes that two points are in
contact at time t 0 . The contact status of two points at time t 0 can be written in distance
function in the normal direction as:
d i (t 0 ) = nˆ i (t 0 ) ⋅ ( Pa (t 0 ) − Pb (t 0 ))

where nˆ is the outwards unit surface normal of a point i on the surface of object B.
[0]Once the collision detection routine finds all colliding elements, non-penetration
constraints are formulated to prevent further penetration in the next time step. Our
simulator enforces this constraint by setting the relative velocity to zero and by
maintaining the relative acceleration to be greater than or equal to zero. The relative
velocity d i (t ) , a time derivative of d i (t ) , can be represented as:
d (t ) = nˆ (t ) ⋅ ( P (t ) − P (t )) + nˆ (t ) ⋅ ( P (t ) − P (t ))
i

i

i

a

b

i

a

b

Starting from d i (t ) = 0 and having di (t ) = 0 ensures that the two points are not moving
toward penetration or separation at the current time step. Relative acceleration with
respect to the nodal positional acceleration can be written as:
 (t ) − P
 (t )) + 2nˆ (t ) ⋅ ( P (t ) − P (t ))
di (t ) = nˆ i (t ) ⋅ ( P
a
b
i
a
b

304

M. Hong, M.-H. Choi, and C. Lee

prevent inter-penetration, the condition di ( t ) ≥ 0 must be maintained.
(t ) term for both side of objects, and
Since di (t ) has nodal positional accelerations P
To

nodal accelerations can
force f ci (t ) ≥ 0 and mass.

be

rewritten

with

repulsive

outward

contact

Fig. 2 only illustrates the vertex-face case but edge-edge case is similar. Once the
collision is detected, there are two contact points at each side of an edge and the normal direction can be computed with a cross product of two edges to represent the
perpendicular direction. Computing the relative velocity and acceleration is similar to
the vertex-face case. Since we're using a mesh structure to discretize a volume, the
density of mesh determines the overall resolution and details of objects. If the average unit tetrahedron size is small enough, then the edge-edge case can be ignored
since the edge-edge penetration can be detected by the vertex-face within a few times.
However, if the size of average tetrahedron is relatively big, then the edge-edge
penetration shows a significant visual artifacts and it must be removed. For deformable objects where each volumetric structure is meshed with fine triangles and tetrahedra, enforcing the edge-edge condition often causes additional computing load
without substantial improvement in visual realism. In addition, sometimes enforcing
edge-edge condition make the two objects remain in contact on an edge instead of a
contact area, resulting local separation gaps within the contact area. Our system
adopts an option to ignore the edge-edge cases when the mesh size is relatively small
compare to the size of object volume.

4

Numerical Solution Method

To maintain the contact constraint, contact force must be positive to represent repulsive force toward the outside of the contact face f ci (t ) ≥ 0 or the relative acceleration
must be d (t ) ≥ 0 to guarantee the object separation. In addition, if any one of those
i

conditions is met, then the other inequality must be zero. This last condition can be
written as f ci di (t ) = 0 . These complementary conditions can be arranged as a quadratic programming problem [21] with a general form as follows:
Minimize
Subject to

1 T
x Qx
2
Ax ≥ b, x ≥ 0
cT x +

Since the function f ci di (t ) = 0 is monotonic, the minimization will have at least one
solution and will converge to zero. Therefore, it can be used as an objective function
and the f ci (t ) ≥ 0 and di (t ) ≥ 0 conditions can be considered as inequality constraints
in the QP system. If we rewrite the relative acceleration as a function of unknown
contact forces as:
di (t ) = ai1 f c1 + ai 2 f c 2 + " + ain f cn + bi

Constraint-Based Contact Analysis between Deformable Objects

305

where aij is a n by n matrix for coefficients of unknown contact force, then we can
get the linear and quadratic coefficients c T and Q . Interior Point Method for QP often
uses slack variables to make all inequality constraints into non-negatives. Nonnegativity constraints are replaced with logarithmic barrier terms and added to the
objective function. As the non-negativity constraints approach zero, the logarithmic
barrier function becomes negative infinity, moving the objective function to the positive infinity. Therefore, the objective function will prevent them from becoming
negative. The remaining linear constraints are all equalities and Lagrangian multipliers can be applied to get the local minima. The condition for the local minima is
Karush Kuhn Tucker (KKT) condition. Incorporating the equality constraints into the
objective function
using Lagrange multipliers
makes
the
system:
1
Minimize cT x + xT Qx− µ∑ log xi −µ∑ logwi + λT (b − Ax + w)
i
i
2

where µ is a weight coefficient. If we take the derivative of the objective function and
set it to zero for the local minima, we then have a resulting system of 2m + 2n linear
equations with 2m + 2n unknowns, where m and n denote the number of nodes and
constraints. Since this is sparse linear system, we can apply well-known sparse linear
system solvers including conjugated gradient method or Cholesky factorization.

Fig. 3. Ball and board in contact

Fig. 4. Two deformable cylinders in contact

5 Experiments
We have described a FEM-based deformation simulator and implemented collision
th
detection and contact resolution modules. Our simulator uses the 4 -order RungeKutta ODE solver with adaptive step sizes. Fig. 3 shows a contact simulation between
two deformable bodies, a stiff wood board and another stiff heavy metal ball. An
animation [16] shows its accurate maintenance of the contact condition as well as
realistic behaviors of the two stiff objects under contact. Since the models have relatively fine mesh structure, the simulation was performed and rendered off-line. Fig. 4
shows two deformable cylinders in contact. These cylinders are relatively coarsely

306

M. Hong, M.-H. Choi, and C. Lee

meshed and softer than the example shown in fig. 3. This example demonstrates that
the contact and overall volumes of the objects are preserved even if they are under
large deformation. An internal view from the animation shows the cylinders wrap
around each other shows no penetrated nodes under the large deformation. The accuracy of our collision and contact model is quantitatively evaluated by measuring
penetration and/or separation distance at contact regions.
1.20E-02

1.00E-02

Penetration depth

8.00E-03
Series1
Series2
Series3

6.00E-03

Series4
Series5
Series6
Series7

4.00E-03

2.00E-03

0.00E+00
0

50

100

150

200

250

Non penetration conditions over time

Fig. 5. Penetration depth

Fig. 5 shows an experimental penetration depth data from the simulation of two
deformable bodies in contact shown in fig. 4. It runs in real-time and programmed to
record all contacts error measures. It sampled 7 areas of contacts with the total of
about 250 individual contact constraints enforced over time. The tolerance of penetration is set to 10E-2 and the average unit length of an element is 10, so it allows
about 1/1000 of the size of a tetrahedral element for legal penetration. As shown in
the graph, a majority of contact constraints are maintained at 10E-3 precision. Some
contacts undergo penetrations up to the tolerance level of 10E-2 but nonetheless they
are controlled within the user-defined error bound. Although the stability of simulation is heavily dependent to the material properties and ODE step sizes, our QP solver
converges well within the pre-defined error bounds. For models with approximately
500 tetrahedral elements each side, our simulator performs at a visual interactive rate
with an average of 25 frames per second on a Pentium 4 1.7GHz.

6 Conclusion and Future Works
This paper described a constraint-based collision and contact simulation between
deformable bodies. The hierarchical collision detection and the initial conditioning
process for non-penetration constraint enforcement simplifies the constraint formulation and accelerates the overall contact simulation. The nonlinear optimization based
contact constraint enforcement demonstrates tight error bound at the contact region
and numerical stability. The performance of the system is efficient enough to run
medium to small scale FEM model in real-time. Our constraint-based contact elimi-

Constraint-Based Contact Analysis between Deformable Objects

307

nates the needs for computing proper penalty force coefficients. Although some
coarsely meshed objects can be simulated in real-time using a generic PC, deformation and contact between densely meshed structures still remains as a significant
challenge. Proper parallelization of FEM deformation with respect to the collision
detection, and contact force computation could be one of the natural extensions from
this work. Adaptive re-meshing and simulation based on the amount of deformation
and area of interest would also substantially increase the performance as well.
Acknowledgement. This research is partially supported by Colorado Advanced
Software Institute (PO-P308432-0183-7) and NSF CAREER Award (ACI-0238521).

References
1.
2.
3.
4.
5.
6.
7.

8.

9.
10.
11.

12.
13.
14.

15.

S. Cotin, H. Delingette, and N. Ayache. Real-Time Elastic Deformations of Soft Tissues
for Surgery Simulation, IEEE Tr. On Visualization and Computer Graphics, 1999.
D. Baraff and A. Witkin. Dynamic Simulation of Non-Penetrating Flexible Bodies, ACM
Computer Graphics, Vol. 26, No. 2, 1992
A. Witkin and D. Barraf. Physically Based Modeling, SIGGRAPH 03’ Course notes, 2003
D. Baraff and A. Witkin. Large Steps in Cloth Simulation, Proc. Computer Graphics,
Annual Conference Series, ACM Press, 1998, pp. 43-54.
D. Baraff, M. Kass, and A. Witkin. Untangling Cloth, ACM Transactions on Graphics,
Proceedings of ACM SIGGRAPH 2003: Volume 22, Number 3, 862-870.
K. Bathe. Finite Element Procedures, Prentice Hall, Upper Saddle River, New Jersey
07458.
G. Beer, Finite Element, Boundary Element and Coupled Analysis of Unbounded Problems in Elastostatics, International Journal for Numerical Methods in Engineering, Vol 19.
p567-580, 1980.
J. Berkley, S. Weghorst, H. Gladstone, G. Raugi, D. Berg, and M. Ganter. Fast Finite
Element Modeling for Surgical Simulation, Proc. Medicine Meets Virtual Reality
(MMVR'99), ISO Press, 1999, pp. 55-61.
J. Bonet, R. D. Wood, Nonlinear continuum mechanics for finite element analysis, Cambridge University press.
R. Bridson, R. Fedkiw, and J. Anderson, Robust treatment of collisions, contact and friction for cloth animation, Proc. SIGGRAPH 2002, ACM Press, Vol 21, pp. 594-603, 2002
M. Bro-Nielsen and S. Cotin. Real-Time Volumetric Deformable Models for Surgery
Simulation Using Finite Elements and Condensation, Proc. Eurographics'96, Vol. 15,
1996.
D. Chen and D. Zeltzer. Pump It Up: Computer Animation of a Biomechanically Based
Model of Muscle Using Finite Element Method, Proc. SIGGRAPH 92, ACM Press, 1992.
M. Choi, James F. Cremer, Geometrically-Aware Interactive Object Manipulation, The
Journal of Eurographics Computer Graphics Forum. Vol. 19, No. 1, 2000.
M. Hong, M. Choi, R. Yelluripati, Intuitive Control of Deformable Object Simulation
using Geometric Constraints, Proc. The 2003 International Conference on Imaging Science, Systems, and Technology (CISST’ 03), 2003
M. Desbrun, P. Schroder, Interactive Animation of Structured Deformable Objects,
Graphics Interface, 1999

308

M. Hong, M.-H. Choi, and C. Lee

16. Computer Graphics Lab. University of Colorado at Denver,
http://graphics.cudenver.edu/ICCS04.html
17. S. Gibson and B. Mirtich, A Survey of Deformable Modeling in Computer Graphics,
Tech. Report No. TR-97-19, Mitsubishi Electric Research Lab., Cambridge, MA, Nov
1997
18. G. Hirota, S. Fisher, A. State, H. Fuchs, C. Lee, Simulation of Deforming Elastic Solids in
Contact, Siggraph 2001 Conference Abstract and Applications
19. A. Joukhadar, A. Wabbi, and C. Laugier. Fast Contact Localization Between deformable
Polyhedra in Motion, IEEE Computer Animation, June 1996.
20. M. Kass, A. Witkin, and D. Terzopoulos. Snakes: Active Contour Models, Int. J. Computer Vision, 1(4), 1987, pp. 321-332.
21. Y. Ye, Interior Point Algorithms: Theory and Analysis, Wiley-Interscience Series in Discrete Mathematics and Optimization John Wiley & Sons.

