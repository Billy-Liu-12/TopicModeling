Explicit Routing for Traﬃc Engineering in
Labeled Optical Burst-Switched WDM
Networks
Jing Zhang1 , Hae-Joung Lee2 , Shuang Wang2 , Xue Qiu2 , Keyao Zhu3 ,
Yurong Huang1 , Debasish Datta4 , Young-Chon Kim2 , and
Biswanath Mukherjee1
1

3

University of California, Davis, CA 95616, USA,
zhangj@cs.ucdavis.edu
2
Chonbuk National University, Jeonju 561-756, Korea,
yckim@moak.chonbuk.ac.kr
Research and Innovation Center, Alcatel Shanghai Bell, Shanghai, China
4
Indian Institute of Technology, Kharagpur 721302, India

Abstract. Optical burst switching (OBS) is a promising technique for
supporting high-capacity bursty data traﬃc over optical wavelengthdivision-multiplexed (WDM) networks. A label-switched path can be
established to forward a burst control packet (BCP) if each OBS node
is augmented with an IP/MPLS controller. Such a network is called a
labeled OBS (LOBS) network, and it can exploit the explicit routing and
constraint-based routing properties supported in the MPLS framework
to perform traﬃc and resource engineering. In this paper, we consider the
traﬃc-engineering problem in a LOBS network, using explicit routing to
balance network load and to reduce the burst-loss probability. We model
the traﬃc-engineering problem in a LOBS network as an optimization
problem and propose two new objective functions to minimize network
congestion. Our illustrative numerical examples show that the burst-loss
probability can be signiﬁcantly reduced using optimization technique,
when compared with shortest-path routing.

1

Introduction

Optical burst switching (OBS) technology has been proposed and studied as a
promising technique to support high-speed data traﬃc over optical wavelengthdivision-multiplexed (WDM) networks [1]-[3]. The basic idea of OBS is to assemble data packets into large-size bursts at the ingress node, and then to send a
burst into the network shortly after a corresponding control message is sent out,
without waiting for any acknowledgement message. The control message, usually called burst control packet (BCP), typically uses a separate control channel
and is processed electronically at each node through which it traverses. Thus, the
This work has been supported in parts by NSF Grant Nos. ANI-02-07864, and INT03-23384, KOSEF, OIRC, and KIPA Professorship Program.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 1209–1216, 2004.
c Springer-Verlag Berlin Heidelberg 2004

1210

J. Zhang et al.

node can conﬁgure its switch for the incoming burst according to the information
carried by the BCP (such as when the burst will arrive and how long it will hold).
The data burst does not need to be converted into electronic domain for processing. It can optically cut through the switching nodes and reach the destination.
Through this approach, the electronic bottleneck of the optical-electric-optical
(OEO) conversion occurring at the switching nodes can be eliminated.
However, data bursts from diﬀerent traﬃc ﬂows can share the same bandwidth on a link using statistical multiplexing. And a data burst will be dropped
if contention occurs at a switching node in an OBS network with no or limited
ﬁber delay lines (FDLs). Actually, the probability of contention for two bursts
at an output link will increase if the load on the link is heavy. Thus, if the traﬃc
can be evenly distributed or balanced over all links when it is routed, the burst
blocking (or loss) probability can be greatly reduced. Hence, we investigate the
traﬃc-engineering problem (i.e., “put the traﬃc where the bandwidth is”) in OBS
networks and design intelligent routing algorithms to achieve such an objective.
In today’s Internet, IP routing generally employs destination-based shortestpath routing, in which a packet is routed or forwarded according to its destination preﬁx at a router. Even though this routing approach can scale gracefully
when network size increases, destination-based routing usually creates congested
links and unbalanced traﬃc distribution [4]. This problem can be solved if the
traﬃc is properly engineered using explicit-routed paths. In a MultiProtocol
Label Switching (MPLS) controlled network, explicit routes are supported by
establishing label-switched path (LSPs). If an OBS node is augmented with an
IP/MPLS controller, the node will become a labeled OBS (LOBS) node, and
it functions as a label-switched router (LSR). In such a LOBS network, a BCP
will be attached a label before it is sent out on the network, and the label is
swapped when the BCP is processed at each intermediate node. Both explicit
routing and constraint-based routing supported in the MPLS framework can be
extended to provision and engineer traﬃc to better utilize network resource in
a LOBS network [1].
An explicit route simply performs as a point-to-point logical connection in a
LOBS network. The collection of such logical connections between the various
pairs of nodes essentially form a virtual network on top of the physical ﬁber network topology. Each explicit route is a “virtual link” of the “virtual topology”.
All BCPs sent out on an explicit route will follow the path through to the destination. Theoretically, any arbitrary virtual topology can be pre-planned and set up
based on the traﬃc intensity (including full-mesh topology and topologies with
more than one virtual links between a node pair). One of the main issues that
needs to be addressed in a LOBS network is how to compute the explicit routes
so that traﬃc is balanced in the virtual topology and the burst-loss probability is
minimized by reducing the probability of burst contention at the various nodes.
An explicit route can be calculated either dynamically (based on “current”
network resource availability) or statically. Dynamic routing can achieve better
load balancing if the network resource information is accurate. However, to support dynamic routing, the network may need to be ﬂooded by frequent networkresource-update messages, and additional signaling protocols or extensions of

Explicit Routing for Traﬃc Engineering

1211

current signaling protocols may need to be developed. Pre-planned (static) routing can avoid such signaling overhead. And most importantly, optimization techniques can be applied in pre-planned routing such that a virtual topology is
established based on a given traﬃc intensity matrix. Given that the physical
topology of an optical network is relatively stable (i.e., this topology changes
less frequently than that in an IP network), periodic or threshold-triggered rerouting of the virtual topology using optimization techniques can be performed
easily to adapt to changing traﬃc intensities.
In this paper, we investigate the problem of pre-planned explicit routing for
traﬃc engineering in a LOBS network. As mentioned in [1], for traﬃc engineering
in a LOBS network, we need to address various issues unique to LOBS such as
potentially excessive burst dropping due to the absence of or limited use of FDLs
at the LOBS nodes when contention occurs. To tackle this situation, we model
the problem of explicit routing for traﬃc engineering as an optimization problem
with the objective of minimizing the link congestion.
The remainder of the paper is organized as follows. Section II reviews previous
work, discusses the shortcomings of the objective function presented in previous
work, and proposes two new objective functions to minimize congestion. In Section III, we apply pre-planned explicit routing to LOBS networks and study the
performance of diﬀerent objective functions using illustrative numerical examples. Section IV concludes this study and discusses future research directions.

2

Optimal Routing for Load Balancing in a LOBS
Network

The problem of how to set up explicit routes between pairs of nodes so that network congestion can be minimized has been studied in [5]. Even though the authors in [5] considered explicit-routing algorithms for Internet traﬃc engineering
instead of LOBS networks, their objective is essentially the same as our objective: namely, set up explicit routes and minimize network congestion. Therefore,
we ﬁrst brieﬂy review the optimization approach proposed in [5], discuss our
approaches, and then compare the two methods.
The authors in [5] formulated the problem as a linear program. To minimize
network congestion or balance traﬃc distribution, the optimization objective
they proposed is to minimize the maximum of all link utilizations. The Integer
Linear Programming (ILP) formulation used in [5] (denoted as ILP-A here) is
summarized below.
ILP-A:
– Notations:
• i and j denote end points of a physical ﬁber link.
• s and d denote source and destination of a given traﬃc ﬂow.
– Given:
• G = (V, E): network topology with node set V and edge set E.
• Cij : capacity of link (i, j).
• Dsd : bandwidth requirement of traﬃc ﬂow from node s to node d.

1212

J. Zhang et al.

– Variables:
sd
sd
• Xij
: Xij
= 1 if traﬃc ﬂow (s, d) is routed through ﬁber link (i, j);
sd
otherwise, Xij
= 0.
• α: maximal link utilization across the entire network. α ≥ 0.
– Objective A: Minimize the maximum link utilization.
Minimize :α + r

s,d∈V

(i,j)∈E

sd
Xij

(1)

where r is a positive number which is assigned a small value such that minimizing α will maintain higher priority.
– Constraints:
• On physical route ﬂow-conservation constraints:
(k,j)∈E

sd
Xkj
−

sd
Xik
= 0 if k = s, d ∀k ∈ V, ∀s, d ∈ V
(2)
sd
−
X
=
1
∀s,
d
∈
V
(3)
is
(i,s)∈E

(i,k)∈E

(s,j)∈E

sd
Xsj

• On link-capacity constraints:
s,d∈V

sd
Dsd Xij
≤ Cij α ∀(i, j) ∈ E

(4)

sd
in the objective function
Note that the second term r s,d∈V (i,j)∈E Xij
(i.e., Objective A) tries to avoid loops and unnecessarily long paths in routing.
Through Objective A, the authors in [5] expect that the traﬃc is moved
away from the congested links, and traﬃc load is balanced across the network.
However, we can see that minimizing network congestion or balancing load can
not be strictly quantiﬁed. It is straightforward to see that minimizing the maximum link utilization can help reduce congestion but it cannot guarantee that
the burst-loss probability is the minimum for all possible routings. For example,
given two routings (routing 1 and 2) with the same α, load distribution on all
the links is another parameter to evaluate how well the load is balanced. If more
number of links in routing 1 have load close to α than that in routing 2, we can
expect that a network with routing 1 will have larger burst-loss probability than
that in a network with routing 2.
Therefore, improvements need to be made to further balance the load given
the optimized maximum link utilization (i.e., α) in the network. Based on this
observation, we propose two new objectives:

– Objective B: Minimize the number of links whose utilization is larger than
a Watermark.
– Objective C: Minimize the sum of consumed bandwidth (or load) on links
whose utilization is larger than a Watermark.
The Watermark is a positive integer, and it is smaller than α. In Objectives B
and C, α provides a “ceiling” on the link load, which means that no link can
have a load larger than α. Watermark provides a threshold, and a link will be
marked as “(relatively) highly loaded” if its load is larger than the Watermark.
With Objective B, we can ensure that the load on a link can exceed the threshold

Explicit Routing for Traﬃc Engineering

1213

only when necessary. With Objective C, we can ensure that load on a link can
only exceed the threshold by the minimum amount. With these two objectives,
traﬃc will be shifted from heavily-loaded links to lightly-loaded links even when
α is ﬁxed.
We develop the ILP formulations for Objective B and C as follows (denoted
as ILP-B and ILP-C, respectively).
ILP-B:
– Objective B: Minimize the number of links whose utilization is larger than
Watermark.
Minimize :

(i,j)∈E

Yij + r

s,d∈V

(i,j)∈E

sd
Xij

(5)

– Constraints:
• On physical route ﬂow-conservation constraints:
(k,j)∈E

sd
Xkj
−

sd
Xik
= 0 if k = s, d ∀k ∈ V, ∀s, d ∈ V
(6)
sd
−
X
=
1
∀s,
d
∈
V
(7)
is
(i,s)∈E

(i,k)∈E

(s,j)∈E

sd
Xsj

• On link-capacity constraints:
s,d∈V

sd
Dsd Xij
≤ Cij α ∀(i, j) ∈ E

(8)

• On load-balancing constraints:
s,d∈V

sd
− W atermark ≤ pYij ∀(i, j) ∈ E
Dsd Xij

(9)

ILP-C:
– Objective C: Minimize the sum of consumed bandwidth (or load) on links
whose utilization is larger than a Watermark.
Minimize :

(i,j)∈E

Zij + r

s,d∈V

(i,j)∈E

sd
Xij

(10)

– Constraints:
• On physical route ﬂow-conservation constraints:
(k,j)∈E

sd
Xkj
−

sd
Xik
= 0 if k = s, d ∀k ∈ V, ∀s, d ∈ V
(11)
sd
−
X
=
1
∀s,
d
∈
V
(12)
is
(i,s)∈E

(i,k)∈E

(s,j)∈E

sd
Xsj

• On link-capacity constraints:
s,d∈V

sd
Dsd Xij
≤ Cij α ∀(i, j) ∈ E

(13)

• On load-balancing constraints:
s,d∈V

sd
Dsd Xij
− W atermark ≤ Zij ∀(i, j) ∈ E

(14)

1214

J. Zhang et al.

Note that, in both ILP-B and ILP-C, α is used as a constant and its value
is optimized using ILP-A. In ILP-B, Yij is a new variable deﬁned as follows:
Yij ∈ {0, 1}; Yij = 1 if load on link (i, j) is larger than Watermark; otherwise,
Yij = 0. In Eqn. (9), p is a positive integer and is larger than α − W atermark.
p is introduced to ensure that Yij = 1 only when load on link (i, j) is larger
than Watermark. In ILP-C, Zij is a new variable deﬁned as follows: Zij ≥ 0;
sd
Zij = s,d∈V Dsd Xij
if load on link (i, j) is larger than Watermark; otherwise,
Zij = 0.

3

Illustrative Numerical Examples

We study the performance of pre-planned routing in LOBS networks without
any FDLs. As we have discussed in Section 1, each node is equipped with an
IP/MPLS controller, which could route a BCP according to the label attached to
it. All bursts between the same node pair will follow an explicit route (i.e., a labelswitched path). In LOBS networks, burst-loss probability is mainly determined
by the load of the links the burst traverses. It is also aﬀected by the number of
hops in the explicit route. If a burst needs to travel more hops, the burst will
encounter higher loss probability if we assume the same load, and thus same loss
probability, on each link.
Figure 1 shows the network topology we used in this study, which is a representative US nationwide network with 24 nodes and 86 unidirectional links. Each
edge in Fig. 1 is composed of two unidirectional ﬁber links, one in each direction.
Each ﬁber link is assumed to have 8 data channels and 1 control channel. Each
channel operates at 10 Gbps. We simulate Poisson traﬃc at each node and the
destination of a burst is uniformly distributed among all other nodes. The length
of each burst follows a negative exponential distribution with mean value 105
bits. Contention on the control channel is ignored as the size of a BCP is usually
small. The oﬀset time for a burst is assigned as H ∗tp , where H is the hop distance
of the explicit route the burst will take and tp is the average processing time
for a BCP at a node, which is assumed to be 1/10 of the mean burst length in
this study. In addition, we assume that each node has full wavelength-conversion
capability. The measured performance metrics include burst-loss probability and
average hop distance.
We ﬁrst pre-plan four diﬀerent routings for uniform traﬃc: shortest-path
routing, as well as optimized routing using ILP-A, ILP-B, and ILP-C. We assume
one unit traﬃc ﬂow for each source-destination node pair. Table 1 shows the
characteristics of the four routing tables. Comparing shortest-path routing with
ILP-A, we can see that 53 ﬂows traverse the most congested link (i.e., α = 53) in
shortest-path routing but only 32 ﬂows use the most congested link (i.e., α = 32)
in ILP-A, while the total hop distance (sum of the hop distance of all the ﬂows)
only increases by 6. This indicates that Objective A (minimize the maximum of
link utilization) is eﬀective in moving the traﬃc away from the congested links
without aﬀecting the hop distance too much.
In ILP-B, Watermark is ﬁxed at 29, so the number of links with load larger
than 29 (these link are denoted as heavily-loaded links) is minimized. We ﬁnd

Explicit Routing for Traﬃc Engineering

1215

(a) After routing is optimized using ILP-A (b) After routing is optimized using ILP-B
Fig. 1. A sample network topology. The dark lines are links with more than 29 ﬂows
traversing on them (while arrows indicate in which direction)
Table 1. Characteristics of pre-planned routing tables

Shortest-path routing
ILP-A
ILP-B
ILP-C

0.4
0.3

α Total hop distance
53
1652
32
1658
32
1672
32
1682

3.2

Shortest-path routing
ILP-A
ILP-B (Watermark=29)
ILP-C (Watermark=20)

Average Hop Distance

Burst Loss Probability

0.5

Watermark
N/A
N/A
29
20

0.2
0.1
0

3
2.8
2.6

Shortest-path routing
ILP-A
ILP-B (Watermark=29)
ILP-C (Watermark=20)

2.4
2.2

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

Traffic Intensity

Fig. 2. Burst-loss probability

0.9

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

Traffic Intensity

Fig. 3. Average hop distance

that only 8 links are heavily-loaded links and each of them have 32 ﬂows in
ILP-B, while in ILP-A, 24 links have load more than 29. In Fig. 1(a), we identify
these 24 links in ILP-A with dark lines and in Fig. 1(b), we show the 8 heavilyloaded links in ILP-B with dark lines. We notice that these 8 links create two
cuts (one from east to west and the other from west to east) in the network. One
can see that, when one of the cuts is fulﬁlled, α cannot be reduced below the
maximal link load on the cut. However, the load on other links in the network
can be reduced, as shown in Fig. 1(b).
In ILP-C, Watermark is ﬁxed as 20, which is the average number of ﬂows
(i.e., load) on a link. We choose the average link load as Watermark so the total
load that exceeds the average load is minimized using ILP-C.

1216

J. Zhang et al.

Figure 2 shows the burst-loss probability when we plug in the routing tables
into the LOBS network. It shows that the burst-loss probability is reduced by
15%-80% (when load is less than 0.5) when routing is optimized using ILP-A
compared with shortest-path routing. This is because congestion is removed in
optimized routing, so the burst-loss probability is dramatically reduced. The
burst-loss probability is further reduced by 15%-30% (when load is less than
0.5) using ILP-B and ILP-C, compared with ILP-A. This is because load on
the “heavily-loaded” links can be further balanced using ILP-B and ILP-C, but
ILP-A stops when α is optimized. ILP-C achieves the best performance because
it directly minimizes the load on heavily-loaded links instead of minimizing the
number of heavily-loaded links as in ILP-B; and, as we have mentioned before,
the load determines the burst-loss probability. In Fig. 2, the performance gain
reduces when the load increases. This is due to the fact that more short-hop
bursts will succeed when the load is heavy.
Figure 3 shows the average hop distance for the pre-planned routings. As
opposite to the burst-loss probability, shortest-path routing has the minimum
average hop distance, which is because every burst takes the shortest path in
shortest-path routing. For optimized routings, ILP-A performs best, ILP-C performs worst, and ILP-B is in between, which is comparable to the total hop
distance shown in Table 1.

4

Conclusion

We considered the problem of explicit routing for traﬃc engineering in LOBS
networks. We formulated the traﬃc-engineering problem as a linear program
and proposed two novel objective functions to minimize congestion. The illustrative numerical results showed that the proposed optimization approaches can
signiﬁcantly reduce the burst-loss probability without too much sacriﬁce in the
average hop distance for a burst. Traﬃc bifurcation will be studied using the
optimization approach, which is our future research direction.

References
1. C. Qiao, “Labeled optical burst switching for IP-over-WDM integration,” IEEE
Commun. Mag., vol. 38, pp. 104–114, Sep. 2000.
2. S. Junghans and C. M. Gauger, “Resource reservation in optical burst switching:
architectures and realizations for reservation modules,” in Proc. OptiComm’2003,
Dallas, TX, Oct. 2003.
3. W. So, H. Lee, and Y. Kim, “QoS supporting algorithms for optical Internet based
on optical burst switching,” Photonic Network Communications, vol. 5, pp. 147–162,
2003.
4. D. Awduche, J. Malcolm, M. O’Dell, and J. McManus, “Requirements for traﬃc
engineering over MPLS,” Internet draft, IETF, April 1998, draft-awduche-mplstraﬃc-eng-00.txt.
5. Y. Wang and Z. Wang, “Explicit routing algorithms for Internet traﬃc engineering,”
in Proc. of ICCCN’99, Sep. 1999.

