Improving the Performance of Evolutionary
Algorithms for the Multiobjective 0/1 Knapsack
Problem Using ε-Dominance
Crina Gro¸san and Mihai Oltean
Department of Computer Science
Faculty of Mathematics and Computer Science
Babe¸s-Bolyai University, Kog˘
alniceanu 1
Cluj-Napoca, 3400, Romania.
{cgrosan, moltean}@cs.ubbcluj.ro

Abstract. The multiobjective 0/1 knapsack problem is a generalization
of the 0/1 knapsack problem in which multiple knapsacks are considered.
A new evolutionary algorithm for solving multiobjective 0/1 knapsack
problem is proposed in this paper. This algorithm used a ε-dominance
relation for direct comparison of two solutions. Several numerical experiments are performed using the best recent algorithms proposed for this
problem. Experimental results clearly show that the proposed algorithm
outperforms the existing evolutionary approaches for this problem.

1

Introduction

The 0/1 knapsack problem is a widely studied problem due its practical importance. In the last years a generalization of this problem was well studied and
many algorithms for solving this variant have been proposed. Of great interest are the evolutionary approaches for solving the multiobjective 0/1 knapsack
problem. Many papers on the multiobjective knapsack problem and on the algorithms proposed for solving it can be found in the literature [1,2,3]. In this
paper, we propose a new evolutionary approach for multiobjective 0/1 knapsack problem. We use the ε-dominance concept which is a generalization of the
standard Pareto concept.
In section 2 of the paper the multiobjective 0/1 knapsack problems are presented. The description of the newly proposed algorithm is given in section 3
of the paper. The deﬁnition of ε-dominance concept is also given in section 3.
Some comparisons with the most recent algorithms (such as SPEA2, NSGA II,
PESA) are performed in section 4.

2

Problem Statement

The classical 0/1 knapsack problem can be formulated as follow: a set of n items
and a knapsack of capacity c are considered. Each item has a proﬁt pj and a
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 674–677, 2004.
c Springer-Verlag Berlin Heidelberg 2004

Improving the Performance of Evolutionary Algorithms

675

weight wj . The problem is to select a subset of the items whose total weight
does not exceed knapsack capacity c and whose total proﬁt is maximum.
The problem can be extended for an arbitrary number of knapsacks. A set of
n items and a set of k knapsacks are considered. Each item has k weight and k
proﬁts corresponding to the each knapsack. Each knapsack has its own capacity.
The objective is to select a subset of the items with maximum overall proﬁt
among those whose weight does not exceed the knapsack capacity for any of the
k dimensions.

3

Proposed Algorithm

The proposed algorithm uses ε-Pareto dominance relation between solutions.
We give here the deﬁnition of ε-Pareto dominance concept which is a
generalization of the Pareto dominance concept.
Deﬁnition
Consider a maximization problem. Let x, y be two decision vectors (solutions) from the search space. Solution x ε-dominate y if and only if the following
conditions are fulﬁlled:
fi (x) ≥ fi (y), ∀ i = 1, 2,. . . , n,
∃j ∈ {1, 2, . . . , n}: fj (x) > fj (y) + ε.
Each individual is a binary string. The value 1 for the position j of the
chromosome means that the item j is selected to be included in a knapsack.
The proposed algorithm uses steady-state as its underlying mechanism and
can be described as follows:
The algorithm starts with a population of randomly generated individuals.
For each chromosome the total items weight for each knapsack is computed.
If there are knapsacks for which the allowed capacity is exceeded the items
starting with the one for which the proportion utility/weight has the smaller
value are eliminated. This process continues until there are no knapsacks for
which the capacity is exceeded. All nondominated solutions are computed using
the ε-dominance concept. The following steps are repeated until a termination
condition is reached: Two nondominates solutions (the parents) are randomly
chosen. The parents are recombined using uniform crossover operator and the
oﬀspring are mutated. For each oﬀspring the procedure for eliminating items if
the capacity of one of knapsacks is exceeded is used. The oﬀspring enters the
population and the dominated solutions are removed.
This algorithm is called ε Multiobjective Knapsack Algorithm (ε-MOKA).

676

C. Gro¸san and M. Oltean
Table 1. The values of ε for the case of three knapsacks

Number of functions The value of ε
evaluations
150,000
1000
288,000
1000
576,000
1500

Number of generations
which ε becomes ε-1
500
1000
1000

after

Table 2. The results obtained for three knapsacks by ε-MOKA, NSGA II, SPEA2 and
PESA considering 150,000 functions evaluations. Results are averaged over 30 runs
ε-MOKA
NSGA II
SPEA 2
PESA

ε-MOKA NSGA II
0.90301
0
0
0.906996
0
0.862837

SPEA 2 PESA
0.939242 0.994266
0.976883 0.989555
0.990861
0.908916

Table 3. The results obtained for three knapsacks by ε-MOKA, NSGA II, SPEA2 and
PESA considering 288,000 functions evaluations. Results are averaged over 30 runs
ε-MOKA
NSGA II
SPEA 2
PESA

4

ε-MOKA NSGA II
0.787402
0
0
0.853698
0
0.850779

SPEA 2 PESA
0.910033 0.985815
0.996314 0.990203
0.985883
0.93234

Experimental Results

We test our algorithm considering 750 items and three knapsacks. The results
obtained by ε-MOKA are compared to the results obtained by SPEA2 [3], NSGA
II [2] and PESA [1]. For this comparison C metric introduced by Zitzler is used.
Test data are taken from [4].
Table 4. The results obtained for three knapsacks by ε-MOKA, NSGA II, SPEA2 and
PESA considering 576,000 functions evaluations. Results are averaged over 30 runs
ε-MOKA
NSGA II
SPEA 2
PESA

ε-MOKA NSGA II
0.58796
0
0
0.832425
0
0.809001

SPEA 2 PESA
0.851949 0.931406
0.996237 0.991706
0.96905
0.939329

Improving the Performance of Evolutionary Algorithms

677

Using C metric two sets of nondominated solutions can be compared to each
other. C(A, B) return the proportion between number of solutions from B which
are dominated by solutions from A over number of solutions from B. This number
is a number between 0 and 1. The value C(A, B) = 1 means that all decision
vectors in B are dominated by A. The value C(A, B) = 0 represent the situation
when none of the points in B are dominated by A.
General parameters used by the considered algorithms are: number of knapsacks: 3, population size: 300, number of functions evaluations: 150,000, 288,000,
576,000.
The value of ε for ε-MOKA is chosen as follows: at the beginning of the
search process this value is a large one. In this way a low dominance is ensured
and this allow us to preserve many solutions in the ﬁrst generations. After a
number of iterations the value of ε is decreased by 1. Reducing the value of ε we
will ensure the true Pareto dominance at the end of the search process.
The values of ε are presented in Table 1.
The results obtained by applying C metric for 150,000, 288,000 and 576,000
are presented in Table 2, Table 3 and Table 4, respectively.
Solutions obtained by ε-MOKA are not dominated by solutions obtained by
NSGA II, SPEA 2 and PESA even for 576,000 functions evaluation. This means
ε-MOKA has a very good convergence.

References
1. Corne, D.W., Knowles, J.D.: The Pareto-Envelope based Selection Algorithm for
Multiobjective Optimization. In Proceedings of the Sixth International Conference
on Parallel Problem Solving from Nature, Springer-Verlag, Berlin (2000) 839–848
2. Deb, K., Agrawal, S., Pratap A., Meyarivan T.: A fast elitist non – dominated
sorting genetic algorithm for multi-objective optimization: NSGA II. In: Shoenauer,
M. et al. (eds), Parallel Problem Solving From Nature – PPSN VI, Springer-Verlag,
Berlin (2000) 849–858
3. Zitzler, E., Marco Laumanns and Thiele, L.: SPEA 2: Improving the Strength Pareto
Evolutionary Algorithm. TIK Report 103, Computer Engineering and Networks
Laboratory (TIK), Departament of Electrical Engineering Swiss federal Institute of
Technology (ETH) Zurich (2001)
4. http://www.tik.ee.ethz.ch/ zitzler/testdata.html

