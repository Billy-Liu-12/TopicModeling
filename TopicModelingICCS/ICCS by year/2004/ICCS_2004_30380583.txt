Reuse of Organisational Experience
Harnessing Software Agents
Krzysztof Krawczyk1 , Marta Majewska1 , Mariusz Dziewierz1 , Renata Slota2 ,
Zoltan Balogh3 , Jacek Kitowski1,2 , and Simon Lambert4
1

ACC CYFRONET-AGH, ul. Nawojki 11, 30-950 Cracow, Poland
{krafcoo,mmajew,aristot}@icsr.agh.edu.pl
2
Institute of Computer Science, AGH-UST, al. Mickiewicza 30, Cracow, Poland
{rena,kito}@agh.edu.pl
3
Institute of Informatics, SAS, Dubravska cesta 9, 845 07 Bratislava, Slovakia
balogh.ui@savba.sk
4
CCLRC Rutherford Appleton Laboratory, Chilton, Didcot, OX11 0QX, UK
S.C.Lambert@rl.ac.uk

Abstract. This paper presents the application of agent technology for
managing employee’s experience within an organisation. The proposed
approach is discussed on the basis of the software platform developed
within the scope of the EU IST Pellucid project. The system is intended
to provide universal assistance for organisationally mobile employees. Its
functionality is realized by a set of agents. The focus of this paper is on
reuse of organisational experience, which is transmitted by active hints.
The experience is structured using ontologies.

1

Introduction

An agent-based experience management system is being developed within the
scope of the EU IST Pellucid project (IST-2001-34519) [1], as a response to needs
formulated by many organisations to reuse their employees’ experience. The
Pellucid system is aimed at departments of organisations that are characterized
by a high level of staﬀ rotation which results in reduced eﬃciency and consequent
losses. The Pellucid system allows the capturing of employees’ experience and
reusing it to assist other employees in a similar position in the future. It also
assists a mobile employee to reuse his knowledge at a new position within the
organisation. The paper discusses the use of agents for experience management
in the Pellucid platform. Certain aspects of experience management have been
already described in [2,3,4,5].
In Section 2 the state of the art is sketched. Afterwards, the experience deﬁnition for the Pellucid platform is given in Section 3. The experience manifestation, presented to the employees, called active hints, is speciﬁed too. Then, the
foundations of a process of the experience adaptation to the employee’s needs
are presented (in Section 3) together with the roles of agents participating in
it (shown in Section 4). Next, Section 5 presents a detailed description of the
way the agents perform activation of the active hints. Conclusions arising from
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 583–590, 2004.
c Springer-Verlag Berlin Heidelberg 2004

584

K. Krawczyk et al.

the application of agents to experience management are presented in Section 7,
together with some insight into future work.

2

State of the Art

There are some projects which apply agent technology to knowledge management
environments. AMKM [6] is a framework, which uses agent concepts to analyse
and model organisations and as a result to provide a reusable architecture to
build knowledge management systems. The AMKM framework is intended to
provide a common, uniform description of knowledge items for users performing
diﬀerent knowledge intensive tasks. Next, DIAMS is a multi-agent system which
helps users to access, collect, organise and exchange information [7]. The personal
agents are exploited to provide their owners with well-organised information
collections, as well as friendly information management utilities. The CoMMA
project [8] implements a corporate memory management framework based on
agent technology, that captures, stores and disseminates knowledge to support
users’ work with documents. Ontologies are exploited to annotate documents in
the corporate memory.
In general the scientiﬁc community tries to support employees by providing
a service called Organisational Memory [9,10]. Such a memory is treated as
the collector of all kinds of organisational knowledge and is specially designed
for reuse in the future. The DECOR [11], FRODO[12], KnowMore[13] projects
deal with such knowledge repositories. The heterogenous nature of knowledge
resources implies the use of agents for managing the content of such a memory.

3

Experience Deﬁnition and Representation

It is assumed that an organisation follows a formalised and well established business administration process to reach its goals. The process could be supported
by a Workﬂow Management System (WfMS). WfMS speciﬁes in detail successive activities to be performed. Most of the activities are knowledge-intensive
– they require knowledge of a miscellaneous nature to be performed correctly.
Such activities require from the employees broad knowledge about how to proceed in given circumstances. The Pellucid working deﬁnition of experience uses
such knowledge. Experience is a kind of knowledge concerning an action which
has to be performed in a particular context.
It seems obvious that experience requires human intelligence in both creation
and reuse. For the purposes of the experience management system an adequate
representation of experience has to be found. Ontologies are the natural way to
represent knowledge.
On ontology is a speciﬁcation of conceptualisation, which is readable both
by human and computer systems [14]. The experience could be expressed with
the help of ontology. In the frame of Pellucid operation the experience is represented by a set of active hints. The active hint is a representation of a piece
of experience. According to the context of the employee’s work selected hints

Reuse of Organisational Experience Harnessing Software Agents

Context

suggest

corresponds

585

Action

Active Hint
Justification

has

involves

Resource

Fig. 1. Active hint deﬁnition

are presented to him spontaneously. The elements of the active hint, shown in
Fig. 1, are: an action to be performed, resources involved during performing the
action, a context of the employee work and justiﬁcation for recommendation
of the action. The justiﬁcation represents possible motivation for the employee
to follow the hint. During the operation the Pellucid system tracks all actions
taken by employees as well as working context, and stores relevant instances of
the ontologies. These instances deﬁne the employee’s experience representation.
Pellucid ontologies are implemented in DAML+OIL [15] and manipulated by
the Java-based Jena library[16].
Proﬁles of Employees. Experience is a highly subjective matter in both creation and reuse. The decision whether an active hint should be shown to the
employee has to take into account factors arising not only from the scope of
work characteristic for a given position but also from the employee proﬁle. The
active hints which are going to be proposed to the employee have to ﬁt the employee’s needs. The expectations of the employee strongly depend on experience
and skills he already possesses. According to the above criterion several types of
employees are distinguished:
– Novice – a totally inexperienced employee (e.g. a recent graduate).
– New-hired or Relocated Employee – an employee who has got already some
practical skills needed at the given position acquired during earlier work for
another employer.
– Relocated Employee – an employee who has got already some practical skills
needed at the given position acquired during earlier work in this organisation.
– Experienced Employee – an employee who has worked at the given position
in the organisation for a long time (for the Pellucid system he is an experience
provider).
The active hints should be adapted to the level of employee’s experience – the
experienced user should not be bothered with hints concerning low level skills.
The adaptation of active hints also has to consider that employees’ experience
evolves and new skills are developed over time. Moreover, the employee’s proﬁle
is deﬁned by the employee’s history of work in the organisation and with the
Pellucid system.
Pellucid Formula. One of the most important issues of the Pellucid experience
management system is the choice of experience which should be presented to the

586

K. Krawczyk et al.

user. On the one hand there is knowledge about the role and the job the employee
is assigned to. On the other hand there is experience which the employee has
already acquired. The above relation could be formalised as follows:
E G = ER − E A ,

(1)

where ER is experience required, EA is experience available due to the employee’s
previous activities and EG is the experience gap between required and available
ones. The task of the Pellucid system is to present a subset of EG to the employee
on the basis of ER resulting from description of his current job and role and due
to EA derived from the employee’s proﬁle.

4

Experience Management Agents

Based on Eq. 1 the areas of responsibility for elements of the system can be
deﬁned. The agent technology ﬁts the Pellucid system features well. Cooperating,
intelligent, autonomous agents can be exploited to achieve the overall goals of
Pellucid, i.e, reuse of experience to assist the employees.
As mentioned before, the system should ﬁnd the experience gap for an employee accomplishing a task within a performed role. Therefore, two main components are introduced : Role Agent (RA) and Personal Assistant Agent (PAA).
The purpose of RA is to ﬁnd experience required for a particular role (ER ). PAA
is responsible for ﬁnding experience of a particular employee (EA ). The required
experience is not only related to the role of the employee but it also depends on
the task the employee is performing. So, Task Agent (TA) is introduced to ﬁnd
out what part of experience is required for accomplishment of a particular task.
PAA cooperates with RA and TA agents to learn about the experience gathered
by the employee while playing a role. All these agents are able to ﬁnd experience
necessary for the employee.
Experience gathered by the agents is stored with the help of a special component called Organisational Memory (OM).
The nature of work in any organisation requires access to information resources, such as documents, e-mails, databases, etc. It is necessary to ensure fast
and uniform access to information resources and allow extraction of the information and knowledge from them, since the experience is not only just knowledge of
how to perform a required task, but also often knowledge extracted from organisational assets, i.e. documents and data. This task is performed by Information
Search Agent (ISA), being responsible for accessing document repositories, other
external resources and searching using full-text indexing, document similarity
strategies and ontology searching.
To provide active assistance the system has to track employees’ activities and
the context which they are working in. Therefore, two agents, Monitoring Agent
(MA) and Environment Tracking Agent (ETA) are introduced respectively.
In Fig. 2 the components involved in EG computation are presented.

Reuse of Organisational Experience Harnessing Software Agents
Employee

MA

EXPERIENCE
AVAILABLE

Agents
representing past
employee's roles
RA

587

Agents
representing past
employee's tasks

TA

RA

TA
PAA

RA

TA

ETA

EXPERIENCE
REQUIRED

ISA
OM
RA

TA

Agent representing
current employee's
task
Agent representing
current employee's
role

Fig. 2. Pellucid agents

5

Activation of Active Hints

Several methods could be invented to deal with Eq. 1. A method, which allows
ﬁnding active hints to be presented to the employee, is proposed below.
The factors inﬂuencing activation and deactivation of active hints can be
twofold – can derive from both the required and available experience. A set of
factors that inﬂuence selection of the active hints can be deﬁned. Beneath there
are some examples of the critical factors:
– The employee has already been working on an activity with a similar context.
– Skills of the employee refer to the skills represented by the active hint.
– Employee’s actions have been used to instantiate the active hint.
The approach can be formalised as follows. Thus, E is a set of employees, H
is a set of active hints and F is a set of functions for computing diﬀerent factors:
E = {e1 , e2 , . . . , en },
H = {h1 , h2 , . . . , hm },
F = {f1 , f2 , . . . , fl },

where
where
where

n ∈ N,
m ∈ N,
l ∈ N.

The activation function is
A(f1 , f2 , . . . , fl ) ∈ (0, 1).
where fi (ej , hk ), is the factor function.
The activation function takes all factor functions fi for a given active hint hk
for a particular employee ej and returns a normalised rating value. The activation
function is computed for each active hint. The active hints are rated according
to the value of the activation function - the greater the value, the more relevant
is the active hint for the particular situation.

588

K. Krawczyk et al.
Table 1. Activation function computation for a particular employee
ej
f1
f2
...
fl
A

h1
h2
f1 (ej , h1 )
f1 (ej , h2 )
f2 (ej , h1 )
f2 (ej , h2 )
...
...
fl (ej , h1 )
fl (ej , h2 )
A(f1 , f2 , . . . , fl ) A(f1 , f2 , . . . , fl )

...
...
...
...
...
...

hm
f1 (ej , hm )
f2 (ej , hm )
...
fl (ej , hm )
A(f1 , f2 , . . . , fl )

For each employee the following array should be computed:
The activation function exploits factor functions to determine if an active hint
should be presented to the employee; for instance in the simplest case the activation function could be a sum or a weighted sum of all factors.

6

Scenario

The activation function is computed using software agents technology. Each
agent is responsible for computing one or more factors, but to merge them all
collaboration and communication between agents is necessary.
At the beginning of Pellucid’s operation in the organisation, the organisational memory will be fed with the initial active hints. During regular work the
system will acquire the knowledge or experience and transform it into new active hints with the help of a knowledge engineer. The graphical user interface
for active hints creation is also proposed but targeted mainly to advanced users.
So the system memory will grow continuously. As presented above the selection
of active hints could involve many factors. We will show how subsequent factors
limit the number of active hints to be shown.
We assume that two diﬀerent employees are in the same working context.
The system should extract only these active hints which match to the context of
our two employees. By matching working context the position in the workﬂow
tracking/management system is considered. Then the domain speciﬁc properties
are regarded. They should be similar to those speciﬁed in the context of the
active hint.
The user context and the problem context are as follows.
– User context in workﬂow system. It is a part of Working Context concerning
the position of employee in business process. Active hint is candidate for
activation if its context is similar to this one.
P rocessContext(ej ) ∼ P rocessContext(hk )

(2)

– Problem context. These are all properties describing the current problem
domain. Active hint could be activated if the problem context is similar to
the problem in which the active hint is valid.
P roblemContext(ej ) ∼ P roblemContext(hk )

(3)

Reuse of Organisational Experience Harnessing Software Agents

589

Afterwards, the employee proﬁle is taken into account. The participation in the
similar tasks increases the level of expertise which in turn results in lower amount
of active hints shown to the user. The active hints that recommend an action
that the user is familiar with (he always performs it when dealing with such a
task) are also not suggested. If dealing with a novice all active hints matching the
current situation are shown. However, the skilled new hire employee also require
experience assistance, but Pellucid does not contain any information about his
work history. Such an employee should be classiﬁed with the level of experience
and from the other side each active hint should have the type of employee it is
valid for. The experience classiﬁcation could be very simple (e.g. novice, basic,
intermediate, advanced) or it could be a more detailed one with the description of
several skills possessed by the employee. Some examples of skills are: language
skills, documenting skills, cooperation skills, negotiation skills etc. Each skill
might be described with the skill level: novice, basic, etc. Also any active hint
could be characterised with the skills it concerned. Thus the context in workﬂow
and the problem the user is solving determine the experience required for the
current situation while the user proﬁle represents the experience available.

7

Conclusions

The area of experience management systems is naturally related to agent technology. The management of experience often entails ontologies for knowledge
and experience representation as well as reasoning for creation, adaptation and
maintenance of the experience. The usage of agents within the Pellucid system
has turned out to be proﬁtable and eﬀective. Reuse of experience manifested by
spontaneous appearance of active hints is well suited to employees’ expectations.
Acknowledgments. Thanks are due to European Commission and participants
of the Pellucid project, IST-2001-34519. AGH-UST grant is also acknowledged.

References
1. Pellucid – A Platform for Organisationally Mobile Public Employees, EU IST2001-34519 Project, 2002, http://www.sadiel.es/Europa/pellucid/.
2. Slota, R., Majewska, M., Dziewierz, M., Krawczyk, K., Laclavik, M., Balogh, Z.,
Hluch´
y, L., Kitowski, J., Lambert, S., “Ontology assisted access to document repositories in public sector organizations”, Proc. of 5th Int. PPAM 2003 Conf., Sept.
7-10, 2003, Cz¸estochowa, Poland.
3. Laclavik, M., Balogh, A., Hluch´
y, L., Slota, R., Krawczyk, K. and Dziewierz, M.,
“Distributed Knowledge Management based on Software Agents and Ontology”,
Proc. of 5th Int. PPAM 2003 Conf., Sept. 7-10, 2003, Cz¸estochowa, Poland.
4. Lambert, S., Stringa, S., Vianno, G., Kitowski, J., Slota, R., Krawczyk, K.,
Dziewierz, M., Delaˆıtre, S., Oroz, M.B., Gomez, A.C., Hluch´
y, L., Balogh, Z.,
Laclavik, M., Fassone, M., Contursi, V., “Knowledge management for organisationally mobile public employees”, Proc. of 4th IFIP Int. Working Conf. on Knowledge

590

5.

6.
7.

8.
9.
10.

11.
12.

13.

14.
15.
16.

K. Krawczyk et al.
Management in Electronic Government, KMGov 2003, Rhodes, May 26-28, 2003,
Lecture Notes in Computer Science (Lecture Notes on Artiﬁcial Intelligence) no.
2645, Springer, 2003, pp. 203-212.
Kitowski, J., Krawczyk, K., Majewska, M., Dziewierz, M., Slota, R., Lambert, S.,
Alvaro, A., Miles, A., Hluch´
y, L., Balogh, Z., Laclavik, M., Delaˆıtre, S., Vianno,
G., Stringa, S., Ferrentino, P., “Model of Experience for Public Organisations with
Staﬀ Mobility”, submitted to 5th Working Conf. on Knowledge Management in
Electronic Government, May 17-18, 2004, Kerms, Austria.
Dignum, V., “An Overview of Agents in Knowledge Management”,
http://www.cs.uu.nl/˜virginia/amkm.pdf.
Chen, J.R., Wolfe, S.R., Wragg, S.D., “A Distributed Multi-Agent System for
Collaborative Information Management and Sharing”, Proc. of 9th ACM International Conference on Information and Knowledge Management, November 6-11,
2000, McLean, VA, USA.
CoMMA project,
http://www.si.fr.atosorigin.com/sophia/comma/Htm/HomePage.htm.
Abecker, A., Bernardi, A., Hinkelmann, K., K¨
uhn, O., Sintek, M.,“Toward a technology for organizational memories”, IEEE Intelligent Systems, 13(3), pp. 40-48.
Reimer, U., Margelisch, A., Staudt, M., 2000, “EULE: A Knowledge-Based System
to Support Business Processes”, Knowledge-based Systems Journal, Elsevier, Vol.
13 No. 5. pp. 261-269.
DECOR: Delivery of Context-Sensitive Organizational Knowledge,
http://www.dfki.uni-kl.de/decor/deldec/D1-Final.pdf.
Abecker, A., Bernardi, A., van Elst, L., Lauer, A., Maus, H., Schwarz, S., Sintek,
M., FRODO: A framework for distributed organizational memories. Milestone M1:
Requirements analysis and system architecture”, D-01-01, 2001, DFKI GmbH.
Abecker, A., Bernardi, A., Hinkelmann, K., K¨
uhn, O., Sintek, M. “Context-aware,
proactive delivery of task-speciﬁc knowledge: The KnowMore project”, International Journal on Information Systems Frontiers, 2000, 2(3/4), pp. 139-162.
Uschold, M., and Gruninger, M., “Ontologies: Principles, Methods and Applications”, Knowledge Engineering Review, 11(2), June 1996, pp. 93-137.
DAML – DARPA Agent Markup Language, http://www.daml.org/.
Jena – A Semantic Web Framework for Java, http://jena.sourceforge.net/.

