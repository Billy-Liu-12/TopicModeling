Constant Weight Codes with Package CodingTheory.m
in Mathematica
Igor Gashkov
Karlstad University, Department of Engineering Sciences, Physics and Mathematics 65188
Karlstad Sweden
Igor.Gachkov@kau.se

Abstract. The author offers the further development of package
CodingTheory.m [1] in the direction of research of properties and parameters of
Constant weight codes (lower and upper bounds) based on works [2], [3] and
also using the Table of Constant Weight Binary Codes (online version, Neil J.
A. Sloane: Home Page http://www.research.att.com/~njas/codes/Andw/) and
the table of upper bounds on A(n, d, w) (which in many cases also gives lower
bounds) maintained by Erik Agrell, Alexander Vardy and Kenneth Zeger, and
which is an electronic supplement to their paper Upper bounds for constantweight codes, http://www.s2.chalmers.se/~agrell/bounds/cw.html. The offered
package allows to carry out the comparative analysis of parameters of new
codes with classical upper bounds such as Johnson bound, Linear programming
(Ph Delsarte) bound …, and also with already available classes of codes. As an
example we consider a some construction of codes as union of two codes with
parameters (n, 2a, a + b) and (m, 2b, a + b), that in some cases gives codes the
best than codes obtained with use Juxtaposing .

1

Introduction

An (n, d, w) constant weight binary code is a binary code of length n, code distance d
in which all code words have the same number, w, of “ones.” We will denote the
maximal possible size of (n, d, w) constant weight code by A (n, d, w). The most
important and interesting problem is finding the largest possible size A (n, d, w) of a
(n, d, w) constant weight code (hereafter called optimal codes). The results of code
searching used to be put in tables of optimal codes. The first lower bound appeared in
1977 in the book of MacWilliams and Sloane ([4], pp.684-691). A table of binary
constant weight codes of length n ≤ 28 with explicit constructions for most of the
600 codes was presented in the encyclopedic work of Brouwer, Shearer, Sloane, and
Smith [2]. Today Neil J. A. Sloane presents his table of constant weight codes online
and performs continual updates. There is a companion table of upper bounds on
A(n, d, w) (which in many cases also gives lower bounds) maintained by Erik Agrell,
Alexander Vardy and Kenneth Zeger, and which is an electronic supplement to their
paper Upper bounds for constant-weight codes. The fragment of Sloane’s table of
constant weight codes with parameters 20 ≤ n ≤ 70 , d = 18 and 10 ≤ w ≤16 looks as

M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 370–375, 2004.
© Springer-Verlag Berlin Heidelberg 2004

Constant Weight Codes with Package CodingTheory.m in Mathematica

371

follows (the point means that the appropriate code is optimal code and index give the
key till example “j” means Juxtaposing (see below))

2

The Package “Constant Weight Codes”

The package ” Constant Weight Codes” is a file written in MATHEMATICA and will
be read into MATHEMATICA with the commands.

In[1] := <<ConstantWeightCodes`
The package consists of two parts: one part with Table of Lower bounds on A(n, d, w)
based on the Sloane`s table with explanations

In[2] := LowerboundsCWC[[26,12,10]]
Out[2]=33
We can find information about this lower bound using command

In[3] := LowerboundsCWC[[26,12,10,information]]
Out[3]= K. J. Nurmela, M. K. Kaikkonen and P. R. J.
Östergård, New constant weight codes..., IEEE Trans.
Info. Theory 43 (1997), 1623-1630.
and the second part contains commands describing the classical upper bounds of
constant weight codes. The information on the list of possible upper bounds can be
received using the command ?*Bound*.

In[4] := ?*Bound*
Out[4]=
BergerBound JohnsonBound SecondJohnsonBound LPBound …
The complete information about a command is received by using the command
? Name.

372

I. Gashkov

In[5] : = ? LPBound
Out[5]= LPBound [n,d,w] give Linear programming upper
bound ( Ph. Delsarte ) on the size for constant weight
code n-length of code, d- code distance, d is even
number and w- weight of the code.
We can see also as far as the code (see In[2], In[3], lower bound) differs from known
upper bounds

In[6] : = FreimanBound[26,12,10] BergerBound[26,12,10]
Out[6]=
195
189
If the number of code vectors on a code coincides with one of the upper bound this
give, that the code is optimal code

In[7] : = OptimalCWC[[58,18,10]] OptimalCWC[[70,18,10]]
Out[7]=
?
21
We also have an opportunity to make changes in a package, in case of occurrence of
new codes with parameters it is better known

In[8] : = LowerboundCWC[[58,18,10]]=12;
OptimalCWC[[58,18,10]]=12;
LowerboundCWC[[58,18,10,information]]= “Gashkov I. Some
optimal constant weight code, The Karlstad workshop on
Applied mathematics; September 7-11, 2003”;
DeleteFile[“LowerboundCWC”,”OptimalCWC”];Save[Lowerboun
dCWC”, LowerboundCWC];Save[“OptimalCWC”, OptimalCWC];
Now we will show how, using MATHEMATICA, we can, base on Sloane`s table (see
above) update this table. Trivial values we can obtain from well knows theorem 1. [2]
Theorem 1.
a) If d is odd, A(n, d, w) = A(n, d+1, w).
b) A(n, d, w) = A(n, d, n - w)
c) A(n, d, w) = 1 if 2w < d
d) If d = 2w then A(n, d, w) = [n/w], where [n/w] is greatest integer less then
or equal n/w.
e)

n

A(n, 2,w) =   .
 w

 

By juxtaposing two codes (the method of construction a new codes by placing them
side by side) we can obtain lower bound A(n1 + n2, d1 + d2, w1 + w2) ≥ min{A(n1,
d1, w1), A(n2, d2, w2)}.Codes obtain with use juxtaposing we shall denote through m
(n1, d1, w1) + (n2, d2, w2) where m is min{A(n1, d1, w1), A(n2, d2, w2)} .The
command Juxtaposing[…] changes the table of codes supplementing with its codes
obtained above by a stated method, in a case if the “j” code has the greater or equal

Constant Weight Codes with Package CodingTheory.m in Mathematica

373

number of code vectors, than already available in the table. As example we chose the
parameters of the table 20 ≤ n ≤ 70, d = 18 and 10 ≤ w ≤16.

In[9]:= LowerboundsCWC = Juxtaposing[LowerboundsCWC];
We chose the parameters of the table 20 ≤ n ≤ 70, d = 18 and 10 ≤ w ≤16.

In[10]:= n1=20;n2=20;w1=10;w2=16;d=18;
Table[Take[LowerboundsCWC[[n,d]],{w1,w2}],{n,n1,n2}]
Out[10]=
 2 ( 2 , 2 ,1 ) + ( 18 ,16 , 9 )

 2 ( 2 , 2 ,1 ) + ( 19 ,16 , 9 )

...


18
Optimal


2 ( 2 , 2 ,1 ) + ( 18 ,16 ,10 )

1

...

2 ( 2 , 2 ,1 ) + ( 19 ,16 ,10 )
...

...
...

...
...

42 ( 24 , 6 , 4 ) + ( 45 ,12 , 7 )

...

...

1 

1 
... 

... 

We can give the next generation of this table of lower bounds, using the following
theorem.
Theorem 2. If A(n1, 2a, a + b) = M1 and A(n2, 2b, a + b) = M2 then
A(n1 + n2, 2(a + b), min{n1, n2}) ≥ min{M1, M2}+1
Proof. Let n1 ≥ n2. We placing two codes (n1, 2a, a + b) and (n2, 2b, n2 - a - b)
side-by-side. Using Juxtaposing we obtain code with parameters
(n1+ n2, 2(a + b), n2). But we can add to code one binary vector more
v = (0,0,…0, 1,1,…1), where the first n1 coordinates are equal 0, the last n2 equal 1.
We can calculate distance between any vectors belonging to code
(n1+ n2, 2(a + b), n2) and vector v. We can calculate this distance as the sum of two
distances: the first distance is the distance between an any vector of a code
(n1, 2a, a + b) and a zero vector, the second is the distance between an any vector of
a code (n2, 2b, n2 - a - b) and a “one “ vector (vector consisting of 1).
Example: Codes with parameters (6, 4, 3) and (4, 2, 3) consist of the same number of
vectors.
Code ( 6, 4, 3)
Code ( 4, 2, 3)
Code (10, 6, 4)
V1= (1, 1, 1, 0, 0, 0) (1, 1, 1, 0)= W1
(1, 1, 1, 0, 0, 0,
0, 0, 0, 1)
V2= (0, 0, 1, 1, 1, 0) ( 1, 1, 0, 1)=W2
(0, 0, 1, 1, 1, 0,
0, 0, 1, 0)
V3= (0, 1, 0, 1, 0, 1) ( 0, 1, 1, 1)=W3
(0, 1, 0, 1, 0, 1,
1, 0, 0, 0)
V4= (1, 0, 0, 0, 1, 1) ( 1, 0, 1, 1)=W4
(1, 0, 0, 0, 1, 1,
0, 1, 0, 0)
( 0, 0, 0, 0, 0,0,
1, 1, 1, 1)
We shall denote such codes through m (n1, 2a, a + b) ∪ (n2, 2b, a + b) where m is
min{M1, M2}+1. We can transform the table of constant weight codes taking into

account the theorem 2 and we obtain a new codes
(13,6,8)∪(20,10,8)->A(33,16,13)≥18
(13,6,8)∪(21,10,8)->A(34,16,13)≥19
(16,8,9)∪(19,10,9)->A(35,18,16)≥17
(13,6,9)∪(23,12,9)->A(36,18,13)≥11

374

I. Gashkov

(13,6,9)∪(24,12,9)->A(37,18,13)≥14
(8,2,6)∪(31,10,6)->A(39,12,8)≥29
(14,6,9)∪(25,12,9)->A(39,18,14)≥26
(14,6,9)∪(26,12,9)->A(40,18,14)≥27
(14,6,9)∪(27,12,9)->A(41,18,14)≥29
(11,2,8)∪(57,14,8)->A(68,16,11)≥58
Above the carried out computer calculations prove, that codes that we obtain using
the theorem 2 it is impossible to present as juxtaposing two codes.

In particular, codes that were obtain using the theorem 2 is close to optimal codes.
For instance
28 ≥ A(35,18,16) ≥ 17 ; 12 ≥ A(36,18,13) ≥ 11
15 ≥ A(37,18,13) ≥ 14 ; 39 ≥ A(39,18,14) ≥ 26

Constant Weight Codes with Package CodingTheory.m in Mathematica

375

References
1.
2.
3.
4.

I Gachkov “Error Correcting codes with Mathematica”, Lecture note in Computer science
LNCS 2657 s.737-746 (2003)
E. Brouwer, J.B. Shearer, N.J.A .Sloane, “A new table of Constant weight codes”. IEEE
Transactions of information theory, v 36, No 6 (1990)
E.Agrell,A. Vardy, and K. Zeger,“Upper bounds for constant-weight codes,” IEEE
Transactions on Information Theory,vol. 46, no. 7, pp. 2373-2395, Nov. 2000.
F.J. MacWilliams and N.J.A. Sloane, “The Theory of Error-Correcting Codes”, Amsterdam: North-Holland, 1977

