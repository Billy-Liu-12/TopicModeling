Some Remarks on CSE Education in Germany
Hans-Joachim Bungartz
IPVS, Universit¨
at Stuttgart, Universit¨
atsstraße 38, D-70569 Stuttgart, Germany
bungartz@ipvs.uni-stuttgart.de

Abstract. The way Computational Science and Engineering is taught
today in Germany, often, seems to depend more on local boundary conditions than on the real needs. Actually, some very fundamental questions
are still open or are, at least, answered in very diﬀerent and not always
satisfying ways. Among these are the issues of the right focus of such
a program or of the appropriate balance between methodology and real
applications, as well as the question whether to implement both undergraduate and graduate programs or a graduate one, only. In this contribution, we want to discuss these and other related topics, considering
selected existing CSE study programs in German-speaking countries.

1

Introduction

The last decade has seen the birth of a lot of new study programs in Germany
dealing with Computational Science and Engineering (CSE), Scientiﬁc Computing, or any kind of Computational Something, where Something stands for an
established discipline from science or engineering such as physics or mechanics,
e.g. This welcome development reﬂects the grown importance of computer-aided
methods in general and numerical simulation or high-performance computing in
particular. As a matter of fact, at the moment, the implementation of all kind
of new programs is further supported by a suddenly rather dynamic situation
concerning study programs, which is mainly due to the forthcoming or ongoing,
more or less radical changes the Bologna agreement entails.
However, although these CSE-related programs all have similar strategic objectives, we can observe a variety of appearances – with diﬀerences that are
sometimes far from being just minor ones. First, in Germany, CSE is not an
established discipline in the sense that there exist schools or faculties of this
name where the respective programs are housed naturally. Here, we sometimes
really get jealous of these “Schools of Computing” or “Departments of Computational Sciences” existing elsewhere! As a consequence, the rootedness of a CSE
program in an existing faculty and its (and that’s the point) focus as regards
content, in most cases just depend on those of its initiator(s). Hence, on the one
hand, we have more application-driven programs like Computational Mechanics
(COME) in M¨
unchen [3] or Computational Mechanics of Materials and Structures (COMMAS) [7] and Computational Physics [8] in Stuttgart, and, on the
other hand, there are more methodology-dominated programs such as Scientiﬁc
Computing in Berlin [2] or Computational Science and Engineering (CSE) in
M¨
unchen [4].
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 1180–1187, 2004.
c Springer-Verlag Berlin Heidelberg 2004

Some Remarks on CSE Education in Germany

1181

A second issue is how to organize the CSE education – within an existing
program or as a program of its own, and there either for graduate students only
or for undergraduates, too. There are examples for all models: The faculties of
mechanical engineering and civil engineering in Stuttgart, e.g., oﬀer a study focus
CSE [9] or Modelling and Simulation [10], resp., within their classical diploma
programs. In contrast to that, the already mentioned COME, COMMAS, and
or CSE as well as Computational Engineering (CE) [6] in Erlangen are all completely new programs, the former three being examples of pure master programs
and the latter one consisting of both a bachelor and a master part.
Furthermore, we observe diﬀerences with respect to the program language.
While several programs such as the ETH’s Rechnergest¨
utzte Wissenschaften [1]
hold to the German language, most pure master programs have been implemented as so-called international, i.e. English-based programs, since they want to
(and actually do) attract international students, primarily, whereas the Germanlanguage programs cover most of the education of students from the Germanspeaking countries, at present. This raises the question of the target groups a
CSE program wants to address. Apart from their nationality, this is also a question of disciplines. If a CSE master is designed by a mechanical engineering
faculty for candidates holding a bachelor’s degree in mechanical engineering, the
proﬁle of the students will be by far more homogeneous than it is in the case of
the CSE program in M¨
unchen already mentioned, where just a bachelor’s degree
in some ﬁeld of science or engineering is required.
This article aims at discussing these questions against the background of the
needs of a modern CSE education as well as at opposing pros and cons of the
respective model chosen. Although there will be statements for or against this
or that way, it is, however, clear that solutions are always subject to boundary
conditions such as local faculties, academic staﬀ, and legal restrictions. Hence,
there is no optimal way to be depicted, but just a collection of ideas that will,
hopefully, initiate some reﬂections and discussions. The remainder of this paper
is organized as follows. In Sect. 2, we discuss the topic of how to design CSE
courses or programs and, in particular, whether to put a more concept-based or
a more application-driven focus. The following Sect. 3 deals with the question
whether CSE can just be seen as some kind of a specialization in the sense of
either a minor topic within existing programs or some master graduate program
accessible to students with some more or less conventional (ﬁrst) degree, or
whether a sound CSE education implies a complete restructuring of existing
programs. Another issue, which will be addressed in Sect. 4, is the program
language. Afterwards, in Sect. 5, we turn to the crucial question of degrees that
qualify to enter the programs, and we discuss the chances and problems of a
broader target group. Finally, some concluding remarks will close the discussion.

2

Simulation Technology or Grand Challenges?

Looking at the development of CSE, there have always been two driving forces
of progress: general algorithmic improvements on the one hand and real applications on the other hand. The former – think of fast solvers, mesh reﬁnement
approaches, or parallelization strategies – are based on concepts such as the

1182

H.-J. Bungartz

multilevel paradigm and have turned out to be of great importance for real-life
problems, but they, typically, neither stem from nor are restricted to a speciﬁc ﬁeld of application. The primary motivation rests on notions such as speed
of convergence, orders of accuracy, or speedups, e.g. In contrast to that, the
other driving force is fed by the wish to solve important practical problems, to
tackle the “grand challenges”. The history of ﬁnite element methods provides a
nice example for this duality. While engineers, especially from the ﬁeld of civil
or structural engineering, were eagerly looking for ways to compute more and
more complicated buildings (for example, the roof of the Olympic stadium in
M¨
unchen was one of the early constructions designed with the help of nonlinear computations – done in Stuttgart, by the way), numerical analysts were
more interested in approximation spaces, error orders, or strategies of adaptive
mesh reﬁnement. Both streams were successful in their endeavours and allowed
for signiﬁcant steps forward, but the crucial break-throughs were only possible
when applications and fundamentals or general concepts and concrete problem
scenarios met.
This double-track development is reﬂected in many CSE-related programs
in Germany. For example, consider the two master programs on computational
mechanics mentioned above, COME [3] at the Technische Universit¨
at M¨
unchen
and COMMAS [7] at the Universit¨
at Stuttgart. Both curricula do without any
core courses oﬀered by members of the math faculties; in both of them, we only
ﬁnd one or two courses contributed by computer science (in COME this formerly
was, in COMMAS it presently is the author’s job). When, during an evaluation
board meeting, for instance, the question arises whether this is really enough
in a program carrying the word “computational” on its banner, the standard
answer is of the type “of course, we teach numerical methods, too” or “but in
the exercises of my course, students have to program, too”. And this argument
is followed by a shrugging reference to upper credit bounds that limit each kind
of elbow-room for additional topics. To avoid misunderstandings: both COME
and COMMAS are excellent programs – as proven by personal experience and
external evaluation – and there can be no doubt that those who are responsible
for curricula and courses did and do an extraordinarily good job. Nevertheless, the question remains whether we really come up with the interdisciplinary
character of CSE by practicing an “if there is any need for some subjects of discipline XYZ, I’ll deal with that, too” credo, whether interdisciplinary or, better,
transdisciplinary really just means that the existing group of teachers prefers
to cover a broader spectrum of topics themselves instead of enlarging the group
of contributing experts. Of course, if the answer is no, it is no better to do it
the other way round, regarding Scientiﬁc Computing as something very similar
to numerical analysis, as many mathematicians sometimes tend to think, or as
being basically a synonym of supercomputing, as especially those guys sitting
on the TOP 500 machines in the big computing centres sometimes argue.
The main risk of a too much application-oriented curriculum seems to be a
deﬁcit in simulation technology, i.e. in teaching general algorithmic concepts or
paradigms. Numerical schemes – sometimes rather outdated, sometimes really
up-to-date – are presented as the state-of-the-art, but neither derived nor justiﬁed. Note that I’m not speaking of extensive proofs where everyone (sometimes

Some Remarks on CSE Education in Germany

1183

including the lecturer) gets lost. If at all, students learn about hierarchical bases
or multilevel solvers, e.g., just as being eﬃcient tools for their speciﬁc tasks, but,
at the end, they still lack of a deeper understanding of the way those work and of
their potential. They learn to program and to use the few lines of the conjugate
gradient algorithm, they – perhaps – learn about its main properties, but they
don’t really learn what happens in detail. All their doing is just caught in the
narrow environment of their concrete ﬂow problem to solve, e.g. The same holds
for computer science. In many application-driven CSE-related programs, “computational” just means that some programming course is included, which by far
does not reﬂect the needs of modern CSE. As a consequence, students are often
unable to identify, carry over, or generalize the underlying concepts. Again, consider the other way round: The big risk of a pure simulation-technology-driven
education with predominant mathematical and informatical components is the
classical ivory tower scenario where sophisticated algorithms are derived, proven,
and applied to examples as realistic as ﬂow in a cubic motor. Obviously, such an
unbalanced approach would not look better at all.
A better alternative is the really transdisciplinary approach of CE [6] in Erlangen and CSE [4] in M¨
unchen. In the latter case, six faculties jointly run this
master program. There is a math column, provided by the math faculty, a computer science column, provided by the informatics faculty, a scientiﬁc computing
column focusing on simulation technology, and an application column, provided
by experts from the respective faculties, where a broad spectrum of lines of specialization such as computational mechanics, ﬂuid mechanics, electrodynamics,
physics, or chemistry can be chosen. Of course, at the end, there are no experts in Computational ... for one speciﬁc ﬁeld, but there are students who have
learned the fundamentals of a key technology and to apply the latter to some
highly relevant ﬁeld of application. Critics see a drawback of this model in its
possible superﬁciality, the well-known “hearing a lot but understanding nothing
in depth”. Nevertheless, we need the balance of concepts and applications.
How important and fruitful a really transdisciplinary CSE education is, can
be seen every year at the Ferienakademie [5], a joint venture of the Technische
Universit¨
at M¨
unchen, the Universit¨
at Erlangen-N¨
urnberg, and the Universit¨
at
Stuttgart. The Ferienakademie is a kind of summer school for the best and most
motivated students, ﬁnanced by industry from the two German states Bayern
and Baden-W¨
urttemberg, by the participating universities themselves, and by
their respective alumni organizations. During two weeks end of September, a
dozen of seminar-type courses are held in Southern Tyrol, each with two professors from two of the organizing universities, one assistant, and about ﬁfteen
student participants who, essentially, carry the program via their presentations
and discussions. The course topics cover the whole spectrum of modern technical universities. The course Numerical simulation: from models to visualizations
co-organized twice by the author addresses students from basically all disciplines involved in CSE. Actually, in 2003, the participating students represented
Mathematics, Technomathematics, Computer Science, Physics, Computational
Physics, Chemistry, Computational Engineering, Electrical Engineering, Chemical Engineering, Software Engineering, and Computational Mechanics.

1184

H.-J. Bungartz

Of course, it is not always easy to handle such a mixture: computer scientists
don’t have the physical background to follow all discussions on turbulence in
detail, a chemical engineer wonders what he can proﬁt from a mathematician’s
presentation who solves the Laplace equation in a tricky way (“I have to solve
ﬂow problems!”), and computer scientists are astonished when a mechanical engineer asks basic questions on cache memories and on the RISC microprocessor
architecture. Nevertheless, those experiences of diﬀerent scientiﬁc cultures, diﬀerent ways of giving a talk, diﬀerent educational backgrounds, and diﬀerent ways
of tackling a given problem are crucial for real progress.
Finally, the given faculty structure at German universities is, to some extent,
outdated, since the partitioning of today’s scientiﬁc world should be deﬁnitely
diﬀerent from the one of a century ago. Instead of combining all groups involved
in CSE activities in a powerful unit (call it school or department or however you
want), there are computational minorities in most of the faculties, and there are
permanent misunderstandings or even battles between pure and applied mathematicians, between ﬂoating-point and e-something computer scientists, between
supercomputing engineers and experimental or production technology ones, and
so on. As a result, there are CSE nuclei everywhere (which is not yet a drawback, of course) with non-coordinated curriculum activities (which deﬁnitely is
one). Available expertise is not used, just because no one knows about it or,
perhaps even worse, since everyone is convinced of a “we can do it on our own”.
Nevertheless, joint activities bringing together all experts from diﬀerent faculties
is deﬁnitely the way a transdisciplinary ﬁeld such as CSE should be taught.

3

Basic Education or Specialization?

But let us turn to the appropriate format of CSE education, starting with a
few examples. In Stuttgart, students of Mechanical Engineering, a classical 9semester German diploma program, have to choose one specialization after their
Vordiplom, i.e. after the second year. The alternatives are Product Management
and Design, Production Technology, Microsystem and Precision Engineering, General Mechanical Engineering, and, recently, also Computational Science and
Engineering [9]. Those choosing the latter get at least about 36 ECTS credits
of a more or less directly CSE-related education, and they have to make two
student research projects in this ﬁeld. Students of the Civil Engineering diploma
program in Stuttgart face a similar situation, since Modelling and Simulation
[10] has been newly added to the three classical specializations Structural Engineering, Traﬃc Engineering, and Water Engineering. Here, an important part
of the years 3–5 is dedicated to this CSE specialization. By the way, in the ﬁrst
case, almost all courses are provided by members of the mechanical engineering
faculty; in the second case, this is true apart from a few electives imported from
mathematics. Hence, these are two more examples of a more or less “in-house”
solution without a real integration of expertise from other disciplines. In contrast
to that, for the Computer Science diploma program in Stuttgart, the alternative
approach of a real inter-faculty cooperation was chosen. The new minor Scientiﬁc Computing [11], one of ﬁfteen possible choices including Linguistics, Music
Theory, Business Administration, or Mathematics, consists of a math column and

Some Remarks on CSE Education in Germany

1185

an applications column completely provided by the mathematics department or
several engineering faculties, resp. This ensures that all computer science students who want to specialize in CSE really sniﬀ some air from mathematics and
at least one ﬁeld of application.
Instead of implementing specializations within existing programs, the creation of new study programs is the other possible strategy. In the majority of
cases, at least at the moment, these new programs are mere graduate ones, typically master programs. As before, the underlying idea is that CSE knowledge
is regarded as an extension of a conventional engineering education, e.g., giving
to it some computerization and, thus, some modern ﬂavour. Hence, the general
assumption here is that all candidates already have some ﬁrst relevant degree,
typically a bachelor degree or a diploma degree from one of the German universities of applied science (Fachhochschulen). Next, the Rechnergest¨
utzte Wissenschaften program [1] of the ETH Z¨
urich (hitherto a diploma program, now also
a bachelor program, and in the future a bachelor-master combination) is some
kind of a hybrid type. Although being a complete diploma program, the speciﬁc
education starts in the third year only, since the ﬁrst two years are identical to
either mathematics, physics, chemistry, computer science, or some engineering
subject. Finally, an example of a completely newly designed CSE program is
the already mentioned Computational Engineering [6] in Erlangen, consisting
of both a bachelor and a master component. This is, of course, the most consequent implementation of CSE education, which also oﬀers most chances of a
curriculum really tailored to the interdisciplinary needs of numerical simulation.
It is not clear which is the best strategy to combine a high-quality education
really required by both the industrial and the academic job market with an
economic usage of university resources. However, it is quite obvious that doing
numerical simulations on a high level requires knowledge, skills, and experience in
parts of mathematics, computer science, and in the respective ﬁeld of application.
And it, therefore, must be doubted whether this objective can be reached with
just one of the “feel-the-ﬂavour-type” programs within one discipline.

4

National/German or International/English?

The program language is another diﬀerence we discover when comparing the
various CSE-related programs in Germany. Since one big motivation for master
programs was to attract international students to our universities, most of them
were designed as international programs with all or, at least, the vast majority
of the courses being oﬀered in English language. CSE, COMMAS, and COME
are typical representatives of this development. The strategic drawback is that,
at least at present, this approach keeps most of the German students out of
these programs. CE in Erlangen is the hybrid model, oﬀering most of the bachelor program in German (in order to integrate German students into the CSE
education), but then oﬀering the master basically in English language (in order
to integrate foreign students into the CSE education). And, ﬁnally, the Swiss
Rechnergest¨
utzte Wissenschaften program is completely given in German. This
is deﬁnitely one of the not that frequent examples of a CSE study program that
has been completely designed and implemented for the home students.

1186

H.-J. Bungartz

The language issue goes beyond this paper’s scope. If, after the bachelormaster system, also the English language will gain general acceptance at German
universities, it will be answered for CSE, anyway. On the other hand, if we
continue distinguishing between national and international study programs, we
shall see both German-language and English-language programs in the future.

5

Target Groups and Applicants

Of course, the language question is highly related to the question of whom a
CSE program wants to address, primarily. But this target group issue is not
restricted to countries or languages, there is also a disciplinary aspect. The two
computational mechanics programs COME and COMMAS considered here address a quite narrow group of students – basically those with a bachelor degree in
some mechanics-related ﬁeld such as civil or mechanical engineering. This strategy allows to start immediately with special courses and to reach an impressive
depth of studies within the three semesters. Nevertheless, the lecturers complain
the obvious heterogeneity of the students (which is, here, probably more due to
diﬀerent previous levels of education than due to disciplines).
In contrast to this, the CSE program is open to a broad spectrum of degrees,
since its regulations just require a bachelor degree in a related ﬁeld including
civil, mechanical, chemical, or electrical engineering, physics, chemistry, but also
computer or aerospace engineering. Thus, the knowledge in some speciﬁc ﬁeld of
application may diﬀer a lot among the participants of the program. However, the
basic knowledge concerning advanced mathematics and basic programming skills
is more depending on countries and universities than on disciplines. Hence, the
umbrella character of CSE can handle this, providing a sound education in mathematical and informatical fundamentals of scientiﬁc computing and assigning
the subject of application to each student according to his or her background.
This way, mechanical engineers do computational ﬂuid mechanics or computational structural mechanics, whereas physicists specialize in computational physics,
e.g.
Especially for international target groups, one of the most urgent problems
is applicant selection. For CSE, the situation is probably even harder due to its
interdisciplinary character, which entails that there will always be candidates
with diﬀerent degrees. At present, the are a lot of discussions concerning reasonable strategies for making the process of applicant selection both faster and
cheaper, resp., in order to avoid preparation semesters which are expensive both
for students and universities, and to improve the hit rate. For that, the existing
mechanisms of entrance exams or phone interviews etc. will have to be augmented by blended learning approaches combining online self-study components
with special compact courses immediately before the ﬁrst semester starts.

6

Concluding Remarks

In this paper, some topical issues concerning CSE programs in Germany were
discussed. With several examples of relevant programs, the questions of the focus

Some Remarks on CSE Education in Germany

1187

and structure of a CSE program, of diﬀerent ways to implement such programs,
and the question of target groups concerning both nationalities and disciplines
were addressed. Unfortunately, the opinion that CSE is nothing but a private
subdiscipline that has recently emerged and that can be completely dealt with
internally is rather widespread throughout many faculties – even if most of those
responsible will always emphasize its interdisciplinary character in public. This,
to some extent, often has strange and even negative consequences for the design
of CSE specializations or CSE programs. There are even cases where a so-called
CSE specialization is more a misleading package than something really deserving its name. However, for integrated specializations as well as for independent
programs, involving all contributing disciplines – here, ﬁrst of all, mathematics,
computer science, and the various ﬁelds of applications have to be mentioned –
is an essential precondition of a CSE education that is successful in the longer
term and that really fulﬁls the needs of CSE as a discipline.

References
1. ETH Z¨
urich. Rechnergest¨
utzte Wissenschaften – diploma, bachelor, and master
programs. www.rw.ethz.ch/.
2. Freie Universit¨
at Berlin. Scientiﬁc Computing – international master program.
www.math.fu-berlin.de/teach/webstud/studium/msc.htm.
3. Technische Universit¨
at M¨
unchen. Computational Mechanics (COME) – international master program. www.come.tum.de/.
4. Technische Universit¨
at M¨
unchen. Computational Science and Engineering – international master program. www.cse.tum.de/.
5. Technische Universit¨
at M¨
unchen, Universit¨
at Erlangen-N¨
urnberg, Universit¨
at
Stuttgart. Ferienakademie. www5.in.tum.de/FA/.
6. Universit¨
at Erlangen-N¨
urnberg. Computational Engineering – bachelor and international master programs. www10.informatik.uni-erlangen.de/CE/.
7. Universit¨
at Stuttgart. Computational Mechanics of Material and Structures
(COMMAS) – international master program. www.msc.commas.uni-stuttgart.de/.
8. Universit¨
at Stuttgart. Computational Physics – bachelor program.
www.physik.uni-stuttgart.de/studium/bachelor/.
9. Universit¨
at Stuttgart. Computational Science and Engineering – specialization
within the diploma program Mechanical Engineering.
www.uni-stuttgart.de/mawesen/studienrichtungen.html/.
10. Universit¨
at Stuttgart. Modelling and Simulation – specialization within the diploma
program Civil Engineering. www.iwb.uni-stuttgart.de/stuko/index.html.
11. Universit¨
at Stuttgart. Scientiﬁc Computing – minor within the diploma program
Computer Science. www.informatik.uni-stuttgart.de/fakultaet/lehre/informatik/.

