Size of the Stable Population in the Penna
Bit-String Model of Biological Aging
K. Malarz, M. Sitarz, P. Gronek, and A. Dydejczyk
Department of Applied Computer Science, Faculty of Physics and Nuclear
Techniques, AGH University of Science and Technology,
al. Mickiewicza 30, PL-30059 Krak´
ow, Poland
malarz@agh.edu.pl

Abstract. In this paper the Penna model is reconsidered. With computer simulations we check how the control parameters of the model
inﬂuence the size of the stable population.

1

Introduction

The Penna model [1] is popular and eﬃcient way to simulate biological aging in
genetically heterogeneous population. It is based on the mutation accumulation
theory which claims that random hereditary deleterious mutations accumulate
over several generations in the species genome.
The model is governed by a set of parameters such as environmental capacity
Nmax so that the actual population N ≤ Nmax . The birth rate B is the number
of oﬀsprings from a single parent per evolution time step, providing the parent
reached age R and is still below maximum reproduction age E. Other parameters
which control the growth of the population are: number of mutations M injected
into the baby’s genome, apart from the already inherited, and threshold value T
of active bad mutations above which items are eliminated for this only reason.
In this paper we would like to check how model control parameters (described
in the next section) inﬂuence the size N (t) of the stable population for long times
t → ∞ when mutational meltdown is avoided.

2

Model

In the Penna model [1] each individual in the population is characterised by its
genome — the Nbit -long binary string. Time is measured by a discrete variable
t. In each time step (t → t + 1), for each individual of age a, the number of bits
set to one in the ﬁrst a positions i in genome is calculated. Bit ‘1’ represents a
bad mutation activated when its position 1 ≤ i ≤ a, however mutations above
a < i ≤ Nbit are not harmful. If the number of bad and active mutations is
greater or equal to the threshold value T an individual dies due to too many
deleterious mutations and so called genetic death takes place.
Individuals compete among themselves for food and territory: each of them
may be removed from the population with probability N (t)/Nmax , where Nmax
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 638–641, 2004.
c Springer-Verlag Berlin Heidelberg 2004

Size of the Stable Population in the Penna Bit-String Model

639

represents the maximal environmental capacity. In other words, we introduce
the Verhulst’s factor in order to avoid exponential growth of the population size
to inﬁnity. The number Nbit of bits in genome restricts also maximal age of
individuals.
We start the simulation with Nini individuals which genomes contain only
‘0’ (no bad mutations). The population reproduces asexually. If the individual is
older than minimum reproduction age R it is able with the probability b to give
B oﬀsprings. The oﬀspring’s genome is a copy of parent’s one, exposed during
replication to M harmful mutations. Each mutation occurs with probability
m at randomly chosen position in the genome. We also introduce a maximum
reproduction age E, so the individual older than E do not clone itself any more.

3

Results

We would like to refer our results to the standard one (labelled as ‘std’ in all
ﬁgures) which we assume to be for Nbit = 32, Nmax = 106 , n(0) = N (0)/Nmax =
0.1, R = 8, E = 32, T = 3, M = 1, B = 3, m = 1.0 and b = 1.0. The maximal
environment capacity Nmax is ﬁxed during simulation. The initial concentration
of individuals in respect to maximal environmental capacity do not inﬂuence the
results (Fig. 1(a)).
As one may expect the larger probability of reproduction 0 ≤ b ≤ 1 gives
the larger population size (Fig. 1(b)). The population size decreases when the
probability of mutations 0 ≤ m ≤ 1 increases (Fig. 1(c)).
The same situation is for integer variables B and M (see Figs. 1(d) and 1(e),
respectively). If the number of mutations is too large (i.e. M > 7) the mutational
meltdown occurs. Also too large value of the number of oﬀsprings (e.g. B ≥ 20)
may lead to catastrophe: too rapid growth of the population may cause that in
one time step the environmental maximal capacity Nmax will be exceeded. As a
consequence of that the population will vanish only due to Verhulst’s factor and
not the genetic one.
In our implementation products M m and Bb may be considered as the average number of mutations per individual’s genome and as the average number of
oﬀsprings given every year per reproductive individual (i.e. in age R ≤ a ≤ E),
respectively.
In Fig. 1(f) the inﬂuence of the threshold T on the population size is presented. Decreasing the threshold T results in increasing of the stable population
size. Setting T = Nbit eliminates genetic death and again only Verhulst’s factor
determines N (t → ∞).
Delay in starting the reproduction decreases the population size as presented
in Fig. 1(g). Obviously, setting R > Nbit destroys population because individuals
never replicate themselves. For R = 1 — when all newly born babies become
adults as quickly as possible — a very strong oscillations appear (not shown).
Fig. 1(h) shows the inﬂuence of the maximal reproduction age E on the
stable population size. For E = 8(= R), when individual reproduce only once
(semelparous organisms oscillations in the population size appears (not shown).

640

K. Malarz et al.

Fig. 1. The inﬂuence of the model control parameter (a) n(0), (b) b, (c) m, (d) B, (e)
M , (f) T , (g) R, and (h) E on the population size.

Size of the Stable Population in the Penna Bit-String Model

4

641

Conclusions

The population size of the stable population in the Penna model was already investigated for a certain purpose, e.g.: showing advantage of sexual reproduction
on asexual one, studying sexual ﬁdelity of males vs higher reproduction rate,
modelling ﬁshing and/or hunting, explaining mystery of Paciﬁc salmon senescence, analysing pray-predator systems, recovering demographic data, modelling
the oldest old eﬀect, modelling consequence of parental care, studying the individuals fertility, studying the migration eﬀect, and others.
In this paper we conﬁne our attention to the basic features of the model.
Main results were collected in Figs. 1. We may conclude the following:
Diﬀerent time scales must be accounted for, if the ‘stable’ refers to diﬀerent
properties observed in the computer experiment; total population N (t) shows
values that do not change signiﬁcantly after about one hundred iteration steps.
However, we need at least a couple of thousand steps for age distribution and,
especially, bad mutations distributions in a genome position to become stationary.
Obviously for smaller birth rates Bb the population is smaller. However,
unlike the logistic model for which N (t → ∞) = BbNmax /(1 + Bb), the Penna
model shows a critical BC below which the population is extinct. This is due to
the genetic death as result of pumping in more and more mutations M into each
new generation, and so BC (M ) with the limit BC = 0 for M = 0, the logistic
case.
When the number of bad mutations M injected into baby’s genome is scanned
from M = 0 (the logistic model), the upper limit MC for the extinction strongly
depends on fertility: if B is smaller, MC is also smaller, and for suﬃciently large
B, MC → ∞ as the high birth rate gives a chance to new population (however
rich in bad mutations) to reproduce before it dies out soon on reaching the
threshold T . This is so if the minimum reproduction age R is suﬃciently small
to allow for the reproduction.
The upper age limit E for reproduction inﬂuence the stable population N
and larger E makes bigger N , as it may be expected. This time, however, we do
not observe any critical behaviour when we scan E.
Acknowledgements. The authors are grateful to Prof. A.Z. Maksymowicz for
fruitful discussion. Simulations were carried out in ACK–CYFRONET–AGH.
The machine time on SGI 2800 is ﬁnanced by the Ministry of Scientiﬁc Research
and Information Technology in Poland.

References
1. Penna, T.J.P.: J. Stat. Phys. 78 (1995) 1629.

