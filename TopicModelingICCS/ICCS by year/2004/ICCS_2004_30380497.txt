Domain Knowledge Modelling for Intelligent
Instructional Systems
Emilia Pecheanu, Luminita Dumitriu, and Cristina Segal
Department of Computer Science, “Dunarea de Jos” University of Galati
Domneasca 47, GALATI 800008 – ROMANIA
{emilia.pecheanu,luminita.dumitriu,cristina.segal}@ugal.ro

Abstract. This paper presents a solution for conceptually modeling the training
domain knowledge of computer-assisted instructional environments. A stringent
requirement for an effective computer-assisted instructional environment is to
elaborate a proper answer for the differentiated cognitive demands of users. The
different cognitive style of learners imposes different modalities of presenting
and structuring the information (the knowledge) to be taught. Conceptual
organization of the training domain knowledge, with learning stages phasing,
can constitute a better solution to the problem of adapting the instructional
system interaction to users with different cognitive style and needs.

1 Learning and Individual Cognitive Styles
Unanimously, psychologists and teachers consider that learning is a process that
engages all aspects of the human personality. Whatever the learning content, from the
simplest learning tasks to the most complex ones, a whole chain of psychical
mechanisms is triggered, in what concerns receiving, processing, interpreting and
valorizing the instructional entities [5].
Learners’ cognitive style leads to individual variations within the learning process:
each person has his own way of thinking and, thereby, the acquisition of new
knowledge is person-specific. The concept of cognitive style ignores the knowledge
content, emphasizing on the manner in which a person succeeds in the cognitive
process [7]. These differences can be expressed through the relationships between
heredity, environment and educational factors, in which these developments are often
contributing with different intensities from person to person [7] , [5].
The different cognitive style of learners imposes different modalities of presenting
and structuring the knowledge to be taught. By individual cognitive style analysis,
two ways of approaching the learning process by human subjects are emphasized:
1. a closed cognitive style approach, in which the learner follows algorithmic mental
schemes and a convergent way of thinking; this style has as origin extrinsic
motivations and prevalently uses memorization;
2. an open cognitive style approach, in which the learner mostly follows heuristic
mental schemes and uses a divergent way of thinking; this second style is
generated by an intrinsic motivation and it is based mostly on thinking flexibly.

M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 497–504, 2004.
© Springer-Verlag Berlin Heidelberg 2004

498

E. Pecheanu, L. Dumitriu, and C. Segal

Differences between the users’ individual cognitive styles should be reflected in
the manner of structuring the domain-knowledge and in the manner of designing the
user interface. Correlating the assistance capability of instructional systems with
different cognitive styles of potential users has lately become an important study and
research subject in the area of computer–assisted instruction.
The possibility of personalizing the educational process is the main demand in
building computer-assisted learning systems for any form of education, continuous
education and professional re-conversion included.
In the case of these education forms, the subject of study frequently consists of
groups of users; between these users there can be significant differences concerning
the training level, age or internal goals pursued through study.
Consequently, the way the educational process is approached – the cognitive style
– can be extremely different among the users who form the study groups.
When computer-assisted learning systems are used for any of these forms of
education, they have to be able to dynamically adapt to the various cognitive
necessities and demands of the users, in order to ensure the efficiency of the
educational act.

2 Implementing Adaptive Training Systems
Considerable research effort has gone into implementing adaptive (depending on the
cognitive style) training systems. A direction pursued by many systems designers is to
dynamically build a behavioral – cognitive profile of each user (the “Student Model”).
Based on an individual profile (corroborated with training objectives), an
individualized model of the system’s interaction with each user is generated [10].
Another trend in implementing adaptive web-based training systems consists of a
specific structuring of the content elements included in the Domain Model (the
Domain Model represents the knowledge belonging to the training area).
This structuring is achieved either from the training phases of the instructional
process, or from a hierarchy of clearly stated instructional goals and sub-goals. In
both cases, knowledge space browsing is monitored in order to dynamically adjust it
whenever the user correctly performs certain acts, or reaches certain stages [4].
The aspects mentioned above show that implementing training systems able to
adapt (in certain circumstances) to various training requests, coming from users with
different cognitive profiles, is possible. Anyway, there is a second basic problem,
with no exhaustive solution yet: which method can lead to optimal structuring and
proper sequencing of the instructional material included in the system, for each kind
of user? In other words, what kind of general structure of knowledge is needed and
how must it be delivered to users with such different cognitive profiles? [6].
An answer to this question cannot be given unless taking into consideration the
problem of conceptual structuring the domain’s knowledge, before considering its
presentation through pedagogical sequences. The organization model of the training
material, which is tightly connected to the representation of the training domain
knowledge, has to allow multiple views of the concepts in the training domain.
Studies of computer-based training systems have shown that if they contain a
structural model, they facilitate learning. The network-like model with interconnected
knowledge nodes would best reflect the schemata (structure) -based learning

Domain Knowledge Modelling for Intelligent Instructional Systems

499

paradigm. In Bartletts’s Schemata Theory [1] it is considered that learning occurs as a
result of accumulation and reorganization at the human cognitive–mental structures
level. These structures would be the way knowledge objects (ideas, events, scripts etc)
are represented and organized in the semantic memory of each human being.

3 A Theoretical Model for Representing the Domain Knowledge
of an Instructional System
The model described herein is destined to represent the domain knowledge of an
instructional system. The model was called COUL-M (COnceptual Units’ Lattice
Model). The mathematical formalization of the COUL-M model has been developed
in [8] and has been derived mainly from two mathematical theories: the Formal
Concepts Analysis, [3] and the Logical Concept Analysis,[2].
In the COUL-M approach, the key elements in modeling the domain knowledge of
a CAI system are the followings: the Conceptual Unit, the Conceptual Structure, and
the Conceptual Transition Path. These three elements will be defined below.
Definition 1: A Conceptual Unit Ci is a group of related concepts belonging to
the domain knowledge of an instructional system. Conceptual Units are obtained by
applying a relation (or a set of relations) over a set of concepts belonging to that
domain knowledge.
Definition 2: A Conceptual Structure S is a tuple (N, RN, CS, LS), where N is a set
of concepts belonging to the domain knowledge of a course or discipline, RN is an
order relation over N, CS is the set of Conceptual Units obtained by applying the
relation RN over the set N, and LS is the set of traversal paths of the structure S.
Definition 3: A Conceptual Transition Path Ts ∈ LS is a sequence of conceptual
units (C1s, C2s, ..., CNs) connected one after another within a Conceptual Structure S.
The conceptual transition path Ts has as origin the Conceptual Unit C1s, considered
initial, and as destination a Conceptual Unit CNs, which encapsulates a set of concepts
comprising a study goal within an interactive course.
A Conceptual Structure is a model meant to represent the domain knowledge of an
interactive course. A Conceptual Structure should map the cognitive structure of the
domain knowledge, and should also reflect the pedagogical vision of the
teacher/author of that course. The model (the Conceptual Structure) has to allow for
flexibility, i.e., to provide as many as possible transition paths for learning
(assimilating) the domain’s main concepts. The COUL-M model [9] is a solution for
building the Conceptual Structure covering the domain knowledge of a CAI system.
The starting pointing in developing the COUL-M model (and thus, the Conceptual
Structure) for a certain domain is the analysis of the pedagogical relations between
that domain’s concepts. From a pedagogical point of view, several types of relations
can exist among the concepts within a domain knowledge: precedence, contribution,
hierarchical order, implication, equivalence, influence, etc.

500

E. Pecheanu, L. Dumitriu, and C. Segal

From an instructional point of view, two such relations might be of interest:
1. The Precedence Relation between concepts, which refers to the order of presenting
the concepts within an interactive course;
2. The Contribution Relation between concepts, which refers to the explicit
contribution (participation) of a concept in the presentation of another concept.
The mathematical formalization of the above relations (the Precedence and the
Contribution Relation), combined with their transformation into incidence relations
[8], allows for building a formal context and then, the concept lattice for this context.
The terms of formal context, formal concept and concept lattice are considered in the
sense of the Formal Concept Analysis approach [3]. The resulting model, a complete
lattice of formal concepts, expresses the relations among the course concepts, as
described by the teacher/author. The lattice-like model implicitly includes the
generalization-specialization relation. The formal concept lattice is isomorphic to a
complete lattice of Conceptual Units [8], which is the structure (the model) aggregating the related concepts within the domain knowledge. This aggregation model,
lattice-like, can constitute a Conceptual Structure for the domain knowledge [8].
As an example we will consider the domain knowledge of a training system which
is meant for assisted instruction in an IT discipline: Operating Systems. Furthermore,
we will consider a set of concepts belonging to a specific chapter of this discipline
(domain), the “Mutual Exclusion” chapter. Starting from the pedagogical relations
which are connecting this chapter’s concepts, a COUL-M model of knowledge
representation will be built. The most important concepts of the “Mutual Exclusion”
chapter are considered to be (in the author’s pedagogical vision) the following ones:
MEP, CR, CS, WA, Sem, SA, PC, where:
A = MEP = Mutual Exclusion; B = CR = Critical Resource;
C = CS = Critical Section; D = WA = Wait-Activation; E = Sem = Semaphore;
F = SA = Strict-Alternation; G = PC = Producer-Consumer.
It is assumed that the professor who authored the interactive course has specified
the pedagogical precedence between these concepts (according to their signification
within the subject of study and according to the professor’s pedagogical vision) as an
ordered list: CR, MEP, CS, Sem, SA, WA, PC.
The representation of these Mutual Exclusion chapter’s concepts using the COULM model is shown in Fig. 1. As Fig. 1 shows, the COUL-M model (the lattice of
Conceptual Units), preserves the significations of the Precedence Relation that has
been established initially:
− the formal concepts C2, C3, C4, C5, C6, C7, C8 correspond, respectively, with the
course concepts identified as: B, A, C, D, E, F, G (CR, MEP, CS, Sem, SA, WA,
PC); the C2 formal concept is a formal representation for the course concept CR,
the formal concept C3 is a formal representation for the concept MEP, and so on.
− the complete lattice making up the COUL-M model has the shape of a simple
chain, which corresponds to the precedence in any training activity: learning
content’s pieces in succession, similarly to the linear reading of printed text.
The Contribution Relation between a domain’s concepts might be modeled in a
very similar way: by applying a sequence of mathematical operations (decomposition
and aggregation) this relation can be transformed in an incidence relation [8]. Then,

Domain Knowledge Modelling for Intelligent Instructional Systems

501

Fig. 1. The COUL-M model, based upon the Precedence Relation within a domain knowledge

Fig. 2. The COUL-M model, based upon the Contribution Relation within the domain
knowledge of an instructional environment

the formal concept and concept lattice can be built and the lattice of Conceptual Units,
standing as the Conceptual Structure of the domain, can be finally derived, as shown
in Fig.2.
Finally, the Fig. 3. is showing the COUL-M model of representation in case of
combining the Precedence Relation and the Contribution Relation in the same
structure (formal context subpozition[3].
A further development can be realized if the course concepts are considered to be
teach by using several pedagogical methods, and if we consider a pedagogical method
as a set of related pedagogical resources. As a result, a new, more detailed model of
knowledge representation can be built: the COUL-FM, Conceptual Units Lattice –
Formal Model. In the new model, COUL-FM, the Conceptual Units become logical
formulae expressing the aggregation between the conceptual model of the domain
knowledge, instructional methods and instructional resources.

502

E. Pecheanu, L. Dumitriu, and C. Segal

Fig. 3. The COUL-M model, based upon the Precedence Relation and the Contribution
Relation within the domain knowledge of an instructional environment
Table 1. Instructional methods and Pedagogical Resources for a domain chapter.

Concept
MEP
(A)
CR
(B)
CS
(C)
Sem
(D)
SA
(E)
WA
(F)
PC
(G)

ResourcesRoles
A
R1 : Introduction
A
R2 : Presentation
B
R1 : Introduction
B
R2 : Presentation
C
R1 : Presentation
C
R2 : Assessment
D
R1 : Introduction
D
R2 : Presentation
D
R3 : Assessment
E
R1 : Introduction
E
R2 : Presentation
E
R3 : Assessment
F
R1 : Presentation
F
R2 : Assessment
G
R1 : Introduction
G
R2 : Presentation
G
R3 : Synthesis
G
R4 : Assessment

Instructional Methods

Instructional Objectives

A

A

A

O1╞ M1

B

B

B

O2╞ M1

C

C

C

O3╞ M1

D

D

D

O4╞ M1 ∨ M2

E

E

E

O5╞ M1 ∨ M2

F

F

F

O6╞ M1

G

G

M1 = { R1 , R2 }
M1 = { R1 , R2 }
M1 = { R1 , R2 }
M1 = { R1 , R2 }
D
D
D
D
M2 = { R1 , R2 , R3 }
M1 = { R1 , R2 }
E
E
E
E
M2 = { R1 , R2 , R3 }
M1 = { R1 , R2 }

A

B

C

D

E

D

E

F

G

M1 = { R1 , R2 }
G
G
G
G
M2 = { R1 , R2 , R4 }
G
G
G
G
G
M3 = { R1 , R2 , R3 , R4 }

O7╞ M1 ∨ M2 ∨ M3
G

G

G

Domain Knowledge Modelling for Intelligent Instructional Systems

503

Fig. 4. The COUL-FM model of representation for the domain knowledge, instructional
methods and instructional resources for a chapter of the Operating Systems discipline

Table 1 is showing a set of pedagogical methods (viewed as collection of resources
with a well stated pedagogical role in a lesson’s scenario, for teaching a concept) and
Fig. 4 is showing the mapping of this instructional elements over the lattice-like
model of the domain knowledge. In this manner, a knowledge base for an intelligent
instructional system can be built, and consequently, an inference engine able to
perform complex information processing in the frame of that system.

4 Authoring the Domain Knowledge and Instructional Knowledge
The COUL-FM model has been implemented by means of a software tool: a
knowledge compiler named COUL-COMP (COnceptual Units’ Lattice – knowledge
COMPiler). COUL-COMP stands for an authoring system, able to realize the
representation of the domain knowledge for a computer assisted instructional system.
A easy to use specification language, COUL-SL (Conceptual Units’ LatticeSpecification Language) has been also developed, in order to allow user to perform:
− the description of the domain’s knowledge structure, i.e., the specification of the
relations between the domain’s concepts(Precedence and Contribution Relation;
− the specifications of the instructional methods the training system might use and of
the Dependence Relations between pedagogical resources and domain concepts;

504

E. Pecheanu, L. Dumitriu, and C. Segal

− the specification of pedagogical resources and the role they can play in a an
instructional method deployment.
The compiler COUL-COMP is able to lexically and syntactically check the
correctness of a “program”, i.e., a set of specifications written in COUL-SL language
If the program is syntactically correct, the compiler will produce o set of pedagogical
prescriptions, in a form of Conceptual Transition Paths. Each Transition Path is
specifying the Conceptual Units- stages in the learning process, or “nodes” in the
Conceptual Transition Path and the “new” concept learner has to understand and
assimilate at each stage of the learning process. The methods and related resources
necessary to help user to learn each “new” concept of the training domain.

5 Conclusions and Further Developments
The lattice-like COUL-M model is able to represent, in a comprehensible way, the
relations between the concepts of the training domain of a CAI system. Furthermore,
the COUL-FM model is including knowledge about the targeted instructional
methods and the existing instructional resources.
The compiler COUL-COMP is a computational representation of the COUL-FM
model, able to extract pedagogical prescriptions from the model. The COUL model
can constitute o low level layer for various types of training systems. The model is
providing some essential elements for developing adaptive training systems: a
mapping of instructional methods and pedagogical resources over a conceptual
structure of the domain knowledge. The COUL-M model can be integrated in any
instructional environment including a Pool of Pedagogical resources (like the Ariadne
system).

References
1.

Brewer, W. F., Nakamura, G.V.: The nature and functions of schemas. In Wyer and Srull,
Eds., Handbook of Social Cognition, vol. 1. Hillsdale, NJ: Erlbaum, (1984) 119-160
2. Ferre, S.: Systemes d’information logiques, IRISA, Rennes, (1999).
3. Ganter, B., Wille, R.: Formal Concept Analysis –Mathematical Foundations, Springer
Verlag, Berlin (1999).
4. La Passardiere, B., Dufresne, A.: Adaptive Navigational Tools for Educational
Hypermedia, Proceedings of ICCAL '92, Nova Scotia, Canada (1992)
5. Larmat, J.: Intelligence’s Genetics, Scientific Printing House, Bucarest (1997).
6. Messing, J.: The Use of Teaching Strategy Control Features in Computer Assisted
Learning Courseware, Charles Sturt University (1990).
7. Nicola, I.: Pedagogy, Didactical and Pedagogical Printing House, Bucarest (1992).
8. Pecheanu, E.: Conceptually Modeling the Domain Knowledge of an Computer assisted
Instructional System, PhD Thesis, Galati, Romania (2003).
9. Pecheanu, E.: Content Modeling in Intelligent Instructional Environments, Proceedings of,
KES 2003, Part II pp 1229-1234, Oxford ,UK, 2003, ISBN 3-540-40804-5.
10. Santiago, R.: The Effect of Advisement and Locus of Control on Achievement in LearnerControlled Instruction, Journal of Computer-Based Instruction, Vol19, No2 (1992).

