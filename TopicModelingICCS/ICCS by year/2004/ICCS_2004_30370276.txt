A New Monte Carlo Approach for Conservation
Laws and Relaxation Systems
Lorenzo Pareschi1 and Mohammed Sea¨ıd2
1

2

Department of Mathematics, University of Ferrara, 44100 Italy
pareschi@dm.unife.it
Fachbereich Mathematik AG8, TU Darmstadt, 64289 Darmstadt, Germany
seaid@mathematik.tu-darmstadt.de
Abstract. We present a Monte Carlo method for approximating the
solution of conservation laws. A relaxation method is used to transform
the conservation law to a kinetic form that can be interpreted in a probabilistic manner. A Monte Carlo algorithm is then used to simulate the
kinetic approximation. The method we present in this paper is simple
to formulate and to implement, and can be straightforwardly extended
to higher dimensional conservation laws. Numerical experiments are carried out using Burgers equation subject to both smooth and nonsmooth
initial data.

1

Introduction

Monte Carlo methods have been always very popular in scientiﬁc computing.
This is mainly due to the ability to deal eﬃciently with very large (multiscale)
structures without many meshing problems and to their simplicity in keeping
the fundamental physical properties of the problems. In particular Monte Carlo
methods have been widely used for numerical simulations in rareﬁed gas dynamics described by the Boltzmann equation [1,5]. More recently these methods have
been extended to treat regimes close to continuum situations described by the
Euler or Navier-Stokes equations [7,8,9,2]. The common idea in these approximations is to take advantage of the knowledge of the equilibrium state of the
equation to build a scheme with the correct behavior close to the ﬂuid-limit. For
example, for the Boltzmann equation close to ﬂuid regimes particles are sampled
directly from a Maxwellian distribution as in Pullin’s method [10]. In this article, inspired by these methods, we use a relaxation approximation to transform
a conservation law into a semilinear system which has the structure of a discrete
velocity model of the Boltzmann equation. This kinetic form leads naturally to a
probabilistic representation. Therefore, the main ideas used in [7,8,9] can be used
to simulate the limiting conservation law. More precisely advection of particles
is made according to the characteristic speeds of the relaxation system, and the
projection into the equilibrium is performed with a suitable sampling strategy.
Let consider the scalar conservation law
ut + ϕ(u)x = 0,
u(x, t = 0) = u0 (x),

(x, t) ∈ R × R+ ,
x ∈ R,

M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 276–283, 2004.
c Springer-Verlag Berlin Heidelberg 2004

(1)

A Monte Carlo Relaxation Approach

277

where u ∈ R and the ﬂux function ϕ(u) : R → R is nonlinear. As in [3], we
replace the scalar Cauchy problem (1) by the semilinear relaxation system
ut + vx = 0,
1
vt + aux = − (v − ϕ(u)) ,
ε
u(x, 0) = u0 (x), v(x, 0) = ϕ (u0 (x)) ,

(2)

where v ∈ R, a is positive constant, and ε is the relaxation rate. When ε −→ 0,
solution of the relaxation system (2) approaches solution of the original equation
(1) by the local equilibrium v = ϕ(u). A necessary condition for such convergence
is that the subcharacteristic condition [3,6]
−a ≤ ϕ (u) ≤ a,

∀ u,

(3)

is satisﬁed in (2). The main advantage in considering the relaxation method lies
essentially on the semilinear structure√of the system (2), which has two linear
characteristic variables (given by v ± au), and consequently it can be solved
numerically without using Riemann solvers (see [3] and the references therein).
Our purpose in the present paper is to construct a Monte Carlo approach
for the conservation law (1) using the fact that, for the relaxation system (2)
a kinetic formulation can be easily derived. The organization of the paper is as
follows. Section 2 is devoted to the probabilistic formulation for the relaxation
system (2). In section 3 we discuss a Monte Carlo algorithm for the relaxation
model. Section 4 illustrates the performance of the approach through experiments with the Burgers equation. In the last section some concluding remarks
and future developments are listed.

2

Probabilistic Interpretation

In order to develop a probabilistic formulation for the relaxation system (2) we
introduce the kinetic variables f and g as
u=f +g

and

v = a(f − g).

(4)

The relaxation system can be rewritten in a diagonal form as
ft +
gt −

√

1
ε

g−f
ϕ(f + g)
√
+
2
2 a

,

1
agx =
ε

f − g ϕ(f + g)
√
−
2
2 a

.

afx =

√

(5)

To solve numerically the equations (5) we split the problem into two steps:
(i) The transport stage
√
ft + afx = 0,
(6)
√
gt − agx = 0.

278

L. Pareschi and M. Sea¨ıd

(ii) The relaxation stage
1
ε

g−f
ϕ(f + g)
√
+
2
2 a

,

1
gt =
ε

f − g ϕ(f + g)
√
−
2
2 a

.

ft =

(7)

Note that this splitting is ﬁrst order accurate. A second order splitting for moderately stiﬀ relaxation stages can be derived analogously using the Strang method
[11]. For simplicity ﬁrst we will describe the relaxation problem (7), and then
we show how to combine it with the stage (6) for the full problem.
We assume, without loss of generality, that for a ﬁxed x
f ≥ 0,

g ≥ 0,

u = f + g = 1.

Furthermore, we assume that the ﬂux function in (1) satisﬁes
ϕ (u) < 1,

0 ≤ ϕ(u) ≤ u.

(8)

Although problem (7) can be solved exactly we consider its time discretization
∆t
ε

ϕ(f n+1 + g n+1 )
g n+1 − f n+1
+
2
2

,

∆t
=g +
ε

f n+1 − g n+1
ϕ(f n+1 + g n+1 )
−
2
2

.

f n+1 = f n +
g

n+1

n

(9)

Since f n+1 + g n+1 = f n + g n we can write
∆t
ε
∆t
= gn +
ε

f n+1 = f n +
g n+1

ε g n+1 − f n+1
ε ϕ(f n+1 + g n+1 )
+
,
ε + ∆t
2
ε + ∆t
2
ε f n+1 − g n+1
ε ϕ(f n+1 + g n+1 )
.
−
ε + ∆t
2
ε + ∆t
2

Or equivalently
f n+1 = (1 − λ)f n + λ
g
with λ =

n+1

n

= (1 − λ)g + λ

ϕ(f n+1 + g n+1 )
g n+1 − f n+1
+
2
2

,

ϕ(f n+1 + g n+1 )
f n+1 − g n+1
−
2
2

,

ε
. Now let us deﬁne the
ε + ∆t

n

f ,
P n (ξ) = g n ,


0,

probability density
√
if ξ = + a,
√
if ξ = − a,
elsewhere.

(10)

A Monte Carlo Relaxation Approach

Note that 0 ≤ P n (ξ) ≤ 1 and

ξ

279

P n (ξ) = 1. Moreover

P n+1 (ξ) =
ξ

P n (ξ) = 1.
ξ

The system (10) can be seen as the evolution of the probability function P n (ξ)
according with

√
n
n

(1 − λ)f + λEf (u ), if ξ = +√a,
(11)
P n+1 (ξ) = (1 − λ)g n + λEg (un ), if ξ = − a,


0,
elsewhere,
u + ϕ(u)
u − ϕ(u)
and Eg (u) =
.
2
2
We remark that, since ε > 0, the condition 0 ≤ λ ≤ 1 is satisﬁed. Obviously,
(11) represents a convex combination of two probability densities. In fact, thanks
to (8), we have Ef (u) ≥ 0, Eg (u) ≥ 0 and Ef (u) + Eg (u) = 1.

where Ef (u) =

3

Monte Carlo Algorithm

In order to develop a Monte Carlo game to approach the solution to the kinetic
system (5), in addition to a good random number generator, we need a way
to sample particles from an initial data and some other basic tools which are
described with details in the lecture notes [9]. Thus, we consider two families of
particles that deﬁnes samples of our probability density P n (ξ).
√Let us deﬁne
√ with {ξ1 , ξ2 , . . . , ξN } the particle samples, we know that ξj =
+ a or ξj = − a with probability f n or g n respectively. We have the relation
P n+1 (ξ) = (1 − λ)P n (ξ) + λE n (ξ),

(12)


√
u + ϕ(u)


, if ξ = + a,


2
where E n (ξ) is deﬁned as:
E n (ξ) = u − ϕ(u) , if ξ = −√a,


2


0,
elsewhere.
Hence, the relaxation stage (7) can be solved in the following way:
• Given a particle sample ξ the evolution of the sample during the time integration process is performed according to :
◦ with probability (1 − λ) the sample is unchanged
◦ with probability λ the sample is replaced with a sample from E n (ξ)
• To sample a particle from E n (ξ) we proceed as follows:
√
u + ϕ(u)
◦ with probability
take ξ = + a
2
√
u − ϕ(u)
◦ with probability
take ξ = − a
2

280

L. Pareschi and M. Sea¨ıd

0.5

0.5

0.5

0.45

0.45

0.45

0.4

0.4

0.4

0.35

0.35

0.35

0.3

0.3

0.3

0.25

0.25

0.25

u 0.2

u 0.2

u 0.2

0.15

0.15

0.15

0.1

0.1

0.1

0.05

0.05

0.05

0
0

0
0
2

0
0
2

4

2
4

t6

4

t6
8
10

−5

−4

−3

−2

−1

x

0

1

2

3

4

5

t6
8
10

−5

−4

−3

−2

−1

x

0

1

2

3

4

5

8
10

−5

−4

−3

−2

−1

x

0

1

2

3

4

5

Fig. 1. Evolution in time-space of Gaussian distribution (right), box distribution
(medium) and cone distribution (left) using the Monte Carlo approach.

Note that the relaxation stage is well deﬁned for any value of . In particular
as → 0 we have λ → 1 and thus particles are all sampled from the local equilibrium E n (ξ). To generate particles the spatial domain is ﬁrst divided into cells
[xi− 21 , xi+ 12 ] with stepsize ∆x and centered in xi . Then particles are generated
from a given piecewise initial data in each cell and are randomly distributed
around the cell center xi .
Once the particle distribution is updated by the above steps, the transport
stage (6) of the splitting is realized by advecting the position of the particles
according to their speeds. Thus, given a sample of N particles
at positions
√
√
x1 , x2 , · · · , xN and speeds ξ1 , ξ2 , · · · , ξN (equal either to + a or − a) the new
position of the particle sample {xi , ξi } is simply
xnew
= xold
+ ∆tξi ,
i
i
xnew
i

i = 1, . . . , N,

xold
i

where
and
are respectively, the new and old positions of the sample
ξi , and ∆t is the time stepsize.
Remark 1 The Monte Carlo method presented in this paper applies also if u > 0
and u = 1. For this case
 n

√
√
u + ϕ(u)
f




,
if
ξ
=
+
a,
 un
 2u , if ξ = + a,


n
P n (ξ) = g , if ξ = −√a, and E n (ξ) = u − ϕ(u) , if ξ = −√a,


 un
 2u




0,
elsewhere.
0,
elsewhere.
It is easy to verify that in this case, P n deﬁnes a probability (i.e., 0 ≤ P n (ξ) ≤ 1
and ξ P n (ξ) = 1).

4

Numerical Results

In what follows we present numerical results obtained for some tests on Burgers
2
equation given by the equation (1) with the ﬂux function deﬁned as ϕ(u) = u2 .

A Monte Carlo Relaxation Approach
Relaxed Monte Carlo results for the Gaussian distribution (13)

Relaxed Monte Carlo results for the box distribution (14)

Relaxed Monte Carlo results for the cone distribution (15)

Fig. 2. Relaxed Monte Carlo results for the distributions (13)-(15).

281

282

L. Pareschi and M. Sea¨ıd

Note that this ﬂux function satisﬁes the assumptions (8). We solve the Burgers
equation in the space interval [−δ, δ] subject to periodic boundary conditions
and using the following three diﬀerent initial data:
1. Gaussian distribution
1 2
1
u0 (x) = √ e− 2 x .
2π

2. Box distribution

(13)


δ
2
, if |x| ≤ ,
u0 (x) = δ
4
0, elsewhere.

3. Cone distribution


δ
 4|x| 2
− 2 + , if |x| ≤ ,
u0 (x) =
δ
δ
2
0,
elsewhere.

(14)

(15)

Note that the total mass in these initial data is equal to unity, R u0 (x)dx = 1.
In all our computations we used δ = 5, the spatial interval is discretized into
M = 100 gridpoints uniformly spaced. The number of particles N is set to 104
which is large enough to decrease the eﬀect of the ﬂuctuations in the computed
solutions. Here we present only results for the relaxed case (i.e. ε = 0). Results
for the relaxing case (i.e. ε = 0) can be done analogously. The time step ∆t is
chosen such a way the CFL = 1 and the computation have been performed with
a single run for diﬀerent time t ∈ [0, 10].
In Fig. 1 we display the evolution in time of these initial distributions. For
the sake of comparison, we have included in the ﬁgures the results obtained by
the Lax-Friedrichs method [4], plotted by the solid lines. In the Monte Carlo approach the solution u(xi , t) at the gridpoint xi and time t has been reconstructed
by averaging the number of particles in each cell as
u(xi , t) =

n(xi , t)
N

M

u(xj , t = 0),

i = 1, . . . , M,

j=1

where n(xi , t) denotes the number of the particles localized in the cell
[xi− 12 , xi+ 12 ] at time t. As can be seen the shock is well captured by the Monte
Carlo method. Fig. 2 shows again the results for the initial data (13)-(15) along
with the evolution of particle distribution in the space interval for six diﬀerent
times. The Monte Carlo approach preserves the positivity of the solution as well
as the conservation of mass
u(x, t)dx =
R

R

u0 (x)dx = 1,

∀ t > 0.

We would like to mention that the new Monte Carlo approach can approximate
conservation laws with diﬀusive source terms, for example viscous Burgers equations. The diﬀusion stage in the algorithm can be treated, for example, by the
well-known Random walk method.

A Monte Carlo Relaxation Approach

5

283

Concluding Remarks

We have presented a simple Monte Carlo algorithm for the numerical solution
of conservation laws and relaxation systems. The algorithm takes advantage of
the relaxation model associated to the equation under consideration which can
be regarded as the evolution in time of a probability distribution. Although we
have restricted our numerical computations to the case of one-dimensional scalar
problems, the most important implication of our research concerns the use of
eﬀective Monte Carlo procedures for multi-dimensional systems of conservation
laws with relaxation terms similarly to the Broadwell system and the BGK model
in rareﬁed gas dynamics. Our current eﬀort is therefore to extend this approach
to systems of conservation laws in higher space dimensions. Another extension
will be to couple the Monte Carlo method at the large scale with a deterministic
method at the reduced small scale as in [2] for a general relaxation system.
Finally we remark that the Monte Carlo approach proposed in this paper is
restricted to ﬁrst order accuracy. A second order method it is actually under
study.
Acknowledgements. The work of the second author was done during a visit
at Ferrara university. The author thanks the department of mathematics for the
hospitality and for technical and ﬁnancial support. Support by the European
network HYKE, funded by the EC as contract HPRN-CT-2002-00282, is also
acknowledged.

References
1. Bird G.A.: Molecular Gas Dynamics. Oxford University Press, London, (1976)
2. Caﬂisch R.E., Pareschi L.: An implicit Monte Carlo Method for Rareﬁed Gas Dynamics I: The Space Homogeneous Case. J. Comp. Physics 154 (1999) 90–116
3. Jin S., Xin, Z.: The Relaxation Schemes for Systems of Conservation Laws in
Arbitrary Space Dimensions. Comm. Pure Appl. Math. 48 (1995) 235–276
4. LeVeque Randall J.: Numerical Methods for Conservation Laws. Lectures in Mathematics ETH Z¨
urich, (1992)
5. Nanbu K.: Direct Simulation Scheme Derived from the Boltzmann Equation. J.
Phys. Soc. Japan, 49 (1980) 2042–2049
6. Natalini, R.: Convergence to Equilibrium for Relaxation Approximations of Conservation Laws. Comm. Pure Appl. Math. 49 (1996) 795–823
7. Pareschi L., Wennberg B.: A Recursive Monte Carlo Algorithm for the Boltzmann
Equation in the Maxwellian Case. Monte Carlo Methods and Applications 7 (2001)
349–357
8. Pareschi L., Russo G.: Time Relaxed Monte Carlo Methods for the Boltzmann
Equation. SIAM J. Sci. Comput. 23 (2001) 1253–1273
9. Pareschi L., Russo G.: An Introduction to Monte Carlo Methods for the Boltzmann
Equation. ESAIM: Proceedings 10 (2001) 35–75
10. Pullin D.I.: Generation of Normal Variates with Given Sample. J. Statist. Comput.
Simulation 9 (1979) 303–309
11. Strang, G.: On the Construction and the Comparison of Diﬀerence Schemes. SIAM
J. Numer. Anal. 5 (1968) 506–517

