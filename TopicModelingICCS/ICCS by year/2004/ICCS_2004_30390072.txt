A {k, n}-Secret Sharing Scheme for Color
Images
Rastislav Lukac, Konstantinos N. Plataniotis, and
Anastasios N. Venetsanopoulos
The Edward S. Rogers Sr. Dept. of Electrical and Computer Engineering,
University of Toronto, 10 King’s College Road, Toronto, M5S 3G4, Canada
{lukacr,kostas,anv}@dsp.utoronto.ca

Abstract. This paper introduces a new {k, n}-secret sharing scheme
for color images. The proposed method encrypts the color image into n
color shares. The secret information is recovered only if the k (or more)
allowed shares are available for decryption. The proposed method utilizes the conventional {k, n}-secret sharing strategy by operating at the
bit-levels of the decomposed color image. Modifying the spatial arrangements of the binary components, the method produces color shares with
varied both the spectral characteristics among the RGB components and
the spatial correlation between the neighboring color vectors. Since encryption is done in the decomposed binary domain, there is no obvious
relationship in the RGB color domain between any two color shares or
between the original color image and any of the n shares. This increases
protection of the secret information. Inverse cryptographic processing of
the shares must be realized in the decomposed binary domain and the
procedure reveals the original color image with perfect reconstruction.

1

Introduction

Visual cryptography [2],[3],[4],[8],[11] is a popular cryptographic tool used for
protection of scanned documents and natural digital images which are distributed via public networks. These techniques are based on the principle of sharing
secret information among a group of participants. The shared secret can be recovered only when a coalition of willing participants are polling their encrypted
images, the so-called shares, together. Secret sharing schemes are usually termed visual since the secret (original) information can be directly revealed from
stacked shares (e.g realized as transparencies) through simple visual inspection,
without any computer-guided processing [9],[11].
A {k, n}-threshold visual cryptography scheme [5],[6],[11] often called {k, n}visual secret sharing (VSS), is used to encrypt an input image by splitting the
original content into n, seemingly random, shares. To recover the secret information, k (or more) allowed shares must be stacked together.

M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 72–79, 2004.
c Springer-Verlag Berlin Heidelberg 2004

A {k, n}-Secret Sharing Scheme for Color Images

(a)

(b)

(d)

(c)

73

Fig. 1. Visual cryptography: (a) original binary image, (b,c) share images, (d) decrypted, output image

2

{k, n}-Secret Sharing Scheme

Due to its algorithmic nature, conventional visual cryptography schemes operate
on a binary input (Fig. 1) [10]. Assuming a K1 × K2 binary image (black and
white image with 0 values denoting the black and 1 values denoting the white),
each binary pixel r(i,j) determined by spatial coordinates i = 1, 2, ..., K1 and
j = 1, 2, ..., K2 is replaced via an encryption function fe (·) with a m1 × m2 block
of black and white pixels in each of the n shares. Repeating the process for each
input pixel, a K1 × K2 input binary image is encrypted into n binary shares
each one with a spatial resolution of m1 K1 × m2 K2 pixels. Since the spatial
arrangement of the pixels varies from block to block, the original information
cannot be revealed without accessing a predeﬁned number of shares.
Let as assume a basic {2, 2}-threshold structure which is the basic case designed within the {k, n}-VSS framework [1],[7]. Assuming for simplicity a basic
structure with 2 × 2 blocks s1 = [s(2i−1,2j−1) , s(2i−1,2j) , s(2i,2j−1) , s(2i,2j) ] ∈ S1
and s2 = [s(2i−1,2j−1) , s(2i−1,2j) , s(2i,2j−1) , s(2i,2j) ] ∈ S2 , the encryption process
is deﬁned as follows:
fe (r(i,j) ) =

[s1 , s2 ]T ∈ C0 for r(i,j) = 0
[s1 , s2 ]T ∈ C1 for r(i,j) = 1

(1)

where C0 and C1 are the sets obtained by permuting the columns of the n×m1 m2
basis matrices A0 and A1 , respectively [10]. Since m1 m2 represents the factor by
which each share is larger than the original image, it is desirable to make m1 m2
as small as possible. In the case of the {2, 2}-VSS the optimal choice m1 and m2
leads to m1 = 2 and m2 = 2 resulting in 2 × 2 blocks s1 and s2 .

74

R. Lukac, K.N. Plataniotis, and A.N. Venetsanopoulos

(a)

(b)

(c)

(e)

(d)

Fig. 2. Halftoning-based secret sharing of color images: (a) original color image, (b)
halftone image obtained using Floyd-Steinberg ﬁlter [12], (c,d) share images, (e) decrypted, output image

Assuming the {2, 2}-VSS the sets
1,0,1,0
0,0,1,1
1,1,0,0
1,0,0,1
0,1,1,0
C0 = [ 0,1,0,1
1,0,1,0 ], [ 0,1,0,1 ], [ 1,1,0,0 ], [ 0,0,1,1 ], [ 0,1,1,0 ], [ 1,0,0,1 ]

(2)

1,0,1,0
0,0,1,1
1,1,0,0
1,0,0,1
0,1,1,0
C1 = [ 0,1,0,1
0,1,0,1 ], [ 1,0,1,0 ], [ 0,0,1,1 ], [ 1,1,0,0 ], [ 1,0,0,1 ], [ 0,1,1,0 ]

(3)

include all matrices obtained by permuting the columns of the 2×4 basis matrices
A0 and A1 , respectively [10],[11]. The basic matrices considered here are deﬁned
as follows:
0101
0101
A0 =
, A1 =
(4)
1010
0101
If a secret pixel is white, i.e. r(i,j) = 1, then each pixel in s1 is equivalent
to each pixel in s2 , and thus, [s1 , s2 ]T can be any member of set C1 . If a secret
pixel is black, i.e. r(i,j) = 0, then each pixel in s1 should complement each pixel
in s2 and thus, [s1 , s2 ]T should be selected from set C0 . The choice of [s1 , s2 ]T is
guided by a random number generator, which determines the random character
of the shares.
The decrypted block is produced through a decryption function fd (·). In the
case of the {2, 2}-scheme based on the basis matrices of (4), fd (·) can be deﬁned
as follows:
for s1 = s2
s1
y2×2 = fd (s1 , s2 ) =
(5)
[0, 0, 0, 0] for s1 = s2

A {k, n}-Secret Sharing Scheme for Color Images

(a)

(b)

(c)

75

(e)

(d)

Fig. 3. Halftoning-based secret sharing of color images: (a) original color image, (b)
halftone image obtained using Floyd-Steinberg ﬁlter [12], (c,d) share images, (e) decrypted, output image

where s1 = [s(u,v) , s(u,v+1) , s(u+1,v) , s(u+1,v+1) ] ∈ S1 and s2 = [s(u,v) , s(u,v+1) ,
s(u+1,v) , s(u+1,v+1) ] ∈ S2 , for u = 1, 3, ..., 2K1 − 1 and v = 1, 3, ..., 2K2 − 1,
are 2 × 2 share blocks which are used to recover the output block y2×2 =
y(u,v) , y(u,v+1) , y(u+1,v) , y(u+1,v+1) as s(u,v) or black pixels described as [0, 0, 0, 0].
The application of a conventional {k, n}-VSS scheme to a K1 × K2 natural
image requires halftoning [7],[10]. The image is ﬁrst transformed into a K1 × K2
halftone image by using the density of the net dots to simulate the intensity
levels [12]. Applying the procedure for each color channel of the original image
( Fig. 2a) independently, each color channel of the halftone image (Fig. 2b) is
a binary image and thus appropriate for the VSS. Assuming {2, 2}-VSS, the
two color shares obtained by the procedure are depicted in Fig. 2c,d. Figure 2e
shows the 2K1 × 2K2 decrypted image (result) obtained by stacking the two
shares together.

76

R. Lukac, K.N. Plataniotis, and A.N. Venetsanopoulos

Visual inspection of both the original image ( Fig. 1a and Fig. 2a) and the
recovered image (Fig. 1d and Fig. 2e) indicates that: i) the decrypted image is
darker, and ii) the input image is of quarter size compared to the decrypted output. Moreover, the decrypted color image depicted in Fig. 2e contains a number
of color artifacts due to nature of the algorithm. To end this, the conventional
{k, n}-threshold visual cryptography i) cannot provide perfect reconstruction,
either in terms of pixel intensity or spatial resolution, and ii) is not appropriate
for real-time applications.
Figure 3 shows the images obtained using the conventional {2, 2}-secret sharing scheme applied to the image with the diﬀerent color scenario compared
to Fig. 2. It can be again observed that the decrypted image depicted in Fig.
3e contains shifted colors which often prohibit correct perception of ﬁne image
details.
Is has to be mentioned that the halftoning-based {k, n}-visual secret sharing
schemes are the most popular choice for natural image secret sharing. Another
secret sharing approach for color images is based on mean color-mixing [8]. However, this method is not appropriate for practical applications due to signiﬁcant
reduction of color gamut and the extreme increase in the spatial resolution of
the shares. Other works, e.g. [9],[13] deals with analytical construction of the
secret sharing schemes for color images.

3

{k, n}-Color Secret Sharing

Let x : Z 2 → Z 3 be a K1 × K2 Red-Green-Blue (RGB) color image representing
a two-dimensional matrix of the three-component color vectors (pixels) x(i,j) =
[x(i,j)1 , x(i,j)2 , x(i,j)3 ] located at the spatial position (i, j), for i = 1, 2, ..., K1 and
j = 1, 2, ..., K2 . Assuming that c describes the color channel (i.e. c = 1 for Red,
c = 2 for Green, and c = 3 for Blue) and the color component x(i,j)c is coded
with B bits allowing x(i,j)c to take an integer value between 0 and 2B − 1, the
color vector x(p,q) can be equivalently expressed in a binary form as follows:
x(i,j) =

B
b=1

xb(i,j) 2B−b

(6)

where xb(i,j) = [xb(i,j)1 , xb(i,j)2 , xb(i,j)3 ] ∈ {0, 1}3 denotes the binary vector at the
b-bit level, with b = 1 denoting the most signiﬁcant bits (MSB).
3.1

Encryption

If the c-th component of the binary vector xb(i,j) is white (xb(i,j)c = 1), encryption is performed through [s1 , s2 ]T ∈ C1 replacing xb(i,j)c by binary blocks s1
and s2 in each of the two shares. Otherwise, the reference binary component is
black (xb(p,q)c = 0), and encryption is deﬁned via [s1 , s2 ]T ∈ C0 . This forms an
encryption function deﬁned as follows:
fe (xb(i,j)c ) =

[s1 , s2 ]T ∈ C0 for xb(i,j)c = 0
[s1 , s2 ]T ∈ C1 for xb(i,j)c = 1

(7)

A {k, n}-Secret Sharing Scheme for Color Images

77

(a)

(d)
(b)

(c)

Fig. 4. Proposed {2, 2}-secret sharing scheme for color images: (a) original color image,
(b,c) share images, (d) decrypted, output image

By replacing the binary components xb(i,j)c with binary blocks s1 and s2 for
one particular b, the process generates two 2K1 ×2K2 vector-valued binary shares
S1b and S2b , respectively. A random number generator guides the choice of [sb1 , sb2 ]T
and determines the random character of S1b and S2b . Thus, the process modiﬁes
b
both the spatial correlation between spatially neighboring binary vectors s(u,v)
=
b
b
b
b
b
b
b
b
b
[s(u,v)1 , s(u,v)2 , s(u,v)3 ] ∈ S1 or s(u,v) = [s(u,v)1 , s(u,v)2 , s(u,v)3 ] ∈ S1 , for u =
1, 2, ..., 2K1 and v = 1, 2, ..., 2K2 , and the spectral correlation among components
b
b
b
b
s(u,v)c
or s(u,v)c
, for c = 1, 2, 3, of the individual binary vectors s(u,v)
or s(u,v)
,
respectively. Bit-level stacking of the encrypted bit-levels produces the color
vectors s(u,v) ∈ S1 and s(u,v) ∈ S2 as
s(u,v) =

B
b=1

b
s(u,v)
2B−b and s(u,v) =

B

s b 2B−b
b=1 (u,v)

(8)

Due to random processing taking place at the bit-levels, S1 and S2 contain
only random, color noise like information (Fig. 4b,c). Since encryption is realized
in the decomposed binary vector space, no detectable relationship between the
original color vectors x(p,q) and the color noise of S1 or S2 can be found in the
RGB color domain. This considerably increases security and prevents unauthorized decryption through brute-force enumeration.
3.2

Decryption

The decryption procedure is designed to satisfy the perfect reconstruction property. The original color data must be recovered from the color shares S1 and
S2 using inverse algorithmic steps. Therefore, the decryption procedure is applied to the decomposed binary vector arrays of the color shares. Assuming that
(i, j), for i = 1, 2, ..., K1 and j = 1, 2, ..., K2 , denotes the spatial position in
the original image and c denotes the color channel, the corresponding 2 × 2
b
b
b
b
binary share blocks are scb = {s(2i−1,2j−1)c
, s(2i−1,2j)c
, s(2i,2j−1)c
, s(2i,2j)c
} and
b
b
b
b
b
sc = {s(2i−1,2j−1)c , s(2i−1,2j)c , s(2i,2j−1)c , s(2i,2j)c }. Based on the arrangements
of the basis matrices A0 and A1 in (4) used in the proposed {2, 2}-secret sharing

78

R. Lukac, K.N. Plataniotis, and A.N. Venetsanopoulos

(a)

(d)
(b)

(c)

Fig. 5. Proposed {2, 2}-secret sharing scheme for color images: (a) original color image,
(b,c) share images, (d) decrypted, output image

scheme, if both blocks are consistent, i.e. scb = sc b , the decrypted original bit
xb(i,j)c is assign white, i.e. xb(i,j)c = 1. Otherwise, the blocks are inconsistent, i.e.
scb = sc b and the original bit is recovered as black, i.e. xb(i,j)c = 0. This logical
comparison forms the following decryption function
xb(i,j)c = fd (scb , scb ) =

1 for scb = sc b
0 for scb = sc b

(9)

which is used to restore the binary vectors xb(i,j) . The procedure completes with
the bit-level stacking (6) resulting in the original color vector x(i,j) .
Figure 4d shows the decrypted color output. Since the proposed method
satisﬁes the perfect reconstruction property, the output image is identical to the
original depicted in Fig 4a. Note that perfect reconstruction is demonstrated
also in Fig 5, which depicts two full color shares (Fig 5b,c) and the decrypted
output ( Fig 5d) obtained by the proposed {2, 2}-secret sharing scheme applied
to the test image “Atlas” ( Fig 5a).
It has to be mentioned that (9), which is deﬁned for a {2, 2}-scheme, can be
more generally described as follows:
ob(i,j) = fd (sb1 , sb2 ) =

1 for [scb , sc b ]T ∈ C1
0 for [scb , sc b ]T ∈ C0

(10)

This concept can be further generalized for the share blocks {scb , sc b , sc b , ...}
deﬁned in the speciﬁc {k, n}-threshold schemes.

4

Conclusion

A {k, n} secret sharing scheme with perfect reconstruction of the color inputs was
introduced. The method cryptographically processes the color images replacing

A {k, n}-Secret Sharing Scheme for Color Images

79

the bit components with a block of bits for each of the n shares. By separate
encrypting each bit plane of the decomposed color image, the method produces
color shares with varied spectral and spatial characteristics. Since encryption is
realized in the decomposed binary domain, the procedure increases protection
against attacks performed in the RGB color domain. This makes the method
attractive for secure transmission over the untrusted public channel. Moreover,
the perfect reconstruction property allows to reveal the original color image
without visual impairments or color shifts.

References
1. Adhikari, A., Sikdar, S.: A new (2,n)-visual threshold scheme for color images.
Proc. INDOCRYPT 2003, LNCS 2904 (2003) 148–161
2. Ateniese, G., Blundo, C, de Santis, A., Stinson, D.G.: Visual cryptography for
general access structures. Information and Computation 129 (1996) 86–106
3. Ateniese, G., Blundo, C, de Santis, A., Stinson, D.G.: Extended capabilities for
visual cryptography. Theoretical Computer Science 250 (2001) 143–161
4. Droste, S.: New results on visual cryptography. Proc. Advances in Cryptology CRYPTO’96, LNCS 1109 (1996) 401–415
5. Eisen, P.A., Stinson, D.R.: Threshold visual cryptography schemes with speciﬁed
levels of reconstructed pixels. Design, Codes and Cryptography 25 (2002) 15–61
6. Hofmeister, T., Krause, M., Simon, H.U.: Contrast optimal k out of n secret sharing
schemes in visual cryptography. Theoretical Computer Science 240 (2000) 471–485
7. Hou, J.C.: Visual cryptography for color images. Pattern Recognition 36 (2003)
1619–1629
8. Ishihara, T., Koga, H.: A visual secret sharing scheme for color images based on
meanvalue-color mixing. IEICE Trans. Fundamentals E86-A (2003) 194–197
9. Koga, H., Iwamoto, M., Yakamoto, H.: An analytic construction of the visual secret
sharing scheme for color images. IEICE Trans. Fundamentals E84-A (2001) 262–
272
10. Lin, C.C., Tsai, W.H.: Visual cryptography for gray-level images by dithering techniques. Pattern Recognition Letters 24 (2003) 349–358
11. Naor, M., Shamir, A.: Visual Cryptography. Proc. EUROCRYPT’94, LNCS 950
(1994) 1–12
12. Ulichney, R.A.: Dithering with blue noise. Proceedings of the IEEE 76 (1988)
56–79
13. Yang, C.N.: A note on color visual encryption. Journal of Information Science and
Engineering 18 (2002) 367–372

