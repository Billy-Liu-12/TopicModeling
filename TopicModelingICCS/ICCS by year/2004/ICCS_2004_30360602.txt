On Balancing Delay and Cost
for Routing Paths
Moonseong Kim1 , Young-Cheol Bang2 , and Hyunseung Choo1
1

School of Information and Communication Engineering
Sungkyunkwan University
440-746, Suwon, Korea +82-31-290-7145
{moonseong,choo}@ece.skku.ac.kr
2
Department of Computer Engineering
Korea Polytechnic University
429-793, Gyeonggi-Do, Korea +82-31-496-8292
ybang@kpu.ac.kr

Abstract. The distributed adaptive routing is the typical routing algorithm that is used in the current Internet. The path cost of the least
delay (LD) path is relatively more expensive than that of the least cost
(LC) path, and the path delay of the LC path is relatively higher than
that of the LD path. In this paper, we propose an eﬀective parameter
that is the probabilistic combination of cost and delay. It signiﬁcantly
contributes to identify the low cost and low delay unicasting path, and
improves the path cost with the acceptable delay.

1

Introduction

For distributed real-time applications, the path delay should be acceptable and
also its cost should be as low as possible. We call it as the delay constrained
least cost (DCLC) path problem [3,5]. It has been shown to be NP-hard [2]. As
you see, the DCLC is desirable to ﬁnd a path that considers the cost and the
delay together. Even though there is a loss for the cost, two parameters should be
carefully negotiated to reduce the delay. This is because the adjustment between
the cost and the delay for the balance is important. Hence, we introduce the new
parameter that takes in account both the cost and the delay at the same time.
The rest of paper is organized as follows. In section 2, we describe the network
model, section 3 presents details of the new parameter. Then we analyze and
evaluate the performance of the proposed parameter by simulation in section 4.
Section 5 concludes this paper.

2

Network Model

We consider a computer network represented by a directed graph G = (V, E),
where V is a set of nodes and E is a set of links. Each link (i, j) ∈ E is associThis paper was supported in part by Brain Korea 21 and University ITRC project.
Dr. H. Choo is the corresponding author.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3036, pp. 602–606, 2004.
c Springer-Verlag Berlin Heidelberg 2004

On Balancing Delay and Cost for Routing Paths

603

ated with two parameters, namely available cost c(i,j) and delay d(i,j) . Given a
network G, we deﬁne a path as sequence of nodes u, i, j, . . . , k, v, such that
(u, i), (i, j), . . ., and (k, v) belong to E. Let P (u, v) = {(u, i), (i, j), . . . , (k, v)}
denote the path from node u to node v. If all elements of the path are distinct,
then we say that it is a simple path. We deﬁne the length of the path P (u, v),
denoted by n(P (u, v)), as a number of links in P (u, v). Let
be a binary relation on P (u, v) deﬁned by (a, b)
(c, d) ↔ n(P (u, b)) ≤ n(P (u, d)), ∀ (a, b),
(c, d) ∈ P (u, v). (P (u, v), ) is a totally ordered set. For given a source node
s ∈ V and a destination node d ∈ V , (2s⇒d , ∞) is the set of all possible paths
from s to d. (2s⇒d , ∞) = { Pk (s, d) | all possible paths from s to d, ∀ s, d ∈
V, ∀ k ∈ Λ }, where Λ is a index set. Both cost and delay of an arbitrary path
Pk are assumed to be a function from (2s⇒d , ∞) to a nonnegative real number. Since (Pk , ) is a totally ordered set, if there exists a bijective function
fk then Pk is isomorphic to Nn(Pk ) . fk : Pk −→Nn(Pk ) . We deﬁne a function
n(P )
of path cost φC (Pk ) = r=1k cf −1 (r) and a function of delay along the path
k

φD (Pk ) = r=1k df −1 (r) , ∀ Pk ∈ (2s⇒d , ∞) . (2s⇒d , supD) is the set of paths
k
from s to d for which the end-to-end delay is bounded by supD. Therefore
(2s⇒d , supD) ⊆ (2s⇒d , ∞). The DCLC problem is to ﬁnd the path that satisﬁes
min{ φC (Pk ) | Pk ∈ (2s⇒d , supD), ∀ k ∈ Λ }.
n(P )

3

Proposed Parameter for Low Cost and Low Delay

Since only link-delays are considered to compute PLD , φC (PLD ) is always greater
than or equal to φC (PLC ) [1]. If the cost of the path, φC (PLD ), is decreased
(PLC )
)%, φC (PLD ) is obviously equal to φC (PLC ). Meanwhile,
by 100(1 − φφCC (P
LD )
PLC is computed by taking into account link-cost only. Because only link-costs
are considered to compute PLC , φD (PLC ) is always greater than or equal to
(PLD )
φD (PLD ). If φD (PLC ) is decreased by 100(1 − φφD
)%, then φD (PLC ) =
D (PLC )
φD (PLD ). The following steps explain a process for obtaining new parameter.
Steps to calculate the N ew P arameter
1.
Compute two paths PLD and PLC
C (PLD )
¯ = φD (PLC )
2.
Compute C¯ = φn(P
and D
n(PLC )
LD )
3.
4.
5.
6.

Compute F −1

(PLC )
(PLD )
d
c
− φφCC (P
and zα/2
and F −1 32 − φφD
i.e., zα/2
LD )
D (PLC )
d √ SLD
¯ − z c √ SLC
Compute postLD = C¯ − zα/2
and postLC = D
α/2
3
2

n(PLD )

n(PLC )

where SLD and SLC are the sample standard deviation
Compute Cf ct(i,j) (c(i,j) ) = max{ 1, 1 + (c(i,j) − postLD ) } and
Df ct(i,j) (d(i,j) ) = max{ 1, 1 + (d(i,j) − postLC ) }
We obtain the new parameter Cf ct(i,j) (c(i,j) ) × Df ct(i,j) (d(i,j) ).

β
In order to obtain the percentile(zα/2
, β = d, c), we can use the cumulative
distribution function (CDF). Ideally, the CDF is a discrete function but we
assume that the CDF is a continuous function in convenience through out this

paper. Let the CDF be F (x) =

x
√1
−∞ 2π

e−

y2
2

dy. Then, the percentile is a

604

M. Kim, Y.-C. Bang, and H. Choo

d
solution of the following equation. F (zα/2
)−

F −1 ( 32

φC (PLC )
φC (PLD ) )

=
−
if 100(1 −
percentile we have calculated.
d
zα/2

1
2

= 1−

φC (PLC )
φC (PLD ) )%

φC (PLC )
φC (PLD )

which means

< 50%. Table 1 shows the

Table 1. The percentile
η = [ 100 ( 1 −

φC (PLC )
φC (PLD )

) ] % where [x] gives the integer closest to x.

zα/2 = 3.29 if η ≥ 50 and zα/2 = 0.00 if η = 0
η
49
42
35
28
21
14
7

zα/2
2.33
1.41
1.04
0.77
0.55
0.36
0.18

η
48
41
34
27
20
13
6

zα/2
2.05
1.34
0.99
0.74
0.52
0.33
0.15

η
47
40
33
26
19
12
5

zα/2
1.88
1.28
0.95
0.71
0.50
0.31
0.13

η
46
39
32
25
18
11
4

zα/2
1.75
1.23
0.92
0.67
0.47
0.28
0.10

η
45
38
31
24
17
10
3

d
c
(zα/2 is either zα/2
or zα/2
)

zα/2
1.65
1.18
0.88
0.64
0.44
0.25
0.08

η
44
37
30
23
16
9
2

zα/2
1.56
1.13
0.84
0.61
0.41
0.23
0.05

η
43
36
29
22
15
8
1

zα/2
1.48
1.08
0.81
0.58
0.39
0.20
0.03

Once the Cf ct(i,j) (c(i,j) ) and the Df ct(i,j) (d(i,j) ) are found, we compute
the value Cf ct(i,j) (c(i,j) ) × Df ct(i,j) (d(i,j) ) for each link of P . The best feasible
selection is the link with the lowest cost per delay on initial P . In other words,
the link with the highest 1/cost per delay could be selected. So then,
1
( Cf ct(i,j)
(c(i,j) ) )/Df ct(i,j) (d(i,j) ) = 1/( Cf ct(i,j) (c(i,j) ) × Df ct(i,j) (d(i,j) ) ) .
If the value of the formular is low, the performance should be poor. Therefore,
we use Dijkstra’s technique [1] with Cf ct(i,j) (c(i,j) ) × Df ct(i,j) (d(i,j) ).

4

Performance Evaluation

We compare our new parameter to only link-delays and only link-costs. Two performance measures - φC (P ) and φD (P ) - are combined our concern and investigated here. We now describe some numerical results with which we compare the
performance for the new parameter. The proposed one is implemented in C++.
We consider networks with number of nodes which is equal to 25, 50, 100, and
200. We generate 10 diﬀerent networks for each size given above. The random
networks used in our experiments are directed, symmetric, and connected, where
each node in networks has the probability of links (Pe ) equal to 0.3 [4]. Randomly selected source and destination nodes are picked uniformly. We simulate
1000 times (10 × 100 = 1000) for each n and Pe . Fig. 1 shows the average φC (P )
and φD (P ), where each path P is PLC , PLD , and PN ew . As a result, the proposed new parameter ascertains that φC (PLC ) ≤ φC (PN ew ) ≤ φC (PLD ) and
φD (PLD ) ≤ φD (PN ew ) ≤ φD (PLC ). For details on analyzing performance for
the new parameter, refer to Fig. 1 (d). The path cost φC (PLC ) = 3.04 is far superior, and φC (PLD ) = 13.51 is the worst. Likewise the path delay φD (PLD ) = 3.03

On Balancing Delay and Cost for Routing Paths

605

is far better, and φD (PLC ) = 13.53 is the highest. Let us consider path PN ew
which is measured by the probabilistic combination of cost and delay at the
5.92−3.04
× 100 = 27.5% between
same time. Because the φC (PN ew ) occupies 13.51−3.04
φC (PLC ) and φC (PLD ), φC (PN ew ) is somewhat expensive than φC (PLC ) but
becomes more superior than φC (PLD ). In the same manner, the φD (PN ew ) oc6.21−3.03
×100 = 30.3% between φD (PLD ) and φD (PLC ). In other words,
cupies 13.53−3.03
the new parameter takes into account both cost and delay at the same time.

Fig. 1. Performance comparison for each Pe and n

5

Conclusion

In this paper, we have formulated the new parameter for DCLC path problem,
which is known to be NP-hard [2]. Because the DCLC must consider together
cost and delay at the same time, PLC and PLD are unsuitable to the DCLC
problem. Hence the new parameter takes into consideration both cost and delay
at the same time. We would like to extend the new parameter to the weighted
parameter that can regulate as desirable φC (P ) and φD (P ).

References
1. D. Bertsekas and R. Gallager, Data Networks, 2nd ed. Englewood Cliﬀs, NJ:
Prentice-Hall, 1992.
2. M. Garey and D. Johnson, Computers and intractability: A Guide to the Theory
of NP-Completeness, New York: Freeman, 1979.

606

M. Kim, Y.-C. Bang, and H. Choo

3. D.S. Reeves and H.F. Salama, “A distributed algorithm for delay-constrained unicast routing,” IEEE/ACM Transac., vol. 8, pp. 239-250, April 2000.
4. A.S. Rodionov and H. Choo, “On Generating Random Network Structures: Trees,”
Springer-Verlag LNCS, vol. 2658, pp. 879-887, June 2003.
5. R. Widyono, “The Design and Evaluation of Routing Algorithms for Real-Time
Channels,” International Computer Science Institute, Univ. of California at Berkeley, Tech. Rep. ICSI TR-94-024, June 1994.

