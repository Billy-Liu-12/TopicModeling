Search of Weighted Subgraphs on Complex
Networks with Maximum Likelihood Methods
Marija Mitrovi´c1 and Bosiljka Tadi´c2
1

Institute of Physics, Belgrade, Serbia
Joˇzef Stefan Institute, Ljubljana, Slovenia
mitrovic@phy.bg.ac.yu,Bosiljka.Tadic@ijs.si
http://scl.phy.bg.ac.yu, http://www-f1.ijs.si/∼tadic
2

Abstract. Real-data networks often appear to have strong modularity, or network-of-networks structure, in which subgraphs of various size
and consistency occur. Finding the respective subgraph structure is of
great importance, in particular for understanding the dynamics on these
networks. Here we study modular networks using generalized method of
maximum likelihood. We ﬁrst demonstrate how the method works on
computer-generated networks with the subgraphs of controlled connection strengths and clustering. We then implement the algorithm which
is based on weights of links and show it’s eﬃciency in ﬁnding weighted
subgraphs on fully connected graph and on real-data network of yeast.
Keywords: modular networks, subgraphs, maximum likelihood method.

1

Introduction

Complex dynamical systems can be adequately represented by networks with a
diversity of structural and dynamical characteristics, [1], [2] and [3]. Often such
networks appear to have multiscale structure with subgraphs of diﬀerent sizes
and topological consistency. Some well known examples include gene modules
on genetic networks [4], social community structures [5], topological clusters
[6] or dynamical aggregation on the Internet, to mention only a few. It has
been understood that in the evolving networks some functional units may have
emerged as modules or communities, that can be topologically recognized by
better or tighter connections. Finding such substructures is therefore of great
importance primarily for understanding network’s evolution and function.
In recent years great attention has been devoted to the problem of community structure in social and other networks, where the community is topologically deﬁned as a subgraph of nodes with better connection among the members
compared with the connections between the subgraphs, [5] and [7]. Variety of algorithms have been developed and tested, a comparative analysis of many such
algorithms can be found in [5]. Mostly such algorithms are based on the theorem of maximal-ﬂow–minimal-cut [8], where naturally, maximum topological
ﬂow falls on the links between the communities. Recently a new approach was
proposed based on the maximum-likelihood method, [9]. In maximization likelihood method an assumed mixture model is ﬁt to a given data set. Assuming
M. Bubak et al. (Eds.): ICCS 2008, Part II, LNCS 5102, pp. 551–558, 2008.
c Springer-Verlag Berlin Heidelberg 2008

552

M. Mitrovi´c and B. Tadi´c

that the network nodes can be split into G groups, where group memberships
are unknown, then the expectation-maximization algorithm is used in order to
ﬁnd maximum of the likelihood that suites the model. As a result a set of probabilities that a node belongs to a certain group are obtained. The probabilities
corresponding to global maximum of the likelihood are expected to give the best
split of the network into given number of groups.
In complex dynamical networks, however, other types of substructures may occur, that are not necessarily related to “better connectivity” measure. Generally,
the substructures may be diﬀerentiable with respect certain functional (dynamical) constraints, such as limited path length (or cost), weighted subgraphs, or
subgraphs that are synchronizable at a given time scale. Search for such types of
substructures may require new algorithms adapted to the respective dynamical
constraints.
In this work we adapt the maximum-likelihood methods to study subgraphs
with weighted links in real and computer-generated networks. We ﬁrst introduce a new model to generate a network-of-networks with a controlled subgraph
structure and implement the algorithm, [9], to test its limits and ability to ﬁnd
the a priori known substructures. We then generalize the algorithm to incorporate the weights on the links and apply it to ﬁnd the weighted subgraphs on a
almost fully connected random graph with known weighted subgraphs and on a
real-data network of yeast gene-expression correlations.

2

Network of Networks: Growth Algorithm and Structure

We introduce an algorithm for network growth with a controlled modularity. As
a basis, we use the model with preferential attachment and preferential rewiring,
[10], which captures the statistical features of the World Wide Web. Two parameters α
˜ and α control the emergent structure of the Webgraph when the
average number of links per node M is ﬁxed. For instance, for M = 1: when
α
˜ < 1 the emergent structure is a scale-free clustered and correlated network, in
particular the case α
˜ = α = 1/4 corresponds to the properties measured in the
WWW [10]; when α
˜ = 1 a scale-free tree structure emerges with the exponents
depending on the parameter α. Here we generalize the model in a nontrivial
manner to permit development of distinct subnetworks or modules. The number of diﬀerent groups of nodes is controlled by additional parameter Po . Each
subgroup evolves according to the rules of Webgraph.
At each time step t we add a new node i and M new links. With probability
Po a new group is started. The added node is assigned current group index.
(First node belong to the ﬁrst group.) The group index plays a crucial role in
linking the node to the rest of the network. The links are created by attaching
the added node inside the group, with probability α,
˜ or else rewiring within the
entire network. The target node k is selected preferentially with respect to the
current situation in the group, which determines the linking probability pin (k, t).

Search of Weighted Subgraphs on Complex Networks

553

Similarly, the node which rewires the link n is selected according to its current
number of outgoing links, which determines the probability pout (n, t):
pin (k, t) =

M α + qin (k, t)
,
tM α + Lgk (t)

pout (n, t) =

M α + qout (n, t)
,
tM (α + 1)

(1)

where qin (k, t) and qout (n, t) are in- or out-degrees of respective nodes at time
step t, tM (α + 1) is number of links in whole network, while Lgk (t) is number of
link between nodes in a group of node k. It is assumed that qin (i, i)=qout (i, i) = 0.
Suggested rules of linking insure existence of modules in the network. Each group
has a central node, hub, in terms of in-degree connectivity, and a set of nodes
along which it is connected with the other groups. The number of groups G in
the network depends on number of nodes, N, and the parameter Po as G ∼ N Po .
Some emergent modular structures are shown in Fig. 1. For the purpose of this
work we only mention that the networks grown using the above rules are scalefree with both in-coming and out-going links distributed as (κ=”in” or ”out”):
P (qκ ) ∼ qκ−τκ .

(2)

The scaling exponents τin and τout vary with the parameters α and Po . In Fig. 2
we show cumulative distribution of in- and out-links in the case N=25000 nodes,
M=5, α
˜ = α = 0.9 and number of groups G = 6. The slopes are τin − 1 =
1.616 ± 0.006 and τout − 1 = 7.6 ± 0.3.

Pajek

Pajek

Fig. 1. Network of networks generated by the algorithm described above for N = 1000
nodes and diﬀerent combinations of control parameters α,α
˜ , Po and M . Diﬀerent colors
represent topological subgraphs as found by the maximum-likelihood method.

These networks with controlled modularity will be considered in the next Section to test the maximum-likelihood algorithm for ﬁnding subgraphs. In addition,
we will apply the method on a gene network, in which the modular structure is
not known. The network is based on the empirical data of gene expressions for
a set of 1216 cell-cycle genes of yeast measured at several points along the cellcycle, selected from [11]. The pairs of genes are connected with weighted links

554

M. Mitrovi´c and B. Tadi´c

according to their expression correlation coeﬃcient. In such network, for the
correlations exceeding a critical value W0c a percolation-like transition occurs
where functionally related clusters of genes join the giant cluster [12]. However,
below that point the network is too dense and separation of the modules becomes diﬃcult. The topological betweenness-centrality measures for both, nodes
and links in the gene network shown in Fig. 2 (right), exhibit broad distribution,
suggesting a nontrivial topology of the network.
10

104

0

in
out

10-1

103

-2

P(q)

P(u)

10

102

10-3
101

10-4

Nodes
Links

10-5
100

101

102

103

100
0
10

1

10

10

2

3

10

10

4

u

q

Fig. 2. (left) Cumulative distribution of in-coming and out-going links for grown modular network. (right) Distribution of betwenness-centrality for nodes and links in the
gene-expression network of Yeast.

3

Maximum Likelihood Methods for Weighted Graphs

The method is based on a mixture model and numerical technique known as
the expectation-maximization algorithm. We ﬁrst describe the basic idea for
unweighted networks, [9], and then generalize the method for weighted graphs.
3.1

Theoretical Background

A network of N nodes, directed or undirected, is represented mathematically
by an adjacency matrix A with N × N elements. The elements Aij as (1,0),
represent the presence/absence of a link between nodes. The idea is to construct
a mixture model network partitioned into G groups, where members of the groups
are similar in some sense and the numbers gi denote the group to which vertex
i belongs [9]. Group memberships are unknown, they are commonly referred as
”hidden” data. The basic idea is to vary parameters of a suitable mixture model
to ﬁnd the best ﬁt to the observed network.
The model parameters are: θri , deﬁned as the probability that a link from
some node in group r connects to node i, and πr , representing the probability
that a randomly chosen vertex falls in group r. The normalization conditions
πr = 1 ,
r

θri = 1 ,
i

(3)

Search of Weighted Subgraphs on Complex Networks

555

are required. The parameters can be estimated by the maximum likelihood criterion using expectation-maximization algorithm. In the present case the problem
reduces to maximization of the likelihood P r(A, g|π, θ) with respect to π and θ.
Using the factorization rule, we can write P r(A, g|π, θ) in the following form:
P r(A, g|π, θ) = P r(A|g, π, θ)P r(g|π, θ) ,

(4)

where
A

θgiijj ,

P r(A|g, π, θ) =

P r(g|π, θ) =

πgi .

ij

(5)

i

Combining Eqs. (4) and (5) we obtain
A

θgiij,j .

πgi

P r(A, g|π, θ) =
i

(6)

j

It is common to use the logarithm of likelihood instead of the likelihood itself [9]. In addition, averaging of the log-likelihood over distribution of group
memberships g is necessary with the distribution P r(g|A, π, θ), leading to
G

G

···

L=
g1

=

P r(g|A, π, θ)
gn

[lnπgi +
i

qir [lnπr +
ir

Aij lnθgi ,j ]

(7)

j

Aij lnθgi ,j ] ,
j

where qir = P r(gi = r|A, π, θ) represents the probability that node i belongs
to group r. Using again the factorization rule for P r(A, gi = r|π, θ) in the case
when A represents the missing data we ﬁnd the expression for qir
qir = P r(gi = r|A, π, θ) =

P r(A, gi = r|π, θ)
=
P r(A|π, θ)

πr
s

πs

A

j

θrjij
A

j

θsjij

.

(8)

Now we can use qir given by the Eq. (8) to evaluate the expected value of loglikelihood and to ﬁnd πr and θri which maximize it. The maximization can be
carried out analytically. Using the method of Lagrange multipliers to enforce the
normalization conditions in (3), we ﬁnd relations for the parameters πr and θri :
πr =

i qir

n

,

θri =

j

Aji qjr

j qout (j)qjr

.

(9)

In the numerical implementation, starting from an initial partitioning and iterating the Eqs. (8) and (9) towards convergence, we determine the modular
structure, which is deﬁned by quantities qir . In practice, the runtime to the
convergence depends on the number of nodes and number of groups, G.
In practical calculations, the clustering algorithm converges to one out of
many local maxima, which is sensitive to the initial conditions. Hence the choice

556

M. Mitrovi´c and B. Tadi´c

of initial values of the model parameters is a not trivial step. The obvious unbi1
1
0
= ,
ased choice of the initial values is the symmetric point with πr0 = and θri
c
N
which is consistent with normalization conditions for numbers π 0 and θ0 . Unfortunately, this represents a trivial ﬁxed point of the iterations. Instead, we ﬁnd
that the starting values that are perturbed randomly at small distance from the
ﬁxed point are better in terms of convergence of algorithm to right maxima of
expected value of log-likelihood. After initialization of the parameters, we com0
1
using Eq. (8) and then that πr1 and θri
according to Eq. (9), etc. After
pute qir
some number of iterative steps, the algorithm will converge to a local maximum
of the likelihood. In order to ﬁnd the global maximum, it is recommendable to
perform several runs with diﬀerent initial conditions.
We test the the MLM algorithm on the networks grown by the model rep˜
resented in Section 2, for a wide range values of parameters M , P0 , α and α.
As we expected, the algorithm works well on networks in which the modules
with respect to connectivity—most of the links are between vertices inside the
group—are well deﬁned, which is the case for large parameter α
˜ . The partitions
are shown in Fig. 1: Clusters of the network found by the algorithm corresponds
perfectly to the division derived from the growth. Group membership suggested
by the algorithm and the original one are the same for the 98% of the nodes
in the network. The algorithm even ﬁnds the “connector” nodes, that play a
special role in each group. However, it is less eﬃcient for the networks with
large density of links between groups, as for instance for networks with α
˜ ≈ 0.6
or lower. Some other observations: Number and size of diﬀerent groups do not
aﬀect the eﬃciency of the algorithm. Size of the network and sparseness of the
network aﬀect the convergence time. As a weak point, the number of groups G
is an input parameter.
3.2

Generalization of the Algorithm for Weighted Networks

The topological structure of networks, usually expressed by the presence or absence of links, can be considerably altered when links or nodes aquire diﬀerent
weights. Here we modify the algorithm presented in Section 3.1 in order to take
into account weighted networks with modular structure. The main idea is based
on the fact that a weighed link between a pair of nodes on the network can
be considered as multiple links between that pair of nodes. Then a straightforward generalization of the MLM is to apply the mixture model and expectationmaximization algorithm described above to the multigraph constructed with the
appropriate number of links between pairs of nodes. The quantities to be considered are: Wij measured matrix of weights, gi missing data, and model parameters
{πr ,θri }. Following the same steps as above leads to the following expressions
which are relevant for the algorithm:
qir =

πr
s

πs

W

j

θrj ij
W

j

θsj ij

,

(10)

Search of Weighted Subgraphs on Complex Networks

πr =

i qir

n

,

θri =

j

Wji qjr
j lj qjr

,

557

(11)

where lj = i Wji is the summation over all weights of links emanating from
the node j. The implementation of the algorithm and the choice of initial values
of parameters are illustrated in previous chapter. Although the formal analogy
between the expressions in Eqs. (9) and (11) and also between Eqs. (8) and (10)
occurs with Wij → Aij , the important diﬀerence occurs in the quantity lj in Eq.
(11), which is a measure of strength of node rather than its connectivity. Therefore, within the weighted algorithm, nodes of same strength appear to belong
to the same community. The weighted communities may have important eﬀects
in the dynamics, as for instance, the clusters of nodes with same strength tend
to synchronize at the same time scale.Such properties of the weighted networks
remain elusive for the classical community structure analysis based on max-min
theorem, mentioned in the introduction.
In the remaining part of the Section we apply the algorithm to two weighted
networks: ﬁrst we demonstrate how it ﬁnds weighted subgraphs on a computer
generated random graph with large density of links, and then on a gene expression network of yeast generated from the empirical expression data. The results
are given in Fig. 3. A random graph of N = 100 nodes with a link between each
pair of nodes occurring with probability p = 0.5 is generated. In this homogeneously connected graph we create G = 4 groups and assign diﬀerent weights
to links in each group of nodes. In the network of yeast gene expressions, as
described in Section 2, the weights of links appear through the correlation coeﬃcient of the gene expressions. As the Fig. 3 shows, the algorithm retrieves
accurately four a-priori known weighted groups of nodes on the random graph.
Similarly, in the case of gene networks, we tried several partitiones with the

Pajek

Fig. 3. Weighted clusters found by the extended ML algorithm in the correlation network of gene expressions of yeast (left), and in the weighted random graph (right)

558

M. Mitrovi´c and B. Tadi´c

potentially diﬀerent number of groups. One such partition with G = 5 groups is
shown in Fig. 3. Each weighted group on the gene network actually represents a
set of genes which are closely co-expressed during the entire cell cycle.

4

Conclusions

We have extended the maximum-likelihood-method of community analysis to
incorporate multigraphs (wMLM) and analysed several types of networks with
mesoscopic inhomogeneity. Our results show that the extended wMLM can be
eﬃciently applied to search for variety of subgraphs from a clear topological
inhomogeneity with network-of-networks structure, on one end, to hidden subgraphs of node with the same strength on the other.
Acknowledgments. Research supported in part by national projects P1-0044
(Slovenia) and OI141035 (Serbia), bilateral project BI-RS/08-09-047 and COSTSTSM-P10-02987 mission. The numerical results were obtained on the AEGIS
e-Infrastructure, supported in part by EU FP6 projects EGEE-II, SEE-GRID-2,
and CX-CMCS.

References
1. Dorogovtsev, S.N., Mendes, J.F.F.: Evolution of Networks: From Biology to the
Internet and the WWW, ch. 27, p. 543. Oxford University Press, Oxford (2003)
2. Boccaleti, S., Latora, V., et al.: Complex Networks: Structure and Dynamics.
Physics Reports 424, 175–308 (2007)
3. Tadi´c, B., Rodgers, G.J., Thurner, S.: Transport on Complex Networks: Flow,
Jamming & Optimization. Int. J. Bifurcation and Chaos 17, 2363–2385 (2007)
4. Ravasz, E., Somera, A., Mongru, D.A., Oltvai, Z.N., Barab´
asi, A.L.: Hierarchical
Organization of Modularity in Metabolic Networks. Science 297, 1551 (2002)
5. Danon, L., Diaz-Guilera, A., Arenas, A.: Eﬀect of size heterogeneity on community identiﬁcation in complex networks. J. Stat. Mechanics: Theory & Experiment,
P11010 (2006)
6. Flake, G.W., Lawrence, S.R., Giles, C.L., Coetzee, F.M.: Self-organization and
identiﬁcation of Web communities. IEEE Computer 35, 66–71 (2002)
7. Newman, M.E.J., Girvan, M.: Finding and evaluating community structure in networks. Phys. Rev. E 69, 026113 (2004)
8. Cormen, T.H., Leiserson, C.E., Rivest, R.L., Stein, C.: Introduction to Algorithms,
2nd edn., ch. 26, pp. 643–700. MIT Press and McGraw-Hil (2001)
9. Newman, M.E.J., Leicht, E.A.: Mixture models and exploratory analysis in networks. PNAS 104, 9564 (2007)
10. Tadi´c, B.: Dynamics of directed graphs: the world-wide Web. Physica A 293, 273–
284 (2001)
11. Cho, R.J., et.,, al.,: A Genome-Wide Transcriptional Analysis of the Mitotic Cell Cycle. Molecular Cell 2, 65–73 (1998), http://arep.med.harvard.
edu/cgi-bin/ExpressDByeas
ˇ
12. Zivkovic,
J., Tadi´c, B., Wick, N., Thurner, S.: Statistical Indicators of Collective
Behavior and Functional Clusters in Gene Expression Network of Yeast. European
Physical Journal B 50, 255 (2006)

