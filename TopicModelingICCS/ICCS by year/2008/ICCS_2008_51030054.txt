DDDAS Predictions for Water Spills
Craig C. Douglas1,4 , Paul Dostert2 , Yalchin Efendiev3 , Richard E. Ewing3 ,
Deng Li1 , and Robert A. Lodder1
1

3

University of Kentucky, Lexington, KY 40506-0046
2
University of Arizona, Tucson, AZ 85721-0089
Texas A & M University, College Station, TX 77843-3368
4
Yale University, New Haven, CT 06520-8285, USA
douglas-craig@cs.yale.edu

Abstract. Time based observations are the linchpin of improving predictions in any dynamic data driven application systems. Our predictions
are based on solutions to diﬀerential equation models with unknown initial conditions and source terms. In this paper we want to simulate a
waste spill by a water body, such as near an aquifer or in a river or bay.
We employ sensors that can determine the contaminant spill location,
where it is at a given time, and where it will go. We estimate initial
conditions and source terms using better and new techniques, which improves predictions for a variety of data-driven models.

1

Introduction

In this paper, our goal is to predict contaminant transport, where the contamination is, where the contaminant is going to go, and to monitor the environmental
impact of the spill for contaminants in near coastal areas. Sensors measure the
contaminant concentration at certain locations. Here, we discuss the quality of
the predictions when the initial conditions and the source terms are updated as
data is injected.
From a modeling viewpoint, one of the objectives in dynamic data driven application systems (DDDAS) is to improve the predictions as new data is obtained
[1]. Data represents the information at diﬀerent length scales and the precision
can vary enormously. Numerous issues are involved in DDDAS, many of which
are described in [2,3,4,5,6].
We investigate contaminant transport driven by convection and diﬀusion.
When new sensor based data is obtained, the initial conditions and source terms
are updated. The initial conditions are constructed in a ﬁnite dimensional space.
Measurements often contain errors and uncertainties. We have studied elsewhere
approaches where these uncertainties can be taken into account.
The ﬁrst set of measurements allows recovery of an approximation to the initial
conditions. An objective function is used to update initial data in the simulation.
The mesh of sensor locations is quite coarse in comparison to the solution’s mesh,
leading to an ill-posed problem. Prior information about the initial data lets us
regularize the problem and then update the initial conditions. We use a penalty
M. Bubak et al. (Eds.): ICCS 2008, Part III, LNCS 5103, pp. 54–63, 2008.
c Springer-Verlag Berlin Heidelberg 2008

DDDAS Predictions for Water Spills

55

method whose constants depend on time and can be associated with the relative
errors in the sensor measurements.
We also update the source terms, which is quite important when there is still a
source of the contamination present in the ongoing measurements. We construct
an objective functional that lets us perform an update on the source term in a
ﬁnite dimensional space.
A number of numerical examples are presented that show that the update
process is quite important. Using the correct choice of penalty terms demonstratively improves the predictions.

2

Contaminant Concentration Model

Let C be the concentration of a contaminant and assume that the velocity v,
obtained from shallow water equations, is known. We assume that the sensors
measure the concentration at some known locations. Note that the velocity ﬁeld
and the diﬀusion coeﬃcients are unknown and need to be estimated in the most
general case.
Contaminant transport is modeled using the convection-diﬀusion equation,
∂C
+ v · ∇C − ∇ · (D∇C) = S(x, t) in Ω.
∂t
Given measured data, we estimate the initial condition C(x, 0) = C 0 (x) and the
source term S(x, t).

3

Reconstructing Initial Conditions

We begin by obtaining initial data based on sensor readings and forward simulations assuming both a rectangular subdomain Ωc ⊂ Ω and that our initial
condition is in a ﬁnite dimensional function space whose support is contained
in Ωc . This ﬁnite dimensional space on Ωc is equipped with a set of linearly
c
independent functions {C˜i0 (x)}N
i=1 . For some α = (α1 , α2 , · · · , αNc ) our initial
condition in this space is then represented by
Nc

αi C˜i0 (x).

C˜ 0 (x) =
i=1

We can assume that C˜i (x, t) is the solution of our equation using the initial
condition C˜i0 (x) leading to a solution of the form,
Nc

˜ t) =
C(x,

αi C˜i (x, t).
i=1

Running the forward simulation code for each initial condition C˜i0 (x) lets us
ﬁnd C˜i (x, t). Let Nc be the number of initial conditions, Ns the number of output

56

C.C. Douglas et al.

concentration locations, and Nt the number of time steps where concentrations
Nc ,Ns ,Nt
are sampled. We save values C˜i (xj , tk )
. The problem is underdeteri=1,j=1,k=1

mined for a single set of sensor measurments since Ns < Nc normally. However,
Ns Nt >> Nc since data from these sensor locations are collected many times.
By using all of the given sensor values at each of the recorded times, we attempt
to solve the least squares system to recover the initial conditions and improve
the overall predictions made by the model.
If we devise a method so that just a simple least squares problem is solved
for each new set of sensor data, then we can solve a much smaller least sqaures
problem than in the case when all of the given data is used at once. Further,
should not enough data be incorporated at once, solving smaller problems is
faster than solving the entire problem over again. We want a model that is
improved using smaller quantities of data at any given time.
Once we have collected the data from our forward simulations, the αi need
˜ t) ≈ C(x, t), so we
to be calculated. We want to ﬁnd the best α such that C(x,
minimize the diﬀerence between our simulated concentration and the values at
the sensors. Assume there are Ns < Nc sensors in Ω, which leads to minimizing
the following objective function:
Ns

2

Nc

αi C˜i (xj , t) − γj (t)

F (α) =
j=1

i=1

Nc
2

κi (αi − βi ) ,

+
i=1

where κ are penalty coeﬃcients for an a priori vector β, which will be updated
during the simulation to achieve higher accuracy. The minimization of this function gives rise to the linear system Aα = R, where for m, n = 1, · · · , Nc , and
Amn =

Ns
j=1

Rm =

C˜m (xj , t) C˜n (xj , t) + δmn κm ,
Ns
j=1

and

C˜m (xj , t) γj (t) + κm βm .

This linear system is clearly symmetric, positive deﬁnite and is solved using a
direct inversion since it is such a small matrix.
Nt
we ﬁrst solve the linear
Since we have C˜i (xj , t) at given time steps {tk }k=1
1
system Aα = R, where A and R are evaluated at time t1 and α1 refers to the
values of αi at t1 . Initially, we begin with a given value of β whose value can be
adapted, though generally we initially choose β = 0. Once α1 is determined, β
is replaqced with α1 and we solve the linear system again to determine α2 . We
continue this process until we get αNt , which is the most accurate reconstruction
of the initial data.

4

Reconstructing the Source Term

Consider the situation when the source term S is given for a particular ﬁxed
time interval at a particular location. Assume there is no initial concentration
and all of the concentration in the domain comes from the source term so that

DDDAS Predictions for Water Spills

57

C(x, 0) = 0 on the whole domain. Now consider a subdomain ΩC where the
source term is deﬁned. Now assume that our region Ω is discretized with N
grid points and that the subdomain ΩC is discretized with NC grid points. On
C
th
ΩC assume that there are basis functions {δk }N
k=1 which are nonzero on the k
NC

part of the subdomain and zero otherwise. Assume that S ≈ S˜ =

αk δk (x, t)
k=1

where S = S˜ = δk (x, t) = 0 for some t > tˆ, i.e., the basis functions are nonzero
for the same time interval as S and the source is zero after an initial time period.
This is the case when there is an immediate spill that takes a short period of
˜ our equation
time for all of the contaminant to leak into the water. Using this S,
becomes
NC
∂ C˜
− L C˜ = S˜ =
αk δk (x, t)
∂t
k=1

since S˜ is a linear combination of δk . We solve
∂ψk
− L (ψk ) = δk (x, t)
∂t
N

c
for
for ψk and each k. We denote the solution to this equation as {ψk (x, t)}k=1
each k. Under these assumptions, the solution to

∂C (x, t)
− L (C (x, t)) = S (x, t) , C (x, 0) = 0 x ∈ Ω
∂t
is approximated by
NC

C (x, t) ≈ C˜ (x, t) =

αk ψk (x, t) .
k=1

Once again, assume that there are Ns < Nc sensors spread within the domain.
Choose a source term S˜ and run the forward problem for this particular source
while recording the values of the concentration at each sensor location. These
Ns
. Once this equation has have solved for each of
values are given by {γj (t)}j=1
the source terms, αk can be reconstructed by solving
Ns

2

Nc

αk ψk (x, t) − γk (t)

F (α) =
j=1

k=1

Nc

κk (αk − βk )2 ,

+
k=1

where κ are penalty coeﬃcients for an a vector β. Minimize this function and
solve the corresponding linear system. Note that this is the same exact minimization that was needed for the initial condition recovery problem.
4.1

Solving the Source Term and Initial Condition Problem

We split the solution into two parts in order to predict contaminant transport
in the presence of unknown initial conditions and source terms. The ﬁrst part is

58

C.C. Douglas et al.

due to unknown initial condition and the second one is due to unknown source
terms.
We brieﬂy repeat the situation when the source term S is zero, where we
assumed there is an initial concentration and solved
∂C
− L (C) = 0, C (x, 0) = C 0 (x) .
∂t
Consider a discretized subdomain ΩC where the initial condition is nonzero and
ND
assume there is a linearly independent set of functions deﬁned by {ϕi }i=1
on the
ND

subdomain given by C 0 (x) ≈ C˜ 0 (x) =

λi ϕ0i (x). Now solve
i=1

∂ϕi
− L (ϕi ) = 0, ϕi (x, 0) = ϕ0i (x)
∂t
for each i. The solution to this equation for each i is given by ϕi (x, t). We
∂C
approximate the solution of
− L (C) = 0, C (x, 0) = C 0 (x) by C˜ (x, t) =
∂t
ND

λi ϕi (x, t).
i=1

For the second step, we solve the problem for ψ and each k with an unknown
source term,
∂ψ
− L (ψ) = δk (x) , ψ (x, 0) = 0
∂t
Nc
and denote the solution for eazch k as {ψk (x, t)}k=1
. Hence, the solution to our
original problem with both the source term and initial condition is given by
ND

C˜ (x, t) =

Nc

λi ϕi (x, t) +
i=1

αk ψk (x, t) .
k=1

We need to verify that this is really the solution. Compute
ND

L C˜ =

Nc

λi L (ϕi (x, t)) +
i=1

k=1

∂ ˜
C (x, t) =
∂t

ND

λi
i=1

∂
αk L (ψk (x, t)) and
∂t

∂
ϕi (x, t) +
∂t

Nc

k=1

∂
αk ψk (x, t) .
∂t

So
∂ C˜
− L C˜ =
∂t

ND

λi
i=1
Nc

k=1
Nc

=
k=1

∂
ϕi (x, t) − L (ϕi (x, t)) +
∂t

∂
αk [ψk (x, t) − L (ψk (x, t))]
∂t
∂
αk [ψk (x, t) − L (ψk (x, t))] =
∂t

Nc

αk δk (x) .
k=1

DDDAS Predictions for Water Spills
ND
i=1

Similarly, C˜ (x, 0) =

59

λi ϕi (x, 0) = C˜ 0 (x). Hence, we have veriﬁed that
ND

C˜ (x, t) =

Nc

λi ϕi (x, t) +
i=1

αk ψk (x, t)
k=1

really solves our original equation with both an initial condition and source term.
4.2

Reconstruction of Initial Condition and Source Term

After running the forward simulation for each initial basis function and source
basis function, we minimize
⎡
⎤
2
Ns

F (α, λ) =

⎣

j=1

Nc

ND

λk ϕk (xj , t) − γj (t)

αk ψk (xj , t) +
k=1

⎦+

k=1
Nc

κ
˜ k αk − β˜k

(1)
ND

2

κ
ˆ k λk − βˆk

+

k=1

2

.

k=1

For N = Nc + Nd , μ = [α1 , · · · , αNc , λ1 , · · · , λND ], η(x, t) = [ψ1 , · · · , ψNc ,
ϕ1 , · · · , ϕND ], β = β˜1 , · · · , β˜Nc , βˆ1 , · · · , βˆND , κ = [˜
˜ Nc , κ
ˆ1, · · · , κ
ˆND ],
κ1 , · · · , κ
we minimize
⎡
⎤
2
Ns

F (μ) =
j=1

⎣

N

μk ηk (xj , t) − γj (t)

N

⎦+

k=1

2

κk (μk − βk ) .

(2)

k=1

This is the same minimization that we had previously, which leads to solving a
least squares problem of the form Aμ = R, where
N

Amn =

N

ηm (xj , t) ηn (xj , t) + δmn κm and Rm =
j=1

ηm (xj , t) γj (t) + κm βm .
j=1
N

t
Sensor values are recorded only at discrete time steps t = {tj }j=1
. μ is ﬁrst
estimated using the sensor values at t = t1 . Then each successive set of sensor
values is used to improve the estimate of μ.

5

Numerical Results

We have performed extensive numerical studies for initial condition and source
term estimation [7]. The numerical results convincingly demonstrate that the
predictions can be improved by updating initial conditions and source terms.
Each problem has commonality:

60

C.C. Douglas et al.

– An initial condition is deﬁned on a domain of [0, 1] × [0, 1].
– Sensor data is recorded at given sensor locations and times and is used to
reconstruct the initial condition.
– Biquadratic ﬁnite elements are used in both the forward simulation and the
reconstruction.
– For our initial condition expansion
N

C n (x) =

cni ϕi (x).
i=1

We assume ϕi are either piecewise constants or bilinears deﬁned on a given
subdomain with its own grid (i.e., there are two diﬀerent grids): a large (ﬁne)
grid where the forward simulation is run and a small (coarse) grid deﬁned
only on a given subdomain where we are attempting a reconstruction.
– All velocities are [2, 2] on each cell. Thus our ﬂow is from the lower left corner
to the upper right corner of the 2D grid for each problem.
– We sample sensor data every 0.05 seconds for 1.0 seconds at the following
ﬁve locations: (.5, .5), (.25, .25), (.25, .75), (.75, .25), and (.75, .75).
5.1

Reconstruction Using Piecewise Constants

We attempt to reconstruct a constant initial condition with support on [0, .2] ×
[0, .2]. We choose an underlying grid deﬁned only on a subregion where we deﬁne
the basis functions used in the reconstruction.
First, let this grid be exactly where there is support for the function. For
example, if we have a 2 × 2 grid, then we deﬁne 4 piecewise constants on [0, .2] ×
[0, .2]. Hence, support would be on the following four subdomains: [0, .1] × [0, .1],
[.1, .2] × [0, .1], [0, .1] × [.1, .2], and [.1, .2] × [.1, .2]. The region is divided similarly
for diﬀerent sized grids.
Second, let the subdomain be larger than the support of the initial condition,
e.g., choose [0, .4] × [0, .4] as the subdomain. Hence, the “eﬀective” area of the
basis functions is reduced by a factor of 4 each.
Choose a 2 × 2 subgrid for the basis functions on [0, .2] × [0, .2] so that there
are only 4 basis functions in the reconstruction. As can be seen in Fig. 1, the
reconstructed initial condition are quite good: the initial condition reconstruction
only needed two sets of sensor measurements.
Using the same strategy for dividing the domain up into a small number of
equal parts we ﬁnd slightly worse results for larger grids. This seems natural
considering that we are using the same amount of information, but we are attempting to reconstruct more functions. Clearly there should be larger errors as
the number of functions is increased unless we add more sensor data. Experiments show that this type of folklore is true.
Consider a case with 9 sensor locations instead of 5: (.25, .25), (.25, .5),
(.25, .75), (.5, .25), (.5, .5), (.5, .75), (.75, .25), (.75, .5), and (.75, .75). We use

DDDAS Predictions for Water Spills

61

Fig. 1. Five sensors case

bilinears with a 2 × 2 grid so that there are 16 basis functions instead of 4.
The accuracy is far higher than when we used the same parameters with only 5
sensors, as can be seen in Fig. 2.
Consider a case with just 2 sensor locations instead of 5: (.5, .5) and (.25, .5).
The accuracy is far lower than when we used the same parameters with only 5
sensors, as can be seen in Fig. 3.

62

C.C. Douglas et al.

Fig. 2. Nine sensors case

Fig. 3. Two sensors case

For future work, we need to test the proposed methods for numerous other
initial conditions and source terms update conditions.
Acknowledgements. This research was supported in part by NSF grants EIA0219627, EIA-0218229, CNS-0540178, and CNS-0540136.

DDDAS Predictions for Water Spills

63

References
1. Darema, F.: Introduction to the ICCS 2007 Workshop on Dynamic Data Driven
Applications Systems. In: Shi, Y., van Albada, G.D., Dongarra, J., Sloot, P.M.A.
(eds.) ICCS 2007. LNCS, vol. 4487, pp. 955–962. Springer, Heidelberg (2007)
2. Dostert, P.: Uncertainty Quantiﬁcation Using Multiscale Methods for Porous Media
Flows. PhD thesis, Texas A & M University, College Station, TX (December 2007)
3. Douglas, C., Cole, M., Dostert, P., Efendiev, Y., Ewing, R., Haase, G., Hatcher, J.,
Iskandarani, M., Johnson, C., Lodder, R.: Dynamic Contaminant Identiﬁcation in
Water. In: Alexandrov, V.N., van Albada, G.D., Sloot, P.M.A., Dongarra, J. (eds.)
ICCS 2006. LNCS, vol. 3993, pp. 393–400. Springer, Heidelberg (2006)
4. Douglas, C., Cole, M., Dostert, P., Efendiev, Y., Ewing, R., Haase, G., Hatcher,
J., Iskandarani, M., Johnson, C., Lodder, R.: Dynamically identifying and tracking
contaminants in water bodies. In: Shi, Y., van Albada, G.D., Dongarra, J., Sloot,
P.M.A. (eds.) ICCS 2007. LNCS, vol. 4487, pp. 1002–1009. Springer, Heidelberg
(2007)
5. Douglas, C., Efendiev, Y., Ewing, R., Ginting, V., Lazarov, R., Cole, M., Jones,
G., Johnson, C.: Multiscale interpolation, backward in time error analysis for
data-driven contaminant simulation. In: Sunderam, V.S., van Albada, G.D., Sloot,
P.M.A., Dongarra, J. (eds.) ICCS 2005. LNCS, vol. 3515, pp. 640–6470. Springer,
Heidelberg (2005)
6. Douglas, C., Efendiev, Y., Ewing, R., Ginting, V., Lazarov, R.: Dynamic data driven
simulations in stochastic environments. Computing 77, 321–332 (2006)
7. Dostert, P.: http://math.arizona.edu/∼ dostert/dddasweb (last visited 2/1/2008)

