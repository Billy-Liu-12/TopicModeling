Similarity Search Algorithm for Efficient Sub-trajectory
Matching in Moving Databases
Eun-Cheon Lim and Choon-Bo Shim*
Division of Information & Communication Engineering, Sunchon National University,
Suncheon, 540-742, South Korea
{eclim, cbsim}@sunchon.ac.kr

Abstract. Similarity measure scheme on moving objects has become a topic of
increasing in the area of moving databases. In this paper, we propose a new
similarity search algorithm for efficient sub-trajectory matching. For measuring
similarity between two sub-trajectories, we propose a new v(variable)-warping
distance algorithm which enhances the existing time warping distance algorithm
by permitting up to v replications for an arbitrary motion of a query trajectory.
Our v-warping distance algorithm provides an approximate matching between
two trajectories as well as an exact matching between them. Based on our vwarping distance algorithm, we also present a similarity measure scheme for the
single trajectory in moving databases. Finally, we show that our scheme based
on the v-warping distance achieves much better performance than other
conventional schemes, such as Li's one (no-warping) and Shan's one (infinitewarping) in terms of precision and recall measures.

1 Introduction
The most striking difference between still images and videos stems from movement
and variations. Retrieving moving objects, which requires both spatial and temporal
knowledge, is part of content-based retrieval on moving databases. Typical
applications are : automated surveillance systems, moving object monitoring, road
traffic monitoring, video on demand etc. Modeling and similarity measure schemes
based on moving objects has received some research attention recently [1-2], but it is
certainly in its infancy. Most research in this area focuses on tracking the movement
of a moving object, i.e., the trajectory of an object over a period of time, which is
certainly very important.
In this paper, we propose a new similarity search algorithm for efficient subtrajectory matching. For measuring similarity between two sub-trajectories, we
propose a new v(variable)-warping distance algorithm which enhances the existing
time warping distance algorithm by permitting up to v replications for an arbitrary
motion of a query trajectory. Our v-warping distance algorithm provides an
approximate matching between two trajectories as well as an exact matching between
them. Especially in case of a large amount of moving objects, the approximate
*

Corresponding author.

Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 821–828, 2007.
© Springer-Verlag Berlin Heidelberg 2007

822

E.-C. Lim and C.-B. Shim

matching can improve the performance of retrieval on moving objects' trajectories,
compared with the exact matching. Based on our v-warping distance algorithm, we
also present a similarity measure scheme for a moving object’s trajectory in moving
databases. Finally, we show that our scheme based on proposed v-warping distance
achieves much better performance than other conventional schemes, such as Li's one
(no-warping) and Shan's one (infinite-warping) in terms of precision and recall
measures.

2 Related Work
There have been two main researches on retrieval based on similar sub-trajectory by
measuring the similarity between a given query trajectory and data trajectories, i.e.,
Li's scheme and Shan's scheme. First, Li et al. [2] represented the trajectory of a
moving object as eight directions, such as North(NT), Northwest(NW), Northeast(NE),
West(WT), Southwest(SW), East(ET), Southeast(SE), and Southwest(SW). They
represented as (Si, di, Ii) the trajectory of a moving object A over a given time interval
Ii where Si is the displacement of A and di is a direction. For a set of time interval <I1,
I2, …, In>, the trajectories of A can be represented as a list of motions, like <(S1, d1, I1)
, (S2, d2, I2), . . . , (Sn, dn, In)>. Based on the representation for moving objects'
trajectories, they present a similarity measures to computes the similarity of spatiotemporal relationships between two moving object. Let {M1, M2, …, Mm} (m≥1) be
the trajectory of moving object A, {N1, N2, …, Nn} be the trajectory of moving object
B, and m≤n. The similarity measure between the trajectory of object A and that of
object B, TrajSim(A, B), is computed by using the similarity distances of directional
relations as follows. Here, minDiff(A, B) and maxDiff(A, B) are the smallest distance
between A and B and the largest distance, respectively.

TrajSim ( A, B ) =

max Diff ( A, B ) − min Diff ( A, B )
max Diff ( A, B)

(∀j,0 ≤ j ≤ n − m)

Secondly, Shan and Lee [3] represented the trajectory of a moving object as a
sequence of segments, each being expressed as the slope with real angle ranging from
0 to 360 degree for content-based retrieval. They also proposed two similarity
measure algorithms, OCM (Optimal Consecutive Mapping) and OCMR (Optimal
Consecutive Mapping with Replication), which can measure similarity between query
trajectory and data trajectory. The OCM algorithm that supports exact matching
measures the similarity for one-to-one segment mapping between query trajectory and
data trajectory. Meanwhile, The OCMR algorithm supports approximation matching.
In order to measure the similarity, each motion of query trajectory can be permitted to
map with more than one motions of data trajectory.

3 Proposed Scheme Based on v-Warping Distance Algorithm
We first present three considerations for supporting efficient similar sub-trajectory
retrieval on moving object’s trajectory.

Similarity Search Algorithm for Efficient Sub-trajectory Matching

1.

2.

3.

823

The existing time warping transformation [4-5] used for a similar subsequence matching in sequence databases can allow the infinitive
replication of a data sequence as well as a query sequence. However, for
similar sub-trajectory retrieval in moving databases, it is necessary to allow
the replication of only a query trajectory.
The time warping transformation for a similar sub-sequence matching can
allow the infinitive replication of an arbitrary motion. However, for the
similar sub-trajectory retrieval, it is necessary to support the replication of
up to the variable dynamic number (v) of motions, so called v-warping
distance.
For modeling motions being composed of the trajectory of a moving object,
it is necessary to support multiple properties including angle, distance, and
time, instead of the single property of angle.

The consideration 1 is generally needed for supporting an approximation matching
from similar sub-trajectory retrieval and the considerations 2 and 3 are needed for
improving the effectiveness of the approximation matching. In addition, the
considerations 2 and 3 are very sensitive, depending on application areas. The similar
subsequence matching approach which is used for the existing time warping
transformation does not satisfy all of the above three considerations. The reason is
why the characteristic of data used in sequence database is different from that of
trajectory data of moving objects in moving databases. Generally, the sequence data
has a detailed and elaborate feature and the number of elements consisting of a
sequence reaches scores or hundreds. On the other hand, the trajectory data of moving
objects in moving databases are composed of motions over a time interval and the
number of motions consisting of a trajectory is less than scores. Meanwhile, the
Shan's OCMR scheme can satisfy the considerations 1, but it does not satisfy the
considerations 2 and 3.
Therefore, we propose a new dynamic v-warping distance algorithm which can
support an approximation matching and satisfy the above three considerations for
similar sub-trajectory retrieval. In order to satisfy the consideration 3, we generally
define the trajectory of moving objects as a collection of consecutive motions
consisting of n-dimensional properties.
Definition 1. The trajectory of moving object S is defined as a set of consecutive
motions, S= (s[1], s[2], ..., s[|S|]), where each motion s[i] is composed of ndimensional properties as follows:
s[i] = (s[i, 1], s[i, 2], …, s[i, n])
For measuring a similarity between two trajectories, we define a v-warping distance
as follows, which is newly made by applying the concept of time warping distance[45] used for time-series databases to the trajectory data of moving objects in moving
databases.
Definition 2. Given two trajectory of moving objects S and Q, the v-warping distance
Dvw is defined recursively as follows:
Dvw(0, 0) = 0, Dvw(S, 0) = Dvw(0, Q) = ∞
Dvw(S, Q) = Dbase(S[1], Q[1])+min({Dvw((S[2+i:-], Q), 0≤i≤v), Dvw(S[2:-], Q[2:-])})
Dbase(a, b) = ddf(a, b)

824

E.-C. Lim and C.-B. Shim

Our v-warping distance algorithm is shown in Figure 1. It calculates a v-warping
distance between a given query trajectory Q and a data trajectory S by permitting up
to v(variable) replications for an arbitrary motion of a query trajectory Q. When the
motions of a data trajectory and a query trajectory are represented by rows and
columns in the cumulative table respectively, our a v-warping distance algorithm
finds a minimum distance starting from the first column of the first row within the last
column of the last row by replicating an arbitrary motion of a query trajectory up to v
times. In addition, since a motion of a trajectory is modeled as both angle property
and distance property, our algorithm measures a similarity between a data trajectory S
and a query trajectory Q by considering both properties.
int v-warping_distance(S, Q, v)
{
Input:
S[]: Data Trajectory;
Q[]: Query Trajectory;
v: the variable number of warping(replication);
Output:
vw_dist:minimum distance acquired using v-warping;
vwTbl[MAXSIZE];
// v-warping table;
for i=0 to |S|-1 do
for j=0 to |Q|-1 do
vwTbl[j+i*|Q|] = 999.0f;
for i=0 to |S|-|Q| do { // make v-warping table
for n=0 to |Q|-1 do {
y_p = i+n; x_p = n;
vwTbl[x_p+(y_p*|Q|)] = ddf(S[y_p],Q[x_p]);
} // end for n
for j=0 to |Q|-1 do {
for m=0 to v-1 do {
for n=0 to |Q|-1 do {
y_p = 1 + I + (j*v) + m + n;
x_p = n;
if((y_p>=|S|)||(y_p>x_p+(|S|-|Q|))) break;
if(j == n)
vwTbl[x_p+(y_p*|Q|)]=vwTbl[x_p+((y_p-1)*|Q|)] +
ddf(S[y_p],Q[x_p]);
else
vwTbl[x_p+(y_p*|Q|)]=ddf(S[y_p],Q[x_p])+ min(vwTbl[x_p+((y_p-1)*|Q|)],
vwTbl[(x_p-1)+((y_p-1)*|Q|)]);
} // end for n
} // end for m
} // end for j
} // end for i
vw_dist = 999.0f; // initialize
for i=0 to |S|-1 do { // find the minimum v-warping dist.
if(vw_dist > vwTbl[(|Q|-1)+(i*|Q|)]) {
vw_dist = vwTbl[(|Q|-1)+(i*|Q|)];
y = i; x = |Q|;
}
}
return vw_dist;
}

Fig. 1. Dynamic v-warping distance algorithm

Similarity Search Algorithm for Efficient Sub-trajectory Matching
s[0]

s[1]

s[2]

0°

S

10

45°
10

s[3]

355°
10

825

s[4]

345°
10
320°

v=2
35

Q

45°
10
q[0]

0°
10

325°
30

q[1]

q[2]

Fig. 2. Mapping of motions between S and Q when v=2

Figure 2 depicts an example of our v-warping distance algorithm which can
calculate similarity between trajectory S and Q when v is 2. We can permit up to
2(=v) times replications for an arbitrary motion of only query trajectory Q. In the
above example, we can obtain the minimum distance value, that is, the maximum
similarity value, between S and Q when q[1] of trajectory Q is mapped to each s[1],
s[2], and s[3] of trajectory S, instead of the exact matching, namely, one-to-one
mapping between trajectory S and Q. Therefore, it is shown that the approximate
matching is superior to the exact mating for calculating the similarity between
trajectories in moving databases.
Based on our v-warping distance algorithm, we will define a similarity measure for
a single trajectory. Since we measure a similarity between i-th motion in query
trajectory Q and j-th motion in data trajectory S, we define a distance function
between two motions, ddf(q[i], s[j]), as follows.
Definition 3. A distance function, ddf(q[i], s[j]), to measure the similarity between the
arbitrary motion s[i] of a data trajectory S and the arbitrary motion q[j] of a query
trajectory Q is defined as follows.

ddis(s[i,2], q[j,2]) = | s[i, 2] - q[j, 2] |
if | s[i, 1] - q[j, 1] | > 180 then dang(s[i, 1], q[j, 1]) = (360 - | s[i, 1] - q[j, 1] | )
else dang(s[i, 1], q[j, 1]) = | s[i, 1] - q[j, 1] |
ddf(s[i], q[j])= ( ((dang / 180) * α) + ((ddis/100) * β) )
Here, dang is a distance function for the direction (angle) property for all the motions
of a trajectory and ddis is a distance function for the distance property. s[i, 1] and s[i,
2] are the direction and the distance value of the i-th motion in a trajectory S,
respectively. α and β mean the weight of the direction and the distance, respectively,
when α+β=1.0.
For example, by using our v-warping distance algorithm, a similarity distance
between a data trajectory S={(45,10), (0,10), (355,10), (345,10), (4,40), (325,45)} and
a query trajectory Q={(45,10), (0,10), (325,10)} can be calculated in Figure 3. The
value of the last column of the last row means the minimum distance 0.30 by
permitting the infinitive replications of the query trajectory Q as shown in trajectory
S1. In the case of v-warping distance, the motion of q[0] in the query trajectory Q
corresponds to the s[0] in the data trajectory S, the motion of q[1] to the s[1], the
motion of q[1] to the s[2], and the motion of q[2] to the s[3] respectively as shown in

826

E.-C. Lim and C.-B. Shim

trajectory S2. Finally, we can find a path starting from the first column of the first row
within the last column of the last row, thus obtaining the minimum distance by
permitting up to v(=2) replications. We can summarize the differences of distance
between each motion of the query and the data trajectory on the path, that is, |q[0]s[0]|+|q[1]-s[1]|+|q[1]-s[2]|+|q[2]-s[3]|= 0.00 + 0.00 + 0.02 + 0.07 = 0.09. This is a
minimum distance value between the two trajectories by using our v-warping distance
algorithm. Thus, the similarity degree between S and Q is 91%(=1-0.09) while the
similarity degree based on Shan's OCMR(infinite warping) is 70%(=1-0.30). In
conclusion, our similarity measure scheme based on the v-warping distance algorithm
provides a better result than Shan's OCMR.
s[0]

S1
S

s[1]

s[2]

0°

355°
10

10

45°
10

s[3]

s[4]

345°

s[5]

4°
40

10

45

325°

S2

Q

45°
10
q[0]

0°
10
q[1]

325°
10

{325,45} 999.00

q[2]

999.00

0.30

{4,40}

999.00

0.20

0.30

{345,10}

0.23

0.06

0.09

s[0]

s[1]

s[2]

s[3]

s[4]

s[5]

{355,10}

0.19

0.02

0.11

q[0]

0.00

0.17

0.02

0.04

0.24

0.41

{0,10}

0.17

0.00

999.00

q[1]

0.17

0.00

0.02

0.04

0.14

0.24

{45,10}

0.00

999.00

999.00

q[2]

0.31

0.13

0.11

0.07

0.24

0.10

S

{0,10}

{325,10}

Q {45,10}

Fig. 3. Example of similarity measure between S and Q (v=2)

4 Experimental Results
In order to verify the usefulness of our representation scheme for moving object’s
trajectory, we do the performance analysis by using real soccer video data. Since
soccer video data have many trajectories of soccer balls, i.e., salient objects, it is
necessary to extract the trajectories of moving objects from the soccer ball. Most of
video data, formatted as MPEG file, which are used in our experiment include a shot
of 'getting a goal'. We extract the trajectories of a soccer ball by manually tracing the
ball in a ground field. For our experiment, we make 50 query trajectories consisting of
twenty in 'the right field' and twenty in 'the left field' from the half line of the ground
field. The experimental data used for performance evaluation is as follows: (1) data
domain : trajectory extracted from real soccer video data; (2) salient moving object :
soccer ball; (3) data set : 1000; (4) the average number of motions for trajectory : 9.1;
(5) the number of query : 50.
We implemented our similarity search algorithm under Windows 2003 Server O.S
with Pentium Processor and 1 GB memory by using Microsoft Visual C++ compiler.
We compare our representation scheme with the Li's and Shan's schemes in terms of
retrieval effectiveness, that is, average precision and recall measures. Let RD
(Relevant data in Database) be the number of video data relevant to a given query
which are selected from the database, RQ (Retrieved data by Query) be the total

Similarity Search Algorithm for Efficient Sub-trajectory Matching

827

number of data retrieved by a given query, and RR (Relevant data that are Retrieved)
be the number of relevant data retrieved by a given query. In order to obtain RD, we
make a test panel which selects relevant data manually from the database. The
precision is defined as the proportion of retrieved data being relevant and the recall is
defined as the proportion of relevant data being retrieved as follows.
Precision =

RR
RQ

Recall =

RR
RD

For our performance comparison, we adopt the 11-point measure [6], which is most
widely used for measuring the precision and recall. For a moving object’s trajectory,
we consider the weight of angle (Wa) and the weight of distance (Wd) separately since
we use both angle and distance for modeling the trajectory of moving objects. We
also take into account the number of replications (v) since v is a very important
parameter, depending on an application area. Here we do our experiment when v=0,
1, and 2 owing to the characteristics of the trajectory of the soccer ball in soccer video
data. v=0 is exact matching and v=1 and 2 is approximate matching. We show from
our experiment that there is no difference on retrieval effectiveness when v is greater
than 2. Table 1 shows the retrieval effectiveness of our scheme, Li's scheme, and
Shan's scheme. In case we do our performance analysis based on only the angle
property (Wa=1.0 and Wd=0.0), it is shown that our scheme achieves about 10-15%
higher precision than that of Li's and Shan's schemes while it holds about the same
recall. In case we consider the weight of angle about two times greater than that of
distance (Wa =0.7 and Wd=0.3), it is shown that our scheme achieves about 15-20%
higher precision than that of Li's and Shan's schemes while it holds about the same
recall.
Table 1. Experimental results

Wa:Wd=
1.0:0.0
Wa:Wd=
0.7:0.3
Wa:Wd=
0.5:0.5

# of warping
Li’s Scheme
Shan’s Scheme
Our Scheme
Li’s Scheme
Shan’s Scheme
Our Scheme
Li’s Scheme
Shan’s Scheme
Our Scheme

Avg. Precision
v=1
v=2
0.25
0.30
0.34
0.38
0.40
0.25
0.30
0.39
0.44
0.45
0.25
0.30
0.33
0.34
0.38

v=0

Avg. Recall
v=1
v=2
0.45
0.44
0.51
0.48
0.47
0.45
0.44
0.50
0.46
0.47
0.45
0.44
0.51
0.50
0.51
v=1

From our experiment, we finally show that our similarity measure scheme based on
our v-warping distance algorithm achieves better performance on average precision
than Li's and Shan's schemes while it holds about the same recall in the moving
object’s trajectory. Particularly, the performance of our scheme is the best when the
weight of angle is over two times than that of distance (Wa=0.7 and Wd=0.3).

828

E.-C. Lim and C.-B. Shim

5 Conclusions
In this paper, we propose a new similarity search algorithm for efficient sub-trajectory
matching. For measuring similarity between two sub-trajectories, we propose a new
v-warping distance algorithm which enhances the existing time warping distance
algorithm by permitting up to v replications for an arbitrary motion of a query
trajectory. Our v-warping distance algorithm provides an approximate matching
between two trajectories as well as an exact matching between them. From our
experiment, we showed that our similarity measure scheme based on the v-warping
distance outperformed Li's and Shan's schemes in terms of precision and recall
measures. The performance of our scheme achieves about 15-20% performance
improvement against Li's one and Shan's one when the weight of angle is over two
times greater than that of distance.

Acknowledgements
This work was supported by the Korea Research Foundation Grant funded by the
Korean Government (MOEHRD) (KRF-2006-331-D00461).

References
1. Forlizzi, L., Guting, R. H., Nardelli, E., Schneider, M.: A Data Model and Data Structures
for Moving Objects Databases, Proc. of ACM SIGMOD Conf, (2000)319-330
2. Li, J., Ozsu, M. T., Szafron, D.: Modeling Video Temporal Relationships in an Object
Database Management System," in Proceedings of Multimedia Computing and
Networking(MMCN97), (1997)80-91
3. Shan, M., Lee, S. Y.,: Content-based Video Retrieval via Motion Trajectories, in
Proceedings of SPIE Electronic Imaging and Multimedia System II, Vol. 3561, (1998)52-61
4. Yi, B., Lagadish, H. V., Faloutsos, C.: Efficient Retrieval of Similar Time Sequences Under
Time Warping, In Proc. Int'l. Conf. on Data Engineering, IEEE,( 1998)201-208
5. Park, S. H. et al.: Efficient Searches for Simialr Subsequence of Difference Lengths in
Sequence Databases, In Proc. Int'l. Conf. on Data Engineering. IEEE, (2000)23-32
6. Salton, G., McGill, M.: An introduction to Modern Information Retrieval, McGraw-Hill,
(1993)

