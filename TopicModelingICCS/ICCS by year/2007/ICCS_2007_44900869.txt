Eﬃcient GTS Allocation Algorithm
for IEEE 802.15.4
Youngmin Ji1 , Woojin Park2, Sungjun Kim2 , and Sunshin An2
1

2

Department of Telecommunication System Technology, Korea University,
5Ga 1, Anamdong, Sungbukku, Seoul 136-701, Republic of Korea
ymji@dsys.korea.ac.kr
Department of Electronics and Computer Engineering, Korea University,
5Ga 1, Anamdong, Sungbukku, Seoul 136-701, Republic of Korea
{wjpark,sjkim,sunshin}@dsys.korea.ac.kr

Abstract. Recently issued standard IEEE 802.15.4 is a novel standard
to achieve some critical features of wireless sensor networks. In this paper, we propose the algorithm to allocate GTSs according to the packet
arrival rate from end devices and the number of devices in beacon enabled mode of IEEE 802.15.4 star topology networks. From simulation
results, we show that our proposed algorithm enhances throughput comparing with the original IEEE 802.15.4 that uses only CAP duration for
transmission1 .
Keywords: IEEE 802.15.4, Wireless Sensor Networks, GTS, Zigbee.

1

Introduction

In this paper, we introduce the algorithm to enhance network throughput by allocating GTSs eﬃciently in beacon enabled mode of IEEE 802.15.4 star topology
networks. We use ns-2 simulations to prove our proposed algorithm. The simulation is performed by implementing our algorithm and GTS module in IEEE
802.15.4 of ns-2 [3][4]. Our simulation results indicate that proposed algorithm
improves throughput comparing with the original IEEE 802.15.4.

2

Eﬃcient GTS Allocation Algorithm

In this section, we present the proposed algorithm to allocate eﬃciently GTSs
based on the information from end devices in IEEE 802.15.4 star topology networks. The information is the packet arrival rate and the number of devices.
They are selected as the criteria of our algorithm due to follows: 1) Packet arrival rate: the devices with the higher packet rate can cause the more collisions
and the much delay compared to devices with the lower packet rate during trying to transmit their data packets. Allocating GTSs to devices with the higher
packet rate can minimize packet collisions and delay of the network. 2) Number
1

This research was partly supported by SK Telecom (SKT) in Korea.

Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 869–872, 2007.
c Springer-Verlag Berlin Heidelberg 2007

870

Y. Ji et al.

of devices: GTSs are designed to be used at ranges less than 8 slots in IEEE
802.15.4 [1]. Therefore, the coordinator can allocate the maximum 7 GTSs in
the range of 0 through 6. Based on the criteria, our algorithm allocates one GTS
slot to each node in order of high packet arrival rate and the maximum number
of GTS allocation (nG ) depends on the size of the network as shown in (1).
nG =

n
2

(if n ≤ 15),

nG = 7

(if n > 15)

(1)

In this algorithm, a coordinator manages each end device’s TCA (Current Arrival Time), TP A (Previous Arrival Time), TCI (Current Interarrival Time), TAI
(Average Interarrival Time) and δ (Parameter to control the relative weight of
recent and past interarrival rate). If δ is 0, TAI is ignored. If δ is 1, TCI cannot
aﬀect TAI . We have to choose δ at ranges of larger than 0 and less than 1. We set
δ as 0.9, TAI is more weighted than TCI (Note: TAIj = TAIj δ + TCIj (1−δ) of Algorithm 1) since data packet is frequently received. The detailed sequence of the
proposed algorithm is described in Algorithm 1, which runs in the coordinator.
Algorithm 1:

Record Interarrival Time

01: while(TRUE)
02:
if i = m then
03:
Sort the TAI in descending order;
04:
i = 0;
05:
changing Beacon using the top nG of the TAI
06:
else
07:
i = i + 1;
08:
end if
09:
receive message in CAP and CFP
10:
for j=1 to n (the number of end devices) then
11:
if end device j send message then
12:
TCIj = TCAj - TP Aj ;
13:
TP Aj = TCAj ;
14:
TAIj = TAIj δ + TCIj (1 − δ);
15:
end if
16:
end for
17: end while

3
3.1

Simulation
Simulation Environment

The network is a star topology that consists of 17 devices containing a PAN
coordinator. We set BO (Beacon Order) and SO (Superframe Order) to 7 so
that coordinator and end devices are always in active mode and never switch
to sleep mode since we do not need to use the inactive periods. Simulations are
conducted with three groups that consist of Group 1 (Device 1 to 6), Group 2

Eﬃcient GTS Allocation Algorithm for IEEE 802.15.4

871

(Device 7 to 11) and Group 3 (Device 12 to 16). Each group has the diﬀerent
transmission rate (1, 0.01 and 0.1 in order of Group) to show that GTSs are
dynamically allocated in order of transmission rates. The size of a transmitted
packet is 80 bytes. The transmission rate of a device is 240 kbps.
3.2

Simulation Results

Fig.1 represents the history of allocating GTSs on each device. This result indicates that the occupation rate of time slots depends on the traﬃc rate. We
can know the amount of successful transmissions on each device, which use the
guaranteed time slots.
Fig.2 shows the comparison of packet delivery and packet drop. As expected,
the average throughput of IEEE 802.15.4 is up to 168 kbps; however the average
throughput of our proposed algorithm is up to 195 kbps. We can get 16% improvement in throughput in simulation. By using this result, we can understand
the eﬃciency of proposed scheme.
5000

16
14

4000

Number of packets

Device Address

12
10
8
6

Slot 0
Slot 1
Slot 2
Slot 3
Slot 4
Slot 5
Slot 6

4
2

3000

2000

1000

0

0
0

10

20

30

40

50

60

70

80

90

100

0

1

2

3

4

5

Time (sec)

6

7

8

9 10 11 12 13 14 15 16

Device Address

(b) Successful Packet Transmission

(a) History of GTS allocation

Fig. 1. GTS allocation and successful transmission on each device with our algorithm

IEEE 802.15.4 with our algorithm
IEEE 802.15.4

IEEE 802.15.4
IEEE 802.15.4 with our algorithm

18000

28000

Amount of packets (bytes)

Amount of packets (bytes)

30000

26000
24000
22000
20000
18000

16000
14000
12000
10000
8000
6000
4000
2000

16000

0
0

10

20

30

40

50

60

70

80

90

100

0

10

20

30

40

50

60

Time(sec)

Time(sec)

(a) Packet Delivery

(b) Packet Drop

70

80

90

100

Fig. 2. Comparison of packet delivery and drop number

In addition, when the device employs IEEE 802.15.4 with our algorithm, the
amount of drop packets caused by a lot of collisions decreases as shown in Fig.2.
The average packet drop rate of IEEE 802.15.4 is up to 110 kbps but average

872

Y. Ji et al.
50000

Successful packet transmission (bytes)

Successful packet transmission (bytes)

50000
40000
30000
20000
10000
BO =4, SO=4
BO =6, SO=6
BO =10, SO=10

0

0

10

20

30

40

50

60

70

80

90

Time(sec)

(a) IEEE 802.15.4 with our algorithm

100

40000
30000
20000
10000
BO=4, SO=4
BO=6, SO=6
BO=10, SO=10

0

0

10

20

30

40

50

60

70

80

90

100

Time(sec)

(b) IEEE 802.15.4

Fig. 3. Comparison of successful transmission on various parameters

packet drop rate of our proposed algorithm is up to 43 kbps. This result also indicates that our proposed algorithm is more eﬃcient than existing protocol. Fig.2
and Fig.3 represent the throughput of IEEE 802.15.4 with our algorithm and
IEEE 802.15.4 with various parameters respectively. In a case of IEEE 802.15.4
with our algorithm, the average throughput is up to 206 kbps. In a case of IEEE
802.15.4, the average throughput is up to 174 kbps. While changing several parameters we have obtained better results through the IEEE 802.15.4 with our
algorithm. Finally, we can get 18% improvement in average throughput in these
scenarios.

4

Conclusion

In this paper, an eﬃcient GTS allocation algorithm was proposed to guarantee
the throughput for sensor devices and proved through the simulation. Our proposed algorithm showed the improved throughput comparing with the original
IEEE 802.15.4 that uses only CAP duration for transmission. This algorithm is
adaptable not only star topology but also multi-hop topology for beacon enabled
mode.

References
1. IEEE Standard for Wireless Medium Access Control (MAC) and Physical Layer
(PHY) Speciﬁcation for Low-Rate Wireless Personal Area Networks (LR-WPAN),
Oct. 2003
2. Z.Alliance, ”Zigbee speciﬁcation v1.0,” June 2005
3. USC Information Sciences Institute, Marina del Rey, CA. Network Simulator - ns-2.
(http://www.isi.edu/nsnam/ns)
4. Samsung/CUNY, ”ns-2 simulator for IEEE 802.15.4,”
http://www-ee.ccny.cuny.edu/zheng/pub [referenced September 13, 2005]

