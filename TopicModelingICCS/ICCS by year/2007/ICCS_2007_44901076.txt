Design of Fuzzy Set-Based Polynomial Neural Networks
with the Aid of Symbolic Encoding and Information
Granulation
Sung-Kwun Oh, In-Tae Lee, and Hyun-Ki Kim
Department of Electrical Engineering, The University of Suwon,
San 2-2 Wau-ri, Bongdam-eup, Hwaseong-si, Gyeonggi-do, 445-743, South Korea
ohsk@suwon.ac.kr

Abstract. In this paper, we introduce fuzzy-neural networks– Fuzzy Polynomial Neural Networks (FPNN) with fuzzy set-based polynomial neurons
(FSPN) whose fuzzy rules include the information granules (about the real system) obtained through Information Granulation. We have developed a design
methodology (genetic optimization using Genetic Algorithms) to find the optimal structure for fuzzy-neural networks that expanded from Group Method of
Data Handling (GMDH). It is the number of input variables, the order of the
polynomial, the number of membership functions, and a collection of the specific subset of input variables that are the parameters of FPNN fixed by aid of
genetic optimization that has search capability to find the optimal solution on
the solution space. We adopt fuzzy set-based fuzzy rules as substitute for fuzzy
relation-based fuzzy rules and apply the concept of Information Granulation to
the proposed fuzzy set-based rules. The performance of genetically optimized
FPNN (gFPNN) with fuzzy set-based polynomial neurons (FSPN) composed of
fuzzy set-based rules is quantified through experimentation where we use a
number of modeling benchmarks data which are already experimented with in
fuzzy or neurofuzzy modeling.

1 Introduction
It is expected that efficient modeling techniques should allow for a selection of pertinent variables and a formation of highly representative datasets. Furthermore, the
resulting models should be able to take advantage of the existing domain knowledge
(such as a prior experience of human observers or operators) and augment it by available numeric data to form a coherent data-knowledge modeling entity. Most recently,
the omnipresent trends in system modeling are concerned with a broad range of techniques of computational intelligence(CI) that dwell on the paradigm of fuzzy modeling, neurocomputing, and genetic optimization[1, 2]. The list of evident landmarks in
the area of fuzzy and neurofuzzy modeling [3, 4] is impressive. While the accomplishments are profound, there are still a number of open issues regarding structure
problems of the models along with their comprehensive development and testing.
As one of the representative advanced design approaches comes a family of selforganizing networks with fuzzy polynomial neuron (FPN) (called “FPNN” as a new
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 1076–1083, 2007.
© Springer-Verlag Berlin Heidelberg 2007

Design of Fuzzy Set-Based Polynomial Neural Networks

1077

category of neuro-fuzzy networks) [5, 8, 12]. The design procedure of the FPNNs
exhibits some tendency to produce overly complex networks as well as comes with a
repetitive computation load caused by the trial and error method being a part of the
development process.
In this paper, in considering the above problems coming with the conventional
FPNN [9, 8, 12], we introduce a new structure of fuzzy rules as well as a new genetic
design approach. The new structure of fuzzy rules based on the fuzzy set-based
approach changes the viewpoint of input space division. In other hand, from a point of
view of a new understanding of fuzzy rules, information granules seem to melt into
the fuzzy rules respectively. The determination of the optimal values of the
parameters available within an individual FSPN leads to a structurally and
parametrically optimized network through the genetic approach.

2 The Architecture and Development of FSPNN
The Fuzzy Set-based Polynomial Neuron(FSPN) encapsulates a family of nonlinear
“if-then” rules. When put together, FSPNs results in a self-organizing Fuzzy Setbased Polynomial Neural Networks (FSPNN). Each rule reads in the form.
if xp is Ak then z is Ppk(xi, xj, apk)

(1)
if xq is Bk then z is Pqk(xi, xj, aqk)
where aqk is a vector of the parameters of the conclusion part of the rule while P(xi, xj,
a) denoted the regression polynomial forming the consequence part of the fuzzy rule.
The activation levels of the rules contribute to the output of the FSPN being computed
as a weighted average of the individual condition parts (functional transformations)
PK. (note that the index of the rule, namely “k” is a shorthand notation for the two
indices of fuzzy sets used in the rule (1), that is K=(l,k)).

z=
=

(
∑(

total inputs

∑

total_rules related to input l

l =1

k =1

∑

μ( l , k ) P( l , k ) ( xi , x j , a ( l , k ) )

total inputs

rules related to input l

l =1

k =1

∑

total_rules related to input l

μ% ( l , k ) P( l , k ) ( xi , x j , a( l , k ) )

)

∑
k =1

μ
( l ,k )

)

(2)

In the above expression, we use an abbreviated notation to describe an activation level
of the “k”th rule to be in the form

μ(l , k )
μ~( l , k ) = total rule related
to input l
μ
∑ (l , k )

(3)

k =1

When developing an FSPN, we use genetic algorithms to produce the optimized
network. This is realized by selecting such parameters as the number of input variables,
the order of polynomial, and choosing a specific subset of input variables. Based on the
genetically optimized number of the nodes (input variables) and the polynomial order,
refer to Table 1, we construct the optimized self-organizing network architectures of
the FSPNNs.

1078

S.-K. Oh, I.-T. Lee, and H.-K. Kim

Table 1. Different forms of the regression polynomials forming the consequence part of the
fuzzy rules
No. of inputs
Order of
the polynomial
0 (Type 1)
1 (Type 2)
2 (Type 3)
2 (Type 4)

1

2

3

Constant
Linear

Constant
Bilinear
Biquadratic-1
Biquadratic-2

Constant
Trilinear
Triquadratic-1
Triquadratic-2

Quadratic

1: Basic type, 2: Modified type

3 Information Granulation Through Hard C-Means Clustering
Algorithm
We assume that given a set of data X={x1,x2,…,xn} related to a certain application,
there are some clusters which are capable of being found through HCM. The center
point and the membership elements represent each cluster. The set of membership
elements is crisp. To construct a fuzzy mode, we should transform the crisp set into
the fuzzy set. The center point means the apex of the membership function of the
fuzzy set. Let us consider building the consequent part of fuzzy rule. We can think of
each cluster as a sub-model composing the overall system. The fuzzy rules of Information Granulation-based FSPN are as followings.
if xp is A*k then z-mpk = Ppk((xi-vipk),(xj- vjpk),apk)
if xq is B*k then z-mqk = Pqk((xi-viqk),(xj- vjqk),aqk)

(4)

Where, A*k and B*k mean the fuzzy set, the apex of which is defined as the center
point of information granule (cluster) and mpk is the center point related to the output
variable on clusterpk, vipk is the center point related to the i-th input variable on clusterpk and aqk is a vector of the parameters of the conclusion part of the rule while P((xivi),(xj- vj),a) denoted the regression polynomial forming the consequence part of the
fuzzy rule which uses several types of high-order polynomials (linear, quadratic, and
modified quadratic) besides the constant function forming the simplest version of the
consequence; refer to Table 1. If we are given m inputs and one output system and the
consequent part of fuzzy rules is linear, the overall procedure of modification of the
generic fuzzy rules is as followings. The given inputs are X=[x1 x2 … xm] related to a
certain application, where xk =[xk1 … xkn]T, n is the number of data and m is the number of variables and the output is Y=[y1 y2 … yn]T.
Step 1) build the universe set
Universe set U={{x11, x12, …, x1m, y1}, {x21, x22, …, x2m, y2}, …, {xn1, xn2, …, xnm, yn}}
Step 2) build m reference data pairs composed of [x1;Y], [x2;Y], and [xm;Y].
Step 3) classify the universe set U into l clusters such as ci1, ci2, …, cil (subsets) by
using HCM according to the reference data pair [xi;Y]. Where cij means the j-th cluster (subset) according to the reference data pair [xi;Y].

Design of Fuzzy Set-Based Polynomial Neural Networks

1079

Step 4) construct the premise part of the fuzzy rules related to the i-th input variable
(xi) using the directly obtained center points from HCM.
Step 5) construct the consequent part of the fuzzy rules related to the i-th input variable (xi). On this step, we need the center points related to all input variables. We
should obtain the other center points through the indirect method as followings.
Sub-step1) make a matrix as equation (5) according to the clustered subsets

⎡ x21
⎢x
51
i
Aj = ⎢
x
⎢ k1
⎢
⎣M

y2 ⎤

x22

L

x2 m

x52

L

x5 m

y5 ⎥

xk 2

L

xkm

yk ⎥

M

L

M

M ⎦

⎥

(5)

⎥

Where, {xk1, xk2, …, xkm, yk}∈cij and Aij means the membership matrix of j-th subset
related to the i-th input variable.
Sub-step2) take an arithmetic mean of each column on Aij. The mean of each column is
the additional center point of subset cij. The arithmetic means of column is equation (6)

center point = ⎣⎡ vij
1

2

vij

L

m

vij

mij ⎦⎤

(6)

Step 6) if i is m then terminate, otherwise, set i=i+1 and return step 3.

4 The Design Procedure of Genetically Optimized FSPNN
The framework of the design procedure of the genetically optimized Fuzzy Polynomial Neural Networks (FPNN) with fuzzy set-based PNs (FSPN) comprises the
following steps
[Step 1] Determine system’s input variables
[Step 2] Form training and testing data
[Step 3] specify initial design parameters
[Step 4] Decide upon the FSPN structure through the use of the genetic design
[Step 5] Carry out fuzzy-set based fuzzy inference and coefficient parameters
estimation for fuzzy identification in the selected node(FSPN)
[Step 6] Select nodes (FSPNs) with the best predictive capability and construct their
corresponding layer
[Step 7] Check the termination criterion
[Step 8] Determine new input variables for the next layer

5 Experimental Studies
We demonstrate how the IG-based gFSPNN can be utilized to predict future values of
a chaotic Mackey-Glass time series. This time series is used as a benchmark in fuzzy

1080

S.-K. Oh, I.-T. Lee, and H.-K. Kim
Table 2. Summary of the parameters of the genetic optimization

GA

FSPNN

Parameters
Maximum generation
Total population size
Selected population size (W)
Crossover rate
Mutation rate
String length
Maximal no.(Max) of inputs to be
selected
Polynomial type (Type T) of the
consequent part of fuzzy rules
Consequent input type to be used
for Type T (*)

1st layer
150
300
30
0.65
0.1
Max*2+1

2nd to 3rd layer
150
300
30
0.65
0.1
Max*2+1

1≤l≤Max(2~5)

1≤l≤Max(2~5)

1≤T≤4

1≤T≤4

Type T

Type T

Type T*
Type T
Triangular
Triangular
Membership Function (MF) type
Gaussian
Gaussian
No. of MFs per input
2~5
2~5
l, T, Max: integers, T* means that entire system inputs are used for the polynomial in the conclusion part of the rules.
and neurofuzzy modeling. The time series is generated by the chaotic Mackey-Glass
differential delay equation. To come up with a quantitative evaluation of the network,
we use the standard RMSE performance index. Table 2. depicts the parameters of
genetic optimization related to the proposed network.
The population size being selected from the total population size (300) is equal
to 30. The process is realized as follows. 150 nodes are generated in each layer of
the network. The parameters of all nodes generated in each layer are estimated and
the network is evaluated using both the training and testing data sets. Then we
compare these values and choose 30 FSPNs that produce the best (lowest) value
of the performance index. The maximal number (Max) of inputs to be selected
is confined to two to five (2-5) entries. The polynomial order of the consequent
part of fuzzy rules is chosen from four types, that is Type 1, Type2, Type 3, and
Type 4.
Fig. 1 depicts the performance index of each layer of gFSPNN according to the
increase of maximal number of inputs to be selected. In Fig. 1, A(•)- D(•) denote the
optimal node numbers at each layer of the network.
Fig. 2 illustrates the detailed optimal topologies of gFSPNN for three layer when
using Max=5. As shown in Fig 2, the proposed network enables the architecture to be
a structurally more optimized and simplified network than the conventional FPNN. In
nodes (FSPNs) of Fig. 2, ‘FSPNn’ denotes the nth FSPN (node) of the corresponding
layer, the number of the left side denotes the number of nodes (inputs or FSPNs)

Design of Fuzzy Set-Based Polynomial Neural Networks

Maximal number of inputs to be selected
x 10
2.4

4(C)

3(B)

2(A)

-4

Maximal number of inputs to be selected

(Max )
5(D)

x 10
2.8

2.2

4(C)

3(B)

(Max )
5(D)

1.6

2.4

A : (1, 7 ; 3, 4)
B : (2, 4, 8 ; 4, 2)
C : (2, 3, 4, 20 ; 4, 3)
D : (1, 2, 4, 18, 25 ; 2, 2)

1.4
1.2

A : (1, 12 ; 2, 5)
B : (7, 8, 13 ; 4, 3)
C : (8, 24, 25, 0 ; 2, 3)
D : (3, 12, 18, 21, 28 ; 4, 2)

1
0.8
0.6

1

1.2

1.4

1.6

1.8

2

2.2

2.4

2.6

2.8

Testing Error

Training Error

2(A)

2.6

A : (3, 4 ; 3, 5)
B : (2, 3, 4 ; 3, 4)
C : (2, 3, 4, 5 ; 3, 4)
1.8
D : (2, 3, 4, 5, 0 ; 3, 4)
2

0.4

-4

1081

2.2
2
1.8
1.6
1.4
1.2
1

3

1

2

Layer

3

Layer

(a-1) Training error

(a-2) Testing error

(a) Triangular membership function
Maximal number of inputs to be selected
-5

x 10
16

2(A)

4(C)

3(B)

A : (3, 4 ; 3, 5)
B : (1, 3, 4 ; 3, 5)
C : (2, 3, 4, 5 ; 3, 4)
12
D : (2, 3, 4, 5, 0 ; 3, 4)

Maximal number of inputs to be selected

(Max )
-4

5(D)

x 10
2

Testing Error

Training Error

8

2

A : (1, 2 ; 3, 5)
B : (3, 6, 24 ; 2, 4)
C : (2, 3, 5, 16 ; 3, 2)
D : (2, 3, 5, 13, 28 ; 2, 2)

1

(Max )
5(D)

1.6

A : (23, 30 ; 3, 5)
B : (13, 16, 29 ; 2, 2)
C : (18, 21, 27, 0 ; 2, 4)
D : (1, 6, 16, 18, 23 ; 2, 2)

10

4

4(C)

3(B)

1.8

14

6

2(A)

2

1.4

1.2

1

0.8

3

0.6

1

2

(b-1) Training error

3

Layer

Layer

(b-2) Testing error

(b) Gaussian-like membership function
Fig. 1. Performance index of IG-gFSPNN (with Type T*) with respect to the increase of number of layers

coming to the corresponding node, the number of the center denote the polynomial
order of conclusion part of fuzzy rules used in the corresponding node and the number
of the right side denotes the number of membership functions.
Table 3 summarizes a comparative analysis of the performance of the network with
other models. The experimental results clearly reveal that it outperforms the existing
models both in terms of significant approximation capabilities (lower values of the
performance index on the training data, PIs) as well as superb generalization abilities
(expressed by the performance index on the testing data EPIs). The proposed IG based
genetically optimized FSPNN (IG-based gFSPNN) can be much lower in comparison
to the conventional optimized FPNN as shown in Table 3.

1082

S.-K. Oh, I.-T. Lee, and H.-K. Kim
FSPN

1

4 3 4
FSPN

2

4 4 5
FSPN

4

3 3 5
x(t-30)

FSPN

5

3 3 5
FSPN

6

x(t-24)

3 3 5

x(t-18)

4 3 4

FSPN 12

3

FSPN 12

5 2 2

FSPN 18

FSPN 15

5 2 2

FSPN 18

5 2 2

FSPN 23

5 3 2

x(t-12)

2 3 5

x(t-6)

4 3 4

x(t)

FSPN

5 4 2

5 4 4

FSPN

1

5 4 2

Yˆ

FSPN 21

FSPN 28

FSPN 25

3 4 5

FSPN 26

3 3 5

FSPN 30

5 4 4

Fig. 2. Optimal networks structure of GAs-based FPNN ( for 3 layers )

Table 3. Comparative analysis of the performance of the network; considered are models
reported in the literature
Performance index
PIs

EPIs

0.0016
0.014

0.0015
0.009

Max=5

4.65e-5

1.06e-4

Max=5

2.49e-5

6.76e-5

Model

PI
0.044
0.013
0.010

Wang’s model[9]

Proposed
IGgFSPNN

ANFIS[10]
FNN model[11]
Triangular
(3nd layer)
Type T*
Gaussian
(3nd layer)

6 Concluding Remarks
In this study, we have surveyed the new structure and meaning of fuzzy rules and
investigated the GA-based design procedure of Fuzzy Polynomial Neural Networks
(FPNN) along with its architectural considerations. The whole system is divided into
some sub-systems that are classified according to the characteristics named information granules. Each information granule seems to be a representative of the related
sub-systems. A new fuzzy rule with information granule describes a sub-system as a
stand-alone system. A fuzzy system with some new fuzzy rules depicts the whole
system as a combination of some stand-alone sub-system.
The GA-based design procedure applied at each stage (layer) of the FSPNN leads
to the selection of the preferred nodes (or FSPNs) with optimal local characteristics
(such as the number of input variables, the order of the consequent polynomial of
fuzzy rules, and input variables) available within FSPNN. The comprehensive

Design of Fuzzy Set-Based Polynomial Neural Networks

1083

experimental studies involving well-known datasets quantify a superb performance of
the network in comparison to the existing fuzzy and neuro-fuzzy models.
Acknowledgements. This work was supported by the Korea Research Foundation
Grant funded by the Korean Government (MOEHRD)(KRF-2006-311-D00194, Basic
Research Promotion Fund).

References
1. Pedrycz, W.: Computational Intelligence: An Introduction, CRC Press, Florida, (1998)
2. Peters, J.F, Pedrycz, W.: Computational intelligence, In Encyclopedia of Electrical and
Electronic Engineering, (Edited by J.G. Webster). John Wiley & Sons, New York. 22
(1999)
3. Pedrycz, W., Peters, J.F. (ed.): Computational Intelligence in Software Engineering, World
Scientific, Singapore. (1998)
4. Takagi, H., Hayashi, I.: NN-driven fuzzy reasoning, Int. J. of Approximate Reasoning. 5
(3) (1991), 191-212
5. S.-K. Oh and W. Pedrycz, “Self-organizing Polynomial Neural Networks Based on PNs or
FPNs : Analysis and Design”, Fuzzy Sets and Systems, 2003(in press).
6. Z. Michalewicz, “Genetic Algorithms + Data Structures = Evolution Programs”,
Springer-Verlag, Berlin Heidelberg, 1996.
7. D. Jong, K. A., “Are Genetic Algorithms Function Optimizers?”, Parallel Problem Solving
from Nature 2, Manner, R. and Manderick, B. eds., North-Holland, Amsterdam.
8. S.-K. Oh and W. Pedrycz, “Fuzzy Polynomial Neuron-Based Self-Organizing Neural Networks”, Int. J. of General Systems, Vol. 32, No. 3, pp. 237-250, May, 2003.
9. L. X. Wang, J. M. Mendel, “Generating fuzzy rules from numerical data with applications”, IEEE Trans. Systems, Man, Cybern., Vol. 22, No. 6, pp. 1414-1427, 1992.
10. J. S. R. Jang, “ANFIS: Adaptive-Network-Based Fuzzy Inference System”, IEEE Trans.
System, Man, and Cybern., Vol. 23, No. 3, pp. 665-685, 1993.
11. L. P. Maguire, B. Roche, T. M. McGinnity, L. J. McDaid, “Predicting a chaotic time series
using a fuzzy neural network”, Information Sciences, Vol. 112, pp. 125-136, 1998.
12. S.-K. Oh, W. Pedrycz and T.-C. Ahn, “Self-organizing neural networks with fuzzy polynomial neurons”, Applied Soft Computing, Vol. 2, Issue 1F, pp. 1-10, Aug. 2002.
13. L. A. Zadeh, “Toward a theory of fuzzy information granulation and its centrality in human reasoning and fuzzy logic”, Fuzzy Sets Syst, vol. 90, pp. 111-117, 1997
14. Park, B.J., Lee, D.Y., Oh, S.K.: Rule-based Fuzzy Polynomial Neural Networks in Modeling Software Process Data. Int. J. of Control Automation and Systems. 1(3) (2003)
321-331

