Multilevel Task Partition Algorithm for Parallel
Simulation of Power System Dynamics
Wei Xue and Shanxiang Qi
Department of Computer Science and Technology, Tsinghua University,
Beijing, China, 100084
xuewei@tsinghua.edu.cn, qishanxiang@gmail.com

Abstract. Nowadays task partition for parallel computing is becoming more and
more important. Particular in power system dynamic simulation, it is critical to
design an efficient partition algorithm to reduce the communication and balance
the computation load [1]. This paper presents a novel multilevel partition scheme
based on the graph partition algorithm. By introducing regional characteristic into
the partition, improving the weights of nodes and edges, proposing an objective
function to evaluate the partition results and some other schemes, we can
efficiently improve the defects in the traditional partition methods. With 12 CPUs
for a large scale power system with 10188 nodes, the parallel efficiency with our
new algorithm was 63% higher than that with METIS, a well-known program
used for partitioning graphs. The proposed algorithm will satisfy the requirement
for large scale power grid dynamic simulation.
Keywords: power system, parallel simulation, task partition, graph partition.

1 Introduction
Power system dynamic simulation is an important tool in power system research.
With the development of power system scale, the computation tasks are becoming
heavier and more complex. Up to now, there have been many research topics related
to parallel algorithms and parallel simulation of power system dynamics [2-10]. To
accomplish the task of power system dynamic simulation, a set of differential
algebraic equations (DAEs) have to be solved.
⎧⎪ •
X = f ( X, V ) = AX + B u ( X, V )
⎨
⎪⎩ 0 = I − Y ( X ) ∗ V

(1)

In (1), the first nonlinear differential equation group describes the dynamic
characteristics of the power devices, and the second nonlinear equation group
represents the restriction of the power network, where X is the state vector of
individual dynamic devices, I is the vector of current injected from the devices into
the network, V is the node voltage vector, Y(X) is the complex sparse matrix, which is
not constant with time, and is the function of X and V.
The most commonly used sequential algorithm for parallel simulation of power
system dynamics is the interlaced alternating implicit approach (IAI algorithm). The
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 529–537, 2007.
© Springer-Verlag Berlin Heidelberg 2007

530

W. Xue and S. Qi

IAI algorithm uses a trapezoidal rule in the difference process and solves differential
equations and algebraic equations alternately and iteratively. It not only maintains the
advantages of the implicit integration approach, but also has modeling and computing
flexibility.
Now the time consumed for simulation increases super-linearly as the power
system’s size increases. The performance of sequential simulation is not adequate for
real-time simulation of large scale power grids, which is critical for power system
planning and dispatching. Its limitations become increasingly serious as the integrated
power grid continues to develop. Therefore, it is very important to study practical
parallel algorithms and software.
The key problem of solving the equations is to solve a sparse linear system, which
can be briefly formulated as follows:
⎡Y
⎢M
⎣

M ′ ⎤ ⎡U ⎤ ⎡ I p ⎤
=
ZCF ⎥⎦ ⎢⎣ I ⎥⎦ ⎢⎣ 0 ⎥⎦

(2)

In which,
⎡MCF−1p MCF−2 p
⎢
M=⎢
MCF−1n MCF−2n
⎢
⎣
⎡Y1 p
⎢
⎢
⎢
Y =⎢
⎢
⎢
⎢
⎣⎢

Y2 p
Y1n
Y2 n
Y1 z

MCF−1z

⎡ U1 p ⎤
⎤
⎢U ⎥
⎥
⎢ 2p⎥
⎥
⎢ U 1n ⎥
⎥
⎥
⎥ U=⎢
⎢ U 2n ⎥
⎥
⎢ U1 z ⎥
⎥
⎥
⎢
⎥
Y 2 z ⎦⎥
⎢⎣ U 2 z ⎥⎦

⎡M

1 p − CF
⎡ I1 p ⎤
⎢M
⎢I ⎥
⎢ 2 p − CF
⎢ 2p⎥
⎢
⎢ 0 ⎥
I p = ⎢ ⎥ M′ = ⎢
0
⎢
⎢ ⎥
⎢
⎢ 0 ⎥
⎢
⎢ ⎥
⎢⎣
⎢⎣ 0 ⎥⎦

⎤
⎥
⎥
MCF−2 z ⎥⎦

M1n − CF
M 2 n − CF

⎤
⎥
⎥
⎥
⎥
⎥
M1z − CF ⎥
⎥
M 2 z − CF ⎥⎦

Z = Z CF , I = ICF

Where the subscripts 1 and 2 represent the sub-area number, and the subscripts p, n, z
represent the positive, negative, and zero sequence networks respectively. Y1p, Y2p,
Y1n, Y2n, Y1z and Y2z are the admittance matrices of three (positive, negative and
zero) sequence networks respectively. ZCF is the impedance matrix for cutting
branches (the branches between different sub-areas) and fault branches, and also the
coefficient matrix of boundary equations in the BBDF computation. M and M’ are the
associated matrices between Y and Z respectively.
As shown in (2), the equations have Block Bordered Diagonal Form and can match
the concept of parallelism. Each sub-area calculates its part of the solution. But
obviously, each sub-area should calculate in serial with the boundary system
represented by Z. Global communication like gather/scatter is used between the

Multilevel Task Partition Algorithm for Parallel Simulation

531

processes of sub-areas and boundary system. Meanwhile, the boundary system is
formed due to the connections between sub-areas. So the more connections between
sub-areas, the larger boundary system as well as the more communication between
processes in parallel simulation.
It is an essential and critical step to appropriately partition the power system so as
to map the computational load onto the processors. Generally, there are two main
objectives for the partition:
A． Minimization of the connections between different sub-areas;
B． Maintain an equal computational load for each sub-area.
Power systems are large scale networks with connections related to geographical
positions. The problem of network decomposition can be changed into the graph
partition problem, which is well developed in HPC field [12]. However, if a graph
partition algorithm is simply used; more communication time will be introduced into
the parallel simulation because of more cutting edges during graph partitioning [13].
On the other hand, because power systems are developed with connections of regional
networks, the connections in the regional network are much tighter than those
between regions. So partitioning based on this regional characteristic of power
networks can reduce the communication cost in parallel simulation, but it may
introduce more load imbalance.
Based on the observation above, this paper presents a novel multilevel partition
scheme, which integrates the advantages of graph partition algorithms and the
partition method based on power network regional characteristics. This scheme
efficiently reduces the boundary system computation as well as the communication in
power system dynamic simulation.

2 Multilevel Partition Algorithm
There are four main steps in our new scheme as shown by Fig 1:
1) Establish the layered regional model for the power network. This model indicates
the weak connections in a power network and gives the guide for successive
partition. Thank to the development of power system, we can get the model easily
by its obvious regional nature.
2) Network coarsing. During the coarsing phase, aggregating the nodes based on the
reasonable level (such as the highest level) of regional model successively
decreases the size of the power network graph. The partition problem of power
networks is formulated into a weighted graph partition problem, in which the
weights of the vertex and edge represent the computation load of the sub-network
in the vertex and the amount of communication between sub-networks. Following
network coarsing, the multilevel partition algorithm can identify the weak
connections in a power network easily and effectively. The time consumed in the
partition process is also reduced sharply.
3) Multi-level partition. In the multilevel partitioning phase, the derived small
weighted graph is broken down into a specific number of sub-graphs with a graph
partition algorithm (bisection method is used here). As we know, the small
derived graph may limit the freedom in partitioning and may bring more load

532

W. Xue and S. Qi

imbalance into the final solution. The multilevel scheme is, therefore, proposed to
evaluate the quality of partition results, decompose the sub-area with the
maximum computation load and partition the new graph again. This process
continues to run until the optimal solution is found.
4) Refine results. After the weighted graph partition, the results have to be applied
to the original network. Further refinement and adjustment are performed to
improve the quality of final partition results.

Fig. 1. The process of multilevel partition algorithm

The following key points in the new method can be described as follows:
1) How to construct graph in order to describe the amount of computation and
communication.
2) How to evaluate the partition results and then control the partitioning process.
3) How to refine results for partition if possible.
2.1 Establish the Layered Model
Due to the nature of the power system, we can establish the layered model according
to the regionalism.

Fig. 2. Layered Power Network Model

2.2 Weights for Graph Vertex and Edge
In this paper, we introduce the weights of the vertex and edge to represent the
computation load of the sub-network in the vertex and the amount of computation in
boundary system.

Multilevel Task Partition Algorithm for Parallel Simulation

533

Simulation for power system dynamics is floating point computation dominated.
So the weight of the vertex describes the amount of floating point computation of the
devices and network. So the vertex Vi ’s weight WVVi is shown below:
WVVi = N n + 2 N bC +

In which,

∑ Path(D )
i

Di∈VDi

(3)

N n is the number of the nodes in the coarsing vertex. N bC is the number

of the edges between nodes in vertex. Nn+NbC represents the floating point
computation of network in vertex. VDi is the set of the devices related to Vi .

Path ( Di ) is the estimation of computation for device Di , which can be regarded as

the number of edges in relation graph between variables for specific device
mathematical model.
The weight of the edge describes the contribution of the cutting branches to the
boundary system. With our parallel algorithm, the nodes related to the cutting edges
will be included in the boundary system. But the size of boundary system is not equal
to twice of the number of cutting edges. So the edge Ei ’s weight WEEi is shown
below:
WE Ei =

1
1
+
DE ( N p ) DE ( N q )

(4)

In which, DE ( N p ) and DE ( N q ) are the degree of the nodes. This weight can give
an accurate estimation of size of boundary system, which is critical for BBDF parallel
algorithm.
2.3 Evaluation Function for Partition

Our evaluation function is based on the implementation of BBDF parallel algorithm.
F ( p ) = Max (CompCosti ) + CompCost Border
i =1,.., p

(5)

In which CompCosti is the computation of the sub-area, and CompCostBorder is the
computation of the boundary system described below. In the evaluation function, the
sum of CompCosti and CompCostBorder represents the total floating point computation
in the critical path and almost the overall time consumed in the parallel simulation. It
is noted that the more communication occurs between subtasks, the more computation
is introduced into the boundary system. So the influence of communication has been
taken into account by CompCostBorder.
According to this problem, we suggest that:
CompCosti = VWi + N Ti2 + 2 * ∑ Degree( j )

(6)

j∈Ti

p

CompCost Border = ∑ N Ti2 + N C
i =1

(7)

534

W. Xue and S. Qi

In which VWi is the floating point computation of the internal network (computation
related to Y in formula 2), which can be evaluated by formula 3. NTi is the number of
nodes included in boundary system. An interface matrix has to be computed by subarea i and be communicated to boundary system. Due to the interface matrix is almost
dense, the computation can be evaluated by the square of the matrix dimension NTi.
And the computation related to M and MT in formula 2 in sub-area i is about the
degree of nodes, which related to boundary system. With the same idea, we can get
the computation evaluation of boundary system using formula 7.
In fact, it is difficult to give the accurate computation overhead in sparse matrix
operation before factoring. Based on our analysis and testing, for comparing the
different partition results, our method gives a trade-off between accuracy and speed to
evaluate the overhead of parallel computation effectively.

Fig. 3. Partition improvement for isolated node
set

Fig. 4. Partition improvement for Unreasonable
node

2.4 Refine Results

After the graph partitioning phase, it may have two similar problems: isolate node sets
and unreasonable node related to the cutting branches. These two problems are shown
above.
We identify the isolated node sets by topological analysis and analyze the
connections of the nodes in the boundary system to improve the quality of final
partition results.

3 Test Results
In this study, two power systems shown in Table 1 have been tested on a SMP
Cluster. In the cluster, each node is a SMP computer and has 4 Intel Xeon
PIII700MHz CPUs and 1 gigabyte of memory. The communication device between
SMP nodes is Myrinet with a bandwidth of 2.56Gb/s. The software environments are
Redhat Linux 7.2 (kernel version 2.4.7-10smp), MPICH-1.2.1..7 and gm-1.5pre4.
The detail computation models including 5 order generator model, typical exciter
and governor model, and induction motor model, are concerned [13] for all test cases.
An A-phase fault on single 220kV branch is assumed for Case 1, the fault occurs at
0s, and the branch trips at 0.16s. It is a typical non-symmetric fault case. A threephase fault is assumed for Case 2, the fault occurs at 0s, and the branch trips at 0.08s.

Multilevel Task Partition Algorithm for Parallel Simulation

535

It is a serious symmetric fault case with numerical difficult. In the simulations, the
fixed time step 0.01s is used, and the simulation time is 10s. The convergence
tolerance is 10-4 pu. For all the test cases, the same code for parallel algorithm and
complier flags are used as well as the code tuning schemes.
Table 1. Network information for two power systems
System

Case 1

Case 2

number of nodes

706

10188

number of branches

1069

13499

number of generators

88

1072

number of loads

459

3003

Scale

In the figures below, Sp stands for speedup, which is the ratio of the time required
for parallel simulations with partitions to the time required for sequential simulations
without partitions. And the efficiency is expressed as E=Sp/P, where P is the number
of CPUs.
For Case 1, experiment result shows the maximum deviation of node voltage with
the parallel program presented in this paper and the software named PSASP. PSASP
is the standard sequential software package developed by EPRI China, which is
widely used for power system simulation in China [14, 18]. According to Fig.5, the
maximum deviation of node voltage between our algorithm and PSASP was less than
10-5 pu. This proves that our algorithm is accurate.
Table 2 shows that the multilevel partition scheme results in much fewer cutting
edges than the recursive bisection algorithm in METIS [15] but leads to a little more
imbalance between sub-areas. In the table, the “Max/Min” represents the ratio of the
number of nodes in the maximal partition to the number in the minimal partition, and
“CutBrn” represents the number of branches between sub-areas.
Table 2. Comparison of the multi-level scheme and algorithm in METIS (Case 1)
Multilevel scheme

METIS algorithm

Partition
number

Max/Min

CutBrn

Max/Min

CutBrn

2

422/284

4

379/327

12

4
8

301/121
119/68

7
34

207/156
145/74

28
54

Following experiments suggest that the multilevel scheme achieves higher efficiency
in power system dynamic simulations on cluster systems, and its performance does not
noticeably suffer from the imbalance of sub-areas. Furthermore, higher efficiency is
achieved with the increase of partition number. With eight CPUs, the efficiency of our
algorithm was about 70% higher than that of METIS.

536

W. Xue and S. Qi
Table 3. Comparison of the multi-level scheme and algorithm in METIS (Case 2)
Multilevel scheme

METIS algorithm

Partition
number

Max/Min

CutBrn

Max/Min

2

5258/4930

2

5102/5086

2

4

3205/762

6

2552/2535

18

8

2004/628

9

1284/1266

64

10

1374/762

19

1035/1008

78

12

1143/694

27

861/835

79

16

1116/305

42

644/621

121

20

1088/156

40

531/496

140

CutBrn

Table 3 also shows that the multilevel partition scheme gets much less cutting
edges than the recursive bisection algorithm in METIS, but leads to more imbalance
between sub-areas.
With 12 CPUs, the efficiency of our algorithm is about 63% higher than that of
METIS. Besides, we can also find that if the partition number is small, our method is
not obviously more efficient than that of METIS. The reason is that the METIS
considers the graph containing 10188 nodes in Case 2 for partition, while our method
uses the evaluation function to decompose the vertex in a simplified graph. Therefore,
in the cases with the small partition number, METIS has more freedom than our
method. But in contrast, in the cases with large partition number, our method is better
than METIS because of considering the accurate behaviour in the parallel simulation.
In conclusion, the multilevel partition scheme fits cluster-based BBDF algorithm
well, especially when more CPUs are used. The multilevel partition scheme and the
BBDF algorithm give an integrated solution to parallel dynamic simulation and can
get very satisfying results.
Acknowledgements. This work was supported in part by the National Natural
Science Foundation of China (Grant No.90612018).

Reference
1. P. Zhang, J. R. Martí, et al, Network Partitioning for Real-time Power System Simulation.
International Conference on Power Systems Transients, No.177
2. W. Xue, J. W. Shu, et al, Advance of parallel algorithm for power system transient
stability simulation, Journal of system simulation, 2002, 14(2), 177-182.
3. IEEE Committee Report. Parallel processing in power systems computation. IEEE Trans.
on Power Systems, 1992, 7(2): 629-638.
4. I.C.Decker, D.M.Falcao, et al. Conjugate gradient methods for power system dynamic
simulation on parallel computers. IEEE Trans. on PWRS, 1996,11(3), 1218-1227
5. M. La Scala, G. Sblendorio, A. Bose, J. Q. Wu. Comparison of algorithms for transient
stability simulations on shared and distributed memory multiprocessors. IEEE Trans. on
Power Systems, 1996, 11(4), 2045-2050.

Multilevel Task Partition Algorithm for Parallel Simulation

537

6. G. Aloisio, M. A. Bochicchio, et al. A distributed computing approach for realtime
transient stability analysis. IEEE Trans. on Power Systems, 1997, 12(2), 981-987.
7. K.W.Chan, R.C.Dai, C.H.Cheung. A coarse grain parallel solution method for solving
large set of power systems network equations. 2002 international conference on power
system technology, 2002.Volume: 4: 2640 -2644
8. A. H. Jorge, R. M. Jose Real time network simulation with PC-Cluster. IEEE Trans. on
power systems, 2003, 18(2), 563-569.
9. Y. L. Li, X. X. Zhou, Z. X. Wu, Parallel algorithms for transient stability simulation on PC
cluster. PowerCon 2002, vol.3, 1592-1596.
10. Y. L. Li, et al, A Parallel Complex Fault Computation Algorithm for Large Scale Power
System Digital Simulation. Proceedings of CSEE, 2003, 23(12), 1-5
11. H.Simon, S. Teng. How good is recursive bisection? SIAM J. Scientific Computing, 1997,
18(5):1445-1463
12. Kirk Schloegel, George Karypis, Vipim Kumar. Graph Partitioning for High Performance
Scientific Simulations. CRPC Parallel Computing Handbook. Morgan Kaufmann, 2000
13. Jiwu Shu, Wei Xue, Weimin Zheng, An Optimal Partition Scheme of Transient Stable
Parallel Computing in Power System, Automation of Electric Power Systems, 2003,
27(19), 6-10.
14. EPRI China, Power System Analysis Software Package, Fundamental database user
manual, 2001.
15. K. George, V. P. Kumar, METIS-a software package for partitioning unstructured graphs,
partitioning meshes, and computing fill-reducing orderings of sparse matrices, version 4.0
[EB/OL], http:// www.cs.umn.edu/?karypis, 1998,9.
16. M.H.M.Vale, D.M.Falcao, E.Kaszkurewicz, Electrical power network decomposition for
parallel computations. Proceedings of the IEEE Symposium on Circuits and Systems. San
Diego, CA, May 1992. 2761-2764
17. Banerjee.P., Jones.M.H., Sargent J.S.. Parallel simulated annealing algorithms for cell
placement on hypercube multiprocessors. IEEE Trans.,1990,PDS-1:91-106
18. Cheng Hua, Xu Zheng, Comparison of mathematical models for transient stability
calculation in PSASP and PSS/E and corresponding calculation results, Power system
teconology, 2004, 28(5), 1-4.

