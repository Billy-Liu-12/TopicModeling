A Novel Secure Interoperation System
Li Jin and Zhengding Lu
Department of Computer Science & Technology,
Huazhong University of Science & Technology, Wuhan 430074, China
jessiewelcome@126.com

Abstract. Secure interoperation for a distributed system, such as a multidomain system, is a complex and challenging task. The reason for this is that
more and more abnormal requests and hidden intrusions make the static access
control policies to be fragile. The access control model presented in this paper
approaches this problem by proposing a concept of “trust-level”, which
involves a statistical learning algorithm, an adaptive calculating algorithm and a
self-protecting mechanism to evaluate a dynamic trust degree and realize secure
interoperations.
Keywords: Secure Interoperation; Trust-level; Adaptive.

1 Introduction
Traditional access control systems are defined as granting or denying requests to
restrict access to sensitive resources, the main purpose of which is preventing the
system from ordinary mistakes or known intrusions. The development of network and
distributed technology has made a large revolution in information security area.
Sharing information without sacrificing the privacy and security has become an
urgent need.
The emergence of Trust Management has promised a novel way to solve these
problems. Many researchers have introduced the idea of “trust” to improve a system’s
security degree. It always involves a system’s risk-evaluation or a user’s historical
reputation to decide whether they are “trust” or not. It is insufficient to deal with such
unexpected situations as dishonest network activities, identity spoofing or
authentication risk. There are many researchers who have amply discussed the
importance of “trust” in a dynamic access control system and reached many
achievements. However, how to change an abstract concept of “trust” into a numeric
value was insufficiently discussed. The motivation of this paper is drawn by this idea.
To solve these problems, we introduced a new quantitative concept “trust-level” to
access control policies and developed a novel Adaptive Secure Interoperation System
using Trust-Level (ASITL). In Section 2, we discuss some related achievements of
secure interoperation and trust management in recent years. We describe the whole
architecture and working flow of the ASITL in Section 3. The trust evaluation module
is discussed in Section 4. We also present an interesting example in Section 5.
Concluding remarks is added in Section 6.
Y. Shi et al. (Eds.): ICCS 2007, Part II, LNCS 4488, pp. 808–814, 2007.
© Springer-Verlag Berlin Heidelberg 2007

A Novel Secure Interoperation System

809

2 Related Works
Several research efforts have been devoted to the topic of trust strategies in secure
interoperations and trust management.
Ninghui Li and John C. Mitchell proposed RT [1], which combines the strengths of
Role-based access control and Trust-management systems. RT has been developed
into a systematic theory. Some trust services, such as trust establishment, negotiation,
agreement and fulfillment were reported in [2], [3]. Although they concluded many
security factors that might influence the trust degree, they did not propose a
formalized metric to quantize it. Furthermore, Elisa B. et al. discussed secure
knowledge management, focusing on confidentiality, trust, and privacy [4] and Kilho
S. et al. presented a concrete protocol for anonymous access control that supported
compliance to the distributed trust management model [5], both of which represented
novel achievements in this area. However, the trust evaluation methods have not been
essentially developed.
Comparing with the above research efforts, our framework leads to a number of
advantages in a secure interoperation environment.
• A dishonest user can not deceive the authentication server to reach his true
intention. Once a dishonest network activity is detected, the user’s trust-level
will be decreased and he will not be granted any further privileges. Therefore,
many potential risks can be efficiently avoided.
• To gain a higher trust-level, a user seeking to any advanced service has to
submit correct certificate and obey rules all the time.
• With a statistical learning algorithm, event a new intrusion or an unknown event
can also be learned and added into the abnormal events DB.

3 Framework for ASITL
ASITL is a self-adaptive secure interoperation system. Different from traditional
authentication systems, it involves dynamic trust evaluation mechanism. It consists of
three main parts: certificate authentication mechanism, authentication server and trust
evaluation module. Each part has its own duty as follows:
Certificate authentication mechanism. It verifies the validity of certificates with
the certificates DB.
Authentication server. With the certificate authentication mechanism, access
control policies, and if necessary, trust-level evaluation module, it decides whether or
not to grant a request of the current user.
Trust evaluation module. This module includes two parts: abnormal judging
mechanism and trust-level calculating algorithm. Abnormal judging mechanism
involves a self-adaptive statistical learning algorithm which uses a probability method
to define a class for an abnormal event. And trust-level calculating mechanism defines
a mathematic model to calculate a trust-level value with an abnormal event’s kind and
its occurrence number.

810

L. Jin and Z. Lu

With above three main parts, we can describe a typical secure session in ASITL:
Firstly, a user sends a request to the authentication server. And according to user’s
request and access control policies, the authentication server asks for some necessary
certificates.
Secondly, the user submits the needed certificates. If the certificates can satisfy the
policies, the user’s request will be transmitted to the corresponding application
servers. A secure interoperation is finished. Otherwise, the authentication server sends
further authentication requirements to the user and trust evaluation module starts to
work at once.
Thirdly, the user has to send other certificates once more to further proof his
identity. And the authentication server continues to authenticate the current user, at
meanwhile, update the trust-level for the user constantly.
Finally, when the user’s trust-level is beyond the system’s threshold value, the
current session will be canceled and the user will be banned in the system for a
predefined time-out period. Otherwise, the user has to continue to submit some more
certificates to verify his identity until his certificates satisfy the request and access
control policies.

4 Trust Evaluation
To maintain consistency and simplicity, authentication server generates a user ID and
maintains a history record for each user. Generally, a trust observation period is a
fixed interval of time, i.e., a threshold defined by system, or a period between two
audit-related events.
4.1 Basic Definitions
Each network event has it own features. In network security area, researchers often
abstractly divide a network event into many significant features. Similarly, common
kinds of features can be concluded into a class, which might be related to a certain
network event. Before describing the trust evaluation process in detail, we give the
basic definitions and theorems.
Definition 1: Every network event contains a set of intrinsic features. When we
analysis a network event, some of these features are essential, some of them are
irrelevant. We call those essential features as key feature, named feature.
Definition 2: A feature can be divided into a mixture one or more topic kinds, named
classes, which are associated with different kinds of network events.
Theorem 1: Supposing that
1. An event E in the abnormal events DB can be described with a feature set F ;
2. All features f ∈ F are mutually exclusive and are associated with one or more
of a set of classes C k ;
3. A suspicious event Ei is observed by a feature set FJ = { f 1 , f 2 ,..., f j ,... f J } ;

Then the index I of the most probable event Ei is given by

A Novel Secure Interoperation System

(

I = arg max ∑ log p(C f ( j ) | Ei ) − log p (C f ( j ) )
i

J

)

811

(1)

p( X ) denotes the probability of event X and C f ( j ) is the class that feature f j is
assigned.

4.2 Working Flow of Abnormal Judging

With the definitions and theorems in above, we realize the self-adaptability of
abnormal judging mechanism as follows:
Step 1: Initialize the events training set by extracting general features from large
amount of abnormal events and learning to deduce some basic rules from current
abnormal feature set.
Step 2: Receive an abnormal event which is needed to be classified.
Step 3: Extract the features and send them to the Event Induction module.
If it can be divided into a known class, its abnormal kind will be transferred to
the trust-level calculating module.
Otherwise, the unknown features are sent back to the training set and update the
current feature rules for next judging process.

①
②

4.3 Trust-Level Calculating

With determinations made by the abnormal judging module, trust-level calculating
algorithm updates the current user’s trust-level and feeds back a quantitative “trust”
value to the authentication server.
Definition 3: A user’s trust-level is defined as follows:

Tu = 1 / m Sum(α klk )

(1 ≤ k ≤ m)

(2)

k

Tu denotes the trust-level of user u, and m is the amount of abnormal event kinds. α k
is the influence rate of each kind of event, which is a real number between 0 and 1. lk
is the occurrence number of event k. Consequently, Tu is in the range of [0, 1]. lk
starts as 0 to reflect that there is no prior interaction between user and the
authentication server (that is, unknown users).
Supposing there are 3 kinds of abnormal event E1 , E2 , E3 and their trust rates
are α 1 =0.9, α 2 =0.7, α 3 =0.5. The following tables separately shows Tu ’s going trend
as all the kind of events are detected. Assuming that l1 , l2 , and l3 all follow the
same increasing rate, we can find an interesting result: with the increasing of event
kinds, the larger lk , the faster the Tu decreases.

812

L. Jin and Z. Lu
Table 1. Tu on

l1
0
3
5
7
9

E1

increasing

l2
0
0
0
0
0

l3
0
0
0
0
0

Table 2. Tu on

l1
0
3
5
7
9

and

E2 increasing

l2
0
3
5
7
9
Table 3. Tu on

l1
0
3
5
7
9

E1

Tu
1.0000
0.9097
0.8635
0.8261
0.7958

l3
0
0
0
0
0

E1 , E2

l2
0
3
5
7
9

and

Tu
1.0000
0.6907
0.5862
0.5202
0.4759

E3 increasing
l3
0
3
5
7
9

Tu
1.0000
0.3990
0.2633
0.1895
0.1432

5 An Example
Assuming there is a file access control system. With the sensitivity S of files, all files
can be divided into three classes A, B, and C ( S A > S B > S C ). To maintain secure
levels of this system, we defines three different certificates C1 , C 2 and C 3
( C 3 > C 2 > C1 ). Different combinations of certificates grant different privileges.
Table 4. File access control policies
File

Trust-level

A

0.7 ≤ TL < 1.0

B

0.4 ≤ TL < 0.7

C

0.1 ≤ TL < 0.4

Certificates

History Records

C1 , C 2 , C 3

0.7 ≤ AVGTL

C1 , C 2

0.4 ≤ AVGTL

C1

0.1 ≤ AVGTL

A Novel Secure Interoperation System

813

Access control policies are defined in Table 4.There are three kinds of abnormal
events E1 , E2 , E3 and access control policy defines the lowest threshold of Tu ,
named Tu T , is 0.1000. Furthermore, E1 , E2 , E3 and their trust rate α1 , α 2 , α 3 are
described as follows:
Certificate_Error_Event: a user presents a needless certificate. Although it is valid,
it is not the right one that authentication server needed. This event may indicate a
certificate mistake of the user. The trust influence rate of this event is α1 =0.9.
Certificate_Invalidation_Event: a user presents an expired, damaged or revoked
certificate. This event may indicate an attempt to a network fraud. The trust influence
rate of it is α 2 =0.7.
Request_Overflow_Event: a user sends abnormally large amounts of requests. This
event may indicate an attempt to a Dos attack or a virus intrusion. The trust influence
rate of this event is α 3 =0.5.

Jimmy wants to access some files and sends a request with his identity certificate
to the authentication server. To demonstrate the secure mechanism of ASITL, we
assume three different possible results:
Jimmy is a malicious intruder: He does not have a valid certificate at all. From
the beginning, he sends expired or damaged certificates to the authentication server
continually. Certificate_Invalidation_Event is detected constantly and the occurrence
number of it increases fast. When the occurrence number reaches a threshold amount,
Request_Overflow_Event may be detected. Once Jimmy’s TL is below 0.1, he will be
forbidden by the system. And the final TL with his ID will be recorded in the history
record. If this result continually takes place more than five times, the user ID will be
recorded in the Black List.
Jimmy is a potentially dangerous user: He only has a valid certificate C1 , so his
privilege only can access the files of Class C. But his true intention is the more
sensitive files of Class A or Class B. In order to accumulate a good reputation, he
maintains a high TL ( 0.4 ≤ TL < 1.0 ) and AVGTL ( 0.4 ≤ AVGTL ) by validly accessing
Class C files with certificate C1 . However, once he presents an invalid certificate

C 2 or C3 , Certificate_Invalidation_Event is trigged and his TL decreases fast.
Although Jimmy has owned a high TL and a good history record by dealing with less
sensitive files C, his potential intention of more sensitive files A or B can never be
reached.
Jimmy is a normal user: He sends file request and corresponding valid certificate
to the authentication server. If his certificate is suited to the privilege of the request,
his TL and history records can satisfy the access control policies, he will pass the
authentication and his request will be responded by the application server.

6 Conclusions and Future Work
The ASITL, which can supply secure interoperations for multi security domains, is
guided by a set of desiderata for achieving a fine-grained access control system. In

814

L. Jin and Z. Lu

this paper, we introduce a variable value “trust-level” to reflect a user’s trust degree.
Based on this value, ASITL dynamically evaluates the user’s trust degree and
responds to the requestors through the judgment of a new suspicious event.
Furthermore, ASITL can be sure that all secure measures have been completed before
sensitive information is exchanged.
In future work, we would like to extend our work to some new areas. We need find
more efficient learning algorithms to shorten the responding period. Neural network
algorithms or similar methods might be involved. Moreover, we can further optimize
the cooperating abilities among modules in the system to enhance the performance of
the system. Finally, trust evaluating for the authentication server and users’ privacy
issues also need to be investigated.

References
1. Li, N., Mitchell J., Winsborough W.. RT: A role-based trust-management framework. In:
Proceedings of The 3th DARPA Information Survivability Conference and Exposition
(DISCEX III), Washington (2003) 201-212
2. Li Xiong, Ling Liu. PeerTrust: Supporting Reputation-Based Trust for Peer-to-Peer
Electronic Communities. IEEE Transactions on Knowledge and Data Engineering, Vol.16,
No.7 (2004) 843-857
3. Bhavani Thuraisingham,. Trust Management in a Distributed Environment. In: Proceedings
of the 29th Annual International Computer Software and Application Conference, vol.2
(2005) 561-572
4. Elisa Bertino, Latifur R. Khan, Ravi Sandhu. Secure Knowledge Management:
Confidentiality, Trust, and Privacy. IEEE Transactions on Systems, man, and Cybernetics.
Vol. 36, No.3 (2006) 429-438
5. Kilho Shin, Hiroshi Yasuda. Provably Secure Anonymous Access Control for
Heterogeneous Trusts. In: Proceedings of the First International Conference on Availability,
Reliability and Security (2006) 24-33

