P2P Mobile Multimedia Group Conferencing:
Combining SIP, SSM and Scalable Adaptive
Coding for Heterogeneous Networks
Thomas C. Schmidt1 , Matthias W¨ahlisch1,2 ,
Hans L. Cycon3 , and Mark Palkow4
1

3

HAW Hamburg, Dep. Informatik, Berliner Tor 7, D–20099 Hamburg, Germany
2
link-lab, H¨
onower Str. 35, D–10318 Berlin, Germany
FHTW Berlin, FB I, Allee der Kosmonauten 20–22, D–10315 Berlin, Germany
4
daViKo GmbH, Am Borsigturm 40, D–13507 Berlin, Germany
{t.schmidt,waehlisch}@ieee.org
hcycon@fhtw-berlin.de, palkow@daviko.com

Abstract. In this paper we present work in progress on extending multimedia conferencing standards to scalable, mobile multimedia group support based on SIP initiated Source Speciﬁc IP Multicast. We propose
extensions of SIP for negotiating SSM sessions. SIP protocol speciﬁcations
and semantics are compatibly extended without adding new SIP methods.
We will introduce a multimedia communication software with distributed
architecture as implementation reference. The software is built on a scalable video codec adaptive to heterogeneous network capacities.

1

Introduction

Today’s rapidly rising capabilities of devices and infrastructure, as well as an increasing social focus on ubiquitous infotainment will most likely establish mobile
multimedia communication as a day-to-day companion. Real–time video conferencing and group communication thereby are likely to face acceptance not only
as a particular, but a common service, raising questions of ease and quality of
the underlying Internet service layer. Here IP multicasting will be of particular importance to mobile environments, where users commonly share frequency
bands of limited and heterogeneous capacities.
In the present paper we address the issue of mobile multimedia group conferencing, exemplarily taking perspective on a VCoIP (Video Conferencing over IP)
software with a distributed, peer–to–peer architecture and its applications [1].
The software is build around a scalable video codec [2] which can serve heterogeneous network capacities. Such lightweight solution should receive support from
network layer multicast, restricting service to Source Speciﬁc Multicast communication for the sake of deployment simplicity. Source Speciﬁc Multicast (SSM)
[3], just released as an initial standard, is considered a promising improvement
of group distribution techniques.
Supported by the German BmBF within the Project Moviecast.
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 761–764, 2007.
c Springer-Verlag Berlin Heidelberg 2007

762

T.C. Schmidt et al.

However, up until now the session signalling standard SIP [4] is not prepared to
negotiate SSM group sessions. We therefore present a straight forward extension
of session initiation handshakes, suitable to establish SSM conferencing within
an uncoordinated peer–to–peer model. Compliant with standard unicast and
ASM transactions, we propose to solely add on protocol semantics without introducing new SIP methods. Our video conferencing system serves as a platform
for reference implementation. We further reference to work on session mobility
with the special focus on real-time multicast group communication. Conferencing parties request seamless real–time performance of a mobility aware group
communication service, thereby attaining the simultaneous roles of mobile multicast listener and source. Up until now only limited work has been dedicated to
multicast source mobility, which poses the more delicate problem [5,6].
In this paper we ﬁrst brieﬂy discuss the mobile multimedia group conferencing
problem and related work. In section 3 we present our SIP signalling scheme for
SSM group initiation. Section 4 is dedicated to a conclusion and an outlook.

2

The Mobile Multimedia Group Conferencing Problem
and Related Work

Multimedia session–based communication requires a number of initial negotiations to be accomplished. At ﬁrst, a caller requesting contact to one or several
partners will expect to address a personal identiﬁer, but establish the corresponding conference session with the devices currently in use by the callees. At
second, media and service data need to be identiﬁed as to meet capabilities of all
session members. Once established, sessions need to persist, while mobile devices
roam. Intermediate handovers thereby should unnoticeably comply with quality
of service measures for real-time communication.
SIP forms a multi–layered application protocol that interacts between components in a transactional way. Each (asynchronous) request initiates an open
transaction state and requires completion by at least one response. Group communication complicates this process signiﬁcantly. The basic SIP RFC only deﬁnes a minimal message exchange for Any Source IP layer multicast: A client
wishing to initiate or join into a multiparty conference sends its INVITE request
to a multicast group by employing the maddr attribute in the SIP VIA header.
Group members subsequently respond to the same group. The transactional nature of SIP is preserved in the sense that the inviting party interprets the ﬁrst
arriving OK as the regular completion, while interpreting further messages as
iterates. Consequently, SDP Negotiations on media parameters are displaced
out–of–band, since they are not achievable within one transaction. While Any
Source Multicast accounts for an open common addressing, SSM presupposes
source speciﬁc subscriptions. Hence it requires a distribution of newly joining
session member’s addresses, which otherwise remain unnoticeable to the group.
Group conferencing must be considered a generic term for a wide variety
of meanings in diﬀerent contexts [7]. Three relevant types are essentially considered: In loosely coupled conferences, no signalling relationship is maintained

P2P Mobile Multimedia Group Conferencing

763

by conference parties, while meta information are pre–shared out of band or
gradually learned by RTCP control streams. Tightly coupled conferences rely on
central managing for all participants. Finally, the fully distributed, infrastructureless multiparty model is built upon peer-to-peer signalling. Its scalability
can be largely enhanced by the use of multicast. Further on we will concentrate
on this fully distributed approach, including SSM at the signalling level.
Without optional proxy servers the SIP protocol architecture draws near the
general peer-to-peer model. Recent IETF work aims on extending the SIP framework to include fully distributed infrastructureless approaches [8]. Additional
work is needed to develop peer-to-peer group support within a SIP control plane.
Keeping in mind the routing complexity inherent to ASM, it is desirable to
rigorously restrict all signalling to unicast or SSM communication.

3

SIP Initiated SSM Group Conferences

Instantaneous establishment of a fully distributed peer–to–peer conference commonly follows an incremental setup: Some party will initiate a conference by
contacting one or several peers via unicast. Following an initial contact, signalling will then be turned to scalable multicast. Further on new parties will
join the conference by either calling or being called by an existing member. Such
group initiation scheme is neither covered by the current status of SIP, nor is
the employment of Source Speciﬁc Multicast for signalling. In order to enable
SSM, all dialogs must carefully provision addresses of newly arriving senders to
all current group members to allow for appropriate source speciﬁc subscriptions.
In detail protocol operations of the suggested extensions proceed as follows. A
caller, wishing to establish an SSM signalling session with a single peer, will initiate a regular INVITE request to callee’s unicast address. Eventually, after the
call setup has completed, either party will decide to turn the established session
to group communication. Heading for SSM, it will submit a re–INVITE, i.e.,
an INVITE carrying the previously established session identiﬁer, announcing its
desired multicast group address in the CONTACT ﬁeld of the SIP header. Concomitantly, the SIP protocol stack will submit a multicast source speciﬁc JOIN to
its underlying IGMP/MLD stack for subscribing to the group and peer’s source
address, which it had both learned from the previous SIP message exchange.
Any peer will identify the multicast address in the CONTACT ﬁeld, designed
to specify contacts for subsequent requests, and proceed along the new protocol
semantic for SSM. As ASM multicast address announcement will distinctively
appear in a separate VIA header, it will identify the presence of SSM, answer
with a regular unicast reply, but will submit a multicast JOIN to the announced
group and caller’s source address. This two–step process purposefully decouples
application layer session establishment and underlying multicast routing operations. Temporal progress in IP–layer multicast routing and SIP transactional
timers thereby remain independent for the sake of robustly layered protocol operations. Appropriate media session descriptions for SSM distribution of media
streams may be negotiated along the re–INVITE request.

764

T.C. Schmidt et al.

In multiparty environments, a newly arriving party will contact some member
of the established session via regular unicast INVITE. The callee might decide to
accept this request and forward it to its partner, thereby initiating unicast sessions among the three. Eventually the callee will decide to select multicast for the
conference signalling and will submit the corresponding re–INVITE procedure.
If a new source Snew contacts an established SSM group conference, it will
do so by inviting some member S. If S decides to accept the caller, it will
redistribute its INVITE to the SSM group and acknowledge the initial call by
placing the group address in the CONTACT header ﬁeld. All group members will
immediately add Snew to their source speciﬁc multicast ﬁlters. Snew subsequently
will learn about all group members from (unicast) OK–messages as needed for its
own multicast subscriptions. Note that call redistribution will remain a point–
to–point request of Snew at the application layer, but a transmission of source
S at the network layer compliant with previous SSM group establishment.

4

Conclusions and Outlook

In this paper we addressed the essential issues of multimedia group conferences,
negotiated by the Session Initiation Protocol and relying on Source Speciﬁc
Multicast distribution among equal peers. We introduced peer-to-peer signalling
extensions of SIP. Proceeding along the proposed incremental way, a callee will
never be required to communicate messages to more than one party and one
group. This scheme thus remains fully scalable and fairly transparent to group
sizes. Multicast initiation of media sessions may be led correspondingly. We also
reported on a peer-to-peer reference multimedia communication software with
temporal scalable video codec as core module and referred to routing methods
to adapt SSM to source mobility. This enables conferencing in networks with
heterogeneous capabilities. Implementations for real deployment are under way.

References
1. Palkow, M.: The daViKo homepage (2006) http://www.daviko.com.
2. Schwarz, H., Marpe, D., Wiegand, T.: Overview of the Scalable H.264/MPEG4–
AVC Extension. In: IEEE International Conference on Image Processing (ICIP
2006), Atlanta, GA, USA (2006)
3. Holbrook, H., Cain, B.: Source-Speciﬁc Multicast for IP. RFC 4607, IETF (2006)
4. Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A., Peterson, J., Sparks,
R., Handley, M., Schooler, E.: SIP: Session Initiation Protocol. RFC 3261, (2002)
5. Schmidt, T.C., W¨
ahlisch, M.: Multicast Mobility in MIPv6: Problem Statement.
IRTF Internet Draft – work in progress 01, MobOpts (2006)
6. Schmidt, T.C., W¨
ahlisch, M.: Morphing Distribution Trees – On the Evolution of
Multicast States under Mobility and an Adaptive Routing Scheme for Mobile SSM
Sources. Telecommunication Systems 33 (2006) 131–154
7. Rosenberg, J.: A Framework for Conferencing with the Session Initiation Protocol
(SIP). RFC 4353, IETF (2006)
8. Baset, S., Schulzrinne, H., Shim, E., Dhara, K.: Requirements for SIP–based Peerto-Peer Internet Telephony. Internet Draft - work in progress 00, IETF (2006)

