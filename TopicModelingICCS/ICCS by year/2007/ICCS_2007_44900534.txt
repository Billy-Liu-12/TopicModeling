Energy Eﬃcient Forwarding Scheme for Secure
Wireless Ad Hoc Routing Protocols
Kwonseung Shin, Min Young Chung, and Hyunseung Choo
School of Information and Communication Engineering
Sungkyunkwan University
440-746, Suwon, Korea +82-31-290-7145
{manics86,mychung,choo}@ece.skku.ac.kr

Abstract. Ad hoc networks can be used in scenarios such as military
and emergency relief, and have the advantage of establishing communications independently. Securing the ad hoc routing protocol is necessary
to prevent attacks in these applications. However, securing protocols for
mobile ad hoc networks presents challenges due to energy consuming
processes such as authentication of hosts and veriﬁcation of messages. In
this paper, we propose an eﬃcient forwarding mechanism for secure ad
hoc routing protocols, based on public key cryptography.
Keywords: Energy Eﬃciency, Public Key, and Secure Ad-hoc Routing.

1

Introduction

A mobile ad hoc network [1] is a set of wireless mobile hosts with the capability
of cooperatively establishing communications independently. Due to this advantage, ad hoc networks can be used in military and emergency relief scenarios. In
these and other ad hoc networking applications, security in the routing protocols
is necessary to guard against attacks, such as malicious routing misdirection [2].
However, securing protocols for mobile ad hoc networks [3,4,5] presents challenges due to energy consuming processes such as authentication of hosts and
veriﬁcation of messages. Therefore, to extend the lifetime of wireless mobile ad
hoc hosts with limited battery capacity, an energy eﬃcient secure ad hoc routing
protocol must be designed.
Most secure ad hoc routing protocols depending on the Certiﬁcate Authority
(CA) provide authentication, non-repudiation, and integrity to prevent attacks
such as modiﬁcation, impersonation, and fabrication. Authenticated Routing for
Ad Hoc Networks (ARAN) [6] is a secure ad hoc routing protocol using the CA.
Initially each node receives a certiﬁcate, and public key of the CA, from the
CA securely. In reactive routing protocols, when a source node wants to send a
packet to a destination node, it broadcasts a route request packet if it has no
route information about the destination node. However, in ARAN, the following
route discovery process is performed to provide secure routing:
Corresponding author.
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 534–537, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Energy Eﬃcient Forwarding Scheme for Secure Wireless

535

1. The source node signs a route request message using its private key and
appends its own certiﬁcate. Then, it broadcast the message to all nodes
within its radio frequency coverage area.
2. The one-hop neighbor of the source ignores the duplicate requests occurring
when the RREQ is received multiple times. Otherwise, it veriﬁes the certiﬁcate of the source by using the public key of the CA. Then it checks the
signature of the source by using the public key extracted from the certiﬁcate
of the source. If the veriﬁcation is successful, the intermediate node set up a
reverse path for the source, signs the RREQ, and appends its own certiﬁcate
to the message. Then, it rebroadcasts the RREQ.
3. Intermediate nodes that receive the RREQ verify the source and node that
has sent RREQ directly if the message has not already been received. Then,
they use the public keys extracted from two certiﬁcates attached in the
RREQ to validate the signatures. The intermediate nodes remove the signature and certiﬁcate of the node that sent RREQ directly if the veriﬁcation is
successful. Then, the nodes sign the message and rebroadcast it with their
own certiﬁcate.
4. Until the RREQ message is ﬂooded to all the nodes in the network, process
3 is repeated.
5. When the destination node eventually receives the RREQ, it creates a RREP
and unicasts it toward the source node with its signature and certiﬁcate. The
ﬂooding process of RREP is similar to the processes 2 and 3 described above.
ARAN provides end-to-end security using cryptographic certiﬁcates, thereby
preventing most attacks. However, appending the certiﬁcate each time each node
sends route request packets, which is ﬂooded to all nodes in the network, causes
considerable network overhead. In this paper, we propose an eﬃcient forwarding mechanism that reduces network overhead signiﬁcantly by decreasing the
frequency of included certiﬁcates.

2

The Proposed Scheme

In our scheme, each node that receives the route request packet that has a
certiﬁcate veriﬁes the certiﬁcate using the public key of the CA. Then, it stores
the certiﬁcate to its own repository when the veriﬁcation is successful. The sender
does not include its certiﬁcate in messages when other nodes in the network have
the certiﬁcate. On the other hand, it must include the certiﬁcate when it infers
that other nodes in the network do not have its certiﬁcate. The decision of
including certiﬁcate is made by states of nodes. Each node can be in on of two
states, a Participation state or a Non-Participation state.
Fig. 1 represents the two states of nodes. The detailed rules regarding to the
states are described as follows:
Non-Participation state: Nodes are initially in a Non-Participation state.
When each node initiates a new route, it includes its certiﬁcate before broadcasting the route request message. Then, it enters the Participation state. A

536

K. Shin, M.Y. Chung, and H. Choo

node sends a message with its certiﬁcate without changing state when the
message is not a route request message.
Participation state: When a node enters the Participation state, it starts a
timer TB . The node changes to the Non-participation state by stopping TB
when the TB expires. In the Participation state, a node does not include its
certiﬁcate when it sends a message, because it infers that the other nodes in
the network have its certiﬁcate. A node initiates timer TB when it broadcasts
a route request message to initiate a new route. However, it does not initiate
the timer when it broadcasts a route request message which is sent from
other nodes.
Initiate a route
sign (RREQ, SK)
append (RREQ, SIGN)
broadcast (RREQ)
start_timer (TB)

Initiate a route
sign (RREQ, SK)
broadcast (RREQ)
initiate_timer (TB)

NonParticipation

Participation
Send a message

Send a message
sign (message, SK)
append (message, SIGN)
send (message)

TB timeout

sign (message, SK)
send (message)

stop_timer (TB )

Fig. 1. The two states of nodes

Each node authenticates the sender using the public key of the CA and veriﬁes
the message using the public key included in the certiﬁcate when it receives the
route request message that has a certiﬁcate from the other node. When the
authentication and veriﬁcation is successful, the node maintains the certiﬁcate
in its repository. The certiﬁcate of a node in the repository expires when the
route request message from the node is not received during TM . Otherwise, the
certiﬁcate of the node will be maintained permanently, though the node does
not exist in the network. When a node receives a message that does not have
certiﬁcates for authentication, it searches the certiﬁcate needed to authenticate
the sender in its repository. When the certiﬁcate is found, it then veriﬁes the
signature of the received message without authentication of the sender, because
the certiﬁcate in its repository has already been veriﬁed. Obviously, TM must be
a larger value than TB , and be set by considering the variation of propagation
delay of route request messages that are caused by the movement of the node or
the variation of network traﬃc.
Although TM is set properly, some nodes may receive the message with insufﬁcient certiﬁcates for veriﬁcation. For example, the node that newly participates
in the network has no certiﬁcates of other nodes in the network. Therefore, the

Energy Eﬃcient Forwarding Scheme for Secure Wireless

537

new node is not able to verify the sender or message when it receives a message
that does not have complete set of certiﬁcates needed for veriﬁcation. In this
case, to obtain the certiﬁcates needed, the new node sends a Certiﬁcate REQuest (CREQ) message to neighbor node that has sent a message informing of
insuﬃcient certiﬁcates. The neighbor node is able to send certiﬁcates to the new
node because it has veriﬁed the message successfully. The CREQ is signed using
the private key of the sender, and the certiﬁcate is included only if the node is
in the Non-Participation state. The node that receives the CREQ, veriﬁes the
sender and CREQ message. Then, it sends the Certiﬁcate REPly (CREP) message, including certiﬁcates requested by the CREQ. The CREP is also signed
using a private key, and the certiﬁcate is included only if the sender of CREP
is in the Participation state. Therefore, the new node that has no certiﬁcate is
able to verify the message with insuﬃcient certiﬁcates securely.

3

Conclusion

In this paper, we proposed an energy eﬃcient forwarding scheme for secure ad
hoc routing protocols using the CA. It reduces network overhead by decreasing
the frequency of sending messages with certiﬁcates. By employing additional
repository in each node, the energy eﬃciency of proposed scheme is increased
signiﬁcantly compared to conventional ARAN, when the nodes in the network
initiate new routes frequently. In addition, the process of veriﬁcation of hosts is
also reduced, by eliminating the process of authentication that has already been
performed.
Acknowledgments. This research was supported by the MIC(Ministry of
Information and Communication), Korea, under the ITRC(Information Technology Research Center) support program supervised by the IITA(Institute of
Information Technology Assessment), IITA-2006-(C1090-0603-0046)

References
1. Corson, S., Macker, J.: Mobile Ad hoc Networking (MANET): Routing Protocol
Performance Issues and Evaluation Considerations. Network Working Group, Request for Comments: 2501. http://www.ietf.org/rfc/rfc2501.txt (1999)
2. Hu, Y-C., Perrig, A.: A survey of secure wireless ad hoc routing. Security & Privacy
Magazine, Vol. 2. IEEE (2004) 28-39
3. Papadimitratos, P., Haas, Z.J.: Secure Routing for Mobile Ad Hoc Networks. Proc.
SCS Communication Networks and Distributed Systems Modeling and Simulation
Conf. (2002)
4. Capkun, S., Hubaux, J.-P.: BISS: building secure routing out of an incomplete set
of secure associations. Proc. 2nd ACM Wireless Security (2003) 21-29
5. Zapata, M.G., Asokan, N.: Securing Ad Hoc Routing Protocols. Proc. ACM Workshop on Wireless Security (2002) 1-10
6. Sanzgiri, K., LaFlamme, D., Dahill, B., Levine, B.N., Shields, C., Belding-Royer,
E.M.: Authenticated Routing for Ad hoc Networks. Journal on Selected Areas in
Communications, Vol. 23. IEEE (2005) 598-610

