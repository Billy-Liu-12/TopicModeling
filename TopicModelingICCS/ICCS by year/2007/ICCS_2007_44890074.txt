Migration Control of Bio-entities in the Bio-network
Middleware
Xiangfeng Zhang1, Yongsheng Ding1,2, and Lihong Ren1
1

2

College of Information Sciences and Technology
Engineering Research Center of Digitized Textile & Fashion Technology, Ministry of
Education
Donghua University, Shanghai 201620, P.R. China
ysding@dhu.edu.cn

Abstract. Future Internet applications and services should be autonomous,
self-evolutionary, and adaptable to the change of different users and network
environments. Inspired by the resemble features between biological neuroendocrine-immune system and future Internet, we introduced some key principles and mechanisms to design a bio-network architecture and its middleware.
In this paper, asynchronous migration mechanism is discussed based on the
bio-network middleware. A credit-based migration control scheme is proposed. The simulation result shows that the scheme decreases the response
time of service bio-entities and reduces the migration frequency. As such, it
can ensure that the service bio-entities migrate effectively to provide services
for users and minimize their cost. And the desirable requirements of future
Internet are further satisfied.

1 Introduction
Internet is evolving into the core of the worldwide information infrastructure and a
single integrated platform for computing, data storage, communication, entertainment,
e-business, and so on [1]. Future Internet applications and services should be autonomous, self-evolutionary, and adaptable to dynamic network environments. Adopting
mobile agent technology is a prospective solution to design the applications and services [2, 3].
Large-scale biological systems have formed a great deal of mechanisms, which can
adjust themselves to adaptive and survivable environments. Biological systems are
composed of dispersive, autonomous, and mobile biological individuals with selfregulation, adaptability, evolution, and survivability. The biologically inspired information systems have been applied widely to engineering fields. Recent researches in
biology show that the biological neuroendocrine-immune system (NEIS) establishes
an intelligent system through complicated regulation [4, 5]. We have abstracted an
integrated computation framework from the NEIS and developed the NEIS-based bionetwork architecture that provides future Internet application environments [6]. The
agent-based simulation platform for the bio-network has also been presented [7]. The
bio-network can act as a network middleware for complex services and applications
on Internet and distributed networks.
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 74–81, 2007.
© Springer-Verlag Berlin Heidelberg 2007

Migration Control of Bio-entities in the Bio-network Middleware

75

In this paper, we discuss migration scheme of bio-entities in the bio-network. Section 2 introduces simply a bio-network middleware and discusses its asynchronous
migration mechanism. Section 3 proposes a credit-based migration control scheme.
Section 4 simulates the response time and the migration frequency of the bio-entities
with or without credit management service. Finally, Section 5 concludes the paper.

2 Macro Migration Model
2.1 Bio-network Middleware and Its Migration Service
The bio-network middleware consists of the bio-network platform, bio-entities and
their survivable environment. The bio-network platform is a software framework fully
implemented by Java language. The bio-network platform includes bio-network core
services and bio-network low-level functional modules established in a network node.
The bio-network core service layer provides a set of general-purpose runtime services
that are frequently used by bio-entities, such as lifecycle, bio-entities migration, evolution state management, credit management, sustainability management, and security
authentication service. The low-level functional modules manage low-level network
and system resource and allocate resources to bio-entities. A bio-entity is an autonomous mobile agent and analogous to an individual in the biological system. The bioentity survivable environment deploys and executes bio-entities and protects the node
from being attacked with some security policies.
The bio-network platform runs in an asynchronous distributed system on a network
node. Thus an overlay network environment is formed with wide-area bio-network
platforms [8]. Several nodes can form a community niche and the niche is a logically
defined area where the bio-entities in a community can learn from their surrounding
environment. A bio-entity can sense which bio-entities are in the community niche,
what services they perform, and which resources it can access to. This helps it create a
new application or join an existing community. Physical proximity among network
nodes is used to define a community niche in this study.
The bio-network platform provides the bio-entity migration service, which supports the migration behavior of the bio-entities. The migration behavior involves
determining where and when to migrate through considering the cost/benefit tradeoff
of migrating towards an adjacent community niche. The migration will be used to find
useful partner bio-entities and acquire new relationships.
2.2 Asynchronous Migration Mechanism
The bio-network platform reduces network communication throughput and enhances
the flexibility, extensibility, and tolerance of the network through a migration mechanism controlled by credits. A bio-entity migrates to another platform in order to provide services to meet user requests. It utilizes network resources after it pays some
credits. This method can reduce network delay and provide efficiently network services to obtain more credits from users. A bio-entity also establishes new relationships with other bio-entities after it migrates to another platform and these bio-entities
emerge some new services.

76

X. Zhang, Y. Ding, and L. Ren

The system transfers a bio-entity to a bit-blob using the object serialization method
and then sends it to other nodes. The bio-entity may be resumed by the object deserialization method when the system wants to reuse it. The sustainability management service allows a programmer to store the bio-entity’s state into a storage device
so that the bio-entity is executed later. It is responsible for storing the serialized codes
and states of the bio-entity into the storage material, such as hard disk, to support nonsustainable connection. When a bio-entity waits for non-connection resources, the
sustainability management service ensures the lowest costs.
A bio-entity autonomously distributes on a bio-network node. Its behavior is not
controlled by network users or other bio-entities. Its migration behavior includes
where to migrate, when to migrate, and costs and benefits. It must pay credits for
migration and it will die if it has not enough credits. The migration service adopts
synchronous or asynchronous migration mechanism (AMM). The bio-entity calls
migration service and chooses the migration mechanism. As to synchronous migration
mechanism, the platform will immediately execute the migration request from the
bio-entity. It will send error information to the bio-entity if the destination node is
unreachable. The bio-entity decides how to do next. As to AMM, the platform does
not immediately execute the migration request, but insert it into the sequence. The
Send AMM request from
a bio-entity in source node
Insert it into asynchronous migration queue
Deal with the migration request

Deny migration

No

Migrate?
Yes

No

The destination
node accepts it?
Yes
Agree to migration

No

It can reach the
destination node ?

The replication bio-entity migrates
No
Successful migration?
Yes
Execute the replication one,
Delete the original one

Fig. 1. AMM for a bio-entity

Migration Control of Bio-entities in the Bio-network Middleware

77

cost of credits is different using these two mechanisms. AMM is adopted when the
following case happens:
(1) The chosen destination node is not reached;
(2) The bio-entity is off-line mobile user;
(3) The bio-entity waits a return off-line user on ever-connective node.
Taking AMM as an example, we discuss the migration mechanism based on the
credit as shown in Fig. 1. After a bio-entity migrates to asynchronous migration request queue and its migration request is dealt with, the migration service decides
whether the bio-entity can migrate according to credits information and migration
control algorithm, see section 3.1. Then the migration service judges whether the
destination node accepts the request. If the destination node agrees to migration, the
platform judges whether it is reached. This causes network delay and reduces quality
of service, and thus the bio-entity has to pay many credits for the system resources.
Hence, it should balance its cost and benefit. If the destination node is reachable, a
replication one migrates to it. After its successful migration, the platform executes the
replication one in the destination node and deletes the original one.

3 Credit-Based Migration Control Scheme
Each bio-entity and network resource, such as CPU, memory, and bandwidth, has its
own credit-control scheme. A service request (such as a user or a bio-entity) has its
own payment scheme, including reward or punishment for acquired service based on
quality of service. One or more algorithms implement a bio-entity’s state transfer. A
set of parameters, such as weights, and a threshold, are included in an algorithm. Take
migration operation as an example, we consider how a bio-entity changes from Dangling to Migrating state. The parameters of migration behavior include:
1) MigrationBenefit (MB). MB is the benefit achieved by a bio-entity when the
bio-entity provides service with lower cost and network delay. It is usually a position
value.
2) MigrationCost (MC). MC is the cost for either network resource used by the
bio-entity or higher resource cost of the destination node. It is a negative value.
3) MigrationRisk (MR). MR includes some uncertain factors. It may be a negative
value.
4) MigrationAsynchronous (MA). MA means that the bio-entity adopts the AMM.
It may be a negative value.
5) MigrationThreshold (MT). MT determines whether a bio-entity migrates or not.
The bio-entity executes migration operation if the inequation (1) can be met,

(MB MC MR MA) ⋅ (w1 w2 w3 w4 )T ≥ MT

(1)

where w1 , w2 , w3 , and w4 are the weights of MB , MC , MR , MA , respectively.
The bio-entity has to pay credit units for environment sensing when the AMM is
adopted. The above migration behavior is an incomplete list and a programmer can
add other behaviors to it.

78

X. Zhang, Y. Ding, and L. Ren

A request user gives credits to the bio-entities after it evaluates the acquiring service. This method helps him to decide which bio-entity is worth trusting. We can
decide if a bio-entity is reliable based on TrustCredit.
The request user return a defray message with a collaboration record and a trust
value α ( −

1
≤ α ≤ 1 ). The trust value α increases for a reward or decreases for a
2

penalty. A bio-entity adjusts the value with its interaction partners based on the level
of user satisfaction or preference. Suppose a value α , the TrustCredit value V is
updated according to the formula (2),

V

+

⎧V − (1 − α 2 ) + α 2 , α ≥ 0
⎪
=⎨ −
1
), α < 0
⎪V ( 2 −
1+ α
⎩

(2)

where, V − and V + are the former and new TrustCredit value, respectively
( V − ∈ [0,1] ). TrustCredit value increases with a reward for a high preference and
decreases with a penalty for a low preference. The formula (2) ensures that the decrement is faster while the increment is slower. The value α belongs to the interval

[0.5, 1] . Hence, V + belongs to the interval [ V − , 1] when α is larger than or equal
to 0, and V + belongs to the interval [0, V − ] when α is less than 0.

4 Simulation and Analysis
4.1 Simulation Model
In our previous work [7], we have implemented the prototype of bio-network service
simulation platform, including software, general objects and simulators using Java
language. It supports pluggable functions and provides a general easy-to-use programming API. It contributes to implement our approach in real deployment with
minimal modifications. The simulation experiment is constructed on Windows 2000
operation system with Intel Pentium 4 processor (2.4 GHz) and 512 MB RAM.
(1) Initial network topology and user requests: A simulated network is a 18 × 12
topology network with 216 network nodes, and bio-entities are deployed on the platforms. The platforms are initialized on each network node. There are two kinds of
bio-entities in the simulation: users request bio-entities and service bio-entities. Request bio-entities do not execute biological behaviors and are arbitrary on the platform. A user sends a request per second. Service bio-entities who are close to user
requests have priority.
(2) Behavior mechanisms and credit parameters: In our simulation, a bio-entity has
some behaviors, such as creation, service provided, replication, migration, and death,
while it has not mutation and crossover behaviors. A user request pays 20 credit units
for a service bio-entity. And a service bio-entity can provides 10 services per second

Migration Control of Bio-entities in the Bio-network Middleware

79

towards a user request. But it need pay 150 credit units for using the resources on the
platform, such as CPU, storage, and bandwidth. It should pay its platform 100 credit
units for replicating itself and transfer 20,000 credit units to its child bio-entity. It also
should pay its platform 200 credit units in order to migrate from the platform to another one.
4.2 Results and Analysis
The bio-network produces initially 60 user requests and 20 service bio-entities. Every
service bio-entity has 20,000 credit units. Credit management service asks community
niche sensing service to check the resource cost. It also checks resource utilization of
each bio-entity on the same platform. And it deducts resource cost from the current
credit card of a bio-entity. If the card has not enough credits for resource utilization,
credit management service notifies evolution state management service will destroy
the bio-entity.

The Response Time (ms)

The Response Time (ms)
Simulation Time (min.)

Simulation Time (min.)

Fig. 2. The response time of the service bio-entity with different environments. (a) without credit
management service; (b) with credit management service.

We simulate two kinds of environments with and without credit management service. The request response time and migration frequency of service bio-entities
change with the simulation time are as shown in Fig. 2 and Fig. 3.
Without credit management service, the credit flow does not exist among bioentities so that a request can only be handled by its nearest bio-entities. The bioentities can only provide service and migrate. The requests are executed more quickly
with credit management service than without credit management service in Fig. 2.
Credit management service optimizes resource allocation and ensures that service bioentities are responsible for their behaviors, migrate and replicate according to the
number of user requests. The response time decrease quickly with credit management
service. From Fig. 3, we can see that the useless migration decreases with credit management service because the service bio-entities will execute carefully their behavior
in view of their cost.

80

X. Zhang, Y. Ding, and L. Ren

The Frequency of Migration per Min.

The Frequency of Migration per Min.

Simulation Time (min.)

Simulation Time (min.)

Fig. 3. Migration frequency of the service bio-entity under different simulation environments.
(a) without credit management service; (b) with credit management service.

5 Conclusions and Future Work
Inspired by mobile agent technology, we discuss asynchronous migration mechanism
of a bio-entity on the bio-network. We propose the migration control scheme based on
credit mechanisms. Experiments results show that the proposed scheme ensures that
the bio-entities migrate to a neighbor platform to provide services effectively and use
their credits reasonably. Network services can adapt and evolve to meet user requests.
The next work is on issue about implementing other services of the bio-network
middleware to perfect the bio-network architecture. In addition, in terms of network
services and applications, more experiments will be designed to evaluate the performance of the middleware.

Acknowledgments
This work was supported in part by Program for New Century Excellent Talents in
University from Ministry of Education of China (No. NCET-04-415), the Cultivation
Fund of the Key Scientific and Technical Innovation Project from Ministry of Education of China (No. 706024), International Science Cooperation Foundation of Shanghai (061307041) and Specialized Research Fund for the Doctoral Program of Higher
Education from Ministry of Education of China (No. 20060255006).

References
1. McIlraith, S. A., Son, T. C., Zeng, H.: Semantic web services. IEEE Intelligent Systems. 2
(2001) 46-53
2. Chen, W. S. E., Hu, C. L.: A mobile agent-based active network architecture for intelligent
network control. Information Sciences. 1-2 (2002) 3-35
3. Kotz, D., Gray, R. S.: Mobile agents and the future of the Internet. ACM Operation Systems
Review. 3 (1999) 7-13

Migration Control of Bio-entities in the Bio-network Middleware

81

4. Besedovsky, H. O., Rey, A. del.: Immune-neuro-endocrine interactions: Facts and hypotheses. Endocrine Reviews. 1 (1996) 64-102
5. Vargas, P., Moioli1, R., Castro, L. N. de, Timmis, J., Neal, M., Zuben, F. J. Von.: Artificial homeostatic system: A novel approach. ECAL 2005, LNAI 3630. (2005) 754-764
6. Ding, Y.-S., Gao, L., Ruan, D.: On the mechanism of communication of ecological network-based grid middleware for service emergence. Information Sciences. in press
7. Ding, Y.-S.: A new scheme for computational intelligence: Bio-network architecture (in
Chinese). submitted
8. Zhang, X., Zhang, Q., Zhang, Z., Song, G., Zhu, W.: A construction of locality-aware overlay network: Overlay and its performance. IEEE Journal of Selected Areas in Communications. 1 (2004) 18-28

