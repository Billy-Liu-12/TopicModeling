A Security Speciﬁcation Library
with a Schemaless Database
Shoichi Morimoto1 and Jingde Cheng2
1

School of Industrial Technology, Advanced Institute of Industrial Technology
1-10-40, Higashi-oi, Shinagawa-ku, Tokyo, 140-0011, Japan
morimoto-syoichi@aiit.ac.jp
2
Department of Information and Computer Sciences, Saitama University
255, Shimo-okubo, Sakura-ku, Saitama, 338-8570, Japan
cheng@aise.ics.saitama-u.ac.jp

Abstract. In order to develop highly secure information systems, it is
important to make a security speciﬁcation of the systems, although it
requires heavy labor. Thus database technologies have been applied to
software engineering and information security engineering for practical
reuse of security speciﬁcations. However, because the speciﬁcations do
not have ﬁxed layout, it is diﬃcult to develop a ﬂexible and useful library
for the documents with conventional database technologies. Therefore,
this paper proposes a security speciﬁcation library with a schemaless native XML database. Users of the library can directly store and manage
security speciﬁcations with any layout. Consequently, the library mitigates the labor for making security speciﬁcations.
Keywords: Common criteria, Digital pattern processing.

1

Introduction

Because quality of security speciﬁcations in development process are directly
and closely related to security of information systems, it is desirable, but diﬃcult, to develop a high quality security speciﬁcation. Thus, we have developed
a security requirement management database with a relational database, which
supports development of secure information systems [1,4]. Users of the database
can eﬀectively manage and reuse security requirements in security speciﬁcations.
However, the speciﬁcation documents severally have various styles and structures, because there are many software development processes and developers
have to use the styles and structures suitable for each development process.
Thus, it is diﬃcult to develop a ﬂexible and useful database for the purpose
with relational or object-oriented databases that need to deﬁne ﬁxed structure.
Therefore, in this paper we rebuild the security requirement management database with a schemaless native XML database. Users of the improved database can
freely store security speciﬁcations without consideration to document structure
after converting them into XML documents. Consequently, it mitigates labor making high quality security speciﬁcations and developing highly secure information
systems.
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 890–893, 2007.
c Springer-Verlag Berlin Heidelberg 2007

A Security Speciﬁcation Library with a Schemaless Database

2

891

The Security Requirement Management Database

The security requirement management database, named ISEDS, can manage
data of speciﬁcations which are designed in conformity to ISO/IEC 15408 common criteria [1, 4]. The criteria deﬁne security functional requirements which
should be applied to validate an information system [2]. Applicants who apply
to obtain the evaluation of ISO/IEC 15408 have to describe and submit a security speciﬁcation of their system. The security speciﬁcation, called security
target, must describe the category of the target system which is evaluated (target of evaluation, TOE for short), threats which are anticipated in the TOE,
security objectives to oppose the threats, security functional requirements for
achievement of the objectives, and security functions for implementation of the
requirements. ISEDS implements the components of security targets and their
interrelationships with a relational database.

3

Improvement of the Database

We reimplemented ISEDS with NeoCore XML Management System (XMS) [7],
which is a native XML database and free for development only. Its advantage
is high performance and low resource utilization because of its patented Digital
Pattern Processing (DPP) technology. With DPP, XMS describes XML documents and their component contents in numeric ﬁnite-width ﬁelds. This ensures
that performance remains unaﬀected by the length of tag names, element content, or document hierarchy. To further improve performance, DPP enables XMS
to “index” every tag, element, and combination, ensuring extremely fast searches
Security
Specifications

PDF
PDF
PDF
Documents
Documents
Documents

PDF
MSPDF
Office
Documents
Documents
Documents

Convert

Interface for
storing
PDF
PDF
XML
Documents
Documents
Documents

Store

Interface for
Retrieve retrieval
XMS
Display

ThePDF
Other
PDF
Format
Documents
Documents
Documents

Fig. 1. The security requirement management database with XMS

892

S. Morimoto and J. Cheng
<Part>
<H1>

Hit !!
3 Security Environment

Pursue
below.

<H1>8 Rationale</H1>
…
<Sect>
<H3>Security Objectives Rationale</H3>
<P>T.LBAC Rationale T.LBAC (Unauthorised Access
to Labelled Information) is directly countered by
O.ACCESS.LBAC, which ensures …. </P>

<Sect>
<H3>
Threats
<P>

Relationship between threats
and security objectives

As per [DPP, 3.2] with the following addition:
<P>
Threats countered by the TOE
<Sect>
<H4>

Extract
the next.

Hit !!

Threat name

T.LBAC
<P>

<Table>
　<TR>
<TH>Security Functional Requirement</TH>
<TH>Security Function</TH>
</TR>
　<TR>
<TH>FAU_GEN.1</TH>
<TD>Audit data generation</TD>
<TD>AU.1, AU.2, AU.3, AU.9</TD>
</TR>

Threat content

Relationship between
requirements and functions

Unauthorised Access to Labelled Information….

Fig. 2. The retrieval function behavior

on tags and data. The users of XMS can ﬂexibly retrieve XML documents with
XQuery, XPath, and FLWR expressions [6]. The most important merit is that
XMS does not require deﬁning a schema. That is, XMS can directly store XML
documents without a schema. Because these advantages can solve the problem
of ISEDS, we adopted XMS.
The improved ISEDS can store any layout and format document. Users must
ﬁrst convert security speciﬁcations into XML documents. Speciﬁcations, perhaps, are generally written by MS Word, Excel, OpenOﬃce, or PDF. Adobe
Acrobat can convert PDF ﬁles into XML documents. Oﬃce documents can do
likewise. Somehow the other format documents are also convertible into XML.
After the conversion, the users can store them into ISEDS via the user interface.
The interface appends metadata to the XML documents and stores them into
XMS. The metadata record timestamps, modiﬁcation times, source ﬁle passes,
identiﬁcations, and tag names of document captions for retrieval. One can easily retrieve, update and delete the stored data via the other interface (Fig. 1).
Because each XML document tree in ISEDS is diﬀerent, there are no ﬁxed passes
for retrieval. Therefore, ISEDS retrieval function distinguishes each component
in security speciﬁcations by caption names of security targets. For example, anticipated threats are described in the chapter “Security Environment.” When
retrieving threats, the function ﬁrstly searches for a tag which has the text
“Security Environment” by utilizing the metadata. After ﬁnding the tag, it pursues the following tags and records the threat names and contents, cf., Fig. 2.

A Security Speciﬁcation Library with a Schemaless Database

893

Similarly, the relationships are mentioned in the chapter “Rationale” by tables
or texts. Security targets give each component an abbreviation, e.g., T.xxx,
O.xxx. The preﬁx ‘T.’ denotes threats and the preﬁx ‘O.’ denotes security objectives. Thus, when retrieving relationships, the function records abbreviations
of threats, security objectives, security requirements, and security functions beforehand. After the preparatory pursuit, the function reads relationships in the
tables or texts leaning on the marks, i.e., each abbreviation name (Fig. 2).
Thus, the improved ISEDS can provide the functions equivalent to former all
functions by XMS and the interfaces. Moreover, response performance of the
retrieval was remarkably improved by the DPP technology of XMS.

4

Concluding Remarks

In order to apply eﬀectively database technologies to information security engineering, we have redesigned and redeveloped the security requirement management database with a schemaless native XML database. Since users of the
improved database do not need to deﬁne a schema, the former problem of the
security requirement management database was solved and its performance was
also improved. The users can collect, manage, and utilize security speciﬁcations
with any layout, format, and structure. The speciﬁcations which are described
with the database can be considered to be the security speciﬁcation certiﬁed by
ISO/IEC 15408. This fact is veriﬁable by our formal veriﬁcation technique [3,5].

References
1. Horie, D., Morimoto, S., and Cheng, J.: A Web User Interface of the Security Requirement Management Database Based on ISO/IEC 15408, Proceedings of the
International Conference on Computational Science (ICCS’06), Lecture Notes in
Computer Science, Vol. 3994, Springer-Verlag (2006) 797–804
2. ISO/IEC 15408 standard: Information Technology - Security Techniques - Evaluation Criteria for IT Security (1999)
3. Morimoto, S. and Cheng, J.: Patterning Protection Proﬁles by UML for Security
Speciﬁcations, Proceedings of the International Conference on Computational Intelligence for Modelling, Control and Automation and International Conference
on Intelligent Agents, Web Technologies and Internet Commerce Vol-2 (CIMCAIAWTIC’05), IEEE-CS (2005) 946–951
4. Morimoto, S., Horie, D., and Cheng, J.: A Security Requirement Management
Database Based on ISO/IEC 15408, Proceedings of the International Conference
on Computational Science and its Applications (ICCSA’06), Lecture Notes in Computer Science, Vol. 3982, Springer-Verlag (2006) 1–15
5. Morimoto, S., Shigematsu, S., Goto, Y., and Cheng, J.: Formal Veriﬁcation of Security Speciﬁcations with Common Criteria, Proceedings of the 22nd Annual ACM
Symposium on Applied Computing (SAC’07), ACM (2007) 1506–1512
6. World Wide Web Consortium: XQuery 1.0 and XPath 2.0 Formal Semantics,
http://www.w3.org/TR/xquery-semantics/
7. Xpriori LLC: NeoCore XMS, http://www.xpriori.com/

