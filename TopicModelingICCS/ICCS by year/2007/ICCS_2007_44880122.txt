Real-Time Simulation of Surface Gravity Ocean
Waves Based on the TMA Spectrum
Namkyung Lee1 , Nakhoon Baek2, , and Kwan Woo Ryu1
1

Dept. of Computer Engineering, Kyungpook National Univ., Daegu 702-701, Korea
namklee@hotmail.com,kwryu@knu.ac.kr
2
School of EECS, Kyungpook National Univ., Daegu 702-701, Korea
oceancru@gmail.com
http://isaac.knu.ac.kr/~hope/tma.htm
Abstract. In this paper, we present a real-time method to display ocean
surface gravity waves for various computer graphics applications. Starting
from a precise surface gravity model in oceanography, we derive its implementation model and our prototype implementation shows more than 50
frames per second on Intel Core2 Duo 2.40GHz PC’s. Our major contributions will be the improvement on the expression power of ocean waves
and providing more user-controllable parameters for various wave shapes.
Keywords: Computer graphics, Simulation, Ocean wave, TMA.

1

Introduction

Realistic simulation of natural phenomena is one of the interesting and important issues in computer graphics related areas including computer games and
animations. In this paper, we are focusing on the ocean waves, for which we
have many research results but not a complete solution yet[1].
Waves on the surface of the ocean are primarily generated by winds and
gravity. Although the ocean wave includes internal waves, tides, edge waves and
others, it is clear that we should display at least the surface gravity waves on the
computer screen, to ﬁnally represent the ocean. In oceanography, there are many
research results to mathematically model the surface waves in the ocean. Simple
sinusoidal or trochoidal expressions can approximate a simple ocean wave. Real
world waves are a comprised form of these simple waves, and called wave trains.
In computer graphics, we can classify the related results into two categories.
The ﬁrst one uses ﬂuid dynamics equations in a similar way used in the scientiﬁc
simulation ﬁeld. We have a number of results with the capability of obtaining
realistic animations of complex water surfaces[2,3,4,5,6]. However, these results
are hard to apply to large scenes of waters such as oceans, mainly due to their
heavy computation.
The other category is based on the ocean wave models from the oceanography,
and consists of three approaches. The ﬁrst group uses the Gerstner swell model.
Fournier[7] concentrated on the shallow water waves and surf along a shore line.
He started from parametric equations and added control parameters to simulate
Corresponding author.
Y. Shi et al. (Eds.): ICCS 2007, Part II, LNCS 4488, pp. 122–129, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Real-Time Simulation of Surface Gravity Ocean Waves

123

various shapes of shallow water waves, but not for the large-scale ocean scenes
and/or deep-depth ocean waves. More complex parametric equations to present
the propagation of water waves had been introduced by Gonzato[8]. This model
is well suited for modeling propagating water of wave front, but its equations
are too complex for large-scale ocean waves.
Another group regards the ocean surface as a height ﬁeld with a prescribed
spectrum based on the experimental observations from oceanography. Mastin[9]
introduced an eﬀective simulation of wave behavior using Fast Fourier Transform(FFT). The height ﬁeld is constructed through inverse FFT of the frequency
spectrum of the real world ocean waves. It can produce complex wave patterns
similar to real world ocean waves. Tessendorf[10] showed that dispersive propagation could be managed in the frequency domain and that the resulting ﬁeld
could be modiﬁed to yield trochoid waves. However, the negative aspect of FFT
based methods is homogeneity: we cannot handle any local properties such as
refraction, reﬂection, and others.
The last one is the hybrid approach: The spectrum synthesized by a spectral
approach is used to control the trochoids generated by the Gerstner model.
Hinsinger[11] presented an adaptive scheme for the animation and display of
ocean waves in real time. It relied on a procedural wave model which expresses
surface point displacements as sums of wave trains. In this paper, we aim to
construct an ocean wave model with the following characteristics:
• Real time capability: They usually want to display a large scale ocean
scene and some special eﬀects may be added to the scene. So, we need to
generate the ocean wave in real time.
• More user-controllable parameters: We will provide more parameters
to generate variety of ocean scenes including deep and shallow oceans, windy
and calm oceans, etc.
• Focusing on the surface gravity waves: Since we target the large-scale
ocean, minor details of the ocean wave are not our major interest. In fact,
the minor details can be easily super-imposed to the surface gravity waves,
if needed.
In the following sections, we will present a new hybrid approach to ﬁnally get
a real-time surface gravity wave simulation. Since it is a kind of hybrid approach,
it can generate large scale oceans without diﬃculty, and works in real time, to be
suﬃ- ciently used with computer generated animations or other special eﬀects.
Additionally, we use a more precise wave model and have more controllable parameters including depth of sea, fetch length, wind speed, and so on, in comparison
with previous hybrid approaches. We will start from the theoretical ocean wave
models in the following section, and build up our implementation model. Our
implementation results and conclusions will be followed.

2

The Ocean Wave Model

The major generating force for waves is the wind acting on the interface between
the air and the water. From the mathematical point of view, the surface is made

124

N. Lee, N. Baek, and K.W. Ryu

up of many sinusoidal waves generated by the wind, and they are traveling
through the ocean. One of the fundamental models for the ocean wave is the
Gerstner swell model, in which the trajectory of a water particle is expressed as
a circle of radius r around its reference location at rest, (x0 , z0 ), as follows[11]:
x = x0 + r sin(ωt − kx0 )
z = z0 + r cos(ωt − kz0 ),

(1)

where (x, z) is the actual location at time t, ω=2πf is the pulsation with the frequency f , and k=2π/λ is the wave number with respect to the wave length of λ.
Equation (1) shows a two-dimensional representation of the ocean wave, assuming that the x-axis coincides to the direction of wave propagation. The surface of
an ocean is actually made up of a ﬁnite sum of these simple waves, and the height
z of the water surface on the grid point (x, y) at time t can be expressed as:
n

Ai cos (ki (x cos θi +y sin θi )−ωi t+ϕi ) ,

z(x, y, t) =

(2)

i

where n is the number of wave trains, Ai is the amplitude, ki is the wave number,
θi is the direction of wave propagation on the xy-plane and ϕi is the phase. In
Hinsinger[11], they manually selected all these parameters, and thus, the user
may meet diﬃculties to select proper values of them.
In contrast, Thon[12] uses a spectrum-based method to ﬁnd some reasonable
parameter sets. They used the Pierson-Moskowitz(PM) model[13], which empirically expresses a fully developed sea in terms of the wave frequency f as follows:
EPM (f ) =

0.0081 g 2 − 54
e
(2π)4 f 5

fp
f

4

,

where EPM (f ) is the spectrum, g is the gravity constant and fp = 0.13 g/U10 is
a peak of frequency depending on the wind speed U10 at a height of 10 meters
above the sea surface.
Although Thon used the PM model to give some impressive results, the PM
model itself assumes the inﬁnite depth of the ocean and thus may fail to the
shallow sea cases. To overcome this drawback, the JONSWAP model and TMA
model are introduced. The JONSWAP(Joint North Sea Wave Project) model[14]
is developed for fetch-limited seas such as North sea and expressed as follows:
EJONSWAP (f ) =

α g 2 − 54
e
(2π)4 f 5

fp
f

4

−

· γe

f /fp −1
2

2σ

,

where α is the scaling parameter, γ is the peak enhancement factor, and σ is
evaluated as 0.07 for f ≤ fp and 0.09 otherwise. Given the fetch length F , the
frequency at the spectral peak fp is calculated as follows:
fp = 3.5

g2F
3
U10

−0.33

.

Real-Time Simulation of Surface Gravity Ocean Waves

125

The Texel, Marson and Arsole(TMA) model[15] extends the JONSWAP model
to include the depth of water h as one of its implicit parameters as follows:
ETMA (f ) = EJONSWAP (f ) · Φ(f ∗ , h),
where Φ(f ∗ , h) is the Kitaigorodoskii depth function:
Φ(f ∗ , h) =

1
K
1+
,
s(f ∗ )
sinh K

with f ∗ = f h/g, K = 2(f ∗ )2 s(f ∗ ) and s(f ∗ ) = tanh−1 [(2πf ∗ )2 h].
The TMA model shows good empirical behavior even with the water depth of 6
meters. Thus, it is possible to represent the waves on the surface of lake or smallsize ponds, in addition to the ocean waves. Additionally, it also includes the fetch
length as a parameter, inherited from the JONSWAP model. Thus, the expression
power of the TMA model is much increased in comparison with the PM model
previously used by other researchers. We use this more improved wave model to
ﬁnally achieve more realistic ocean scenes with more user-controllable parameters.

3

The Implementation Model

To derive implementation-related expressions, we need to extend the spectrum
of TMA model to two dimensional world as follows[14]:
E(f, δ) = ETMA (f )D(f, δ),
where D(f, δ) is a directional spreading factor that weights the spectrum at angle
δ from the downwind direction. The spreading factor is expressed as follows:
D(f, δ) = Np−1 cos2p

δ
2

,

where p = 9.77(f /fp)μ , Np = 21−2p π · Γ (2p + 1)/Γ 2(p + 1) with Euler’s Gamma
function Γ and
4.06, if f < fp
.
μ=
−2.34, otherwise
For more convenience in its implementation, we will derive some evaluation
functions for the parameters including frequency, amplitude, wave direction,
wave number and pulsation. The frequency of each wave train is determined
from the peak frequency fp and a random oﬀset to simulate the irregularity of
the ocean waves. Thereafter, the pulsation and wave number is naturally calculated by their deﬁnition.
According to the random linear wave theory[16,17,18,19,20], directional wave
spectrum E(f, δ) is given by
E(f, δ) = Ψ (k(f ), δ) · k(f )

dk(f )
,
df

(3)

126

N. Lee, N. Baek, and K.W. Ryu

where k(f ) = 4π 2 f 2 /g and Ψ (k(f ), δ) is a wave number spectrum. The second
and the third term in Equation (3) can be computed as:
k(f )

dk(f )
32 π 2 f 3
.
=
df
g2

This allows us to re-write Equation (3) as follows[17]:
E(f, δ) = Ψ (k(f ), δ)

32 π 2 f 3
.
g2

From the random linear wave[17,19], the wave number spectrum Ψ (k(f ), δ) can
be approximated as:
β
A(f )2 ,
Ψ (k(f ), δ) =
4π 2
where β is a constant. Finally, the amplitude A(f ) of a wave train is evaluated
as:
E(f, δ) g 2
ETMA (f ) D(f, δ) g 2
A(f ) =
=
.
3
8f β
8f 3 β
Using all these derivations, we can calculate the parameter values for Equation (2). And then, we evaluate the height of each grid point (x, y) to construct
a rectangular mesh representing the ocean surface.

4

Implementation Results

Figures 1, 2 and 3 are some outputs from the prototype implementation. As shown
We implemented the ocean wave generation program based on the TMA model
presented in the previous section. It uses plain OpenGL library and does not use
any multi-threading or hardware-based acceleration techniques. At this time, we
focused on the expression power of our TMA model-based implementation, and
thus, our prototype implementation lacks some acceleration or optimization factors. Even though, it shows more than 50 frames per second on a PC with Intel

(a) wind speed 3m/s, water depth 5m (b) wind speed 3m/s, water depth 100m
Fig. 1. Ocean waves with diﬀerent water depths: Even with the same wind speed, diﬀerent
water depths result in very diﬀerent waves. We use the fetch length of 5km for these images.

Real-Time Simulation of Surface Gravity Ocean Waves

127

(a) wind speed 3m/s, water depth 100m (b) wind speed 6m/s, water depth 100m
Fig. 2. Ocean waves with diﬀerent wind velocities: Changes in wind speed generate more
clam or more choppy waves. The fetch length of 10 km is used for each of these images.

(a)

(b)

(c)

(d)

(e)

(f)

(g)

(h)

(i)

(j)

(k)

(l)

Fig. 3. An animated sequence of ocean waves

128

N. Lee, N. Baek, and K.W. Ryu

Core2 Duo 6600 2.40GHz processor and a GeForce 7950GT based graphics card.
We expect that the frame rate will be much better in the next version.
In Figure 1, we can control the depth of the ocean to show very diﬀerent
waves even with the same wind speed and the same fetch length. Especially, the
changes in the water depth are acceptable only for the TMA model, while the
previous PM model cannot handle it. Figure 2 shows the eﬀect of changing the
wind speed. As expected, the high wind speed generates more choppy waves.
Figure 3 is a sequence of images captured during the real time animation of the
windy ocean. All examples are executed with mesh resolution of 200 × 200. More
examples are in our web page, http://isaac.knu.ac.kr/~hope/tma.htm.

5

Conclusion

In this paper, we present a real-time surface gravity wave simulation method,
derived from a precise ocean wave model in the oceanography. We started from a
precise ocean wave model of TMA model, which has not been used for a graphics
implementation, at least to our knowledge. Since we used a more precise ocean
wave model, users can control more parameters to create various ocean scenes.
The two major improvements of our method in comparison with the previous
works will be:
• Enhanced expression power: Our method can display visually plausible
scenes even for shallow seas.
• Improved user controllability: Our method provides more parameters
such as fetch length and depth of water, in addition to the wind velocity.
We implemented a prototype system, and showed that it can generate animated sequences of ocean waves in real time. We plan to integrate our implementation to large-scale applications such as games, maritime training simulators,
etc. Some detailed variations to the ocean waves can also be added to our implementation with minor modiﬁcations.

Acknowledgements
This research was supported by the Regional Innovation Industry Promotion
Project which was conducted by the Ministry of Commerce, Industry and Energy(MOCIE) of the Korean Government (70000187-2006-01).

References
1. Iglesias, A.: Computer graphics for water modeling and rendering: a survey. Future
Generation Comp. Syst. 20(8) (2004) 1355–1374
2. Enright, D., Marschner, S., Fedkiw, R.: Animation and rendering of complex water
surfaces. In: SIGGRAPH ’02. (2002) 736–744
3. Foster, N., Fedkiw, R.: Practical animation of liquids. In: SIGGRAPH ’01. (2001)
23–30

Real-Time Simulation of Surface Gravity Ocean Waves

129

4. Foster, N., Metaxas, D.N.: Realistic animation of liquids. CVGIP: Graphical Model
and Image Processing 58(5) (1996) 471–483
5. Foster, N., Metaxas, D.N.: Controlling ﬂuid animation. In: Computer Graphics
International ’97. (1997) 178–188
6. Stam, J.: Stable ﬂuids. In: SIGGRAPH ’99. (1999) 121–128
7. Fournier, A., Reeves, W.T.: A simple model of ocean waves. In: SIGGRAPH ’86.
(1986) 75–84
8. Gonzato, J.C., Sa¨ec, B.L.: On modelling and rendering ocean scenes. J. of Visualization and Computer Animation 11(1) (2000) 27–37
9. Mastin, G.A., Watterberg, P.A., Mareda, J.F.: Fourier synthesis of ocean scenes.
IEEE Comput. Graph. Appl. 7(3) (1987) 16–23
10. Tessendorf, J.: Simulating ocean water. In: SIGGRAPH ’01 Course Notes. (2001)
11. Hinsinger, D., Neyret, F., Cani, M.P.: Interactive animation of ocean waves. In:
SCA ’02: Proceedings of the 2002 ACM SIGGRAPH/Eurographics symposium on
Computer animation. (2002) 161–166
12. Thon, S., Dischler, J.M., Ghazanfarpour, D.: Ocean waves synthesis using a
spectrum-based turbulence function. In: Computer Graphics International ’00.
(2000) 65–
13. Pierson, W., Moskowitz, L.: A proposed spectral form for fully developed wind
seas based on the similarity theory of S.A. kitaigorodskii. J. Geophysical Research
(69) (1964) 5181–5190
14. Hasselmann, D., Dunckel, M., Ewing, J.: Directional wave spectra observed during
JONSWAP 1973. J. Physical Oceanography 10(8) (1980) 1264–1280
15. Bouws, E., G¨
unther, H., Rosenthal, W., Vincent, C.L.: Similarity of the wind wave
spectrum in ﬁnite depth water: Part 1. spectral form. J. Geophysical Research 90
(1985) 975–986
16. Crawford, F.: Waves. McGraw-Hill (1977)
17. Krogstad, H., Arntsen, Ø.: Linear Wave Theory. Norwegian Univ. of Sci. and Tech.
(2006) http://www.bygg.ntnu.no/ oivarn/.
18. Seyringer, H.: Nature wizard (2006) http://folk.ntnu.no/oivarn/hercules ntnu/
LWTcourse/.
19. Sorensen, R.: Basic Coastal Engineering. Springer-Verlag (2006)
20. US Army Corps of Engineers Internet Publishing Group:
Coastal engineering manual – part II (2006) http://www.usace.army.mil/publications/engmanuals/em1110-2-1100/PartII/PartII.htm.

