Cubage-Weight Balance Algorithm for the Scattered
Goods Loading with Two Aims
Liu Xiao-qun1, Ma Shi-hua2, and Li Qi3
2

1
National Earthquake Infrastructure Service, Beijing 100036, China
School of Management, Huazhong University of Sci.&Tec., Wuhan 430074, China
3
Graduate School of Chinese Academy of Sciences, Beijing, 100049, China
{hustlxq,stevenmai,casliqi}@126.com

Abstract. To utilize the volume and carrying capacity to solve the low
efficiency of truck loading, a loading planning was made by using optimization
methods based on combinatorics. The mathematic model of goods loading was
set up and a polynomial approximation algorithm was proposed according to
the characteristics of the goods transportation. With the volume and load of the
truck taken into consideration, this algorithm can converge at a satisfactory
solution and has a good effect in application.
Keywords: loading, optimization, combinatorics, polynomial approximation.

1 Introduction
Loading is a typical 2-Dimensional Packing Problem, which needs to allocate a set of
rectangular items to larger rectangularly standardized stock (such as train, steamship
and truck) units by minimizing the waste. The truck loading is important because it is
reported that the road transportation is of particularly higher transportation costs and
lower efficiency when comparing with other transportations. It is known that the
utilization of trucks is only about 60% in China. Most algorithms for 2-DPP are
heuristic. General reviews on packing and loading problems can be found in
Dowsland and et.al [1]. Results on the worst-case performance and the probabilistic
analysis of packing algorithms can be found in Coffman et al [2].
There are two common approaches for the solution of loading problem. The first
approach is based on lower bounds and heuristics based on combinatorial
considerations. Chen and Srivastava [3] studied a generalization of the Martello-Toth
lower bounding procedure based on a famous lower bound algorithm, and Stephen [4]
described a column-generation based on branch-and-bound algorithms. These
algorithms are very fast in some cases but not effective enough to provide optimal
solutions when embedded within a branch-and-bound scheme.
The second approach is based on an integer programming formulation with a huge
number of variables, whose linear programming relaxation can be solved by column
generation, typically requiring a considerable time, but obtaining extensive
information about the optimal solution of the problem. An integer program was
implemented to solve a kind of rectangular packing problem, and Berghammer
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 546–553, 2007.
© Springer-Verlag Berlin Heidelberg 2007

Cubage-Weight Balance Algorithm for the Scattered Goods Loading with Two Aims

547

developed a linear approximation algorithm for bin packing with absolute
approximation factor [5]. One kind of container and multi-container loading problem
was solved by Scheithauer [6] based on improved LP. While for bipartite vertex
packing problem, strongly polynomial simplex algorithm was introduced by
Armstrong [7]. But just as shown in the study of Woeginger [8], we are not aware of
any exact algorithm for 2-DPP in the literature even if 2-DPP does not have an
asymptotic polynomial time approximation scheme [9] unless P=NP.
This article introduces a C-W (short for Cubage-Weight) balance method
characteristic by little counters and quick constringency to optimize the solutions
mainly based on Ak 1 and First-Fit 2 algorithm [10]. It is proved by numerical
simulation that C-W balance method can converge to satisfactory solution effectively
and has a good effect in practice because it takes into account the truck’s volume and
carrying capacities at the same time compared with the methods which consider one
of two elements preferentially.

2 Model Description, Assumptions and Notation
The problem can be described as follows: there are some trucks in the distribution
center. Now scattered goods need to be delivered. How does one make the loading
plan rationally in order to utilize the most of truck’s cubage and carrying capacity? In
this problem, it is assumed that: a) the flow direction of all these scattered goods is the
same; b) no goods need to be loaded specially; c) in the process of loading, only the
cubage and the carry capacity restrictions are considered. The following additional
notation will be used below in the algorithm designing:

N (i ) : Set of all scattered goods, i is the number of goods i ( i = 1, 2,

, n ),

N (vi ) : Volume set of scattered goods, vi is the volume of goods i ( i ∈ N (i ) ),
N ( gi ) : Weight set of scattered goods, gi is the weight of goods i ( i ∈ N (i ) ),
M ( j ) : Set of trucks, j is the number of truck j ( j = 1, 2, , m ),
M (V j ) : Cubage set of trucks, V j is the cubage of truck j ( j ∈ M ( j ) ),

M (G j ) : Carry capacity set of trucks, G j is the carry capacity of truck j ( j ∈ M ( j ) ),
xij : 0-1 Variable, if goods i is loaded into truck j , then xij = 1 , else then xij = 0 ,
y j : 0-1 Variable, if truck j is selected to loading scattered goods, then y j = 1 , else
then y j = 0 ,

s (jk ) (i ) : Loaded goods set of truck j in the k th iteration of the algorithm, j ∈ M ( j ) ,
i ∈ N (i ) ,

1

Ak

algortihm: Slect goods set s (no more than k

∑g

i

i∈s

2

elemtens) from N (i) , if

≤ G and ∑ vi ≤ V , loaded the goods increasingly from s until the truck is full loaded.
i∈s

First-Fit algortihm: Seek the most suitable goods for the left truck with the most loading
capacity until all the trucks are full loaded. See more in reference [10].

548

X.-q. Liu, S.-h. Ma, and Q. Li

s*j (i ) : Satisfying or optimization solution of truck j , j ∈ M ( j ) , i ∈ N (i ) ,
S ( k ) : Loaded goods set of truck set M ( j ) in the k th iteration of the algorithm,
S = ( s1( k ) (i ), s2( k ) (i ),..., sm( k ) (i )) ,
S * : Satisfying or optimization solution of truck set M ( j ) .
The model of scattered goods loading problem is:
(k )

m

n

MinZ = ∑ y j , MaxZ g =

∑∑g x

j =1

y j =1 i =1

i ij

, MaxZ v =

n

∑ ∑v x

y j =1 i =1

i ij

Subject to:
m

∑x
j =1

ij

≤1

n

∑g x
i =1

i ij

n

∑v x
i =1

i ij

i = 1, 2,

,n

≤ Gj y j

j = 1, 2,

,m

≤ Vj y j

j = 1, 2,

,m

xij = 0 or 1

i = 1, 2,

, n , j = 1, 2,

y j = 0 or 1

j = 1, 2,

,m

,m

The solution is to find goods sets s1( k ) (i ) , s2( k ) (i ) ,…, sm( k ) (i ) in N (i ) (Here, s1( k ) (i ) ,
s2( k ) (i ) ,…, sm( k ) (i ) should satisfy these conditions: ∀ i , j , si( k ) (i ) ∩ s (jk ) (i ) =empty

set, ∪ si( k ) (i ) = ∪ s (jk ) (i ) ⊆ N (i ) ( i ≠ j ) in order to realization MinZ , MaxZ g and
MaxZ v under the condition of ∀j ∈ M ,

n

∑ gi xij ≤ G j y j and
i =1

n

∑v x
i =1

3 Method and Algorithm
3.1 One Truck Loading

Defining the notation as follows:
ci : The ratio of goods volume vi and weight gi , ci = vi / gi ;
C : The ratio of truck’s cubage V and weight G , C = V / G ;
Vsum : The total loaded goods volume;
Gsum : The total loaded goods weight;
c ′ : The ratio of Vsum and weight Gsum , c′ = Vsum / Gsum ;
r : The truck’s utilization rate, r = c ′ / C .

i ij

≤ Vj y j .

Cubage-Weight Balance Algorithm for the Scattered Goods Loading with Two Aims

549

The one truck loading algorithm is as follows: a) compare ci (i ∈ N (i )) with C ,
where N (i ) is sorted increasingly according to numerical value of ci − C and
(ci − C ) × (ci +1 − C ) ≤ 0 , (ci − C ) × (ci + 2 − C ) ≥ 0 , | ci − C |≤| ci +1 − C | , ( i =1,
2, …, n − 2 ) ; b) mark the sorted set of N (i ) as P ; c) choose the goods from P
orderly. If goods can be loaded in the truck, then loads the goods, otherwise the
loading process is over. In order not to lost generality, assuming
max{g1 , g 2 ,..., g n } ≤ G and max{v1 , v2 ,..., vn } ≤ V is tenable.
Algorithm of one truck loading

Step 1: Input N ( gi ) = { g1 , g 2 , , g n } , N (vi ) = {v1 , v2 ,

, vn } , G , V .

Step 2: Calculate c(i ) = {c1 , c2 , , cn } ( ci = vi / g i (i = 1, 2, , n) ) , C = V / G .
Step 3: Set P =empty set, Vsum = 0 , Gsum = 0 , c′ = 0 , r = 0 .
Step 4: Compare C with ci (i ∈ N (i )) , sorted N (i )
increasingly according to numerical value of ci − C

and

(ci − C ) × (ci +1 − C ) ≤ 0 , (ci − C ) × (ci + 2 − C ) ≥ 0 , | ci − C |≤| ci +1 − C | ,
(i = 1, 2,..., n − 2) and mark the sorted set of N (i ) is P .
Step 5: Supposing P[1] = i , if gi ≤ (G − Gsum ) and vi ≤ (V − Vsum ) ,
then run step 6; else P \ P[1] → P , run step 7.
Step 6: Let Vsum + vi → Vsum , Gsum + gi → Gsum , c′ = Vsum / Gsum , r = c ′ / C .
Step 7: If P ==empty set,then run step 8,else run step 5.
Step 8: Output P , Gsum , Vsum , c ′ , r .
3.2 M ( M > 1) Truck Loading

To M truck loading problem, the heuristic algorithm is designed as follows.
Stage 1: Truck Selection
In this stage, the suited truck is selected according to the most patchable C-W ratio
between the total scattered goods and all trucks. Basic function is as follows:
Step 1: Input N ( gi ) , N (vi ) , M (G j ) , M (V j ) .

Step 2: Calculate M (C ) = {C1 , C2 , , Cm } ( C j = V j / G j ( j = 1, 2, , m) ) .

Step 3: Calculate c ( c =

∑v/∑

i∈N ( i )

i

i∈N ( i )

g i ).

Step 4: Compare C with C j ( j ∈ M ( j )) , mark the element
satisfying the function Min | c − C j | as j , then the truck
j is selected to load scattered goods.

550

X.-q. Liu, S.-h. Ma, and Q. Li

Stage 2: One Truck Loading
To the truck j selected in the stage 1, loads the scattered goods using the one truck

loading algorithm and marks the final loaded goods is s (1)
j (i ) .
Stage 3: Solution Optimization
The solution obtained in stage 2 is optimized in this stage. Namely, the calculation
methods of c in stage 1 is adjusted from the c = ∑ vi / ∑ gi to the
i∈N ( i )

c

(2)

=

∑v/∑

i∈∪ s j

i

i∈∪ s j

i ∈N ( i )

(2)
gi . Marking the element satisfying the function Min | c − C j | as

j (2) , the truck j (2) is selected from trucks set M ( j ) to load scattered goods, and the
loaded goods set in the No. 2 iterative algorithm is s (2)
j (i ) .
The set of all loaded goods in the k th iteration of the algorithm is S ( k ) (i ) = ∪ s (jk ) (i ) .
If the truck’s utilization ratio in the two consecutive iterations get very close
(

∑

i∈S ( k +1)

vi

∑

j∈M ( k +1) ( j )

Vj −

∑v

i

i∈S ( k )

∑

V j ≤ ε , ε is the solution difference level), the

j∈M ( k ) ( j )

algorithm calculation is finished.

4 Numerical Investigation and Discussion
4.1 One Truck Loading

Comparing the C-W balance algorithm of one truck loading with other optimization
methods, the concrete data of reference [10] is selected. The result is shown as
follows.
Through simulating the computational algorithm to a large number of numerical
investigations, some conclusions are drawn:
1) Comparing with the Ak (k = 0) algorithm, the C-W balance algorithm can obtain
better solutions under the same computational complexity. Generally speaking, the
truck’s loading efficiency of the C-W balance algorithm, comparing with
the Ak (k = 0) algorithm, can be improved by 5% to 20%.
2) Comparing with the Ak (k = 1) algorithm, the C-W balance algorithm can obtain
satisfactory solutions in equal efficiency. But the computational complexity of
Ak (k = 1) algorithm is O(kn k +1 ) , while the computational complexity of C-W balance
algorithm is just O(n log n) . With the increasing of scattered goods, the C-W balance
algorithm runs fast.
4.2 M ( M > 1) Truck Loading

Through numerical simulation, the C-W balance algorithm is compared with the FirstFit algorithm. The relevant data of simulation are as follows: a) trucks: the cubage and

Cubage-Weight Balance Algorithm for the Scattered Goods Loading with Two Aims

551

Table 1. One truck loading algorithm

Algorithm

Ak (k = 0)

Ak (k ≥ 1)

C-W balance algorithm

Goods set: N (i ) = {1, 2,3, 4,5, 6, 7,8}
Goods volume set: N (vi ) = {110,108,96,80, 49,50, 40,7}
Input

Goods weight set: N ( g i ) = {64,52,50, 41, 22, 20,14, 2}
Truck: cubage V = 250 , carry capacity G = 110

Loaded goods set
Total loaded cubage
Cubage utilization rate
Total loaded weight
Weight utilization rate
Computational complexity

p = {1, 6, 7,8}
207
90
100
82

％
％

O(n log n)

P = {2, 6, 7,5}
247
98
108
98

％
％

O(kn k +1 ) (k ≥ 1)

P = {2, 6, 7,5}
247
98
108
98

％
％

O(n log n)

the weight are generated at random from the array (200-400), (100-200) respectively,
and the quantity of trucks is 100; b) scattered goods: the volume and the weight are
generated at random from the array (20-60), (10-40) respectively, and the quantity of
all scattered goods is 5000. The simulation results are shown in Fig.1 and Fig.2.
The following observation can be seen in Fig.1 and Fig.2.
(1) For truck No. 75, 52, 88, 57, 62, 48, 16, 84, 39, 30, 96, the cubage utilization
ratio (CUR) of First-Fit algorithm is slightly higher than that of the C-W balanced
algorithm, and the First-Fit utilization is up to 8% higher than C-W balanced
algorithm. For other trucks, the CUR of C-W balanced algorithm is higher.
Especially in the later stage of problem solving, the disparity is more pronounced.
Among these trucks, the CUR of truck No. 61, 13, 81, 77, 32, 46, and 87 is more
than 20% higher. And to truck No. 61, the utilization is 28% higher using C-W
balanced algorithm.
(2) For truck No. 11, 39, 30 the weight utilization ratio (WUR) of First-Fit
algorithm is slightly higher than that of the C-W balanced algorithm, and the largest
difference (truck No.11) is nearly 1.3%. For other trucks, the WUR of C-W balanced
algorithm is higher, and this disparity is more obvious in the later stages of problem
solving. For truck No. 99, 54, 13, 77, 32, 91, 46, 1, 70, 78, 24, 33, 92, 56, the WUR of
C-W balanced algorithm is 15%. For truck No. 87, the disparity is as much as 21%.
(3) The numerical simulation results show the stability of C-W balance algorithm
is better than that of the First-Fit algorithm. As shown in the trend-lines, the CUR
curve and the WUR curve of C-W balance algorithm are relatively steady, and the
fluctuation of the First-Fit algorithm is relatively large. Especially to the later stage of
problem solving, the efficiency of the First-Fit algorithm drops significantly below
that of C-W balance algorithm.

0.5

0.6

0.7

0.8

0.9

1

1.1

75

66

97

20

52

88

43

11

79

75 66 97 20 52 88 43 11 79

8WLOL]DWLRQUDWH

0.5

0.6

0.7

0.8

0.9

1

1.1

Utilization rate

2

2

34

71

25

57

93

62

48

16

84

34 71 25 57 93 62 48 16 84

7

7

39

30

3

8

22 76 90 31 45 99 54

53

12

80

67

35

21

89

58

44

63

17

3

72

85

61

73 13 27 81 95 36 50 59

9

64 77 18 32 86 41 55

40

94

49

68

8

22

76

90

31

45

99

54

4

73

13

27

81

95

36

50

59

9

64

77

0

14 69 82 23 37 91 46 60 65

5

19 74 28 87 96 42 51

18

32

86

41

55

0

14

69

82

23

37

91

46

60

65

5

19

74

28

87

96

42

51

WUR trendline ( First-Fit algorithm)

WUR (First-Fit algorithm)

Fig. 2. WUR of M truck loading algorithm

26

WUR trendline (C-W balance algorithm)

98

4

CUR (First-Fit algorithm)
CUR trendline (First-Fit algorithm)

Fig. 1. CUR of M truck loading algorithm

72 85 61 26 40 94 49 68

WUR (C-W balance algorithm)

39 30 98 53 12 80 67 35 21 89 58 44 63 17

CUR (C-W balance algorithm)
CUR trendline (C-W balance algorithm)

1

1

10

78

24

33

92

47

56

6

15

83

29

38

15 83 29 38

7UXFN
VQXPEHU

70

6

7UXFN
VQXPEHU

10 70 78 24 33 92 47 56

552
X.-q. Liu, S.-h. Ma, and Q. Li

Cubage-Weight Balance Algorithm for the Scattered Goods Loading with Two Aims

553

5 Conclusion and Application
In practice, because there are a great deal of loaded goods and loading trucks and
calculating by hand is impossible, we can take some measures as follows: 1) using
computer. Using the data of loaded goods and loading trucks as input, we run the
computer program and output the loading plan according to the loaded goods. 2)
When the condition is poor and no computer can be available, we can assemble the
goods with maximum C-W rate and the goods with minimum C-W rate together
among all loaded goods until no goods can be selected, then make a loading plan
through calculating by hand. Because the optimization plan cannot be gained in each
loading problem, so seeking a satisfying solution can simplify the problem and save
the calculation time. Sometimes, it is necessary to simplify the loading restriction to
speed up the loading and also can improve the integrative effect. The simplest way of
the loading problem maybe as following: loading the big C-W rate goods and the
small one together, laying the big C-W rate goods at the bottom of the truck and pile
up with those small C-W rate goods, and loading the rest goods directly until the truck
is filled. But at this time, these unloaded earlier should be loaded at the truck’s border.

Acknowledgments
This work was supported by research grants from the National Natural Science
Foundation of China (No.70332001, 70672040), National High Technology R&D
Project of China (No. 2006AA04Z153) and HUST Doctor Foundation (No. D0540).

References
1. Dowsland, K.A., Dowsland, W.B.: Packing Problems. European Journal of Operational
Research, 56(1992) 2-14
2. Coffman Jr., E.G., Garey, M.R., Johnson, D.S.: Approximation algorithms for bin
packing-an updated survey, in: Hochbaum, D.S. (Ed.), Approximation Algorithms for NPHard Problems, PWS Publishing Company, Boston (1997)
3. Chen, B., Srivastava, B.: An improved lower bound for the bin-packing problem. Discrete
Applied Mathematics, 66 (1996) 81-94
4. Stephen, M.H., Liu, Y.-H.: The application of integer linear programming to the
implementation of a graphical user interface: a new rectangular packing problem. Applied
Mathematical Modeling, 4(1995) 244-254
5. Berghammer, R., Reuter, F.: A linear approximation algorithm for bin packing with
absolute approximation factor. Science of Computer Programming, 1(2003) 67-80
6. Scheithauer, G.: LP-based bounds for the container and multi-container loading problem.
International Transactions in Operational Research, 6(1999) 199-213
7. Armstrong, R.D., Jin, Z.-Y.: Strongly polynomial simplex algorithm for bipartite vertex
packing. Discrete Applied Mathematics, 2(1996) 97-103
8. Woeginger, G.J.: There is no asymptotic PTAS for two-dimensional vector packing.
Information Process Letter, 64 (1997) 293-297
9. Chan, T.M.: Polynomial-time approximation schemes for packing and piercing fat objects.
Journal of Algorithms, 2(2003) 178-189
10. Sun, Y., Li, Z.-Z.: The Polynomial Algorithm for the Allocation Problem with Two Aims
(In Chinese). Changsha Railway University Transaction, 2(1997) 33-39

