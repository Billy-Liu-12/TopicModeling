Fast Insolation Computation in Large Territories
Siham Tabik1 , Jes´
us M. V´ıas2 , Emilio L. Zapata1 , and Luis F. Romero1
1

Depto de Arquitectura de Computadores, campus de Teatinos, 29080 M´
alaga, Spain
2
Depto de Geograf´ıa, campus de Teatinos, 29080 M´
alaga, Spain
siham@ac.uma.es

Abstract. This paper presents a new model for the computation of the
insolation in large territories. The main novelty of this work consists in
that it reduces signiﬁcatively the number of necessary arithmetic operations, and simpliﬁes the calculations introducing errors that are inferior
to the ones imposed by the climate in a territory. In particular, a faster algorithm to compute the horizon at all points of a terrain is provided. This
algorithm is also useful for shading and visibility applications. Moreover,
parallel computing is introduced into this model using grid computing
technology to extend its application to very large territories.
Keywords: Insolation, horizon computation, very large territories,
Globus.

1

Introduction

The knowledge of the amount of incoming solar energy at diverse geographic
locations is of a paramount importance in several ﬁelds, in solar energy utilization, agriculture, forestry, meteorology, environmental assessment and ecology.
However, most solar radiation models that take into account the topographic heterogeneity and climatological features, like solar analyst [1] and r.sun model [2]
have a large computational cost and high storage requirements, which become
unapproachable for large territories. This paper presents a fast and accurate
model that computes the insolation in large terrains considering all the involved
factors, i.e., the localization and the horizons of all the points of the territory,
the localization of the sun and the meteorological factors. We demonstrate that a
great part of calculations can be reduced substantially by searching equivalences,
until reducing it to the minimum possible. In addition, an implementation in grid
computing have been developed to allow the extension of this model to very large
territories, of the order of millions of kilometers. We describe the performance
results of the application of the model to Andalucia territory.

2

The Sky

The sun passes from many parts of the sky. In each one of these localization,
the incoming radiations into a horizontal surface have diﬀerent orientation (or
azimuth) α and inclination (or altitude) Θ. If in addition, each point of the
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 54–61, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Fast Insolation Computation in Large Territories

55

territory has diﬀerent orientation head and inclination tilt , a priori, it would be
necessary to know the incidence in each point of the territory, at each instant of
the year.
However, the sun passes many times form the same zone of the sky. Our ﬁrst
simpliﬁcation consists in supposing that the considered territory is horizontal
and construct a celestial map of hemispherical shape that covers the horizon. We
discretize this map into cells, and determine the quantity of radiation received
by each point of the territory from each one of these cells. According to the
spherical coordinates, the discretization results in Ns = 90 × 360 celestial cells
that can be represented by a matrix of 90 lines and 360 columns. Each coeﬃcient
of this matrix correspond to a celestial cell with diﬀerent coordinates α and Θ.
The calculation of the position of the sun can be performed using the equations
of the earth movement with respect to the sun [3].

Fig. 1. Insolation of one year of exposition in a point of the horizon (black) displayed
from the left to the right, in the west, south, east and north. The dark and light colors
show low and high values of insolation respectively.

Performing these calculations, each cell of the obtained matrix of results accumulates the received radiation, i.e., the number of hours the sun has emitted
energy from that cell. As illustration, Fig. 1 shows the insolation one year of exposition. The set of Ns cells or celestial sectors are represented with the symbol Δ.
The error produced in the discretization of the sky is lower than the committed
by nature due to cloudiness. This error can be quantiﬁed in order to determine
an appropriate dimension of celestial sectors.

3

The Ground

A terrain is most often represented with a digital elevation map (DEM), that
can be discretized into cells. Typically, a very large territory contains millions
of points, however, many of these N points are similar. In particular, each localization P has a given orientation headi and inclination tilti with respect to
the horizontal but with a very small error. We can consider that there exist
only Nf = 90 × 360 possible orientations in our territory. Consequently, there
exist only Ns diﬀerent cells, in which we want to compute the insolation. Let’s
consider Ω the set of those Nf possible orientations. If there would be no mountains in the horizon, all points with the same orientation will receive the same
quantity of radiation, that we call Ef ull (headi , tilti ).

56

S. Tabik et al.

For each one of the Ns diﬀerent cases we compute the insolation received from
the corresponding Ns celestial sectors Δ, in which the angle of incidence is taken
into account, this can be computed with only 5 × Nf trigonometrical operations
for each element ø of Ω. In total, we obtain 5 × Nf × Ns operations.
Up to here, all the calculations are performed with a low computational cost.

4

The Horizon

Each point of the total N points of a territory suﬀers from a partial concealment
of the sun due to the orography that surrounds it (from the orto to the astronomical decline). If we consider that the orography is diﬀerent in each point of
the territory, the computation becomes very complicated. We will have N × Ns
possible cases, where N is a very large number, of the order of millions. In addition, an accurate computation of solar occultation requires an extraordinary
amount of arithmetical operations as discussed in next section.
4.1

The Calculation of Shaded Zones

In principle, to determine the shadowed regions for each position of the sun
we should ﬁrst compute the trajectory of the sun rays for each terrestrial cell.
However, the execution of such calculation, from this perspective, that we could
call celestial, implies a large redundant calculation. Herein, we have chosen a
diﬀerent vision of the problem. In particular, we compute the visibility of the
celestial cells, through which sometimes the sun has passed, from any cell of the
territory. In other words, we are interested in knowing the proﬁle or the horizon
of a territory.
Tackling the problem from this perspective, that we could call terrestrial, is
absolutely equivalent, besides, this has some advantages that we reveals in next
sections.
Generally, the horizon of each point must analyzes the position of the rest of
points of the grid (i.e., the territory), with a computational complexity O (N ).
The computation of the horizon of all these points is O (N 2 ), which implies an
impractical computational cost, i.e., a N-body problem.
However, there exist several algorithms that simplify the calculations. For
example the approximative method of Cabral, Max and Springermeyer (CMS)
[4] divides the horizon in s sectors, and in each sector it determines the elevation
of the horizon considering solely the points of the terrain that are in the central
line of the sector. This algorithm has a computational cost O (s(N 1.5 )). Stewart
[5] proposed a more precise algorithm that computes the horizon in all the sector
with a cost O(sN (log2 N + s)). This method is faster than the CMS, and the
quality of the image generated is better especially for very large terrains, i.e.,
more than 100.000 points.
4.2

Stewart Model and the Horizon Computation

Stewart [5] divides the horizon of each point P in s sectors σi,p (1 ≤ i ≤ s) that
form an angle 2π
s radians each one.

Fast Insolation Computation in Large Territories

57

This algorithm consists in performing for each sector i, four important steps:
1. compute the new coordinates of all the points in the coordinate system
(a⊥ , b⊥ , z), where a and b are two horizontal vectors in the directions 2π
s i
⊥
⊥
and 2π
(i
+
1)
respectively,
and
sort
all
the
points
by
a
and
b
for
each
s
direction
2. compute the horizons using the last updated hull structure
3. update the hull structure including the information of the considered point
4. insert the horizon of the considered point in the original structure

Fig. 2. Times by sector in logarithmic scale of the four main steps of Stewart’s
algorithm

Figure 2 shows the time per sector of each step of Stewart’s algorithm, for several grid sizes. As it can be seen from this ﬁgure, the time increases enormously
as the size of the grid increases. This means that the calculation of the horizon
of Andalucia DEM that has 100000 × 50000 cells of precision 10 × 10 m2 will
suppose very long execution time. However, dividing this DEM into subgrids of
2000 × 2000 cells requires only 256M B, which is reasonable from a computational point of view but this produces an undesired edge eﬀect as explained in
next section.
4.3

Our Horizon Algorithm

In this work we propose an optimized algorithm that in addition to compute the
horizon of large terrains in a reasonable time, it eliminates the edge eﬀect due
to the division into regular grids. First, to eliminate the edge eﬀect we apply a
two-partition technique that consists in considering the horizon of a given point
as the overlapping of its horizons in the grid A and B, both of size 10 × 10
points. Each point P belongs to a grid in the division A (black grid in Fig. 3)

58

S. Tabik et al.

Fig. 3. Two-partition technique. Grid A (black color) and grid B (grey color).

and an other grid in the division B (grey grid in Fig. 3). Each single grid Ai,j
ne
se
sw
is considered as four sub-grids: Anw
i,j , Ai,j , Ai,j and Ai,j , where each of which
belongs to four B-grids (see Fig. 3) in such a way that:
se
ne
sw
se
nw
sw
ne
Anw
i,j = Bi,j , Ai,j = Bi,j+1 , Ai,j = Bi+1,j+2 and Ai,j = Bi+1,j

The horizons are computed only in the opposite direction of the position
of each one of the four sub-grids inside the grid, for example, a sub-grid nw
computes its horizon only in the direction se. This reduces the time of step 2 in
the algorithm by half.
To compute the horizons of more than 10 km, we have used a low precision
grid that we call C grid, of dimension 2000×1000 points, which covers Andalucia
with steps of 200 meters.
As stated before, Stewart’s algorithm computes the horizon in a main loop
by sector. The time taken in computing the horizons of Andalucia using Stewart’s algorithm is about (518 grids × 64 sectors × 50 seconds) equivalent to 19
days. However, taking into account the regularity of the grid and applying some
optimizations, this time can be signiﬁcantly reduced.
– Our ﬁrst optimization consists in reusing the sorting of sector i by b⊥ for
sorting sector i + 1 by a⊥ . Thus, we reduce the computational time of step
1 to approximately half the time. This optimization can be applied to all
sectors except the ﬁrst one.
– The second optimization consists is that in a regular grid, there exist an
easier way to sort the points by a⊥ and b⊥ without the need to compute
its coordinates in that coordinate reference. It can be done by just counting
the number of points behind the running line, using very simple algebraic
operations. As the position number is directly computed, it is not necessary
to use any sorting algorithm. In practise, the time spent in the optimized
phase 1 is NULL.
– Our third optimization is the use of the two-partition technique presented
here, so that we do not need to perform the 2nd phase for every sector, but
only for the half of them, as the horizon for the other half is obtained from
the overlapped grid B (and vice versa).

Fast Insolation Computation in Large Territories

59

The calculated horizon by the optimized algorithm is stored in a matrix μ of
dimension 1 × 360.
As a result of the proposed optimizations, the expected computational time
is reduced to less than 11 days. The improvement in runtime when applying the
optimizations 1,2,3 and 4 is evident as shown in Fig. 4.

Fig. 4. The improvement in times applying the optimizations 1,2,3 and 4 for a grid of
size 2000 × 2000

4.4

Parallel Computing

An important quality of the proposed horizon algorithm is that it does not
include any data dependencies between sectors, which means that parallelism
can be easily applied. By using dual core technology, the execution time for any
grid is reduced by half (about 18 second per grid), and just a week for the whole
territory.
Although it was unnecessary to exploit more parallelism in Andalucia project,
we have employed the Grid technology and Globus [6], to reduce even more the
computational time, and to extend the possibilities to tackle very large territories. With this technology, and using the computational power of a laboratory
with 32 dual-core processors, the horizons for Andalucia has been computed in
only 5 hours. Where the grids A and B are of dimensions 268 and 250 respectively.

5

The Accumulated Sky

As mentioned in section 3, each element ø of the set Ω watches the sky from the
same perspective, but with diﬀerent horizons in each case. This means that each
element ø of Ω (or a point P of the territory) have a horizon μi , with μi ∈ Λ.
Being N the total number of elements of Λ; as there are so many horizons as
points in the territory we obtain N × 32400 operations.
But, for each element ø(head,tilt) of Ω, there exist only 90 possible heights
for the obstacles that can have in each azimuth α. The received insolation by

60

S. Tabik et al.

a given point P from the celestial cells column k of azimuth α(k) could be
calculated adding the energies received by all the celestial cells of that column from the zenith (90o ) to the correspondent obstacle μi (k). Let’s deﬁne
Ereal (αi , θi , k, μi (k)) as the insolation in the element ø. The resulting matrix is
of dimension 32400 × 32400, and stores the values of Ereal .
In order to compute the yearly insolation matrix, we have to redeﬁne our
representation of the celestial map, modifying it in such a way that each celestial
cell stores the received energy in the whole year, adding the values of the column
that goes from the zenith to that cell.

Fig. 5. The insolation of one year computed using the accumulative representation of
the celestial matrix

Let’s
Δ be the new accumulative celestial matrix, of dimension 32400 ×
32400. Our deﬁnitive model for the computation of one year insolation in large
territories can be resumed as follows:
– For each minutes of the year (365 × 24 × 60 minutes)
• Compute the position of the sun. The resulting celestial matrix is of
dimension 90 × 360)
– For each possible orientation in the territory
• Compute Ef ull received from all Ns celestial cells in absence of horizons
• Compute the matrix Ereal of one year accumulated insolation in each
celestial cell
– For each point P of the territory
• Determine its coordinates (i, j)
• Compute its horizon μi (a matrix of dimension 1 × 360 points)
• For each column k of the celestial matrix
∗ Compute the accumulate insolation taking into account its corresponding horizon μi,k
If the terrestrial cell is horizontal:
E(i) = Ef ull (azmi , elvi )

(1)

If the terrestrial cell is a mountainous site:
360

E(i) =

Ereal (head, tilt, azmk , μi,k )
azmk =0

(2)

Fast Insolation Computation in Large Territories

61

For the analysis of the attenuation of solar radiation passing through clouds,
we have extrapolated the behavior of cloudiness in the past to the future. This
hypothesis is true if we neglige the eﬀect of global change.
The calculation of the insolation taking into account the cloudiness for a grid
of dimension 2000 × 2000 using our model takes 25 seconds.

6

Conclusions

From a computational point of view, this paper has proposed an eﬃcient model to
compute the insolation in large and very large territories. In particular, an algorithm for horizon computation about two times faster that the fastest algorithm
provided in literature has been provided. In addition, a parallel implementation
of the horizon algorithm in grid computing has been carried out to make possible the study of very large territories, which is useful for diﬀerent applications,
including shading and visibility ones.

Acknowledgment
This work was supported by the Spanish Ministry of Education and Science
through grants TIC2003-06623.

References
1. Fu, P., and Rich, P.M.: The solar analyst 1.0 User Manual. WWW document,
http://www.fs.fed.us/informs/solaranalyst/solar analyst users guide.pdf, 2000.
2. Marcel, S., Jaroslav, H.: A New GIS-based Solar Radiation Model and Its Application to Photovoltaic Assessments. Transaction in GIS, 8 (2004) 175-190.
3. Page, J., K.: Prediction of Solar Radiation on inclined surfaces. (1899) Springer.
4. Cabral, B., Max, N., Springmeyer, R.: Bidirectional reﬂection functions from surface
bump maps. Computer Graphics, Proceedings of SIGGRAPH’87, 21 (1987) 273-281.
5. James, A., Stewart.: Fast Horizon Computation at all Points of a Terrain with
Visibility and Shading Applications. IEEE Trans. on Visualization and Computer
Graphics, 4 (1998) 82–93.
6. http://www.globus.org/toolkit/

