TOMOON: A Novel Approach for
Topology-Aware Overlay Multicasting
Xiao Chen, Huagang Shao, and Weinong Wang
Regional Network Center of East China,
Department of Computer Science and Technology,
Shanghai Jiao Tong University, China
{shawn,hgshao,wnwang}@sjtu.edu.cn

Abstract. Most existing overlay multicast approaches avoid considering any network layer support no matter whether it is available or not.
This design principle greatly increases the complexity of the routing algorithms and makes the overlay topologies incompatible with the underlying network. To address these issues, we propose TOMOON as a novel
overlay multicast approach, which exploits the cooperation between endhosts and IP multicast routers to construct a topology-aware overlay tree.
Through a little modiﬁcation to PIM-SM, a multicast router is able to
receive registration from nearby group members and redirect passing-by
join requests to them. Due to the multicast router’s support, TOMOON
organizes its group members into an overlay multicast tree eﬃciently,
which matches the physical network topology well. Since we don’t depend on routers to multicast data packets, the overlay tree can also cover
the unicast networks and thus has a good support for the heterogeneous
network environment.

1

Introduction

Most of the current overlay multicast solutions (e.g. Narada[3], Nice[2]) share
some common drawbacks. First, they can’t adapt the overlay to the physical network very well. Thus it is hard to guarantee the cost-eﬃciency of data transmission in all cases. Second, they force end-hosts to assume too much responsibility
in overlay construction, which makes the protocol too complicated to serve as
a general platform for other applications. Last, since the recovery from overlay
partition can be very slow, it is hard to maintain a stable performance in case
of node failures. All these issues result from a common design principle. That
is to remain the network layer as simple as possible and refuse to consider any
support from the network no matter whether it is available or not.
Our contribution in this paper is to address all these issues by proposing a
topology-aware overlay multicast approach, which is supported by IP multicast
networks. The key point of our approach is to adopt the overlay network for
actual data transmission while exploiting IP multicast routers to optimize the
overlay construction. This method has several advantages over traditional overlay multicast schemes. With support of the multicast-enabled network layer, the
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 644–651, 2007.
c Springer-Verlag Berlin Heidelberg 2007

TOMOON: A Novel Approach for Topology-Aware Overlay Multicasting

645

task of overlay topology optimization can be drastically simpliﬁed. The complexity of the dynamic membership management is also reduced to a large extent.
Meanwhile, end-host based multicast eliminates most of the problems related
to IP multicast. Since the multicast routers may be deployed incrementally in
our approach, the overlay can easily scale up to support large-sized group communications among heterogenous networks, where not all routers are multicastcapable. Besides the scalability issue and the address collision, overlay multicast
also provides a viable solution to the commercial issue, which is diﬃcult in IP
multicast. Therefore the two multicast techniques, which seem to contradict at
a ﬁrst glance, are merged to produce an eﬃcient multicast framework in this
paper. Hereinafter, we name it by TOMOON, which stands for Topology-aware
Overlay Multicast Over heterOgeneous Networks.
The rest of the paper is organized as follows: In Sect.2, we deﬁne the network model for TOMOON and analyze the mechanism of IP multicast. The
detailed protocol is explained in Sect.3, which describes our modiﬁcation to the
PIM-SM[5] protocol and the tree construction algorithm. The performance of
TOMOON is evaluated through simulations in Sect.4. Finally we draw conclusions in Sect.5.

2
2.1

Network Models
Physical Network Model

Without loss of generality, we model the underlying network in question by a
directed graph G(V, E) with the vertices representing routers or hosts and the
edges standing for links. A host is attached to only one router while a router’s
node degree is more than one. Each edge is assigned a weight to indicate the
link’s cost or latency. We assume that each node here belongs to an autonomous
system (AS) that is either a multicast domain or a unicast domain. All routers
of a multicast domain support intra-domain IP multicast. To make the following
description easier, we now deﬁne some concepts, which will be used throughout
the paper.
Deﬁnition 1. A path from node A to node B, denoted by P (A, B), is a sequence
of routers comprising a shortest path from A to B according to the underlying
unicast routing protocol. P (A, S) is also called a request path of node A if node
S is a data source. Since a unique data source is usually presumed, the request
path of A is also denoted by RP ath(A).
Deﬁnition 2. Node B is close to the request path of node A if at least one node
of RP ath(A) is within a certain distance from node B and they are located in
the same multicast domain. This distance is also called a capture range, which
is determined by the physical network settings around node B.
An outline of the physical network model is shown in Fig. 1. In this ﬁgure, all
router nodes are marked with capital letters while the gray nodes represent end
hosts. Suppose that node s is the unique source and all other hosts are receivers

646

X. Chen, H. Shao, and W. Wang

of the same group. We use the dotted lines to indicate the request paths of
RP ath(a) and RP ath(b), which originate from a and b respectively and point to
node s. If the capture range is just one hop, only c and g are close to RP ath(b).
Since e1 and e2 are located in a unicast domain, they are not close to RP ath(b)
even if they are just one hop away from the router E.

s

g

S

G

f

Unicast Domain
F
E

Multicast Domain

e1
e2
D

d

C

A
a

B

c
b

Fig. 1. Physical network model

2.2

Introduction to PIM-SM

Multicast forwarding entry. From a multicast router’s perspective, the task
of any routing protocol is to build a routing table with forwarding entries for
all groups. A forwarding entry for the PIM-SM multicasting is denoted by a
quaternary tuple of (S,G,iif,oif ), which applies to all packets originated from
source S and destined for group G. The other two ﬁelds, namely iif and oif, refer
to input interface list and output interface list respectively. The construction of
such a forwarding entry and its usage is explained as follows.
Control Path. For simplicity, we only consider the source speciﬁc multicast
in PIM-SM. Here PIM-SM routers have to deal with two protocols in order to
create the forwarding entries for a (S,G) pair. First, the designated router of
the receiver will receive an IGMP[1] source speciﬁc membership report from
the host, which carries the (S,G) information. Then it turns this membership
report into a PIM-SM join request and unicasts it towards the source S. All
routers receiving this request should build an entry like (S,G,iif,oif ). The input
interface for receiving the IGMP membership report or the PIM-SM join request
is added to oif while the output interface for sending the join request is added
to iif. In this way, the multicast forwarding entry is installed on all PIM-SM
routers involved in the group session, which form a shortest path tree from the
sender to all receivers.
Data Path. Once the shortest path tree is established, the forwarding entry
comes into play for packet multicasting. Whenever a router on the distribution

TOMOON: A Novel Approach for Topology-Aware Overlay Multicasting

647

tree receives a multicast packet sent from source S to group G, it will ﬁrst check
whether the input interface of this packet is exactly the one in iif. If the packet
does come in through the correct interface, a copy of it is sent out through each
interface listed in oif. The forwarding process is done in a top-down manner from
the source’s designated router to all leaf routers on the tree.

3
3.1

Details of TOMOON
Multicasting Join Requests

Multicast-capable routers play an important role in our overlay tree construction.
Brieﬂy speaking, TOMOON depends on those routers on the new joiner’s request
path to multicast the join request towards their respective neighbor members
so that the new member can ﬁnd a suitable parent from the tree quickly. While
a PIM-SM router is totally qualiﬁed to assume such a task from a functional
perspective, no existing protocol is designed for this purpose. Therefore we need
to introduce some modiﬁcations to PIM-SM so that the routers will behave as
we expect them to.
Multicast Forwarding Entry. One basic function of the multicast forwarding
entry is to determine whether a packet belongs to a speciﬁc group so that it can
be multicasted accordingly. Unlike the situation in source speciﬁc IP multicast,
where all data packets of the same group have a common source-destination pair
like (S,G), the join requests for the same group session originate from diﬀerent
joiners and thus have diﬀerent source addresses. Since TOMOON is designed for
single source multicast, we will aggregate the join requests of the same session
by their destination address/port pair like (S,P). S is in fact the address of
the overlay tree’s root. The inclusion of the port number P allows for multiple
overlay trees rooted at the same node. Therefore the multicast forwarding entry
for multicasting the join requests is a ternary tuple like (S, P, oif ). The ﬁeld oif
has a similar meaning as we described previously. Now we are going to explain
the installation and application of these entries on routers.
Membership Registration. In order to capture the wanted messages on
nearby routers, an in-tree member M sends a membership report toward the
tree root with a limited value of TTL. Due to the small TTL, only those routers
close to M will receive it. Once a router R has received such a report, which
indicates a (S, P) pair, it will initiate a forwarding entry building process, which
is described in detail by the pseudo-code routine in Fig. 2.
Forwarding Join Request. The process of multicasting join requests is
straightforward once the forwarding entry is calculated as mentioned above.
When a join request destined for the session (S, P) arrives at a router where
a corresponding forwarding entry is installed, a copy of it is sent through each
of the interfaces in oif except the input interface of the request. If the oif ﬁeld
only has two interfaces and the request is received from one of them, then the

648

X. Chen, H. Shao, and W. Wang

Procedure ReceiveReportFor (Address M, Address S, Port P)
//M-Address of the sender of the report
//S-Address of the tree root
//P-Port number identifying the group session
Var
Entry e;
//e-Multicast forwarding entry;
Begin
If RoutingTable.includeEntryOf(S, P) Then
e = RoutingTable.fetchEntry(S, P);
e.addToOif(InterfaceTo(M));
ElseIf InterfaceTo(M)!=InterfaceTo(S) Then
e = new Entry (S, P);
e.addToOif(InterfaceTo(M));
e.addToOif(InterfaceTo(S));
RoutingTable.addEntry(e);
EndIf
End.
Fig. 2. Algorithm for building forwarding entries

transmission will reduce to a unicast forwarding. This stipulation ensures that
all members registered at the routers will receive exactly one copy of the request
during the multicasting.
3.2

Tree Construction and Maintaining

Member Joins. Suppose that each new member J knows the address/port
pair (S,P) of the data source before its participation. Then a request packet
is generated with (S, P) as its destination address/port pair. As we mentioned
above, if the join request traverses the capture ranges of other in-tree members,
the data source S along with those members close to the request path will be
informed of this new joiner. Each of them will respond to J as long as they have
suﬃcient residual fan-out degrees to accept a new child in the overlay tree. Each
response indicates a candidate parent. The next step is to choose a best one from
them as J’s formal parent in the tree.
The speciﬁc criteria for choosing a best parent node could vary from one
application to another. For simplicity, we order that the candidate closest to
the joiner become its parent. If multiple candidates are qualiﬁed, the one closest
to the data source is selected. This can be done by using tools like ping or
traceroute. Meanwhile, a list of the candidate parents is kept for later use.
Topology Adjustment. As far as tree-based multicasting is concerned, a key
reason for topology adjustment is that some in-tree members would like to be
connected to newcomers rather than their current parents. This idea is explained
in Fig. 3. In this ﬁgure, node d is close to the request path of node a. However, node a joins the tree before node d, which leads to a tree structure like

TOMOON: A Novel Approach for Topology-Aware Overlay Multicasting

s

s

g

s

g

s

g

S

S

g

Membership Report

S

S

649

Join Request
G

f
F

e1

F

e2

C

b

a

(a)

A

e1

f

b

e1

f

c
b

a

(c)

E

e1

A

e2

C

D

d

Fake Request
Data

F

e2

C
B

A

G

E

D

d

c

B

(b)

F

e2

C

a

G

E

D

d

c

B

A

f
E

D

d

G

c

B
b

a

(d)

Fig. 3. Topology adjustment

Fig. 3(b). While the tree in Fig. 3(d) is more cost-eﬃcient in terms of bandwidth
consumption, the join process of d doesn’t provides a mechanism to inform the
downstream members of the upstream newcomers.
Our solution is to have downstream in-tree members send a fake join request
towards the data source periodically. The fake request has the same destination
address/port pair as a true one has. Since the newcomer d is close to the request
path of node a, it can capture this fake request as shown in Fig. 3(c). Except
the newcomer, other members will not respond to a fake request of a familiar
sender. Then the tree could be transformed like Fig. 3(d) for a better shape.
Partition Recovery. If a failure has occurred, the abandoned children follow a
join-and-adjust strategy. In other words, the child ﬁrst tries to make a connection
with the best candidate parent in its current list to join the group. Once the
overlay link is established, an adjustment process goes on to optimize the overlay
topology after the node failure. Due to the candidate parent list, an abandoned
child node can ﬁnd the new parent immediately while still maintaining a good
performance of the overlay transmission. Therefore the impact of node failures
is reduced to the minimum.

4

Evaluation

In this section, we evaluate the TOMOON protocol using simulations. The main
purpose of the simulations here is to investigate how much a TOMOON tree
matches the topology of the underlying network. For this purpose, we measure
the tree cost in our simulations for a quantiﬁed result.
Two benchmark protocols we adopt for comparison with TOMOON are PIMSM and TAG[4]. As we introduced in Sect.2.2, we consider the former as a lowerbound benchmark. We also choose TAG for comparison because it is similar to
TOMOON in its design intention. We adopt the Waxman approach[6] to generate
a topology to mimic the Internet for our experiments. The fan-out degree of each
node in the graph has an upper bound of 6. The cost and delay of each link is set
to the same value, which varies from 1 to 5 for intra-domain links and from 6 to

650

X. Chen, H. Shao, and W. Wang

10 for inter-domain links. To evaluate the performance of our protocol in diﬀerent
network environments, we repeat our simulations in two diﬀerent scenarios:
1. Physical links have symmetric cost.
2. Physical links have asymmetric cost.
4.1

Simulation Results and Discussions

In the ﬁrst experiment, we assume that all domains support IP multicast. Whenever a node joins the group in TOMOON, it will broadcast its membership report
throughout its domain to capture other join requests passing by. We change the
group size from 20 to 100. Fig. 4 shows the tree cost for two scenarios.
900
800
Tree Cost

700
Tree Cost

TOMOON
TAG
PIM-SM

900

800

600
500
400

700
600
500
400

300
200

300
20

30

40

50 60 70
Group Size
Scenario 1

80

90 100

20

30

40

50 60 70
Group Size
Scenario 2

80

90 100

Fig. 4. Group size VS tree cost

900

900

800

800

700

700

Tree Cost

Tree Cost

From this ﬁgure, we can infer that the performance of TOMOON is better
than TAG and approaches that of PIM-SM as the membership increases. We
give the reasons for this result from two aspects. First, as an increasing number
of nodes join the group in TOMOON, it is much easier for a new member to ﬁnd
a parent in its close neighborhood. In other words, the extra cost for accepting a
new member into the group decreases when the membership increases. Second,
the overlay of TAG is not adapted to the underlying network topology in all
situations. Although the parent and its new child share a longest segment on the
routes from the source to each of them in TAG, it is still possible that the overlay
link between these two nodes is longer than other alternatives. Thus TAG is less
aggressive than TOMOON in saving the tree cost.
In the second experiment, we assume that only a part of domains support IP
multicast. It is much closer to the situation of the real Internet. We select two

600
500
400

TOMOON(40)
TAG(40)
PIM-SM(40)
TOMOON(80)
TAG(80)
PIM-SM(80)

600
500
400

300

300
20

30

40

50

60

70

80

90 100

Percentage(%) of Multicast Routers
Scenario 1

20

30

40

50

60

70

80

90 100

Percentage(%) of Multicast Routers
Scenario 2

Fig. 5. Percentage of multicast domains VS tree cost

TOMOON: A Novel Approach for Topology-Aware Overlay Multicasting

651

ﬁxed group sizes(40 and 80) and adjust the percentage of multicast domains from
20% to 100% to study TOMOON’s performance in diﬀerent environments. The
growing percentage of multicast domains is transparent to other two protocols
in their simulations. From Fig. 5, we ﬁnd that the output of TOMOON is still
acceptable even when the multicast domains account for a small percentage in
the underlying network.

5

Conclusion

In this paper, we propose TOMOON as a novel overlay multicast approach,
which exploits the support from IP multicast routers to construct a topologyaware overlay tree. Compared with IP multicast and other overlay multicast
schemes, our approach has the following notable advantages :
1. A TOMOON tree is compatible with the physical network. With the help of
multicast routers, ineﬃcient branches in a multicast tree are eliminated.
2. TOMOON makes the membership management much easier in overlay multicast. In other words, TOMOON can deal with member joins and leaves
eﬃciently.
3. TOMOON encourages ISPs to provide better network layer support. Since
the multicast routers can capture consumers’ requests of various network services, ISPs are willing to build multicast domains for expectable commercial
beneﬁts.

References
1. Cain, et. al.: Internet Group Management Protocol, Version 3, RFC 3376, October
2002
2. S. Banerjee, B. Bhattacharjee, and C. Kommareddy: Scalable application layer multicast. Proc. ACM Sigcomm, Aug. 2002
3. Y.-H. Chu, S. G. Rao, and H. Zhang: A Case for End System Multicast. IEEE
J. Select. Areas Commun, VOL. 20, NO. 8, OCTOBER 2002.
4. Kwon, Minseok, and Sonia Fahmy: Path-aware overlay multicast Computer Networks 2005(47), pp. 23–45.
5. Estrin, et. al.: Protocol Independent Multicast-Sparse Mode (PIM-SM): Protocol
Speciﬁcation”, RFC 2362, June 1998
6. B.M. Waxman: Routing of multipoint connections.IEEE J. Select. Areas Commun.,
vol.6, no. 9, Dec. 1988.

