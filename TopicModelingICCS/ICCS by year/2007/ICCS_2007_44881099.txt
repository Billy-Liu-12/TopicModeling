A System Behavior Analysis Technique with
Visualization of a Customer’s Domain
Shoichi Morimoto
School of Industrial Technology, Advanced Institute of Industrial Technology
1-10-40, Higashi-oi, Shinagawa-ku, Tokyo, 140-0011, Japan
morimoto-syoichi@aiit.ac.jp

Abstract. Object-oriented analysis with UML is an eﬀective process
for software development. However, the process closely depends on workmanship and experience of software engineers. In order to mitigate this
problem, a precedence eﬀort, scenario-based visual analysis, has been
proposed. The technique visualizes a customer’s domain, thus it enables requirement analyzers and customers to communicate smoothly.
The customers themselves can schematize their workﬂows with the technique. Consequently, the analyzers and customers can easily and exactly
derive use case models via the collaborative works. Thus, this paper
proposes a technique to advance the analysis further, inheriting such
advantages. The extended technique can analyze initial system behavior speciﬁcations. The customers can also join and understand system
behavior analysis, thus they can easily decide on speciﬁcations for developing systems.
Keywords: Activity diagrams, Model-based development.

1

Introduction

Requirement analysis and speciﬁcations for software are important factors to
make success of software development and because quality of the analysis aﬀects
quality of the software, it is the most important process. Thus, various analysis techniques were proposed; especially, Object-Oriented Analysis (OOA) with
UML1 is most widely used to model a domain of customers. After the modeling,
customers and developers can understand and analyze the domain and systematically decide requirement speciﬁcations [6]. However, because the developers
must fully analyze a domain of customers based on OOA, quality of the analysis
is dependent on their capability.
In order to mitigate the problem, Scenario-based Visual Analysis, SVA for
short, was proposed [3, 2]. In SVA, analyzers and customers can analyze requirements in a domain and elicit use cases from very simple workﬂow scenarios
cooperatively. That is to say they can easily understand, schematize and analyze the domain in a much simpler manner than using UML. On the other
1

Uniﬁed Modeling Language: http://www.omg.org/UML/

Y. Shi et al. (Eds.): ICCS 2007, Part II, LNCS 4488, pp. 1099–1106, 2007.
c Springer-Verlag Berlin Heidelberg 2007

1100

S. Morimoto

hand, diﬃculty and quality of system behavior analysis in OOA with UML is
dependent on workmanship and experience of designers likewise. Therefore, this
paper proposes a system behavior analysis technique utilizing resources which
are generated in the SVA processes. One can model not only use cases but also
system behavior with the technique. Moreover, the technique visualizes a domain
of customers, thus it enables designers and customers to communicate smoothly.
Consequently, the customers can easily and exactly decide requirements to the
developers.

2

Process of the System Behavior Analysis Technique

We herein explain the process of SVA and the system behavior analysis.
2.1

The Process of the Scenario-Based Visual Analysis

SVA can be adaptable to the requirements phase of object-oriented software
development. That is, use case diagrams can be obtained via the collaborative
works on the process. Use cases and actors are generally found out from a conceptual map, named business bird’s eye view (BEV), through arranging icons
which indicate subjects, verbs, and nouns in workﬂow scenarios. A software tool
named SVA editor is also provided to support the operations [3]. Analyzers can
systematically perform the analysis and customers can easily join to the process.
Furthermore, in the last phase of the process, both of them can collaboratively
and visually decide which part of the tasks in the scenario should be implemented
as software on a BEV.
In SVA, analyzers use workﬂow scenarios in order to capture a customer’s
business domain. A BEV is created from the workﬂow scenarios to obtain a conceptual map of the domain. The BEV will be arranged to clarify the whole structure of the elements which constitutes the workﬂow. Finally, use case diagrams
will be elicited from the BEV. The process of SVA is performed as following steps;
1.
2.
3.
4.
5.
6.

Customers describe workﬂow scenarios.
Analyzers form an initial BEV from the scenarios.
The analyzers arrange the BEV to cluster verbs.
The analyzers and the customers analyze roles of the subjects.
The analyzers consider the system boundary.
The analyzers obtain use case diagrams.

SVA deﬁnes some rules to write workﬂow scenarios as follows.
– Use simple sentences with one verb and several nouns which might involve
articles, propositions, and adjectives. Other parses, such as adverbs, can be
used but are not analyzed in SVA.
– Use active sentence. Do not use passive voice. The order of the words is such
like Subject-Verb-Objects.

A System Behavior Analysis Technique with Visualization

1101

Since task statements of customers are described in the workﬂow scenarios using
simple natural language, they can easily conﬁrm the correctness of the contents.
The analyzers form a BEV from each sentence in the workﬂow scenarios.
Rectangle icons and oval icons are used to stand for nouns and verbs, respectively.
A subject and the other icons are connected by lines from a verb. The line to
the subject is drawn as a solid line and lines to the other icons are drawn as
broken lines.
After all the sentences in the workﬂow scenarios have been visualized on the
BEV, the analyzers synthesize them. Same nouns are shared by every sentence
in which they are used. Verbs are not shared even if the same verbs appear in
several sentences.
After the synthesis, the analyzers rearrange elements so that the BEV will
become legible. This arrangement also produces a semantic relation structure on
the conceptual map. During this arrangement to clarify, the analyzers have to
take care to ﬁnd out semantic clusters of verb icons. This process is necessary
to analyze roles of subjects in the next step where noun icons will be analyzed.
In the next step, the analyzers abstract subjective noun icons as roles of tasks.
If a subjective noun icon is connected from some clusters of verbs, the subjective
noun has some diﬀerent roles. In such cases, a single subject is decomposed to
multiple roles. Each of them is reconnected to the verb clusters.
After the role analysis, both the analyzers and customers decide a system
boundary on the rearranged BEV. This decision is made by both the analyzers
and the customers cooperatively. The boxed line is used to indicate what part
of the tasks is developed to be a software system. After the boundary is drawn,
the analyzers have to consider what nouns should be moved into the boundary.
For example, they must decide whether or not physical objects are implemented
in software. In such situations, the editable map, i.e., the BEV acts as a communication tool between the analyzer and customer. They can have a visual
support, i.e., the map, to discuss about the scope of the system which is going
to be developed.
Generating a use case diagram is the ﬁnal step of SVA. The way how to elicit
actors and use cases is very simple. The role icons connecting to the verbs on the
system boundary line and located outside of the box become actors. The verbs
on the boundary which connect to the actors become use cases.
You can get the further details of the SVA process from the references [3, 2].
2.2

Artifacts of the System Behavior Analysis Technique

In the system behavior analysis of OOA with UML, interaction or activity diagrams are generally used. Interaction diagrams illustrate how objects interact
via messages. Activity diagrams are typically used for business process modeling, for modeling the logic captured by a single use case or usage scenario, or
for modeling the detailed logic of a business rule [1]. Because activity diagrams
are closely related with scenarios in natural language and are suitable for system
behavior analysis, the objective of our technique is to design activity diagrams
from the results in SVA (i.e., workﬂow scenarios, a BEV, and use case diagrams).

1102

2.3

S. Morimoto

The Procedure of the System Behavior Analysis Technique

The system behavior analysis technique eﬀectively utilizes the artifacts of SVA.
Designers ﬁrst select a target use case from an elicited use case diagram in SVA.
Secondly, the designers extract the source verb icon of the selected use case and
all noun icons which are connected with the verb icon from the BEV. In the
third step the designers and customers cooperatively analyze activities from the
extracted icons and the source sentence of the icons in the workﬂow scenario.
Next the designers draw partitions of an activity diagram based on the actors
which are connected with the selected use case in the use case diagram. Then
the designers set the elicited activities on the partition which is drawn from the
actor of the activity’s subject in chronological order. The designers repeat the
above steps to all use cases in the use case diagram. The following is the procedure of the analysis.
1. After having used SVA, select a use case in a use case diagram.
2. Extract the source verb icon of the selected use case and all noun icons which
are linked with the verb icon in the BEV.
3. Elicit activities from the extracted icons and the source sentence of the icons
in the workﬂow scenario.
4. Draw partitions from actors which are linked with the selected use case in the
use case diagram.
5. Put the activities on the corresponding partition in chronological order.

3

Application

In order to intelligibly demonstrate the steps of the process in detail, we present
an actual consulting example. The business domain of this example is a hospital,
where a new software system is needed to support their daily tasks. Especially,
the staﬀ’s demand is that they want to develop the online medical record chart
system for doctors.
3.1

Use Case Analysis

The objective of this paper is not to show the use case analysis of SVA, thus we
show only the outline of the SVA phase.
The workﬂow scenario on the next page Fig. 1 shows the business domain
of the ﬁrst medical examination. The parts which are surrounded by square
brackets denote modiﬁcations in the revision phase of SVA. These parts were
elicited by collaborative discussion of the analyzers and customers. First, all the
workﬂows were modeled into BEVs. Secondly, the BEVs were synthesized into
one diagram. Thirdly, the verb icons were grouped and roles of the subjective
nouns were analyzed in the synthesized BEV. The BEV on the next page Fig. 2
was ﬁnally modeled from the workﬂow scenario. The verb icons were classiﬁed
into the clusters (A), (B), (C), (D), (E), (F), (G), (H), (I), (J), (K), and (L).

A System Behavior Analysis Technique with Visualization

1103

1. The patient submits the insurance card to the receptionist.
2. The receptionist inquires of the patient the symptom.
3. The receptionist decides the department from the symptom.
4. The receptionist makes the patient ﬁll the application.
5. The receptionist makes the medical chart from the application [and the insurance card].
6. [The receptionist makes the consultation card from the insurance card].
7. The receptionist brings the medical chart to the surgery of the department.
8. The receptionist hands the nurse in the surgery the medical chart.
9. The nurse calls the patient in the waiting room.
10. The patient enters the surgery.
11. The doctor examines the patient.
12. The doctor gives the medical treatment to the patient.
13. The doctor writes the medical treatment to the medical chart.
14. The patient leaves the surgery.
15. The patient goes the waiting room.
16. The nurse brings the medical chart to the reception.
17. The receptionist calculates the medical bill [from the medical treatment in the medical chart].
18. The receptionist calls the patient in the waiting room.
19. The receptionist charges the patient the medical bill.
20. The patient pays the receptionist the medical bill.
21. The receptionist hands the patient the consultation ticket [and the insurance card].
22. The receptionist puts the medical chart on the cabinet.

Fig. 1. The workﬂow scenario of the ﬁrst medical examination

insurance

hospital business boundary

card

(A)

submint

make

ticket
hand
symptom
inquire

chart system boundary

(G)

consultation

(H)

(X)

make
transfer clerk

doctor’s
bill

decide

(B)

bring

application

(Y)

fill

chart making
clerk
ticket making
clerk
accounting
clerk

card carrier
charge

receptionist

(C)
patient

pay

(D)

call

claimant
calling clerk

(J)

(L)

put

calcurate

write

bill
waiting

enter

room

(E)
leave

examine

over

doctor's

call

surgery
examining
clerk

entering clerk

chart

hand

bring

(K)

go

(F)

(I)

medical

(Z)

Fig. 2. The BEV of the hospital business

chart
receiver
cabinet

medical
treatment

1104

S. Morimoto

The subjective nouns which are linked with two or more verbs were decomposed
into some roles. Consequently, the use case diagram in Fig. 3 was also composed
from the chart system boundary on Fig. 2. Use cases are the verb clusters (G),
(H), (K), and (L) on the boundary. Actors are the roles (Y) and (Z) which are
connected to the verb clusters with the solid line. Two actors and four use cases
are elicited and named adequately. The foregoing operations are the SVA outline.

(Y)

receptionist
(Z)

Online chart system
(G)
make a chart
(H)
make a consultation
ticket
(K)
calculate a
doctor’s bill
(L)
write a medical
treatment

doctor
Fig. 3. The use case diagram of the online medical record chart system

3.2

System Behavior Analysis

We analyze the system behavior from the workﬂow, the BEV, and the use case
diagram of Section 3.1.
First, we select the use case “make a chart.” This use case was obtained
from the part (G) in the BEV. The verb icon is “make” on the part (G) of
Fig. 2 and the noun icons which are directly linked to it are “insurance card,”
“application,” and “medical chart.” These are the ﬁrst and second processes of
the system behavior analysis mentioned in Section 2.3.
Next, see the source sentence of the icons in the scenario Fig. 1. The sentence
corresponds to “5. The receptionist makes the medical chart from the application and the insurance card.” That is, it is clariﬁed that the information of
“application” and “insurance card” is required in order to make a medical chart.
Therefore, the activities “input the information on an application” and “input
the information on an insurance card” are identiﬁed. We used the nouns “application” and “insurance card,” however the noun “medical chart” is not yet
used. The business domain of this example is the ﬁrst medical examination, thus
the patient visits the hospital surely for the ﬁrst time. Because there is no chart
of the patient, the receptionist must make a new chart for the patient. That is,
before the foregoing activities, the activity “make a new chart data” is required.
The above operation is the third process of the system behavior analysis.
Finally, make a partition from the actor linked to the use case, i.e., “receptionist” and put the activities on the partition in chronological order. In consequence,
the activity diagram in Fig. 4 is composed.

A System Behavior Analysis Technique with Visualization

1105

receptionist

mak e a new chart data

input the information on an application

input the information on an insurance card

Fig. 4. The activity diagram of the use case “make a chart”
receptionist

make a new cons ultation

receptionist

doctor

input a medical treatment

g et a medical chart data

ticket data

input the information of

calculate a doctor’s bill

a medical chart

print out a

input the information of
a medical treatment

print out a receipt

consultation ticket

Fig. 5. The activity diagrams of the other use cases

Similarly, we analyze the use case “make a consultation ticket.” This use
case was obtained from the part (H) in the BEV. The verb icon is “make” on
the part (H) of Fig. 2 and the noun icons which are directly linked to it are
“consultation ticket” and “medical chart.” The source sentence corresponds to
“6. The receptionist makes the consultation card from the insurance card.” The
information of “medical chart” is required in order to make a consultation ticket.
Therefore, the activity “input the information on a medical chart” is clariﬁed.
Because there is no consultation ticket of the patient like the above analysis,
the activity “make a new consultation ticket data” is required. Moreover, if
you pursue the connection of the icon “consultation ticket,” it will be clariﬁed
that the receptionist must hand the patient the actual object, i.e., the ticket.
Accordingly, the receptionist must print out the ticket with the online chart
system; the activity “print out a consultation ticket” is identiﬁed. Since the
third process of the system behavior analysis is a group work, the designers can
easily get customer’s consent about such activities. The other use cases can be
analyzed in the same procedure likewise. The diagrams are shown in Fig. 5.
Moreover, the technique is adaptable to the business modeling [5]. SVA can
also analyze business use cases. If the boundary for the hospital business is drawn

1106

S. Morimoto

in Fig. 2, the business use case diagram is formed in the same way. Similarly, a
business activity diagram can be elicited from the workﬂow scenario. The subject
in each workﬂow may become a partition of a business activity diagram and each
workﬂow sentence excepted the subject clause may become a business activity.

4

Concluding Remarks

In this paper, we have proposed a system behavior analysis technique utilizing
the scenario-based visual analysis. Software designers can obtain activity diagrams according to the process of the technique. Since the technique utilizes the
scenario-based visual analysis, the designers can understand customer’s business
domain. Moreover, since the rules of the scenario description are very simple,
the customers who fully understand the business domain can write the workﬂow
scenarios. Consequently, they can have common understanding via the group
works. That is, they can easily decide speciﬁcations on software development.
Henceforth, we will apply the technique to further practical subjects. The activity diagrams of the example were not complex; they do not use condition or
decision. Moreover, the technique designs only activity diagrams now. If class
diagrams can be elicited from workﬂow scenarios, sequence and state machine
diagrams can also be designed. In the business bird’s eye view, designers can
easily decide classes, because noun factors in the customer’s domain are clariﬁed. However, in order to identify attributes and methods of classes, it may be
necessary to add further information, e.g., a picture. In the case of the example
in this paper, maybe the picture of the medical chart is required for class design.
We are improving the technique and developing a tool to aid this idea.
Acknowledgement. My special thanks are due to Dr. Chubachi for his
advice.

References
1. Ambler, S. and Jeﬀries, R.: Agile Modeling, Wiley (2002)
2. Chubachi, Y., Kobayashi, T., Matsuzawa, Y., and Ohiwa, H.: Scenario-Based Visual
Analysis for Use Case Modeling, IEICE Transactions on Information and Systems,
Vol. J88-D1, No.4 (2005) 813–828 (in Japanese)
3. Chubachi, Y., Matsuzawa, Y., and Ohiwa, H.: Scenario-Based Visual Analysis for
Static and Dynamic Models in OOA, Proceedings of the IASTED International
Conference on Applied Modelling and Simulation (AMS 2002), ACTA Press (2002)
495–499
4. Jacobson, I., Booch, G., and Rumbaugh, J.: The Uniﬁed Software Development
Process, Addison-Wesley (1999)
5. Jacobson, I., Ericsson, M., and Jacobson, A.: The Object Advantage - Business
Process Reengineering with Object Technology, Addison-Wesley (1996)
6. Kruchten, P.: The Rational Uniﬁed Process: An Introduction, Addison-Wesley
(2003)

