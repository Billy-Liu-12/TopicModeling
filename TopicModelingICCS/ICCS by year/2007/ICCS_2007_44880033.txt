Point-Sampled Surface Simulation Based on
Mass-Spring System
Zhixun Su1,2 , Xiaojie Zhou1 , Xiuping Liu1 , Fengshan Liu2 , and Xiquan Shi2
1

2

Department of Applied Mathematics, Dalian University of Technology, Dalian
116024, P.R. China
zxsu@comgi.com, xiaojiezhou66@gmail.com, xpliu@comgi.com
Applied Mathematics Research Center, Delaware State University, Dover, DE
19901, USA
{fliu,xshi}@desu.edu

Abstract. In this paper, a physically based simulation model for pointsampled surface is proposed based on mass-spring system. First, a
Delaunay based simpliﬁcation algorithm is applied to the original pointsampled surface to produce the simpliﬁed point-sampled surface. Then
the mass-spring system for the simpliﬁed point-sampled surface is constructed by using tangent planes to address the lack of connectivity information. Finally, the deformed point-sampled surface is obtained by
transferring the deformation of the simpliﬁed point-sampled surface. Experiments on both open and closed point-sampled surfaces illustrate the
validity of the proposed method.

1

Introduction

Point based techniques have gained increasing attention in computer graphics.
The main reason for this is that the rapid development of 3D scanning devices has
facilitated the acquisition of the point-sampled geometry. Since point-sampled
objects do neither have to store nor to maintain globally consistent topological
information, they are more ﬂexible compared to triangle meshes for handling
highly complex or dynamically changing shapes. In point based graphics, point
based modeling is a popular ﬁeld [1,4,9,13,15,21], in which physically based modeling of point-sampled objects is still a challenging area.
Physically based modeling has been investigated extensively in the past two
decades. Due to the simplicity and eﬃciency, mass-spring systems have been
widely used to model soft objects in computer graphics, such as cloth simulation. We introduce mass-spring system to point-sampled surface simulation. A
Delaunay based simpliﬁcation algorithm is applied to the original point-sampled
surface to produce the simpliﬁed point-sampled surface. By using the tangent
plane and projection, mass-spring system is constructed locally for the simpliﬁed
point-sampled surface. Then the deformed point-sampled surface is obtained by
transferring the deformation of the simpliﬁed point-sampled surface.
The remaining of the paper is organized as follows. Related work is introduced
in Section 2. Section 3 explains the Delaunay based simpliﬁcation algorithm.
Y. Shi et al. (Eds.): ICCS 2007, Part II, LNCS 4488, pp. 33–40, 2007.
c Springer-Verlag Berlin Heidelberg 2007

34

Z. Su et al.

Section 4 describes the simulation of the simpliﬁed point-sampled surfaced based
on mass-spring system. Section 5 introduces the displacement transference to the
original point-sampled surface. Some experiments results are shown in Section
6. A brief discussion and conclusion is presented in Section 7.

2

Related Work

Point-sampled surfaces often consist of thousands or even millions of points sampled from an underlying surface. Reducing the complexity of such data is one of
the key processing techniques. Alexa et al [1] described the contribution value of
a point by estimating its distance to the MLS surface deﬁned by the other sample
points, and the point with the smallest contribution will be removed repeatedly.
Pauly et al [14] extended mesh simpliﬁcation algorithms to point clouds, and
presented the clustering, iterative, and particle simulation simpliﬁcation algorithms. Moenning et al [12] devised a coarse-to-ﬁne uniform or feature-sensitive
simpliﬁcation algorithm with user-controlled density guarantee. We present a
projection based simpliﬁcation algorithm, which is more suitable for the construction of mass-spring system.
Point based surface representation and editing are popular ﬁelds in point
based graphics. Alexa et al [1] presented the now standard MLS surface, in
which the surface is deﬁned as the stationary set of a projection operator. Later
Shachar et al [4] proposed a robust moving least-squares ﬁtting with sharp features for reconstructing a piecewise smooth surface from a potentially noisy point
clouds. The displacement transference in our method is similar to moving least
squares projection. Zwicker [21] presented Pointshop3D system for interactive
editing of point-based surfaces. Pauly et al [15] introduced Boolean operations
and free-form deformation of point-sampled geometry. Miao et al [10] proposed
a detail- preserving local editing method for point-sampled geometry based on
the combination of the normal geometric details and the position geometric details. Xiao et al [19,20] presented eﬃcient ﬁltering and morphing methods for
point-sampled geometry. Since the pioneering work of Terzopoulos and his coworkers [18], signiﬁcant research eﬀort has been done in the area of physically
based modeling for meshes [5,16]. Recently, Guo and Qin et al [2,6,7,8] proposed
the framework of physically based morphing, animation and simulation system.
M¨
uller et al [13] presented point based animation of elastic, plastic and melting
objects based on continuum mechanics. Clarenz et al [3] proposed framework
for processing point-based surfaces via PDEs. In this paper, mass-spring system
is constructed directly for the simpliﬁed point-sampled surface. The idea of the
present method is similar to [17]. They studied curve deformation, while we focus
on point-sampled surface simulation.

3

Simpliﬁcation of Point-Sampled Surface

The point-sampled surface consists of n points P = {pi ∈ R3 , i = 1, . . . , n} sampled from an underlying surface, either open or closed. Since the normal at any

Point-Sampled Surface Simulation Based on Mass-Spring System

35

point can be estimated by the eigenvector of the covariance matrix that corresponds to the smallest eigen value [14], without loss of generality, we can assume
that the normal ni at point pi is known as input. Traditional simpliﬁcation algorithms reserve more sample points in regions of high-frequency, whereas less
sample points are used to express the regions of low-frequency, which is called
adaptivity. However, adaptivity does not necessary bring good results for simulation. An example is shown in Fig. 1, 1a) shows the sine curve and the simpliﬁed
curve, force F is applied on the middle of the simpliﬁed curve, 1b) shows that
the simulation based on the simpliﬁed curve produce the wrong deformation. We
present a Delaunay based simpliﬁcation algorithm, which is suitable for simulation and convenient for the construction of mass-spring system.

a) Sine curve (solid line) and the
simpliﬁed polyline(solid line)

b) Deformation of the simpliﬁed
polyline under an applied force F

Fig. 1. The eﬀect of simpliﬁcation to the simulation

For pi ∈ P , the index set of its k-nearest points is denoted by Nik = {i1 , . . . ,
ik }. These points are projected onto the tangent plane at point pi (the plane
passing through pi with normal ni ), and the corresponding projection points
are denoted by q ji , j = 1, . . . , k. 2D Delaunay triangulation is implemented on
the k + 1 projection points. There are two possible cases: 1) pi is not on the
boundary of the surface, 2) pi is on the boundary of the surface, shown as Fig. 2.
Suppose that there are m points {qji r , r = 1, . . . , m} which are connected with
pi in the triangle mesh, the union of the triangles that contain pi is denoted
by Ri whose diameter is di . In either case, if di is less than the user-deﬁned
threshold, pi will be removed. This process is repeated until the desired number
of points is reached or the diameter di for each point exceeds the threshold. The
resulting simpliﬁed point set is denoted by S = {sj , j = 1, . . . , ns }, and sj is
called simulation point. It is important to select a proper value of k, too small
k may inﬂuence the quality of simpliﬁcation, while too big k will increase the
computational cost. In our experiments, preferable is in the interval [10 − 20].

4
4.1

Simulation Based on Mass-Spring System
Structure of the Springs

Since no explicit connectivity information is known for the simpliﬁed pointsampled surface, traditional mass-spring system [16] can not be applied directly.
Here the stretching and bending springs are constructed based on the region
Ri corresponding to si . For si ∈ S, the vertices of the region Ri are {q ji r , r =

36

Z. Su et al.

a) Delaunay triangulation for case 1)

b) Delaunay triangulation for case 2)

Fig. 2. Delaunay triangulation of the projection points on the tangent plane

1, . . . , m}, which are the projection points of {sji r , r = 1, . . . , m}. Assuming that
q ji r are sorted counter clockwise. The stretching springs link si and sji r and the
j
bending springs connect sji r and si r+2 (Fig. 3). This process is implemented on
each point on S, and the structure of the springs is obtained consequently.

a) Stretching springs for case 1) and 2) b) Bending springs for case 1) and 2)
Fig. 3. The spring structures (dashed lines)

4.2

Estimation of the Mass

The mass of si is needed for simulation. Note that in region of low sampling
density, a simulation point si will represent large mass, whereas smaller mass
in region of higher sampling density. Since the area of region Ri reﬂects the
sampling density, the mass of si can be estimated by
mi =

1
ρSRi
3

(1)

where SRi is the area of region Ri , and ρ is the mass density of the surface.
4.3

Forces

According to the Hooke’s law, the internal force F s (Si,j ) of spring Si,j linking
two mass points si and sj can be written as
s
0
F s (Si,j ) = −ki,j
I i,j − li,j

I i,j
I i,j

(2)

s
0
is the stiﬀness of spring Si,j , I i,j = sj − si , and li,j
is the natural
where ki,j
length of spring Si,j .

Point-Sampled Surface Simulation Based on Mass-Spring System

37

In dynamic simulation, a damping force is often introduced to increase the
stability. In our context, the damping force is represented as
d
(v j − v i )
F d (Si,j ) = ki,j

(3)

d
where ki,j
is the coeﬃcient of damping, v j and v i are the velocities of sj and si .
Appling external forces to the mass-spring system yields realistic dynamics.
The gravitational force acting on a mass point si is given by

F g = mi g

(4)

where mi is the mass of the mass point si , g is the acceleration of gravity. A
force that connects a mass point to a point in world coordinates r0 is given by
F r = kr (r 0 − si )

(5)

where kr is the spring constant. Similar to [18], other types of external forces,
such as the eﬀect of viscous ﬂuid, can be introduced into our system.
4.4

Simulation

The mass-spring system is governed by Newton’ s Law. For a mass point si ,
there exists the equation
F i = mi ai = mi

d2 xi
dt2

(6)

where mi , xi , and ai are the mass, displacement, acceleration of si respectively.
A large number of integration schemes can be used to Eq. (6). Explicit schemes
are easy to implement and computationally cheap, but stable only for small
time steps. In contrast, implicit schemes are unconditionally stable at the cost
of computational and memory consumption. We use explicit Euler scheme for
simplicity in our system.

5

Deformation of the Original Point-Sampled Surface

The deformation of the original point-sampled surface can be obtained by the
deformation of the simpliﬁed point-sampled surface. Let us consider the xcomponent u of the displacement ﬁeld u = (u, v, w). Similar to [13], we compute
the displacement of pi through the simulation points in its neighborhood. While
the simulation points sampled from an underlying surface, it may be singular
due to coplanarity if we use moving least square ﬁtting to compute the displacement directly. We treat the tangent plane at pi as the reference domain.
The simulation points sji , j = 1, . . . , k in the neighborhood of pi are projected
onto the reference plane, with corresponding projection points q ji , j = 1, . . . , k,
and (¯
xj , y¯j ) , j = 1, . . . , k are the coordinates of q ji , j = 1, . . . , k in the local
coordinate system with origin pi . Let the x-component u is given by
u (¯
x, y¯) = a0 + a1 x
¯ + a2 y¯

(7)

38

Z. Su et al.

The parameters al , l = 0, 1, 2 can be obtained by minimizing
k

w (rj ) (uj − a0 − a1 x
¯j − a2 y¯j )2

Ei =

(8)

j=1

where rj is the distance between pi and q ji , w (·) is a Gaussian weighting function w (rj ) = exp (−rj2 /h2 ). Then ui = u (0, 0) = a0 . Similarly, v and w can
be computed. Since the shape of the point-sampled surface is changed due to
the displacements of the sample points, the normal of the underlying surface
will change consequently. The normal can be computed by the covariance analysis as mentioned above. The point sampling density will be changed due to
the deformation, we use the resampling scheme of [1] to maintain the surface
quality.

6

Experimental Results

We implement the proposed method on a PC with Pentium IV 2.0GHz CPU
and 512MB RAM. Experiments are performed on both closed and open surfaces,
shown as Fig. 4. The sphere is downloaded from the website of PointShop3D and
composed of 3203 surfels. For the modeling of the hat, the original point-sampled
surface is sampled from the lower part of a sphere, and a stretching force acted
on the middle of the point-sampled surface produce the hat. We also produce
another interesting example, the logo “CGGM 07”, which are both produced by
applying force on the point-sampled surfaces (Fig. 5). The simpliﬁcation and
the construction of mass-spring system can be performed as preprocess, and
the simulation points is much less in the simpliﬁed surface than the original
point-sampled surface, so the simulation is very eﬃcient. The performance of
simulation is illustrated in Table 1. The main computational cost is the transference of the displacement from the simpliﬁed surface to the original pointsampled surface and the normal computation of the deformed point-sampled
surface. Compared to the global parameterization in [7], the local construction
of mass-spring system makes the simulation more eﬃcient. The continuum-based
method [13] presented the modeling of volumetric objects, while our method can
deal with both volumetric objects using their boundary surface and sheet like
objects.
Table 1. The simulation time
Number of simulation points 85 273 327
Simulation time per step (s) 0.13 0.25 0.32

Point-Sampled Surface Simulation Based on Mass-Spring System

a) The deformation of a sphere

39

b) The modeling of a hat

Fig. 4. Examples of our method

Fig. 5. The “CGGM 07” logo

7

Conclusion

As an easy implemented physically based method, mass-spring systems have
been investigated deeply and have been used widely in computer graphics. However, it can not be used to point-sampled surfaces due to the lack of connectivity
information and the diﬃculty of constructing mass-spring system. We solve the
problem of the construction of mass-spring system for point-sampled surface
based on projection and present a novel mass-spring based simulation method
for point-sampled surface. A Delaunay based simpliﬁcation algorithm facilitates
the construction of mass-spring system and ensures the eﬃciency of the simulation method. Further study focuses on the simulation with adaptive topology.
And the automatic determination of the simpliﬁcation threshold should be investigated to ensure suitable tradeoﬀ between accuracy and eﬃciency in the
future.

Acknowledgement
This work is supported by the Program for New Century Excellent Talents in
University grant (No. NCET-05-0275), NSFC (No. 60673006) and an INBRE
grant (5P20RR01647206) from NIH, USA.

References
1. Alexa M., Behr J., Cohen-Or D., Fleishman S., Levin D., Silva C. T.: Computing
and rendering point set surfaces. IEEE Transactions on Visualization and Computer Graphics 9(2003) 3-15
2. Bao Y., Guo X., Qin H.: Physically-based morphing of point-sampled surfaces.
Computer Animation and Virtual Worlds 16 (2005) 509 - 518

40

Z. Su et al.

3. Clarenz U., Rumpf M., Telea A.: Finite elements on point based surfaces, Proceedings of Symposium on Point-Based Graphics (2004)
4. Fleishman S., Cohen-Or D., Silva C. T.: Robust moving least-squares ﬁtting with
sharp features. ACM Transactions on Graphics 24 (2005) 544-552
5. Gibson S.F., Mirtich B.: A survey of deformable models in computer graphics.
Technical Report TR-97-19, MERL, Cambridge, MA, (1997)
6. Guo X., Hua J., Qin H.: Scalar-function-driven editing on point set surfaces. IEEE
Computer Graphics and Applications 24 (2004) 43 - 52
7. Guo X., Li X., Bao Y., Gu X., Qin H.: Meshless thin-shell simulation based on
global conformal parameterization. IEEE Transactions on Visualization and Computer Graphics 12 (2006) 375-385
8. Guo X., Qin H.: Real-time meshless deformation. Computer Animation and Virtual
Worlds 16 (2005) 189 - 200
9. Kobbelt L., Botsch M.: A survey of point-based techniques in computer graphics.
Computer & Graphics, 28 (2004) 801-814
10. Miao Y., Feng J., Xiao C., Li H., Peng Q., Detail-preserving local editing for pointsampled geometry. H.-P Seidel, T. Nishita, Q. Peng (Eds), CGI 2006, LNCS 4035
(2006) 673-681
11. Miao L., Huang J., Zheng W., Bao H. Peng Q.: Local geometry reconstruction
and ray tracing for point models. Journal of Computer-Aided Design & Computer
Graphics 18 (2006) 805-811
12. Moenning C., Dodgson N. A.: A new point cloud simpliﬁcation algorithm. Proceedings 3rd IASTED Conference on Visualization, Imaging and Image Processing,
Benalm´
adena, Spain (2003) 1027-1033
13. M¨
uller M., Keiser R., Nealen A., Pauly M., Pauly M., Gross M., Alexa M.: Point
based animation of elastic, plastic and melting objects, Proceedings of ACM SIGGRAPH/Eurographics Symposium on Computer Animation (2004) 141-151
14. Pauly M., Gross M., Kobbelt L.: Eﬃcient simpliﬁcation of point-sampled surfaces.
Proceedings of IEEE Visualization (2002) 163-170
15. Pauly M., Keiser R., Kobbelt L., Gross M.: Shape modeling with point-sampled
geometry. ACM Transactions on Graphics 22(2003) 641-650
16. Provot X.: Deformation constraints in a mass-spring model to describe rigid cloth
behavior. Proc of Graphics Interface (1995) 147-154.
17. Su Z., Li L., Zhou X.: Arc-length preserving curve deformation based on subdivision. Journal of Computational and Applied Mathematics 195 (2006) 172-181
18. Terzopoulos D., Platt J., Barr A., Fleischer K.: Elastically deformable models.
Proc. SIGGRAPH (1987) 205-214
19. Xiao C., Miao Y., Liu S., Peng Q., A dynamic balanced ﬂow for ﬁltering pointsampled geometry. The Visual Computer 22 (2006) 210-219
20. Xiao C., Zheng W., Peng Q., Forrest A. R., Robust morphing of point-sampled
geometry. Computer Animation and Virtual Worlds 15 (2004) 201-210
21. Zwicker M., Pauly M., Knoll O., Gross M.: Pointshop3d: An interactive system for
point-based surface editing. ACM Transactions on Graphics 21(2002) 322- 329

