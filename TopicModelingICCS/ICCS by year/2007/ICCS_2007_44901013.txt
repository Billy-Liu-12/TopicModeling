In Search of Proper Pareto-optimal Solutions
Using Multi-objective Evolutionary Algorithms
Pradyumn Kumar Shukla
Institute of Numerical Mathematics
Department of Mathematics
Technische Universit¨
at Dresden
Dresden PIN 01069, Germany
pradyumn.shukla@mailbox.tu-dresden.de

Abstract. There are multiple solution concepts in multi-objective
optimization among which a decision maker has to select some good
solutions usually which satisfy some trade-oﬀ criteria’s. The need for potentially good solutions has always been one of the primary aims in multiobjective optimization. A complete representation of all these solutions
is only possible with population based approaches like multi-objective
evolutionary algorithms since then trade-oﬀ’s can be calculated at each
generation from the population members. Thus this paper proposes the
use of multi-objective evolutionary algorithms for obtaining a complete
representation of these good solutions. Theoretical results show how one
can integrate search procedure for obtaining these solutions in population based evolutionary algorithms and some convergence results. Finally
simulation results are presented on a number of test problems.
Keywords: Multi-objective optimization, Trade-oﬀ, Evolutionary
algorithms.

1

Introduction

Multi-objective optimization is one of the most rapidly growing areas of modern
optimization theory, see for example Deb [2], Miettinen [7] and the references
therein. Since there are multiple solution concepts in multi-objective optimization it often becomes a challenging issue both in theory and practice. The set of
all eﬃcient points as is well known lies in the boundary of the objective space
and is thus referred to as the eﬃcient frontier. However all points on the frontier need not have equally nice properties which a decision maker may desire
and thus one needs to ﬁlter out the bad Pareto points and keep the good ones.
Such nice Pareto points are referred to in the literature proper Pareto solutions. Thus the need for potentially good solutions has always been one of the
primary aims in multi-objective optimization. Good solutions can be thought
of as ”knee-points” on the eﬃcient frontier or that are good in trade-oﬀ with
respect to other solutions. However in most of practical and large scale problems, the user may usually not get the exact eﬃcient front and thus he has to
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 1013–1020, 2007.
c Springer-Verlag Berlin Heidelberg 2007

1014

P.K. Shukla

be content with approximate solutions. This usually happens if one uses population based approach like Multi-objective Evolutionary Algorithm (MOEA) or
any other algorithm. In these algorithm the obtained solutions may be thought
of as approximate representation of the eﬃcient front. We need to ﬁlter out the
bad ones and keep the so called ε-proper Pareto solutions. A complete representation of ε-proper Pareto solutions is only possible using population based
algorithms since trade-oﬀ’s need to be calculated for them. This paper presents
a way to obtain all these ε-proper Pareto solutions using MOEA’s. Theoretical
results are also presented so show convergence of such an algorithm.
The paper has been organized in three sections of which this is the ﬁrst.
Deﬁnitions of ε-proper eﬃciency theoretical results are presented in Section 2
while simulation results and conclusions are presented in Section 3.

2

Theoretical Results

Consider the following general multi-objective optimization problem (M P ):
min f (x) = (f1 (x), f2 (x), . . . , fm (x))

x∈X

where each fi : Rn → R and X ⊆ Rn . In what follows we will consider ε ∈ Rm
+,
i.e. ε = (ε1 , . . . , εm ), εi ≥ 0 for all i. In some cases we will set εi = ε , for all i
and then ε = eε where e = (1, . . . , 1) ∈ Rm
+.
∗
Deﬁnition 1 ε-Pareto optimal. Let ε ∈ Rm
+ be given then a point x ∈ X is
said to be an ε-Pareto optimal of (MP) if there exists no x ∈ X such that,

fi (x) ≤ fi (x∗ ) − εi ,

∀i ∈ {1, 2, . . . , m}.

(1)

and with strict inequality holding for at least one index.
Observe that if ε = 0, the above deﬁnition reduces to that of a Pareto optimal.
Let us denote the set of ε-Pareto points as Xε−par and the set of Pareto points as
Xpar . The notion of trade-oﬀ is inherent in multi-objective optimization which
led to more robust solution concept deﬁned next.
Deﬁnition 2 Proper Pareto optimal. x0 ∈ X is called proper Pareto optimal
if x0 is Pareto optimal and if there exists a number M > 0 such that for all i and
x ∈ X satisfying fi (x) < fi (x0 ), there exists an index j such that fj (x0 ) < fj (x)
and moreover (fi (x0 ) − fi (x))/(fj (x) − fj (x0 )) ≤ M.
There are many other notions of proper Pareto optimal solutions and the above
one based on trade-oﬀ’s was introduced by Geoﬀrion [5]. Let us denote the set
of all Geoﬀrion properly Pareto optimal solution as XG .
Lemma 1. A point x0 ∈ XG if and only if there exists M > 0 such that the
following system is inconsistent (for all i = 1, 2, . . . , m and for all x ∈ X).
−fi (x0 ) + fi (x) < 0
−fi (x0 ) + fi (x) < M (fj (x0 ) − fj (x))

∀j = i.

In Search of Proper Pareto-optimal Solutions

1015

Proof: If x0 ∈ XG then it is clear from the deﬁnition that above system is
inconsistent.
Suppose the system is inconsistent for some M > 0. We claim that x0 ∈ Xpar .
If not then on the contrary then there exists x ∈ X such that fl (x) < fl (x0 )
for some index l, and fk (x) ≤ fk (x0 ), for all k = l. Thus one easily sees that
system 1 has a solution for index i = l. Hence x0 ∈ Xpar . If x0 ∈ XG then for
all M > 0 there is an index i, and some x ∈ X satisfying −fi (x0 ) + fi (x) < 0,
−fi (x0 )+fi (x) < M (fj (x0 )−fj (x)) for all j such that −fj (x0 )+fj (x) > 0 (such
a j exists since x0 ∈ Xpar ). For j such that −fj (x0 )+fj (x) ≤ 0, −fi (x0 )+fi (x) <
M (fj (x0 ) − fj (x)) is trivially true. Thus the system is consistent for all M > 0,
and hence a contradiction.
Note that in Geoﬀrion’s deﬁnition x ∈ X. However as shown in next lemma,
m
when Y = f (X) is Rm
+ compact (i.e. the sections (y − R+ ) ∩ Y are compact for
all y ∈ Y ) then this can be replaced by x ∈ Xpar .
Lemma 2. Suppose that Y = f (X) is Rm
+ compact, then x0 ∈ XG if x0 is Pareto
optimal and if there exists a number M > 0 such that for all i and x ∈ Xpar
satisfying fi (x) < fi (x0 ), there exists an index j such that fj (x0 ) < fj (x) and
moreover (fi (x0 ) − fi (x))/(fj (x) − fj (x0 )) ≤ M.
Suppose that x0 satisﬁes the conditions of the lemma. Then using Lemma 1, we
obtain that for all x
ˆ ∈ Xpar the following system which we mark as (System 1),
has no solutions,
−fi (x0 ) + fi (ˆ
x) < 0
−fi (x0 ) + fi (ˆ
x) < M (fj (x0 ) − fj (ˆ
x))

∀j = i.

Take any x ∈ X, x ∈ Xpar . Now since Y = f (X) is Rm
+ compact so there
exists x
ˆ ∈ Xpar such that
x) − fi (x) ≤ 0
fi (ˆ
x) − fk (x) < 0
fk (ˆ

∀i = 1, 2, . . . , m
for some k.

Since the System 1 has no solutions, thus we obtain that the following system
also has no solutions
x) < fi (ˆ
x) − fi (x)
−fi (x0 ) + fi (ˆ
x) < M (fj (x0 ) − fj (ˆ
x)) + M (fj (ˆ
x) − fj (x)) + fi (ˆ
x) − fi (x) ∀j = i.
−fi (x0 ) + fi (ˆ
which is equivalent to saying that the following system is inconsistent,
−fi (x0 ) + fi (x) < 0
−fi (x0 ) + fi (x) < M (fj (x0 ) − fj (x))

∀j = i.

Thus System 1 has no solutions for any x ∈ X. Thus x ∈ XG

1016

P.K. Shukla

Deﬁnition 3 ε-properly Pareto optimal (Liu [6]). A point, x∗ ∈ X is called
ε-proper Pareto optimal, if x∗ is ε-Pareto optimal and there exists a number
M > 0 such that for all i and x ∈ X satisfying fi (x) < fi (x∗ ) − εi , there
exists an index j such that fj (x∗ ) − εj < fj (x) and moreover (fi (x∗ ) − fi (x) −
εi )/(fj (x) − fj (x∗ ) + εj ) ≤ M.
Observe that if ε = 0, the above deﬁnition reduces to that of a Geoﬀrion proper
Pareto optimal. Let us denote the set of all Liu properly Pareto optimal solution
as XL (ε). Let us however observe in the above deﬁnition and deﬁnition 2.2, M
is arbitrary. On the other side M provides a bound on the trade oﬀ between the
components of the objective vector. It is more natural to expect in practice the
decision maker will provide a bound on such trade oﬀs. Thus we are motivated
to deﬁne the following.
Deﬁnition 4 Geoﬀrion M properly Pareto optimal. Given a positive number M > 0, x0 ∈ X is called Geoﬀrion M proper Pareto optimal if x0 is Pareto
optimal and if for all i and x ∈ X satisfying fi (x) < fi (x0 ), there exists an index
j such that fj (x0 ) < fj (x) and moreover (fi (x0 ) − fi (x))/(fj (x) − fj (x0 )) ≤ M.
Let us denote the set of all Geoﬀrion M properly Pareto optimal solution as
XM . It is to be noted that a similar modiﬁed deﬁnition is also possible for Liu
ε-proper Pareto optimal solutions. Let us denote the set of all M ε-proper Pareto
optimal as XM (ε).
Theorem 1. Let ε = ε e where ε ∈ R, ε > 0 and e = (1, 1, . . . , 1), then for
any ﬁxed M ,
(2)
XM = ∩ε >0 XM (ε)
Proof: Let x0 ∈ ∩ε >0 XM (ε). Hence for any ε > 0, and for all i, the following
system
−fi (x0 ) + fi (x) + ε < 0
M fj (x) + fi (x) − M fj (x0 ) − fj (x0 ) + M ε + ε < 0
i
has no solutions in x ∈ X Let W = Rm \(−intRm
+ ) and consider the vectors F (ε)
(for all i = 1, . . . , m) whose ﬁrst component is given by −fi (x0 ) + fi (x) + ε and
whose j th component is equal to M fj (x) + fi (x) − M fj (x0 ) − fj (x0 ) + M ε + ε ,
for all j = 2, . . . , m then F i (ε) ∈ W for all x ∈ X. Now since W is a closed cone
for each i
lim F i (ε) ∈ W
ε→0

This shows that the following system
−fi (x0 ) + fi (x) < 0
M fj (x) + fi (x) − M fj (x0 ) − fj (x0 ) < 0

In Search of Proper Pareto-optimal Solutions

1017

is inconsistent for all x ∈ X. Thus by Lemma 1 x0 is M -properly Pareto optimal,
or x0 ∈ XM . This shows that ∩ε >0 XM (ε) ⊂ XM Conversely, let x0 ∈ XM , thus
for all i = 1, . . . , m following system
−fi (x0 ) + fi (x) < 0
M fj (x) + fi (x) − M fj (x0 ) − fj (x0 ) < 0
is inconsistent for all x ∈ X, thus the following system
−fi (x0 ) + fi (x) < −ε
M fj (x) + fi (x) − M fj (x0 ) − fj (x0 ) < −M ε − ε
is also inconsistent for all x ∈ X.Thus x0 is M ε-properly Pareto for all ε > 0
Hence x0 ∈ ∩ε >0 XM (ε).

4

4

efficient front
M=100
M=10.0
M=5.0

3.5

3
2.5

2

2

2

2.5
f

f

2

3

1.5

1.5

1

1

0.5

0.5

0
0

0.5

1

1.5

2
f1

2.5

3

3.5

efficient front
M=3.0
M=2.0
M=1.5

3.5

4

0
0

0.5

1

1.5

2
f

2.5

3

3.5

4

1

Fig. 1. Proper Pareto optimal solutions Fig. 2. Proper Pareto optimal solutions
obtained using M=100, 10 and 5 on SCH obtained using M=3, 2 and 1.5 on SCH

Note that for checking an obtained solution for proper Pareto optimality one
needs to checks boundedness of trade-oﬀ’s with all feasible points. Using
Lemma 2 however we need to check this for only solutions that belong to the
non-dominated front. Thus the above theoretical results can be eﬀectively applied to population based multi-objective evolutionary algorithms since in these
algorithms one gets a approximate non-dominated front at each iteration. Theorem 1 says that if an algorithm is computing approximate proper Pareto optimal
solutions then in the end we obtain exact proper Pareto optimal solutions. In order to compute approximate proper Pareto optimal solutions we take the elitist
non-dominated sorting GA or NSGA-II [3] and introduce constraints as follows.
Given any solution f (x0 ) at any generation, we calculate the following constraint
violation
min{0, {M − (fi (x0 ) − fi (x))/(fj (x) − fj (x0 ))}}

c(x0 ) =
x

1018

P.K. Shukla
1

1
efficient front
M=100.0
M=10.0
M=5.0

0.9

0.8
0.7

0.6

0.6

0.5

0.5

2

0.7

f

f

2

0.8

0.4

0.4

0.3

0.3

0.2

0.2

0.1

0.1

0
0

0.1

0.2

0.3

0.4

0.5
f1

0.6

0.7

0.8

0.9

efficient front
M=3.0
M=2.0
M=1.5

0.9

1

0
0

0.1

0.2

0.3

0.4

0.5
f1

0.6

0.7

0.8

0.9

1

Fig. 3. Proper Pareto optimal solutions Fig. 4. Proper Pareto optimal solutions
obtained using M=100, 10 and 5 on ZDT1 obtained using M=3, 3 and 1.5 on ZDT1

for all solutions x and all indices (i, j) that satisfy fi (x) < fi (x0 ), fj (x) > fj (x0 ).
Thus for any solution that is non Pareto optimal c(x0 ) provides a measure of
how far is the solution from proper Pareto optimal. For proper Pareto optimal
solutions the constraint violation is zero. Thus this provides a measure to penalty
solutions that are non Pareto optimal.

3

Simulation Results and Conclusions

In this section, we apply the above constraint approach to obtain proper Pareto
optimal solutions for diﬀerent values of M . For the NSGA-II, we use a standard
real-parameter SBX and polynomial mutation operator with ηc = 10 and ηm =
10, respectively [2] (unless otherwise stated). For all problems solved, we use a
population of size 100. We set the number of function evaluations as 20000 for
each problems.
First we consider a one variable bi-objective Schaﬄer’s test problem (SCH).
This problem is unconstrained and has a convex eﬃcient frontier. The Pareto
optimal solutions correspond to x = [0, 2]. Figure 1 shows the obtained eﬃcient
front corresponding to M =100, 10 and 5. The complete eﬃcient front is also
shown. The unrestricted eﬃcient front can be seen as solutions corresponding
to proper Proper optimal solutions with M = ∞. It can be seen that all the
eﬃcient front is proper Pareto optimal with respect to M =100. The eﬃcient
front reduces when smaller values of M are used with f1 =0.36 to 1.89 for M =2
(Figure 2).
The box-constrained ZDT1 problem has a convex Pareto optimal front for
which solutions correspond to 0 ≤ x∗1 ≤ 1 and x∗i = 0 for i = 2, 3, . . . , 30.
Here Figure 3 and 4 show the obtained eﬃcient front corresponding to diﬀerent
values of M . It can be seen that (as opposed to SCH) here only the part corresponding to minimization of f1 is chopped out as M value is reduced. This is
because M proper Pareto optimal solutions are based on trade-oﬀ’s and are thus

In Search of Proper Pareto-optimal Solutions

1019

1
efficient front
M=100.0
M=10.0
M=6.0
M=5.0

0.9
0.8
0.7

f2

0.6
0.5
0.4
0.3
0.2
0.1
0
0

0.1

0.2

0.3

0.4

0.5
f1

0.6

0.7

0.8

0.9

1

Fig. 5. Proper Pareto optimal solutions obtained using M=100, 10, 6 and 5 on ZDT2

related to slope of eﬃcient front. In the ZDT1 problem slope is more near the
f1 minimum.
The box-constrained ZDT2 problem has a non-convex Pareto optimal front
for which solutions correspond to 0 ≤ x∗1 ≤ 1 and x∗i = 0 for i = 2, 3, . . . , 30. This
problem is non-convex so in this case guided domination approach [1] cannot be
used for ﬁnding intermediate regions in this problem. However even in this case
concept of trade-oﬀ can be applied to obtain M proper Pareto optimal solutions.
Figure 5 shows the obtained eﬃcient front corresponding to diﬀerent values of
M . As opposed to ZDT1 it is observed that for M values smaller than 5.0 only
a very small part of eﬃcient front is obtained while no feasible solution is M
proper Pareto optimal values for M =2. Thus in this case these values give range
of realistic trade-oﬀ values to a decision maker.
Finally we consider a constrained test problem (CTP7). This problem has
disconnected set of continuous regions. As suggested in [4] we use ﬁve decision
variables. Here the eﬃcient front consists of six disconnected convex regions.
Figure 6 and 7 show the obtained eﬃcient front corresponding to diﬀerent values
of M . It can be seen that all six parts of eﬃcient front are obtained with M
proper Pareto optimal solutions corresponding to M =100, 5 and 2. With M =1.5
however only four parts remain and for M =1.2 only one part of eﬃcient front
remains.
The decision maker could also use diﬀerent M values for trade-oﬀ’s in diﬀerent objectives. It is a simple exercise to show the theoretical results presented
in Section 2 remain valid in such a case. Finally it is to be noted that the convergence result of Theorem 1 could be applied to any other population based
multi-objective evolutionary algorithm other than NSGA-II. In such cases non
M proper Pareto optimal solutions could be penalized and then some constraint
handling approach can also be used.

P.K. Shukla

00000000
11111111
000000000
111111111
00000
2 11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
efficient front
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
1.8 11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
M=10.0
00000000
11111111
000000000
111111111
feasible regions
000000000
111111111
000000000
111111111
00000
11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
1.6 11111
00000000
11111111
000000000
111111111
M=5.0
000000000
111111111
000000000
111111111
00000
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
M=2.0
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
000000
111111
1.4 11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
1.2 11111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
00000
11111
000000
111111
1 111111111
00000000
11111111
000000000
111111111
000000000
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
000000
111111
0.8 111111111
00000000
11111111
000000000
111111111
000000000
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
000000000
111111111
000000
111111
0.6 111111111
00000000
11111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000
111111
00000000
11111111
000000000
111111111
000000000
111111111
000000
111111
000000000
111111111
0.4
000000000
111111111
000000
111111
000000000
111111111
000000000
111111111
000000
111111
000000000
111111111
000000000
111111111
000000
111111
000000000
111111111
000000
111111
0.2
000000000
111111111
000000
111111
000000
111111
0
1
000000
111111
0
1
0
1
0
0
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
1
f1

f2

f2

1020

000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
2 11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
efficient front
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
1.8 11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
M=1.5
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
M=1.2
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
1.6 11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
1.4 11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
0000000
1111111
1.2 11111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
00000
11111
0000000
1111111
1
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
0.8
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
0.6
00000000
11111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000000
11111111111
0000000
1111111
000000000
111111111
00000000000
11111111111
00000000000
11111111111
0000000
1111111
00000000000
11111111111
0.4
00000000000
11111111111
0000000
1111111
00000000000
11111111111
00000000000
11111111111
0000000
1111111
00000000000
11111111111
00000000000
11111111111
0000000
1111111
00000000000
11111111111
0000000
1111111
00000000000
11111111111
0.2
0000000
1111111
0000000
1111111
0
1
0000000
1111111
0
1
0
1
0
0
1
0
0.2
0.4
0.6
0.8
1
f1

Fig. 6. Proper Pareto optimal solutions Fig. 7. Proper Pareto optimal solutions
obtained using M=10, 5 and 2 on CTP7 obtained using M=1.5, and 1.2 on CTP7

Acknowledgements
The author acknowledges the partial ﬁnancial support by the Gottlieb-Daimlerand Karl Benz-Foundation under Project No. 02-13/05.

References
1. J. Branke, T. Kauβler, and H. Schmeck. Guidance in evolutionary multi-objective
optimization. Advances in Engineering Software, 32:499–507, 2001.
2. K. Deb. Multi-objective optimization using evolutionary algorithms. Chichester, UK:
Wiley, 2001.
3. K. Deb, S. Agrawal, A. Pratap, and T. Meyarivan. A fast and elitist multi-objective
genetic algorithm: NSGA-II. IEEE Transactions on Evolutionary Computation,
6(2):182–197, 2002.
4. K. Deb, A. Pratap, and T. Meyarivan. Constrained test problems for multi-objective
evolutionary optimization. In Proceedings of the First International Conference on
Evolutionary Multi-Criterion Optimization (EMO-01), pages 284–298, 2001.
5. Arthur M. Geoﬀrion. Proper eﬃciency and the theory of vector maximization.
J. Math. Anal. Appl., 22:618–630, 1968.
6. Jen-Chwan Liu. -properly eﬃcient solutions to nondiﬀerentiable multiobjective
programming problems. Appl. Math. Lett., 12(6):109–113, 1999.
7. K. Miettinen. Nonlinear Multiobjective Optimization. Kluwer, Boston, 1999.

