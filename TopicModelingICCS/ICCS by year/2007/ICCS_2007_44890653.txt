A Problem Oriented Approach to Data Mining in
Distributed Spatio-temporal Database
Zhou Huang, Yu Fang, Xia Peng, Bin Chen, and Xuetong Xie
Institute of Remote Sensing & GIS, Peking University
Beijing, P.R. China 100871
huangzhou@pku.edu.cn

Abstract. Recently, a fast increment of spatio-temporal data volume has been
achieved and more importantly the data might distribute everywhere. So, there
is a need for spatio-temporal data mining systems that are able to support such
distributed spatio-temporal query and analysis operations. Distributed spatiotemporal data mining technologies were discussed in this paper. After
discussing the process of spatio-temporal data mining in distributed
environment, one actual DSTDMS (Distributed Spatio-Temporal Data Mining
System) was designed and then implemented. The system is based on data
model of sequent snapshot and accomplished through spatio-temporal extension
on PostgreSQL. Various spatio-temporal analyses and mining queries could be
carried out in the system through simple SQL statements. By using the system,
effective mining of distributed spatio-temporal data were achieved.
Keywords: Spatio-temporal data, Data mining, Distributed database, GIS.

1 Introduction
Along with the wide use of information technology, more and more attention is being
paid on spatio-temporal data [1]. In GIS (Geographic Information System) research
realm, how to discover useful knowledge among huge data distributed in network is
one of the most concerned topics. There are many related researches now. Erwig [1]
had a comparison and analysis among those common spatio-temporal data models,
including sequent snapshot model, base state with amendment model, event based
model, object oriented model and so on. Hamilton [2] concluded the architecture of
distributed spatio-temporal database system and defined the concept of STDML
(Spatio-Temporal Data Mining Language) and STDM (Spatio-Temporal Data Model)
as well. Harms [3] researched on the architecture of knowledge discovery in spatiotemporal database. Pokrajac [4] indicated that a well approach to STDML would be
achieved by extending SQL (Structured Query Language) for supporting spatiotemporal operations.
Existing researches mainly concentrate on STDM, STDML, Spatio-temporal
mining algorithms, etc. However, a chief problem is that there is not one common and
effective method for accomplishing a well-formed spatio-temporal data mining
system, especially in the circumstance of distributed spatio-temporal database [5].
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 653–660, 2007.
© Springer-Verlag Berlin Heidelberg 2007

654

Z. Huang et al.

Complex characteristics of STDM and STDML, as well as lack of unified distributed
spatio-temporal database architecture are the main reasons to that problem. So, it is
necessary for us to provide a common and effective method for constructing
DSTDMS. That is also a nature trend in GIS realm and of significance to promote the
application based on spatio-temporal data.
Basing on key technologies of distributed spatio-temporal database, this paper
concluded the structure model of DSTDMS (Distributed Spatio-Temporal Data
Mining System). Then an instance of DSTDMS named SpatialMiningService was
achieved based on that model. This paper accomplished the prototype by using
PostgreSQL as the backend database and sequent snapshot as spatio-temporal data
model. Running effect indicates that the system provides an effective way for the
spatio-temporal data mining and analyses.

2 Structure Model of DSTDMS
Before discussing the data mining in distributed spatio-temporal database, the spatiotemporal data management should be referred firstly, which relates close with the data
mining approach. Spatio-temporal data is unique for its spatial and temporal elements.
The traditional method for GIS data management——combination of file and relation
database——is not suitable for spatio-temporal data management [5]. And, object
oriented database system is still a long way to actual applications. So, an appropriate
approach is adopting ORDB (Object-Relation Database) to store and manipulate the
spatio-temporal data [6]. Moreover, Spatio-temporal extension on ORDB is needed

Fig. 1. Structure model of DSTDMS

A Problem Oriented Approach to Data Mining in Distributed Spatio-temporal Database

655

for supporting operations on spatial and temporal elements and many mainstream
ORDB products like Oracle, Informix and PostgreSQL all provide the mechanism of
spatio-temporal extension. Thus, a typical and practical distributed spatio-temporal
database is composed of a set of object-relation databases, on which spatio-temporal
extension would be accomplished.
Based on the discussion above, the typical structure of DSTDMS based on ORDB
backend is shown in Fig.1. Three layers, including knowledge layer, data integration
layer and spatio-temporal database layer, construct a complete DSTDMS.

⑴

Distributed data layer. The backend layer is composed of a set of separated
spatio-temporal databases distributed on several data sites. This layer is used for
spatio-temporal data storage and the data distribution could be redundant to obtain
higher efficiency and stability [7]. Usually one common ORDB product like
PostgreSQL or Oracle would be adopted. The capabilities of supporting spatiotemporal extension and SQL query are indispensable.
Data integration layer. The middle layer in the model mainly refers to preselecting the data needed from separated data sites and integrating them into one
complete view. This step is crucial for spatio-temporal discovery as it makes up of the
data basis for further mining. This layer accepts global analysis query and translates it
into a series of sub-queries, often in form of SQL statements. Then the sub-queries
would be executed on selected sites and the final global data view is to be generated.
Currently this topic is seldom referred in the researches of distributed spatio-temporal
data mining, so this paper paid more attention on it and detailed distributed query
processing algorithms were brought out and demonstrated in the system design
section below.
Knowledge layer. This layer is on the top of structure model and composed of
various applications to abstract the specified knowledge from the spatio-temporal
data, such as data visualization, classification, association, fitting, professional
modeling, scientific computation, prediction and so on. The components of this layer
mainly contain Mining processor and various spatio-temporal applications. The top
layer is application oriented and various mining algorithms have been developed and
discussed fitting to the specified spatio-temporal applications [8].

⑵

⑶

3 Design and Implementation
Based on the researches on distributed spatio-temporal data mining system model, the
authors implemented an actual DSTDMS named SpatialMiningService. The system
architecture was shown as Fig.2, in which the implementation could be concluded
into two parts, including spatio-temporal data model, spatio-temporal extension and
distributed query processing.
Query language this system used is adopted language compatible with SQL
completely, so developers need not to do extra work as the system was extended on
ORDB. Spatio-temporal extension should be done after adopting one suitable data

656

Z. Huang et al.

Fig. 2. System architecture of SpatialMiningService

model. SpatialMiningService uses sequent snapshot model and stores some
corresponding sample data for test.
3.1 Sequent Snapshot Model
To describe the spatial objects two data models are often referred, vector model and
raster model, which are also called feature model or domain model. The vector
structure is used to express the discrete and separated objects while the raster structure
are declined to describe the continuous phenomenon [9]. The raster model has a wide
application on temperature, rainfall, pollution distribution, population evaluation, etc.
Current raster model mainly refers to static model, which means it has no temporal
dimension and could not express the spatio-temporal phenomenon. Considering it this
paper adopted one model taking temporal dimension into account, which was called
sequent snapshot model.
Sequent snapshot can be defined as SSM = ( M , S , T ) , where: S and T
respsent the spatial and temporal variables. The spatial domain is partitioned into
regularly rectangular grid, each of which has one value or intensity. The grids are
represented by matrix. In temporal domain, a period was discretized according to a
given size and divided into a series of moments. At every moment, the varying
phenomenon was defined as a snapshot which was represented as a matrix with
values. M is a 4-d array like M [ x, y , z , t ] , which consists of a group of matrixes in

A Problem Oriented Approach to Data Mining in Distributed Spatio-temporal Database

657

m1 , m2 ,…, mi ,…, mn (1 ≤ i ≤ n) , where
{t1 , t 2 , … , ti , … , t n } ⊂ T , mi is the matrix snapshot at the moment ti .

temporal order, usually in the form of

3.2 Spatio-temporal Extension
This paper extended sequent snapshot type and corresponding spatio-temporal
operations based on PostgreSQL database. The type structure was shown in Table.1
and extra temporal type should be extended to record and represent the temporal
variable.
Table 1. Demonstration of sequent snapshot type extension
Type SSM
{
Box spatial_area;

//Spatial domain

Time_type n_time;

// temporal domain, usually based on snapshot model

Array IntensityValue[x,y,t]; //Intensity array
}

Mining model extension was accomplished in the system as well. Those mainly
refer to extend spatio-temporal analysis functions between different spatio-temporal
objects or data sources, such as spatial overlap function, spatial-temporal aggregation
function, etc. Thus, mining process could be achieved through simple SQL
statements, in which using the extended mining functions. So, the users only have to
know the “problem” and submit one SQL statement and then the final knowledge
would return. That’s why the approach this paper brought up is called “problem
oriented”.
3.3 Distributed Query Processing
In SpatialMiningService, distributed query processing algorithm was combined the
heuristic principles with the semi-join strategy. We concluded five basic heuristic
rules in the distributed spatio-temporal query processing: Execute the pre-select
operations as soon as possible; Execute the project operations as soon as possible;
Avoid only execute the Descartes accumulate but combination with selection and
project operations;
Make the account of parallel operations most; Select the
strategy of less data transmission.
Based on the heuristic rules aforementioned and the characteristics of spatiotemporal query, the authors brought out one novel algorithm named HHOA (Hybrid
Heuristic Optimization Algorithm), which is briefly described as follows.

⑶

⑷

⑵

⑴

658

Z. Huang et al.
Table 2. HHOA algorithm

Algorithm: SUBS_Generate(query)
Input: the global query string submitted by the user
Output: final result
{
Step1(Build the query tree):
Carry out the lexical and syntax analysis to build one query tree;
Step2(Generate the pre-selection strategy):
According to the components of the query tree, attract the separated conditions which
could be executed firstly without need to data transmission;
Step3(Generate the join strategy):
Check if join operation appears in the global query
{
Case “True”
Semi-join strategy is taken account, the less data transmission as the chief goal is the
principle to select the optimization plan. The characteristic of huge spatial field and
high dimensions were taken account into the selectivity factor calculation;
break;
Case “False”
Skip to Step 4 directly;
}
Step4(Join the useful temporary results):
The site with the most volume of temporary results is selected as the final result site,
which means other useful temporary results would be sent to it;
Step5(Confirm the final plan and execution):
The execution plan mainly contains three steps (Step 2 to 4), execute them on the
separated sites and get the final result.
}

4 Discussion
For demonstrating the application of SpatialMiningService the authors collected and
input some sampling line and polygon data into the system, partitioning the complete
data view into several ones according to the spatial domain and distributing them onto
different sites (In fact, we used the railway and county data of China at different

Fig. 3. The sampling data distribution

A Problem Oriented Approach to Data Mining in Distributed Spatio-temporal Database

659

temporal points). The sampling data distribution could be shown as Fig.3 (Friendly
visualization user interface was accomplished by the authors as well, through which
the users could see the data distribution, knowledge visualization and even the status
of the sub-queries in the execution plan).
Then the users could use simple SQL statement to model the discrete data or obtain
advanced spatio-temporal knowledge. For example, we used this statement "select
county.name, county.geometry from county, rail where Overlap(rail.geometry,
county.geometry) and rail.name=’Zhegang Railway’ and rail.time = ‘1997’" to
abstract the counties which the Zhegang Railway cross through at 1997. The returned
result is graphically expressed as Fig.4. Also, clearly we obtained the complete data
and knowledge view from the distributed spatio-temporal database according to the
result.

Fig. 4. The sample mining query result (different colors represent different data sites)

5 Conclusion
Spatio-temporal data mining system based on distributed database was implemented
through the distributed query processing and spatio-temporal extension, mainly
containing type, operation and mining model extension. This paper used the data
model of sequent snapshot and constructed one actual DSTDMS named
SpatialMiningService. Some experiments had been done and running effect indicates
that the system provides ability for spatio-temporal manipulation and advanced
analysis. Furthermore, more complex applications based on the system or this method
should be experimented and more intelligent mining query language should be taken
into account.

Acknowledgments
This research was supported by the following grants from the NSFC Project
(40501052) and the Survey and Mapping Foundation in 2005.

References
1. Erwig M., Schneider M. and Guting R.H.: Temporal Objects for Spatio-Temporal Data
Models and a Comparison of Their Representations. Proceedings of the Workshops on Data
Warehousing and Data Mining (1998)

660

Z. Huang et al.

2. Hamilton H.J. and Findlater L.: Looking Backward, Forward, and All Around: Temporal,
Spatial, and Spatio-Temporal Data Mining. Proceedings of the Fifteenth International
Florida Artificial Intelligence Research Society Conference (2002)
3. Harms S.K., Deogun J., Goddard S.: Building knowledge discovery into a geo-spatial
decision support system. Proceedings of the 2003 ACM symposium on Applied computing
(2003)
4. Pokrajac D., Hoskinson R.L., Obradovic Z.: Modeling spatial-temporal data with a short
observation history. Knowledge and Information Systems. 5(3):86-95(2003)
5. Gudmundsson J., Kreveld M., Speckmann B.: Efficient detection of motion patterns in
spatio-temporal data sets. Proceedings of the 12th annual ACM international workshop on
Geographic information systems (2004)
6. Lin J., Keogh E., Lonardi S.: A symbolic representation of time series, with implications for
streaming algorithms. Proceedings of the 8th ACM SIGMOD workshop on Research issues
in data mining and knowledge discovery (2003)
7. Aggarwal C.C.: A framework for diagnosing changes in evolving data streams. Proceedings
of the 2003 ACM SIGMOD international conference on Management of data (2003)
8. Kitamoto A.: Spatio-Temporal Data Mining for Typhoon Image Collection. Journal of
Intelligent Information Systems. 19(1):19-26(2002)
9. Wang Y., Hijikata Y. and Nishida S.: A Study on a Spatio-Temporal Data Structure for
Managing Video Data from Monitoring Cameras. Proceedings of the 17th International
Conference on Advanced Information Networking and Applications (2003)

