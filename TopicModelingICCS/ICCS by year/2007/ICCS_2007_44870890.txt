Multiscale Discontinuous Galerkin Methods for
Modeling Flow and Transport in Porous Media
Shuyu Sun1 and J¨
urgen Geiser2
1

2

Department of Mathematical Sciences, Clemson University
O-221 Martin Hall, Clemson, SC 29634-0975, USA
shuyu@clemson.edu
Department of Mathematics, Humboldt-Universit¨
at zu Berlin
Unter den Linden 6, D-10099 Berlin, Germany
geiser@mathematik.hu-berlin.de

Abstract. Multiscale discontinuous Galerkin (DG) methods are established to solve ﬂow and transport problems in porous media. The underlying idea is to construct local DG basis functions at the coarse scale
that capture the local properties of the diﬀerential operator at the ﬁne
scale, and then to solve the DG formulation using the newly constructed
local basis functions instead of conventional polynomial functions on the
coarse scale elements. Numerical examples are provided for demonstrating their eﬀectiveness.

1

Introduction

Flow and reactive transport in porous media are fundamental processes arising
in many diversiﬁed ﬁelds such as petroleum engineering, groundwater hydrology,
environmental engineering, soil mechanics, earth sciences, chemical engineering
and biomedical engineering [13,8]. Major challenges for realistic simulations of simultaneous ﬂow, transport and chemical reaction include multiple temporal and
spatial scales, long simulation time periods, and multiple coupled nonlinear components. In particular, the critical eﬀect of ﬁne scale processes on coarser scales
requires numerical methods to eﬀectively account for the interactions across
various scales. Since it is far beyond current computational power to resolve the
ﬁnest scale directly, one usually has to incorporate the ﬁne scale eﬀects within
a coarse-scale approximation by various multiscale numerical schemes [4, 5].
DG are ﬁnite element methods using discontinuous piecewise polynomial
spaces and specialized bilinear forms to weakly impose boundary conditions and
interelement continuities [6, 7, 1, 11, 3]. The methods have recently become popular in the scientiﬁc and engineering communities due to their many appealing
features including local mass conservation, small numerical diﬀusion and little oscillation, and support of variable local approximations and nonconforming
meshes. In this paper, we shall establish a two-scale framework for primal DG
methods.
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 890–897, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Multiscale Discontinuous Galerkin Methods

2
2.1

891

Discontinuous Galerkin Schemes
Governing Equations

Let Ω denote a bounded polygonal domain in Rd , (d = 1, 2, or 3) and let T
denote the ﬁnal simulation time. The ﬂow problem we consider is single-phase
ﬂow in porous media:
− ∇ · (K∇p) ≡ ∇ · u = q,

(x, t) ∈ Ω × (0, T ],

(1)

where the pressure p or the Darcy’s velocity is the unknown variable to be
solved. The conductivity K is a given parameter, and it usually varies greatly
with geological space. The imposed external total ﬂow rate q is a sum of sources
(injection) and sinks (extraction).
The modeling equation for single-species reactive transport in a single ﬂowing
phase in porous media involves both spatial and temporal derivatives:
∂φc
+ ∇ · (uc − D(u)∇c) = qc∗ + r(c), (x, t) ∈ Ω × (0, T ],
∂t

(2)

where the species concentration c is the unknown variable to be solved. The eﬀective porosity φ is a given parameter, and it usually varies spatially. The dispersiondiﬀusion tensor D(u) is a given function of Darcy velocity u. The notation c∗ is
the injected concentration cw if q > 0 and is the resident concentration c if q ≤ 0.
The reaction term r(c) is a given function to describe the kinetic biogeochemical
reaction.
We write ∂Ω = Γ D ∪ Γ N = Γ in ∪ Γ out , where ΓD is the Dirichlet boundary
and ΓN is the Neumann boundary for the ﬂow subproblem and ΓD ∩ ΓN = ∅;
Γin is the inﬂow boundary and Γout is the outﬂow/noﬂow boundary condition.
We assume the following boundary conditions:
p = pB ,

(x, t) ∈ ΓD × (0, T ],

u · n = uB ,
(x, t) ∈ ΓN × (0, T ],
(x, t) ∈ Γin × (0, T ],
(uc − D(u)∇c) · n = cB u · n,
(−D(u)∇c) · n = 0,

(3)
(4)
(5)

(x, t) ∈ Γout × (0, T ].

(6)

x ∈ Ω.

(7)

The initial condition is speciﬁed by
c(x, 0) = c0 (x),

Here, cB is the inﬂow boundary concentration and c0 the initial concentration.
2.2

DG Schemes

Let Eh be a family of non-degenerate and possibly non-conforming partitions of Ω
composed of line segments if d = 1, triangles or quadrilaterals if d = 2, or tetrahedra, prisms or hexahedra if d = 3. The set of all interior points (for d = 1), edges
(for d = 2), or faces (for d = 3) for Eh is denoted by Γh . The discontinuous ﬁnite

892

S. Sun and J. Geiser

element space is taken to be Dr (Eh ) := φ ∈ L2 (Ω) : φ|E ∈ Pr (E), E ∈ Eh ,
where Pr (E) denotes the space of polynomials of (total) degree less than or
equal to r on E. Let Ei , Ej ∈ Eh and γ = ∂Ei ∩ ∂Ej ∈ Γh with nγ exterior to Ei . We now deﬁne the average and jump for a smooth function φ by
{φ} := 12 ( φ|Ei )|γ + ( φ|Ej )|γ , [φ] := ( φ|Ei )|γ − ( φ|Ej )|γ . Denote the up-

wind value of the concentration c∗ |γ as c|Ei if u · nγ ≥ 0 and c|Ej if u · nγ < 0.
We introduce the bilinear forms a(p, ψ) and B(c, w; u) for the ﬂow and transport
problems respectively:
K∇p · ∇ψ + J0σ (p, ψ)

a(p, ψ) :=
E∈Eh

E

−

{K∇p · nγ } [ψ] − sform
γ

γ∈Γh

−

{K∇ψ · nγ } [p] +

K∇p · nγ ψ − sform
γ

γ⊂ΓD

K∇ψ · nγ p,

E∈Eh

γ

γ⊂ΓD

cq − w

(D(u)∇c − cu) · ∇w −

B(c, w; u) :=

γ

γ∈Γh

E

Ω

−

{D(u)∇c · nγ } [w] − sform
γ∈Γh

γ

γ∈Γh

γ

c∗ u · nγ [w] +

+

{D(u)∇w · nγ } [c]
γ∈Γh

γ

cu · nγ w + J0σ (c, w) ,
γ⊂Γout

γ

where sform = −1 for NIPG (the Nonsymmetric Interior Penalty Galerkin method
[7]) or OBB-DG (the Oden-Babuˇska-Baumann formulation of DG [6]), sform = 1
for SIPG (the Symmetric Interior Penalty Galerkin method [12,9,11]), and sform =
0 for IIPG (the Incomplete Interior Penalty Galerkin method [9, 2, 11, 10]). For
notational convenience, we use the same sform and penalty term for both ﬂow and
transport problems, but they can be chosen diﬀerently in practice. Here q + is the
injection source term, and q − is the extraction source term, i.e., q + := max (q, 0) ,
q − := min (q, 0). In addition, we deﬁne the interior penalty term as J0σ (c, w) :=
2
γ∈Γh r σγ γ [c] [w] /hγ , where σγ is the penalty parameter on γ. We have σγ ≡ 0
for OBB-DG. The linear functionals for ﬂow and transport problems are deﬁned
respectively as
K∇ψ · nγ pB −

l(ψ) := (q, ψ) − sform
γ⊂ΓD

L(w; u, c) :=

Ω

ψuB ,
γ⊂ΓN

cw q + w −

r (c) w +
Ω

e

cB u · nγ w.
γ⊂Γin

(8)

e

(9)

γ

For the ﬂow problem (1) and (3)-(4), we seek a time-independent solution
P DG ∈ Dr (Eh ) satisfying,
a P DG , v = l(v),

∀v ∈ Dr (Eh ) .

(10)

Multiscale Discontinuous Galerkin Methods

893

For the transport problem (2) and (5)-(7), the continuous-in-time DG approximation C DG (·, t) ∈ Dr (Eh ) is the solution of the following ODEs:
∂φC DG
, w + B(C DG , w; uDG ) = L(w; uDG , C DG ),
(11)
∂t
∀w ∈ Dr (Eh ) , t ∈ (0, T ],
DG
φC , w = (φc0 , w) , ∀w ∈ Dr (Eh ) , t = 0.(12)

3

Multiscale Formulation for Discontinuous Galerkin

We now establish a multiscale DG formulation for solving the ﬂow problem in
porous media. The same multiscale approach can be applied to the transport
problem as well, but is omitted here for brevity. In a ﬁne mesh Eh , we consider
an r-order approximation space Dr (Eh ). The DG solution Ph in the space Dr (Eh )
can be obtained by solving the following algebraic linear system:
a (Ph , v) = l(v),

∀v ∈ Dr (Eh ) .

Flow in geological media usually involves behaviors across several scales, but
direction solution at a very ﬁne scale is far beyond current computational power.
Let us assume that we can only aﬀord to solve the ﬂow equation in a coarse
space DR (EH ) directly, where R < r and H > h. That is, current computational
capability only allows us to solve for PH in the space DR (EH ) from the following
algebraic system:
a (PH , v) = l(v),

∀v ∈ DR (EH ) .

(13)

We note that the bilinear form a(·, ·) contains slightly diﬀerent terms on diﬀerent
meshes. However, by choosing the penalty parameters properly, we can make the
coarse mesh bilinear form identical to the restriction of the ﬁne mesh bilinear
form to the coarse space.
Since the conductivity (or permeability) could be highly oscillatory on the
ﬁne scale, we would like to incorporate the ﬁne scale eﬀects within a coarse-scale
approximation. One natural solution is to decompose the ﬁne space into the
coarse space component and its complement: Dr (Eh ) = DR (EH ) ⊕ Vf . If we seek
PH ∈ DR (EH ) and Pf ∈ Vf such that
a (PH , vH ) = l(vH ) − a (Pf , vH ) ,
a (Pf , vf ) = l(vf ) − a (PH , vf ) ,

∀vH ∈ DR (EH ) ,
∀vf ∈ Vf .

(14)
(15)

We can recover the solution Ph at the ﬁne scale by letting Ph = PH + Pf .
Giving Pf , (14) requires only computation of a solution in the coarse space,
and thus is aﬀordable. However, (15) is still computationally intractable. To

894

S. Sun and J. Geiser

improve eﬃciency, we replace the space Vf by a locally supported space: Vf 0 :=
{v ∈ Vf : v|∂E = 0, ∀E ∈ EH } . Our multiscale algorithm is to seek PH ∈ DR (EH )
and Pf 0 ∈ Vf 0 such that
a (PH , vH ) = l(vH ) − a (Pf 0 , vH ) ,
a (Pf 0 , vf 0 ) = l(vf 0 ) − a (PH , vf 0 ) ,

∀vH ∈ DR (EH ) ,
∀vf 0 ∈ Vf 0 .

(16)
(17)

We note that (17) is decoupled among the elements in the coarse mesh EH . To
solve (17), it is equivalent to solve N local problems, where N is the number of
elements in the coarse mesh EH . For each element E ∈ EH , the local problem is
to seek Pf 0,E ∈ Vf 0 |E such that
a (Pf 0,E , vf 0,E ) = l(vf 0,E ) − a (PH , vf 0,E ) ,

∀vf 0,E ∈ Vf 0 |E .

The ﬁnal solution we obtain is PMS := PH + Pf 0 = PH + E∈EH Pf 0,E .
The two equations (16) and (17) are coupled through the right-hand sides.
Though we can solve the two-scale system (16)-(17) iteratively, but a substitution
method is more eﬃcient. For each basis function vH in the coarse space VH , we
solve for φ(vH ) ∈ Vf 0 such that
a (φ(vH ), vf 0 ) = l(vf 0 ) − a (vH , vf 0 ) ,

∀vf 0 ∈ Vf 0 .

Of course, the solution of φ(vH ) involves only a local problem within a coarse
mesh element. We then construct the multiscale basis by φMS (vH ) := φ(vH )+vH .
Obviously, we know a (φMS (vH ), vf 0 ) = l(vf 0 ), ∀vf 0 ∈ Vf 0 . We now deﬁne a
multiscale approximation space VMS := span {φMS (vH ) : ∀vH ∈ DR (EH )}. Now
our multiscale scheme (16)-(17) becomes the problem of seeking PMS ∈ VMS such
that
a (PMS , vMS ) = l(vMS ),
∀vMS ∈ VMS .
(18)
Since the multiscale space VMS has the same dimension as the coarse space
DR (EH ), the computational time and memory requirement for solving (18) is
similar to that for solving (13), provided the multiscale basis functions have been
constructed. The construction of multiscale basis involves only solutions of local
problems and can be obtained eﬃciently. In addition, the problem coeﬃcient for
the construction of multiscale basis does not have to be stored, which substantially saving memory requirement compared to the direction solution of the ﬂow
problem in the ﬁne space.

4

Numerical Results

We consider the problem (1)-(7) over the domain Ω = (0, 1)2 . The conductivity
tensor K is a diagonal matrix with K11 = K22 , and the distribution of K11
across the domain is plotted in Figure 1. We impose no source/sink term, i.e.
q = 0. For the ﬂow problem, we impose Dirichlet boundary conditions p = 1 and
p = 0 on the left and right boundaries, respectively. The boundary conditions

Multiscale Discontinuous Galerkin Methods
1

permxx
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

0.9
0.8
0.7
0.6

Y

895

0.5
0.4
0.3
0.2
0.1
0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

X

Fig. 1. Conductivity ﬁeld for the ﬂow problem

on top and bottom boundaries are assumed to be no-ﬂow. For the transport
problem, we let the eﬀective porosity to be 1 (for convenience), we impose no
reaction and we assume zero diﬀusion-dispersion. The advection part uses the
Darcy velocity computed from the ﬂow problem, with inﬂow concentration being
constant 1 and with initial concentration being 0 everywhere.
NIPG is employed to solve the ﬂow problem. The penalty parameter for NIPG
is chosen to be 1. The ﬁne mesh used is a 20x20 uniform rectangular grid and
the coarse one is a 5x5 uniform rectangular mesh. The polynomial degree for
the ﬂow problem is R = r = 2 for both the ﬁne and the coarse spaces. For
the transport problem, we only test the Darcy velocity computed from ﬂow for
predicting advection behaviors, and thus we use ﬁne mesh for all cases. Advection
is solved by OBB-DG with lowest order polynomials (constants) and explicit
Euler’s temporal integration with uniform time step Δt = 0.001. The spatial
discretization for advection here is equivalent to the upwinding ﬁnite volume
method.
Figure 2 displays the results of pressure, velocity and concentration. The results from our multiscale algorithm are plotted in the ﬁrst column. For comparison, the DG results in the coarse and ﬁne meshes are provided in the second
and third columns. Comparison indicates the computed pressure from the multiscale approach is very close to the one computed from DG in the ﬁne mesh.
Unlike the coarse DG result, the multiscale pressure result captures the ﬁne
scale information in a similar fashion as the DG result in the ﬁne mesh; this
is especially pronounced in the area around the point (0.8, 0.5). Simulations of
advection indicate that the multiscale DG and coarse mesh DG methods produce nonphysical overshoots and undershoots, while the ﬁne mesh DG method
possesses no overshoot/undershoot. This is because the velocity produced from
the ﬁne mesh DG method is locally mass conservative in the ﬁne mesh but the
velocities computed from the multiscale DG and coarse mesh DG methods are
not. However, the overshoot/undershoot produced by the multiscale DG is much
smaller than that produced by the coarse mesh DG method. We also note that
the multiscale approach leads to inaccurate velocity in a few locations along the
no-ﬂow boundary, particularly at the point (0.1, 1). This is because we strongly
impose zero pressure in the local problem for computing multiscale basis functions. A potential improvement is to collect the local problems that touch the

896

S. Sun and J. Geiser

domain no-ﬂow boundary and modify the corresponding boundaries in the local
problems by no-ﬂow rather than zero Dirichlet boundary condition.
Compared to the classical multiscale implementation of continuous Galerkin
methods [4], the multiscale DG scheme is computational simpler. Unlike continuous Galerkin, the support of coarse basis function in DG sits within a single
coarse mesh element, thus the construction of multiscale basis function is also
limited to a single coarse mesh element. In addition, the multiscale DG algorithm has more ﬂexibility in the construction of multiscale basis functions. For
example, in this paper, we have strongly enforced zero Dirichlet boundary condition for the local problems to construct multiscale basis functions. However,
we could also use other boundary conditions in implementation. For example,
we could weakly impose homogeneous Dirichlet boundary condition for the local
problems, or we could strongly or weakly impose homogeneous Neumann (i.e.
no-ﬂow) boundary condition for the local problems.

0.8
0.7

0.5
0.4

pres
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

0.8
0.7
0.6
0.5
0.4

0.7
0.6
0.5
0.4

0.3

0.3

0.2

0.2

0.2

0.1

0.1

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

0

1

0.1

0

0.1

0.2

0.3

0.4

X

0.5

0.6

0.7

0.8

0.9

0

1

0.9
0.8
0.7
0.6
0.5
0.4

conc
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

0.9
0.8
0.7
0.6
0.5
0.4

0.2

0.8

X

0.9

1

0

0.8

0.9

1

conc
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

0.4

0.1

0.7

0.7

0.5

0.1

0.6

0.6

0.6

0.3

0.5

0.5

0.7

0.2

0.4

0.4

0.8

0.2

0.3

0.3

0.9

0.3

0.2

0.2

1

0.3

0.1

0.1

X

1

Y

conc
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

0

0

X

1

0

pres
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

0.8

0.3

0

Y

1
0.9

Y

Y

0.6

1
0.9

Y

pres
0.95
0.90
0.85
0.80
0.75
0.70
0.65
0.60
0.55
0.50
0.45
0.40
0.35
0.30
0.25
0.20
0.15
0.10
0.05

Y

1
0.9

0.1

0

0.1

0.2

0.3

0.4

0.5

X

0.6

0.7

0.8

0.9

1

0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

X

Fig. 2. NIPG results (left column: multiscale DG solution; middle column: coarse mesh
DG solution; right column: ﬁne mesh DG solution; top row: pressure and velocity for
the ﬂow problem; bottom row: concentration at t=1 for the transport problem)

5

Conclusions

The four primal DG schemes, namely, NIPG, OBB-DG, SIPG, and IIPG, have
been considered to solve ﬂow and transport problems in porous media. We have
systematically establish a theoretical framework for multiscale DG methods.
The underlying idea is ﬁrst to construct local basis functions at the coarse scale
that capture the local properties of the diﬀerential operator at the ﬁne scale. The

Multiscale Discontinuous Galerkin Methods

897

second step of the algorithm is to solve the DG formulation using the newly constructed local basis functions instead of conventional polynomial functions on the
coarse scale elements. Numerical examples have been provided to demonstrate
that the proposed multiscale DG indeed captures many important features of
ﬂow and transport at ﬁne scales but yet cost roughly only the computational
time of the corresponding coarse scale problem. We have also compared multiscale DG algorithms with multiscale continuous Galerkin methods, and found
that the multiscale implementation of DG is probably simpler and more ﬂexible
than the multiscale implementation of continuous Galerkin. A future work is to
investigate various other options for multiscale DG implementation; in particular, it will be interesting to weakly impose homogeneous Neumann condition
for the local problems to construct multiscale basis functions, as this will likely
reduce the error of the velocity and introduce little nonphysical oscillation.

References
1. Arnold, D. N.: An interior penalty ﬁnite element method with discontinuous elements. SIAM J. Numer. Anal. 19 (1982) 742–760
2. Dawson, C., Sun, S., Wheeler, M. F.: Compatible algorithms for coupled ﬂow and
transport. Comput. Meth. Appl. Mech. Eng. 193 (2004) 2565–2580
3. Geiser, J.: Mixed discretisation methods for the discontinuous galerkin method with
analytical test-functions. Preprint No. 2006-8 of Humboldt University of Berlin,
Department of Mathematics, Germany (2006)
4. Hou, T. Y., Wu, X.: A multiscale ﬁnite element method for elliptic problems in
composite materials and porous media. J. Comput. Phys. 134 (1997) 169–189
5. Hughes, T. J. R.: Multiscale phenomena: Green’s functions, the Dirichlet-toNeumann formulation, subgrid scale models, bubbles and the origins of stabilized
methods. Comput. Methods Appl. Mech. Engrg. 127 (1995) 387–401
6. Oden, J. T., Babuˇska, I., Baumann, C. E.: A discontinuous hp ﬁnite element
method for diﬀusion problems. J. Comput. Phys. 146 (1998) 491–516
7. Rivi`ere, B., Wheeler, M. F., Girault, V.: A priori error estimates for ﬁnite element
methods based on discontinuous approximation spaces for elliptic problems. SIAM
J. Numer. Anal. 39 (2001) 902–931
8. Steefel, C. I., Van Cappellen, P.: Special issue: Reactive transport modeling of
natural systems. Journal of Hydrology. 209 (1998) 1–388
9. Sun, S.: Discontinuous Galerkin methods for reactive transport in porous media.
PhD thesis, The University of Texas at Austin (2003)
10. Sun, S., Wheeler, M. F.: Discontinuous Galerkin methods for coupled ﬂow and
reactive transport problems. Appl. Numer. Math. 52 (2005) 273–298
11. Sun, S., Wheeler, M. F.: Symmetric and nonsymmetric discontinuous Galerkin
methods for reactive transport in porous media. SIAM Journal on Numerical Analysis. 43 (2005) 195–219
12. Wheeler ,M. F.: An elliptic collocation-ﬁnite element method with interior penalties. SIAM J. Numer. Anal. 15 (1978) 152–161
13. Yeh, G. T., Tripathi, V. S.: A model for simulating transport of reactive multispecies components: model development and demonstration. Water Resources
Research. 27 (1991) 3075–3094

