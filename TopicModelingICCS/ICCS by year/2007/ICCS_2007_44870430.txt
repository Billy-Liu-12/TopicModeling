Macro Adjustment Based Task Scheduling in
Hierarchical Grid Market
Peijie Huang1, Hong Peng1, and Xuezhen Li2
1

College of Computer Science and Engineering, South China University of Technology,
Guangzhou 510640, P.R. China
2
Department of Computer and Information Engineering, Guangdong Technical College of
Water Resources and Electric Engineering, Guangzhou 510635, P.R. China
scuthpj@yahoo.com.cn

Abstract. Hierarchical organization is suitable for computational Grid. Although
a number of Grid systems adopt this organization, few of them have dealt with
the task scheduling for the hierarchical architecture. In this paper, we introduce a
hierarchical Grid market model, which maintains the autonomy of the Grid end
users, but incorporates macro adjustment of Grid information center into
hierarchical Grid task scheduling. Simulation experiments show that the
proposed method can improve the inquiry efficiency for resource consumers and
get better load balancing of the whole hierarchical Grid market.
Keywords: Grid computing, task scheduling, macro adjustment, hierarchical
market.

1 Introduction
How to effectively match the Grid tasks with the available Grid resources is a challenge
due to the dynamic, heterogeneous and autonomous nature of the Grid. One common
solution is to design a hierarchical Grid market. Although a number of Grid models and
mechanisms employ hierarchical organization [1], [2], few of them have dealt with the
task scheduling for the hierarchical architecture. Many existing Grid literatures of task
scheduling have been proposed and achieved better performance in a single Grid
market [3], [4]. However, given the hierarchical market model, how to effectively
schedule the Grid tasks remains an important issue.
Our solution is novel in the sense that we introduce a hierarchical Grid market model
which maintains the autonomy of the Grid end users, but incorporates macro
adjustment of Grid information center (GIC) into hierarchical Grid task scheduling, and
thus achieve a better scheduling in hierarchical Grid market.

2 The Hierarchical Grid Market
The Grid system is a hierarchical architecture with several different levels of Grid
markets. An example of two-level hierarchical Grid market is shown in Fig. 1.
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 430 – 433, 2007.
© Springer-Verlag Berlin Heidelberg 2007

Macro Adjustment Based Task Scheduling in Hierarchical Grid Market

431

Upper GIC
Macro adjustment
Local Market1
Local GIC
Inquire

Publish

GRC

Local
Market
2

GSP
……

……

Trade

GRC

GSP

……

Local
Market
M

Trade with GSP in other local market
GIC: Grid Information Center
GRC: Grid Resource Consumer
GSP: Grid Service Provider

Fig. 1. The hierarchical Grid market

Each lowest level market covers certain local network area. In the local Grid
markets, Grid service providers (GSPs) and Grid resource consumers (GRCs) trade
with each other autonomously. Each local Grid market has a local GIC that allows
GSPs to publish their services in order to attract GRCs to inquire for their tasks. Our
market model extends the capability of the GICs, which also store and analyze the
aggregate demands and supplies of their local Grid markets.
The network environment covering larger network area forms an upper Grid market,
which consists of several lower-level Grid markets. Each upper Grid market has an
upper GIC. The upper GIC stores the location of the lower-level GICs included and the
aggregate demands and supplies of the lower-level Grid markets, and thus can provide
inquiry across different lower-level markets within it and make macro adjustment to the
lower-level GICs in this upper Grid market.

3 Macro Adjustment Based Grid Task Scheduling
Here, we present a method providing macro adjustment by off-line analysis.
Suppose that there are n different kinds of Grid resources, we can denote the supply
and demand of each local market as an n-vector. During new statistical period, suppose
that there are s GSPs in local market m , and p tasks submitted within local market
m during peak demand period. We consider the following iterative procedure for GIC
m to obtain new estimates of demand and supply, Dm and S m :

smi = α ⋅ T ⋅ ∑ j =1 r ji + (1 − α ) ⋅ ( s mi ) old
s

d mi = β ⋅ ∑ j =1 (u ji ⋅ t ji ) + (1 − β ) ⋅ (d mi ) old
p

i = 1,2, " , n
i = 1,2, " , n

(1)
(2)

where s mi and d mi are respectively the component of the vectors S m and Dm . r ji is the
published resource scale of resource i of GSP j , and T is the duration of the peak
demand period. u ji is the demand of task j for resource i , with occupy time
t ji . α and β are the factors between 0 and 1 to control the impact of the past estimates.

432

P. Huang, H. Peng, and X. Li

The excess supply of local market m is Z m = S m − Dm . For a certain resource
combination c , we denote the demand ratio of this combination of the whole Grid
market as an n-vector DRc . Then, we can compute the excess supply capability for
resource combination c of local market m , Cmc as follows:

Cmc = max{0, min ( z mi drci )}

(3)

Ri ∈c

where z mi and drci are respectively the component of the vectors Z m and DRc . Cmc is 0
indicates that local market m lacks excess supply of certain kinds of resources in
combination c .
In the hierarchical Grid market, local GICs search within its local market with
priority. When there is not any available resource for a certain submitted task with
resource combination c , suppose that there are k local markets have not been
searched, the probability that local market i is chosen to inquire is,

ρ ic = Cic

∑ j=1 C cj

i = 1,2, " , k

k

(4)

In next section, we compare the performance of our method, macro adjustment based
task scheduling (MA-Based in short) with two contrastive methods:
Random Selection: In this method, without macro-adjusted guidance, when the local
GICs cannot find an appropriate GSP in their own local markets, they choose another
local market randomly with uniform probability to run a secondary inquiry.
Least Loaded: In the Least Loaded method, the local GICs choose the least loaded
local market to run a secondary inquiry. Note, however, that in real environment the
information is usually not up to date. We use a parameter p so that once a task is
submitted to a local market, the load of that local market is updated only with
probability p (for the results presented in this paper we use p = 0.5 ).

4 Simulation Experiments
We have developed a simulated Grid environment based on GridSim [3]. The simulated
Grid system consists of 20 local markets. Each local market has 10 GSPs and random
amount of GRCs, uniformly distributed between 200 and 1000. There are total 4 kinds
of Grid resources in this simulated Grid system.
The experimental evaluations include the inquiry efficiency and the load balancing
of the whole Grid market. The inquiry efficiency is measured by the average amount of
local markets in which Grid tasks that need secondary inquiry inquire. Suppose that
there are M local markets. The load balancing of the whole Grid market is measured
by the balance degree during peak service period, which is denoted as:
BD = 1 −

1
M

∑i=1 (O i − O) 2
M

O

(5)

where Oi is the resource occupy rate of local market i during the peak service period.

3
2.5
2

Random
Least Loaded
MA-based

1.5
1
0.5
0

Fig. 2. The average amount of local markets in
which Grid tasks that need secondary inquiry
inquire

Belance degree of the Grid
market

Average amount of local
markets inquired

Macro Adjustment Based Task Scheduling in Hierarchical Grid Market

1.0
0.9
0.8

433

Random
Least Loaded
MA-based

0.7
0.6
0.5

Fig. 3. The balance degree of the whole Grid
market

First, we compare the inquiry efficiency. As we can see from Fig. 2, comparing to
Least Loaded method, the performance gain of our method is about 15%. This is mainly
due to probabilistic failure to update the load levels after each task submission while
using Least Loaded method. While comparing to Random Selection, the performance
of our method gain reaches as high as 27.9%.
We then observe the load balancing of the whole Grid market. As we can see from
Fig. 3, our method guides most of the tasks to search in the local markets with big
excess supply capability when they cannot be served in their own local markets, thus
gets better load balancing than the contrastive ones. The Least Loaded method also
outperforms the Random Selection. But it should pay for the large number of
information exchanged between the upper GIC and the lower-level GICs.

5 Conclusions
This study is a first attempt to incorporate macro adjustment into Grid task scheduling.
As we can see from the simulation results, our method outperforms the contrastive ones
in improving the inquiry efficiency for resource consumers and getting better load
balancing of the whole hierarchical Grid market.
Acknowledgements. This work is supported by the Provincial High-tech Program of
Guangdong, China (A10202001, 2005B10101033).

References
1. Foster, I., Kesselman, C.: Globus: A Meta-computing Infrastructure Toolkit. International
Journal of Supercomputer Applications, 1997
2. Chapin, S.J., Katramatos, D., Karpovich, J., et al: Resource Management in Legion. Future
Generation Computer Systems, 1999, 15(5-6): 583-594
3. Buyya, R.: Economic-based Distributed Resource Management and Scheduling for Grid
Computing. [Ph.D. Thesis]. Melbourne: Monash University, 2002
4. Li Chunlin, Li Layuan: QoS Based Resource Scheduling by Computational Economy in
Computational Grid. Information Processing Letters. 2006, 98 (3): 119–126

