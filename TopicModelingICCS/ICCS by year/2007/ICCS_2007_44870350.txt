Topology Preserving Tetrahedral Decomposition of
Trilinear Cell
Bong-Soo Sohn
Department of Computer Engineering, Kyungpook National University
Daegu 702-701, South Korea
bongbong@knu.ac.kr
http://bh.knu.ac.kr/∼bongbong

Abstract. We describe a method to decompose a cube with trilinear interpolation into a set of tetrahedra with linear interpolation, where isosurface topology is
preserved during decomposition for all isovalues. This method is useful for converting from a rectilinear grid into a tetrahedral grid in scalar data with topological correctness. We apply our method to topologically and geometrically accurate
isosurface extraction.
Keywords: volume visualization, isosurface, subdivision, topology.

1 Introduction
Scientific simulations and measurements often generate a real-valued volumetric data
in the form of function values sampled on a three dimensional (3D) rectilinear grid.
Trilinear interpolation is a common way to define a function inside each cell of the
grid. It is computationally simple and provides good estimation of a function between
sampled points in practice. Isosurface extraction is one of the most common techniques
for visualizing the volumetric data. An isosurface is a level set surface defined as I(w) =
{(x, y, z)|F(x, y, z) = w} where F is a function defined from the data and w is an isovalue.
The isosurface I is often polygonized for modeling and rendering purposes. We call I a
trilinear isosurface to distinguish it from a polygonized isosurface when F is a trilinear
function.
Although the rectilinear volumetric data is the most common form, some techniques
[9,4,3,1,5] require a tetrahedral grid domain due to its simplicity. In order to apply such
techniques to rectilinear volumetric data, people usually decompose a cube into a set of
tetrahedra where a function is defined by linear interpolation. The decomposition may
significantly distort the function in terms of its level sets (e.g. isosurfaces) topology and
geometry. See [2] for examples. 2D/3D meshes with undesirable topology extracted
from the distorted function may cause a serious inaccuracy problem in various simulations such as Boundary Element and Finite Element Method, when the extracted meshes
are used as geometric domains for the simulation [10].
We describe a rule that decomposes a cube into a set of tetrahedra without changing
isosurface topology for all isovalues in the cube. The rule provides topological correctness to any visualization algorithms that run on tetrahedral data converted from
rectilinear data. The key idea is to add saddle points and connect them to the vertices
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 350–357, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Topology Preserving Tetrahedral Decomposition of Trilinear Cell

351

of a cube to generate tetrahedra. In case there is no saddle point, we perform a standard tetrahedral decomposition method [2] without inserting any points. The tetrahedra
set converted from a cube involves a minimal set of points that can correctly capture
the level set topology of trilinear function because level set topology changes only at
critical points. Then, we apply our method to topologically and geometrically accurate
isosurface triangulation for trilinear volumetric data.
The remainder of this paper is organized as follows. In section 2, we explain trilinear
isosurface and its topology determination. In section 3, we describe topology preserving
tetrahedral decomposition of a trilinear cell. Then, in section 4, we give applications and
results. Finally, we conclude this paper in section 5.

2 Trilinear Isosurface Topology
The function inside a cube, F c , is constructed by trilinear interpolation of values on
eight vertices of the cube.
F c (x, y, z) = F000(1 − x)(1 − y)(1 − z) + F001(1 − x)(1 − y)z
+ F010(1 − x)y(1 − z) + F011(1 − x)yz
+ F100x(1 − y)(1 − z) + F101x(1 − y)z
+ F110xy(1 − z) + F111xyz
This means the function on any face of a cell, F f is a bilinear function computed from
four vertices on the face.
F f (x, y) = F00 (1 − x)(1 − y) + F01(1 − x)y + F10x(1 − y) + F11xy
Saddle points, where their first partial derivative for each direction is zero, play important roles in determining correct topology of a trilinear isosurface in a cube. Computing
f
f
the location of face and body saddles which satisfy Fx = Fy = 0 and Fxc = Fyc = Fzc = 0
respectively is described in [6] and [8]. Saddle points outside the cube is ignored.
Marching Cubes (MC) [7] is the most popular method to triangulate a trilinear isosurface using sign configurations of eight vertices in a cube. It is well known that some
of the sign configurations have ambiguities in determining contour connectivity. The
papers [6,8] show that additional sign configurations of face and body saddle points
can disambiguate the correct topology of a trilinear isosurface. Figure 1 shows every
possible isosurface connectivity of trilinear function [6].

3 Topology Preserving Tetrahedral Decomposition
In this section, we describe a rule for decomposing a cube with trilinear interpolation
into a set of tetrahedra with linear interpolation where isosurface topology is preserved
for all isovalues during the decomposition. The tetrahedral decomposition is consistent
for entire rectilinear volumetric data in the sense that the tetrahedra are seamlessly
matched on a face between any two adjacent cubes. The rule is based on the analysis of

352

B.-S. Sohn

Fig. 1. Possible isosurface topology of trilinear interpolant. Numberings are taken from [6].

face and body saddles in a cell (e.g. cube). It is easy to understand the overall idea by
looking at 2D case in Figure 2, which is much simpler than 3D case.
Let sb and s f be the number of body saddles and face saddles respectively. There are
four cases based on the number of face saddles and body saddles, (i) sb = 0 and s f = 0,
(ii) sb = 0 and 1 ≤ s f ≤ 4, (iii) sb = 1 and 0 ≤ s f ≤ 4, (iv) sb = 0 and s f = 6, and (v)
1 ≤ sb ≤ 2 and s f = 6. The case where the number of face saddles is six is the most
complicated case that requires careful treatment. Note that the number of face saddles
cannot be five. The number of body saddles cannot be two unless the number of face
saddles is six. The decomposition rule for each case is as follows :
– case (i) : Decompose a cube into 6 tetrahedra without inserting any point as in [2].
– case (ii) : Choose one face saddle and decompose a cube into five pyramids by connecting the face saddle into four corner vertices of each face except the face that
contains the face saddle. If a face of a pyramid contains a face saddle, the face is
decomposed into four triangles that share the face saddle and the pyramid is decomposed into four tetrahedra. If a face of a pyramid does not contain a face saddle, the
pyramid is decomposed into two tetrahedra in a consistent manner. If the number
of face saddles is three or four, we need to choose the second biggest face saddle.
– case (iii) : Decompose a cube into six pyramids by connecting a body saddle to
four corner vertices of each face of a cube. Like in (ii), if a face of a pyramid
contains a face saddle, the face is decomposed into four triangles and the pyramid
is decomposed into four tetrahedra. Otherwise, the pyramid is decomposed into two
tetrahedra.
– case (iv) : A diamond is created by connecting the six face saddles. The diamond is
decomposed into four tetrahedra. Twelve tetrahedra are created by connecting two
vertices of each twelve edge of a cube and two face saddles on the two faces which
share the edge. Eight tetrahedra are created by connecting each eight face of the
diamond and a corresponding vertex of the cube. This will decompose a cube into
twenty four tetrahedra.

Topology Preserving Tetrahedral Decomposition of Trilinear Cell

(a)

353

(b)

Fig. 2. (a) Triangular decomposition of a face by connecting a face saddle to each edge of the face
resolves an ambiguity in determining correct contour connectivity. (b) Triangular decomposition
based on a saddle point preserves level sets topology of bilinear function for every case.

(a) sb = 0, s f = 2

(b) sb = 1, s f = 2

(c) sb = 0 , s f = 6

Fig. 3. Example of rules for topology preserving tetrahedral decomposition

– case (v) : Figure 4 shows the cell decomposition when there are two body saddles
and six face saddles. It generates two pyramids and four prisms where pyramids and
prisms are further decomposed into tetrahedra. Choosing any two parallel faces that
are connected to body saddles to form pyramids is fine. We classify saddle points
as three small face saddles, a small body saddle, a big body saddle, and three big
face saddles based on increasing order of the saddle values. Let small/big corner
vertex be the vertex adjacent to three faces with small/big face saddles. The two
parallel faces with small and big face saddles are connected to small and big body
saddles respectively to form the two pyramids. The four prisms are decomposed
into tetrahedra in a way that the small corner vertex should not be connected to
the big body saddle and the big corner vertex should not be connected to the small
body saddle. To satisfy this constraint, two types of decomposition of a prism are
possible as shown in Figure 4 (c). In case sb = 1, we consider a small or big body
saddle moves to a face saddle of a pyramid that is connected to the body saddle and
hence the pyramid is collapsed. In this case, the pair of parallel faces for forming
the pyramids are chosen in a way that the face saddle of a collapsed pyramid should
not be the smallest or the biggest face saddle.
Figure 3 shows several examples of applying the tetrahedral decomposition rule to a
cube with different number of body and face saddles.

354

B.-S. Sohn

(a)

(b)

(c)

Fig. 4. (a) Cell decomposition when two body saddles exist. Dark blue, green, light blue, magenta, brown, and red circles represent small corner vertex, small face and body saddles, big body
and face saddles, and big corner vertex. (b) Isosurface topology for different isovalues in case (a).

(a)

(b)

Fig. 5. (a) Demo program of topology preserving tetrahedral decomposition (b) Modified cell
decomposition and triangulation for each case that has ambiguity

In appendix, we give a brief proof why topology of level sets of trilinear function in
a cube is preserved during the decomposition for each case.
As shown in Figure 5(a), we implemented above method and produced a program
that takes an isovalue and values of eight corner vertices of a cube, and displays tetrahedral decomposition with either a trilinear isosurface or a polygonized isosurface.

4 Trilinear Isosurface Triangulation
Readers may think that isosurface extraction for each tetrahedron, which is called
Marching Tetrahedra (MT), after the tetrahedral decomposition would be simple and

Topology Preserving Tetrahedral Decomposition of Trilinear Cell

355

natural way. However, this direct application of the tetrahedral decomposition may
cause extra cost in terms of the number of generated triangles and speed because even
very simple case (e.g. type 1 in Figure 1) requires tetrahedral decomposition. We exploit
the benefits of MC - mesh extraction with small number of elements and with high visual fidelity, and MT - ambiguity removal and simplicity by performing only necessary
subdivisions.
We describe a modified cell decomposition method for resolving a triangulation ambiguity and reconstructing triangular approximation of an isosurface with correct topology. The main idea is to decompose a cube into a set of tetrahedral and pyramidal cells
which do not cause a triangulation ambiguity while preserving contour topology in a
cube. A facial ambiguity is resolved by decomposing a face cell into four triangles that
share a face saddle point. Likewise, an internal ambiguity is resolved by decomposing a
cube into six pyramids which share a body saddle point. If there is an internal ambiguity and the isosurface does not contain a tunnel shape (neck), a body saddle point is not
required in the cell decomposition for reconstructing isosurface with correct topology.
There are four cases : (a) no face ambiguity with no tunnel, (b) face ambiguity (less
than six) with no tunnel, (c) tunnel, and (d) six face ambiguities with no tunnel.
– case (a) : No decomposition is necessary. Just perform MC-type triangulation
– case (b) : Choose a face saddle on a face with ambiguity and decompose a cube into
five pyramids by connecting the face saddle into four corner vertices of each face
except the face that contains the face saddle. If a face of a pyramid contains face
ambiguity, the face is decomposed into four triangles that share the face saddle and
the pyramid is decomposed into four tetrahedra. If the number of face ambiguity is
three, we need to choose second face saddle.
– case (c) : Decompose a cube into six pyramids by connecting a body saddle that is
involved with a tunnel to four corner vertices of each face of a cube. Like in (b),
if a face of a pyramid contains a face ambiguity, the face is decomposed into four
triangles and the pyramid is decomposed into four tetrahedra.
– case (d) : We perform the same decomposition as the case (iv) in section 3, except
that we decompose the diamond into two pyramids instead of four tetrahedra. (13(a)
in Figure 5(b))
Isosurface configurations 1, 2, 5, 8, 9, and 11 in Figure 1 are the only possible cases
which do not have an ambiguity in a cube. No decomposition is necessary for the cases.
Triangulations for such cubes are listed in [7].
We implemented the modified decomposition method and applied it to each case in
Figure 1, and extracted a triangular isosurface. Figure 5 shows the modified cell decomposition and its triangulation for every possible configuration of a trilinear isosurface
that has an ambiguity. It confirms that the triangular isosurface generated from the cell
decomposition is topologically equivalent to a trilinear isosurface from trilinear function by the comparison of Figure 1 and Figure 5(b).

5 Conclusion
We described a method for tetrahedral decomposition of a cube where level sets topology
is preserved. We envision many visualization algorithms that can take only tetrahedral

356

B.-S. Sohn

grid data can utilize our method for dealing with trilinear volumetric data instead of
using standard tetrahedral decomposition methods that may significantly distort level
sets topology and geometry.
Acknowledgments. The author is grateful to Prof. Chandrajit Bajaj who gave various inspirational ideas that are related to this work. This research was supported by
Kyungpook National University Research Fund, 2006.

References
1. Bajaj, C. L., Pascucci V., Schikore D. R.: The contour spectrum. In IEEE Visualization
Conference (1997) 167–1737
2. Carr, H., M¨oller, T., Snoeyink, J.: Simplicial subdivisions and sampling artifacts. In IEEE
Visualization Conference (2001) 99–108
3. Carr, H., Snoeyink, J.: Path seeds and flexible isosurfaces using topology for exploratory
visualization. In Proceedings of VisSym (2003) 49–58
4. Carr, H., Snoeyink, J., Axen, U.: Computing contour trees in all dimensions. Computational
Geometry: Theory and Applications Vol. 24. (2003) 75–94
5. Edelsbrunner, H., Harer, J., Natarajan, V., Pascucci, V.: Morse complexes for piecewise linear
3-manifolds. In Proceeding of the 19-th ACM Symp. on Comp. Geom. (2003) 361–370
6. Lopes, A., Brodlie, K.: Improving the robustness and accuracy of the marching cubes algorithm for isosurfacing. IEEE Transactions on Visualization and Computer Graphics (2003)
19–26
7. Lorensen, W.E., Cline, H.E.: Marching cubes: A high resolution 3D surface construction
algorithm. In ACM SIGGRAPH (1987) 163–169
8. Natarajan, B.K.: On generating topologically consistent isosurfaces from uniform samples.
The Visual Computer, Vol. 11. (1994) 52–62
9. Nielson, G.M., Sung, J.: Interval volume tetrahedrization. In IEEE Visualization Conference
(1997) 221–228
10. Zhang, J., Bajaj, C. L., Sohn, B.-S.: 3D finite element meshing from imaging data. Computer
Methods in Applied Mechanics and Engineering (CMAME) Vol. 194. (2005) 5083–5106

Appendix: Proof of Topology Preservation During Decomposition
We call the isosurface extracted from a set of tetrahedra as PL isosurface. The proof is
done by showing that, for any isovalue in a cube, the numbers of PL isosurface components and trilinear isosurface components are the same and PL isosurface components
are topologically equivalent to trilinear isosurface components. Note that PL isosurface
inside a cube should be always a manifold (except for a degenerate case). There is no
isolated closed PL isosurface component in a cube.
First of all, it is easy to see that the decomposition preserves trilinear isosurface
topology on each face. A face is decomposed into four triangles when there is a face
saddle on the face and decomposed into two triangles when there is no face saddle.
There are three possible contour connectivity except for the empty case where symmetric cases are ignored. Figure 2 shows that each isocontour connectivity of bilinear
function on a face is preserved for any possible triangular mesh generated from our
decomposition rule.

Topology Preserving Tetrahedral Decomposition of Trilinear Cell

357

We classify corner vertices and saddles into up-vertices and down-vertices based on
the check whether a function value of a vertex is bigger than or lower than an isovalue.
We use a term, component-vertices, to indicate either up-vertices or down-vertices that
have bigger or same number of connected components compared to the other one. Except for the configurations 13.5.1 and 13.5.2 in Figure 1, a connected component of
component-vertices uniquely represents an isosurface component. Consider cases (i),
(ii), and (iii). If there is no hole, connected components of component-vertices on faces
are separated each other inside a cube to form a simple sheet (disk) for each connected
component, which is consistent with actual trilinear isosurface topology. If there is a
hole, the connected components of component-vertices on faces are connected through
a saddle point inside a cube to form a tunnel isosurface. The reason why we choose the
second biggest face saddle in the case (ii) with three or four face saddles and (v) with
one body saddle is to avoid connecting components of component-vertices inside a cube
that needs to be separated. For example, if we choose the smallest or the biggest face
saddle in the configuration 7.2, two components of component-vertices on faces of a
cube can be connected through an edge and hence two separate isosurface components
would be connected with a tunnel.
In cases (iv) and (v) where the number of face saddles is six, the configurations
except for 13.5.1 and 13.5.2 are proved in a similar way as the cases of (i), (ii), and
(iii). The configurations 13.5.1 and 13.5.2 can be proved by taking out tetrahedra that
contributes to the small isosurface component and apply the same proof of (i), (ii), and
(iii) to the rest of isosurfaces for topological correctness.

