Balancing Quality and Performance of Task
Distribution in Workﬂow Based on Resource
Aptitude
Renˆe Rodrigues Veloso1 and Autran Macˆedo2
1

FACIT - College of Science and Technology, Department of Computer Engineering,
Brazil
2
Federal University of Uberlandia, School of Computing, Brazil

Abstract. The distribution of tasks in a workﬂow system, in general,
does not consider resource aptitude. Resources that share the same role
in a workﬂow can have diﬀerent degrees of aptitude to a task. This work
proposes an extension to task distribution strategies and presents the
use of this extension in the selection of resources to tasks. The experiments presented here demonstrate the eﬀectiveness of the extension. A
comparison with traditional strategies has shown gains in terms of time
and quality of tasks executed.
Keywords: Workﬂow, Performance, Quality, Aptitude, Task distribution.

1

Introduction

Task distribution to resources is one of the critical functions of Workﬂow Management Systems (WfMS) [1,2] and is directly related to time of completion and
quality of the execution process [3,4,5].
Task distribution mechanisms based on aptitude can be used in the prevention
of workﬂow bottlenecks. Being resource oriented, theses mechanisms are able to
use the information found in the capacities and abilities of available resources.
With this, it is possible to safeguard against inadequate and/or busy resources
receiving tasks, therefore avoiding the occurance of bottlenecks.
There are proposals of hybrid approaches between Push and Pull [2,6,7,8,9]. In
this case, resources have individual queues of tasks that are ﬁlled by an heuristic
that moves tasks of a shared queue to individual queues. This heuristic is batchbased with the purpose of minimizing ﬂowtime, i.e., the diﬀerence between the
beginning and the end of a task. It create groups of tasks based on their process
time. However, none of this related research is worried about maximizing quality,
maintaining a satisfactory execution time of the business process.
The research of Kumar et al. [4], proposes distribution mechanisms that, beyond considering the aptitude of resources, tries to balance quality and performance through rules that restricts the visibility of resources to tasks. However,
as the mechanisms there proposed are strongly based on the Pull mechanism, the
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 281–288, 2007.
c Springer-Verlag Berlin Heidelberg 2007

282

R.R. Veloso and A. Macˆedo

choice of tasks are made by resources, which can facilitate the occurance of bottlenecks. Apart from the Kumar et al. research, the mechanisms proposed and
explored in this paper are implemented as Push mechanisms, where the system
chooses the resources at the moment of distribution. Permitting the system to
totally guide the distribution can improve the quality and performance goals of
balancing, because these goals are controlled and leveled according to resource
availability and aptitude to each delivered task.
1.1

Solution Approach

Resource aptitude can be surveyed by means of metrics, which indicate the
degree of adequacy of resources to the completion of tasks ([4]). In other words,
the degree of adequacy measures the level of competence of resources for the
realization of the tasks of the workﬂow. keeping to the context of this paper,
resources with high degree of adequacy to a given task has greater aptitude for
the execution of the tasks. So the fact that these resources perform tasks more
eﬃciently than those less adequate to the tasks is to be expected.
The metrics of allocation are deﬁned as a systematic solution to dynamically create equilibrium between quality and performance. This equilibrium is
obtained through the construction of a model directionally toward better distribution. In this way, the systems should know how to choose the most apt
resources to do tasks in any given process which one desires to automate.
Therefore, the purpose of this paper has two approaches: (i) to develop eﬃcient task distribution mechanisms to apt resources, which may be applied to
various types of businesses. (ii) to make a comparative study of existing traditional mechanisms. These implemented mechanisms should be able to facilitated
gains in work execution eﬃciency of workﬂow systems, taking in to consideration
the resource aptitude to the task and the workload already allocated. To realize
this goal, section 2 describes the metrics used by the distribution mechanisms
to allocate resources and also to measure the quality of the execution processes,
as well as their respective parameters. The section 3 shows mechanisms based
on resource aptitude and describes the proposal Sel-push e Sel-push-10, to balance both quality and performance. In the section 4, a computer experiment to
compare the performance and quality of mechanisms is detailed, and the results
analyzed considering various kinds of problems. In the end, the conclusion is
commented on, followed by the bibliographical references used in this paper.

2

Allocation Metrics

The allocation metric presented in [4] was originally propose as criteria of commitment between quality and performance for a workﬂow system. This proposal
relates resources and tasks by means of parameters such as adequacy and availability. 1
1

Other parameters are deﬁned by Kumar et al. as being urgent to the execution of
tasks and degree of violation of restriction in the modeled process. These were disconsidered in this paper (the tasks are equally urgent and do not exist restrictions).

Balancing Quality and Performance of Task Distribution in Workﬂow

283

The parameters are combined in a metric which determines the allocation of
the task to a resource. This metric called a absolute allocation factor or, simply,
abs alloc, is deﬁned by:
abs alloc(w, rs) = adequacy(w, rs) × availability(rs).

(1)

The adequacy parameter is about the aptitude of a resource in relation to
a given task. This parameter is given by the function adequacy(w, rs) ∈ [0, 1],
in w is a workﬂow task and rs is a workﬂow resource. The lower the adequacy
value, the lower aptitude rs possesses to execute w.
Availability indicates how available a resource is to perform a task. This parameter is expressed by the function availability(rs) ∈ [0, 1]. Values lower than
1 indicates that the resource in question is already allocated to some task. A
value equal to zero indicates that the resource is unavailable.
The metric abs alloc depends only on a task and a resource isolatedly. This
metric assumes a value between 0 and 1, which is an absolute measure of adequacy to a resource to perform a task immediately. The higher the value of
abs alloc of a resource, more adequate it will be to execute the task. 2

3

Distribution Mechanisms Based on Aptitude

The distribution of tasks in workﬂow systems, in general, occurs through the
Push and Pull mechanisms [10]. However, neither of these mechanisms considers
the resource aptitude to the tasks.
In this sense, Kumar et al. [4] deﬁnes three mechanisms based on Pull. These
mechanisms are practically based on the deﬁnited adequacy thresholds that increase or decrease the amount and the quality of the involved resources. These
thresholds are as follows:
– Typical : one task w is visible to resource rs if, and only if, abs alloc(w, rs)
exceeds a value 0.5. This represents a typical resource.
– Receptive: one task w is visible to resource rs if, and only if, abs alloc(w, rs)
exceeds a lesser value than the typical one, e.g., 0.4. This indicates a more
receptive resource .
– Selective: one task w is visible to a resource rs if, and only if, abs alloc(w,
rs) exceeds a value higher than the typical one, e.g., 0.6. This indicates a
more selective resource than the typical resource.
The proposal of this paper involves an extension to the mechanisms of distribution cited previously. Also taking as base the values of absolute allocation,
the diﬀerential of this extension is in the form which the tasks are delivered to
the resources. Before the resources receive the tasks, their availability values are
veriﬁed. When receiving tasks, the resources are less available in the context of
the system. In this way, a resource that has a high workload will not have to
receive more tasks, these being repassed to other resources that are apt and have
availability to execute them. Based on Push, the extension is implemented as
two other mechanisms are: the Sel-Push and the Sel-Push-10.
2

In the equation 1 the disconsidered parameters both assume a value equal to one.

284

3.1

R.R. Veloso and A. Macˆedo

The Sel-Push Distribution Mechanism

In a simpliﬁed manner, the distribution mechanism Sel-Push is called to action
whenever the task queue (ready) is not empty and continues until the tasks of the
queue are allocated, or until the resources are no longer available. In this case,
the mechanism goes into waiting mode until some resource becomes available.
An choice of the resource with greatest abs alloc occurs guided by a dynamic
threshold. This means, a resource which is initially found inside a margin of
selective threshold, depending on how much this resource is being attributed
tasks, its value of abs alloc suﬀers a decrease, going to the typical threshold
and after that, to the receptive threshold. The Sel-Push veriﬁes beforehand if
the resources most apt to the task are selective, and if they are not, others are
sought for within the boundaries of inferior thresholds.
Of similar working to the mechanism Sel-Push, the Sel-Push-10 mechanism
tries to pass tasks to the most apt resources. Therefore, besides choosing the resource with greater abs alloc, it also considers the neighborhood of this resource.
The neighborhood of a resource are all the resources within a certain numerical distance from adequacy value of this resource. In the case of Sel-Push-10
the neighborhood is within a radius of 10% of abs alloc of the most adequate
resource.

4

Computational Study

Considering the little information available about other solutions to the problem of task distribution in workﬂow systems, an analytical evaluation of all
other existing mechanisms go far beyond the scope of this paper. Therefore,
a computational study was done to compare the performance and quality of
seven mechanisms, i.e., Push, Pull, Selective, Typical, Receptive, Sel-Push and
Sel-Push-10. It is importante to stress that the mechanism Push in this study,
attributes the tasks to always the same resource with the greatest adequation
value. In this section, the procedures used to simulate and presents the statistics
based on the results of simulation are described.
4.1

Workload Generation

To control the workload of the computational study, a model proposed by Zeng
and Zhao [2] is used. The idea of this model is centralized mainly in the evaluation of quality and performance of the mechanisms under study of varying
business work environments. The parameters which characterize these scenarios
of environments and their adjustments examined in this study are presented in
the Table 1. Only a small number of resources were used (3 and 6), which is
suﬃcient for the simulation of a organizational workﬂow environment.
In the model, the medium system load measures the number of tasks that
arrive. This number is related to the capacity of the resource. Therefore, the
control of the dynamic generation of tasks and the process used by Zeng and
Zhao is detailed as following. With the processing time of each task ﬁxed in

Balancing Quality and Performance of Task Distribution in Workﬂow

285

Table 1. Simulation Parameters
Resource number
3 and 6
Medium system load 0.2(low), 0.6(medium), 1.0(high)
Variability of tasks
20(low), 80(medium), 140(high)
Variability of resources 20(low), 80(medium), 140(high)

10 units of time, the medium capacity of a resource for each unit time is 1/10.
Assuming that n resources are presented in the system, the total capacity of
resources per unit of time is n/10. In this way, a medium system workload l,
the number of tasks which arrive during each unit of time follows a Poisson
distribution with λ = l × n/10.
Two other parameters of the table, the variability of tasks and of resources
control the time adjustment of processing of the task pij . In this study, this time
is generated in two steps:
– Step 1. For the task j, the average processing time pj is generated based
on the normal distribution with average of 10 (average time of each task)
and standard deviation varTask. Therefore, pj ≈ N (10, (10 × varT ask)2 ).
For example, considering a process with three tasks and a low variability of
tasks, we have a processing time varying between 8 and 12 units.
– Step 2. The processing time of task j by resource i expressed by pij , is obtained after the average pj . So varTask, the resource variability varResource
indicates the percentage standard deviation of the individual processing
of a task. Therefore, pij is generated from a normal distribution where:
pij ≈ N (pj , (pj × varResource)2 ).
All of the values of average time generated by the model were rounded out to
whole numbers and negative values to the value 1.
4.2

Execution of the Simulation

The Table 1 represents a total of 2 × 3 × 3 × 3 = 54 experimental conditions.
For each condition, 20 instances of problems had been generated randomly and
then the seven mechanisms were applied to the these instances. In the total,
7560 instances had been simulated. For the proposed study, a simulator able to
execute the instances under any one of the described mechanisms of distribution
was implemented [11]. Writing in Java(TM) language, the program is based on
the analysis of charts and concepts of the Scheduling area ([12]), to compute the
times of execution and the allocations of the tasks for the resources.
Among the data that is generated by the simulator after the execution of the
instances is the total execution time of the processes and the value of quality,
resultant of the attributions made for the distribution mechanisms. This data
was collected and is analyzed later in order to make possible the identiﬁcation of
the mechanism with greater commitment to performance and quality. For reasons
of space, only the results based on the execution average of the 3 system load
types, i.e., low load (20%), average (60%) and high (100%) will be presented. In

286

R.R. Veloso and A. Macˆedo

the same way, each data point on the result graphs is the average of 20 instances
with the same system load and processing time variation of only 3 diﬀerent
resources concurring for each task.
In the simulated model, two independent parameters exist, i.e., task variability and resource variability, each one with three diﬀerent possible values
(low, medium and high) resulting in nine diﬀerent combinations. However, only
four of the possible representative combinations are shown. Thus (varT ask,
varResource)∈{(Low, Low), (Low, High), (M edium, M edium), (High, High)}
is seen to be enough for the intention of the paper. The target process of the simulations contains three tasks. Initially all of the resources possess high availability.
The adequation values of each resource are empiric and generated randomly.
4.3

Total Execution Time and Quality of the Processes

The behavior of seven mechanisms was evaluated in terms of total execution time
and quality of the processes. It is also observed that the execution times and
quality of the processes of the Push mechanism surpasses the others mechanisms
in all variations of task and resource. The Selective mechanism, with similar
behavior, also has high time and quality indices. These results occur due to
the fact that these mechanisms are very restrictive, delivering tasks always to a
single resource or to a small group of resources. However, in consequence, waiting
queues occur for more adequate resources, accumulating tasks and increasing the
completion time of processes. The mechanisms Pull and Typical result in less
time and quality in execution because they are very liberal, i.e., they make it
diﬃcult to accumulate tasks because they involve a greater number of resources.
The mechanisms based on Sel-push, combine the characteristics of both the
liberal and restrictive mechanisms distributing tasks better.
Table 2. Comparison of mechanisms for execution time and quality

Push
Pull
Selective
Typical
Receptive
Sel-push

Sel-Push Sel-push-10
-/+
-/+
+/+/-/=
-/+
=/=/+/+/-/+

The observations shown previously are conﬁrmed by the execution of some
statistical tests. For example, the Table 2 contains comparisons proceeding from
a statistical test called pairwise t-test, used to see if the results of each mechanism can be considered statistically equal to each other. In this table there are
three symbols: the symbol “+”, the symbol “-” and the symbol “=”. These symbols, in each column, are in the format symbol/symbol representing time/quality.
The symbol “+” means that the mechanism that is in the row on the table is
statistically better than the mechanism which is in its respective column, with

Balancing Quality and Performance of Task Distribution in Workﬂow

287

95% of conﬁdence. The symbol “-”, contrary to the symbol “+”, means that
the mechanism which is in the row is statistically worse than the mechanism
in the column. In the case of the symbol “=”, also demonstrating the same
95% of conﬁdence, conﬁrms that there is no signiﬁcant diﬀerence between the
corresponding row and column of the table.
It is observed that through testing, that the mechanisms behave in a constant
manner regarding task variation, resources and system load. The more restrictive mechanisms elevate the time necessary to conclude processes due to task
accumulation. Although, for the same reason, the mechanisms raise the average
quality of executed process. On the other hand, while the more liberal mechanisms spend less time in the execution of processes because they have more
resources receiving tasks, at the same rate favor the decreasing service quality.
Therefore, the mechanisms Sel-Push and Sel-Push-10, englobe the best of these
two worlds, because besides guaranteeing a average time of execution of the
processes similar to the processes dealt with by the liberal mechanisms, they
keep a high level of quality, equaling the more restrictive mechanisms.

Fig. 1. Average Curve of (a) execution time and (b) quality of processes

The graph of the Figure 1 resumes the behavior of the Sel-Push and SelPush-10 mechanisms in relation to the average curves of execution time and
quality of executed processes with Push, Pull, Selective, Typical and Receptive
mechanisms. Conforming to the graph, the mechanism Sel-push has an average
behavior in relation to execution time and quality better than the other analyzed mechanisms. This betterment becomes more evident as the variation of
processing time of tasks increases.

5

Conclusions

The task distribution, besides being a key toward dynamically attributing task
which arrive individually for resources, directly aﬀects the service quality and
the resource productivity. It also is an integral part of decisions of the strategical
level of the organizations [2].

288

R.R. Veloso and A. Macˆedo

Two task distribution mechanisms were proposed. Their performance was
studied by simulation. The results were compared to other mechanisms which
reﬂect the current practice in workﬂow. The study done concentrated on analysis
of two factors of performance: quality and execution time of work. The impact of
variation of individual processing time of tasks, the number of resources involved
and the system load of these performance factors were evaluated under the seven
evaluated mechanisms.
It was observed that the proposed based on Push mechanisms obtained eﬀective gains in average quality and execution time in simulated scenarios.

References
1. Stohr, E.A., Zhao, J.L.: Workﬂow automation: Overview and research issues. Inform. Systems Frontiers 3 (2001) 281–296
2. Zeng, D.D., Zhao, J.L.: Eﬀective role resolution in workﬂow management. INFORMS journal on computing 17(3) (2005) 374–387 ISSN: 1091-9856.
3. Governatori, G., Rotolo, A., Sadiq, S.: A model of dynamic resource allocation in
workﬂow systems. In: XV Australasian Database Conference. Volume 27., Dunedin,
New Zealand (2004)
4. Kumar, A., van der Aalst, W.M., Verbeek, E.M.: Dynamic work distribution in
workﬂow management systems: How to balance quality and performance? Journal
of Management Information Systems 18(3) (2001) 157–193
5. Momotko, M., Subieta, K.: Dynamic changes in workﬂow participant assignment.
In: ADBIS Research Communications. Volume 2., Bratislava, Slovakia, Slovak University of Technology, Bratislava (setembro 2002) 175–184
6. Alt, R., Klein, S., Kuhn, C.: Service task allocation as an internal market. In:
Proc. of the Second European Conf. on Information Systems. (1994) 424–432
7. Harker, P.T., Ungar, L.H.: A market-based approach to workﬂow automation
8. Tan, J.C., Harker, P.T.: Designing workﬂow coordination: centralized versus
market-based mechanisms. Technical report, Department of Systems Engineering,
University of Pennsylvania, Philadelphia (1997)
9. Shen, M., Tzen, G.H., Liu, D.R.: Multi-criteria task assignment in workﬂow management systems. In: Proc. Thristysixth Hawaii Internat. Conf. System Sci., Big
Island, Hawaii 202
10. van der Aalst, W.M.P., van Hee, K.M.: Workﬂow Management: Models, Methods,
and Systems. MIT Press (2002)
11. Veloso, R.R., Macˆedo, A.: Lambari: Simple workﬂow test environment. Technical
report, Department of Computer Science, Federal University of Uberlandia, MG,
Brazil (2005)
12. Brucker, P.: Scheduling Algorithms. Springer-Verlag New York, Inc., Secaucus,
NJ, USA (1998)

