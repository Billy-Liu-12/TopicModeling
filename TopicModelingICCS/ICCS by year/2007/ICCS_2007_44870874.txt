Acceleration of Preconditioned Krylov Solvers
for Bubbly Flow Problems
J.M. Tang and C. Vuik
Delft University of Technology,
Faculty of Electrical Engineering, Mathematics and Computer Science,
Delft Institute of Applied Mathematics,
Mekelweg 4, 2628 CD Delft, The Netherlands
{j.m.tang,c.vuik}@tudelft.nl

Abstract. We consider the linear system which arises from discretization of the pressure Poisson equation with Neumann boundary conditions, coming from bubbly ﬂow problems. In literature, preconditioned
Krylov iterative solvers are proposed, but these show slow convergence
for relatively large and complex problems. We extend these traditional
solvers with the so-called deﬂation technique, which accelerates the convergence substantially. Several numerical aspects are considered, like the
singularity of the coeﬃcient matrix and the varying density ﬁeld at
each time step. We demonstrate theoretically that the resulting deﬂation
method accelerates the convergence of the iterative process. Thereafter,
this is also demonstrated numerically for 3-D bubbly ﬂow applications,
both with respect to the number of iterations and the computational
time.
Keywords: deﬂation, conjugate gradient method, preconditioning, symmetric positive semi-deﬁnite matrices, bubbly ﬂow problems.

1

Introduction

Recently, moving boundary problems have received much attention in literature, due to their applicative relevance in many physical processes. One of the
most popular moving boundary problems is modelling bubbly ﬂows, see e.g. [12].
These bubbly ﬂows can be simulated, by solving the well-known Navier-Stokes
equations for incompressible ﬂow:
⎧
1
1
⎨ ∂u
+ u · ∇u + ∇p = ∇ · μ ∇u + ∇uT + g;
(1)
∂t
ρ
ρ
⎩ ∇ · u = 0,
where g represents the gravity and surface tension force, and ρ, p, μ are the
density, pressure and viscosity, respectively. Eqs. (1) can be solved using, for
instance, the pressure correction method [7]. The most time-consuming part of
this method is solving the symmetric and positive semi-deﬁnite (SPSD) linear
system on each time step, which comes from a second-order ﬁnite-diﬀerence
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 874–881, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Acceleration of Preconditioned Krylov Solvers for Bubbly Flow Problems

875

discretization of the Poisson equation with possibly discontinuous coeﬃcients
and Neumann boundary conditions:
∇·

1
ρ ∇p
∂
∂n p

= f1 ,

x ∈ Ω,

= f2 ,

x ∈ ∂Ω,

(2)

where x and n denote the spatial coordinates and the unit normal vector to the
boundary ∂Ω, respectively. In the 3-D case, domain Ω is chosen to be a unit
cube. Furthermore, we consider two-phase bubbly ﬂows, so that ρ is piecewise
constant with a relatively high contrast:
ρ=

ρ0 = 1,
ρ1 = 10−3 ,

x ∈ Λ0 ,
x ∈ Λ1 ,

(3)

where Λ0 is water, the main ﬂuid of the ﬂow around the air bubbles, and Λ1 is
the region inside the bubbles.
The resulting linear system which has to be solved is
Ax = b,

A ∈ Rn×n ,

(4)

where the singular coeﬃcient matrix A is SPSD and b ∈ range(A). In practice,
the preconditioned Conjugate Gradient (CG) method [4] is widely used to solve
(4), see also References [1, 2, 3, 5]. In this paper, we will restrict ourselves to the
Incomplete Cholesky (IC) decomposition [8] as preconditioner, and the resulting
method will be denoted as ICCG. In this method,
M −1 Ax = M −1 b,

M is the IC preconditioner,

is solved using CG. ICCG shows good performance for relatively small and easy
problems. For complex bubbly ﬂows or for problems with large jumps in the
density, this method shows slow convergence, due to the presence of small eigenvalues in the spectrum of M −1 A, see also [13].
To remedy the bad convergence of ICCG, the deﬂation technique has been
proposed, originally from Nicolaides [11]. The idea of deﬂation is to project the
extremely small eigenvalues of M −1 A to zero. This leads to a faster convergence
of the iterative process, due to the fact that CG can handle matrices with zeroeigenvalues [6] and the eﬀective condition number becomes more favorable. The
resulting method is called Deﬂated ICCG or shortly DICCG, following [17], and
it will be further explained in the next section.

2

DICCG Method

In DICCG, we solve
M −1 P A˜
x = M −1 P b,

P is the deﬂation matrix,

using CG, where
P := I − AZE −1 Z T ,

E := Z T AZ,

Z ∈ Rn×r ,

r

n.

(5)

876

J.M. Tang and C. Vuik

Piecewise-constant deﬂation vectors are used to approximate the eigenmodes
corresponding to the components which caused the slow convergence of ICCG.
More technically, deﬂation subspace matrix Z = [z1 z2 · · · zr ] consists of deﬂation vectors zj with
¯j ;
0, x ∈ Ω \ Ω
zj (x) =
1, x ∈ Ωj ,
where the domain Ω is divided into non-overlapping subdomains Ωj , which are
chosen to be cubes, assuming that the number of grid points in each spatial
direction is the same. Note that, due to the construction of the sparse matrix Z,
matrices AZ and E are sparse as well, so that the extra computations with the
deﬂation matrix P are relatively cheap.

3

Application of DICCG to Bubbly Flow Problems

The deﬂation technique works well for invertible systems and when the deﬂation
vectors are based on the geometry of the problem, see also References [9, 10].
Main questions in this paper are:
– is the deﬂation method also applicable to linear systems with singular matrices?
– is the deﬂation method with ﬁxed deﬂation vectors also applicable to problems, where the position and radius of the bubbles change in every time
step?
The second question will be dealt in the next section, where numerical experiments will be presented to show the success of the method for time-dependent
bubbly ﬂow problems.
First, we show that DICCG can be used for singular matrices. Due to the
construction of matrix Z and the singularity of A, the coarse matrix E := Z T AZ
is also singular. In this case, E −1 does not exist. We propose several new variants
of deﬂation matrices P :
(i) invertibility of A is forced resulting in a deﬂation matrix P1 , i.e., we adapt
the last element of A such that the new matrix, denoted as A, is invertible;
(ii) a column of Z is deleted resulting in a deﬂation matrix P2 , i.e., instead of Z
we take [z1 z2 · · · zr−1 ] as the deﬂation subspace matrix;
(iii) systems with a singular E are solved iteratively resulting in a deﬂation matrix
P3 , i.e., matrix E −1 , as given in Eq. (5), is considered to be a pseudo-inverse.
As a result, Variant (i) and (ii) give a non-singular matrix E and, in addition,
the real inverse of E is not required anymore in Variant (iii). Subsequently, we
can prove that the three DICCG variants are identical in exact arithmetic, see
Theorem 1.
Theorem 1. P1 A = P2 A = P3 A.
Proof. The proof can be found in [15, 16].

Acceleration of Preconditioned Krylov Solvers for Bubbly Flow Problems

877

We observe that the deﬂated systems of all variants are identical. From this
result, it is easy to show that the preconditioned deﬂated systems are also the
same. Since the variants are equal, any of them can be chosen in the numerical
experiments. We will apply the ﬁrst variant for convenience, and the results and
eﬃciency of this variant will be demonstrated numerically, in the next section.

4

Numerical Experiments

We test the eﬃciency of the DICCG method for two kind of test problems.
4.1

Test Case 1: Stationary Problem

First, we take a 3-D bubbly ﬂow application with eight air-bubbles in a domain
of water, see Figure 1 for the geometry. We apply ﬁnite diﬀerences on a uniform
Cartesian grid with n = 1003, resulting in a very large but sparse linear system
Ax = b with SPSD matrix A.

Frame 001 ⏐ 28 Jun 2005 ⏐

Z

X

Y

14

12

10

K

8

6

4

2
5

J
10
14

12

10

6

8

4

2

I

Fig. 1. An example of a bubbly ﬂow problem: eight air-bubbles in a unit domain ﬁlled
with water

Then, the results of ICCG and DICCG can be found in Table 1, where φ
denotes the ﬁnal relative exact residual and DICCG−r denotes DICCG with r
deﬂation vectors. Moreover, we terminate the iterative process, when the relative
update residuals are smaller than the stopping tolerance = 10−8 .
From Table 1, one observes that the larger the number of deﬂation vectors,
the less iterations DICCG requires. With respect to the CPU time, there is an
optimum, namely for r = 103 . Hence, in the optimal case, DICCG is more than
ﬁve times faster compared to the original ICCG method, while the accuracy of
both methods are comparable!
Similar results also hold for other related test cases. Results of ICCG and
DICCG for the problem with 27 bubbles can be found in Table 2. In addition, it
appears that the beneﬁt of the deﬂation method is larger when we increase the
number of grid points, n, in the test cases, see also [16].

878

J.M. Tang and C. Vuik

Table 1. Convergence results of ICCG and DICCG−r solving Ax = b with n = 1003 ,
for the test problem as given in Figure 1
Method
ICCG
DICCG−23
DICCG−53
DICCG−103
DICCG−203

# Iterations
291
160
72
36
22

CPU Time (s) φ (×10−9 )
43.0
1.1
29.1
1.1
14.2
1.2
8.2
0.7
27.2
0.9

Table 2. Convergence results of ICCG and DICCG−r solving Ax = b with n = 1003 ,
for the test case with 27 bubbles
Method
ICCG
DICCG−23
DICCG−53
DICCG−103
DICCG−203

# Iterations
310
275
97
60
31

CPU Time (sec) φ (×10−9 )
46.0
1.3
50.4
1.3
19.0
1.2
13.0
1.2
29.3
1.2

Finally, for the test case with 27 bubbles, the plots of the residuals during the
iterative process of both ICCG and DICCG can be found in Figure 2. Notice
that the behavior of the residuals of ICCG are somewhat irregularm due to the
presence of the bubbles. For DICCG, we conclude that the larger r, the more
linear the residual plot is, so the faster the convergence of the iterative process.
Apparently, the eigenvectors associated to the small eigenvalues of M −1 A have
been well-approximated by the deﬂation vectors, if r is suﬃciently large.
4.2

Test Case 2: Time-Dependent Problem

Next, we present some results from the 3-D simulation of a rising air bubble
in water, in order to show that the deﬂation method is also applicable to reallife problems with varying density ﬁelds. We adopt the mass-conserving levelset method [13] for the simulations, but it could be replaced by any operatorsplitting method, in general. At each time step, a pressure Poisson equation has
to be solved, which is the most time-consuming part of the whole simulation.
Therefore, during this section we only concentrate on this part at each time step.
We investigate whether DICCG is eﬃcient for all those time steps.
We consider a test problem with a rising air bubble in water without surface
tension. The exact material constants and other relevant information can be
found in [13, Sect. 8.3.2]. The starting position of the bubble in the domain and
the evolution of the movement during the 250 time steps are given in Figure 3.
In [13], the Poisson solver is based on ICCG. Here, we will compare this
method to DICCG with r = 103 deﬂation vectors, in the case of n = 1003. The
results are presented in Figure 4.

Acceleration of Preconditioned Krylov Solvers for Bubbly Flow Problems

879

0

10

ICCG
DICCG−23
DICCG−53
3
DICCG−10
DICCG−203

−2

Norm of Residuals

10

−4

10

−6

10

−8

10

50

100

150
200
Iteration

250

300

Fig. 2. Residual plots of ICCG and DICCG−r, for the test problem with 27 bubbles
and various number of deﬂation vectors r

(a) t = 0.

(b) t = 50.

(c) t = 100.

(d) t = 150.

(e) t = 200.

(f) t = 250.

Fig. 3. Evolution of the rising bubble in water without surface tension in the ﬁrst 250
time steps

From Subﬁgure 4(a), we notice that the number of iterations is strongly reduced by the deﬂation method. DICCG requires approximately 60 iterations,
while ICCG converges between 200 and 300 iterations at most time steps. Moreover, we observe the erratic behavior of ICCG, whereas DICCG seems to be less
sensitive to the geometries during the evolution of the simulation. Also with respect of the CPU time, DICCG shows very good performance, see Subﬁgure 4(b).
At most time steps, ICCG requires 25–45 seconds to converge, whereas DICCG
only needs around 11–14 seconds. Moreover, in Figure 4(c), one can ﬁnd the gain
factors, considering both the ratios of the iterations and the CPU time between
ICCG and DICCG. From this ﬁgure, it can be seen that DICCG needs approximately 4–8 times less iterations, depending on the time step. More important,

880

J.M. Tang and C. Vuik
50

350
300

40

250

CPU Time (sec)

Number of Iterations

ICCG
DICCG−103

ICCG
DICCG−103

200
150

30

20

100

10
50
0
0

50

100
150
Time Step

200

250

(a) Number of iterations versus time
step.
10

0
0

50

100
150
Time Step

200

250

(b) CPU time versus time step.

Iterations ICCG / Iterations DICCG−103
3
CPU time ICCG / CPU time DICCG−10

Gain Factors

8

6

4

2

0
0

50

100
150
Time Step

200

250

(c) Gain factors with respect to ICCG
and DICCG.
Fig. 4. Results of ICCG and DICCG with r = 103 , for the simulation with a rising air
bubble in water

DICCG converges approximately 2–4 times faster to the solution compared to
ICCG, at all time steps.
In general, we see that, compared to ICCG, DICCG decreases signiﬁcantly
the number of iterations and the computational time as well, which are required
for solving the pressure Poisson equation with discontinuous coeﬃcients, in applications of 3-D bubbly ﬂows.

5

Conclusions

A deﬂation technique has been proposed to accelerate the convergence of standard preconditioned Krylov methods, for solving bubbly ﬂow problems. In literature, this deﬂation method has already been proven to be eﬃcient,for linear
systems with invertible coeﬃcient matrix and not-varying density ﬁelds in time.
However, in our bubbly ﬂow applications, we deal with linear systems with a
singular matrix and varying density ﬁelds. In this paper, we have shown, both

Acceleration of Preconditioned Krylov Solvers for Bubbly Flow Problems

881

theoretically and numerically, that the deﬂation method with ﬁxed subdomain
deﬂation vectors can also be applied to this kind of problems. The method appeared to be robust and very eﬃcient in various numerical experiments, with
respect to both the number of iterations and the computational time.

References
1. Benzi, M.: Preconditioning techniques for large linear systems: A survey, J. Comp.
Phys., 182 (2002), 418–477
2. Gravvanis, G.A.: Explicit Approximate Inverse Preconditioning Techniques, Arch.
Comput. Meth. Eng., 9 (2002), 371–402.
3. Grote, M.J., Huckle, T.: Parallel preconditioning with sparse approximate inverses,
SIAM J. Sci. Comput., 18 (1997), 838–853.
4. Hestenes, M.R., Stiefel, E.: Methods of Conjugate Gradients for Solving Linear
Systems, J. Res. Nat. Bur. Stand., 49 (1952), 409–436.
5. Huckle, T.: Approximate sparsity patterns for the inverse of a matrix and preconditioning, Appl. Num. Math., 30 (1999), 291–303.
6. Kaasschieter, E.F.: Preconditioned Conjugate Gradients for solving singular systems, J. Comp. Appl. Math., 24 (1988), 265–275.
7. Kan, J.J.I.M. van: A second-order accurate pressure correction method for viscous
incompressible ﬂow, SIAM J. Sci. Stat. Comp., 7 (1986), 870–891.
8. Meijerink, J.A., Vorst, H.A. van der: An iterative solution method for linear systems of which the coeﬃcient matrix is a symmetric M-matrix, Math. Comp., 31
(1977), 148–162.
9. Nabben, R., Vuik, C.: A comparison of Deﬂation and Coarse Grid Correction
applied to porous media ﬂow, SIAM J. Numer. Anal., 42 (2004), 1631–1647.
10. Nabben, R., Vuik, C.: A Comparison of Deﬂation and the Balancing Preconditioner, SIAM J. Sci. Comput., 27 (2006), 1742–1759.
11. Nicolaides, R.A.: Deﬂation of Conjugate Gradients with applications to boundary
value problems, SIAM J. Matrix Anal. Appl., 24 (1987), 355–365.
12. Van der Pijl, S.P., Segal, A., Vuik, C., Wesseling, P.: A mass-conserving Level-Set
method for modelling of multi-phase ﬂows, Int. J. Num. Meth. in Fluids, 47(4)
(2005), 339–361.
13. Van der Pijl, S.P.: Computation of bubbly ﬂows with a mass-conserving level-set
method, PhD thesis, Delft University of Technology, Delft (2005).
14. Sousa, F.S., Mangiavacchi, N., Nonato, L.G., Castelo, A., Tome, M.F., Ferreira,
V.G., Cuminato, J.A., McKee, S.: A Front-Tracking / Front-Capturing Method for
the Simulation of 3D Multi-Fluid Flows with Free Surfaces, J. Comp. Physics, 198
(2004), 469–499.
15. Tang, J.M., Vuik, C.: On Deﬂation and Singular Symmetric Positive Semi-Deﬁnite
Matrices, J. Comp. Appl. Math., to appear (2006).
16. Tang, J.M., Vuik, C.: An Eﬃcient Deﬂation Method applied on 2-D and 3-D Bubbly
Flow Problems, Elec. Trans. Num. Anal., submitted (2006).
17. Vuik, C., Segal, A., Meijerink, J.A.: An eﬃcient preconditioned CG method for the
solution of a class of layered problems with extreme contrasts in the coeﬃcients, J.
Comp. Phys., 152 (1999), 385–403.

