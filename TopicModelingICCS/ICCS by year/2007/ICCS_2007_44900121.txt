Tactical Battlefield Entities Simulation Model
Based on Multi-agent Interactions
Xiong Li and Sheng Dang
Department of Command and Administration, Academy of Armored Force Engineering,
100072 Beijing, China
lixiong2609@126.com, jiansijia@sohu.com

Abstract. Tactical warfare process, e.g., engagement between opposite forces, is
full of unpredictability and platform-level interactions that result great difficulties in performing battlefield entities simulation. In this paper, modeling and
simulation based on multi-agent interactions is applied to solve the problem.
Based on the analysis on the requirement and countermeasure, the mapping from
tactical warfare system’s members, i.e. platform-level tactical battlefield entities,
to respective intelligent agents is set up. Thus, the multi-agent platform-level tactical battlefield entities simulation system and its agent model are designed. Tactical battlefield entity agent interactions model is presented to support simulation
based on multi-agent interactions by using an improved Contract Net Protocol.
The established demonstration system proves the feasibility and efficiency of our
model and shows its advantages in realizing platform-level military simulation.
Keywords: agent, multi-agent system, interactions, modeling and simulation.

1 Introduction
Tactical battlefield entities simulations are usually used to train soldiers to perform
missions and to learn to work together in teams and across command structures, or
carry out the advanced concept technology demonstrations for operational applications of equipment systems on future battlefield. How to capture tactical warfare’s
realism, its interactions and unpredictability, and still provide decision makers with
useful insight, is an issue needing to be studied. However, conventional modeling
methods can not cater for the requirement. For example, linearization, which “linearizes” problems to derive an analytical solution, comes at the price of realism since
problems are not always decomposable into independent parts. The decomposition
process fails to accurately capture the component interaction and these interactions
dominate the real world making tactical warfare unpredictable by analytical means.
Intelligent agents and multi-agent systems that emerged as a sub-field of artificial
intelligence have turned out to be useful for a wide range of application domains
where difficult problems have to be dealt with. In the past few years, interest in agents
has grown at an astonishing rate [1]~[8]. Multi-agent-based modeling and simulation
for tactical warfare process, e.g. engagement, has been the research focus for military
concept developers and military simulation systems designers.
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 121–128, 2007.
© Springer-Verlag Berlin Heidelberg 2007

122

X. Li and S. Dang

But most current multi-agent-based modeling and simulation research fruits in
military field usually concentrate on theory advancement [5]~[8], so they are far away
from practical applications. Even some successful models have a shortage in platform-level modeling and simulation. For example, the Hierarchical Interactive Theater Model [7] constructed and exercised by U.S.A. Air Force Studies and Analyses
Agency is effective, but it can only perform unit-level simulation. Similarly, the
model in [8] is task-oriented, not based on platform-level modeling and simulation.
The limitation would result in difficulty in describing subtly the real-time interactions
of tactical battlefield entities. Moreover, almost all researches on agent-based simulation are not based on multi-agent interactions. Thus there are a lot of difficulties when
the systems are implemented, since agents and multi-agent systems are complex and
have many properties such as autonomy, reactivity, sociality, adaptability and intelligence. It is impossible to take all these factors into account.
Tactical warfare process has heterogeneous members, such as tanks, missile launch
vehicles, armored reconnaissance vehicles, electronic reconnaissance platforms, and
combat command platforms, which have administrative levels and a lot of interactions, such as sending or receiving combat orders. Thus we can think that tactical
warfare system is in substance a distributed artificial intelligence system. Since an
agent may have believes, desires, intentions, and it may adopt a role or have relationships with others, tactical warfare system can be looked upon as a collection of
autonomous agents that are dependent upon each other. Therefore the method of
modeling and simulation based on multi-agent interactions is applicable to our case.
In this paper, we design a platform-level tactical battlefield entities simulation model
based on multi-agent interactions to lay a foundation for the advanced concept technology demonstration of warfare activities on future battlefield.

2 Agents Model
An intelligent agent with human being properties such as autonomy, sociality, adaptability and intelligence can act as a human. Especially multi-agent systems consider
how a group of intelligent and autonomous agents coordinate their capacities and plan
in order to achieve certain (local or global) goals [1], [2]. Agents may be seen as a
natural extension of the concept of software objects. Object-oriented programming
added abstraction entities, i.e., objects, which have persistent local states to the structured programming paradigm. Similarly, agent-based programming adds abstraction
entities, i.e., agents, which have an independent execution thread to the object-oriented
paradigm. Thus, compared to an object, an agent is able to act in a goal-directed fashion (e.g., by interacting with other agents, reading sensors, or sending commands to
effectors) rather than only passively react to procedure calls, as shown in Fig. 1.
Tactical warfare system is so alike a distributed multi-agent system in behaviors
that we can set up a mapping from its internal members, i.e. platform-level tactical
battlefield entities, to entity agents, e.g., tank → tank agent, combat command vehicle
→ combat command vehicle agent.
In order to develop effectively virtual battlefield simulation system which can be
called a whole federation, in the course of the mapping we should sort not only the
function agents (entity agents), but also the administration agents and service agents.

Tactical Battlefield Entities Simulation Model Based on Multi-agent Interactions
OBJECTS
client

123

AGENTS

server

client

server

method call

message

method return

message

Fig. 1. Multi-threaded agents

The function agents in Red force include tank agents (TA), photo-reconnaissance
vehicle agents (PRVA), radar reconnaissance vehicle agents (RRVA), armored reconnaissance vehicle agents (ARVA), cannon agents (CA), combat command vehicle
agent (CCVA) and logistic support platform agents (LSPA). They are aggregated into
the Red agents federation.
The function agents in Blue force are similar to those Red force agents, but some
different agents, e.g., armored cavalry vehicle agents (ACVA), missile launch vehicle
agents (MLVA), trench mortar agents (TMA) and information processing vehicle
agents (IPVA) are designed since there are some differences in force organization.
They are aggregated into the Blue agents federation.

TA

PRVA
CA

RRVA
LSPA

ARVA
CCVA

Red agents federation

DC

SE

TA
CP

SD
DB

BE

White agents federation

TMA
CA

ACVA
LSPA

MLV
IPVA

Blue agents

Simulation infrastructure

Fig. 2. Multi-agent battlefield entities simulation system architecture
Of course, we can add or cut down some function agents the Red or Blue agents
federation according to the actual simulation design and development.
The administration agents and service agents include federation manager agent, declare manager agent, time manager agent, data distribution manager agent, and so on,
which play the roles of demonstration control (DC), simulation evaluation (SE), data
base (DB), situation displaying (SD), command practice (CP) and battlefield environment (BE). These agents can be aggregated into the “White” federation.
In this way, we can design the basic organization of distributed multi-agent platform-level tactical battlefield entities simulation system as shown in Fig. 2.

124

X. Li and S. Dang

In this paper, instead of focusing our research on entity agent intelligence, we concentrated on the design of a practical framework for the development of agents capable of operating efficiently in the real simulation system. Fig. 3 shows the internal
model of the entity agents in the platform-level tactical battlefield entities simulation
system framework [1], [2], [4].

Behavior 1
Behavior
Behavior n
Collaborator
Sensor

Communicator

Effector
Action

Perception
Environment

Fig. 3. Internal model of agent

In this paper, we only take one entity agent in the Red or Blue agents federation as
example to illuminate the architectures of agents. In fact, the operation principium of
agents in White agents federation is accordant. There are only some differences in the
definitions and operation contents because of the differences in their functions.

3 Entity Agent Interactions
In this platform-level tactical battlefield entities simulation system, engagement is
modeled as a distributed process among many general platforms (general entity agents)
coordinated by the command platform (command entity agent). In the system, the
domain data D, rules P and organizational knowledge O are based on three factors:
(1) The experience and knowledge of a general entity is based totally on its criteria
(elementary belief)
(2) The general entity acquires knowledge through communication with other general entities and command entities.
(3) The general entity acquires knowledge by observing the behavior of other general entities and command entities. In practice a general entity is influenced by the
above factors and the modified knowledge is incorporated in D, P and O.
Contract Net Protocol (CNP) [1], [3] proposes episodic rounds of inter-communication
acts (announcements, bids, award messages) and shows its usefulness widely. The schematic representation is presented in Fig. 4. To describe unpredictability and platform-level
interactions more felicitously, in this paper we use an improved CNP. In our case, tactical
warfare system consists of a Red armored force unit (one combat command vehicle, nine
tanks and some armored reconnaissance platforms) and a Blue army troop (one information processing vehicle, one tank, one missile launch vehicle, one trench mortar, and some

Tactical Battlefield Entities Simulation Model Based on Multi-agent Interactions

125

other fire platforms). The Contract Net initiator as a manager represents the combat command vehicle agent or information processing vehicle agent, and all other participants as
contractors represent the other entity agents. Of course, the roles of manager and participants are changed once interaction relation changes.
Call for
Proposals
Action
Propose
Conditions

Refuse
Reason

Accept
Cancel
Reason
Failure
Reason

Inform
Done(action)

Fig. 4. Contract Net Protocol
Initiator

Participant
Call for Proposals
(CFP) Action
Reject
Not under stand

x

Dead line

Propose
Reject Proposal

x
Request
Reject
Agree

x

Dead line

Propose
Reject Proposal

x
Accept Proposal
Failure
Inform Done

x

Dead line

Inform Reject

Fig. 5. Improved CNP of the Red force agents

126

X. Li and S. Dang

In our model the manager wishes a task to be performed by one or a group of entity
agents according to some arbitrary function which characterizes the task. The manager
issues the call for proposals, and other interested agents or agents having obligation
can send proposals. In contrast to the original CNP, there is no need to do anything if
an agent playing a role of a participant or potential contractor is not interested or has no
obligation in submitting proposals. That means that our Contract Net model from the
very beginning relies on the notion of timeout, i.e. some actions need to be performed
in the event of a lack of enough proposals or even in the case of a complete lack of
proposals.
The proposals are collected by the manager, and then they are refused or accepted.
The accepted proposals can be cancelled, either, by the manager via a cancel action,
or by the contractor via a failure action. In case of cancellation other submitted proposals can be reconsidered, or a completely new call for proposals can be issued.
Fig. 5 presents the improved CNP of the Red armored force unit. The interaction is
started by the combat command vehicle agent who acts as a manager issuing a call for
proposals, e.g. destroying the No. 1 target in 1283 highland. These tank agents who
act as participants or potential contractors respond with proposals, which the combat
command vehicle agent either rejected or accepted. Accepted proposals can be either
cancelled by the combat command vehicle agent, or executed by a certain tank agent,
who later informs the combat command vehicle agent of success or failure of the
execution.

4 Demonstration System
The demonstration system that we set up can be illustrated by Fig. 6. Fig. 6 presents the
dynamic and real-time situation information during platform-level tactical battlefield
entities simulation where the deployment of Red force tanks is approximately transverse. By
this system, one can find out easily a certain agent’s real-time state information, as
shown in Fig. 7.

Fig. 6. Partial two-dimension battlefield situation

Tactical Battlefield Entities Simulation Model Based on Multi-agent Interactions

127

Fig. 7. A Red force agent’s real-time state information

Fig. 8. Contrastive results of three scenarios

According to the military experiences on tactical warfare process on distributed
battlefield, we can set appropriate data to the parameters for our system. When we run
the simulation system, we can obtain some results, which are shown in Fig. 8 in
which T represents total time for fulfilling the attack battle task (minute), E represents
attack efficiency (min/ target) and R represents rate of destroyed force (%). In Scenario A, the Red armored force unit takes a transverse deployment. Column and triangular deployment are taken respectively in Scenario B and Scenario C. Thus by these
simulation results one can find that Scenario C is the most effective attack battle plan
for the Red armored force unit while Scenario C is the worst one.
We carry through Verification, Validation, and Accreditation (VV&A) for our platform-level tactical battlefield entities simulation model to analyze these results. As far
as the concept model, we check whether attributes description, engagement and interactions, e.g., the entities and their tasks are consistent with real force situation. As far
as the program model, emphases are put in data to verify their correctness, dependability and performance.
By the evaluation, these results that we obtained from battlefield entities simulation
are accordant to real tactical warfare situation. The fact proves that our model is feasible
and effectual.

128

X. Li and S. Dang

5 Conclusion
Multi-agent-based modeling and simulation approaches to military simulation field
gained increasing attention in recent years. However most existent models and systems
can not provide enough detail to examine important dynamics in tactical warfare process, e.g., unpredictability of tactical warfare system operations and entity interactions.
In this paper, a multi-agent platform-level tactical battlefield entities simulation model
based on multi-agent interactions is studied. The multi-agent organization of platformlevel simulation system and the architecture of entity agents are put forward, and the
entity agent interactions model in this system is furthermore proposed by using an
improved Contract Net Protocol. Although the established distributed simulation
system model needs more research to be more practical, the demonstration system
shows that our model can be used to understand the external, complicated and intelligent tactical warfare resources application and can realize the dynamic platform-level
battlefield activities simulation.

References
1. Zhongzhi Shi: Intelligent Agents and Their Applications. Beijing: Science Press (2001)
2. V. Lesser: Autonomous Agents and Multi-Agent Systems. Kluwer (1998)
3. Haque, N. R. Jennings, L. Moreau: Resource Allocation in Communication Networks Using
Market-Based Agents. In: Proc. 24th Int. Conf. on Innovative Techniques and Applications
of AI (2004) 187–200
4. Xusheng Yang, Wanxing Sheng and Sunan Wang: Agent-Based Distribution Control and
Automation System. In: Proc. Int. Conf. on Communications and Information Technologies,
IEEE Press (2005) 222–225.
5. Xiong Li, Xiaobin Liu, Na Hao: Multi-agent-oriented Modeling for Intelligence Reconnaissance System. In: Proc. Int. Conf. on Parallel and Distributed Computing. IEEE Press
(2005) 563–566
6. Xiong Li, Degang Liu, Hua Cong: Multi-Agent-Based Space Information Interaction Simulation Model. In: Proc. Int. Conf. on Space Information Technology, SPIE Press (2005)
598509-1–598509-5
7. Richard K. B., Gregory A. M., and Raymond R. H.: Using Agent-Based Modeling to Capture Airpower Strategic Effects. In: Proc. Int. Conf. on 2000 Winter Simulation Conference
(2000) 1739–1746
8. Hou Feng, Chen Honghui and Luo Xueshan: Multi-agent based Modeling and Simulation of
C4ISR system. Electro-optic Technology Application. 3(2004) 25–30

