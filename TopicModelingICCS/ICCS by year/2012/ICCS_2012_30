Available online at www.sciencedirect.com

Procedia Computer Science 9 (2012) 1503 – 1512

International Conference on Computational Science, ICCS 2012

Vehicle platoon control with multi-conﬁguration ability
Madeleine EL-ZAHER ∗1 , Baudouin DAFFLON, Franck GECHTER, Jean-Michel CONTET
Laboratoire Syst`emes et Transports (SeT)
Universit´e de Technologie de Belfort-Montb´eliard (UTBM)
Belfort, France

Abstract
Vehicle platoon approaches found in literature deal generally with column formations adapted to urban or highway
transportation systems. This paper presents an approach in which each platoon vehicle follows a virtual vehicle, in
order to cope with issues such as diﬀerent platoon geometries. Those diﬀerent types of formations can be encountered
in a wide range of ﬁeld such as the military or agriculture. A platoon formation is composed of a vehicle which
assumes the platoon leader role (generally human driven) and other vehicles which play the follower role. A follower
vehicle assigns a local leader role to one of the vehicles it perceives. The approach presented here bases on a predeﬁned
translation of position, by a follower vehicle, calculated from the perceived position of its local leader vehicle. This
translation depends on the desired platoon geometry, expressed in terms of a predeﬁned longitudinal and lateral
distance of a follower vehicle relatively to its local leader position. Each vehicle is implemented as an agent which
makes decisions depending only on its own perception.
Keywords: Multi conﬁgurations, Platoon, virtual vehicle, reactive agents, simulation.

1. Introduction
Over the last years a number of projects, such as PATH [1] or CRISTAL 2 , have dealt with the platoon concept as
an approach to increase traﬃc safety and eﬃciency on urban areas and highways. A vehicle platoon can be deﬁned
as a set of vehicles, that move together while keeping a predeﬁned geometrical conﬁguration, without any material
coupling [2]. The most widely studied platoon conﬁguration is the column, also known as train conﬁguration. This
conﬁguration is mostly adapted to urban or highway transportation. Other kinds of formations can be considered,
such as line, echelon and arbitrary. Each one of those conﬁgurations possesses interesting properties in relation with
application ﬁelds such as military operations or agricultural activities.
The relevance of platoon systems in those ﬁelds is due to several reasons. In urban public transportation systems, platoons can bring ﬂexibility by adapting dynamically the size of the trains to users demand. In agriculture applications,
platoons with vehicles placed side by side can signiﬁcantly reduce the duration of plowing. In military operations,
platoons allow to increase the security of personnel and supplies, particularly if some platoon vehicles are unmanned.
∗ Email

address : madeleine.el-zaher@utbm.fr (Madeleine EL-ZAHER)
author
2 http://projet-cristal.net/
1 Corresponding

1877-0509 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.procs.2012.04.165

1504

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

In many platoon systems such as [3] and [4], each vehicle in the platoon determines its own position and orientation
only from its perceptions of the surrounding environment. In this context, the reactive multi-agent paradigm is well
adapted. Reactive agents are simple entities that behave based on their own local perceptions [5]. The interest of those
approaches results from their adaptability, simplicity and robustness. In this case, platoon conﬁguration can be considered as the result of the self-organization of a reactive multi agent system (RMAS). A platoon multi-agent system
can then be deﬁned as a set of agents, each one corresponding to a vehicle. Two agent roles can be distinguished:
platoon leader and follower. Platoon leader behavior: the agent interacts only with its environment (road, obstacles,
...). Follower behavior: the agent bases on local perceptions to perform decision making. In this case, a follower
vehicle can identify one of its neighboring vehicles as a local leader vehicle, even if a local leader vehicle is generally
not aware of this role.
Diﬀerent approaches have been considered. According to [6], general military solutions are based one of the three
following approaches:
• Unit-center-referenced: each agent computes the position of a unit center by averaging the x and y position of
all the agents involved in the formation. Then it computes its position relatively to this center unit.
• Leader-referenced: each agent computes its position relatively to the leader agent position.
• Neighbor-referenced: each agent is linked to a speciﬁc leader chosen among its neighbors. The agent then
computes its position relatively to this leader.
The goal of this paper is to present a platoon approach adapted to diﬀerent kinds of conﬁgurations. This proposal
bases on a reactive multi-agent system where each vehicle can be considered as an agent. There is a platoon leader
agent and each follower agent has one of its neighbor vehicles as local leader (neighbor referenced approach). The
basic idea consists, for a follower vehicle, in following a moving target-position obtained from a geometric translation
of the perceived position of its local leader vehicle. As a consequence, the follower vehicle follows a virtual leader
vehicle as if in a column conﬁguration. The predeﬁned geometric translation of the local leader’s position depends on
the adopted platoon conﬁguration, expressed in terms of lateral and longitudinal distance among neighbor vehicles.
This paper is structured as follow: section 2 deﬁnes the possible platoon conﬁgurations that can be encountered. In
section 3, a detailed description of the running of platoon in diﬀerent conﬁgurations is exposed Then, section 4 puts
the emphasize on the performance of the presented algorithm by dressing some experimental results. Finally, section
5 concludes by giving a list of possible future works.
2. Deﬁnitions and state of the art
2.1. Deﬁnitions
Platoon is a set of vehicles that moves together while keeping a particular geometrical conﬁguration without any
material coupling. Before deﬁning the diﬀerent conﬁguration that a platoon can take, lateral and longitudinal distances
(ﬁg.1) have to be deﬁned. These parameters are used in the geometrical deﬁnition of a platoon formation.
• Lateral distance represents the horizontal spacing between two neighbor vehicles.
• Longitudinal distance represents the vertical spacing between two neighbor vehicles.

Figure 1: Lateral and longitudinal distances

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

1505

Conﬁguring a platoon formation relies on the deﬁnition of both lateral and longitudinal distance. Depending on the
values of these, several platoon conﬁguration can then be designed. Among these the most useful can be deﬁned as
follow:
• Column conﬁguration, this conﬁguration represents the traditional form of platoon where vehicles are placed
one behind the other (cf.ﬁgure 2). In this conﬁguration, lateral desired distance is null. Column conﬁgurations
of platoon, are mostly dedicated for the transport of passengers in urban or highway transportation systems.
• Line conﬁguration, in this conﬁguration, vehicles are placed one beside the other (cf.ﬁgure 2). In this conﬁguration, longitudinal desired distance is null. This conﬁguration can be dedicated for the public transport, but it
can also be used in the agricultural environment, for soil tilling for example.
• Echelon conﬁguration, in this conﬁguration, vehicles are in a column formation but each is oﬀset from the
preceding by a lateral distance as in one side of a ”V”(cf.ﬁgure 2). In this conﬁguration, lateral and longitudinal
desired distances are both not null. This conﬁguration can be dedicated to agricultural and military environment.
• Arbitrary conﬁgurations : wedge formation, arbitrary conﬁgurations can holds many geometrical forms,
produced by the combinations of two or three of the conﬁgurations described above. These conﬁgurations are
mostly used in military environment. In wedge conﬁguration for instance, lead vehicle is followed by echelons
of vehicles trailing to the right and the left forming an inverted ”V” formation (cf.ﬁgure 2).

Figure 2: Conﬁgurations of platoon. From left to right : column, line, echelon, wedge

2.2. State of the art
In the literature on platoon system control, two main trends can be found : Global and local approaches. Global
approaches consist in the localization of vehicles relatively to a common global reference. Global approaches can
be centralized if decision making and control are made by a single device, or decentralized if the calculations are
distributed.
Among global platoon systems we can cite [7] and [8] for instance. Global approaches show precise trajectory matching. However, they are tied to sophisticated technologies for global positioning (RTK GPS for instance) and reliable
vehicle-to-vehicle communication.
By contrast, local approaches are always decentralized (i.e. each vehicle calculates its own references based only on
its perceptions). These rely only on distance-measuring devices (laser range ﬁnder, camera,...) which are generally
less costly than devices required in global solutions. Since only a local view is used, the results obtained in trajectory
matching are not as good as in global systems. Generally, anticipation error in curves is observed. As example we can
quote [9], [2] and [10].
Military solutions enumerated in the introduction, can ﬁt the global/local classiﬁcation. Unit-center-referenced and
leader referenced approaches can be considered as global (the control can be centralized or decentralized). By contrast, Neighbor-referenced techniques are local and decentralized. In table 1, we distinguished among centralized and
decentralized approaches, with global or local perception.
From now on, we can focus on the way to implement the platoon function for various conﬁguration. To address this
problem, inspiration can be taken from many works in the domain of mobile robots. To tackle the robot formation
control problem three main approaches can be encountered: behavior-based, leader-following and virtual structured
strategies.
In behavior based strategies ([6], [16], [13]...) to each robot is assigned a behaviors (e.g. formation keeping, obstacle avoidance...). The ﬁnal control is derived by weighing the relative importance of each behavior. Behavioral

1506

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

Perceptions / Control
Global
Local

Centralized
Leader-Follower approaches [11]
Virtual structure approaches[12]
None

Decentralized
Leader-follower, unit center [6]
Neighbor-referenced [13]
Leader perception [14], [15]

Table 1: Summarizing table of diﬀerent proposed control approaches

approaches are decentralized and require less communication between agents. However, due to the cumulative calculation errors, maintaining the formation cannot be guaranteed.
In virtual structured strategies ([17], [12], [18]...), the whole formation is considered as a virtual rigid body. Consequently, it is fairly easy to maintain the formation, because the system moves as only one body. On the other hand,
virtual structure approaches require a lot of communication between robots.
In leader-follower approaches ([11], [19], [20]...), one robot or more are considered as a leader, and follow a deﬁned
trajectory. Other robots, follow the leader, and maintain a desired distance and orientation to the leader. The main
problem of this approach is that it depends heavily on the leader vehicle to achieve its goal.
The virtual structure and the leader-follower approaches are both centralized approaches, that requires communication
of the state of the leader vehicle or of the virtual structure to each robot of the formation.
Our proposal can be considered as a neighbor-referenced strategy where the reference neighbor is viewed as a local
leader. This local leader is supposed to follow a speciﬁc trajectory even if it is computed through another local leaderfollower relation. Of course, there is a global leader which is supposed to follow the intended trajectory. Each vehicle
is then considered as a reactive agent the goal of which is to follow a local leader taking into account its perception and
platoon geometry constraints. In ﬁgure 2, for each agent i, correspond the leader i − 1. The follower agent perceives
its leader and computes its reaction relatively to it.
3. Virtual leader perception and platoon control
3.1. Global point of view
As exposed before, each vehicle in the platoon can be seen as an agent that acts based only on its perceptions.
Platoon’s structure results from self-organization of reactive agents. Global behavior of the platoon emerges as a result
of the individual autonomous behavior of each one of the vehicle agents.
Independently of platoon conﬁguration, two properties have to be considered :
• Liveness property : Follower vehicle should maintain the formation (keep the desired lateral and longitudinal
distances) and follows its predecessor.
• Security property : Follower vehicle should avoid the collision with its neighbors.
For each agent we deﬁne a local leader among its neighbors in the platoon. The agent computes its references based
on the position of its leader by trying to maintain the desired lateral and longitudinal spacing and the orientation of its
leader.
Column platoon control functions are now well known and possess reliable properties. Consequently, it has been
decided to base our approach on this kind of formation. The basic step is to translate the local leader position, in order
to form a ”virtual column” formation.
Figure 3 shows the behavior of follower agent. This behavior is a cyclic combination of three sub-behaviors :
• Perception : The follower vehicle perceives its leader in its perception range, and measures the lateral and
longitudinal distances. The perception angle for each agent is equal to 360 degree3 , so the agent is able to
percepts all its nearest neighbors.
3 Laboratory’s

vehicle have an angular range of perception equal to 360°

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

1507

• Virtual leader position computation : The follower vehicle deﬁnes a virtual leader in order to use the column
platoon function.
• Column Platoon Control Model : Using a column platoon control model, the follower vehicle computes its acceleration, then, in the case of a simulation, it computes the reaction as a function of its dynamical characteristic
and speed.

Figure 3: Figure that shows the behavior of the follower agent

3.2. Determining the virtual leader position
A virtual Leader is an image of the perceived real leader computed from the application of two translations (longitudinal and lateral). The translation is computed so as to transform the initial problem into a classical column
formation. Consequently, the virtual leader has to be placed in front of the follower agent. Once the column formation
is obtained, a platoon control algorithm deﬁned for linear platoon can be applied.
The position of the virtual leader can be determined using the following equation :

Figure 4: Figure that shows the diﬀerent steps followed by the follower agent in order to deﬁnes its leader and install the physical interaction model.
the virtual leader is represented with the light gray color

x
y

=
=

x + Tx
y + Ty

1508

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

Where (x, y) is the position of the leader, (x , y ) is the position of the virtual leader and T x and T y are respectively
the lateral and longitudinal translation that should be applied in order to achieve the desired position of the virtual
vehicle. Depending on the platoon conﬁguration T x is even null or equal to the positive or negative value of the
desired lateral distance. By same for T y , the value is even null or equal to the positive or negative value of the desired
longitudinal distance. For example, in a column conﬁguration the leader and the virtual leader are superposed, so
T x = T y = 0, while in an echelon conﬁguration T x = −Lateral distance and T y = 0, ... Figure4, shows the diﬀerent
steps followed by an agent in order to computes its reference : The vehicle starts by the perception its environment
to detect its leader, then it deﬁnes its leader using the equation presented below, and ﬁnally it computes its references
using a physical interaction model for column conﬁguration.
3.3. Physical interaction model

Figure 5: Physical interaction model

A vehicle in a column conﬁguration uses a virtual physically-inspired interaction model composed of two springs
and a damper shown in ﬁgure 5, this interaction model is described in detail in [4]. Parameters involved in this system
are :
• m, the mass of the vehicle.
• k1 and k2 , the stiﬀness of each one of the springs.
• h, the damping coeﬃcient.
• l0 , the spring’s resting length (both springs have the same resting length).
• v and γ are respectively the speed and the acceleration of the vehicle.
Using a laser range ﬁnder, the follower vehicle measures the three distances: d1 and d2 , the lengths of each one of the
two springs, and d, the length of the damper, called inter-vehicle distance.
The interaction model is used for two main reasons. First to maintain stable the desired inter-vehicle distance. Second,
to guarantee a good trajectory matching, by making the follower vehicle follow the same trajectory as its predecessor,
the virtual leader. Three forces intervene in this model :
• Force of ﬁrst spring: f s1 = k1 X1 , with X1 the elongation of the ﬁrst spring, X1 = (d1 − l1 ).
• Force of the second spring : f s2 = k2 X2 , with X2 the elongation of the second spring and X2 = (d2 − l2 ).
• Force of the damper : fd = h v
Using the Newton’s law of motion4 , equation (1) can be established. The follower vehicle will use this equation to
calculate its acceleration and then by discrete integration it can deduces its speed and orientation.
F = m γ = k1 X1 + k2 X2 + h v
4 The acceleration γ of a body is parallel and directly proportional to the sum of forces

(1)

F and inversely proportional to the mass m, i.e., F = m γ.

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

1509

To test the quality of the proposed approach, in [4] we present two types of tests : A test that studies the evolution
of the longitudinal distance, and a second test that studies the evolution of the lateral distance. The results of those
simulations shows that the proposed model satisﬁes its requirements. The longitudinal distance is always close to the
desired longitudinal distance. About the lateral distance we note that in a normal running (wheel rotation < 10 °) we
have a lateral error smaller than 20 cm.
Moreover, [21] presents a formal veriﬁcation of the proposed model using the SAL model checker. It was veriﬁed that
the security property ”No collision between platoon vehicle” is always valid, in the case of linear trajectory.
4. Simulations and results
4.1. Experimental tool
To assess the quality of our approach, realistic simulations have been done using VIVUS simulator [22], a vehicle
simulator developed by the SeT5 laboratory. VIVUS is based on PhysX for real physical behavior, and Unity3D for
good 3D performance.
This software can simulates behaviors for each vehicle such as perception with laser range ﬁnder or cameras, physical
reaction between elements (wheels, car’s parts,...),... Physical reaction are computed using a realistic physical model
and considering peculiarities of the environment (friction with soil, materials of soils,...). VIVUS has already been
used to test various intelligent vehicle algorithms such as linear platoon control [23] and [4], obstacle avoidance and
driving assistance [24], and intelligent crossroads simulations in [25].
4.2. Test area
Simulations were performed on a 3D geo-localized model of the city of Belfort (France). Two diﬀerent trajectories
have been chosen (cf ﬁgure 6). In the ﬁrst trajectory, vehicles have to turn to the left with a rotation angle equal to
90°. In the second one, the vehicles turn left and then right, for each curve the rotation angle is equal to 45°.

Figure 6: Trajectories used in simulation

In order to obtain realistic results, 3D model and a physical model of the laboratory intelligent cars (called ”SetCars”) are used. Table 2 shows two diﬀerent models of the SetCar, while table 3 shows the main parameters of these
cars.
4.3. Performed simulations
In order to study the stability of the follower vehicle, two series of tests have been performed :
• Variation of longitudinal distance : Consists in studying the evolution of the longitudinal distance in time,
comparing the longitudinal distance to the desired longitudinal distance.
• Variation of lateral distance : Consists in studying the evolution of the lateral distance in time, comparing the
lateral distance to the desired lateral distance.
Table 4 shows the diﬀerent desired distances used (longitudinal and lateral) for diﬀerent conﬁgurations.

1510

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

SetCar 1

SetCar 2

Table 2: The SetCars used in simulation

parameters
Mass
Maximal acceleration
Maximal deceleration
Maximal power
Maximal speed

SetCar 1
450 kg
1.5 m/s2
3 m/s2
4 kW
7 m/s2

SetCar 2
600 kg
1 m/s2
3 m/s2
5 KW
7 m/s

Table 3: Vehicles parameters

Form
Echelon
Line
Column

Desired longitudinal distance
3m
Null
3m

Desired lateral distance
3m
3m
Null

Table 4: Desired distances in diﬀerent conﬁgurations

Figure 7: Longitudinal deviation

4.3.1. Evaluation of longitudinal deviation
In this test, we evaluate the variation of the inter-vehicle distance between the vehicle and its virtual leader, by
comparing it to the desired distance (3 m), and to the security distance (2 m). The security distance is the adopted
minimal inter-vehicle distance to avoid risk of collision in column conﬁguration. Figure 7 shows the variation of the
inter-vehicle distance in the line, column and echelon formations. We can see that the inter-vehicle distance in the
three conﬁgurations is practically the same. In Zone (A), the leader vehicle accelerates to reach its maximal speed
(7 km/h). As we can see the inter-vehicle distance increases, then after less than 200 ms, in the zone (B) where the
5 http://set.utbm.fr/

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

1511

vehicle speed is stable at 7 km/h, the inter-vehicle distance stays also stable around the desired distance. The Zone
(C) corresponds to a quick braking of the leader vehicle, the inter-vehicle distance stays always above the security
distance.
4.3.2. Evaluation of lateral deviation
Figure 8 shows the trajectories of a 2-vehicles platoon during a turn of 90°, in the cases of column, echelon and
line formations.
In the column formation (ﬁgure on the left),the maximal lateral error is around 1 m at the point of inﬂection. this error
decreases after the inﬂection point to reach a value smaller than the width of a tire (20 cm).
In the echelon formation (ﬁgure in the middle), the vehicles behaves as in the column conﬁguration, with a little
distinction. Indeed, during the inﬂection, the two vehicles move close to each other before re-stabilizing at the desired
distance.
In line conﬁguration (ﬁgure on the right), vehicles behave the same as in the column conﬁguration, but with a larger
deviation.

Figure 8: Trajectories of a vehicle and its leader in column, echelon and line formations.

formation
average lateral deviation
average longitudinal deviation

column
0.57
2.79

line
0.95
3.02

echelon
0.74
2.96

Table 5: summarize of analysis

Table 5 shows the average lateral and longitudinal distances between follower vehicle and the virtual leader. This
table shows that these average values respect the constraints and safety distances in all formations. This table with the
tests above shows that the line conﬁguration is the most diﬃcult to control especially in curves. We are now working
to improve the model to limit and reduce oscillations between leader and follower.
5. Conclusion
Th aim of the paper was to expose an approach for platoon control with multi-conﬁguration ability. This approach
is based on a neighbor referenced method in which the follower perception is modiﬁed in order to transform the
desired spatial formation into a classical column. Then, a column platoon control based on a virtual springs and
damper is used. This platoon function has got interesting properties such as stability and security. Simulations were
made using VIVUS simulator. These simulations shows satisfying results about the platoon trajectory matching in
column, line and echelon formations.
Future works will be devoted to several key points aimed at improving the proposed solution. On the one hand,
experiments using real laboratory vehicles (”SetCars”) have to be done in order to test the performance of the algorithm
in real conditions of perception, control,... On the second hand, eﬀorts have to be made in order to improve line

1512

Madeleine EL-ZAHER et al. / Procedia Computer Science 9 (2012) 1503 – 1512

formation results.
Works exposed in this paper are done with the support of the French ANR (National research agency) through the
ANR-VTT SafePlatoon6 project (ANR-10-VPTT-011).
References
[1] J. Hedrick, M. Tomizuka, P. Varaiya, Control issues in automated highway systems, Control Systems, IEEE 14 (6) (1994) 21 –32.
[2] J. Contet, F. Gechter, P. Gruer, A. Koukam, Bending virtual spring-damper: A solution to improve local platoon control, in: ICCS (1), 2009,
pp. 601–610.
[3] J. Contet, F. Gechter, P. Gruer, A. Koukam, Application of reactive multiagent system to linear vehicle platoon, 19th IEEE International
Conference on Tools with Artiﬁcial Intelligence 2 (2007) 67 – 70.
[4] M. El-Zaher, F. Gechter, P. Gruer, M. Hajjar, A new linear platoon model based on reactive multi-agent systems, The 23rd IEEE International
Conference on Tools with Artiﬁcial Intelligence ICTAI, IEEE Computer Society.
[5] J. Ferber, Multi-Agent Systems: An Introduction to Distributed Artiﬁcial Intelligence, 1st Edition, Addison-Wesley Longman Publishing Co.,
Inc., Boston, MA, USA, 1999.
[6] T. Balch, R. Arkin, Behavior-based formation control for multirobot teams, Robotics and Automation, IEEE Transactions on 14 (6) (1998)
926 –939.
[7] P. Avanzini, T. B., P. Martinet, A control strategy taking advantage of inter-vehicle communication for platooning navigation in urban environment, IROS11 International workshop on Perception and Navigation for Autonomous Vehicles in Human Environment.
[8] M. J. Woo, J. W. Choi, A relative navigation system for vehicle platooning, SICE 2001. Proceedings of the 40th SICE Annual Conference.
International Session Papers (IEEE Cat. No.01TH8603) (2001) 28 – 31.
[9] P. Ioannou, Z. Xu, Throttle and brake control systems for automatic vehicle following, IVHS Journal 1 (4) (1994) 345 –.
[10] J. J. Moskwa, J. K. Hedrick, Nonlinear algorithms for automotive engine control, IEEE Control Systems Magazine 10 (3) (1990) 88 – 93.
[11] A. Das, R. Fierro, V. Kumar, J. Ostrowski, J. Spletzer, C. Taylor, A vision-based formation control framework, Robotics and Automation,
IEEE Transactions on 18 (5) (2002) 813 – 825.
[12] R. Beard, J. Lawton, F. Hadaegh, A feedback architecture for formation control, in: American Control Conference, 2000. Proceedings of the
2000, Vol. 6, 2000, pp. 4087 –4091 vol.6.
[13] J. Lawton, R. Beard, B. Young, A decentralized approach to formation maneuvers, Robotics and Automation, IEEE Transactions on 19 (6)
(2003) 933 – 941.
[14] S. Gowal, R. Falconi, M. A., Local graph-distributed control for safe highway platooning, Intelligent Robots and Systems (IROS) (2010)
6070 – 6076.
[15] S.-Y. Yi, K.-T. Chong, Impedance control for a vehicle platoon system, Mechatronics (UK) 15 (5) (2005/06/) 627 – 38.
[16] D. Scharf, F. Hadaegh, S. Ploen, A survey of spacecraft formation ﬂying guidance and control. part ii: control, in: American Control
Conference, 2004. Proceedings of the 2004, Vol. 4, 2004, pp. 2976 –2985 vol.4.
[17] W. Ren, R. Beard, A decentralized scheme for spacecraft formation ﬂying via the virtual structure approach, in: American Control Conference,
2003. Proceedings of the 2003, Vol. 2, 2003, pp. 1746 – 1751. doi:10.1109/ACC.2003.1239847.
[18] K. Do, J. Pan, Nonlinear formation control of unicycle-type mobile robots, Robotics and Autonomous Systems 55 (3) (2007) 191 – 204.
[19] H. Tanner, G. Pappas, V. Kumar, Leader-to-formation stability, Robotics and Automation, IEEE Transactions on 20 (3) (2004) 443 – 455.
[20] R. Fierro, A. Das, V. Kumar, J. Ostrowski, Hybrid control of formations of robots, in: Robotics and Automation, 2001. Proceedings 2001
ICRA. IEEE International Conference on, Vol. 1, 2001, pp. 157 – 162 vol.1.
[21] M. El-Zaher, J. Contet, P. Gruer, F. Gechter, Towards a compositional veriﬁcation approach for multi-agent systems : Application to platoon
system, First International workshop on Veriﬁcation and Validation of multi-agent models for complex systems (V2CS).
[22] O. Lamotte, S. Galland, J.-M. Contet, F. Gechter, Submicroscopic and physics simulation of autonomous and intelligent vehicles in virtual
reality, Advances in System Simulation, International Conference on 0 (2010) 28–33.
[23] J. Contet, F. Gechter, F. Gruer, A. Koukam, Reactive multi-agent approach to local platoon control: stability analysis and experimentations,
International Journal of Intelligent Systems Technologies And Application.
[24] F. Gechter, J. Contet, P. Gruer, A. Koukam, Car driving assistance using organization measurement of reactive multi-agent system, Procedia
CS1(1): 317-325.
[25] B. Daﬀon, F. Gechter, J. Contet, A. Abbas-Turki, P. Gruer, Intelligent crossroads for vehicle platoons reconﬁguration, International Conference on Adaptive and Intelligent Systems.

6 http://web.utbm.fr/safeplatoon/

