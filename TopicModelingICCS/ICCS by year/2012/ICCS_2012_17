Available online at www.sciencedirect.com

Procedia Computer Science 9 (2012) 1314 – 1323

International Conference on Computational Science, ICCS 2012

Domain Knowledge Based Personalized Recommendation Model
and Its Application in Cross-selling
Lingling Zhanga,b,*, Caifeng Hua, Quan Chena,b, Yibing Chena,b,Yong Shib,c
a
School of Management, Graduate University of Chinese Academy of Sciences, Beijing100190, China
Research Centre on Fictitious Economy and Data Science, Chinese Academy of Sciences, Beijing100190, China
c
College of Information Science and Technology, University of Nebraska at Omaha, Omaha, NE 68182, USA

b

Abstract
This paper proposes a new personalized recommendation model based on domain knowledge to emphasize the importance of
domain knowledge in recommendation process. We focus on integration of domain knowledge in the whole process of
personalized recommendation to overcome those problems such as poor scalability, poor in dealing with data sparseness,
overlooking the factor of profit when using traditional collaborative filtering as recommendation method. We apply our new
method in enterprise s cross-selling as a case study at the last part of this paper.

Keywords: Domain knowledge; personalized recommendation; collaborative filtering

1. Introduction
In the 90s of the 20th century, the research of personalized recommendation was put forward as an independent
concept. The earliest personalized recommendation system is collaborative filtering system-the mail system
Tapestry, which is mainly used to solve the problem of e-mails flood and information overloaded. In 1992, Goldberg
et al put forward the concept of collaborative filtering during the system construction. Relatively, research and
applications of personalized recommendation in other fields (such as retail industry, telecommunication industry and
financial industry etc) are still not enough.
Personalized recommendation algorithm is the core of recommendation system and the key factor that plays a
decisive role in the performance of recommendation system. The main personalized recommendation algorithms
include collaborative filtering, content-based recommendation, rule-based recommendation and combined
recommendation methods. Collaborative filtering is the most widely used personalized recommendation system, and
its best advantage is that no analysis on the content feature properties of recommended objects is needed and it has
high operational efficiency with high recommendation quality under definite data environment. The method is not
required to analyze the characteristics of the object properties, and there are no special requirements on the

* Corresponding author. Tel.: +86-10-82680676; fax: +86-10-82680698.
E-mail address: zhangll@gucas.ac.cn, yshi@gucas.ac.cn.

1877-0509 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.procs.2012.04.144

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

1315

recommended objects. It expresses good recommendation quality if data density reaches certain extent. Breese,
Heckerman et al.(1998)divided collaborative filtering into two categories: memory-based and model-based
collaborative filtering algorithm. The former obtains better results and gained more wide range of applications.
Memory-based collaborative filtering algorithms can further be classified by the User-based and Item-based. In this
paper, user-based method will be revised and put into practice.
However, there are obvious shortcomings of this traditional method. Collaborative filtering relies entirely on the
user behaviour data, therefore, the more intensive the user data is, the better recommendation quality is. But in most
of the time, the user-product matrix is usually very sparse; its extreme condition which is the cold boot phenomenon
(that is new user or new product) enters the recommendation system. Sarwar et al. (2001)proved by experiment that
the decrease of the data intensity will cause the recommendation quality become lower. If the matrix is too sparse,
the recommendation accuracy of the collaborative filtering will be lower than the non-personalized recommendation
ly the method of domain ontology to calculate the
semantics similarity of the project to solve the problems of new products. Mobasher, Jin et al.(2004) tried to extract
automatically the domain ontology from web page and recommend the integrated semantics with scoring similarity
of the project; Ziegler, McNee et al.(2005) put forward the recommendation system frame based on classification to
explore the relationship between the top concept in special domain and low concept. Ferrara, Ludovico et al.(2006)
constructed an ontology with music situation, this ontology use OWL to describe the situation of music information,
to define the category system and principle regulations.
Current recommendation methods mainly rely on transaction records but neglect domain knowledge inherent in
certain field which result in poor recommendation quality, cold start and other common problems. On the other hand,
there are still few studies on personalized recommendation in traditional fields, such as retail and telecommunication.
This paper attempts to propose a domain knowledge-based personalized recommendation model, and applies it in
real supermarket data in order to improve recommendation in this field.
Rest part of this paper is organized as follows. Section 2 proposes our domain knowledge based personalized
recommendation model. Section 3 describes the whole recommendation based on domain knowledge in three steps
in details. Section 4 provides a case study of real supermarket cross selling application. Section 5 concludes the
paper and points out our future work.
2. Domain knowledge based personalized recommendation model
Domain knowledge indicates the interrelation of the concept within a certain domain and among the concepts as
well as the constraint integration of the relevant concept. Cao, Philip et al.(2009) listed domain knowledge in terms
of the following major aspects: (1) background and prior information; (2) Empirical knowledge; (3) Business rules,
law, trust; (4) Surrounding business processes, workflow; (5) Business expectation and interestingness; (6)
constraints from system, business process, data, knowledge, deployment. Zhang, Zhang et al.(2010)referred domain
knowledge to expert experience, specific context, user preferences, existing knowledge and its comprehensive
embodiment.
This paper believes, through combining the main content of this research, domain knowledge improves the effect
of personalized recommendation and its application in cross selling. (1)Domain knowledge, especially customer
dimension, is a good indicator of customers preference, which is very useful to reduce the differences between
recommendation result and customers demands, so as to improve their satisfaction and loyalty. (2)Model and
algorithm is abstract information drawn from reality, so personalized recommendations can t cover all the contents
of real life. However, lots of specialists have devoted to the research of specific domain for many years and
accumulated lots of valuable experience that is useful to expand the range of recommendation that models and
(3)The expression of knowledge in specific
domain can tremendously improve the actual application of personalized recommendation to make the
recommended results more feasible and effective in practical application.
Domain knowledge includes knowledge that can be used to guide and assist in finding out interesting information,
and has a variety of existence forms. This paper divides related domain knowledge that needs to be involved in
personalized algorithm into 3 categories.

1316

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

(1)Customer dimension domain knowledge. It includes information about customers basic features and
consumption behavior, etc. that is highly structured, so these data can be stored in relational database. According to
different applications, the eigenvector can be extracted and combined with corresponding algorithm. Section 3 of the
paper designs customer cluster pretreatment procedure by involving in customer dimension domain knowledge with
the purpose of improving the timeliness of personalized recommendation. (2)Retail dimension domain knowledge.
It is not highly structured, which is necessary to convert it into structured knowledge according to actual
requirements. Section 3 of this paper builds the domain ontology for retail products classification for the expression
of product dimension domain knowledge, including the relations among parent class, sub-class and entities. After
that, by combining the ontology, the paper designs improved personalized recommendation algorithm. (3)Business
principle and experts experience. Business principle refers to the requirements for maximizing profit of enterprise,
so it is necessary to take factors related with recommended products profit into consideration; experts experience
refers to the phenomenon, drawn from current research records, that over-recommendation of popular products
-popular products requires
recommendation. Section 3 of the paper discusses the refining stage of how to integrate these two kinds of domain
knowledge into personalized recommendation results( zhang, et al, 2009).
Fig. 1 in Appendix shows the whole process of our domain knowledge based personalized recommendation
model. First of all, we use customer domain and retail product transactions for customer clustering guidance;
secondly, in recommendation period, product domain is used for improving traditional collaborative filtering; at last,
domain knowledge such as product profit is applied to refine product recommendation list to overcome common
recommendation problems. Section 3 will provide a clear whole picture in details of how this model integrated with
domain knowledge works.
3. Personalized recommendation process based on domain knowledge

3.1. customer domain knowledge-based clustering preprocessing
Collaborative filtering algorithm is most widely used in personalized recommendation domain. The algorithm
compares target customer (product) with the entire customer set (product set) and then generates corresponding
recommend set. However, computational complexity of the algorithm increases dramatically and weaken the
recommendation effect when the amount of customer and product grows exponentially, thus the algorithm has its
disadvantage in scalability and recommendation timelessness. This paper introduces clustering as the preprocessing
step of collaborative filtering. After the preprocessing, recommendation for target customer (product) is generated
by comparing it with some clusters of customers (products) rather than the entire population. Therefore, this step is
essential for improving traditional collaborative filtering algorithm in both scalability and effectiveness.
On the other hand, in cross-selling application, there is close connection between personal preference in product
choice and age, gender, salary education, etc. Therefore, customer domain knowledge-based clustering helps to find
the most similar cluster of customers for the target. After clustering, those products purchased by the similar
customers can be recommended for the target customer in order to improve speed and effectiveness of the algorithm.
is study designs a method of clustering distance
According to the different types of customers
calculation of different type variables. Suppose the data set contains n different types of variables, the distance d (i, j)
between i and j is defined as:
n

d (i, j )

(t )
ij

dij(t )

t 1
n

(t )
ij

t 1

where t is the type of variable, xit denotes customer s value of variable t. dij(t ) is the distance between i and
(t )
(t )
0 ,otherwise ij(t ) 1 .
j on variable t. ij is indicator. If xit or xjt is missing, or xit=xjt=0, then ij
The calculation method of the distance between objects i and j is determined by the specific types of variables:

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

If the variable is a Boolean or categorical

If the variable is numerical

x

x

dij(t )

xit

x jt , dij(t )

xit

x jt , dij(t ) 1

| xit

1317

0

x jt |

max h {xt } min h {xt }

, denote the mean and standard deviation of x respectively.

If the variable is ordinal, we firstly calculate rank rit of the variables xit. For the convenience of calculation, the
value of each variable can be scaled to [0,1]. rit can be transformed into zit as follows.

zit

rit 1
Nt 1

zit [0,1] rit {N1 .. Nt}

In this way, we can deal with different types of variables and different unit of the variables.
In this study, we use K-means to finish the clustering preprocessing.
3.2. recommendation integrated with product domain knowledge
Traditional collaborative filtering relies entirely on the user behavior data, therefore, the more intensive the user
data is, the better recommendation quality is. But in most of the time, the user-product matrix is usually very sparse;
its extreme condition which is the cold boot phenomenon (that is new user or new product) enters the
recommendation system. Presently, that how sparse a matrix is the main factor that affects collaborative filtering
algorithm in actual application. Apart from objective data quality, the main reason for this problem is that traditional
collaborative filtering depends too much on customers history transaction data and consumption information in
analysis, and overlooks the domain knowledge in the recommended domain; consequently, once transaction data
can t meet the requirements of recommendation, recommending quality will be affected severely.
As mentioned above, the retail area in this study, matrix scarcity is also serious. Thus, it is necessary to establish
retail product domain knowledge ontology, so as to facilitate products personalized recommendations.
An entire ontology includes overall characteristics and relationships of a certain area. Although domain
knowledge is would be helpful to improve recommendation accuracy, the cost will be very high if we try to tap the
full use of domain knowledge and combine it with the traditional algorithm.
As to retail industry, the most important domain knowledge is the classification of product. With a standard
classification of the product, we can the inherent similarity between different products. Thus this paper attaches
importance on the establishment of product category hierarchy and its integration with traditional collaborative
filtering algorithms.
We build the retail industry product category hierarchy according to foodmart supermarket data set, with 6 levels,
covering 1,560 kinds of supermarket products. Fig.4 shows the top three levels.
Based on the retail product category, we can calculate domain similarity between products. There are two major
methods for calculating semantic similarity: 1.semantic similarity calculation based on distance (Leacock and
Chodorow, 1998; Ganesan, Garcia-Molina et al., 2003; Anand, Kearney et al., 2007); 2. similarity calculation based
on the information content(Resnik, 1995; Resnik, 1999; Formica, 2008; Pirró, 2009)
Many scholars have proposed methods based on distance to measure similarity between two concepts. This paper
makes reference to a calculation method proposed by Ganesan, Garcia-Molina et al (2003) which gained good
performance in experiment.
The domain similarity between two objects ci ci is defined as:

Sim(ci , c j )

2 depth( LCA(ci , c j ))
depth(ci ) depth(c j )

1318

LCA(ci

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

cj)is the lowest common ancestor of objects ci ci, depth(c)is the length of path from root node to node

l
The main deficiency of the method is that it gives in the default each path with the same weight. However, in
practice, each node has different density, therefore the path will be the same weight as a its irrationality.
To this end, this paper introduces the concept of the information content in information theory. (IC) can be used
to represent the probability of each concept node in a domain words system. The expression information content is
as follows:

IC (c)

log p(c)

p (c )

freq(c) / n

count (i)

freq(c)
i s (c )

c represents the a concept node, p (c) is its probability which equals to proportion of the concept node c and its
sub-nodes in the whole ontology. Therefore, the nodes with higher level in ontology have greater p (c) value, and
smaller IC (c) . The implication is that the higher level node has the more abstract concept of the meaning, and
smaller information contain. On the other hand, the lower level node expresses more specific meaning with grater
information contain.
The information loss between a node c1 and its son node c2 is defined as:

ICL(c1 , c2 )

(log p(c1 ) log p(c2 ))

Defining the maximum information loss in level k as MaxICLd ( k ) , the weight of each path in level k is as follows:

w(ci )

w(edge(ci , c j ))

ICLci

d ( k 1),c j d ( k ) (c1

, c2 ) / MaxICLd ( k )

The weighted depth Md (Modified Depth) is defined as:
n 1

Md (cn )

i 1

w(ci )

The similarity between product ci, cj based on combination of nodes depth and information contain is:

Sim(ci , c j )

2 Md ( LCA(ci , c j ))
Md (ci ) Md (c j )

Based on product similarity, Domain Similarity (DS) between customer A and B is defined as:

Ds ( A, B)

m

avg (

n

i 1 j 1

sim(ci , c j ))

In order to deal with the problem of data inconsistent between traditional similarity and domain similarity, we use
Z-Score to transform data:

Ds( A, B)

sdDs ( A, B)

Ds

sdS ( A, B)

S ( A, B)

,

Ds

S

The combined customer similarity is:

ComSim( A, B)

sdS ( A, B) (1

) sdDs( A, B)

As to customer A, the predicted recommendation power of product t is:
n

predictionA,t

B 1
n

ComSim( A, B)aBt

B 1

ComSim( A, B)

S

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

We can calculate recommendation power of objects that customer A
high to low, forming a recommendation list.

1319

t purchase before and rank them from

3.3. recommendation list refining
Scholars have proposed that current recommendation system will only further promote sales of popular products,
but do not help sales of diversification. Fleder and Hosanagar (2007)described in his study, the original
recommendation system does allow for better sales of popular products, other products are still rarely interested. In
other word, recommend system may result in Matthew. In their follow-up study, found that recommendation system
really can help businesses increase sales, but there would be more sales if the recommendation power of popular
products can be reduced appropriately. Scholars also proposed in the paper products recommended by collaborative
filtering algorithm have two characteristics: first, the product was chosen by a lot of people, they are popular
products; and second, the product was similar to people s nearest neighbors (Zhou, Ren et al., 2007; Zhou, Jiang
et al., 2008). Therefore, this paper wants to impose a certain penalty factor on over-popular products, reducing the
intensity of its recommendations to improve the recommendation results.
is a
In practice, we can set the total number of purchasing one product as k, and introduce a penalty factor k ,
adjustable parameter.
The final recommendation formula is:
n

predictioni ,t

j 1

(

n
j 1

CombinedSim(i, j )a jt

CombinedSim(i, j ) )* k

Assessment indicators of most recommendation systems focus only on their precision. However, this is
insufficient for an enterprise to sell its products in real life. Enterprise shall not only pay attention to customers
consumption preference, but also care about products bring more profits, so profit how much the recommended
products bring is also an important indicator to assess the performance of a recommendation system. Products
profit is taken into consideration in recommending. Rj refers to profit of product i:

Ri

Pi Ci

Pi is the current unit price of product i, and Ci is its unit cost.
Pri (Prediction) refers to the recommended efforts of the recommendation system on product i, Ri is unit profit
that product i brings. Rri Pri Ri refers to the score of i after reordering based on the combination of
recommended effort and profit factor.
4. Empirical study in supermarket cross-selling
Data of this case study is from FoodMart. The database contains 250,000 records which is generated during 8736
customers bought 1560 kinds of customers. As the dataset comes from real word so the data is quite sparse. In other
words, although the data set contains a large number of customers, products, and purchase history, but it includes a
lot of products which is rarely bought by customers.This paper uses the following evaluation criteria from running
time, performance and total profits aspects to evaluate the method we propose.
(1)Running time. The time required to generate recommended is important to evaluate algorithm. Although most
of the current process of personalized recommendation can be carried out off line, the operating efficiency of the
algorithm is critical for the exponential growth of enterprise data.
(2)Performance. Personalized recommendation will be used in cross-selling, so it is necessary to measure the
recommendation effect objectively. Billsus and Pazzani (1998) first introduced recall rate and precision into
recommendation system.
Billsus and PazzaniM propose F to combine recall and precision together. For F score combines precision and recall
rate as one indicator, it has been widely used. We use recall, precision and F score in this paper.

1320

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

(3) The total profits generated by recommendation. The paper considers the profit as one of the measures of the
models. We define the profits as follows:
n

m

TR

ij

Rj

i 1 j 1

TR is the total profits of recommended list; R is profit of a product; ij is result of recommendation. We
recommend product j to customer i. If customer i buys product j, then ij is 1, otherwise is 0.
The number of products most customers purchased is below 50. The average number of products consumers
bought is too small. This paper argues that in practical applications, the company can directly promote best selling
products to new customers because insufficient information is available. In this study, we recommend to customers
whose number of purchases is more than 20. After data preprocess, we choose 1081 customers to execute
personalized recommendations. In the end, we get a dataset with nearly 100,000 records, sparsity of 93.4%. 80% of
data is the training set, and the rest is test set.
Based on customer domain knowledge, experiments in this part cluster customer groups and conduct
personalized recommendation on clustered data. See operating time in Fig.1, and recommending effects in Fig.2-4.

Fig.1. Runtime comparison with and without clustering

Fig.2. Recall comparison with and without clustering

Fig.3. Precision comparison with and without clustering

Fig. 4. F-score comparison with and without clustering

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

1321

From Fig. 1, as cluster quantity increases, average time those recommendation needs decreases. When cluster
quantity is 5, time required for recommendation is less than 40% of that when the groups is not clustered; as it
increases to 10, time required is only 30% or so of that when the groups is not clustered; the time efficiency of
algorithm increases noticeably. When the cluster quantity surpasses 10, operating time tends to be stable.
From Figure 2-4, when customers are clustered to be 2 clusters, 5 clusters and 10 clusters according to
before clustering. 5 clusters create best recommendation result
In this part, we compared domain-driven collaborative filtering (DCF) and collaborative filtering(CF). Setting the
as 0.6 in similarity combination.
number of clusters as 5,

From Fig. 5to Fig.7, we can see that three criteria increase 17%-23% in DCF averagely. Therefore, DCF
would effectively improve the success of cross-selling.

Fig.5. Recall comparison of DCF and CF

Fig.6. Precision comparison of DCF and CF

Fig.7. F-score comparison of DCF and CF
as 0.6, adjusting
to reduce the
This part compared DCF and R-ranked DCF(RDCF). Setting
recommendation power of over-popular products, so as to improve the recommendation results. In testing,
recommendation result gained obvious improvement when = 0.25.

Fig.8. Pofit comparison of DCF and RDCF

Fig 9. Recall comparison of DCF and RDCF

1322

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

Fig.10. Precision comparison of DCF and RDCF

Fig 11. F-score comparison of DCF and RDCF

From figure 8 to 11 we can see that RDCF produces about 50% more profits than DCF. Meanwhile, two
recommendation methods run similarly in three criteria. Thus, we can conclude that RDCF would produce more
profits than DCF while maintaining the traditional criteria scores.
5. Conclusions and future work
This paper proposes a domain knowledge-based personalized recommendation model, and applies it in real
supermarket data in order to improve recommendation in this field. The model includes three steps and all of them
introduce domain knowledge for recommendation effect improvement. This paper provides empirical study of
foodmart supermarket data analysis and experiments show that our model with domain knowledge improve
recommendation effect from not only precision aspect, but also profits aspect.
Our future work may include the following aspects. First of all, Social Network System(SNS) websites are
booming nowadays, and they contain large volumes of cus
of personalized recommendation. Secondly, this paper considers the profit brought by the recommendation system.
However, the total profit are analyzed, future work may include product category profit in more details in order to
make better products promotions or bundling strategy.
Acknowledgements
The authors are very grateful to the supermarket for the provided data for analysis. This work was partially
supported by National Natural Science Foundation of China (Grant No. 71071151, 70921061, 71110107026).
References
1.
2.
3.
4.
5.
6.
7.
8.
9.

Anand, S. S., P. Kearney and M. Shapcott (2007). "Generating semantically enriched user profiles for web personalization." ACM
Transactions on Internet Technology 7(4): 22.
Billsus, D. and M. J. Pazzani (1998). Learning collaborative information filters. International Conference on Machine Learning.
Breese, J. S., D. Heckerman and C. Kadie (1998). Empirical analysis of predictive algorithms for collaborative filtering.
Cao, L., Y. Philip, Z. Chengqi and Z. Yanchang (2009). Domain Driven Data Mining, Springer.
Ferrara, A., L. A. Ludovico, S. Montanelli, S. Castano and G. Haus (2006). "A semantic web ontology for context-based classification and
retrieval of music resources." ACM Transactions on Multimedia Computing, Communications, and Applications (TOMCCAP) 2(3): 177198.
Fleder, D. M. and K. Hosanagar (2007). Recommender systems and their impact on sales diversity. 8th ACM conference on electronic
commerce, ACM.
Formica, A. (2008). "Concept similarity in Formal Concept Analysis: An information content approach." Knowledge-Based Systems 21(1):
80-87.
Ganesan, P., H. Garcia-Molina and J. Widom (2003). "Exploiting hierarchical domain structure to compute similarity." ACM Transactions
on Information Systems (TOIS) 21(1): 64-93.
Leacock, C. and M. Chodorow (1998). "Combining local context and WordNet similarity for word sense identification." WordNet: An
electronic lexical database 49(2): 265-283.

Lingling Zhang et al. / Procedia Computer Science 9 (2012) 1314 – 1323

10.
11.
12.
13.
14.
15.
16.
17.
18.
19.

1323

Mobasher, B., X. Jin and Y. Zhou (2004). Semantically enhanced collaborative filtering on the web. Web Mining: From Web to Semantic
Web, Springer. 3209: 57-76.
Pirró, G. (2009). "A semantic similarity metric combining features and intrinsic information content." Data and Knowledge Engineering
68(11): 1289-1308.
Resnik, P. (1995). Using information content to evaluate semantic similarity in a taxonomy. 14th International Joint Conference on
Artificial Intelligence. California: 448-453.
Resnik, P. (1999). "Semantic similarity in a taxonomy: An information-based measure and its application to problems of ambiguity in
natural language." Journal of Artificial Intelligence Research: 55-130.
Sarwar, B., G. Karypis, J. Konstan and J. Reidl (2001). Item-based collaborative filtering recommendation algorithms. 10th International
Conference on World Wide Web. Hong Kong, ACM: 285-295.
Zhang L., Li J., Shi Y. and Liu X., Foundations of Intelligent Knowledge Management, Human System Management. 2009 28 (4):145-161
Zhang, Y., L. L. Zhang, Y. Liu and Y. Shi (2010). "Mining intelligent knowledge from a two-phase association rules mining."
International Journal of Data Mining, Modelling and Management 2(4): 403-419.
Zhou, T., L. L. Jiang, R. Q. Su and Y. C. Zhang (2008). "Effect of initial configuration on network-based recommendation." Europhysics
Letters 81: 58004.
Zhou, T., J. Ren, M. Medo and Y. C. Zhang (2007). "Bipartite network projection and personal recommendation." Physical Review 76(4):
046115.
Ziegler, C. N., S. M. McNee, J. A. Konstan and G. Lausen (2005). Improving recommendation lists through topic diversification, ACM.

Appendix: Fig.1. Domain knowledge based recommendation model

retail
product
transactions

customer
domain
knowledge

customer clustering
model

database after
clustering

recommendation model
collaborative
filtering

product
domain
knowledge

TOP N product recommendation list

refined
recommendation list

cross-selling

product
profit;
popularity
factor

