Available online at www.sciencedirect.com

Procedia Computer Science 9 (2012) 1249 – 1255

International Conference on Computational Science, ICCS 2012

Entity disambiguation with textual and connection information
Lingfeng Niua , Jianmin Wub , Yong Shia,c
Center on Fictitious Economy & Data Science
Chinese Academy of Sciences, Beijing, China
b Yahoo! Research & Development(Beijing)
c College of Information Science and technology
University of Nebraska at Omaha, Omaha, NE 68182, USA
a Research

Abstract
Entity disambiguation is the task to resolve the underlying entity with the same surface form in the data. It arises
from information integration, document retrieval, web search and many other applications. Based on the fact that
entity occurring in most of the real world data possess both the textual information and the interobject relationship,
we propose an unsupervised iterative similarity propagation algorithm to disambiguate entities. We ﬁrst choose the
entity pairs with the same surface form as the probable matching candidates, and construct a connection graph which
take these probable matching pairs as nodes and built edges with the interobject relationship. Because the more similar
textual information the two records in one probable pair possess, the greater possibility the two records correspond
to the same real world entity. We use the textual similarity score as the initial value for our iterative method. Then
the similarity of each entity pair is propagated based on the connection graph constructed. When the iteration is
terminated, we identify the pairs whose ﬁnal similarity scores are larger than a given threshold as the real match. The
new method is applied to disambiguate authors in publication records. Experimental results on the real DBLP digital
library data set demonstrate the eﬀectiveness.
Keywords: Author Disambiguation, Similarity Propagation, PageRank,

1. Introduction
Entity resolution is a problem that arises in many information integration scenarios: We have two or more sources
containing records on the same set of real-world entities. However, there are no unique identiﬁers that tell us what
records from one source correspond to those in the other sources. Furthermore, the records representing the same
entity may have diﬀering information. An entity resolution algorithm attempts to identify the matching records from
multiple sources (i.e., those corresponding to the same real-world entity), and merges the matching records as best
it can [1]. Many applications in practice show demand of resolving entities [2]: Some need to identity the actual
entity from its diﬀerent references, known as reference disambiguation, such as name resolution [3, 4], record linkage
[5, 6], duplicate detection [7] and object matching [8]; Some require resolving of the ambiguous entities with the same
surface form [9, 10], known as entity disambiguation, which is the topic of this paper.
Email addresses: niulf@lsec.cc.ac.cn (Lingfeng Niu), jianmin.woo@gmail.com (Jianmin Wu), yshi@gucas.ac.cn (Yong Shi)

1877-0509 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.procs.2012.04.136

1250

Lingfeng Niu et al. / Procedia Computer Science 9 (2012) 1249 – 1255

Entity disambiguation stems from the fact that many objects in the real world share identical surface form. Such
ambiguity decrease the performance of document retrieval, information integration and web search. For example,
during the process of information integration, when we try to merge multiple tables from diﬀerent data source into a
single table, entity ambiguity would always cause confusion. However, due to the lack of information, it is not a trivial
task to distinguish diﬀerent entities with the same surface name. In this paper, we focus on distinguishing publications
written by authors with identical names in the publication records of digital library.
When one name appears in multiple publications, especially a common name appears in many publications, it is
a nontrivial task for the readers to know how many diﬀerent authors are behind this name. Therefore, it is diﬃcult
to diﬀerentiate the publications written by the author one really cares about from the remaining ones belongs to the
other authors who happen to share the same name. If a proper author disambiguation method can be derived, the
disambiguated result not only can aid the readers to ﬁnd the required articles more quickly and accurately, but also
can bring more understanding on the retrieved contents to the readers.
For most of the exiting solutions of author disambiguation, when an author name is given, all the publication
records with this author name would be listed ﬁrstly. Then based on the textual attributes of these publications, such
as authors, title, keywords, abstract, venue(e.g. a conference or a journal), publisher, author’s emails, aﬃliations and
etc., clustering methods are usually applied as a common way to aggregate them into several groups [11, 12, 13]. One
group are supposed to corresponding to one underlying author. Besides these textual features, the coauthor relationship
is another useful information to resolve authors. A variety of methods have been proposed to explore the coauthorship
via various graphical models. For example, [10] derived a graph-based name disambiguation method which utilize
only coauthorship to design similarity metric; [14] proposed incorporating the coauthor connection graph during the
clustering process. Encouraging performance gain was observed in both works.
In this paper, we utilize both textual information and coauthorship to disambiguate authors. The major diﬀerence
between our new method and the exiting method is in the way of evaluating the similarity. Unlike the preceding works
based on clustering, we propose an unsupervised propagation method to compute the similarity iteratively, which use
the textual information as well as the coauthor relationship in an uniﬁed way. To be more concrete, the publication
records sharing the same author name are identiﬁed as the probable matching candidates. A connection graph is
constructed with these probable matching pairs as nodes. And the edge is built based on the coauthor relationship.
Because the similar textual information the two publications in one probable pair possess, the greater possibility the
two publications are written by the same authors. The similarity is propagated iteratively according to the connection
graph with the textual similarity for the probable matching pairs as the initial value. When the iteration is terminated,
if a pair’s similarity score is larger than a threshold, the two publications in this pair are identiﬁed as written by the
same author.
The remaining part of this paper is organized as follows. In Section 2, the way of choosing the probable matching
candidates and the methodology of computing the similarities from textual and connection information are ﬁrstly
described. Then our new PageRank based similarity propagation algorithm is proposed. In Section 3, the new method
is empirically evaluated on the real DBLP digital library data set. Experimental results such as precision, recall, and
F-1 score are reported. Finally, we draw the conclusion and state some future works in Section 4.
A few words about the notations used in this paper. We use PmF to represent record F with the occurrence of entity
m. PmF .N is the surface form of entity m. Denote the textual attributes of the entity as PmF .A, which represents the
textual information of PmF in the vector space model [15]. PmF .C represents the set of connections of PmF . Especially,
we use P.C.N to represent the set of surface forms in its connection.
2. Entity resolution
The ﬁrst step of entity disambiguation in our method is to identify the probable matching pairs of entities, which
is the candidate set for future matching and would be used to as the nodes of the connection graph. There are various
schemes for choosing the probable matching candidates. Maybe the most straightforward way is to treat any pair of
entities in consideration as a probable match. However, this method usually brings too many false matchings and the
total number of pairs need to be disambiguated will become huge. On the contrast, if too strict rules are utilized for
selecting probable matching pairs, the resulting recall of real matching entities would be low. In this paper, we select

Lingfeng Niu et al. / Procedia Computer Science 9 (2012) 1249 – 1255

1251

the entities with the same surface form as the probable matching pairs and denote the resulting candidate set as C, i.e.
C = {(PmF , PYn ) | PmF .N = PYn .N}.
In the setting of author disambiguation, this way of selecting probable matching candidates means that the authors to
be disambiguated have identical name spellings.
We start to calculate the similarity score from the textual information of the entity. For any (PmF , PYn ) ∈ C, the
textual similarity is deﬁned as the cosine value of the two textual attribute vectors, i.e.
S A (PmF , PYn ) =

< PmF .A, PYn .A >
PmF .A · PYn .A

(1)

where < ·, · > donates the inner product between two vectors. Although this kind of textual similarity can be used as a
criteria to identify the matching pairs directly. In this work, in order to improve the disambiguation performance, we
use S A (PmF , PYn ) as the initial value for our propagation method, i.e.
S (0) (PmF , PYn ) = S A (PmF , PYn )).
The interobject relationship is another important information for entity disambiguation. For example, still considering the task of distinguishing authors in publication records, for most of people, the group of his/her collaborators
are stable. Consequently, quite a few publications of the same author usually share some coauthors. Hence the
coauthorship provides us a strong indicator to determine whether two publications are written by the same author.
However, we still meet the same challenge to determine whether each of the coauthors refer to the same person. A
simpliﬁed solution to this problem is to consider only the name of each coauthor. Intuitively, the more coauthor names
in a probable matching pair are identical, the higher probability it is a real match.
Mathematically, for two entities m and n in records F and Y, the similarity of these two entities in terms of surface
form of interobject relationship is deﬁned by
S C (PmF , PYn )

|PmF .C.N ∩ PYn .C.N|
,
|PmF .C.N ∪ PYn .C.N|

(2)

where |·| means the count of elements in a set. The denominator in the above similarity deﬁnition acts as a penalty term
for the entity that has a large amount of interobject connections. If PmF and PYn represents publications, PmF .C.N and
PYn .C.N could be the list of all the authors, respectively. Instead of using the connection similarity score S C (PmF , PYn )
directly as a criteria to identify the matching pairs, we use the interobject relationship to construct a connection graph
for our propagation method.
Deﬁne the connection graph need to be constructed as G = (V, E), where V and E represents the vertex set and
the edge set, respectively. We take all the entity pairs sharing the same surface name as the vertex, i.e, V = C. The
edge set is built according to the following principle: if the entity pair (PuF , PYv ) occurs in connection of another pair
(PmF , PYn ), we create a directed link from (PuF , PYv ) to (PmF , PYn ), i.e.,
E

= {((PuF , PYv ), (PmF , PYn ))|PuF .N ∈ PmF .C.N and PYv .N ∈ PYn .C.N}.

The direction here reﬂects the fact that similarity of the entity pair (PuF , PYv ) propagates to the entity pair (PmF , PYn ) .
Similar to the way of employing the connection graph in the PageRank [16] algorithm for link graph of web page,
our iterative propagation equation for similarity can be formulated as
S (k) (PmF , PYn )

= (1 − α)S A (PmF , PYn ) + αS G(k) (PmF , PYn ),

(3)

where the superscript (·) denotes the iteration number; α ∈ (0, 1) is a regularization parameter which balances the similarity conveyed from textual information and interobject relationship; S G(k) (PmF , PYn ) represents the similarity conveyed
from the connection graph:
S G(k) (PmF , PYn ) =
(PuF ,PYv )∈C(PmF ,PYn )

S (k−1) (PuF , PYv )
,
π(PuF , PYv )

1252

Lingfeng Niu et al. / Procedia Computer Science 9 (2012) 1249 – 1255
Table 1: Statistics of the selected data set

Author Name
Wei Wang
Wei Li
Lei Zhang
Hui Li

# Actual Entity
21
24
11
3

# Pub. Records
106
160
76
7

here π(PuF , PYv ) is the number of times that (PuF , PYv ) occurs in the connections of probable matching pairs in C and
C(PmF , PYn )

= {(PuF , PYv ) ∈ C|PuF .N ∈ PmF .C.N, PYv .N ∈ PYn .C.N}.

(4)

We summarize our similarity propagation method in Algorithm 1.
Algorithm 1 Similarity Propagation Algorithm
Require: The probable matching candidate set C, the textual similarity S A (PmF , PYn ) for any (PmF , PYn ) ∈ C, connection
graph G = (V, E), regularization parameter α and tolerance ;
Ensure: Similarity S (PmF , PYn ) after propagation;
Step 1. Initialization. S (0) (PmF , PYn ) = S A (PmF , PYn ) for any (PmF , PYn ) ∈ C, set k = 1;
Step 2. Propagation. Update S (k) (PmF , PYn ) according to formula (3);
Step 3. Terminate test. If ∀ (PmF , PYn ) ∈ C,
S (k) (PmF , PYn ) − S (k−1) (PmF , PYn ) < ,
set S (PmF , PYn ) = S (k) (PmF , PYn ); Otherwise, set k = k + 1 and goto Step 2.;

3. Experiments
3.1. Dataset from DBLP digital library
To test the eﬀectiveness of the proposed similarity propagation method , we collect the publication records of four
common author names(‘Wei Wang’, ‘Lei Zhang’, ‘Wei Li’ and ‘Hui Li’) from DBLP digital library. The corresponding title and venue information are collected as the textual information. Although DBLP provides us several other
kinds of textual information for the publications, we do not include all of them in our data set. That is because the
information which is not the most common ones may not exist in other database, which is not as complete as DBLP.
In addition, with the growth of dataset size, it would becoming exhausting to collect too much information. A data
set with 440 publication records are obtained. The statistics is described in Table 1, from which we can see that there
are indeed quite a few diﬀerent authors share the same name. A snapshot of this situation is given in Table 2, which
contains four diﬀerent authors with name ‘Hui Li’ and ‘Lei Zhang’. The column ‘AuthorID’ separates the same author
from others.
3.2. Disambiguation results comparison
With this dataset, we build a similarity graph, each node is a pair of < (Paperm , Authorm ), (Papern , Authorn ) >
with the identical name. The overall number of nodes is 36,933. The textual similarity S A (m, n) of each node is
estimated by the shared number of common words in each paper title as in formula (1). In the similarity propagation
experiment algorithm we set the textual information and connection trade-oﬀ parameter α = 0.25, termination tolerance = 10−3 . We calculate the precision and recall by selecting the top nodes with similarity larger than a given
threshold. The result from the similarity propagation algorithm is shown in Figure 1. For comparison, we also show
the result with only attributes similarity in Figure 2. From the result, we can see that the disambiguation precision
increases as the increasing of the similarity threshold, while the recall drops at the same time on both of the settings.
In terms of the F-measure, we can see that the similarity propagation algorithm achieves the best F-1 with 0.8, which
is much better than the result from utilizing only the textual similarity.

1253

Lingfeng Niu et al. / Procedia Computer Science 9 (2012) 1249 – 1255

Table 2: Snapshot of the publication records

Hui Li

Lei Zhang

AuthorID
0004

Co-authors
Maria E. Orlowska, Chengfei Liu

0004

Maria E. Orlowska, Chengfei Liu

0002

Brian Williams

0002

Brian Williams

0009

Futai Zhang, Wei Wu

0009

Futai Zhang

0002

Dimitris Samaras

0002

Heng Huang, Dimitris Samaras, etl.

Title
Realizing ObjectRelational Databases ...
On Integration of Relational
and Object ...
Generalized Conﬂict
Learning for Hybrid ...
Hybrid Planning with
Temporally Extended Goal ...
... Signature Scheme in
Certiﬁcateless Cryptography
Security Model for
Certiﬁcateless Aggregate ...
... Variable Lighting using
Harmonic Image Exemplars.
Hemispherical Harmonic
Surface Description ...




		
 

Name



	
	
 

	


















	










Figure 1: Precision, Recall and F-1 on the similarity with propagation






Venue
OOIS
SOFSEM
CP
AAAI
ProvSec
CIS (2)
CVPR (1)
3DPVT

1254

Lingfeng Niu et al. / Procedia Computer Science 9 (2012) 1249 – 1255

		
 

1

0.8

	
	
 

0.6

0.4

0.2

0
0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1



Figure 2: Precision, Recall and F-1 on the similarity with attributes

4. Conclusion and future work
In this paper, we propose a new method for entity disambiguation, which utilize both textual information and
interobject relationship to evaluating the similarity. The entities with the same surface form are chosen as the probable
matching pair candidates. The textual similarity for these probable matching pairs is computed as the initial value.
Then the similarity is propagated iteratively according to the connection graph, which is constructed with the probable
matching pair as node and the edge is built based on the interobject relationship. When the iteration is terminated, if
the pair’s similarity is larger than a threshold, it is identiﬁed as a real match. Application to author disambiguation in
the publication records are considered. Experiment on a selected data set from the DBLP digital library is conducted.
Results indeed validate the eﬀectiveness of our new method.
We only select the entities with the same surface form as the probable matching pairs in this work. By altering
the candidate selection method, our method can be easily extended to the entity resolution problems with diﬀerent
surface forms. Still consider the author disambiguation problem, in the extended way, the situation with misspelling
and diﬀerent abbreviations could be handled and our approach will have a wider scope of application in practice.
Acknowledgement
The authors thanks the anonymous referees for his or her careful reading and valuable comments on improving the
original manuscript. This work was partially supported by the National Natural Science Foundation of China(Grant
No. 11026187, 70921061, 10831006),the president fund of the Graduate University of Chinese Academy of Sciences((Grant No. Y15101PYOO), and the CAS/SAFEA International Partnership Program for Creative Research
Teams(Grant No. kjcx-yw-s7).
References
[1] H. Garcia-Molina, Entity resolution: Overview and challenge, Lecture Notes in Computer Science 3288 (2004) 1–2.
[2] I. Bhattacharya, L. Getoor, Collective entity resolution in relational data, ACM Trans. Knowl. Discov. Data 1 (1) (2007) 5.
doi:http://doi.acm.org/10.1145/1217299.1217304.
[3] Z. Chen, D. V. Kalashnikov, S. Mehrotra, Adaptive graphical approach to entity resolution, in: Proceedings of the 7th ACM/IEEE-CS joint
conference on Digital libraries, JCDL ’07, ACM, New York, NY, USA, 2007, pp. 204–213.

Lingfeng Niu et al. / Procedia Computer Science 9 (2012) 1249 – 1255

1255

[4] B.-W. On, D. Lee, Scalable name disambiguation using multi-level graph partition, in: Proceedings of the Seventh SIAM International
Conference on Data Mining, SIAM, 2007.
[5] D. V. Kalashnikov, S. Mehrotra, Domain-independent data cleaning via analysis of entity relationship graph, ACM Transaction Database
System.
[6] W. E. Winkler, The state of record linkage and current research problems, Tech. rep., Statistical Research Division, U.S. Census Bureau
(1999).
[7] S. Sarawagi, A. Bhamidipaty, Interactive deduplication using active learning, in: Proceedings of the eighth ACM SIGKDD international
conference on Knowledge discovery and data mining, KDD ’02, ACM, New York, NY, USA, 2002, pp. 269–278.
[8] M. Bilenko, R. J. Mooney, Adaptive duplicate detection using learnable string similarity measures, in: Proceedings of the ninth ACM
SIGKDD international conference on Knowledge discovery and data mining, KDD ’03, ACM, New York, NY, USA, 2003, pp. 39–48.
[9] E. Minkov, W. W. Cohen, A. Y. Ng, Contextual search and name disambiguation in email using graphs, in: Proceedings of the 29th annual
international ACM SIGIR conference on Research and development in information retrieval, SIGIR ’06, ACM, New York, NY, USA, 2006,
pp. 27–34.
[10] X. Fan, J. Wang, X. Pu, L. Zhou, B. Lv, On graph-based name disambiguation, J. Data and Information Quality 2 (2011) 10:1–10:23.
[11] L. Sarmento, A. Kehlenbeck, E. Oliveira, L. Ungar, An approach to web-scale named-entity disambiguation, in: Proceedings of the 6th
International Conference on Machine Learning and Data Mining in Pattern Recognition, MLDM ’09, Springer-Verlag, Berlin, Heidelberg,
2009, pp. 689–703.
[12] I. P. Klapaftis, S. Manandhar, Unsupervised named entity resolution, in: Proceedings of the 3rd IEEE International Conference on Multimedia
Communications, Services and Security.
[13] L. Zhang, J. Li, Y. Shi, X. Liu, Foundations of intelligent knowledge management, Human System Management 4 (2009) 145–161.
[14] I. Bhattacharya, L. Getoor, Relational clustering for multi-type entity resolution, in: MRDM ’05: Proceedings of the 4th international
workshop on Multi-relational mining, ACM, New York, NY, USA, 2005, pp. 3–12.
[15] R. A. Baeza-Yates, B. A. Ribeiro-Neto, Modern Information Retrieval, ACM Press / Addison-Wesley, 1999.
[16] S. Brin, L. Page, The anatomy of a large-scale hypertextual web search engine, in: Seventh International World-Wide Web Conference
(WWW 1998), 1998.

