Available online at www.sciencedirect.com

Procedia Computer Science 9 (2012) 1667 – 1676

International Conference on Computational Science, ICCS 2012

The Case For Smartphones As An
Urgent Computing Client Platform
Nicholas Palmer, Roelof Kemp, Thilo Kielmann, Henri Bal
{palmer,rkemp,kielmann,bal}@cs.vu.nl
Vrije Universiteit, Amsterdam

Abstract
The computing world is now populated with smartphones which combine the features of a phone with a general
purpose computer and come loaded with sensors including digital cameras, global positioning system (GPS) receivers,
accelerometers and many more. In this paper we argue that these devices are an ideal platform for collecting data
for use in urgent computing simulations. We describe how these devices will have far reaching impacts on how
people connect with and organize their communities and discuss how this coincides with the rise of community driven
response to disasters and the need for decentralized command and control that is discussed in disaster management
literature. We also that smartphones, by providing technology which can network people without the use of centralized
infrastructure, and which are carried, used, and maintained as part of daily life, are a promising platform for building
distributed disaster management applications, which could be part of the inputs provided to an urgent computing
simulation. In this paper we describe not only the potential of the platform, but also analyze the challenges it faces in
order to realize that potential, and discuss how our middleware is designed to meet these challenges and bring about
the future of disaster management applications for smartphones using urgent computing.
Keywords:
urgent computing, smartphone, mobile, disaster management

Introduction
There are new mobile devices today, commonly called smartphones, that combine features from a cell phone a general
purpose computer and a digital camera into one package which people can easily carry around. In addition, such
devices allow users to install new applications not bundled with the device by the manufacturer. The advanced
feature sets available on these devices and the ability to install new applications, combined with the inherent mobility
they provide is radically altering the places and ways that we use computers. These devices have the ability to
communicate using a variety of networks, from bluetooth to wireless Internet (Wi-Fi) and increasingly fast cellular
networks including 3 and 4G services. This is combined with features like: on board global positioning systems
(GPS); still and video cameras; other advanced sensors for temperature, pressure, acceleration; an increasingly large
screen; as well as general purpose computing hardware. Smartphones are quickly becoming ubiquitous much as
cell phones are today[1] and there are many novel applications being developed which take advantage of the unique
features not available on traditional cell phones which only provide call and SMS features.
1877-0509 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.procs.2012.04.184

1668

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

The rise of these new devices coincides with a shift in the consensus approach to disaster management. Increasingly disaster management scientists have realized that normal citizens are critical to eﬀective disaster response[2, 3],
particularly as the size of the disaster increases. In such situations it has been demonstrated that centralized command and control structures can not provide the ﬂexibility to handle the organizational challenges posed by disaster
situations[4, 5, 6]. These challenges can not be addressed by military style hierarchical decision making. This is
because such organization does not oﬀer the agility to handle the ad-hoc organizations which emerge spontaneously
in response to a disaster. This is particularly true in the case of larger scale events. Furthermore, it has been shown
that smaller self managed organizations are more productive than more traditional management structures[7]. What is
therefore required is new technology with the ability to network people and act as a platform for emergent behaviors
during a disaster response.
Such a platform must also be able to take advantage of large scale computation and simulations provided by a
centralized cloud platform when urgently needed. Such a usage we considered to be an example of “Urgent Computing”, which we deﬁne as computations involving high performance resources which have a real world deadline,
which if not met may have signiﬁcant negative consequences. We envision applications, such as climate or evacuation
modeling, or realtime video processing, where the sensors found on these devices, along with data gathered in the
ﬁeld by smartphone users are used to drive modeling simulations being run on cloud based high performance computing resources. The results produced by such a simulation would then be distributed back to the smartphones of
users in the ﬁeld, aiding them in decision making. For instance, a short video clip of the occupants of a stadium in
need of evacuation could be analyzed in the cloud in order to estimate the size and distribution of the crowd and the
results of that analysis fed to an evacuation simulation. The results of such a simulation could then be returned to the
smartphones of coordinators on the ground to speed the evacuation.
We argue that the combination of features found on smartphones are an excellent platform for just such a system
and outline our research to enable and accelerate the emerging utility oﬀered by the smartphone platform as an urgent
computing client platform. We begin by discussing the unique aspects of smartphones in more detail in order to
characterize the promises the platform oﬀers for urgent computing for disaster management in particular. Next we
discuss the rise in the importance of distributed citizen response and its implications on organizational structures,
not only during disasters but across society as well. We then argue that the features oﬀered by smartphones are
uniquely suited to meet the challenges demanded by citizen response to disasters. We next explain how our research
focuses on enable these new applications by enabling data oriented applications to synchronize in distributed, ad-hoc
networks, and provide input as well as launch modeling and simulation using cloud based urgent computing platforms.
We evaluate this software framework from the perspective of some distributed data gathering applications and show
that we have already achieved some of our goals of enabling smartphones as a client platform for urgent computing
applications.
Promise and Challenges
We begin by describing the promise and challenges the smartphone platform faces when considering it for use as an
urgent computing client platform. There are several critical features of the emerging smartphone platform that are vital
to their utility; chief among these are mobility, location awareness and connectivity. The near ubiquity of cell phones
in the western world is largely driven by the connectivity that the cellular networks oﬀer and their ability to connect
people as they move about in the world. As Arnold points out, “even if the phone is never used, it can be carried at all
times, and the very fact that it is possible to communicate, of itself creates a link that reinforces connectedness[8].”
This mobile connectivity oﬀers a unique utility and when bundled with more advanced features provides a strong
force for smartphones in the market. They are thus expected to become nearly ubiquitous and to provide extremely
high utility[1].
Cell phones have already been observed to be of high utility in disaster situations where they are used “to interact,
negotiate and establish the initial network of professionals in order to meet the threats posed by a major incident[9].”
This is in no small part due to the fact that “a mobile phone number provides the only ﬁxed address to otherwise
ﬂexible, independent and mobile individuals[8]”. Thus, in addition to the connectivity that the cell phone oﬀers it also
oﬀers a ﬁxed address. This provides diverse utility; from community to family life, from daily business to a crisis
scenario, the combination of address and communication helps organize and connect together individuals and diverse

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

1669

groups. It has also been observed that “the timely spread of reliable information is a vital part of the response to and
recovery from a disaster.[10]” and mobile devices play a key role in this process.
The trouble with relying on cellular networks however is that they have centralized points of failure in the form of
cell towers, which can be easily rendered inoperable in a disaster, in addition to having limited capacity[11, 12], and
thus communication is often lost or overloaded on these networks[13, 10] in the face of a major disaster, particularly
in the face of many people in the disaster area attempting to make calls for help. Despite these problems, in the
case of hurricane Katrina[13] it was seen that cellular phones were the ﬁrst communication technology that became
operational in the aftermath[14, 12, 10]. Thus, the technology from which smartphones are evolving has already shown
utility in various crisis situations and the importance of this communication medium can not be stressed enough. What
is needed is a way to eliminate the requirement on centralized communication facilities, such as cell towers, in order to
provide the robust utility demanded by disaster response. It has been argued that, “Mobile systems can only succeed
if devices are able to communicate in a dynamic and ﬂexible way[6],” and that “Crises involve the necessity for many
hundreds of individuals from diﬀerent organizations to be able to freely exchange information, delegate authority,
and conduct oversight”[15], and smartphones are uniquely positioned to be a ﬂexible communication tool which can
facilitate such exchanges provided the challenge of failed communication networks can be overcome.
The promise of smartphones is that they are built with multiple networking technologies. A typical device contains
Bluetooth networking technology for short range communication, Wi-Fi based networks for longer range communication, in addition to the traditional, centralized cell phone networks for even longer range communication. Considerable
research is being done to use wireless ad-hoc networks to replace lost infrastructure[16, 17, 18] such as cell towers.
Already devices shipped today are able to create mobile ad-hoc “hotspots” to connect together multiple phones. In
addition, so called “Mobile Ad-Hoc Networks” (MANETS) composed of only mobile devices, such as smartphones,
are networks which operate by sending data packets in a hop-by-hop fashion between phones. This exchange of data
can be leveraged not only to send text messages but even to provide voice-over-IP services similar to how Skype
operates on the Internet. Even better, if the data is of utility to all users in the network then the hop by hop can be seen
as a form of distributed synchronization which can run over multiple networking technologies and take advantage of
the mobility of the users using the system to ferry data between isolated islands of network connectivity. The data can
be exchanged over bluetooth or over ad-hoc WiFi when cellular connectivity is not around.
Fortunately, WiFi networks are being integrated into existing wireless Internet infrastructure and cellular networks
to provide the kind of communication ﬂexibility that is demanded in a crisis situation[19]. Projects like Serval[18]
have already shown that it is possible to provide mesh internet and telephony services using only mobile phones.
Bluetooth connectivity oﬀers yet another form of communication that could be exploited to provide connectivity in
situations where other networks have failed. Our work is aimed at providing users with the ability to create structured
data stores and synchronize those data stores, without the need for centralized resource, as well as to launch and utilize
cloud resources to oﬄoad computation intensive calculations from the phone. The combination of these features
creates a platform for urgent computing, where data collected using a smartphone can be synchronized to cloud
resources for computationally intensive cloud processing, when networking resources allow. Through this work,
we argue that the smartphone is ideally suited to disaster scenarios due to the ability to use various communication
mediums to overcome loss of centralized communication resources upon which users normally rely. The robust
communication facilities which are possible on smartphones combined with the expected ubiquity[1] makes them
extremely compelling devices for further research.
This ubiquitous distribution is another important factor in the promise of the smartphones as a platform. It has been
argued that, “Above all, the emergency communication tools for the general public must be aﬀordable, available, and
applicable during their day-to-day life in order to ensure that they will be used during a crisis [20]”. The smartphone
is an ideal communication tool in this respect because owners of such devices are likely to use them every day
to communicate with their existing organizational structures such as work colleagues, friends and family. In an
emergency situation individuals are very likely to leave other computing devices, such as a desktop and even laptop
computers, behind as they ﬂee. However, the small size and ability to enable communication oﬀered by smartphones
make them highly likely to be carried around constantly by people. Many cell phone owners have a near unconscious
habit of ensuring they have their phone with them at all times so that they are sure to be connected with friends, family
and colleagues as they move about.
The fact that people are willing to carry a smartphone around all the time, and are likely to purchase one for
themselves, is also ideal for disaster organizations since they are often faced with “resource constraints that inhibit

1670

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

the purchasing or upgrading of equipment and paying for training costs (which can be prohibitive) to learn new
technologies not used on a regular basis[20].” Because the smartphone has utility outside of disaster management
contexts it is likely that they will be maintained and upgraded by individuals within an organization often with their
own money. Furthermore, it has been observed that, “An emergency system that is not used on a regular basis before
an emergency will never be of use in an actual emergency[15].” Thus, it is vital that applications have common utility
so that they are used on a regular basis and thus can be used when disaster strikes, but even more essential that users
be able to install such applications; something which is simply not possible on traditional feature phones.
Furthermore, because they are commodity devices the costs are expected to be much lower than specialized hardware could ever be and are likely to be properly maintained by the owner due to the daily utility of the device. What is
needed, therefore, are applications that have daily utility so that users will learn how to use them in the course of their
normal life, and thus will have the skills required to operate the applications in the event of a disaster. Note however
that there are a number of diﬀerent smartphone platforms which are available today and that compatibility between
these platforms is not good. Standards need to be made, similar to how web standards have allowed the web to ﬂourish
despite multiple browsers, in order to enable the development of cross platform applications. This is vital to enabling
the shift in disaster response from that of a centralized oﬃcial response to that of a distributed citizen response often
discussed in the literature. However, the communication and daily utility of smartphones isn’t the only feature of high
utility in a disaster, battery life is also an important factor.
While smartphones operate on limited batteries, they have lifetimes that are considerably longer than the average
laptop. The average phone can last for a day or two in standby and can talk for several hours. This oﬀers computation
and communication resources that can last much longer when a disaster strikes than similar mobile resources such
as a laptop which has a lifetime on the order of just a few hours. Furthermore, there are already hand-crank phone
chargers on the market that can easily be used to provide additional power for these devices when disaster strikes as
well as solar panels for charging during daylight hours. For larger resources like a laptop a generator or signiﬁcantly
larger solar panels are required. The better battery life of smartphones allows features like the GPS in the device to
be used for a prolonged period of time while providing a higher level of portability than similar technologies. Still,
power consumption is a very hard problem for all disaster related technology, and considerable work needs to be done
to reduce power consumption of such devices as well as scavenging energy[21] from the environment via heat, motion
or wireless sources.
The presence of a GPS and other location technology in smartphones is also extremely valuable in a disaster
situation for various reasons, including the fact that it may provide a good way to help ﬁlter incoming information[22].
Location information is invaluable to those who join the response but do not have personal knowledge of the disaster
area[12]. By encoding information with geographic data it becomes easier to visualize the data and can be used for
better situational awareness, even when the data is provided from multiple sources[23]. This information is of high
utility to responding organizations. Smartphones oﬀer a unique platform for collection of geographic information
including photos, videos and individual responder locations. The utility of location information is not limited just to
a disaster though. Such information also is of high utility in every day life both in terms of mapping but also in terms
of ﬁnding information related to location.
In conclusion, we have argued that the smartphone poses a unique potential to be an excellent client platform for
urgent computing. The availability of multiple on board sensors, especially that of location, the ability to access multiple networks as well as set up ad-hoc networking infrastructure, the near ubiquity of the platform, and signiﬁcantly
longer battery life than similar devices make the smartphone an excellent candidate for a client device for urgent
computing. We next address the issue of community driven response in a disaster area, which we feel is a signiﬁcant
trend in the disaster management community, and poses a unique challenge for smartphones as an urgent computing
client.
Distributed Community Driven Response
When a large scale disaster strikes the initial response is almost exclusively by untrained or semi-trained individuals
who just happen to be in the wrong location at the wrong time.
“Logically, the proportion of semi-trained and untrained responders increases with the scale of event,
and they assume greater responsibility for response activities. In catastrophes, they may handle local

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

1671

responses entirely, with experienced responders not arriving until the recovery phase[24].”
Thus it is vital to an eﬀective response to have communication facilities in place to support the activities of these
individuals as they come together in emergent, temporary organizations that improvise rescue and relief eﬀorts[25].
The smartphone platform is well suited to aid individuals in such cases because it can be made to support robust
communication facilities and will be already on hand when disaster strikes.
Through the use of smartphones to communicate situation speciﬁc information, provide discovery of others participating in the response, as well as assist in community organization, the platform becomes technology which “not
only changes how we communicate it changes how we structure our communities[8].” This change is also reﬂected
in some of the disaster management literature which is shying away from top-down military style command and control structures and embracing more organic structures, in part because of the agility required for successful response
to complex emergencies[4] but also because of the emergence of citizen based ephemeral disaster response groups
which require collaboration, cooperation and transparency, values which do not ﬁt well with a top-down structure of
command and control[26]. Part of this change is due to the advent of cell phones which have provided new ways for
groups to communicate and coordinate and smartphones are a natural extension that will further drive these changes.
In the case of a disaster, emerging organizations often don’t have an existing organizational structure to work
with and so what is needed is a form of cooperative activity that can beneﬁt from new technology to help mediate
the interactions between new and existing groups[25]. Thus, there is a need for technology which can support ad-hoc
organization and which can help to assist an adaptive self organized response by individuals and groups that coordinate
an eﬀective response eﬀort in a decentralized fashion[20, 5]. Parallels can easily be seen with self organizing swarm
systems, such as ants or so called swarm-bots, where very simple behaviors at the individual level can be turned into
what appears to be an organized group ballet[27, 28]. Systems organized in these ways are able to avoid problems
with wrong information at the global level leading to wrong decisions and dependence on the decision makers at the
highest level, a single point of failure. Instead distributed decision making organizations can provide the ﬂexibility
and autonomy required at the local level to form an eﬀective response[29, 30].
The promise of the smartphone platform is that it is a ready made device that could be used to provide the level of
coordination and information sharing that is required to organize these groups and that they can do so not just during a
disaster but in all aspects of modern societies. This is because “society is both prior to technology, and emerges from
technology[8]”. Society has reorganized to some degree already due to the cell phone and the cell phone is growing
into the smartphone in part because of this reorganization. In order for smartphones to have the highest utility during a
disaster it is important that they have utility outside of a disaster to avoid the issues with training users to use the system
and ensuring proper maintenance. Thus there is a need to drive the smartphone platform as a community network as
much as there is a need to change how communities network themselves. Our software, which enables structured
data gathering and synchronization, partially ﬁlls this need. However, the challenge for the smartphone as an urgent
computing client is that average users will not know how to take advantage of urgent computing resources to process
the collected data. Additional work is needed to develop applications and system which can perform interesting and
understandable tasks using urgent computing resources which will be accessible to the larger community.
The Impacts of Social Networking
We would be remiss in our discussion of community driven response if we did not address the rise of social networking. Recently the Internet has seen the rise of large social networking oriented sites such as Facebook, Twitter,
MySpace, LinkedIn, Orkut and many others. These sites oﬀer compelling platforms for applications because they
connect users with one another in new ways. They allow users to eﬀectively create virtual communities with which
they can share information. Increasingly such networks are open to external development via various APIs and applications on these platforms continue to grow. It has already been observed[31] that the socially convergent behavior
seen in the physical world is mirrored in on-line communities and technology needs to be developed which reﬂects
and supports these behaviors.
“All response technology should actively nurture cooperation, collaboration and partnership formation[24].” Smartphones are a good platform for building citizen based response applications which help people to organize their response eﬀorts much as Internet based social networking sites allow citizens to organize today. The communication
facilities available on this platform make it easy to build informal, ad-hoc channels of communication for coordination
of response eﬀorts that is needed when disaster strikes[26]. The important thing to realize is that these facilities can

1672

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

and should be based on existing community networks that are in place before a disaster strikes as well as facilitate the
emergence of new organizational structures.
The Internet has in many ways redeﬁned what a community can be and smartphones are poised to do the same on a
massive scale due to the mobility of the platform. Thanks to technologies like smartphones people will no longer need
to be physically close to coordinate and discover each other[25] and thus create new virtual organizations. Instead
they can rely on the platform to assist them in networking their community together and in turning their existing
community networks into eﬀective disaster response organizations. Work is needed to make such applications able
to function in the face of loss of centralized components but the applications already exist and have shown their
popularity and utility. It isn’t so much a question of will community networks be built but more a question of how
can they be leveraged during a disaster to make an eﬀective response. Given that it is clear that a substantial number
of diverse organizations, including ephemeral ad-hoc organizations, are likely to be active in the various phases of
emergency response[26], the question becomes how to leverage the users connections with other people in the most
eﬀective way possible when disaster strikes.
In conclusion, by combining the power of social networks with mobile devices like smartphones new applications
which allow citizens to help each other to overcome the challenges posed by a disaster will emerge and revolutionize
disaster management. Work is needed to overcome the challenges the disaster poses in terms of loss of connectivity to
allow social networking applications to continue to operate in the face of loss of centralized components on which all
of the existing social networking systems rely. Further work is also needed to create applications which are enabled
to allow users to assist in disaster response, particularly with respect to urgent computing related tasks. We address
this challenge in the next section.
Enabling Applications for Disaster Response
Our research in this area focuses on the low level requirements of applications for new social enabled networking
applications we envision. We have built a distributed data management system on which application developers can
easily create the kinds of applications that are needed to enable the smartphone platform to work eﬀectively both
in a broader societal context but also during a speciﬁc crisis event. This system focuses on applications associated
with gathering, sharing and managing structured data. This may include photos and videos, location and other sensor
data, as well as any other data the user feels is important to collect. Our system enables users to deﬁne a structured
data store on their phone, enter data into that data store and then share that data with others over ad-hoc networking
channels such as “Hotspot” mode found on many modern smartphones, as well as via cellular data networks when
available. We this system will enable a host of new data oriented applications appropriate for disaster management.
In conjunction with our Cuckoo framework for oﬄoading computation we have created a platform which could easily
be leveraged for urgent computing applications driven by the smartphone client.
Cuckoo
Cuckoo is a computational oﬄoading framework which makes it easier for application designers to write programs
which can be partly run in the cloud. In order to support proper operation when network resources are unavailable,
as might be the case in a disaster, Cuckoo supports the bundling of both a local phone implementation, as well as a
cloud enabled version of a particular computation. Bundled with Cuckoo is a resource manager which allows the user
to setup oﬄoading resources, such as a private home server, or a cloud resource. The user supplies this application
with the necessary conﬁguration information and credentials to access the cloud resource.
An application which uses Cuckoo for computation oﬄoading, can then load its computation to any resource
running a Java Virtual machine, either being machines in a commercial cloud such as Amazon EC2 or private mini
clouds such as laptops, desktops, home servers or local clusters. The user runs a simple Java application, the server,
on such a resource to enable it to be used for computation oﬄoading. The server that runs on such a resource does
nothing by itself, however, services available on a phone can be installed onto such a server. Cuckoo then makes a
decision based on the available resources to either oﬄoad the computation to the cloud or attempt to run it on a phone.
If required Cuckoo can launch a cloud computing resource, such as an Amazon EC2 virtual machine instance,
install the service on the server and then launch the processing of gathered data in the cloud. Alternatively Cuckoo
can use the local phone implementation if network services are unavailable. In this way, Cuckoo can be robust in the

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

1673

face of a network failure. The features of Cuckoo may be well suited for urgent computing applications, where a user
may need to run a particularly large calculation for a particular application but only has access to a new resource they
have never seen before due to the nature of the disaster. Because Cuckoo always bundles the server implementation
on the phone it is a simple matter of installing a very simple, generic Java server on the new resource and running it
in order to allow the phone to take advantage of this resource. It is easy to imagine installing the server jar on a laptop
in the ﬁeld and then oﬄoading complex computations from the phone to the laptop.
While we feel that this system is ideal for urgent computing from a client perspective, further work is needed to address the delay of provisioning of machine instances on cloud platforms, or giving users access to already provisioned
resources when their needs are urgent due to a disaster situation.
RAVEN: Versioned Databases
Our research has led us to identify a number of applications for disaster management that would be of high utility in a
disaster situation. Examples include bus management for the evacuation of the Superdome during hurricane Katrina,
tracking lost and found people eﬀected by a disaster, and even collecting trusted images and video of the situation
on the ground. What we have found is that each of these applications require a structured data store for sharing
information, and thus we have built a software system, called RAVEN, capable of creating arbitrary structured data
stores on Android powered smartphones, entering data in these data stores, and versioning them in order to enable
arbitrary sharing of data with other users over ad-hoc networks as well as synchronize the data with cloud resources.
As a portion of the evaluation of what our system is capable of we have implemented a ‘People Finder” application
consists of a user interface for editing records in a database which can be used to track lost and found people. This
application can take advantage of advanced on device features by including the users location, and a photo of the
person along with the collected data. The implementation of this application using RAVEN was undertaken entirely
on the phone. Using our “Schema Creator” application bundled with the framework we constructed our People Finder
application. The resulting schema was then installed in the system as a new data type. The user interface for this
version of the application was then generated based solely on the schema for the application by RAVEN. Users of
the application can share the complete application with others simply by synchronizing the data over an ad-hoc WiFi
network or 3G.
Using this evaluation application we have demonstrated that our system provides application developers and users
with the ability to easily create collaborative editing applications which use structured data stores. The generic interface engine which can generate an edit user interface for such data at runtime, allowing our system to support dynamic
schemas for structured data stores, with editing and storage on mobile devices.
Our system is built for Android powered smartphones. Android is a good platform for our work since it is an open
system which is rapidly gaining market share. We value openness because it allows us to conduct our research in the
most eﬃcient way possible and to easily publish our results without restriction. There are no technical reasons why
our work can not be ported to other platforms but is an engineering challenge which is out of scope for our research.
RAVEN: Design
Our system consists of four layers as illustrated in Figure 1. At the bottom of the stack is the Versioning layer
which gives us the features needed to track versions of the database and share those versions with other users. This
layer is composed of a Git repository. Git is a distributed version control system initially designed and developed by
Linus Torvalds for Linux kernel development. In Git every working copy is a full-ﬂedged repository with complete
history and full revision tracking capability which is not dependent on network access or a central server. This is ideal
for working in a frequently partitioned networking environment common in disaster situations, since it tracks the
complete Directed Acyclic Graph of versions. Git forms the basis of the versioning and sharing layer. It provides us
not only with features for tracking versions and branches, but also with synchronizing with other users or centralized
repositories of data via the Git push and pull protocols.
Above this layer is the database layer, which gives us the raw data storage features of the system. For this layer
we use an SQLite database, which is an embedded relational database system ideal for smartphones. It is unusual in
that it uses a dynamically and weakly-typed which we use in our system to enable a more compact on disk encoding
for the data stored in the system. On top of this database layer we make use of Android’s database abstraction layer
called Content Providers.

1674

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

Figure 1: Design of the Interdroid Versioned Database system. System components are written with black text.

Content Providers can be used to store and retrieve data across applications and provide a row oriented abstraction
of databases to applications. They are the suggested way to share data between applications on the Android platform.
How a content provider actually stores its data is up to the author of the datastore. However, all content providers
implement a common interface for querying the provider and returning results, as well as for adding, altering, and
deleting data within a given provider. Most common is the use of an SQLite database just as we use in our system.
The data model exposed by content providers is a table based model and queries return a Cursor object which can
be used to move through the table of results and extract data. Content providers expose their data through a series of
public identiﬁers, called Uniform Resource Identiﬁers (URIs), that uniquely identify the data in question on the entire
device.
Our system supports the use of the Apache Avro[32] schemas to construct a new Content Provider and underlying
SQLite data store at runtime. The system also provides an edit interface for records within this database which is
also generated at runtime based only on the Avro schema written by the user. As an example of using this system we
present screen-shots of a simple “To Do” application. We show two versions of this interface before and after a due
date is added to the schema for the application in order to demonstrate that the user interface is easily able to adapt to
the new schema.
Once a database is instantiated, records may be entered and synchronized with other users of the system.
Related and Future Work
A great deal of work has been done on both synchronization and collaborative editing on mobile devices. In this
section we give a far from exhaustive overview of some of the most similar systems to ours, due to space constraints.
In Syxaw[33] the authors give a general synchronization system for extensible markup language (XML) oriented
documents. This system diﬀers from ours in that we focus on structured data stores which are natural to query, while
they focus on document oriented system with an emphasis on XML.
The same is true for DocX2Go[34] which makes use of optimistic replication just as our system does, and can work
in a fully decentralized way. However, the XML focus of the platform makes it inappropriate for many applications.
Furthermore, they do not focus on the user interface components required to enable editing of structured data.
In the Disco[35] framework the authors explore how applications can handle operation of collaborative systems
in the face of disconnections. This system focuses more on handling disconnection in synchronous systems and not
on data representations and user interfaces, while we assume asynchronous operations and focus on schema and user
interface issues.
While the system is already very promising there are a number of issues remaining to be addressed before we
have reached our full vision. First and foremost we need to create a merge user interface that can be used to merge
separate forks in the causality tree into a single database. In the face of concurrent operations it is likely that users
will make conﬂicting writes to the database. We have already begun preliminary work on this providing queries to
do a three way merge of the data in two databases within our system. Using the Avro User Interface components we

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

1675

have already built we will help the user to easily resolve conﬂicts within the system. As an additional improvement
we would also like to improve the types of widgets that we support as a native portion of application creation so that
users can easily create applications with more expressive user interfaces.
Recently there have also been a number of applications for smartphones targeted speciﬁcally at emergency response. The most famous of these is the “Fire Department” app from the San Ramon Valley Fire Protection District.
This application provides users with information about recent emergency events on a map. It also can be used to ﬁnd
the location of an automated deﬁbrillator. This application requires that the phone be connected to the internet in order
to operate properly. Such an application could be rebuilt using our approach relatively easily allowing users to share
data on recent events in an ad-hoc fashion.
Conclusions
The features available on new smartphone devices oﬀer a unique combination of mobile computation, location information, ability to install custom software, and connectivity that has never before been seen. The combination of these
features oﬀers great promise for society in general and disaster management in particular. The rise of Internet based
social networking sites shows the value of connectivity but work is needed to make the value of these kinds of systems
available when disaster strikes and centralized components and connectivity are lost. There is a need to build systems
which can operate oﬄine as well as use the variety of networking technologies available on these new devices in order
to enable hop by hop communication when centralized networking infrastructure fails. By leveraging the networking
features of these devices properly, through avoidance of centralized components, it is possible to make the power of
these devices available when disaster strikes. This will not only change the utility of the devices themselves but will
change the way organizations are formed, structure command and control, and communicate. We anticipate that this
will have far reaching eﬀects, not only for disaster management, but on society at large. However, there are signiﬁcant
policy issues which must also be addressed for this vision to become a reality and additional research is required on
how to integrate such technology into more traditional organizations which respond to disasters. With our evaluation
we have shown that we have enabled users to create appropriate disaster management applications when a disaster
strikes and to allow users to exchange collected data in arbitrary patterns.
Furthermore, we have argued that smartphones make a good client platform for disaster management systems
using urgent computing. By virtue of the fact that users are likely to carry and maintain these devices they are likely to
be available when disaster strikes. Applications which allow users to network with others before and during a disaster
will be critical to future disaster responses. However, work is needed to enable these applications to function properly
when disaster strikes. We have detailed our work in this area aimed at enabling data oriented applications which can
share their data over arbitrary networking technologies, and can handle the changing structure of data collection in
the ﬁeld. We that this system will be of value during a disaster precisely because it has utility in daily life but is easily
re-purposed to needs in a disaster. Finally, while we feel that this platform can be a good client platform for urgent
computing workloads, further work is needed to deﬁne applications which can take advantage of these resources from
a smartphone. Our work on Cuckoo has many of the desirable client features but work is needed on applications
which can take advantage of these feature.
References
[1] P. Zheng, L. Ni, Smart Phone and Next Generation Mobile Computing, Morgan Kaufmann, 2006.
[2] W. Schafer, J. Carroll, S. Haynes, Emergency Management as Collaborative Community Work, in: ECSCW 2005: Ninth European Conference on Computer-Supported Cooperative Work., 2005.
[3] E. Gomez, M. Turoﬀ, Community Crisis Response Teams: Leveraging Local Resources through ICT E-Readiness, Proceedings of the 40th
Annual Hawaii International Conference on System Sciences.
[4] J. Harrald, Agility and Discipline: Critical Success Factors for Disaster Response, The ANN ALS of the American Academy of Political and
Social Science 604 (1) (2006) 256.
[5] T. Jeﬀerson, J. Harrald, Collaborative technology: providing agility in response to extreme events, International Journal of Electronic Governance 1 (1) (2007) 79–93.
[6] A. Gachet, P. Haettenschwiler, A decentralized approach to distributed decision support systems, Journal of Decision Systems 12 (2) (2003)
141–158.
[7] M. Wheatley, Goodbye, Command and Control, Leader to Leader 5 (1997) 21–28.
[8] M. Arnold, On the phenomenology of technology: the “Janus-faces” of mobile phones, Information and Organization 13 (4) (2003) 231–256.

1676

Nicholas Palmer et al. / Procedia Computer Science 9 (2012) 1667 – 1676

[9] J. Landgren, U. Nulden, A study of emergency response work: patterns of mobile phone interaction, Proceedings of the SIGCHI conference
on Human factors in computing systems (2007) 1323–1332.
[10] D. Coyle, The role of mobiles in disasters and emergencies, Tech. rep., GSM Association (December 2005).
[11] S. Rosenbush, Tackling swamped communications, Business Week.
[12] K. Banipal, Strategic approach to disaster management: lessons learned from Hurricane Katrina, Disaster Prevention and Management 15 (3)
(2006) 484–494.
[13] U. S. C. S. B. C. to Investigate the Preparation for, R. to Hurricane Katrina, T. Davis, U. S. G. A. Oﬃce, A Failure of Initiative: Final Report
of the Select Bipartisan Committee to Investigate the Preparation for and Response to Hurricane Katrina, Govt. Printing Oﬃce, 2006.
[14] S. Farnham, E. Pedersen, R. Kirkpatrick, Observation of Katrina/Rita Groove Deployment: Addressing Social and Communication Challenges of Ephemeral Groups In Process, in: B. V. de Walle, M. Turoﬀ (Eds.), Proceedings of the 3rd International ISCRAM Conference,
2006, pp. 39–49.
[15] X. Yao, The design of a dynamic emergency response management information system (DERMIS), Annual Review of Network Management
and Security (2006) 101.
[16] B. Tatomir, L. Rothkrantz, Crisis management using mobile ad-hoc wireless networks, Proc. of Information Systems for Crisis Response and
Management ISCRAM 2005 (2005) 147–149.
[17] I. Boukalov, P. Parviainen, Wireless Application Test Bed And Simulations For Broadband Mobile Communication Systems, Master’s thesis,
Lappeenranta University Of Technology (2007).
[18] Serval, Serval project (2011) [cited 3-7-2011].
URL http://avro.apache.org
[19] D. Cavalcanti, D. Agrawal, C. Cordeiro, B. Xie, A. Kumar, Issues in integrating cellular networks WLANs, AND MANETs: a futuristic
heterogeneous wireless network, IEEE Wireless Communications Magazine 12 (3) (2005) 30–41.
[20] B. Manoj, A. Baker, Communication challenges in emergency response, Communications of the ACM 50 (3) (2007) 51–53.
[21] J. Paradiso, T. Starner, Energy Scavenging for Mobile and Wireless Electronics, IEEE PERVASIVE COMPUTING (2005) 18–27.
[22] N. Netten, M. van Someren, Automated Support for Dynamic Information Distribution in Incident Management, in: B. V. de Walle, M. Turoﬀ
(Eds.), Proceedings of the 3 International ISCRAM Conference, 2006.
[23] T. Harrison, J. Gil-Garcia, T. Pardo, F. Thompson, Learning about Interoperability for Emergency Response: Geographic Information Technologies and the World Trade Center Crisis, Proceedings of the 39th Annual Hawaii International Conference on System Sciences-Volume
04.
[24] P. B. B. Van de Walle, C. Nieuwenhuis (Eds.), Who’s Really on First? A Domain-Level User, Task and Context Analysis for Response
Technology, 2007.
[25] L. Palen, S. Liu, Citizen communications in crisis: anticipating a future of ICT-supported public participation, Proceedings of the SIGCHI
conference on Human factors in computing systems (2007) 727–736.
[26] H. Granot, Emergency inter-organizational relationships, Disaster Prevention and Management 8 (1) (1999) 21–6.
[27] M. Dorigo, V. Trianni, E. S¸ahin, R. Groß, T. Labella, G. Baldassarre, S. Nolﬁ, J. Deneubourg, F. Mondada, D. Floreano, et al., Evolving
Self-Organizing Behaviors for a Swarm-Bot, Autonomous Robots 17 (2) (2004) 223–245.
[28] K. Low, W. Leow, M. Ang Jr, Task allocation via self-organizing swarm coalitions in distributed mobile sensor network, Proc. 19th National
Conference on Artiﬁcial Intelligence (AAAI-04) (2004) 28–33.
[29] P. B. B. Van de Walle, C. Nieuwenhuis (Eds.), A Holistic Approach to Emergency Evacuation Information Support Systems, 2007.
[30] B. van der Vecht, F. Dignum, J. Meyer, M. Neef, A Dynamic Coordination Mechanism Using Adjustable Autonomy, COIN 2007@
DURHAM.
[31] A. Hughes, L. Palen, J. Sutton, S. Liu, S. Vieweg, Site-seeing in disaster: An examination of on-line social convergence, in: Proceedings of
the 5th International ISCRAM Conference, 2008.
[32] Avro, Apache avro (2011) [cited 3-7-2011].
URL http://avro.apache.org
[33] T. Lindholm, J. Kangasharju, S. Tarkoma, Syxaw: Data synchronization middleware for the mobile web, Mob. Netw. Appl. 14 (5) (2009)
661–676. doi:http://dx.doi.org/10.1007/s11036-008-0146-1.
[34] K. P. Puttaswamy, C. C. Marshall, V. Ramasubramanian, P. Stuedi, D. B. Terry, T. Wobber, Docx2go: collaborative editing of ﬁdelity reduced
documents on mobile devices, in: MobiSys ’10: Proceedings of the 8th international conference on Mobile systems, applications, and
services, ACM, New York, NY, USA, 2010, pp. 345–356. doi:http://doi.acm.org/10.1145/1814433.1814467.
[35] C. Gutwin, T. N. Graham, C. Wolfe, N. Wong, B. de Alwis, Gone but not forgotten: designing for disconnection in synchronous groupware,
in: CSCW ’10: Proceedings of the 2010 ACM conference on Computer supported cooperative work, ACM, New York, NY, USA, 2010, pp.
179–188. doi:http://doi.acm.org/10.1145/1718918.1718951.

