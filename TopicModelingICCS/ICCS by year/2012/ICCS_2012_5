Available online at www.sciencedirect.com

Procedia Computer Science 9 (2012) 812 – 821

International Conference on Computational Science, ICCS 2012

An Optimized A-MSDU Frame Aggregation with Subframe
Retransmission in IEEE 802.11n Wireless Networks
Anwar Saif, Mohamed Othman1 , Shamala K. Subramaniam, Nor Asila Wati Abdul Hamid
Department of Communication Technology and Network, Faculty of Computer Science and Information Technology, Universiti Putra Malaysia,
43400 UPM, Serdang, Selangor D.E., Malaysia.

Abstract
The IEEE 802.11n standard is deﬁned to achieve a high throughput at the MAC layer. This high throughput is
accomplished via many enhancements in both the physical and MAC layers. A key enhancement introduced in the
802.11n standard is frame aggregation. Two types of aggregation deﬁned by the 802.11n standard, aggregate MAC
service data unit (A-MSDU) and aggregate MAC protocol data unit (A-MPDU). Frame aggregation reduces both the
headers and timing overheads at the MAC layer by aggregating multiple frames into a single large frame before being
transmitted. The aggregation headers themselves still have a negative impact on the network performance especially
when aggregating frames of small payload. Moreover, the lack of partial retransmission in the A-MSDU aggregation is
behind its poor performance in error-prone channels. In this paper we proposed an optimized header A-MSDU frame
aggregation (OHA-MSDU) with subframes retransmission capability at the MSDU level. The simulation results show
the signiﬁcance of the proposed scheme, especially for applications that have a small frame size such as VoIP.
Keywords: Frame aggregation, selective retransmission, SRA-MSDU, A-MSDU, next generation networks,
802.11n.

1. Introduction
Accessing shared channels in IEEE 802.11 wireless networks is accomplished via the MAC channel access function, namely, distribution coordination function (DCF). The contention-based DCF uses control messages, frames
headers and various waiting times in order to ensure a reliable and fair frame transmission. With every frame transmission existing controls and timers produce a large overhead that consumes the channel time and limits the throughput
compared with the actual data rates even if the data rate goes into inﬁnite high [2]. The IEEE 802.11n [3] standard
introduces many enhancements at both the PHY and MAC layers in order to overcome these limitations and achieve
a throughput of more than 100 Mbps at the MAC access service point (SAP). A key enhancement in 802.11n MAC is
frame aggregation in which several frames are concatenated into a single PHY frame and then transmitted in a single
channel access. Concatenating multiple MSDUs into a single frame increases the channel utilization and improves
the MAC throughout, especially for small frames such as TCP ACK and VoIP frames. Frame aggregation not only
Email addresses: anwarsaif.ye@gmail.com (Anwar Saif), mothman@fsktm.upm.edu.my (Mohamed Othman)
author is also an associate researcher at Computational Science and Mathematical Physics Lab., Institute of Mathematical Science, UPM.

1 The

1877-0509 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.procs.2012.04.087

813

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821

Fr.
Ctrl

Dur.
/ID

AD
1

AD
2

AD
3

Seq.
Ctrl

Subframe 1

AD
4

Subframe 2

Subframe header
14B

DA
6B

QoS
Ctrl

SA
6B

HT
Ctrl

….
MSDU
0-2304B

A-MSDU

FCS

Subframe n

Padding
0-3B

length
2B

Figure 1: The A-MSDU frame structure.

reduces the transmission time for preambles and frame headers, but also reduces the waiting time during CSMA/CA
random backoff period for successive frame transmissions.
Although many aggregation proposals were introduced in early attempts, such as packing and concatenation [4],and
aggregation above the MAC layer [5], their aggregation headers are still considered large for small payloads and they
did not address the behavior under erroneous channels. Other aggregation schemes [6] [7] adopted frame fragmentation before performing the aggregation and introduced error control over these fragments. However, these schemes
attached large fragmentation headers to the actual frame for de-fragmentation at the receiver side. Moreover, large
buffers are required to enable the fragmentation/de-fragmentation processes. The IEEE 802.11n standard adopted two
aggregation schemes from TGnSYn [8] and WWiS [9] high throughput proposals for the next generation wireless
networks. These schemes are aggregate MAC service data unit (A-MSDU) and aggregate MAC protocol data unit
(A-MPDU).
The A-MSDU aggregation is performed at the higher levels of the MAC layer where the coming MSDUs are
buffered before being transmitted. The destination address (DA), source address (SA), and payload length are attached
to each MSDU in order to form the A-MSDUs subframes. In A-MSDU aggregation, the subframes that are destined to
the same receiver are concatenated in a single frame and then transmitted. The aggregation process is ended when the
size of the buffered MSDUs reaches the A-MSDU frame size or the delay of the oldest MSDU reaches the maximum
delay limit. All subframes in one A-MSDU should be of the same trafﬁc class and the DA and SA of the subframes
should correspond to the receiver address (RA) and transmitter address (TA) of the MAC header, respectively. Fig. 1
shows the structure of the A-MSDU frame. Each A-MSDU subframe consists of a subframe header, MSDU payload,
and variable padding (0-3 bytes). The subframe header maintains information about the SA, DA and the payload
length. The padding ﬁeld is necessary to keep the subframe at a multiple of four bytes for de-aggregation alignment
at the receiver side. In this aggregation scheme, if there is a corruption in any subframe of the A-MSDU frame, the
whole A-MSDU frame will be dropped. The A-MPDU frame aggregation is performed at the lower part of the MAC
layer where multiple MPDUs are combined in a single PHY protocol data unit (PPDU) frame. Since the A-MPDU
is constructed from complete MPDUs, it is possible to aggregate MPDUs of different trafﬁc identiﬁers (TIDs) and
different destination addresses. However, the A-MPDU subframes should be addressed to the same receiver address.
The A-MPDU is formed from the already available packets in the buffer, thus, no waiting time for the MPDUs to arrive
during the A-MPDU construction. The corruption of any A-MPDU subframe does not require the retransmission of
the whole A-MPDU, only the corrupted MPDUs need to be retransmitted. The structure of the A-MPDU is shown in
Fig. 2 where each A-MPDU frame consists of one or more subframes each subframe has 4 bytes delimiter, MPDU
and padding.
2. Motivation
During 802.11n development, many proposals have been introduced to overcome the 802.11 timing and headers
overheads by means of aggregating multiple frames into a single frame. Only the A-MSDU and A-MPDU aggrega-

814

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821

Figure 2: The A-MPDU frame structure.

tions were adopted by the 802.11n working group. The A-MSDU was initially designed to be simple with a small
aggregation size. It constructs the A-MSDU frame from the available frames despite their destination addresses.
Moreover, to keep the A-MSDU design simple, many functions have been avoided such as multi-casting, broadcasting, multi-trafﬁc frame aggregations , and selective retransmission over the subframes. Due to the lacks of selective
retransmission and to avoid high frame loss in erroneous channels, the A-MSDU frame was limited to a maximum of
8KB. However, A-MSDU aggregation shows an outstanding performance compared to the A-MPDU when they are
used in clear channels using the same aggregation size, especially when the aggregated subframes are small, thanks
to the small aggregation headers [1, 14]. The decent performance of the light headers A-MSDU in clear channels
motives us to study the effect of the aggregation headers themselves, optimizes the current headers, and introduces
selective retransmission over the subframes.
3. The OHA-MSDU Aggregation Scheme
Although frame aggregation provides a signiﬁcant reduction on the legacy 802.11 headers, other headers are
added in order to accomplish the aggregation and de-aggregation processes. These headers might become a source
of overhead, unless they are optimized and reduced. Due to these headers, one aggregation might be beneﬁcial for
certain MSDU sizes and becomes a bottleneck for other sizes depending on the aggregation size (number of subframes
in the aggregation). From the previous analysis, we can see that A-MSDU aggregation headers are adequate for large
MSDUs but they produce large header overheads for small MSDUs due to the attached header with every subframe.
The OHA-MSDU aggregation scheme minimizes the headers overhead by optimizing the subframes aggregation
headers. It aggregates MSDUs that have the same destination address and then maps the MAC headers to subframes
headers. It uses a common header for the shared subframes’s information. Moreover, aggregation at the MSDUs
level does not provide error control and retransmission over its subframes. The OHA-MSDU have introduced implicit
sequence control (ISC) for the subframes based on their index in the OHA-MSDU aggregation frame. The sequence
control mechanism enables the scheme to retransmit the corrupted subframes in the next subsequent retransmissions,
avoids using a sequence number with every subframe, and keeps the subframe ordering at the receiver side.
3.1. OHA-MSDU Frame Format
During the design of the OHA-MSDU we have kept the structure of the actual MAC layer unchanged, we only
used the variable payload of the MAC frame to build the aggregation. Fig. 3 shows the OHA-MSDU structure where
the ﬁrst byte of the payload is assigned for the common header (CMNhdr ) and the remaining payload is assigned for
the subframes. From now on we will use the term superframe for the aggregation frame.
The common header is a one byte ﬁeld, its ﬁrst 6 bits represent the number of subframes in the superframe, thus
64 subframes can be addressed. The Lost packet (l p), is a one bit ﬁled with a default value of 0. It is set to 1 if the
preceding superframe is dropped at the receiver due to exceeding the retransmission limit or due to lost ACK. The last
bit is reserved for future extension.

815

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821

The subframe has a maximum size of 2310 bytes and consists of three ﬁelds: the subframe header (s fhdr ), MSDU,
and subframe check sequence (s f f cs ). The MSDU has a variable size of up to the maximum 802.11 transmission unit
(2304 bytes). The aggregation size shall not exceed 7935 bytes which is deﬁned for the A-MSDU in 802.11n. The
two bytes (s f f cs ) is used to check the integrity of the subframes. Upon failure of the subframe integrity check, the
individual subframe will be marked for retransmission.
The subframe header contains the control ﬁelds that are necessary for the de-aggregation at the receiver side. The
12 bits ﬁeld is used to express the size of the MSDU in the subframe. The retry bit will inform the receiver whether
this subframe is a retransmitted subframe or not. If so, this subframe will be checked before being added to the
receiver queue (RQ) to avoid the duplication. The ﬂush bit is set when the subframe is a retransmitted subframe and
its lifetime has been expired.
Upon receiving a subframe with the ﬂush bit of 1, the receiver will ﬂush out the corresponding subframe from
the RQ that have a status ﬂag of 0. The one byte FCS is used to check the validity of the subframe header and the
signature byte is used to align the de-aggregation in case of corruption in any of the subframes. We have used the
same signature as it is deﬁned in the 802.11n speciﬁcation.
Length
(12b)

No.subframes
(6b)

MAC
Header

Retry
(1b)

Lost pkt
(1b)

Common
header (1B)

Flush
(1b)

Rsvd
(1b)

Subframe1
(2310B)

Rsvd
(2b)

FCS
(8b)

Subframe
header (4B)

Subframe2

Signature
(8b)

MSDU
(0-2304B)

…..

Subframen

FCS
(2B)

FCS
(4B)

Figure 3: The OHA-MSDU frame structure.

3.2. The OHA-MSDU Aggregation Scheme Description
The ideas behind the OHA-MSDU are to reduce the headers of the subframes and enable subframe retransmission
at the MSDU level. The MSDUs that are destined to the same destination will be aggregated and share the addresses of
the holder MPDU. Only the number of subframes, length of the MSDU, and some status ﬂags are associated with the
MSDU in order to enable the de-aggregation at the receiver side. Only the corrupted subframes will be retransmitted
and not the whole superframe as the conventional A-MSDU does.
At the sender MAC layer, the received MSDUs from the upper layer are queued in a queue called transmitting
queue (TQ). While constructing the superframe, only the MSDUs that have the same destination address as the head
of the queue will be associated with the necessary aggregation header and then appended to the superframe. The index
of the subframe in the superframe will be considered as a sequence number of that subframe and then the index ﬁled
in the TQ of the corresponding MSDU will be updated accordingly. The MSDUs in the TQ that are not involved in
the current superframe will have an index of -1.
Upon receiving the superframe at the receiver side, the de-aggregation process will start. Based on the subframe
check sequence, the subframes will be added to the RQ with a status ﬂag of 1 if received successfully or 0 otherwise.
If the RQ is full, the remaining subframes will be dropped and considered as if they were received with errors. The
bitmap acknowledgement will be constructed according to the status ﬂags of the subframes in the RQ and then sent
back to the receiver. If the correctly received subframes are in correct order, their corresponding MSDUs will be
forwarded to the upper layer and then removed from the RQ.

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821

index

0
sub0

1
sub1

2
sub2

First superframe
3
4
sub3
sub4

Receiver
5
sub5

0
1

sub2

2

sub3
sub4

3
4

sub5

5

sub6
sub7

6
7

7
sub7

CBA(11011011)

index
sub0
sub1

6
sub6

0
sub2

1
sub5

2
sub8

Second superframe
3
4
5
sub9
sub10
sub11

6
sub12

7
sub13

Update the 1st occurrence with a flag of 0

Update the 2nd occurrence with a flag of 0
CBA(11110111)

sub2
sub5

0
1

sub8
sub9

2
3

sub10

4

sub11
sub12
sub13

5
6
7

Removed /Forwarded subframes
In Queue subframes
Retransmitted subframes

Flag
sub0
sub1

1
1

sub2
sub3
sub4
sub5
sub6
sub7

0
1
1
0
1
1

sub2
sub3
sub4
sub5
sub6
sub7

0
1
1
0
1
1

sub2
sub3
sub4
sub5
sub6
sub7

1
1
1
1
1
1

sub8
sub9

1
1

sub10
sub11
sub12
sub13

0
1
1
1

Forwarded

Sender

Forwarded

816

Figure 4: The Sequence control and retransmission in the OHA-MSDU scheme.

At the sender side, the TQ will be updated according to the received bitmap. If the bit i in the bitmap is set to
1, the MSDU with index i in the TQ will be considered as received correctly and then removed, otherwise it will
be considered as lost and will be retransmitted at the head of the next superframe. The lost superframes will be
retransmitted according to the retry limits. If the retry limit is exceeded, the MSDUs in TQ that form the superframe
will be dropped and the lost packet ﬂag in the next superframe will be enabled in order to ﬂush out the subframes that
are unordered in the RQ.
3.3. Implicit Sequence Control
According to the 802.11 standard the sequence number is attached to the frame as a part of the MAC header at the
MPDU level. But such sequencing does not exist at the MSDU level. Therefore, to enable the MSDU retransmission
we have introduced the implicit sequence control based on the index of the subframe that holds the MSDU in the
current superframe. Since we can aggregate up to 64 MSDUs, the implicit sequence number will range from 0 to 63.
The subframes will be constructed from the MSDUs in the TQ and then appended to the superframe according to their
index. Similarly, the CBA bitmap will be constructed according to the index of the subframe in a way that the ith bit
of the bitmap will acknowledge the subframe of the ith index in the superframe.
In case if the channel is clear, the subframes will be forwarded to the upper layers whenever received by the
receiver and no retransmission is required. But in erroneous channels, retransmission happens frequently and the
retransmitted subframes are always put on the top of the next superframe followed by the new subframes. The
retransmitted subframes will update the RQ in a way that, if the ith retransmitted subframe is correctly received then
the ith entry in the RQ that have a status ﬂag of 0 will be updated and the MSDUs of the ordered subframes in the RQ
will be forwarded accordingly.
Thus, using the implicit sequence number along with the retransmission of the corrupted subframes at the beginning of the next superframe will ensure the ordered forwarding of the received MSDUs to the upper layers.
Fig. 4 exhibits an example of the ISC mechanism under an erroneous channel where some subframes are corrupted
in a superframe of size 8. It represents a scenario where a sender and receiver establish a transmission session in which

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821

817

Table 1: The simulation parameters

Parameter

Value

TSIFS
TDIFS
T phyhdr
Tidle
CWmin
Data Rate
Basic Rate

16 μs
34 μs
20 μs
9 μs
16
140 Mbps
54 Mbps

the sender sends a superframe of 8 subframes and waits for CBA from the receiver. The sender will retransmit the
corrupted superframe in the next superframe along with new subframes. In Figure 5, the Corrupted subframes in the
superframe are marked crossed. The subframes in the TQ that need to be retransmitted are marked with gray while the
correctly received subframes and removed from the TQ are represented with dashed subframes. In the RQ the gray
subframes represent the subframes that are received corrupted. Dashed subframes in the RQ represent the forwarded
subframes to the upper layer. The ﬁrst superframe has been received with two of its subframes are corrupted, sub2
and sub5, while only sub10 is corrupted in the retransmitted superframe.
Based on the CBA, the sender will retransmit the corrupted subframes on the top of the next superframe. If the RQ
is null, the received subframes will be appended to the RQ with their corresponding status 1 for correctly the received
subframes and 0 for the corrupted ones. The CBA will be constructed accordingly and then send back to the sender.
The sender will retransmit the corrupted subframes sub2 and sub5 on the top of the next superframe at index 0 and
index 1 respectively, followed by the new subframes sub8 to sub13.
Upon receiving the superframe, the ﬁrst subframe at index 0 will update the ﬁrst subframe in the RQ that have
a status ﬂag of 0, sub2 in this case. The second subframe at index 1 will update sub5 in the RQ. The MSDUs of
the ordered subframes will be forwarded until a subframe with a status ﬂag of 0 is met, in our case sub2 in the ﬁrst
transmission and sub10 in the second.
4. Performance Evaluation
Different simulation experiments were conducted in order to evaluate the OHA-MSDU performance. First, the
OHA-MSDU throughout is investigated under different BER and different aggregation sizes and compared with other
schemes such as, A-MSDU, A-MPDU, and AFR. Second, the capability of the OHA-MSDU on utilizing the VoIP
trafﬁc was evaluated in terms of VoIP delay requirements.
4.1. OHA-MSDU Throughput
In this section we have evaluated the throughput performance of the schemes under different channel conditions.
The channel error rate is changed from a clear channel of zero bit error rate to a noisy channel of 10−4 bit error rate.
We have set the application rate to 54 Mbps and the simulations time to 50s. The number of stations is set to only 10
in order to reduce the impact of collision on the throughput. Other simulation parameters are listed in Table 1. The
system throughput is depicted in Fig. 5 and Fig. 6 for MSDUs sizes of 128 and 1024 bytes, respectively. The ﬁgures
show the impact of the channel error on the performance of the aggregation schemes. Under high bit error rates, the
OHA-MSDU, A-MPDU, and AFR schemes still survive due to their subframes/fragments error control capabilities
while A-MSDU can barely transmit anything. Furthermore, the ﬁgures show that the large MSDUs are inﬂuenced
by the large bit error rates more than the small MSDUs. From Fig. 5 we infer that the large aggregation headers of
the A-MPDU are behind its performance degradation when aggregating small MSDUs even in clear channels. The
OHA-MSDU outperforms the other schemes in terms of throughout under different bit error rates and different MSDU
sizes. Under bit error rate of 10−5 , the OHA-MSDU improvement over A-MSDU, A-MPDU, and AFR reaches 27%,
28% and 3% respectively for MSDUs of size of 128 bytes and reaches 56%, 6%, and 7% for large MSDUs of size
1024 bytes.

818

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821
70

OHA-MSDU
A-MSDU
A-MPDU
AFR

60

Throughput[Mbps]

50
40
30
20
10
0
0

10-6

10-5

10-4

Bit Error Rate

Figure 5: Throughput vs. bit error rate, MSDU size of 128 Bytes

These results demonstrate the signiﬁcance of the OHA-MSDU scheme under different channels conditions with
different aggregation sizes. A signiﬁcant improvement becomes clear when the MSDU tends to be small, which
makes the OHA-MSDU an appropriate aggregation scheme, speciﬁcally for the trafﬁc classes that have small packet
size such as VoIP.
4.2. VoIP support
The decent performance of the OHA-MSDU under small MSDUs motives us to study the behavior of the OHAMSDU under applications that have small frame size such as VoIP. Since VoIP is one of the applications that severely
affected by the network delay, the VoIP call quality becomes worse as long as the delay becomes large.
When a voice call is established between two or more uses, if the end-to-end delay exceeds a certain amount,
the conversation becomes distorted and the users might start taking at the same time. Simulation experiments were
carried out in order to explore the maximum number of connections that can be supported by OHA-MSDU in a single
contention domain without exceeding the delay limits. In these experiments a constant UDP application was setup
according to the 802.11n requirements [24] in which the application rate is set to 96Kbps and the packet size to 120
bytes.
We adopted the Brady’s ON-OFF model [25] to simulate the VoIP calls. In this model, the voice call can be
modeled as series of talk spurts and silent. The data is generated during the ON period and no data is generated
during the OFF period. As a reference benchmark for our delay investigations and according to the 802.11n VoIP
delay requirements for single wireless domain [24], not more than 1% of the packets should experience a mouth-toear delay greater than 30 ms. Naturally, this delay includes all the delays the packet may suffer during its journey
from mouth to ear. Since our concern is on the delay that might be imposed on the packet due to the aggregation at
the MAC layer, similar percentage is used with delay not exceeding 15 ms [6]. The Aggregation size is set to only
1200 bytes since it is unwise to aggregate large number of subframes due to the VoIP application nature and the delay
requirements.
Two experiments were conducted one at highly erroneous network where the BER is set to 10−4 and the second
at a low BER of 10−6 . Three schemes were examined, OHA-MSDU, A-MPDU, and AFR. All of these schemes
have the selective subframe retransmission enabled, but they differ in the aggregation header size. Fig. 7 shows
that, even at high BER of 10−4 all the schemes can still satisfy the VoIP delay requirements for large number of
calls due to the small subframe size and the selective retransmission capabilities. Both A-MPDU and AFR fail to
satisfy the requirements at 110 connections while OHA-MSDU still survives. At this BER, the successive subframe

819

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821
100

OHA-MSDU
A-MSDU
A-MPDU
AFR

90
80

Throughput[Mbps]

70
60
50
40
30
20
10
0
0

10-6

10-5

10-4

Bit Error Rate

Figure 6: Throughput vs. bit error rate, MSDU size of 1024 Bytes

retransmission will contribute to increasing the delay of all the schemes and therefore limiting the number of calls that
can be supported. However, OHA-MSDU still scores the lowest delay percentage among the other schemes due to its
smaller header compared to the other schemes. As shown in Fig. 8, at low BER all schemes behave almost similar
and fail to satisfy the delay requirements at 120 connections with an advantage to the for the OHA-MSDU.
5. Discussion
The frame aggregation is a magniﬁcent method introduced by the 802.11n and other proposals for the next highspeed networks in order to reduce the overall headers of the legacy MAC distributed coordination function. However,
due to the diversity of the applications and their trafﬁc characteristics, the aggregation might not be beneﬁcial for some
types of applications. The Aggregation under some applications might produce large headers and frame delay. From
the headers to the data ratio point of view and based on our analysis and simulations, the aggregation of large MSDUs
is slightly effected by the headers size and this affect might be neglected for very large MSDUs. However, for small
MSDUs the issue is different, the aggregation headers will contribute to increasing the size of the transmitted frame.
To aggregate small MSDUs, the selection of the aggregation scheme and the aggregation size need to be subjected to
certain criteria depending on the trafﬁc class and delay constraints. Therefore, either we need to develop an aggregation scheme that mainly support small MSDUs or to make the existing schemes adaptive in order to dynamically
select the appropriate aggregation parameters based on the MSDU size, delay constraints, and trafﬁc classes.
Similar to other aggregation schemes, OHA-MSDU aggregation and de-aggregation processes adds some processing overhead, however this overhead is relatively small compared to the headers and timing overheads that are
diminished by the aggregation. Since our scheme re-engineers the A-MSDU aggregation, modiﬁcations to both sender
and receiver become essential. In OHA-MSDU subframes manipulation based on the received bitmap ACK is performed at the sender side while bitmap construction and addresses mapping are performed at the receiver side.
6. Conclusion
In this work we have shown the impact of the aggregation headers as well as the channel condition on the performance of different aggregation schemes. We have addressed these issues by proposing the OHA-MSDU aggregation
scheme that introduces an implicit sequence control to enable error control over the aggregated subframes and minimize the aggregation headers. The analysis and simulation results show the beneﬁts of the OHA-MSDU scheme on

820

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821
5

OHA-MSDU
A-MPDU
AFR
Percentage Limit

Delay [%]

4

3

2

1

0
10

30

50

70
No. of Stations

90

110

120

Figure 7: VoIP Delay Percentage vs. no. of Stations,High BER of 10−4

aggregating small MSDUs as well as large MSDUs with relatively small attached headers. Furthermore, the implicit
sequence control and the retransmission mechanism of the OHA-MSDU improve the system performance in erroneous channels. The OHA-MSDU shows a signiﬁcant performance when aggregating small MSDUs which makes it
an adequate aggregation mechanism for applications that have small frame size such as VoIP. In the future, the proposed scheme will be evaluated under self adapted trafﬁcs such as TCP trafﬁc as well as delay constraint applications
such as VoIP and on-line gaming.
The OHA-MSDU scheme has been tested under infrastructure wireless mode and single-hop adhoc networks.
Moreover, the scheme in its current state ﬁxes the aggregation size to 8KB and does not optimize the aggregation
size based on the network condition. Thus , testing the scheme under multi-hope wireless networks and optimizing
the aggregation size are left for future extension. Furturemore, the current OHA-MSDU design does not support
aggregation of multi-trafﬁcs since all of its subframes share the same trafﬁc identiﬁer (TID) of the common MAC
header. Additionally, our scheme co-works with the A-MPDU and does not replace it since A-MPDU has more
functions than OHA-MSDU in its current state in terms of multicasting, broadcasting and multi-trafﬁc support.
Acknowledgements
This work was supported by the Research University Grant Scheme (RUGS Number: 05/03/10/1039RU)
References
[1] Lin Yuxia and V. W. S. Wong. Wsn01-1: Frame aggregation and optimal frame size adaptation for IEEE 802.11n WLANs. In Global
Telecommunications Conference, 2006. GLOBECOM ’06. IEEE, pages 1–6, 2006.
[2] Xiao Yang and J. Rosdahl. Throughput and delay limits of ieee 802.11. 6:355–357, 2002.
[3] IEEE 802.11n standared. Part 11: Wireless LAN medium access control (MAC) and physical layer (PHY) speciﬁcations amendment 5:
Enhancements for higher throughput. IEEE Std 802.11n-2009, pages c1 –502, oct. 2009.
[4] Xiao Yang. Packing mechanisms for the IEEE 802.11n wireless LANs. In Global Telecommunications Conference, 2004. GLOBECOM ’04.
IEEE, volume 5, pages 3275–3279 Vol.5, 2004.
[5] Youngsoo Kim, Sunghyun Choi, Kyunghun Jang, and Hyosun Hwang. Throughput Enhancement of IEEE 802 . 11 WLAN via Frame
Aggregation. Electrical Engineering, pages 3030–3034, 2004.
[6] Tianji Li, Qiang Ni, David Malone, Douglas Leith, Yang Xiao, and Thierry Turletti. Aggregation With Fragment Retransmission for Very
High-Speed WLANs. IEEE/ACM Transactions on Networking, 17(2):591–604, April 2009.
[7] Alexey Sidelnikov, Jeonggyun Yu, and Sunghyun Choi. Fragmentation / Aggregation Scheme for Throughput Enhancement of IEEE 802.11n
WLAN. Network, 2002.

821

Anwar Saif et al. / Procedia Computer Science 9 (2012) 812 – 821
3

OHA-MSDU
A-MPDU
AFR
Percentage Limit

Delay [%]

2

1

0
10

30

50

70
No. of Stations

90

110

120

Figure 8: VoIP Delay Percentage vs. no. of Stations,Low BER of 10−6

[8] Syed Aon Mujtaba. TGn sync proposal technical speciﬁcation. www.tgnsync.org,IEEE 802.11-04/889r6,, May 2005.
[9] Manoneet Singh et al. Wwise proposal: High throughput extension to the 802.11 standard. IEEE 802.11-04/886r6, 2005.
[10] P. Barsocchi, G. Oligeri, and F. Potorti. Frame error model in rural wi-ﬁ networks. In Modeling and Optimization in Mobile, Ad Hoc and
Wireless Networks and Workshops, 2007. WiOpt 2007. 5th International Symposium on, pages 1 –6, 2007.
[11] S. Mangold, S. Choi, and N. Esseling. An error model for radio transmissions of wireless LANs at 5ghz. volume 0, pages 209–214, Aachen,
Germany, Sep 2001.
[12] Jun Yin, Xiaodong Wang, and Dharma P Agrawal. Optimal Packet Size in Error-prone Channel for IEEE 802.11 Distributed Coordination
Function *. Communications Society, pages 0–5, 2004.
[13] Yuxia Lin and Vincent W S Wong. Frame Aggregation and Optimal Frame Size Adaptation for IEEE 802 . 11n WLANs. Communications
Society, pages 5–10, 2006.
[14] Byung Soo Kim, Ho Young Hwang, and Dan Keun Sung. Effect of frame aggregation on the throughput performance of IEEE 802.11n. In
Wireless Communications and Networking Conference, 2008. WCNC 2008. IEEE, pages 1740 –1744, 312008-April 2008.
[15] Boris Ginzburg and Alex Kesselman. Performance analysis of A-MPDU and A-MSDU aggregation in IEEE 802.11n. 2007 IEEE Sarnoff
Symposium, pages 1–5, April 2007.
[16] Chih-Yu Wang and Hung-Yu Wei. IEEE 802.11n MAC Enhancement and Performance Evaluation. Mobile Networks and Applications,
14(6):760–771, January 2009.
[17] Sinha Rishi, Papadopoulos Christos, and Heidemann John. Internet packet size distributions: Some observations. Technical Report ISI-TR2007-643,USC/Information Sciences Institute, October 2007. Orignally released October 2005.
[18] Qiang Ni, Tianji Li, Thierry Turletti, and Yang Xiao. Saturation throughput analysis of error-prone 802.11 wireless networks. Wirel. Commun.
Mob. Comput., 5(8):945–956, 2005.
[19] Tianji Li, Qiang Ni, and Yang Xiao. Investigation of the block ACK scheme in wireless ad hoc networks. Wirel. Commun. Mob. Comput.,
6(6):877–888, 2006.
[20] G. Bianchi. Performance analysis of the IEEE 802.11 distributed coordination function. Selected Areas in Communications, IEEE Journal
on, 18(3):535 –547, March 2000.
[21] Haitao Wu, Yong Peng, Keping Long, Shiduan Cheng, and Jian Ma. Performance of reliable transport protocol over IEEE 802.11 wireless
lan: analysis and enhancement. In INFOCOM 2002. Twenty-First Annual Joint Conference of the IEEE Computer and Communications
Societies. Proceedings. IEEE, volume 2, pages 599 – 607 vol.2, 2002.
[22] Thomas J. Cover T. Elements of Information Theory. John Wiley & Sons,, 1991.
[23] NS2. http://www.isi.edu/nsnam/ns/.
[24] A. P. Stephens, B. Bjerke, B. Jechoux, H. Bonneville,P. Feinberg, et. al. ”IEEE p802.11 wireless LANs: Usage models”,. IEEE 802.1103/802r23, May 2004.
[25] Paul T. Brady. A model for generating on-off speech patterns in two-way conversation. Bell System Technical Journal, vol. 48, pp. 2245–2272,
Sept. 1969.

