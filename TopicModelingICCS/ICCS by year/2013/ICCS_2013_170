Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1068 – 1076

International Conference on Computational Science, ICCS 2013

Isogeometric Analysis of Coupled Thermo-Mechanical
Phase-Field Models for Shape Memory Alloys
Using Distributed Computing
R. Dhotea,c , H. Gomezb , R. Melnikc , J. Zua
a Department

of Mechanical and Industrial Engineering, University of Toronto,
5 King’s College Road, Toronto, ON, M5S3G8, Canada
b Department of Applied Mathematics, University of A Coru˜
na, Spain
c M2 NeT Laboratory, Wilfrid Laurier University, Waterloo, ON, N2L3C5, Canada

Abstract
A variational formulation and numerical implementation of the phase-ﬁeld models for shape memory alloys using distributed
computing are reported in the paper. The numerical implementation is based on the isogeometric analysis framework, constituting the rich NURBS basis functions. The phase ﬁeld models are developed using the strain based order parameter and the
Ginzburg-Landau theory. The fourth order fully coupled thermo-mechanical 2D and 3D models are solved with the isogeometric ﬁnite element methodology in the distributed computing environment. The weak scaling performance studies on the 2D
model demonstrate current challenges and open a way for future improvements.
Keywords: Isogeometric analysis ; martensitic transformations ; phase-ﬁeld model; Ginzburg-Landau theory; nonlinear
thermo-elasticity; distributed computing

1. Introduction
Shape memory alloys (SMAs) are a prime example of materials exhibiting multiscale and multiphysics behaviors. Upon thermal and mechanical loadings, the atoms rearrange from a highly symmetric crystal lattice to its
lower symmetric counterpart, giving rise to macroscale phenomena like shape memory eﬀect and superelasticity.
¨
Although the ﬁrst SMA material was discovered in 1932 (by Olander
in Au-Cd alloy [1]), up until today their
mathematical modeling remains a challenging task in science and engineering. The main reasons behind that are
the inherent coupling between thermal and mechanical (structural) physics and the martensitic phase transformations. Coupling eﬀects are diﬃcult to treat numerically and the resulting complex problem is often reduced to a
simple formulation, at the expense of details leading to physical considerations away from reality.
Several modeling approaches have been developed over the last years to capture the behavior of SMAs observed experimentally. Extensive discussions of corresponding models are given in the review papers [2, 3, 4].
∗ Rakesh Dhote. Tel.: +1-416-946-3709 ; fax: +1-416-978-7753.
E-mail address: rakesh.dhote@mail.utoronto.ca.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.272

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

1069

Speciﬁcally, the phase-ﬁeld (PF) models are of particular interest here. The PF models provide a uniﬁed framework that can describe stress and temperature induced phase transformations, including their dynamics, in the
variational settings. These models have been used to study microstructures and mechanical properties of SMAs
across diﬀerent length scales [5, 6, 7, 8, 9, 10, 11]. We have developed the 2D and 3D models with main focus
on capturing the thermo-mechanical coupling in SMAs, which has been treated predominantly under isothermal
assumptions in the literature [8, 9].
The strain based PF model formulation leads to fourth-order partial diﬀerential equations (PDEs) in space
by introducing a smoothly varying interface between diﬀerent phases in a domain. Numerical methodologies
such as ﬁnite diﬀerence, ﬁnite volume, and spectral methods have been traditionally used in this ﬁeld for solving higher order PDEs [9, 12]. These methodologies have been mostly applied to simple geometries. However,
for the real world SMA applications [1], a more geometrically ﬂexible technology needs to be utilized. A ﬁnite element method (FEM) is an eﬀective choice to meet this requirement. In the literature, the FEM has been
used to solve the second order PDEs, where the continuity requirements on the trial functions can be reduced to
global C 0 -continuity. For the fourth-order PDEs, the basis functions need to be piecewise smooth and globally
C 1 -continuous [13]. The ﬁnite elements constructed from the class of global C 1 -continuous basis functions are
referred as C 1 -elements. There are limited ﬁnite elements which possess C 1 -continuity on complex geometries
[14]. Recently, Hughes et al. [13] introduced a new ﬁnite element methodology known as the isogeometric analysis (IGA). IGA employs the complex non-uniform rational B-spline (NURBS) based geometry in a ﬁnite element
analysis application directly. IGA oﬀers unique advantages in solving problems involving higher-order PDEs such
as higher order accuracy, robustness, two- and three- dimensional geometric ﬂexibility, compact support, and C 1
or higher-order continuity. The IGA methodology has been successfully applied to obtain the solutions to a number of important problems (e.g. the higher-order PDEs in [15, 14], among others). In this paper, we propose the
IGA method to solve the developed 2D and 3D phase-ﬁeld models. To the best of our knowledge, we are using
the IGA method for the ﬁrst time to solve the 3D PF models for SMAs. These models are too complex (having
highly nonlinear hysteretic behavior [16], strong thermo-mechanical coupling, and fourth-order diﬀerential terms
in a space), to solve on a regular workstation. We use the distributed computing environment for the numerical
solutions.
In the following sections, we ﬁrst describe the development of phase-ﬁeld models based on the non-convex free
energy functional, followed by the numerical implementation using isogeometric analysis. Later, the numerical
experiments using the developed models in the distributed computing environment are described followed by the
simulation results.
2. Phase-Field Models of SMA Dynamics
The SMAs have temperature dependent microstructure phases. The material exists in the symmetric phase
(austenite) above the transition temperature θm and low temperature phases (martensites) below θm . This behavior
can be described by using the Landau theory of phase-transformations in terms of polynomial expansion of order
parameter (OP; OP is introduced to distinguish diﬀerent phases in a domain) expressed as the non-convex free
energy functional. The minima of the free energy correspond to stable or meta-stable phases in SMAs. The
domain wall between martensites is introduced via the Ginzburg term. A generalized form of the free energy
functional F is written as
F = Fnop + Fop + Fgradient ,

(1)

where Fop is the energy part due to the OPs, which contributes to MT as per the Landau-Devonshire theory, Fnop
is the energy part due to the elastic energy, and Fgradient is the gradient energy which contributes to the energy cost
required for maintaining diﬀerent phase domains in a structure and interface formed between physical boundaries
and domain. The gradient energy term (or the Ginzburg energy) maintains a non-zero width in austenite-martensite
and martensite-martensite interfaces, and prevents the system from creating an inﬁnite number of interfaces [17].
The free energy functional components of the 2D model are

1070

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

Fnop2D

=

Fop2D

=

Fgradient2D

=

a21 2 a23 2
e +
e,
2 1
2 6
a22 2 a24 4 a26 6
τe −
e +
e,
2 2
4 2
6 2
kg 2
∇e ,
2 2

(2)

and for the 3D model they are
Fnop3D

=

Fop3D

=

Fgradient3D

=

2
a31
a36 2
e1 − E0 (e22 + e23 ) +
e + e25 + e26 ,
2
2 4
a32 2
a33
a34 2
τ(e2 + e23 ) +
e3 (e23 − 3e22 ) +
(e + e23 )2 ,
2
2
2 2
kg
(∇e2 )2 + (∇e3 )2 ,
2

(3)

where ai j , E0 , kg are the material parameters and τ is the rescaled temperature coeﬃcient as a function of
transition temperature θm . The ei are the strain components following the Voigt’s notation deﬁned using the
Cauchy-Lagrange strain tensor e with ei j = ∂ui /∂x j + ∂u j /∂xi /2 (using the repeated index convention) and
u = {ui }|i=1,2,3 are the displacements along x, y, and z direction, respectively. The dissipational functional R is
deﬁned as
R=

η
2

n

e˙ 2i ,

(4)

i=1

where η is the dissipation coeﬃcient.
The coupled equations of dynamic thermoelasticity are derived following the governing equations of momentum and internal energy [11] as
u˙ = v,

(5)

ρ˙v = ∇ · σ + ∇ · σ + σ g + f,
ρ˙e − σT : (∇v) + ∇ · q = g,

(6)
(7)

where ρ is the mass density, f , and g are the mechanical and thermal loadings. The stress tensors σ , dissipational
stress tensors σ , and gradient components of stress σ g are deﬁned as
σ=

∂
Fnop + Fop ,
∂ei j

σ =

∂R
,
∂˙ei j

σg =

∂
Fgradient .
∂ei j

(8)

The two-way thermo-mechanical coupling is established between equations (5)-(7) via temperature θ, strain,
and strain rate. We convert the governing equations into the non-dimensional form and solve them numerically
using isogeometric analysis.
3. Isogeometric Analysis
We ﬁrst convert the system of the governing equations into the weak formulation. The domain is discretized
using C 1 -continuous functions required for the fourth-order PDEs [13, 15]. The generalized-α method is used for
time integration along with an adaptive time stepping scheme developed by the authors of [15].

1071

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

3.1. Weak Formulation
Let Ω ⊂ Rd be an open set in the d-dimensional space (d = 2,3). The boundary is denoted by Γ and its outward
normal by n. The weak formulation of Eqs. (5)-(7) is derived by multiplying the equations with weighing funcU , V , Θ} and transforming them by using the integration by parts. Let X denote both the trial solution and
tions {U
weighting function spaces, which are assumed to be identical. Initially, we consider periodic boundary conditions
in all directions. Let (·, ·)Ω denote the L2 inner product with respect to the domain Ω. The variational formulation
is stated as follows:
Find solution S = {u, v, θ} ∈ X such that ∀W = {U, V, Θ} ∈ X :
B(W, S) = 0,

(9)

with
B(W, S)

=

U,

∂u
∂t

Ω

+ V, ρ

∂v
∂t

Ω

∂θ
∂t

+ Θ, cv

Ω

− (U, v)Ω

+ (∇V, σ)Ω + (∇V, ηv)Ω − (V, f )Ω + V, σg
+ (∇Θ, κ∇θ)Ω − (Θ, g)Ω − (χd )Ω ,

Ω

(10)

where cv , κ are the material constants, and the weak coupling terms (χd )Ω for the d-dimensional space are deﬁned
as
(χ2 )Ω
(χ3 )Ω

θ ∂e2
,
e2
θm ∂t
∂v1 ∂u2 ∂u3
∂u1
∂v2 ∂u1 ∂u3
∂u2
= Θ, Ξθ
+
−2
+
+
−2
∂x ∂y
∂z
∂x
∂y ∂x
∂z
∂y
∂u3
∂v3 ∂u1 ∂u2
+
−2
,
+
∂z ∂x
∂y
∂z

= Θ, a2

(11)

(12)

where a2 and Ξ are the constants.
3.2. Semi-Discrete Formulation
The semi-discrete formulation is used for solving the coupled dynamic thermo-mechanical Eqs. (9). The space
is discretized using the Galerkin ﬁnite element scheme and time is treated as continuous. We approximate Eqs.
(9) by the following variational problem over the ﬁnite element spaces (denoted by superscript h):
Find Sh = {uh , vh , θh } ∈ X h ⊂ X such that ∀W h = {Uh , V h , Θh } ∈ X h ⊂ X :
B(W h , Sh ) = 0,

(13)

with W h and Sh deﬁned as
nb

U h , V h , Θh },
W h = {U

nb

Uh =

U A NA ,
A=1
nb

S h = {uuh , v h , θh },

uh =

u A NA ,
A=1

nb

Vh =

V A NA ,

Θh =

A=1
nb

vh =

v A NA ,
A=1

ΘA NA ,

(14)

θA NA .

(15)

A=1
nb

θh =
A=1

where NA ’s are the basis functions, and nb is the dimension of the discrete space. The NURBS basis functions
with C 1 -continuity are used [13].
4. Distributed Computing
We describe the implementation details of the IGA code, cluster conﬁguration, and weak performance scaling
studies in the following subsections.

1072

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

4.1. IGA Code Implementation
The models described by Eqs. (9) have highly nonlinear hysteretic behavior, strong thermo-mechanical coupling, and fourth-order diﬀerential terms in a space. These equations are not trivial to solve, especially in the 3D
case, to solve on a regular workstation. We have used the distributed computing environment for the numerical
simulations. In this work, we have applied the isogeometric analysis framework originally developed by Prof.
T. Hughes’ group at the Institute for Computational Engineering and Science, University of Texas at Austin, by
adapting a publicly distributed NURBS code [18]. The code is written in the Fortran programming language
(FORTRAN 90). We presented preliminary results for the 2D model using the IGA and serial processing in our
paper [19]. Here, we present the numerical implementation of the 2D and 3D IGA models using the distributed
computing environment. In this implementation, the IGA codes use a multiple instruction, multiple data (MIMD)
architecture. The domain decomposition technique is employed in the distributed computing. The domain is decomposed spatially into smaller subdomains using a separate Matlab script as shown in Fig. 1. Major subroutines
that are essential to the SMA thermo-mechanical physics in SMAs have been modiﬁed. One of the important considerations in solving fourth-order PDEs, with C 1 continuity in the basis functions, is an eﬃcient communication
of additional information data on the boundaries between neighboring processors (shown with blue color lines in
Fig. 1).



	















Fig. 1. (Color online) Schematic of domain decomposition used in the distributed computing environment. Additional data is passed (shown
in blue color lines) along with the interprocessor communication data (shown in black color lines) and boundary condition data (shown in red
color lines) to maintain C 1 continuity of the basis function in the neighboring processors.

4.2. Cluster Conﬁguration
All the simulations have been performed on the high-performance clusters of the Sharcnet computational
facilities in Canada. More speciﬁcally, the simulations have been carried out on the Saw cluster (with each node
having two 4-core Intel E5440 Quad Core Processors (2.83GH, 4 GB + 8GB FBD PC2-5300 Memory, and 120
GB of local storage) with InﬁniBand 4X DDR running Linux CentOS release 6.3). The simulations have been
performed utilizing full nodes and the performance data is collected.
4.3. Weak Scaling Performance Studies
We performed the weak scaling test with each MPI (message passing interface) task on a tile of spatial dimension 16 nm × 16 nm for the 2D model. The geometry is chosen such that it conﬁrms the multiple of 8n
processors, where node n is chosen as n = 1, 2, 3, 4 and 8 for the MPI studies. The serial study is performed on
1 processor. Each tile is discretized using two diﬀerent meshes with (a) 128 (16384 elements, 33800 global and
18 local basis functions) and (b) 144 (20736 elements, 42632 global and 18 local basis functions) second order
univariate NURBS basis functions in each direction. Figure 2 shows the performance data of the 2D model for
100 time steps using ﬁxed time step and periodic boundary conditions with increasing number of processors (or
MPI tasks). We access the parallelization performance using the eﬃciency η and speedup S deﬁned as
η(n) =

1 T REF Gn
× 100,
n T n GREF

S (n) =

T REF Gn
,
T n GREF

(16)

1073

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

where T REF is the wall clock time on REF processing cores (in all the simulations REF = 1), and T n is the wall
clock time on n cores, GREF and Gn are the numbers of global basis functions in the REF and n processing cores,
respectively [20].
The plot in Fig. 2(a) indicates that the wall clock time is almost constant beyond 1 node (8 processors) which
is also reﬂected in the eﬃciency plot in Fig. 2(b). The eﬃciency drops signiﬁcantly to around 55 % and 45 %
using mesh tile with 128, and 144 basis functions, respectively. The steepest drop is due to several reduction
operations used in the code which is evident from Fig. 3 (b). Fig.2(c) shows the speedup for two diﬀerent
meshes. Fig. 3(a) shows the breakdown of the computational and MPI communication time using mesh with
128 basis functions solved on two nodes with 8 processors each. The code spends 60.7 % time in MPI calls
and Fig. 3(b) indicates the reason for stabilizing the eﬃciency around 55 % for mesh with 128 NURBS basis
functions. The MPI ALLREDUCE calls consume 83.36 % of MPI time. As the MPI ALLREDUCE is a call
blocking communication, all the processors wait for the statement to execute, thus leading to active waiting. In
the overall simulation, the maximum workload imbalance of 10.9 s has been observed. There is an opportunity
to improve the computational eﬃciency by changing the code implementation, which is being investigated. We
note that the poor scaling found in our results has nothing to do with the IGA technology itself, but is a result of
our particular implementation. Excellent scalings for IGA algorithms have been achieved by using the concept of
B´ezier extraction [21] or PETSc-based implementations (see PetIGA [22]).
10

80

4000

60

Speedup

5000

3000

10

1

40

2000

1000
0

2

100

η

Wall clock time (s)

6000

20
Mesh 128
Mesh 144
10

20
30
40
50
Number of processors

60

70

0
0

Ideal
Mesh 128
Mesh 144
10

20
30
40
50
Number of processors

60

70

10 0
10

(b) Eﬃciency η

(a) Wall clock time

Ideal
Mesh 128
Mesh 144

0

1

10
Number of processors

10

2

(c) Speedup

Fig. 2. Weak scaling performance data for the 2D model on the Sharcnet’s Saw cluster using mesh tiles with 128 and 144 NURBS basis
functions (processors (node) used during the simulations are 8(1), 16(2), 24(3), 32(4), and 64(5)).

Initialization
(0.04 %)

Other MPI calls
(16.64 %)

Compute
(39.26 %)

MPI
(60.7 %)

MPI_ALLREDUCE
(83.36 %)
(a)

(b)

Fig. 3. (Color online) Overall percentage breakdown of (a) diﬀerent times (initialization, computation and MPI), and (b) MPI time during
weak scaling performance simulation using 16 processors on two full nodes with mesh tile having 128 NURBS basis functions.

1074

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

5. Numerical Simulations and Results
We present results of numerical simulations using the developed models based on the IGA. The numerical
simulations have been performed on the domain Ωd (with d = 2,3). The IGA is capable of representing any arbitrary complex geometry; however as a proof of concept, we use simple geometries in the 2D and 3D models.
Here we mainly focus on the cubic-to-tetragonal phase transformations in the Fe70 Pd30 material, which is gaining
more attention due to its thermal, mechanical, and magnetic coupling and biocompatibile properties [23, 24, 25].
The material parameters for Fe70 Pd30 can be found in [8, 11], and [26]. For serial processing, we have recently
presented the mesh convergence study results for the 2D model in [19]. Here, we solve the 2D and 3D models in
the distributed computing environment under diﬀerent initial and boundary conditions. The NURBS can be used
to model and discretize a complex geometry, however all the simulations here have been performed by employing
a uniform mesh composed of C 1 -continuous quadratic elements.

5.1. 2D Model
The 2D simulations have been conducted on a square domain with 100 nm side. The microstructure is evolved
starting from an initial displacement seed ( in dimensionless unit) in the centre of the domain (xc , yc ) deﬁned as
u10 = exp−(x−xc ) ×10 × exp−(y−yc ) ×10 ×10−3 ,
2

3

2

3

u20 = −u10 ,

and initial temperature θ0 = 250 K. All the sides of the domain are constrained in the structural degrees of
freedom. The simulations have been performed on 16 processors (with 4 processors in the X and Y directions).
The microstructure has been allowed to evolve for suﬃciently long time by minimizing the energy till it no longer
evolves. Fig. 4(a) shows the stabilized microstructure (deviatoric strain e2 ). The two variants of martensite (shown
in red and blue colors) are self-accommodated by aligning domain walls diagonally. The self-accommodation of
martensites is in agreement with the model results in the literature (e.g. [9]).
5.2. 3D Model
The 3D simulations have been carried out under the fully periodic boundary conditions on a cube with 80 nm
side. The microstructure has been evolved starting from random initial conditions and initial temperature θ0 = 240
K. The simulations have been performed on 64 processors (4 processors in each direction). Fig. 4(b) shows
the microstructure (deviatoric strain e2 ) at 1400 time step. The simulation results show that the accommodated
martensitic microstructures are in agreement with known results obtained with other models [27, 26, 10]. We have
used the adaptive time stepping scheme during the microstructure evolution [11, 19]. As mentioned earlier, the
distributed computing code uses several reduction operations, and it is being modiﬁed to improve the characteristic
performance.
6. Conclusions
The coupled non-linear thermo-mechanical models for SMAs have been developed by using the GinzburgLandau theory and variational framework. The developed models have been numerically solved based on the
IGA. It has been shown on several examples that the microstructure evolution is in agreement with known results
from the literature. The weak scaling performance studies indicate a pronounced decrease in the eﬃciency above
8 MPI tasks due to increased communication overhead in the 2D model. These studies demonstrate current
computational challenges and open a way for future improvements.
Acknowledgments
RD, RM, and JZ have been supported by the NSERC and CRC program (RM), Canada. This work was made
possible with the facilities of the Shared Hierarchical Academic Research Computing Network SHARCNET:
www.sharcnet.ca) and Compute/Calcul Canada.

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

(a)

1075

(b)

Fig. 4. (Color online) Evolved microstructures (deviatoric strain e2 ) in FePd specimens using the developed (a) 2D , and (b) 3D phase-ﬁeld
models at 3000, and 1400 time step, respectively.

References
[1] K. Otsuka, C. Wayman, Shape memory materials, Cambridge University Press, New York, 1998.
[2] E. Patoor, D. Lagoudas, P. Entchev, L. Brinson, X. Gao, Shape memory alloys, Part I: General properties and modeling of single crystals,
Mechanics of Materials 38 (5) (2006) 391–429.
[3] D. Lagoudas, L. Brinson, E. Patoor, Shape memory alloys, Part II: Modeling of polycrystals, Mech. Mater. 38 (5-6) (2006) 430–462.
[4] A. Khandelwal, V. Buravalla, Models for Shape Memory Alloy Behavior: An overview of modelling approaches, International Journal
of Structural Changes in Solids - Mechanics and Applications 1 (1) (2009) 111–148.
[5] F. Falk, Model free energy, mechanics, and thermodynamics of shape memory alloys, Acta Metallurgica 28 (12) (1980) 1773–1780.
[6] R. Melnik, A. Roberts, K. A. Thomas, Computing dynamics of Copper-based SMA via center manifold reduction models, Computational
Material Science 18 (2000) 255–268.
[7] T. Lookman, S. R. Shenoy, K. Rasmussen, A. Saxena, A. R. Bishop, Ferroelastic dynamics and strain compatibility, Phys. Rev. B
Condens. Matter. Mater. Phys. 67 (2) (2003) 24114.
[8] R. Ahluwalia, T. Lookman, A. Saxena, Dynamic Strain Loading of Cubic to Tetragonal Martensites, MRS Bull. 54 (2006) 2109–2120.
[9] M. Bouville, R. Ahluwalia, Microstructure and Mechanical Properties of Constrained Shape Memory Alloy Nanograins and Nanowires,
Acta Mater. 56 (14) (2008) 3558–3567.
[10] A. Idesman, J. Cho, V. Levitas, Finite Element Modeling of Dynamics of Martensitic Phase Transitions, Appl. Phys. Lett. 93 (4) (2008)
043102.
[11] R. Dhote, R. Melnik, J. Zu, Dynamic thermo-mechanical coupling and size eﬀects in ﬁnite shape memory alloy nanostructures, Computational Materials Science 63 (2012) 105–117.
[12] L. Wang, R. Melnik, Modifying Macroscale Variant Combinations in a Two-Dimensional Structure using Mechanical Loadings during
Thermally Induced Transformation, Mater. Sci. Eng. A Struct. Mater. 481-482 (2008) 190–193.
[13] C. Austin, T. Hughes, Y. Bazilevs, Isogeometric Analysis: Toward Integration of CAD and FEA, John Wiley & Sons., 2009.
[14] H. Gomez, T. J. Hughes, X. Nogueira, V. M. Calo, Isogeometric analysis of the isothermal Navier-Strokes-Korteweg equations, Computer
Methods in Applied Mechanics and Engineering 199 (25-28) (2010) 1828–1840.
[15] H. Gomez, V. Calo, Y. Bazilevs, T. Hughes, Isogeometric analysis of the Cahn-Hillard phase-ﬁeld model, Computer Methods in Applied
Mechanics and Engineering 197 (49-50) (2008) 4333–4352.
[16] R. Dhote, M. Fabrizio, R. Melnik, J. Zu, Hysteresis Phenomena in Shape Memory Alloys by Non-Isothermal Ginzburg-Landau Models,
Communications in Nonlinear Science and Numerical Simulation, doi: http://dx.doi.org/10.1016/j.cnsns.2013.01.015.
[17] C. Carstensen, On the computational of crystalline microstructure, Acta Numerica 5 (1996) 191256.
[18] NURBS code, http://users/ices.utexas.edu/∼evans/isogeometric.zip.
[19] R. Dhote, H. Gomez, R. Melnik, J. Zu, Phase ﬁeld dynamic modelling of shape memory alloys based on isogeometric analysis, Advances
in Science and Technology 78 (2013) 63–68.
[20] D. Valdez-Balderas, J. M. Dom´ınguez, B. D. Rogers, A. J. Crespo, Towards accelerating smoothed particle hydrodynamics simulations for free-surface ﬂows on multi-GPU clusters, Journal of Parallel and Distributed Computing (article in pressdoi:http://dx.doi.org/10.1016/j.jpdc.2012.07.010.
[21] M. A. Scott, M. J. Borden, C. V. Verhoosel, T. W. Sederberg, T. J. R. Hughes, Isogeometric ﬁnite element data structures based on b´ezier
extraction of t-splines, International Journal for Numerical Methods in Engineering 88 (2) (2011) 126–156.

1076

R. Dhote et al. / Procedia Computer Science 18 (2013) 1068 – 1076

[22] PetIGA, https://bitbucket.org/dalcinl/petiga/.
[23] Y. Ma, M. Zink, S. Mayr, Biocompatibility of single crystalline FePd ferromagnetic shape memory ﬁlms, Applied Physics Letters 96
(2010) 213703.
ˇ zek Roˇzman, D. Peˇcko, S. Sturm,
ˇ
[24] K. Zuˇ
U. Maver, P. Nadrah, M. Bele, S. Kobe, Electrochemical synthesis and characterization of
Fe70 Pd30 nanotubes for drug-delivery applications, Materials Chemistry and Physics 133 (1) (2012) 218–224.
[25] C. Bechtold, A. Lotnyk, B. Erkartal, L. Kienle, E. Quandt, Structural Characterization of Sputtered Fe70 Pd30 Thin Films During Ex Situ
and In Situ TEM Heating, Advanced Engineering Materials 14 (8) (2012) 716–723.
[26] R. Ahluwalia, T. Lookman, A. Saxena, S. Shenoy, Pattern formation in ferroelastic transitions, Phase Transitions 77 (5-7) (2004) 457–
467.
[27] A. Jacobs, S. Curnoe, R. Desai, Simulations of cubic-tetragonal ferroelastics, Physical Review B 68 (22) (2003) 1–7.

