Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 50 – 59

International Conference on Computational Science, ICCS 2013

Immunological-based approach for accurate ﬁtting of 3D noisy
data points with B´ezier surfaces
Akemi G´alveza , Andr´es Iglesiasa,b,∗, Andreina Avilaa
a Department

of Applied Mathematics and Computational Sciences, University of Cantabria, E.T.S.I. Caminos, Canales y Puertos, Avda. de
los Castros, s/n, E-39005, Santander, Spain
of Information Sciences, Faculty of Sciences, Toho University, 2-2-1 Miyama, 274-8510, Funabashi, Japan

b Department

Abstract
Free-form parametric surfaces are common tools nowadays in many applied ﬁelds, such as Computer-Aided Design & Manufacturing (CAD/CAM), virtual reality, medical imaging, and many others. A typical problem in this setting is to ﬁt surfaces to
3D noisy data points obtained through either laser scanning or other digitizing methods, so that the real data from a physical
object are transformed back into a fully usable digital model. In this context, the present paper describes an immunologicalbased approach to perform this process accurately by using the classical free-form B´ezier surfaces. Our method applies a
powerful bio-inspired paradigm called Artiﬁcial Immune Systems (AIS), which is receiving increasing attention from the scientiﬁc community during the last few years because of its appealing computational features. The AIS can be understood as
a computational methodology based upon metaphors of the biological immune system of humans and other mammals. As
such, there is not one but several AIS algorithms. In this chapter we focus on the clonal selection algorithm (CSA), which
explicitly takes into account the aﬃnity maturation of the immune response. The paper describes how the CSA algorithm can
be eﬀectively applied to the accurate ﬁtting of 3D noisy data points with B´ezier surfaces. To this aim, the problem to be solved
as well as the main steps of our solving method are described in detail. Some simple yet illustrative examples show the good
performance of our approach. Our method is conceptually simple to understand, easy to implement, and very general, since
no assumption is made on the set of data points or on the underlying function beyond its continuity. As a consequence, it
can be successfully applied even under challenging situations, such as the absence of any kind of information regarding the
underlying function of data.
Keywords: Data ﬁtting; B´ezier surfaces; immunological approach; artiﬁcial immune systems; reverse engineering

1. Introduction
In several domains such as computer aided-design and manufacturing (CAD/CAM), data usually come from
real measurements of an existing geometric entity, as it typically happens in the construction of car bodies, ship
hulls, airplane fuselage and other free-form objects [2, 9, 11, 13, 14, 20, 21, 27, 28]. It also appears in the
shoes industry, in archeology (reconstruction of archeological assets), in medicine (computer tomography) and
many others. The primary goal is to convert the real data from a physical object into a fully usable digital model, a
process called reverse engineering. This allows signiﬁcant savings in terms of storage capacity and processing and
∗ Corresponding

author. Tel.: +34-942-202-062 ; fax: +34-942-201-703.
E-mail address: iglesias@unican.es.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.168

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

manufacturing time. Furthermore, the digital models are easier and cheaper to modify than their real counterparts,
and are available anytime and anywhere. These data points are usually acquired through laser scanning and other
digitizing methods and are, therefore, subjected to some measurement noise and other artifacts. Consequently, a
good ﬁtting of data is generally based on approximation schemes rather than on interpolation. This is also the
approach taken in this work.
The usual models for data ﬁtting in CAD/CAM and other industrial ﬁelds are free-form parametric entities,
such as B´ezier, B-spline and NURBS, and best approximation methods make commonly use of least-squares
techniques [2, 12, 25, 26, 28, 29, 30]. In this paper we focus particularly in the case of B´ezier surfaces, where
the goal is to obtain the control points of the approximating surface that ﬁts the data points better in the leastsquares sense. This problem is far from being trivial: because the surface is parametric, we are confronted with
the problem of obtaining a suitable parameterization of the data points [8, 26]. As remarked in [1], the selection
of an appropriate parameterization is essential for a good ﬁtting.
Some recent papers have shown that the application of Artiﬁcial Intelligence (AI) techniques can achieve
remarkable results regarding this parameterization problem [9, 17, 18, 19, 20, 21, 24]. Most of these methods rely
on some kind of neural networks, such as standard neural networks [17] and Kohonen’s SOM (Self-Organizing
Maps) nets [18, 19]. In the case of surfaces, the network is used exclusively to order the data and create a grid of
control vertices with quadrilateral topology [19]. After this preprocessing step, any standard surface reconstruction
method has to be applied. The generalization of these techniques to the (more general) functional networks is
analyzed in [3, 9, 20, 21, 22, 23]. The work in [10] describes the application of genetic algorithms and functional
networks to this problem. Other papers reporting pretty good results for data ﬁtting with free-form curves are given
in [29, 30] for genetic algorithms (GA), in [12] for particle swarm optimization (PSO), in [31] for estimation of
distribution algorithms, and in [16] for artiﬁcial immune systems. These works have been extended to the case
of free-form polynomial surfaces in [13] by using genetic algorithms iteratively, then in [14] to free-form rational
surfaces through particle swarm optimization, and ﬁnally in [15] to surfaces in manufacturing by using a hybrid
GA-PSO approach.
Our strategy for tackling the problem also belongs to this group of AI techniques. In this paper we analyze
the application of a powerful bio-inspired paradigm called Artiﬁcial Immune Systems (AIS), which is receiving
increasing attention from the scientiﬁc community during the last few years because of its appealing computational
features [4]. The AIS can be understood as a computational methodology based upon metaphors of the biological
immune system of humans and other mammals. As such, there is not one but several AIS algorithms. In this paper
we focus on the clonal selection algorithm (CSA), which explicitly takes into account the aﬃnity maturation of the
immune response. This algorithm is applied to to the accurate ﬁtting of 3D noisy data points with B´ezier surfaces.
The structure of this chapter is as follows: in Section 2 we provide a gentle overview about the artiﬁcial
immune systems and their main features and advantages. The section also describes the fundamentals of the
clonal selection algorithm in detail. Section 3 introduces the problem to be addressed along with the proposed
method to solve it. Then, some simple yet illustrative examples of its application along with some implementation
details are reported in Section 4. The paper closes with the main conclusions of this contribution and our plans for
future work in the ﬁeld.
2. Artiﬁcial Immune Systems
In recent years there has been an increasing interest in the development of new computational algorithms for
optimization inspired in biological systems. Amongst them, the Artiﬁcial Immune Systems (AIS) are receiving
attention from the scientiﬁc community because of their ability to solve complex optimization problems in several
ﬁelds. Roughly speaking, AIS are a group of computationally intelligent systems inspired by the principles and
processes that typically happen at the level of the immune system of humans and other vertebrate.
The immune system is a complex network composed of specialized cells, tissues and organs and is responsible
for protecting the organism against diseases caused by pathogenic agents. It is comprised of two distinct parts:
the innate immune system and the adaptive immune system. The former is responsible for powerful immediate
but non-speciﬁc defenses that prevent or limit infections by most pathogenic microorganisms, called antigens and
represented in this paper as Ag. If pathogens successfully evade the innate response, there is a second layer of

51

52

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

protection, the adaptive immune system, which is activated by the innate response. The adaptive immune system
uses somatically generated antigen receptors. The general design of the adaptive immune response is based upon
the clonal selection of lymphocytes expressing receptors with particular speciﬁcities. Through this second line of
defense, the immune system adapts its response during an infection to improve its recognition of the pathogen.
This improved response is preserved even after the pathogen has been eliminated so that any future attack of this
pathogen ﬁnds a much faster and stronger answer over the time. In other words, the adaptive immune system has
some kind of immunological memory, a valuable feature that can be extended to AIS.
There are also some other properties of the immune system of potential interest for computer scientists and
engineers [5]:
• uniqueness: each individual possesses its own immune system, with its particular features and vulnerabilities;
• recognition of foreigners: the molecules that are not native to the body are recognized and eliminated by the
immune system;
• anomaly detection: the immune system can detect and react to pathogens that the body has never encountered before;
• distributed detection: the cells of the system are distributed all over the body and, most importantly, are not
subject to any centralized control;
• imperfect detection: an absolute recognition of the pathogens is not required, hence the system is ﬂexible;
• reinforcement learning and memory: the system can “learn” the structures of pathogens, so that future
responses to the same pathogens are faster and stronger.
2.1. The clonal selection algorithm
In 2000, De Castro and Von Zuben [5, 6, 7] proposed the Clonal Selection Algorithm (CSA), an AIS method
based on the clonal selection principle, a widely accepted theory used to explain the basic features of an adaptive
immune response to an antigenic stimulus. When we are exposed to an Ag, our immune system responds by
producing antibodies (represented by Ab onwards). Ab’s are molecules attached primarily to the surface of B
cells whose aim is to recognize and bind to Ag’s. Each B cell secretes a single type of Ab, which is relatively
speciﬁc for the Ag. Under the clonal selection theory, only those cells that recognize the antigens are selected to
proliferate. The selected cells are subject to an aﬃnity maturation process, which improves their aﬃnity to the
selective Ag’s over the time.
In the immune system, the learning process involves raising the relative population size and aﬃnity of those
lymphocytes that have been valuable in recognizing a given Ag. For practical problems, it is convenient to keep
a small set of best individuals rather than using a large number of candidate solutions. A clone will be created
temporarily and those progenies with low aﬃnity will be discarded. Typically, an organism would be expected
to encounter a given Ag repeatedly during its lifetime. The initial exposure to an Ag that stimulates an adaptive
immune response is handled by a small number of low-aﬃnity B cells, each producing an Ab type of diﬀerent
aﬃnity. The eﬀectiveness of the immune response to secondary encounters is enhanced considerably by the
presence of memory cells associated with the ﬁrst infection, capable of producing high-aﬃnity Ab’s just after
subsequent encounters.
Ab’s in a memory response have, on average, a higher aﬃnity than those of the early primary response. This
phenomenon, which is restricted to T-cell-dependent responses, is referred to as the maturation of the immune
response. This maturation requires the Ag-binding sites of the Ab molecules to be structurally diﬀerent from
those present in the primary response. Then, random changes (mutation) are introduced into the genes responsible
for the Ag-Ab interactions, leading occasionally to an increase in the aﬃnity of the Ab. A rapid accumulation
of mutations is necessary for a fast maturation of the immune response, even although most of the changes lead
to poorer Ab’s. Indeed, when a B cell recognizes an antigen, it is stimulated to divide (or proliferate). During
proliferation, the B cell receptor locus undergoes an extremely high rate of somatic mutation that is at least ﬁve
or six orders of magnitude greater than the normal rate of mutation across the genome. This process, referred
to as somatic hypermutation (SHM), is regulated by the fact that cells with low-aﬃnity receptors may be further
mutated and die if they do not improve their clone size or antigenic aﬃnity, while in cells with high-aﬃnity Ab
receptors, hypermutation may become gradually inactive.

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

Fig. 1. Flow chart of the clonal selection algorithm as described in [5, 7] for pattern recognition purposes.

Fig. 1 shows the ﬂowchart of the original clonal selection algorithm, as described in [5, 7]. The algorithm
considers two repertoires (populations): a set of antigens Ag{M} and a set of antibodies Ab{N} . For the sake of
clarity, cardinality is indicated by the subindexes within brackets. The latter is further divided into two subsets:
memory Ab repertoire Ab{m} and remaining Ab repertoire Ab{r} , such that m + r = N. We also keep track of two
other sets: the set Ab{n} of the n Ab’s with the highest aﬃnities to a given Ag, and the set Ab{d} of the d new Ab’s
that will replace the low-aﬃnity Ab’s from Ab{r} . The algorithm can be summarized as follows:
1. Random choice of an antigen Ag j . It is presented to all antibodies of Ab{N} .
2. Compute the vector aﬃnity F = (F1 , F2 , . . . , F N ) where Fi = A f (Abi , Ag j ).
3. Select the n highest aﬃnity components of F to generate Ab{n} .
4. Elements of Ab{n} will be cloned adaptively. The number of clones is proportional to the aﬃnity: the higher
n
β.N
where Nc
round
the aﬃnity, the higher the number of clones. Such amount is given by: Nc =
h
h=1
represents the number of clones, β is a positive number that plays the role of a multiplying factor, N is the
total number of Ab’s and round(.) is the operator that rounds its argument toward the closest integer.
5. The clones in the set resulting from the previous step are subjected to somatic hypermutation. The aﬃnity
maturation rate is inversely proportional to the antigenic aﬃnity: the higher the aﬃnity, the smaller the
maturation rate.
6. Compute the vector aﬃnity of Ag j with respect to the new matured clones.
7. From this set of matured clones, select the one with the highest aﬃnity to be candidate to enter into the set
Ab{n} . If A f (Abk , Ag j ) > A f (Abl , Ag j ) for a given Abl ∈ Ab{n} , then Abk will replace Abl .
8. Replace the d Ab’s with lowest aﬃnity in Ab{r} by new individuals, inserted into Ab{r} .
Each execution of the previous steps for all given Ag’s is called a generation. The algorithm is repeated for a
certain number of generations, Ngen , a parameter that depends on the speciﬁc problem under analysis. This algorithm has proved to be very well suited for optimization problems, having been successfully applied to problems
such as character recognition and multimodal optimization with very good performance.

53

54

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

3. Our Method
We assume that the reader is familiar with the main concepts of free-form parametric surfaces [8]. A free-form
parametric B´ezier surface of degree (m,n) is deﬁned as:
m

n

S(u, v) =

n
Pi, j Bm
i (u)B j (v)

(1)

i=0 j=0

where Pi, j are vector coeﬃcients in R3 (usually referred to as the control points), Bdk (t) are the Bernstein polynomials of index k and degree d, given by:
Bdk (t) =

d k
t (1 − t)d−k
k

where
d
d!
,
=
k! (d − k)!
k
and u, v are the surface parameters, deﬁned on the ﬁnite interval [0, 1]. Note that in this paper vectors are denoted
in bold. By convention, 0! = 00 = 1.
Let us suppose that we are given a set of data points {Qi, j }i=1,...,M; j=1,...,N . The goal is to obtain the B´ezier
parametric surface S(u, v) that ﬁts the data points better in the discrete least-squares sense. To do so, we have to
compute the control points of the approximating surface by minimizing the least-squares error, E, deﬁned as the
sum of squares of the residuals:
M

N

E=
i=1 i=1

⎛
⎜⎜⎜
⎜⎜⎜Qi, j −
⎝

m

n

i=0 j=0

⎞2
⎟⎟

⎟⎟
n
Pi, j Bm
⎟⎠
i (ui )B j (v j )⎟

(2)

where we need to obtain the parametric values (ui , v j ) to be associated with each data point Qi, j . Due to the fact
n
that the blending functions Bm
i (u) and B j (v) are nonlinear in u and v respectively, the least-squares minimization
of the errors is a strongly nonlinear problem, with a high number of unknowns for large sets of data points, a case
that happens very often in practice. Our strategy for solving the problem in the general case consists of applying
the CSA methodology to determine suitable parameter values for the data points, and then calculating the best
least-squares ﬁtting coeﬃcients. To this purpose, the aﬃnity measure function corresponds to the evaluation of
the least-squares function, given by Eq. (2). Similarly, in our formulation each antibody represents a potential
solution of the problem.
However, in order to apply the clonal selection algorithm to our problem, some modiﬁcations on the original
CSA are needed. First of all, the original CSA algorithm was intended for supervised problems, where the target
solution is already known a priori, as it happens, for instance, in pattern-recognition problems. Clearly, this is not
our case, since no information about the approximating surface is known in advance. On the other hand, there is
no need to maintain the subset of memory Ab’s, since no speciﬁc Ag has to be recognized (note that our problem
is an example of unsupervised learning, as we do not know the optimal solution for this problem a priori). Finally,
several Ab’s with high aﬃnity are selected in step 7 of our algorithm, rather than just a single one, with the eﬀect
of increasing the convergence rate.
With these modiﬁcations, the CSA algorithm can now be applied to our problem. However, before searching
a solution to the problem, some control parameters should be set up. These control parameters are:
•
•
•
•
•
•

the number of control points for each parametric direction u and v, given by m and n, respectively
the total number of antibodies, Nab ,
the number of antibodies, d, to be replaced in Ab{d} ,
the number of antibodies to be cloned, nbest ,
the number of clones for the selected antibodies, Nc ,
the somatic hypermutation rate, and

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

• the number of iterations (generations), Niter .
These parameters are selected empirically. To this aim, we perform a number of executions for diﬀerent values
of the parameters and then, select the best ones to be used in our ﬁnal experiments, as reported in next section.
After the selection of those parameters, the CSA is executed for the prescribed number of iterations. The process
is performed iteratively while the evolution of the parameters does not stabilize the minimization of the error. The
antibody with the best (i.e., minimum) aﬃnity value is selected as the best solution to the problem.
4. Experimental results
This section discusses the performance of our CSA-based method described above through three simple yet
illustrative examples. Many other examples have also been tested with excellent results in all cases. They are not
reported here, however, because of limitations of space.
First example corresponds to a set of 2500 data points arranged in a matrix of 50 × 50 elements. They are
ﬁtted by using a B´ezier surface of degree (m, n) = (3, 3). The other parameters are as follows: Nab = 100, d = 10,
nbest = 10, and Niter = 3. The number of clones was taken proportionally to the aﬃnity measure, such that the
antibodies with better aﬃnity would yield more clones. In particular, we select 60 clones for the antibody with the
best aﬃnity, 40 clones for the second best, 20 clones for the third best and 10 for the other ones. The total number
of clones thus becomes Nc = 190. These clones then undergo real-valued somatic hypermutation at a rate that is
inversely proportional to the aﬃnity.
Our results for these parameter values are depicted in Figure 2, where the original data points are displayed
on the left as small red spheres whereas the reconstructed surface is displayed on the right. Note from Fig. 2(left)
that our data points are noisy. This implies that, even with an initial choice of 50 × 50 data points, they are not
perfectly aligned on iso-parametric lines; therefore, the strategy of computing approximating B´ezier curves for the
iso-parametric lines is not applicable here. Instead, we focus on the set of data points as a whole and seek for the
approximating surface in the sense of least-squares overall. Note also how the method yields an approximating
surface that reproduces the shape of the cloud of data points with high visual quality. In fact, we got a RMSE
ﬁtting error of 7.83 × 10−4 for this example, indicating that the reconstructed B´ezier surface ﬁts the data points
with high accuracy.

Fig. 2. Applying the clonal selection algorithm to B´ezier surface ﬁtting of data in Example 1: (left) Original data points; (right) approximating
B´ezier surface of degree (3, 3).

Second example consists of a set of 3600 data points obtained from a explicit algebraic surface of equation
z = x3 − 3xy2 , usually known as the monkey saddle surface. This surface has an isolated umbilical point with zero
Gaussian curvature at the origin, and several changes of curvature accounting for three depressions. This makes it
a very good candidate to evaluate the behavior of our approach. To check the robustness of our method against the
noise, the initial data points have been perturbed by an additive uniform random noise of mean 0 and variances
σ x = 0.15, σy = 0.15, and σz = 0.6 for the three coordinates, respectively. The perturbed data points are then

55

56

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

ﬁtted by using a B´ezier surface of degree (m, n) = (4, 4). The other parameters are similar to those used in the
previous example and, hence, are not reported here to avoid unnecessary duplication of material.
Our results for this example are depicted in Figure 3. The ﬁgure on the left shows the original data points
displayed as red emptied diamonds whereas the ﬁgure on the right shows the reconstructed B´ezier surface. Once
again, we obtained an excellent matching between the original data points and the reconstructed points from the
approximating surface. In this case we obtained a RMSE ﬁtting error of 3.39 × 10−3. From it, we conclude that the
reconstructed B´ezier surface ﬁts the data points extremely well. We also computed the mathematical properties of
the ﬁtting surface and found that it exhibits the same properties as the original surface at the origin. In particular,
we also obtained the umbilical point of zero Gaussian curvature at that point. Besides, that point is not a saddle
point, because it does not behave as a minimum and/or maximum for diﬀerent section planes through the origin
(i.e. sections of equation y = k.x, k ∈ R), but as an inﬂection point instead. This behavior is also observed in
the reconstructed surface, meaning that our approach is amazingly reliable in capturing these subtle details of
the original surface. Despite of the fact that the original explicit algebraic surface is approximated by a freeform parametric surface, we obtained similar analytical results for the approximating surface (the corresponding
calculations are out of the scope of this paper and are, therefore, not included here for brevity). From this, we also
conclude that the approximating surface is a very good model of the original one.

Fig. 3. Applying the clonal selection algorithm to B´ezier surface ﬁtting of data in Example 2: (left) Original data points; (right) approximating
B´ezier surface of degree (4, 4).

The two previous examples have a similar complexity and sampling rate at both parametric directions. Our
last example is aimed at checking the behavior of our method when this condition no longer applies. Now, we
consider a set of 2400 data points arranged in a matrix of 40 × 60 elements. These data points are obtained from
a surface exhibiting a qualitatively diﬀerent behavior for diﬀerent parametric directions, therefore, requiring a
diﬀerent degree for each direction for an optimal ﬁtting of data. In particular, we consider a B´ezier surface ﬁtting
of degree (m, n) = (5, 7). The other parameters of the method are similar to those of previous examples.
Figure 4 shows our results: on the left, we display the original data points as small red spheres; on the right,
the reconstructed B´ezier ﬁtting surface is displayed. A simple visual inspection of the surface shows that it has
a complicated shape, with several valleys and hills and very oscillating surface boundaries. Still, similarly to the
previous examples, we also obtain an excellent matching between the original and the reconstructed data points,
with a RMSE ﬁtting error of 5.26 × 10−4 . This shows that our method is able to yield a very good ﬁtting surface
even in the cases of surfaces with asymmetric behavior along diﬀerent parametric directions.
4.1. Implementation details
All computations in this paper have been performed on a 2.4 GHz. Intel Core 2 Duo processor with 4 GB. of
RAM. The source code has been implemented by the authors in the native programming language of the popular

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

Fig. 4. Applying the clonal selection algorithm to B´ezier surface ﬁtting of data in Example 3: (left) Original data points; (right) approximating
B´ezier surface of degree (5, 7).

scientiﬁc program Matlab, version 2010b. In our opinion, Matlab is a very suitable tool for this task: it is fast
and provides reliable, well-tested routines for eﬃcient matrix manipulations. It also contains a bulk of resources
regarding the solving of systems of equations. In this paper, Matlab has been primarily used since it provides
the best numerical answer in the sense of least-squares for those cases in which the exact solution of the systems
of equations is not possible. To this purpose, Matlab provides us with the command mldivide to solve the
least-squares equation for our resulting over-determined systems.
Regarding the computation times, they obviously depend on many factors, such as the degree of the approximating surface, the size of the sets of data points, the noise intensity and the selection of parameters for the
method, making it hard to determine in advance how long does it take for given example to be obtained. However,
in our trials we found our method to be very aﬀordable in terms of CPU times: all simulations in this paper took
less than 30 seconds to be obtained.
5. Conclusions and Future Work
This paper addresses the problem of obtaining a good ﬁtting surface to a given set of 3D noisy data points. This
problem arises very often in many industrial environments such as in reverse engineering for CAD/CAM. In this
paper, input data points are ﬁtted by using a B´ezier surface of a given degree, a problem far from being trivial as
soon as no parameterization of data points is assumed a priori. In our approach the parameterization is computed
by using a popular bio-inspired methodology called artiﬁcial immune systems. Rather than a single method itself,
AIS is a computational paradigm supporting diﬀerent techniques inspired by the behavior of the biological immune
system of humans and other vertebrate. In this work, we focus on the clonal selection algorithm, arguably the most
popular AIS approach. This algorithm is applied to determine the B´ezier surface that ﬁts the given data points
better in the least-squares sense. The method is discussed through its application to three illustrative examples.
Our experimental results show that the method is able to yield an extremely accurate ﬁtting of data points in all
cases. Furthermore, this high accuracy does not come at the price of large computation times. In fact, from our
experiments we found that our method is very competitive regarding the CPU time, although not well suited for
real-time computations.
Our future work includes the extension of this method to other families of parametric surfaces, such as the
B-splines and NURBS, where the existence of additional parameters (such as knots and weights) can modify our
procedure signiﬁcantly. We also would like to carry out a detailed theoretical analysis about some important issues
related to our approach, such as the convergence of the method and the parameter tuning. The application of this
method to some interesting real-world problems in industrial settings (such as blending, oﬀsetting, and surface
intersection) is also part of our plans for future work. Finally, we are also interested in the hybridization of this
method with other optimization strategies in order to further improve the general performance of the method and
the computation times.

57

58

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59

Acknowledgements
This research has been kindly supported by the Computer Science National Program of the Spanish Ministry
of Economy and Competitiveness, Project Ref. #TIN2012-30768, and the University of Cantabria (Santander,
Spain). This work has been done during the sabbatical stay of second author at Toho University (Funabashi,
Japan), whose academic support has been very valuable to produce this paper. We would also like to thank the
three anonymous reviewers for their encouraging comments which helped us to improve the ﬁrst version of the
paper.
References
[1] J. Barhak, A. Fischer, Parameterization and reconstruction from 3D scattered points based on neural network and PDE techniques. IEEE
Transactions on Visualization and Computer Graphics 7(1) (2001) 1.
[2] R. E. Barnhill, Geometric Processing for Design and Manufacturing, SIAM, Philadelphia, 1992.
[3] E. Castillo, A. Iglesias, Some characterizations of families of surfaces using functional equations. ACM Transactions on Graphics 16(3)
(1997) 296.
[4] L. N. De Castro, J. Timmis, Artiﬁcial Immune Systems: A New Computational Intelligence Approach. Springer-Verlag, London, 2002.
[5] L. N. De Castro, F. J. Von Zuben, Artiﬁcial Immune Systems: Part I - Basic Theory and Applications. Technical Report-RT DCA 01/99
(1999).
[6] L. N. De Castro, F. J. Von Zuben, The clonal selection algorithm with engineering applications. In: Proceedings of GECCO00, Workshop
on Artiﬁcial Immune Systems and their Applications, Las Vegas, USA, (2000) 36.
[7] L. N. De Castro, F. J. Von Zuben, Learning and optimization using the clonal selection principle. EEE Transactions on Evolutionary
Computation 6(3) (2002) 239.
[8] G. Farin, Curves and surfaces for CAGD (5th ed.). Morgan Kaufmann, San Francisco, 2002.
[9] G. Echevarr´ıa, A. Iglesias, A. G´alvez, Extending neural networks for B-spline surface reconstruction. Lectures Notes in Computer
Science 2330 (2002) 305.
[10] A. G´alvez, A. Iglesias, A. Cobo, J. Puig-Pey, J. Espinola, B´ezier curve and surface ﬁtting of 3D point clouds through genetic algorithms,
functional networks and least-squares approximation. Lectures Notes in Computer Science 4706 (2007) 680.
[11] A. G´alvez, A. Cobo, J. Puig-Pey, A. Iglesias, Particle swarm optimization for B´ezier surface reconstruction. Lectures Notes in Computer
Science 5102 (2008) 116.
[12] A. G´alvez, A. Iglesias, Eﬃcient particle swarm optimization approach for data ﬁtting with free knot B-splines. Computer-Aided Design
43 (12) (2011) 1683.
[13] A. G´alvez, A. Iglesias, J. Puig-Pey, Iterative two-step genetic-algorithm method for eﬃcient polynomial B-spline surface reconstruction.
Information Sciences 182(1) (2012) 56.
[14] A. G´alvez, A. Iglesias, Particle swarm optimization for non-uniform rational B-spline surface reconstruction from clouds of 3D data
points. Information Sciences 192(1) (2012) 174.
[15] A. G´alvez, A. Iglesias, A new iterative mutually-coupled hybrid GA-PSO approach for curve ﬁtting in manufacturing. Applied Soft
Computing 13(3) (2013) 1491.
[16] A. G´alvez, A. Iglesias, A. Avila, Discrete B´ezier curve ﬁtting with artiﬁcial immune systems. Studies in Computational Intelligence 441
(2013) 59.
[17] P. Gu, X. Yan, Neural network approach to the reconstruction of free-form surfaces for reverse engineering. Computer-Aided Design
27(1) (1995) 59.
[18] M. Hoﬀmann, L. Varady, Free-form surfaces for scattered data by neural networks. J. Geometry and Graphics 2 (1998) 1.
[19] M. Hoﬀmann, Numerical control of Kohonen neural network for scattered data approximation. Numerical Algorithms 39, (2005) 175.
[20] A. Iglesias, A. G´alvez, A new artiﬁcial intelligence paradigm for computer aided geometric design. Lectures Notes in Artiﬁcial Intelligence 1930 (2001) 200.
[21] A. Iglesias, G. Echevarr´ıa, A. G´alvez, Functional networks for B-spline surface reconstruction. Future Generation Computer Systems
20(8) (2004) 1337.
[22] A. Iglesias, A. G´alvez, Applying functional networks to ﬁt data points rom B-spline surfaces. In: Proceedings of the Computer Graphics
International, CGI’2001, Hong-Kong (China). IEEE Computer Society Press, Los Alamitos, California (2001) 329.
[23] A. Iglesias, A. G´alvez, Curve ﬁtting with RBS functional networks. In: Proc. of International Conference on Convergence Information
Technology-ICCIT’2008 - Busan (Korea). IEEE Computer Society Press, Los Alamitos, California, 1 (2008) 299.
[24] G. K. Knopf, J. Kofman, Free-form surface reconstruction using Bernstein basis function networks. In: C. H. Dagli et al. (Eds.):
Intelligent Engineering Systems Through Artiﬁcial Neural Networks. Vol. 9, ASME Press (1999) 797.
[25] W. Y. Ma, J. P. Kruth, Parameterization of randomly measured points for least squares ﬁtting of B-spline curves and surfaces. ComputerAided Design 27(9) (1995) 663.
[26] L. Piegl, W. Tiller, The NURBS Book, Springer Verlag, Berlin Heidelberg, 1997.
[27] H. Pottmann, S. Leopoldseder, M. Hofer, T. Steiner, W. Wang, Industrial geometry: recent advances and applications in CAD. ComputerAided Design 37 (2005) 751.
[28] T. Varady, R. Martin, Reverse engineering. In: G. Farin, J. Hoschek, M. Kim (eds.): Handbook of Computer Aided Geometric Design.
Elsevier Science, 2002.
[29] F. Yoshimoto, M. Moriyama, T. Harada, Automatic knot placement by a genetic algorithm for data ﬁtting with a spline. Proc. of Shape
Modeling International’99, IEEE Computer Society Press (1999) 162.

Akemi Gálvez et al. / Procedia Computer Science 18 (2013) 50 – 59
[30] F. Yoshimoto T. Harada, Y. Yoshimoto, Data ﬁtting with a spline using a real-coded algorithm. Computer-Aided Design 35 (2003) 751.
[31] X. Zhao, C. Zhang, B. Yang, P. Li, Adaptive knot adjustment using a GMM-based continuous optimization algorithm in B-spline curve
approximation. Computer Aided Design 43 (2011) 598.

59

