Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1969 – 1978

International Conference on Computational Science, ICCS 2013

Issues Related to Parameter Estimation in Model Accuracy
Assessment
Thomas C. Henderson∗, Narong Boonsirisumpun
University of Utah, Salt Lake City, Utah, USA

Abstract
Model Accuracy Assessment (MAA) is an important part of the modern veriﬁcation and validation process. This involves
not only evaluation of a validation metric comparing experimental versus simulation system response quantities, but also the
determination of the adequacy of the model for its intended use (see [1] for a detailed description). We describe here some
issues related to the use of parameter estimation on MAA in the study of heat ﬂow in a 2D metal plate. We consider seven
parameter estimation techniques, and show that various factors such as length of sampling time, parameter estimation method,
etc. impact the MAA. The ultimate goal is to improve MAA techniques in aircraft structural health care monitoring using
Bayesian Computational Sensor Networks.
2013 The
The Authors.
Authors. Published
Publishedby
byElsevier
Elsevier B.V.
B.V. Open access under CC BY-NC-ND license.
©c 2013
Selection and
and/or
under
responsibility
the Scientiﬁc
Program
Committee Conference
of the International
conference on
Selection
peerpeer-review
review under
responsibility
of theoforganizers
of the
2013 International
on Computational
Science
Computational Science (ICCE 2013).
Keywords: Model Accuracy Assessment, Validation, Parameter Estimation, Prediction

1. Introduction
The major speciﬁc objectives of our work are to:
1. Develop Bayesian Computational Sensor Networks (BCSN) which detect and identify structural damage.
We aim to quantify physical phenomena and sensor models; e.g., develop piezoelectric and other computational models to reconstruct physical phenomena and characterize uncertainties due to environmental
factors.
2. Develop an active feedback methodology using model-based sampling regimes (rates, locations and types
of data) realized with embedded sensors and active sensor placement. This will allow on-line sensor model
validation, and the use of on-demand complimentary sensors.
3. Develop a rigorous model-based systematic treatment of the following uncertainty models: (1) stochastic
uncertainties of system states, (2) unknown model parameters, (3) dynamic parameters of sensor nodes, and
(4) material damage assessments (viewed as source input parameters).
∗ T.C. Henderson. Tel.: +1-801-581-3601 ; fax: +1-801-581-5843 .
E-mail address: narong.boonsirisumpun@utah.edu (N. Boonsirisumpun), tch@utah.cs.edu (T.C. Henderson).

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.366

1970

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978

Fig. 1. Model Accuracy Assessment (based on Fig. 12.4 from [1]).

This work addresses 3 of the 4 DDDAS (Dynamic Data-Driven Analysis Systems) interdisciplinary research components: applications modeling, advances in mathematics and statistical algorithms, and application measurement
systems and methods, and more speciﬁcally addresses several questions raised in the DDDAS-InfoSymbiotics
2010 Report [2] by Working Group 3 (WG3) Large and Heterogeneous Data from Distributed Measurement &
Control Systems (Alok Chaturvedi, Adrian Sandhu): ”DDDAS inherently involves large amounts of data that can
result from heterogeneous and distributed sources which require analysis before automatically integrating them to
the executing applications that need to use the data.”
The incorporation of eﬃcient and scalable probabilistic methods into model-based simultaneous state estimation and parameter identiﬁcation may have a large impact on the exploitation of spatially distributed sensing
and computation systems throughout a wide range of scientiﬁc domains. Spatially distributed physical phenomena such as temperature, wave propagation, etc., require observation with dynamically located sensors in order to
achieve better tuned computational models and simulations. Methods developed here allow for online validation of
models through direct sensor observation. Signiﬁcant problems which must be overcome include the interpolation
between measurement data, as well as the estimation of quantities which cannot be directly measured (e.g., thermal diﬀusivity coeﬃcients). The demonstration of how stochastic partial diﬀerential equations can be used to this
end should have strong impact on practice in many applications, including the aircraft Structural Health Monitoring (SHM) problem. Our major goal is to provide rigorous Bayesian Computational Sensor Networks to quantify
uncertainty in (1) model-based state estimates incorporating sensor data, (2) model parameters (e.g., diﬀusivity
coeﬃcients), (3) sensor node model parameter values (e.g., location, bias), and input source properties (e.g., locations and extent of cracks). This is achieved in terms of extensions to our recently developed techniques (see
[3, 4, 5]). We call this approach Bayesian Computational Sensor Networks (BCSN). These decentralized methods
have low computational complexity and perform Bayesian estimation in general distributed measurement systems
(i.e., sensor networks). A model of the dynamic behavior and distribution of the underlying physical phenomenon
is used to obtain a continuous form from the discrete time and space samples provided by a sensor network. Others have recently begun to explore the Bayesian approach for computational simulation [6, 7, 8]. For example,
Tinsley [9, 10] proposes ”the systematic treatment of model and data uncertainties and their propagation through a
computational model to produce predictions of quantities of interest with quantiﬁed uncertainty.” The approach is
applied to tumor modeling and analysis. Another related work is that of Furukawa [11] who takes location uncertainty into account when localizing defects and ”formulates the uncertainties of sensor states stemming from both
motion and measurement and allows stochastic identiﬁcation of defects using recursive Bayesian estimation.”
The ﬁrst step in our project is to extend to 2D the existing 1D Bayesian Computational Sensor Networks
approach to heat ﬂow and establish the adequacy of the approach on a simpler problem than ultrasound. Here we

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978

1971

describe the impact of parameter estimation on MAA in this context. Figure 1 shows the validation, calibration
and prediction process as described by Oberkampf [1]. Experiments are used to establish parameters in the
computational model, and these in turn aﬀect the result of the validation metric. Both simulation experiments and
physical experiments are used to help with experiment design as well as to inform the computational modeling
process. When studying parameter estimation methods in simulation experiments, implicit methods are used to
represent the phenomenon, whereas an explicit method is used in the method (e.g., EKF update formulas are
based on the explicit time step function at each location). These simulation experiments provide information
as to the feasibility and truncation error aﬀects of the explicit method based computational model. Here we
perform a comparison of seven parameter estimation approaches (Inverse method, LLS, MLE, EKF, Particle Filter,
Levenberg-Marquardt, Minimum RMS error) to estimate the value of thermal diﬀusivity (k) in heat ﬂow in a 2D
plate. The comparison is made in terms of the adequacy requirements. The major question raised is whether the
statistics produced by the parameter estimation techniques can be used to characterize the adequacy of the model.
Secondary questions include: (1) Which method gives the best k estimate? (2) Which is least sensitive to noise?
and (3) Which method has lowest time complexity?
2. Method
The 2D heat conduction equation is given as:
δ2 T δ2 T
δT
= k( 2 + 2 )
δt
δx
δy

(1)

where T is temperature, t is time, δx, δy are space in x,y respectively and k is thermal diﬀusivity. We use the
explicit method that has a forward ﬁnite diﬀerence to approximate the time derivative
t+1
t
T x,y
− T x,y
δT
=
δt
Δt
The second derivative in space is represented by the 2D Laplacian:

(2)

t
t
t
t
t
t
− 2T x,y
+ T x+1,y
− 2T x,y
+ T x,y+1
T x−1,y
T x,y−1
δ2 T δ2 T
+ 2 =
+
δx2
δy
Δx2
Δy2

(3)

Substituting equations (2) and (3) into (1), we have,
t+1
t
T x,y
− T x,y

Δt

= k(

t
t
t
T x−1,y
− 2T x,y
+ T x+1,y

Δx2

+

t
t
t
− 2T x,y
+ T x,y+1
T x,y−1

Δy2

)

(4)

The truncation error for this is [1]:
T Eh (T ) = [

1 ∂2 T
−k ∂4 T
]Δt + [
](Δx)2 + O(Δt2 , Δx4 )
2
2 ∂t
12 ∂x4

or T E = O(Δt, Δx2 ) where h characterizes convergence (i.e., h = ΔxΔxre f = ΔtΔtre f so that when h → 0, then Δx, Δt → 0
at the same rate). From Equation (4) the value of k at each location (x, y) is
k=

t+1
t
T x,y
− T x,y

Δt(

t
t
t
T x−1,y
−2T x,y
+T x+1,y

Δx2

+

t
t
t
T x,y−1
−2T x,y
+T x,y+1

Δy2

(5)
)

When Δx2 = Δy2 , this is rewritten as:
k=

t+1
t
− T x,y
)
Δx2 (T x,y
t
t
t
t
t
Δt(T x−1,y
+ T x+1,y
+ T x,y−1
+ T x,y+1
− 4T x,y
)

(6)

From Equation (6), we can calculate the value of k at every spatial location (x, y) and every time step (t) but it
gives a wide range of k values with high variance. Thus, we use the average value of k over the entire set of inverse
calculations. We also compare the accuracy, noise sensitivity and time eﬃciency of the methods.

1972

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978

2.1. Inverse method
The ﬁrst estimation method we study is what we call the Inverse method which solves for the value of k at
each (x, y) from (6) and then ﬁnds the average of all k values. This method estimates a global k value as the mean
of the local k values.
k x,y,t
kest =
N
where x, y is the location, t is time step (t = 2...max t) and N is number of k values.
2.2. LLS (Linear Least Squares)
The second estimation method we used is LLS (linear least squares). This approach ﬁnds the line that best ﬁts
the data (with minimum sum of the squares of the residual). We can rewrite Equation (4) as:
C·k =d
where C is the Laplacian term and d is the time derivative term, and the LLS method gives the estimate of k as:
kest = min C · k − d

2

k

2.3. MLE (Maximum Likelihood Estimation)
The third method is MLE (maximum likelihood estimation). By taking the derivative of the log likelihood
function of T , the MLE will give the estimate of k as (again assuming Δx2 = Δy2 ):
kest =

Δx2

t+1
t
t
t
t
t
t
− T x,y
)(T x−1,y
+ T x+1,y
+ T x,y−1
+ T x,y+1
− 4T x,y
))
((T x,y
t
t
t
t
t 2
)
Δt (T x−1,y
+ T x+1,y
+ T x,y−1
+ T x,y+1
− 4T x,y

2.4. EKF (Extended Kalman Filter)
The fourth method is to add the k parameter to the state estimate of an EKF (for more on the Kalman ﬁlter,
see Thrun et al. [12]). Given the equation for heat ﬂow above, we have the equation for the temperature state
evolution as:
δ2 T
x˙i (t) = k 2
δx
where i = 1...n; then add the equation for the thermal diﬀusivity parameter:
x˙last = 0
which arises from the next state equation:
kt+1 = kt +
where is sampled from a normal distribution with variance σ2p . Finally, reformulating for one position between
the 4-neighbors, we have:
xt = g(xt−1 ) + t
zt = h(xt ) + δt
where
gi : xi,t = xi,t−1 +

δt(x(i1 , t − 1) + x(i2 , t − 1) + x(i3 , t − 1) + x(i4 , t − 1) − 4xi,t−1 )
xlast,t−1 +
δx2
glast : xlast,t = xlast,t−1 + last,t

i,t

2.5. Particle Filter (Sequential Monte Carlo)
The ﬁfth method is the Particle Filter. By sampling the p particles set from the range of the probability
distribution, a weight function is used to recalculate the probability of each particle, and then re-sampling occurs
to obtain a set of particles from the new probability distribution. This is repeated until the change in the range of
the particle value is small enough.

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978

Fig. 2. Experimental Apparatus Layout.

2.6. Levenberg-Marquardt
The sixth method is Levenberg-Marquardt (see Ozisik [13]). The Levenberg-Marquardt allows estimation of
the thermal diﬀusivity at each location by using the iterative estimation method of the Jacobian:
⎛ δTˆ
⎜⎜⎜ ˆ 1
⎜⎜⎜⎜ δδTkˆ1
2
δT ⎜⎜⎜⎜⎜ δkˆ 1
= ⎜⎜ .
J=
δkˆ ⎜⎜⎜⎜ ..
⎜⎜⎜
⎝ δTˆm
δkˆ 1

δTˆ 1
δkˆ 2
δTˆ 2
δkˆ 2

···

δTˆ m
δkˆ 2

···

..
.

···
..
.

⎞
⎟⎟⎟
⎟⎟⎟
⎟⎟⎟
⎟⎟⎟
.. ⎟⎟⎟⎟
. ⎟⎟⎟
⎟⎠
δTˆ m ⎟
δTˆ 1
δkˆ n
δTˆ 2
δkˆ n

δkˆ n

where kˆ is set of unknown thermal diﬀusivity values in each location [k1 , k2 , ...kn ]; the Levenberg-Marquardt solves
for kˆ as:
kˆ i+1 = kˆ i + (J T J + μi I)−1 J T (Y − T )
where μi is the positive damping parameter and i = 1, 2, 3, .... Levenberg-Marquardt converges when |kˆ i+1 − kˆ i | < .
2.7. Minimum RMS Error
Another way to estimate the thermal diﬀusivity is to use the RMS error by simply searching the value of k that
gives the minimum RMS error (over some range of possible k values).
kest = min RMS error
k

This method should guarantee that we ﬁnd the k value that has the minimum RMS error.
2.8. Comparison of Methods
In order to compare the methods, we use both simulated and experimental heat ﬂow data through a 2D plate.
The layout of the experimental apparatus is shown in Figure 2. A FLIR T420 high performance IR camera takes
a 320x240 pixel array, of which a 170x170 subset samples the aluminum plate. Figure 3 shows an example
image with heat sources on the left and upper parts of the plate. In order to get smoother results in the parameter
estimation methods, the image is averaged down to a 17x17 grid. Δt is set to 30sec with max t = 59x30 = 1770,

1973

1974

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978

Fig. 3. Example IR Image of the Aluminum Plate.
(a) Inverse Method

(b) LLS & RMS & MLE

(c) Particle Filter & EKF & Lev−Mar

8
LLS
RMS
MLE

Inverse Method

Particle Filter
EKF
Lev−Mar

7
1.1

1.1

1

1

6

4

3

2

2

K (cm /s)

2

K (cm /s)

2

K (cm /s)

5
0.9

0.9

0.8

0.8

0.7

0.7

1
0

1

2

0.6

0

1

2

0.6

0

2

2

1

2

2

σ

σ

σ

Fig. 4. k Estimate Results with Noise in the Data.

and Δx = Δy = 15.24/17 cm (in simulation experiments, k is set to 0.85. The sample set is then T n with time step
t = 1, 2, 3, ...58:
T n = T (x, y, 1 : t + 1)
In simulation experiments, we use the testing data T n to run experiments for the seven estimation methods to
get the value of k over 30 trials for each method. The error of the k estimation is compared between the 7 methods
according to the equation:
k − kest
kerror =
k
Note that this corresponds to ﬁnding the computational model parameter. We then use the k estimate to run a
new temperature simulation S (x, y, t) with the simulated temperature at location (x, y) and time t, and compute the
RMS (Root Mean Square) error:
RMS error =

(T x,y,t − S x,y,t )2
N

where N is the number of locations time the numbers of time step - 1. This is how adequacy of the model is
determined.
3. Veriﬁcation
Chapra [14] gives an example of heat ﬂow simulation, and our 2D implicit forward simulation gives a solution
which matches that given in the book. To verify the parameter estimation methods, heat ﬂow is simulated under
these conditions (with no added noise), and all methods produce the value of k used in the simulation. The aﬀect
of noise on the parameter estimation methods was also investigated, and the results are shown in Figure 4.

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978
(a) Inverse Method

(b) LLS & RMS & MLE

1.15

1.1

1.1

1.1

1.05

1.05

1.05

2

2

1

1

1

0.95

0.95

0.95

0.9

0.9

0.9

0.85

0.85

0.85

0.8

10

20 30 40
Time (30 s)

50

Particle Filter
EKF
Lev−Mar

1.15

K (cm /s)

1.15

K (cm /s)

K (cm2/s)

(c) Particle Filter & EKF & Lev−Mar

LLS
RMS
MLE

Inverse Method

1975

0.8

10

20 30 40
Time (30 s)

50

0.8

10

20 30 40
Time (30 s)

50

Fig. 5. k Estimate Results.

4. Data
Figure 5 shows the results of the physical experiments for thermal diﬀusivity estimation using the seven
methods. The x-axis corresponds to the time step, and the k estimate at each time step is that found with all
the data up to that time. The error in the k estimates of the seven methods is shown in Figure 6.
Using the means and variances found for each of the seven methods, their Gaussian distributions are shown in
Figure 7. Figure 8 shows the RMS error for the temperature sequences produced with the respective k values of
the seven methods. The time cost for the seven methods is shown in Figure 9.
Finally, Figure 10 shows the temperature predictions for the various parameter estimation methods. It is clear
that estimates all result a sequence which diverges from the actual data.
5. Analysis
The error of k estimation across the seven methods can be seen in Figures 5 and 6. Here we have assumed
that the actual value of k is 0.85. All of these methods produce a mean and a variance for the k estimate, and
this allows some amount of conﬁdence in each result (note, however, that an estimation technique that returns a
constant would have zero variance!). We also see that it may be better to combine the estimates in order to better
estimate the computational parameter (in this case thermal diﬀusivity). The methods produce similar results, but
the spread in k estimate is about 0.2. The plots in Figure 7 for the k a posteriori distributions give a qualitative
view of the results.
Assume that the accuracy requirements are imposed as a speciﬁed level of RMS error between the model
prediction and experimental data. Then an interesting aspect of the RMS error shown in Figure 8 is that meeting
the accuracy requirements depends on the length of the time sequence used (shorter ones will succeed but longer
will fail). Note that the RMS error does not settle down to a ﬁxed level; this may occur due to the overall misﬁt of
the model (the physical world is more complicated than the model), or may happen as the temperature converges
to a steady state (in which case the time derivative is zero). All these surrounding conditions play a role in the
exploitation of this model and need to be considered in any application as well.
Figure 9 shows the time cost of the methods. The results show that on this dataset PF is the most costly,
followed by EKF, LLS, Levenberg-Marquardt, the Minimum RMS, Inverse method and MLE is the least costly
method.
6. Conclusions and Future Work
The results here show that a variety of factors impact the use of experimental data in determining computational
model parameters as far as assessing model adequacy. Thus, a broader set of considerations must be addressed

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978
(a) Inverse Method

(b) LLS & RMS & MLE

0.4

(c) Particle Filter & EKF & Lev−Mar
0.4
Particle Filter
EKF
Lev−Mar
0.35

0.4
LLS
RMS
MLE

Inverse Method
0.35

0.3

0.3

0.3

0.25

0.25

0.25

0.2

K error (%)

0.35

K error (%)

K error (%)

1976

0.2

0.2

0.15

0.15

0.15

0.1

0.1

0.1

0.05

0.05

0.05

0

10

20 30 40
Time (30 s)

0

50

10

20 30 40
Time (30 s)

50

0

10

20 30 40
Time (30 s)

50

Fig. 6. k Estimate Error.

K estimate
1400

1200

Inverse
LLS
RMS
MLE
Particle Filter
EKF
Lev−Mar

EKF

1000

800

600

MLE
Lev−Mar
LLS

Particle Filter

400

RMS
200
Inverse
0
0.98

1

1.02

1.04

1.06

1.08

1.1

2
K (cm /s)

Fig. 7. The Gaussian Distributions for the k Estimates.

1.12

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978
(a) Inverse Method

(b) LLS & RMS & MLE

Particle Filter
EKF
Lev−Mar

1.2

1.2

1

1

1

0.8

0.6

RMS Error (Celcius)

1.2

RMS Error (Celcius)

RMS Error (Celcius)

(c) Particle Filter & EKF & Lev−Mar

LLS
RMS
MLE

Inverse Method

0.8

0.6

0.8

0.6

0.4

0.4

0.4

0.2

0.2

0.2

0

10

20 30 40
Time (30 s)

0

50

10

20 30 40
Time (30 s)

0

50

10

20 30 40
Time (30 s)

50

Fig. 8. RMS Error of Temperature Sequences for the Parameter Estimation Methods.
(a) Inverse & LLS & RMS

(b) MLE & EKF & Lev−Mar

0.8

(c) Particle Filter

0.8
Inverse
LLS
RMS

0.7

25
MLE
EKF
Lev−Mar

0.7

Particle Filter

0.5

0.5

0.4

15
Time (s)

0.6

Time (s)

Time (s)

20
0.6

0.4

0.3

0.3

0.2

0.2

0.1

0.1

10

5

0
10

20
30
40
Number of Samples

0
10

50

20
30
40
Number of Samples

0
10

50

20
30
40
Number of Samples

Fig. 9. Time Cost of Methods.
45

45

45
LLS
RMS
MLE

Inverse Method

35

30

25

20

40

Temperature (Celcius)

40

Temperature (Celcius)

Temperature (Celcius)

40

Particle Filter
EKF
Lev−Mar

35

30

25

10

20 30 40
Time (30 s)

50

20

35

30

25

10

20 30 40
Time (30 s)

50

20

10

20 30 40
Time (30 s)

Fig. 10. Temperature Predictions vs. Experimental Data.

50

50

1977

1978

Thomas C. Henderson and Narong Boonsirisumpun / Procedia Computer Science 18 (2013) 1969 – 1978

for every speciﬁc application. For temporal data, this includes the number of time steps considered as well as
the parameters of the simulation. For example, even though the experimental data is sampled at time steps of 30
seconds, the simulation must be run with a much smaller time step (say Δt = 0.1 second). These results will be
used to establish the appropriate framework for model validation in the structural health problem; that is, how to
structure built-in model validation methods for use in a dynamical data-driven analysis system.
We have also compared seven thermal diﬀusivity estimation methods: Inverse Method, LLS, MLE, Minimum
RMS, EKF, PF, and Levenberg-Marquardt. The results show that the methods produce fairly consistent results,
and in fact, a combination may provide a better estimate.
We are currently working on a more comprehensive set of experiments, and will be able to comment on the
predictive aspect of the computational model in future work. In addition, the uncertainty in other input parameters
to the computational model need to be studied, including Δx (the locations of the pixels on the actual metal plate
are uncertain), Δt (the sample times also have some amount of uncertainty), boundary conditions, etc.
Of course, this work constitutes the ﬁrst-round study to establish a framework for an in-depth analysis of the
use Bayesian Computational Sensor Networks for aircraft structural health determination using ultrasound. We
are currently developing computational models for this, as well as setting up an experimental framework. We look
forward to reporting on these in future meetings.

Acknowledgments This work was supported by AFOSR-FA9550-12-1-0291.
We like to acknowledge Jeﬀ Kessler’s help in gathering experimental data, and other project members (John
Mathews, Dan Adams, Eddie Grant, and Sabita Nahata) for their input on this and related material.
References
[1]
[2]
[3]
[4]

[5]
[6]
[7]
[8]
[9]
[10]
[11]

[12]
[13]
[14]

W. Oberkampf, C. Roy, Veriﬁcation and Validation in Scientiﬁc Computing, Cambridge University Press, Cambridge, UK, 2010.
C. Douglas, A. Patra, AFOSR/NSF Workshop on Dynamic Data Driven Application systems, unpublished report (October 2011).
T. Henderson, Computational Sensor Networks, Springer-Verlag, Berlin, Germany, 2009.
F. Sawo, T. Henderson, C. Sikorski, U. Hanebeck, Sensor Node Localization Methods based on Local Observations of Distributed
Natural Phenomena, in: Proceedings of the 2008 IEEE International Conference on Multisensor Fusion and Integration for Intelligent
Systems (MFI 2008), Seoul, Republic of Korea, 2008.
F. Sawo, Nonlinear State and Parameter Estimation of Spatially Distributed Systems, Ph.D. thesis, University of Karlsruhe (January
2009).
H. Massard, O. Fudym, H. Orlande, J. Batsale, Nodal Predictive Error Model and Bayesian Approach for Thermal Diﬀusivity and Heat
Source Mapping, C.R. Mecanique 338 (2010) 434–449.
J. Wang, N. Zabaras, Using Bayesian Statistics in the Estimation of Heat Source in Radiation, Intl. Jnl of Heat and Mass Transfer 48
(2005) 15–29.
J. Wang, Bayesian Computational Techniques for Inverse Problems in Transport Processes, Ph.D. thesis, Cornell University, Cornell,
NY (January 2006).
A. Hawkins-Daarud, S. Prudhomme, K. van der Zee, T. Oden, Bayesian Calibration, Validation, and Uncertainty Quantiﬁcation of
Diﬀuse Interface Models of Tumor Growth, Tech. Rep. ICES Report 10-44, University of Texas (November 2010).
T. Oden, R. Mosner, O. Ghattas, Computer Predictions with Quantiﬁed Uncertainty, Tech. Rep. ICES Report 10-39, University of Texas
(October 2010).
T. Furukawa, J. Cheng, S. Lim, F. Xu, R. Shioya, Defect Identiﬁcation by Sensor Network Under Uncertainties, in: Proceedings of the
2010 International Conference on Broadband, Wireless Computing, Communication and Applications, BWCCA ’10, IEEE Computer
Society, Washington, DC, USA, 2010, pp. 155–158.
S. Thrun, W. Burgard, D. Fox, Probabilistic Robotics, MIT Press, Cambridge, MA, 2005.
M. Ozisik, Heat Conduction, 2nd ed., John Wiley, New York, 1993.
S. Chapra, R. Canale, Numerical Methods for Engineers, McGraw-Hill, Boston, MA, 2010.

