Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 2512 – 2520

International Conference on Computational Science, ICCS 2013
Simulating mobile dendrites in a ﬂow
Dmitry Medvedev∗,a,b , Fathollah Varnika , Ingo Steinbacha
a Interdisciplinary
b Lavrentyev

Centre for Advanced Materials Simulation (ICAMS), Ruhr University Bochum, Stiepeler Str. 129, 44780, Bochum, Germany
Institute of Hydrodynamics, Siberian Branch of Russian Academy of Sciences, Lavrentyev prosp. 15, 630090, Novosibirsk, Russia

Abstract
We propose a scheme for simulation of the solute-driven dendritic solidiﬁcation which accounts for the ﬂows
of liquid and motion of growing dendrites. The scheme is based on the multiphase-ﬁeld method for calculating the
solidiﬁcation and the lattice Boltzmann method to simulate the ﬂuid ﬂows. Motion and rotation of solid grains is
possible.
Key words: dendritic solidiﬁcation; ﬂow; lattice Boltzmann equation

1. Introduction
Dendritic solidiﬁcation is a phenomenon with immense technical and theoretical importance. Its technical importance clearly stems from the fact that the overwhelming majority of all metallic workpieces have once in their lifetime
undergone solidiﬁcation with a dendritic structure. In fact: this transformation allows to encapsulate the heavy segregation, which is inevitably connected to alloy solidiﬁcation, between the arms of the dendrite on the micrometer
scale and thus limits macrosegregation to a considerable extend. Without this feature, no large scale casting could
be produced with a controllable alloy composition throughout the casting. The formation of dendritic arms itself is
an intrinsic feature of alloy solidiﬁcation, where the growing interface is morphologically unstable [1] and the dendritic structure evolves from self-organization. The basic theories of dendritic solidiﬁcation [2, 3, 4, 5, 6] deal with
purely diﬀusive conditions. Under terrestrial conditions it is, however, evident that there is buoyancy driven ﬂow
which aﬀects the growth conditions of the dendrites signiﬁcantly [7]. Recently, a scaling theory was developed by
one of the authors [8] which predicts a decreasing or increasing primary spacing dependent on the orientation of ﬂow
with respect to the vector of gravity: there is a complex interaction of ﬂow with dendritic growth since the dendritic
network will limit the ﬂow through friction at the solid structures on the one hand. On the other hand, ﬂow increases
transport of solute and thereby inﬂuences the growth of dendrites. These mutual interactions can be self-accelerating
or self-restricting dependent on the direction of ﬂow. The reader is referred to [8] for more details. In that work the
solid dendrites were assumed to be rigidly ﬁxed, e.g., being attached to the bottom of the mold in a directional solidiﬁcation furnace. An even more challenging task is the case of equiaxed dendrites freely ﬂoating in a melt. There will
be diﬀerent situations, e.g., upward buoyancy of solutal plumes and downward sedimentation of dendrites due to the
∗ Corresponding

author
Email address: dmitry.medvedev@rub.de (Dmitry Medvedev)

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.431

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

2513

density diﬀerence between solid and liquid. Also the dendrites will rotate, as described in [9]. To be able to investigate
this complex behavior more closely, we aim to develop a phase-ﬁeld model of solutal solidiﬁcation combined with
a robust ﬂuid ﬂow solver. The lattice-Boltzmann (LB) method is presently a well-established tool to simulate ﬂuid
ﬂows, especially ﬂows in complex geometries [10, 11, 12].
The ﬁrst combinations of the Phase ﬁeld approach with the lattice Boltzmann method to include hydrodynamic
ﬂow eﬀects on the solidiﬁcation phenomena goes back to the studies of Fabritiis and coworkers [13] and Miller and
coworkers [14, 15, 16]. Guided by one of the well known lattice Boltzmann pioneers, Sauro Succi, these authors
investigated dendritic growth in a pure melt in externally imposed ﬂows. Results obtained by these simulations
showed the great potential of the new combined method in accurately dealing with the mutual interplay of an evolving
complex solidiﬁcation pattern on the one hand and the ﬂow around this pattern on the other hand, the latter inﬂuencing
back the solidiﬁcation process via the transport of heat which is created at the solidiﬁcation front. These promising
investigations motivated additional studies of the topic by independent research groups, who extended the range of
the applications of the method to binary alloys and other ﬂow situations [17, 18, 19].
In all these studies, however, the solid phase was assumed to be immobile. The challenge to be overcome is
to include rigid-body motion and rotation in the model. In the present work, we address this issue ﬁrstly in a 2dimensional approximation. Generalization of the proposed approach to three dimensions is straight-forward and is
left to future work.
2. Numerical model
2.1. Phase ﬁeld method
The phase-ﬁeld method has now become a method of choice to simulate the dendritic solidiﬁcation. Its main
advantage is the absence of the need of front tracking, together with the possibility of keeping good accuracy at
moderate computational cost, if a thin-interface approach such as the one discussed by Karma and Rappel [20, 21] is
employed. The method has been used for the simulation of thermal-driven solidiﬁcation from a pure melt as well as
the solute-driven solidiﬁcation of alloys [22].
In the present work, we use the multi-phase ﬁeld model described in [23, 24]. The free energy functional consists
of several terms corresponding, e.g., to the interfacial f GB and chemical f CH free energy.
f GB + f CH + . . . dV.

F=

(1)

Ω

Other terms like elastic, magnetic and electric energy may be added depending on the problem.
In this work, we use only one phase ﬁeld φ which represents the fraction of the solid phase in a node. The fraction
of the liquid phase is φl = 1 − φ. The interfacial (or grain-boundary) free energy density is given by
f GB =

4σ(n)
π2
|∇φ|2 + 2 φ(1 − φ) ,
η
η

(2)

where σ(n) is the anisotropic surface energy, η is the width of the interface between two phases, n = ∇φ/|∇φ| is the
local normal to the interface.
The chemical part of the free energy is built from bulk free energies of the individual phases
f CH = h(φ) f s (C s ) + h(1 − φ) fl (Cl ) + μ(C − (φ sC s + φlCl )).

(3)

Here, C is the overall concentration of the solute, and f s (C s ) and fl (Cl ) are the chemical bulk free energy densities
of the solid and the liquid pahses which depend on the concentrations C s and Cl in the solid and liquid phases,
respectively, μ is the generalized chemical potential or diﬀusion potential of solute introduced as a Lagrange multiplier
to conserve the solute mass balance between the phases, C = φ sC s + φlCl . The function h is
h(φ) =

1
1
(2φ − 1) φ(1 − φ) + arcsin(2φ − 1) .
4
2

(4)

2514

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

Using the free energy functional (1), the kinetic equations for the phase ﬁeld and concentration variables are
constructed
δF
,
δφ
δF
C˙ = MC ∇ ,
δC
φ˙ = −Mφ

(5)
(6)

with the interface mobility Mφ and the chemical mobility matrix Mc .
The kinetic equation for the phase ﬁeld (5) can be explicitly rewritten as
φ˙ + u s · ∇φ = Me f f σ(n) ∇2 φ +

1
π2
φ−
2
2
η

+

π
η

φ(1 − φ)ΔG .

(7)

The second term in the left hand side represents the advection of phase ﬁeld with the velocity of solid, u s .
The evolution equation for the concentration of solute becomes
C˙ + ul · ∇ ((1 − φ)Cl ) + u s · ∇ (φC s ) = ∇ · (Dl (1 − φ)∇Cl ) + ∇ · jat .

(8)

with the diﬀusion coeﬃcient in the liquid Dl and no diﬀusion in the solid (one-sided model is used). Here, the
advection ﬂuxes with the velocities ul in the liquid phase and u s in the solid phase are introduced. Last term in the
right-hand side is the antitrapping current which is necessary to eliminate the eﬀect of numerical solute trapping due
to diﬀusiveness of the interface. It is expressed as
jat =

η
π

φ(1 − φ) (Cl − C s ) φ˙

∇φ
.
|∇φ|

(9)

We use a linear phase diagram with the constant partition coeﬃcient k = c s /cl . The driving force ΔG in the Eq.
(5) is ΔG = ΔS (T m − T − ml cl ) where ΔS is the entropy diﬀerence between phases, T m is the melting temperature
of a pure substance, and ml is the liquidus slope. In order to suppress the kinetic undercooling, we set the eﬀective
mobility Me f f in the Eq. (5) to
8Dl
Me f f =
.
ΔS ηml (cl − c s )
2.2. The lattice Boltzmann method
To obtain the ﬂuid velocity, the Navier-Stokes equation should be solved
(1 − φ)
νφ2 φl (ul − u s )
∂
((1 − φ)ul ) + ∇ · ((1 − φ)ul ul ) = −
∇P + ∇ · ν∇ ((1 − φ)ul ) − h∗
∂t
ρ0
η2

(10)

with the liquid density ρ0 and the kinematic viscosity ν. The last term in the right-hand side is the friction between
liquid and the solid which guarantees a no-slip condition in the thin-interface limit. The numerical coeﬃcient h∗ =
145.8 was ﬁtted from a calculation of Poiseille ﬂow in a channel with diﬀuse walls, similar to the approach described
in [25].
We do not solve the Navier-Stokes equation directly. Instead, we use the lattice Boltzmann method (LBM) [10,
11, 26] to simulate the ﬂuid ﬂow. LBM uses one-particle distribution functions fk deﬁned at the nodes of a regular
spatial lattice as main variables. Diﬀerent labels k correspond to diﬀerent velocities ck from a ﬁxed ﬁnite set. In the
two-dimensional nine velocity (D2Q9) model
used here, these velocities are c0 = (0, 0), ck = (cos((k − 1)π/2), sin((k −
√
1)π/2))Δx/Δt for k = 1 . . . 4, and ck = 2(cos((k − 1/2)π/2), sin((k − 1/2)π/2))Δx/Δt for k = 5 . . . 8. Here, Δx is the
grid spacing, equal for both the x and y directions, Δt is the time step. The eﬀect of making the velocities proportional
to Δx/Δt is that nonzero velocities lead to nearest neighbour and next-nearest neighbour sites of the square lattice in
one time-step, i.e., only lattice point positions appear in the dynamics, no interpolations are necessary.
The evolution equation for fk is
fk (t + Δt, x + ck Δt) = fk (t, x) +

fkeq − fk
Δt.
τ

(11)

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

2515

Distribution functions are advected (ﬁrst term on the r.h.s.) and undergo a relaxation to equilibrium values fkeq which
are, as usual, taken to be expansions of Maxwellians up to second order in the ﬂuid velocity U
fkeq = ρwk 1 +

ck · U (ck · U)2 U 2
+
− 2 ,
a2s
2a4s
2a s

(12)

with a s having the physical meaning of an isothermal sound velocity. The local ﬂuid density is given by ρ =
k

fkeq , the ﬂow velocity is U =

k

k

fk =

fk ck /ρ, and the weight coeﬃcients are w0 = 4/9, w1−4 = 1/9, w5−8 = 1/36. This

form of the equilibrium distribution functions ensures mass and momentum conservation and provides the correct
form of the momentum ﬂux tensor [11, 27].
Performing a Chapman-Enskog expansion, one can derive from (11) the continuity and Navier-Stokes equations
[11], with√kinematic viscosity ν = a2s (τ − Δt/2). For the present D2Q9 lattice, the isothermal sound velocity is
a s = Δx/ 3Δt. For small ﬂow velocities the ﬂuid is almost incompressible (eﬀects of compressibility are proportional
to U 2 /a2s ).
As mentioned above, the interaction between the growing pattern and the ﬂuid ﬂow was simulated as proposed in
[25, 28]. An additional dissipative force was introduced in partially ﬁlled regions
Fd = −h∗ (1 − φ)ρ0 ν

φ2
(U − u s ).
η2

This provides the correct velocity boundary conditions at the diﬀuse interface (see [25, 28]), i.e., the sharpinterface limit of the velocity boundary conditions of Eq. (10) is correctly reproduced.
The action of forces on a liquid was simulated by the exact diﬀerence method of [29]. The term Δ fk = fkeq (ρ, U +
ΔU) − fkeq (ρ, U) is added to the r.h.s. of eq. (11), where ΔU = FΔt/ρ is the velocity change due to the action of
force F at time step Δt. This form of the change of distribution functions is exact in the case where the distribution is
equilibrium before the action of the force (then after the action the distribution remains equilibrium), hence the name
of the method. In the case of a non-equilibrium initial state, this method is accurate to second order in ΔU. It is simple
enough and valid for arbitrary lattices and any dimension of space. The physical ﬂow velocity ul is deﬁned as
ul = U + ΔU/2
which coinsides with U when the force is zero.
The total force acting on the grain is
F=−

Fd .

(13)

The total torque acting on the grain is
N=−

(r − Rcm ) × Fd ,

(14)

where Rcm = rφ(r)/ φ(r) is the radius-vector of the center of mass of the grain.
Equations of motion of the grain are
˙ cm = Ucm , U
˙ cm = F/V
R

(15)

for the translational motion and
α˙ = ω, ω
˙ = N/I

(16)

for the rotation. Here, Ucm is the center of mass velocity, α is the rotation angle, ω is the angular velocity, V = ρ φ(r)
is the total mass of the grain, and I = φ(r)(r − Rcm )2 is the moment of inertia. Local velocity of solid is given by
u s = Ucm + ω × (r − Rcm ).
Equations (5) and (8) are discretized on a square lattice with a grid spacing Δx and solved by a direct Euler method
with a time step Δt. Advection of the phase ﬁeld φ is calculated by the Lax-Wendroﬀ method or by the third-order
CIP scheme [30, 31], advection of the concentration by the upwind method.

2516

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

Figure 1: Rotation of a grain in a channel ﬂow. Time is (left to right, top to bottom) t = 0 s, 2 s, 4 s, 6 s, 8 s, 10 s

3. Simulation results
We simulated the growth of a single solid grain from a liquid in diﬀerent ﬂow environments. The material data
for the Al-Cu alloy are given in Table 1. Preferential growth along principal axes was ensured setting the anisotropy
of the interface energy in the form
σ = σ0 1 − 3 + 4 n4x + n4y + n4z
where n is the local normal vector to the interface calculated relative to the rotation angle α. The strength of the
anisotropy was = 0.7. In all simulations, the grid spacing was Δx = 10−6 m, the time step Δt = 10−5 s. The
temperature was ﬁxed at T = 922.2 K which means an undercooling of 1.0 K with respect to the initial composition.
3.1. Rotating grain in a channel ﬂow
A single grain with initial radius 20Δx was put in a channel of the length L x = 400 · 10−6 m and the width
Ly = 300 · 10−6 m. The initial position was x0 = 0.6L x , y0 = 0.4Ly . A ﬂow of liquid with the initial solute
concentration C0 = 4 % Cu was set at the boundary x = 0 and the conditions ∂ul /∂x = 0, ∂φ/∂x = 0, ∂C/∂x = 0 were
imposed at the boundary x = L x . At the sides, the no-ﬂux conditions were imposed for the solute concentration and
the phase ﬁeld, and the no-slip condition for the ﬂow velocity. The incoming proﬁle of the ﬂow velocity was parabolic
u x = 4u0 y(Ly − y)/Ly2
corresponding to the Poiseille ﬂow. The grain was allowed to rotate but the center of mass position was kept ﬁxed.
Simulation results are shown in Fig. 1. The grain begins to rotate clockwise because of the oﬀ-center placement,
and a vortex is formed below the grain. The upwind tip grows faster since the ﬂow brings fresh material into its
vicinity.

Table 1: Material data used for simulation of dendritic growth in Al96 Cu4

Melting point Al
Liquidus slope
Partition coeﬃcient
Liquid diﬀusivity
Interface energy
Interface energy anisotropy
Density variation
Kinematic viscosity

Tm
ml
k
Dl
σ0
1 ∂ρ
ρ ∂c

ν

933.6 K
2.6 K/%
0.14
3 · 10−9
0.24 J/m2
0.7
0.01 1/%
5.7 · 10−5 m2 /s

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

2517

Figure 2: Grain in a shear ﬂow. Time is (left to right, top to bottom) t = 1 s, 4 s, 7 s, 10 s

Figure 3: Grain in a shear ﬂow. Time dependence of the grain angular velocity

3.2. Grain in a shear ﬂow
A single grain with initial radius 20Δx was put in a channel of the length L x = 400 · 10−6 m and the width
Ly = 300 · 10−6 m. The initial position was x0 = L x /2, y0 = Ly /2. A constant ﬂow velocity was imposed at the walls
u x = 2 · 10−4 m/s at y = 0 and u x = −2 · 10−4 m/s at y = Ly . The boundary conditions at x = 0, x = L x for the ﬂow
were periodic, and a fresh material (C = C0 ) was fed in. The grain was allowed to move and to rotate.
Simulation results are shown in Fig. 2. The grain rotates clockwise under the action of the ﬂow. The time
dependence of the angular velocity is shown in Fig. 3. After the initial transient, the angular velocity increases, then
decreases because of the increased drag acting on the branches. This rotation eﬀectively mixes the solute concentration
near the interface, and the growth is rather symmetric.
3.3. Moving grain in a channel ﬂow
A single grain with initial radius 20Δx was put in a channel of the length L x = 400 · 10−6 m and the width
Ly = 300 · 10−6 m. The initial position was x0 = 0.6L x , y0 = 0.4Ly . A ﬂow of liquid with the initial solute
concentration C0 = 4 % Cu was set at the boundary x = 0 and the conditions ∂ul /∂x = 0, ∂φ/∂x = 0, ∂C/∂x = 0 were

2518

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

Figure 4: Moving grain in a channel ﬂow. Time is (left to right, top to bottom) t = 0.5 s, 1 s, 1.5 s

Figure 5: Moving grain in a channel ﬂow. Time dependence of the grain velocity (left) and angular velocity (right)

imposed at the boundary x = L x . At the sides, the no-ﬂux conditions were imposed for the solute concentration and
the phase ﬁeld, and the no-slip condition for the ﬂow velocity. The input proﬁle of the ﬂow velocity was parabolic
u x = 4u0 y(Ly − y)/Ly2 , uy = 0
corresponding to the Poiseille ﬂow. A gravity force acted on the grain with an eﬀective acceleration
g x = −0.12 m/s2 , gy = 0.
The grain was allowed to move and to rotate.
Simulation results are shown in Fig. 4. The grain moves in the direction of gravity and rotates. Again, the upwind
tip grows faster. Time dependence of the center of mass velocity and the angular velocity is shown in Fig. 5. When
the size of the grain increases, the drag force also increases, and the grain stops and then starts to move with the ﬂow.
The angular velocity also ﬁrst increases, then decreases and changes sign.

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

2519

4. Conclusions
In conclusion, we propose a mesoscopic scheme to simulate dendritic solidiﬁcation with motion and rotation of
grains. The scheme is based on the phase-ﬁeld and the lattice Boltzmann method.
We simulated the growth of a single rotating grain in a duct ﬂow, the growth of a single moving and rotating grain
in a shear ﬂow and in a duct ﬂow with the action of gravity. In the ﬁrst two cases, the grain rotates, in the last case the
rotation is less pronounced. In all cases, the upwind tip grows faster. This model shall be extended to 3-dimensions
and applied in large scale simulations in future work.
Acknowledgment
The authors would like to acknowledge ﬁnancial support from ThyssenKrupp AG, Bayer Material Science AG,
Salzgitter Mannesmann Forschung GmbH, Robert Bosch GmbH, Benteler Stahl/Rohr GmbH, Bayer Technology Services GmbH, and the state of North Rhine-Westphalia, as well as the European Union in the framework of the ERDF.
Also the support from DFG under grant number STE1116/13-1 is highly acknowledged.
References
[1] W. M. R. Sekerka, Morphological stability of a particle growing by diﬀusion or heat ﬂow, Journal of Aplied Physics 34 (2) (1963) 323–328.
[2] J.S. Langer, H. M¨uller-Krumbhaar, Theory of dendritic growth - I. Elements of stability analysis, Acta Metallurgica 26 (11) (1978) 1681–
1687.
[3] J.S. Langer, H. M¨uller-Krumbhaar, Theory of dendritic growth - II. Instabilities in limit of vanishing surface-tension, Acta Metallurgica
26 (11) (1978) 1689–1695.
[4] J.S. Langer, H. M¨uller.Krumbhaar, Theory of dendritic growth - III. Eﬀects of surface tension, Acta Metallurgica 26 (11) (1978) 1697–1708.
[5] J. Lipton, W. Kurz, R. Trivedi, Rapid dendrite growth in undercooled alloys, Acta Metallurgica 35 (4) (1987) 957–964.
[6] M. Ben Amar, E. Brener, Physical Review Letters 71 (4) (1993) 589–592.
[7] M.E. Gliksman, M.B. Koss, E.A. Winsa, Dendritic growth velocities in microgravity, Physical Review Letters 73 (4) (1994) 573–576.
[8] I. Steinbach, Pattern formation in constraint dendritic growth with solutal buoyancy, Acta Materialia 57 (9) (2009) 2640–2645.
[9] A. Badillo, D. Ceynar, C. Beckermann, Growth of equiaxed dendritic crystals settling in an undercooled melt, Part 1: Tip kinetics, Journal of
Crystal Growth 309 (1) (2007) 197–215.
[10] R. Benzi, S. Succi, M. Vergasola, The lattice Boltzmann equation: theory and application, Physics Reports 222 (3) (1992) 145–197.
[11] S. Chen, G. Doolen, Lattice Boltzmann method for ﬂuid ﬂows, Annual Review of Fluid Mechanics 30 (1998) 329–364.
[12] F. Varnik, D. Dorner and D. Raabe, Roughness-induced ﬂow instability: A Lattice Boltzmann study, Journal of Fluid Mechanics 573 (2007)
191–209.
[13] G. De Fabritiis, A. Mancini, D. Mansutti, S. Succi, Mesoscopic models of liquid/solid phase transitions, Int. J. Mod. Phys. C 9 (8) (1998)
1405–1415.
[14] W. Miller, S. Succi, D. Mansutti, Lattice Boltzmann model for anisotropic liquid solid transition, Physical Review Letters 86 (16) (2001)
3578–3581.
[15] W. Miller, S. Succi, Lattice Boltzmann model for anisotropic crystal growth from melt, Journal of Statistical Physics 107 (1/2) (2002) 173–
186.
[16] W. Miller, Crystal growth kinetics and ﬂuid ﬂow, International Journal of Modern Physics B 17 (1/2) (2003) 227–230.
[17] D. Medvedev, K. Kassner, Lattice-boltzmann scheme for crystal growth in external ﬂows, Physical Review E 72 (5) (2005) 056703.
[18] D. Medvedev, T. Fischaleck, K. Kassner, Inﬂuence of external ﬂows on crystal growth: Numerical investigation, Physical Review E 74 (3)
(2006) 031606.
[19] D. Medvedev, T. Fischaleck, K. Kassner, Inﬂuence of external ﬂows on pattern growth, Journal of Crystal Growth 303 (1) (2007) 69–73.
[20] A. Karma, W.-J. Rappel, Phase-ﬁeld method for computationally eﬃcient modeling of solidiﬁcation with arbitrary interface kinetics, Physical
Review E 53 (4) (1996) R3017–R3020.
[21] A. Karma, W.-J. Rappel, Quantitative phase-ﬁeld modeling of dendritic growth in two and three dimensions, Physical Review E 57 (4) (1998)
4323–4349.
[22] A. Karma, Phase-ﬁeld formulation for quantitative modeling of alloy solidiﬁcation, Physical Review Letters 87 (11) (2001) 115701.
[23] I. Steinbach, Phase-ﬁeld models in materials science, Modelling Simul. Mater. Sci. Eng. 17 (2009) 073001.
[24] I. Steinbach, M. Appel, Multi phase ﬁeld model for solid state transformation with elastic strain, Physica D 217 (2) (2006) 153–160.
[25] C. Beckermann, H.-J. Diepers, I. Steinbach, A. Karma, X. Tong, Modeling melt convection in phase-ﬁeld simulations of solidiﬁcation, Journal
of Computational Physics 154 (2) (1999) 468–496.
[26] F. Higuera, S. Succi, and R. Benzi, Lattice gas dynamics with enhanced collisions, Europhysics Letters 9 (4) (1989) 345–350.
[27] Y. Qian, D. d’Humi`eres, P. Lallemand, Lattice BGK models for Navier-Stokes equation, Europhysics Letters 17 (6) (1992) 479–484.
[28] X. Tong, C. Beckermann, A. Karma, Q. Li, Phase-ﬁeld simulations of dendritic crystal growth in a forced ﬂow, Physical Review E 63 (6)
(2001) 061601.
[29] A. L. Kupershtokh, New method of incorporating a body force term into the lattice Boltzmann equation, in: Proc. 5th International EHD
Workshop, University of Poitiers, Poitiers, France, 2004, pp. 241–246.

2520

Dmitry Medvedev et al. / Procedia Computer Science 18 (2013) 2512 – 2520

[30] T. Yabe, T. Aoki, A universal solver for hyperbolic equations by cubic-polynomial interpolation. I. One-dimensional solver, Computer Physics
Communications 66 (2-3) (1991) 219–232.
[31] T. Yabe, T. Ishikawa, P. Wang, T. Aoki, Y. Kadota, F. Ikeda, A universal solver for hyperbolic equations by cubic-polynomial interpolation.
II. Two- and three-dimensional solvers, Computer Physics Communications 66 (2-3) (1991) 233–242.

