Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 2436 – 2439

International Conference on Computational Science, ICCS 2013

The Modiﬁed Direct Method: An Iterative Approach
for Smoothing Planar Meshes✩
Gang Meia,∗, John C.Tippera , Nengxiong Xub
a Institute

of Earth and Environmental Sciences - Geology, University of Freiburg, Albertstr.23B, D-79104, Freiburg, Germany
of Engineering and Technology, China University of Geosciences(Beijing), 100083, Beijing,China

b School

Abstract
The Modiﬁed Direct Method (MDM) is an iterative method for smoothing planar triangular, quadrilateral and tri-quad meshes,
which has been developed from the non-iterative smoothing method for planar meshes that was originated by Balendran [1].
Its simple aim is to make triangular elements as close to equilateral as possible and quadrilateral elements as close to square as
possible. The MDM is the computationally simpler of the two methods. The performance of the MDM for both triangular and
quadrilateral meshes is eﬀectively identical to that of Laplacian smoothing; however, it outperforms Laplacian smoothing for
tri-quad meshes. Test examples show that the MDM is always convergent for triangular, quadrilateral and tri-quad meshes.
Keywords: Finite element, Mesh smoothing, Iterative smoothing, Laplacian smoothing

1. Introduction
A mesh newly created usually needs to be improved. This improvement can be made using either (1) mesh
clear-up methods, which insert or delete nodes as well as change the connectivity of the mesh elements, or (2)
mesh smoothing methods, which leave the element connectivity unchanged and instead reposition the mesh nodes.
This paper is chieﬂy concerned with smoothing methods.
These methods can be divided into four types: (1) geometry-based, (2) optimization-based, (3) physics-based,
and (4) hybrid. Geometry-based methods obtain new node locations by using geometric rules or local optimization
techniques [2, 3, 4]. Optimization-based methods obtain the smoothed node positions by minimizing some given
distortion metric [5, 6, 7]. Physics-based methods operate by physical processing or by solving simple physics
problems [8, 9]. Hybrid methods are the combinations of two or more basic methods [10, 11].
In this paper we introduce a novel smoothing method that has the same basic goal as the Direct Method (DM)
[1], but is simper than the DM; we term this method the Modiﬁed Direct Method (MDM) which can be used to
smooth planar triangular, quadrilateral and tri-quad meshes.
The main procedure of the MDM for smoothing planar meshes is relatively simple. Firstly element stiﬀness
matrices are created based on type of elements. The modiﬁed forms of element stiﬀness matrices are simpler than
those of DM. And then by assembling all element stiﬀness matrices, a system of Jacobi iteration equations can be
formed. Finally, the smoothed positions can be generated by solving the system of Jacobi iteration equations.
✩A

more general but unﬁnished preliminary version has been posted online at http://arxiv.org/abs/1212.3133.
author. Tel.: +49-761-203-6477 ; fax: +49-761-203-6496 .
E-mail address: gang.mei@geologie.uni-freiburg.de.

∗ Corresponding

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.418

Gang Mei et al. / Procedia Computer Science 18 (2013) 2436 – 2439

2437

2. The Modiﬁed Direct Method (MDM)
The development of the MDM from the DM involves: (1) the use of diﬀerent element stiﬀness matrices, (2) the
use of a Jacobian iteration matrix instead of a global stiﬀness matrix, and (3) the replacement of the optimization
equations with iteration equations. The mathematical steps involved in this development are broadly similar for
the triangular mesh, the quadrilateral mesh and the tri-quad mesh.
2.1. The element stiﬀness matrices
C

B*

C*

A*
B

A

B*
A
D

C

A*

B
(a) Triangular element ABC

C*

D*

(b) Quadrilateral element ABCD

Fig. 1. The expected nodal positions. ( This ﬁgure is redrawn according to the Figures. 2 and 3 in [1] )

Consider a triangular element ABC shown in Fig.1(a). A∗ is the position to which node A would have to be
moved to make the element equilateral, assuming that nodes B and C were ﬁxed; B∗ and C∗ are obtained similarly.
The coordinates of A, B, C, A∗ , B∗ and C∗ are then related by the following equations:
√ ⎤⎡ ⎤ ⎡ ⎤
√
⎡
⎢⎢⎢ 0
3/2
1/2
−
3/2⎥⎥⎥ ⎢ XA ⎥ ⎢ X ∗ ⎥
0
1/2
√
√
⎥ ⎢⎢ ⎥⎥ ⎢⎢ A ⎥⎥
⎢⎢⎢⎢ 0
1/2
3/2
1/2 ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢ YA ⎥⎥⎥⎥ ⎢⎢⎢⎢ YA∗ ⎥⎥⎥⎥
0
− 3/2
⎢⎢⎢
√
√
⎥⎢ ⎥ ⎢ ⎥
⎢⎢⎢⎢ 1/2
0
0
1/2
3/2 ⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ XB ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ XB∗ ⎥⎥⎥⎥⎥
− 3/2
√
⎢⎢⎢ √
⎥⎥ ⎢ ⎥ = ⎢ ⎥
(1)
1/2
0
0
− 3/2
1/2 ⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ YB ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ YB∗ ⎥⎥⎥⎥⎥
⎢⎢⎢⎢ 3/2
√
√
⎥⎢ ⎥ ⎢ ∗⎥
⎢⎢⎢ 1/2
3/2
− 3/2
0
0 ⎥⎥⎥⎥⎥ ⎢⎢⎣⎢XC ⎥⎥⎦⎥ ⎢⎢⎣⎢XC ⎥⎥⎦⎥
⎢⎢⎣ √
√1/2
⎦ YC
YC∗
1/2
3/2
1/2
0
0
− 3/2
Consider next a quadrilateral element ABCD shown in Fig.1(b). A∗ and C∗ are the positions to which nodes
A and C would have to be moved to make the element square, assuming B and D were ﬁxed. The coordinates of
A, B, C, D, A∗ , B∗ , C∗ and D∗ are then related by the following equations:
⎤⎡ ⎤ ⎡ ⎤
⎡
0
1/2
1/2
0
0
1/2 −1/2⎥⎥ ⎢⎢ XA ⎥⎥ ⎢⎢ XA∗ ⎥⎥
⎢⎢⎢ 0
⎥⎢ ⎥ ⎢ ⎥
⎢⎢⎢ 0
0
−1/2 1/2
0
0
1/2
1/2 ⎥⎥⎥⎥ ⎢⎢⎢⎢ YA ⎥⎥⎥⎥ ⎢⎢⎢⎢ YA∗ ⎥⎥⎥⎥
⎢⎢⎢
⎥⎢ ⎥ ⎢ ⎥
⎢⎢⎢ 1/2 −1/2
0
0
1/2
1/2
0
0 ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ XB ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ XB∗ ⎥⎥⎥⎥⎥
⎢⎢⎢
⎢⎢⎢ 1/2
1/2
0
0
−1/2 1/2
0
0 ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ YB ⎥⎥⎥⎥⎥ ⎢⎢⎢⎢⎢ YB∗ ⎥⎥⎥⎥⎥
(2)
⎥⎢ ⎥ = ⎢ ⎥
⎢⎢⎢
0
1/2 −1/2
0
0
1/2
1/2 ⎥⎥⎥⎥ ⎢⎢⎢⎢ XC ⎥⎥⎥⎥ ⎢⎢⎢⎢ XC∗ ⎥⎥⎥⎥
⎢⎢⎢ 0
⎢
⎥
⎥
⎢
⎥
⎢⎢⎢ 0
0
1/2
1/2
0
0
−1/2 1/2 ⎥⎥⎥⎥ ⎢⎢⎢⎢ YC ⎥⎥⎥⎥ ⎢⎢⎢⎢ YC∗ ⎥⎥⎥⎥
⎢⎢⎢
⎥⎢ ⎥ ⎢ ⎥
⎢⎢⎢ 1/2
1/2
0
0
1/2 −1/2
0
0 ⎥⎥⎥⎥⎦ ⎢⎢⎢⎢⎣XD ⎥⎥⎥⎥⎦ ⎢⎢⎢⎢⎣XD∗ ⎥⎥⎥⎥⎦
⎣
−1/2 1/2
0
0
1/2
1/2
0
0
YD
YD∗
The left-hand matrices in Eq.1 and Eq.2 are the element stiﬀness matrices for a planar triangular and a quadrilateral element, respectively; and they are both simpler in form comparing to those used in the DM.
2.2. The MDM for smoothing planar meshes
Just as in the DM, the element stiﬀness matrices can be assembled into a global matrix, also of size 2n × 2n
for a mesh of n nodes. This Jacobi iteration matrix needs to be solved iteratively, starting with the original node
coordinates at step 0 and continuing until no node needs to be moved by more than the given tolerance.
The algorithm for implementing the MDM in 2D has three basic steps: (1) the searching for elements that
share a node, for each node; (2) the assembling of the element stiﬀness matrices into the iteration matrix; (3) the
solving of the iteration equations until the tolerance distance is reached.

2438

Gang Mei et al. / Procedia Computer Science 18 (2013) 2436 – 2439

3. Test applications of the MDM
3.1. Mesh quality
The simplest way to measure mesh quality is to calculate distortion values for each of the mesh elements
separately, and then to compare the distributions of all those values. The distortion value for a triangular element
should measure how close that triangle is to equilateral. One appropriate measure, α, was proposed by Lee and
Lo [12]. The distortion value for a quadrilateral element should measure how close that quadrilateral is to square.
In this paper we use the measure λ proposed by Li [13]. For the quadrilateral ABCD shown in Fig.1(b):
λ=24

( AB

2

AB × AD · BC × BA · CD × CB · DA × DC
+ AD 2 )( BC 2 + BA 2 )( CD 2 + CB 2 )( DA 2 + DC 2 )

The value of λ also lies between 0 and 1. For a mesh with n elements, we have deﬁned two indicators, mean
quality (MQ) and mean square error (MSE):
MQ =

1
n

n

γi ,
i=1

MSE =

1
n

n

(γi − MQ)2

(3)

i=1

, where γi = αi when the element is triangle and γi = λi when the element is quadrilateral. For a mixed mesh, i.e.,
tri-quad mesh, the indicators MQ and MSE need to be calculated for triangles and quadrilaterals separately.
3.2. The test applications
For smoothing planar meshes, a number of test meshes were created and smoothed by Laplacian smoothing
(LS) [2] and the MDM separately. Smoothing results of tri-dominant and quad-dominant meshes are compared in
Fig.2; and mesh quality results before and after smoothing are given in Table.1. We have not given the comparison
of mesh qualities for triangular and quadrilateral meshes before and after smoothing, as that the results for a mesh
with same type of element are exactly the same. The improvement of mesh quality can be seen clearly in Fig.3.

(a) Tri-dominant mesh

(b) Smoothed by LS

(c) Smoothed by MDM

(d) Quad-dominant mesh

(e) Smoothed by LS

(f) Smoothed by MDM

Fig. 2. Smoothing for planar tri-dominant and quad-dominant meshes

Gang Mei et al. / Procedia Computer Science 18 (2013) 2436 – 2439

2439

3.3. Tests assessment and summary
1) For the two topologically uniform test meshes, i.e., the meshes with the same type of element throughout,
there is eﬀectively no diﬀerence between LS and the MDM. Both these methods give smoothed meshes that are
markedly better than the original unsmoothed meshes (Fig.3).
2) For the triangular elements in the planar tri-dominant mixed mesh (Fig.2(a)), the MDM outperforms LS;
while for the quadrilateral elements, the reverse is true (Table 1). However, for planar quad-dominant mixed mesh
(Fig.2(d)), MDM perfectly outperforms LS for both triangular and quadrilateral elements.
3) Test examples show that the MDM is convergent when applied to planar triangular, quadrilateral and triquad meshes. But we could not give the accurate mathematical proof for it in theory. Future work may focus on
extending the MDM to be implemented for smoothing surface meshes and volumetric meshes.
Table 1. Mesh quality results for smoothing tri-quad meshes ( Tri: triangle; Quad: quadrilateral; MQ and MSE are deﬁned in Eq.3 )
Tri-dominant mesh ( (a), (b), and (c) in Fig.2 )
Quad-dominant mesh ( (d), (e), and (f) in Fig.2 )
MQ of tris MSE of tris
MQ of quads
MSE of quads
MQ of tris
MSE of tris
MQ of quads
MSE of quads
Original
0.8688
0.1188
0.8211
0.0713
0.9079
0.1243
0.9194
0.0739
LS
0.8756
0.1083
0.8464
0.0571
0.9064
0.0936
0.9554
0.0568
MDM
0.8794
0.1083
0.8306
0.0583
0.9394
0.0737
0.9576
0.0568

(a) Original tri mesh

(b) Smoothed by LS / MDM

(c) Original quad mesh

(d) Smoothed by LS / MDM

Fig. 3. Smoothing for triangular and quadrilateral meshes (Some degenerate quads that look like as triangles are intentionally created in (c))

References
[1] B. Balendran, A direct smoothing method for surface meshes, in: Proceedings of 8th International Meshing Roundtable, 1999, pp.
189–193.
[2] L. Herrmann, Laplacian-isoparametric grid generation scheme, Journal of the Engineering Mechanics Division 102 (5) (1976) 749–907.
[3] T. Zhou, K. Shimada, An angle-based approach to two-dimensional mesh smoothing, in: Proceedings of the 9th International Meshing
Roundtable, 2000, pp. 373–384.
[4] D. Vartziotis, J. Wipper, The geometric element transformation method for mixed mesh smoothing, Engineering with Computers 25 (3)
(2009) 287–301.
[5] L. Freitag, M. Jones, P. Plassmann, An eﬃcient parallel algorithm for mesh smoothing, in: Proceedings of 4th International Meshing
Roundtable, 1995, pp. 47–58.
[6] P. Knupp, Achieving ﬁnite element mesh quality via optimization of the jacobian matrix norm and associated quantities. part iła framework for surface mesh optimization, International Journal for Numerical Methods in Engineering 48 (3) (2000) 401–420.
[7] K. Shivanna, N. Grosland, V. Magnotta, An analytical framework for quadrilateral surface mesh improvement with an underlying triangulated surface deﬁnition, in: Proceedings of the 19th International Meshing Roundtable, 2010, pp. 85–102.
[8] K. Shimada, A. Yamada, T. Itoh, et al., Anisotropic triangular meshing of parametric surfaces via close packing of ellipsoidal bubbles,
in: Proceedings of the 6th International Meshing Roundtable, 1997, pp. 375–390.
[9] F. Bossen, P. S. Heckbert, A pliant method for anisotropic mesh generation, in: Proceedings of 5th International Meshing Roundtable,
1996, pp. 63–74.
[10] S. A. Canann, J. R. Tristano, M. L. Staten, An approach to combined Laplacian and optimization-based smoothing for triangular,
quadrilateral, and quad-dominant meshes, in: Proceedings of 7th International Meshing Roundtable, 1998, pp. 479–494.
[11] L. A. Freitag, On combining Laplacian and optimization-based mesh smoothing techniques, in: Trends in unstructured mesh generation,
1997, pp. 37–43.
[12] C. Lee, S. Lo, A new scheme for the generation of a graded quadrilateral mesh, Computers & Structures 52 (5) (1994) 847–857.
[13] H. Li, Automatic generation of quadrilateral mesh for arbitrary planar domains, Ph.D. thesis, Dalian University of Technology,China
(1995).

