Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1614 – 1623

International Conference on Computational Science, ICCS 2013

Phase ﬁeld modeling using PetIGA
Philippe A. Vignala,∗, Nathan Colliera , V. M. Caloa
a KAUST,

4700 KAUST, Thuwal 23955-6900, Kingdom of Saudi Arabia

Abstract
Phase ﬁeld modeling has become a widely used framework in the computational material science community. Its ability to
model diﬀerent problems by deﬁning appropriate phase ﬁeld parameters and relating it to a free energy functional makes it
highly versatile. Thermodynamically consistent partial diﬀerential equations can then be generated by assuming dissipative
dynamics, and setting up the problem as one of minimizing this free energy. The equations are nonetheless challenging to
solve, and having a highly eﬃcient and parallel framework to solve them is necessary. In this work, a brief review on phase
ﬁeld models is given, followed by a short analysis of the Phase Field Crystal Model solved with Isogeometric Analysis using PetIGA. We end with an introduction to a new modeling concept, where free energy functions are built with a periodic
equilibrium structure in mind.
Keywords: PetIGA ; Isogeometric Analys; IGA; Cahn-Hilliard; Phase ﬁeld crystal;

1. Introduction
Materials have been tied to the advancement of societies for a long time, and the ability to tailor them for
speciﬁc applications has been a research topic for years [1]. As is well known today, many material properties
are connected to microstructure, which in turn aﬀects the performance a material has under a certain set of conditions. The path it follows during processing will decide the ﬁnal microstructure, making it the key step in the
development of a material. One would like to know all the paths that can be followed, and conditions that need
to be maintained to get a speciﬁc set of properties. Unfortunately, this would lead to a an impossible number of
experiments that would require an unreal amount of funding to be achieved.
Fortunately, use of physical laws and thermodynamic principles has given us a way of tackling these problems
through mathematical modeling. Theories like continuum mechanics have allowed us to deal with problems dealing with structures [2], in which we look to know how much stress a component can handle before failing, and
theories like quantum mechanics [3] have been used to consider how molecules interact while having a particular
set of atoms. These models have obvious shortcomings, as assumptions are being made with regards to the behavior of their components (constitutive relations, electrostatic interactions between atoms, etc), but in the end what
is wanted is no more than a tool than can help guide scientists and engineers as to what decisions should be taken
in terms of design.
Bearing this in mind, what is wanted from these models is to capture the physical eﬀects that come into play, so
as to guide the experiments that need to be done to conﬁrm the results. Another issue with these physical models
∗ Corresponding

author. Tel.: +966-54-28-54-533
E-mail address: philippe.vignal@kaust.edu.sa.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.329

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

1615

is that they can only capture some eﬀects at certain scales. It then becomes a coupling problem as to see how
“eﬀective” values from one scale can be incorporated into another. This can be challenging, and one of the ideas
that has been put forth to try to bridge this scale problem is phase ﬁeld modeling [4, 5]. It allows to capture small
scale physics in relevant domain and time scales [6]. Phase ﬁeld models achieve this by setting up the problem as
a minimization of a free energy functional for the given system. The thermodynamically “consistent” setup allows
to model a great deal of problems related to phase transitions, ranging from solidiﬁcation [7] to magnetism [8].
The problem then is to solve the equations generated by this model: the framework is based on solving high order,
non linear partial diﬀerential equation (PDE) under a speciﬁc set of initial / boundary conditions. The discretization of these higher order partial-diﬀerential operators is a challenge, and cannot be done using standard ﬁnite
element procedures. Isogeometric Analysis (IGA) gives us a method to overcome this problem, as higher order
continuous basis functions can be generated. A high performance framework to perform Isogeometric Analysis,
called PetIGA [9], has recently been developed. This open source library can be used to assemble the matrices and
vectors which come from a Galerkin weak form, discretized with the Non-Uniform Rational B-Spline (NURBS)
basis, and being heavily based on PETSc, gives us a highly versatile platform to solve these kinds of problems.
In this work, we begin by giving a brief review on phase ﬁeld models, followed by an explanation of the Phase
Field Crystal (PFC) model and how it is solved for the case of polycrystalline growth in an undercooled liquid
using PetIGA. We continue with an idea of how to use the free energy functions to model periodic structures, and
give some concluding remarks.
2. Phase ﬁeld problems
The Stefan problem for solidiﬁcation was one of the initial problems that motivated the development of phase
ﬁeld modeling [6]. In it, the evolution of a temperature distribution is described in a homogeneous medium that
is undergoing a phase change. An interface is placed between the two phases (solid and liquid) and is tracked
explicitly over time. This formulation presents many challenges, as many degrees of freedom need to be placed
on the boundary between the phases, and the spacing between the nodes has to be as small as the size of the
interface to correctly resolve the problem. Also, the position of the nodes evolves in time, through a relationship
for interface velocity. The physical forces inﬂuencing this toy problem are somewhat understood, but that is not
always the case [6]. And last but not least, the boundary conditions at the interface depend on its position: what
should one do if the nodes cross or disappear as time evolves? Arbitrary rules are usually chosen, and accuracy
in the solution can be lost. Although accurate if all the conditions are known, these “sharp” interface models are
diﬃcult to implement, especially in multiple dimensions. They also are very stiﬀ numerically speaking. In the
phase ﬁeld modeling setting, to overcome these diﬃculties, an order parameter φ is associated with each phase
of the material. This variable is then assigned arbitrary scalar values in the ordered and disordered phases, and is
incorporated into a free energy functional that is minimized by these values. For the case in question, φ can take
a value of 0 (1) when the temperature of the system is above (below) the melting temperature, as this corresponds
to the material being in a liquid (solid) state. The interface, which in the Stefan problem was sharp and jumped
from the liquid to the solid, is now allowed to continuously evolve from the liquid to the solid. This is where
the trick comes in when dealing with the interface, which is allowed to have a certain width: φ is continuously
interpolated between the bulk values across the boundary layer. This “eﬀective” width assigned to the interface
makes it easier to solve, as the interface is no longer explicitly tracked, and explains why these models also go
by the name of “diﬀuse interface” models. For the solidiﬁcation example, this interface needs to be energetically
“penalized” while growing, as a system should try to minimize its surface. This is done by including a term
associated with spatial variations in φ. Regarding the mathematical formulation of these problems, one usually
starts by considering the ﬂuxes of the problem and setting an appropriate order parameter for the phenomenon
in question. This is done by taking the variational derivative of a free energy functional, which gives a chemical
potential such that
δF [φ]
μ=
(1)
δφ

1616

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

where μ represents the chemical potential, F[φ] represents the free energy functional and φ denotes the order
parameter. Then, considering we are dealing with a ﬂux, Fick’s ﬁrst law can be used
J = −M∇μ

(2)

where J represents the ﬂux we are dealing with, and M represents a mobility. If φ is conserved throughout time,
conservation can be enforced through
∂φ
δF
= −∇. J = −∇. −M∇
∂t
δφ

(3)

Details on this derivation can be found in [6, 5], as well as the particular form of the free energy functional. It
is chosen in such a way as to reﬂect the symmetries present in the phase diagram of the transition that is taking
place. This can be achieved by choosing an appropriate form for the coeﬃcients in the expansion of the Landau
free energy density [10]. This free energy can be assumed to be expressible in a series expansion of the form
M

f (T, φ) = f (T, φ = 0) +
n=2

an (T ) n
φ
n

(4)

where T stands for temperature, and an (T ) represents the coeﬃcients present in the expression for the bulk free
energy. The total free energy F is written down as an integral that includes this free energy, and the term mentioned
previously to account for the penalty the growth of the interface entails. In a general case, it takes the form
|W0 ∇φ|2 + f (φ, T ) dV

F [φ, T ] =

(5)

V

A thing to notice has to do with fact that the coeﬃcient W02 , is always positive: this implies that the free energy
will increase when the interface increases, and that is why it is considered an energetic penalty. With the above
considerations, and only taking into account terms a2 and a4 from the sum in equation (5), we get the following
partial diﬀerential equation
∂φ
= M∇2 (−W0 ∇2 φ + a2 φ + a4 φ3 )
(6)
∂t
There is more to the derivation of these equations, but the main points have been mentioned. The expansion
presented in equation (4) is one of the simpler choices that can be made from the modeling point of view: more
realistic forms can be assumed by splitting up the internal energy in an enthalpic term and an entropic one.
This is one of the strengths of phase ﬁeld modeling in general, as a correct choice of the free energy will yield
physically meaningful results. This is because the free energy provides a connection to the thermodynamics of the
system. Conservation laws can also be taken into account, as was done through equation (3) (Nonconserved order
parameter models can also be formulated, by “skipping” the mass conservation step. This can be used for modeling
a ferromagnetic transition, in which conservation does not take place and only depends on the temperature and
the external magnetic ﬁeld [8] ). Everything considered so far has assumed thermal equilibrium, but the partial
diﬀerential equation for the phase ﬁeld can also be coupled to the change in temperature [6, 11], allowing for a
way to study non-isothermal systems. A lot of ongoing work focuses on modifying these models, as well as the
physical parameters involved (interfacial energies, correlation functions, mobilities) for very speciﬁc purposes,
in order to try to recover accurate quantitative results. One of the modiﬁcations to deal with a model that could
capture elasticity, resulted in the Phase-ﬁeld crystal model [12]. This model will be discussed in the following
section.
3. Phase-Field Crystal Model
In the previous part, the phase ﬁeld parameter was presented in such a way that its values, uniform and scalar
in each phase, minimized the free energy while at equilibrium. While this setup allows to solve the problems in a

1617

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

fast manner, incorporating more physics, such as the diﬀusion of defects, or the inﬂuence of interfaces in polycrystalline growth, is nontrivial [13]. This is a concern with these problems, as the evolution of the microstructure can
be inﬂuenced by the interaction of these defects. Taking the case of crystal growth, once there is contact between
two diﬀerent crystals, further motion will be aﬀected by the orientational mismatch of the crystals, as well as
the junctions formed between them. The model should be able to incorporate crystals with multiple orientations,
elasticity, defects (such as grain boundaries, dislocations and vacancies), on well as be able to distinguish the solid
phase from the liquid phase. It turns out that these features are included in models that are spatially periodic in
equilibrium, and one of the models that has tried to exploit this periodicity is the Phase Field Crystal Model (PFC).
It was initially derived from the Swift-Hohenberg equation, noticing that many of the features present in the equation were similar to what happened in crystal growth [12, 14]. As it turns out, Hooke’s law can be recovered in
systems that possess spatial periodicity [6]. The other key fact about these periodic minimizers of the free energy
is that, if they are able to reproduce the equilibrium structure of what is trying to be modeled, they will inherently
capture the possible defects and their interaction within that structure. By merging the interpretation of the order
parameter in a liquid having a uniform and scalar value, with the solid being represented by a periodic function,
we get a better phase ﬁeld model to tackle the polycrystalline growth problem. More can be said about these
periodic free energies, as well as how the PFC complies with rotational invariance [12], how it can be derived
from density functional theory [15] and how it is connected to elasticity theory [12, 16]. Suﬃce to say, it looks
like a promising way to model polycrystalline solidiﬁcation and topics related to this, such as crack propagation.
The equation will be presented next, as well some details of the implementation with PetIGA.
3.1. Phase ﬁeld crystal equation
As mentioned before, the PFC equation can be used to describe diﬀerent phenomena by making assumptions
about the behavior of a density ﬁeld φ in the liquid (uniform) and the solid (symmetric and periodic) phases. What
was not mentioned was the fact that it deals with atomic length scales, and diﬀusive time scales. This translates
to the equation being able to resolve atoms in space, but being able to advance much faster in time than similar
simulations in Molecular Dynamics [3]. The free energy functional is given by [17]
F (φ) =

Ω

Φ(φ) +

D
(Δφ)2 − 2k2 |∇φ|2 + k4 φ2
2

(7)

where k and D are positive numbers, related to the wavelength and amplitude of the density ﬁeld, respectively, and
g
1
Φ(φ) = − φ2 − φ3 + φ4
2
3
4

(8)

where and g are positive constants related to isothermal compressibility and the elastic constants, respectively.
As we are dealing with a conservative process, we will use equation 3 to get

and considering M = 1

where Φ (φ) =

∂Φ(φ)
∂φ .

∂φ
δF
= MΔ
∂t
δφ

(9)

∂φ
= Δ(Φ (φ) + Dk4 φ + 2Dk2 Δφ + DΔ2 φ)
∂t

(10)

This equation has a ﬁrst-order derivative in time and sixth-order partial derivative in space.

3.2. Initial/Boundary value problem
¯ −→ R,
The problem is stated as follows: over the spatial domain Ω and the time interval (0, T ), given φ0 : Ω
¯ × [0, T ] −→ R such that
ﬁnd φ : Ω
∂φ
= Δ(Φ(φ) + Dk4 φ + 2Dk2 Δφ + DΔ2 φ) in Ω × (0, T ),
∂t

(11)

∇(Φ(φ) + Dk4 φ + 2Dk2 Δφ + DΔ2 φ) · n = 0 on Γ × [0, T ],

(12)

1618

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

∇(2Dk2 φ + DΔφ) · n = 0 on Γ × [0, T ],

(13)

∇φ · n = 0 on Γ × [0, T ],

(14)

¯
φ(x, 0) = φ0 (x) in Ω

(15)

3.3. PFC equation (Weak Form)
Moving all terms of equation (10) to the left side, multiplying by a test function w, and integrating over the
whole domain Ω, we get

Ω

w

∂φ
− wΔ(Φ(φ) + Dk4 φ + 2Dk2 Δφ + DΔ2 φ) dΩ = 0
∂t

(16)

Now, using integration by parts, the gradient/divergence theorems, and the boundary conditions (equations (12),
(13) and (14)), as well as the fact that periodic boundary conditions are considered in every direction, we have
0=
0=

Ω

Ω

w

∂φ
− wΔ(Φ(φ) + Dk4 φ + 2Dk2 Δφ + DΔ2 φ) dΩ
∂t

w

∂φ
+ ∇w∇(Φ(φ) + Dk4 φ) − 2Dk2 ΔwΔφ + D∇3 w∇3 φ dΩ
∂t

3.4. Numerical formulation
The variational formulation is stated as follows: ﬁnd φ ∈ V ∈ H 3 where H 3 is the Sobolev space of square
integrable functions with square integrable ﬁrst, second and third derivatives, such that ∀w ∈ V such that
B(w, φ) = 0
where
B(w, φ) = w,

∂φ
∂t

Ω

+ (∇w, ∇(Φ(φ) + Dk4 φ))Ω − (Δw, 2Dk2 Δφ)Ω + (∇3 w, D∇3 φ)Ω

(17)

(18)

We are unaware of others using this sixth order approach, but this equation has been solved using diﬀerent mixed
formulations by either splitting the sixth order diﬀerential equation into a fourth order and a second order equation
[17], or by directly splitting it into three second order equations [18].
3.5. Semidiscrete formulation
We now make use of the Galerkin formulation. We approximate (17) by the following variational problem
over the ﬁnite dimensional spaces: ﬁnd φh ∈ V h ⊂ V such that ∀wh ∈ V h ⊂ V
B(wh , φh ) = 0

(19)

where wh and φh are deﬁned as the linear combination of shape functions
nb

wh =

wA NA

(20)

φA NA

(21)

A=1
nb

φh =
A=1

where NA represents the basis functions associated to the global degree of freedom A, and nb represents the
dimension of the discrete space. Due to the fact that the discrete functional space needs to be H 3 conforming, the

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

1619

basis functions need to be C 2 -continuous. We can satisfy the requirement by using Isogeometric Analysis (IGA)
[19]. It is based on developments of Computer Aided Design (CAD), and the main idea involves using the CAD
parametrizations, deﬁned in terms of Non-Uniform Rational B-Splines, to generate the computational mesh and
the basis functions necessary for analysis. The residual vector can then be deﬁned as
R = {RA }

(22)

RA = B(NA , φ )
h

RA = NA × φht + (− − 2gφh + 3(φh )2 + Dk4 )∇NA ∇φh
− 2Dk2 ΔNA Δφh + D∇3 NA ∇3 φh
and the consistent tangent as
K = NA NB + (− − 2gφh + 3(φh )2 + Dk4 )∇NA ∇NB

(23)

+ (−2g + 6φh )NB ∇NA ∇φh − 2Dk2 ΔNA ΔNB + D∇3 NA ∇3 NB
An added advantage, besides the savings on time during the meshing/reﬁnement process, is the fact that better
accuracy than classical ﬁnite elements has been observed, on a per-degree-of-freedom basis [19]. Nonetheless,
the added continuity of the basis does present an extra cost with regards to the solvers [20].
˙ n,
Regarding the time discretization, the Generalized-α method for ﬁrst order systems was used [21]. Given Un , U
˙
˙
we seek Un+1 , Un+1 , Un+α f , Un+αm such that
˙ n+αm = 0
R Un+α f , U
Un+α f = Un + α f (Un+1 − Un )
˙ n + αm U
˙n
˙ n+1 − U
˙ n+αm = U
U

(24)

˙ n+1
˙ n + γU
Un+1 = Un + Δt (1 − γ) U
where Δt = tn+1 − tn , and α f , αm , γ are parameters which deﬁne the method. The generalized-α method was
designed to be able to ﬁlter high frequency modes of the solution which are under-approximated. The method
parameters α f , αm , γ can be chosen using the spectral radius ρ∞ ∈ [0, 1] of the ampliﬁcation matrix as Δt → ∞ by
1 3 − ρ∞
2 1 + ρ∞
1
αf =
1 + ρ∞
1
γ = − αm − α f
2

αm =

which leads to a second order, unconditionally stable method. This ρ∞ uniquely deﬁnes the method and can be
chosen to ﬁlter a desired amount of high frequency modes. In the simulations that were run, α f = 0.5.
4. PetIGA
An implementation for solving PDEs involves many diﬀerent but common pieces, such as direct and iterative
linear solvers, preconditioners, nonlinear solvers and time stepping schemes, explicit and implicit. PETSc, which
stands for Portable Extensible Toolkit for Scientiﬁc Computation, is a library that has coded these building blocks
generically such that they be used as modules integrated into larger implementations. The tricky part is computing
the vector and the matrix related to the speciﬁc application, built from local contributions in most numerical
methods. The assembly of these vectors and matrices to a globally distributed data structure is hard in distributed
memory architectures. In addition to its variety of solvers, PETSc provides support for the parallel assembly of
distributed matrices and vectors, featuring automatic handling of oﬀ-processor contributions. PETSc provides data

1620

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

management facilities which it calls Distributed Arrays (DAs). This component provides an optimal partition of
the domain among processors, making it extremely eﬃcient and fast. These same ideas were used to develop IGAs
on top of the PETSc framework, objects to partition the domain for a single patch of NURBS-based ﬁnite elements
to give as a ﬁnal result the PetIGA library [9]. The whole idea behind PetIGA was to provide an easy and eﬃcient
platform for IGA, where the user is left oﬀ with deﬁning a residual at Gauss points, and evaluating a tangent
(jacobian) in the case of time dependent nonlinear problems. Presented next, we can see a snippet of code that
constitutes the problem that needs to be deﬁned in PetIGA to solve the PFC model. As can be seen by comparing
the implementation to equation (22), the resemblance is remarkable, and makes for easy code debugging.
PetIGA code for the nonlinear, time-dependent residual of the PFC equation
// P h y s i c a l p a r a m e t e r s
PetscReal k4 , k2 = user - > k * user - > k ; k4 = k2 * k2 ;
PetscReal D = user - >D , eps = user - > Eps , g = user - > g ;
PetscScalar Ra = 0; // R e s i d u a l
// Na . phi_t
Ra += Na * phi_t ;
// grad ( Na ) . (( - epsilon -2* g * phi +3* phi ^2 + D * k ^4) ) . grad ( phi )
PetscScalar t1 = - eps - 2.0. g . phi + 3.0. phi . phi + D . k4 ;
Ra += Na_x * t1 * phi_x ;
Ra += Na_y * t1 * phi_y ;
// -2* D * k ^2 . del2 ( Na ) . del2 ( phi )
Ra += -2.0* D * k2 * ( Na_xx + Na_yy ) * ( phi_xx + phi_yy ) ;
// D . del3 ( Na ) . del3 ( phi )
Ra += D * ( ( Na_xxx + Na_xyy ) *( phi_xxx + phi_xyy ) + ( Na_xxy + Na_yyy ) *( phi_xxy + phi_yyy ) ) ;

4.1. Numerical results
This benchmark example presents three crystallites with diﬀerent orientations growing in an undercooled
liquid. It involves the motion of the solid/liquid interfaces as the crystals grow, as well as the motion of the grain
boundaries once these interfaces impinge on each other. The initial conﬁguration was set to the constant value
ρ¯ = 0.285. Three square crystallites are then nucleated as shown in ﬁgure (1). The following expression, which is
a solution to the partial diﬀerential equation, is used to deﬁne them:
2q
q
ρ(xl , yl ) = ρ¯ + C cos √ yl cos(qxl ) − 0.5cos √ yl
3
3

(25)

where xl and yl deﬁne a local system of cartesian coordinates, oriented with the crystalline lattice. C and q take
the values of 0.466 and 0.66, respectively. The local coordinates (xl , yl ) are deﬁned to generate the crystals with
diﬀerent orientations by using an aﬃne transformation of the (x, y) coordinates, that rotates the crystals by an
angle α. The three α angles chosen were −π/4, 0 and π/2, such that grain boundaries could be observed at the
steady state. If the angles are chosen similar to each other, it is possible for the crystals to merge together through
¯ = [0, 400]2 . Some snapshots of the numerical solution
a reorientation. The computational domain chosen was Ω
are shown in ﬁgure (1). The crystal growth can clearly be observed, as well as the formation of grain boundaries.
5. A modeling tool: the density ﬁeld building block
The Phase-Field Crystal equation (PFC), as we were looking to see how to calculate the elastic constants
for a speciﬁc crystalline system through the so called amplitude expansions [6, 16, 22], made us realize that the
equilibrium solution to the PDE is really a geometrical description of a speciﬁc crystalline structure. It uses an
amplitude and a frequency, which is deﬁned by the reciprocal lattice vectors of the speciﬁc structure. The values
that the PFC parameters take determine the structures that are reached at equilibrium, and a lot of work in the
ﬁeld has focused on determining the phase diagrams with respect to these diﬀerent parameters. A couple of these
phase diagrams can be found in [14] and [16], and they show that the phase ﬁeld crystal solutions only depend
on the values picked for the average density in the initial condition, and an parameter that is deﬁned by the
parameters deﬁned in equations (7) and (8). The idea that wants to be conveyed is the fact that diﬀerent values for

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

(a) t = 0

(b) t = 250

1621

(c) t = 1000

Fig. 1: Crystal growth in a supercooled liquid. Snapshots of the numerical approximation to the atomistic density
ﬁeld of the phase ﬁeld crystal equation, with D = k = 1, g = 0 and = 0.25. The computational mesh is composed
of 6502C 2 cubic elements. The time step is 0.25.
the parameters involved in the equation will give diﬀerent
ﬀ
equilibrium solutions.
The reasoning behind the PFC equation started initially by realizing that many of the features needed to model
crystal growth were described by the Swift-Hohenberg (SH) equation, and that by adding conservation, this could
be achieved [12]. A line of work on PFC has focused since then in trying to develop the model by adding extra
terms, and studying their inﬂuence in the behaviour of the equilibrium density ﬁeld. In this case these “ﬁnal”
states will be predeﬁned by the choices made for the parameters. But, what about looking at the problem from a
diﬀerent
ﬀ
perspective? What about working from the equilibrium value seen in an experiment, and building a free
energy capable of capturing the eﬀects
ﬀ
reported so far in their phase diagrams? This would give us the possibility
of integrating these parameters in the functional, and by working our way up, ﬁnding the initial functional needed
to achieve those ﬁnal states.
Thinking about Suzana Nunes’ paper on uniform nano channels [23], and just to show how it could work, the
equilibrium function for the density ﬁeld presented before, describing a triangular conﬁguration in 2D in the PFC
case, can again be considered
2q
q
φ(x, y) = φ¯ + As 0.5cos √ y − cos (qx) cos √ y
3
3

(26)

where φ¯ represents the average value of the density ﬁeld, As represents an amplitude, and q represents the wavelength. If we just multiply this by z to add a third dimension, we get
2q
q
φ(x, y, z) = z φ¯ + As 0.5cos √ y − cos (qx) cos √ y
3
3

(27)

By having z = 1, this would give a periodic array of cylinders in 3D, as shown in ﬁgures (2a) through (2d). Values
of amplitude and wavelength are changed between plots, to show how the density ﬁeld could be matched with
experimental results by using the lattice constants obtained from experiments, that are already available as SAXS
experiments have been done on those membranes. This value for the wavelength q would be able to control the
size of the pores. Even though the structure for the membranes is not the same as the one presented here, it should
be possible to ﬁnd a mathematical formulation for something to look like the structure shown in ﬁgure (3), in
which there would be a high density ﬁeld corresponding to the location of the nodes/micelles, and a low density
matching the presence of pores. It then becomes a matter of collecting experimental data that has been obtained so
far, and studying how these parameters could be added to the formulation through their phase diagrams, eﬀectively
ﬀ
constituting a backward procedure to the one used to develop the PFC model.
6. Summary
Phase ﬁeld models in general oﬀer
ﬀ a lot of ﬂexibility in terms of modeling phase transformations. Without
having to worry about the explicit tracking of interfaces, one is left oﬀ with trying to accurately model the form of

1622

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

(a) As = 1, a = 1

(b) As = 2, a = 1

(c) As = 1, a = 2

(d) As = 1, a = 4

Fig. 2: Density ﬁeld deﬁned in (27) with φ¯ = 1 and q =

2π
a

√

3
2

Fig. 3: Geometrical representation of the pores formed in [23], where the red nodes correspond to micelles, and
the center of the hexagons are empty.

Philippe A. Vignal et al. / Procedia Computer Science 18 (2013) 1614 – 1623

1623

the free energy function that correctly describes the system under consideration. While uniform ﬁelds to represent
diﬀerent phases are a way to solve phase transition problems [7], it is hard to approximate the appropriate physics
that inﬂuence the problem. Even though the approximation used in the derivation of the PFC model from classical
density functional theory are very crude, and the results predicted are not all that accurate, there are ways to
improve it by ﬁtting the diﬀerent parameters that go into the equation, or by adding others [24]. The question
is still open on whether or not this parameter ﬁtting procedure will be able to lead to a more robust model, that
handles various materials under various conditions, but initial results look promising [25]. It is also worthwhile
mentioning that the dynamical equations written in this work usually include random ﬂuctuations, that are used
to represent the thermal ﬂuctuations in the system. They are crucial to properly describe the degrees of freedom
at the microscopic level that act on length scales below the correlation length (i.e. interface width) which sets the
scale over which changes of order occur. Only the modelling point of view has been approached in this work, but
these models have mathematical and computational issues [17, 26, 27] that are current topics of research. The high
order partial diﬀerential equations obtained, along with their stiﬀ and nonlinear nature, makes them challenging
to solve with the usual numerical techniques, and the approach presented here to handle the sixth order had not
been done before. As scientists come up with harder and harder equations to solve, frameworks such as IGA and
software such as PetIGA will become increasingly necessary.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15]
[16]
[17]
[18]
[19]
[20]
[21]
[22]
[23]
[24]
[25]
[26]
[27]

J. William D. Callister, Materials Science and Engineering: an introduction, Wiley, (2007).
O. Gonzalez, A. M. Stuart, A First Course in Continuum Mechanics, Cambridge University Press, (2008).
M. P. Allen, N. Attig, K. Binder, H. Grubmller, K. Kremer, Introduction to molecular dynamics simulation (2004).
J. W. Cahn, J. E. Hilliard, Free energy of a nonuniform system. i. interfacial free energy, J. Chem. Phys 28 (258).
W. C. C. Robert B. Balluﬁ, Samuel M. Allen, Kinetics of materials, Wiley, (2005).
N. Provatas, K. Elder, Phase-Field Methods in Materials Science and Engineering, Wiley-VCH Verlag GmbH & Co. KGaA, (2010).
N. Moelans, B. Blanpain, P. Wollants, An introduction to phase-ﬁeld modeling of microstructure evolution, Calphad 32 (2) (2008) 268 –
294.
O. Penrose, P. C. Fife, Thermodynamically consistent models of phase-ﬁeld type for the kinetic of phase transitions, Physica D: Nonlinear
Phenomena 43 (1) (1990) 44 – 62.
L. Dalcin, N. Collier, Petiga: High performance isogeometric analysis, https://bitbucket.org/dalcinl/petiga (2012).
J. P. H. J. L. Barrat, Basic concepts for simple and complex ﬂuids, Cambridge University Press, (2003).
I. Loginova, G. Amberg, J. gren, Phase-ﬁeld simulations of non-isothermal binary alloy solidiﬁcation, Acta Materialia 49 (4) (2001) 573
– 581.
K. R. Elder, M. Katakowski, M. Haataja, M. Grant, Modeling elasticity in crystal growth, Phys. Rev. Lett. 88 (2002) 245705.
L. Granasy, T. Pusztai, T. Borzsonyi, J. A. Warren, J. F. Douglas, A general mechanism of polycrystalline growth, Nat Mater 3 (9) (2004)
645 – 650.
K. R. Elder, M. Grant, Modeling elastic and plastic deformations in nonequilibrium processing using phase ﬁeld crystals, Phys. Rev. E
70 (2004) 051605.
T. V. Ramakrishnan, M. Yussouﬀ, First-principles order-parameter theory of freezing, Phys. Rev. B 19 (1979) 2775–2794.
K.-A. Wu, A. Adland, A. Karma, Phase-ﬁeld-crystal model for fcc ordering, Phys. Rev. E 81 (2010) 061601.
H. Gomez, X. Nogueira, An unconditionally energy-stable method for the phase ﬁeld crystal equation, Computer Methods in Applied
Mechanics and Engineering 249−252 (0) (2012) 52 – 61.
R. Backofen, A. Rtz, A. Voigt, Nucleation and growth by a phase ﬁeld crystal (pfc) model, Philosophical Magazine Letters 87 (11)
(2007) 813–820.
J. A. Cottrell, T. J. R. Hughes, Y. Bazilevs, Isogeometric Analysis: Toward Uniﬁcation of CAD and FEA, John Wiley and Sons, (2009).
N. O. Collier, L. Dalc´ın, D. Pardo, V. M. Calo, The cost of continuity: performance of iterative solvers on isogeometric ﬁnite elements,
CoRR abs/1206.2948.
K. E. Jansen, C. H. Whiting, G. M. Hulbert, A generalized-α method for integrating the ﬁltered Navier-Stokes equations with a stabilized
ﬁnite element method, Computer Methods in Applied Mechanics and Engineering 190 (3-4) (2000) 305 – 319.
K.-A. Wu, A. Karma, Phase-ﬁeld crystal modeling of equilibrium bcc-liquid interfaces, Phys. Rev. B 76 (2007) 184107.
S. P. Nunes, R. Sougrat, B. Hooghan, D. H. Anjum, A. R. Behzad, L. Zhao, et al, Ultraporous ﬁlms with uniform nanochannels by block
copolymer micelles assembly, Macromolecules 43 (19) (2010) 8079–8085.
A. Jaatinen, C. V. Achim, K. R. Elder, T. Ala-Nissila, Thermodynamics of bcc metals in phase-ﬁeld-crystal models, Phys. Rev. E 80
(2009) 031602.
H. Emmerich, H. L¨owen, R. Wittkowski, T. Gruhn, G. I. T´oth, G. Tegze, L. Gr´an´asy, Phase-ﬁeld-crystal models for condensed matter
dynamics on atomic length and diﬀusive time scales: an overview, ArXiv e-printsarXiv:1207.0257.
Isogeometric analysis of the Cahn-Hilliard phase-ﬁeld model, Computer Methods in Applied Mechanics and Engineering 197 (49-50)
(2008) 4333–4352.
A. Baskaran, P. Zhou, Z. Hu, C. Wang, S. M. Wise, J. S. Lowengrub, Energy Stable and Eﬃcient Finite-Diﬀerence Nonlinear Multigrid
Schemes for the Modiﬁed Phase Field Crystal Equation, ArXiv e-printsarXiv:1208.2643.

