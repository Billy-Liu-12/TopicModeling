Procedia Computer
Science
Procedia Computer
001(2010)
1–8
Procedia
ComputerScience
Science
(2012)
837–844

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Unstructured mesh generation from the Virtual Family models for
whole body biomedical simulations
Dominik Szczerbaa,b , Esra Neufelda , Marcel Zefferera , Gabor Szekelyb , Niels Kustera
a IT’IS

Research Foundation, Zurich, Switzerland
Vision Lab, ETH, Zurich, Switzerland

b Computer

Abstract
Physiological systems are inherently complex, involving multi-physics phenomena at a multitude of spatial and
temporal scales. To realistically simulate their functions, detailed high quality multi-resolution often patient speciﬁc
human models are required. Mesh generation has remained a central topic in ﬁnite element analysis (FEA) for a few
decades now. Recent developments in high performance computing (HPC) driven by the need for multi-physics multiscale simulations of physiological systems deﬁne new challenges in this area. Even though many algorithms have
been developed over years and are offered as commercial packages, they are often limited to mechanical engineering
applications only. Mesh generation for human anatomical domains requires more effective and ﬂexible techniques
to tackle their greater geometrical and topological complexities. We present, evaluate and discuss several methods
to generate unstructured body ﬁtted multi-domain adaptive meshes with geometrically and topologically compatible
interfaces from the segmented cross-sections of the Virtual Family models for the purpose of large scale whole body
simulations. We found that an automated solution is difﬁcult to achieve with real-image qualities, but if optimal
methods are selected, good results can be achieved with minimal user-interactions. Therefore we believe that our
observations can serve as guidance when choosing an optimal method for a speciﬁc application.

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: biomedical simulation, whole body anatomical model, unstructured mesh generation, FEA, FEM,
compatible triangulation, multi-label medical image data, multi-physics multi-scale simulation.

1. Introduction
Physiological systems are inherently complex. To realistically simulate their functions, detailed high quality
human models (preferably patient speciﬁc) are required. The freely available Virtual Family Models are based on
complete magnetic resonance (MR) datasets of human volunteers representing different sexes, ages, weights, body fat
content and developmental stages [1]. Additional models are continuously being added, including more child models
of different ages (Virtual Classroom), pregnant women models with fetuses at different gestational stages, an obese
model and several animal models. All the models originate from high resolution magnetic resonance imaging (MRI)
scans (0.5 − 0.9 mm pixel size, 1 − 2 mm slice thickness) of healthy volunteers. They have been acquired in separate
blocks (head, extremities...) of varying quality, resolution and sometimes orientation. Overall, the images have a
rather low signal to noise ratio and additionally are sometimes blurred. The resolution was not always sufﬁcient to
identify ﬁne structures and small features. Especially, vessels and nerves were very difﬁcult to follow continuously.
Segmentation errors are estimated to be in order of 1 − 5 mm. It should be stressed, however, that some of the accuracy
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.091

Szczerbaetetal.
al.//Procedia
Procedia Computer
D.D.Szczerba
ComputerScience
Science001(2010)
(2012)1–8
837–844

838

2

loss was not related to the actual imaging modality as such but to the use of conscious volunteers which implied
limitations on the scanning time, necessary repositioning, breathing movements, no use of bowel movement reducing
agents in the children etc. The anatomical sites in the MR images have been identiﬁed by an expert team of biologists
and physicians. As a consequence of the deliberate decision to not idealize or simplify the segmentations the datasets
contain very complex shapes with many small holes, disconnected islands and thin protrusions (Fig. 1). It is straight
forward to use these datasets for applications they were originally designed for: ﬁnite difference based simulations
of electromagnetic and thermal exposures. The datasets are, however, completely unsuitable for the FEA because of
severe quality and consistency issues (e.g. blood vessels continuity and closure, connectivity of gray/white matter,
etc.). Additionally, the goal of obtaining realistic segmented voxel data conﬂicts with the inherent need of FEA to
use simpliﬁed, high-quality, manageable geometries. In this paper we present, evaluate and discuss the methods to
generate high quality unstructured meshes directly from the large image datasets of the Virtual Family for large scale
whole body simulations.
2. Related Work
For a general overview of the available literature related to meshing techniques see e.g. [2] and references therein.
In essence, there are many reliable approaches for engineered objects, i.e., objects ”well behaved”, with regular and
distinct features, often composed of primitives, as is often the case in mechanical design applications. Concerning
medical applications, there are only very few algorithms present in the literature that would generate meshes directly
from multi-label medical image data. The octree techniques [3, 4] generate meshes with consistent multi-material
junctions, however the quality of the elements at the interfaces turns out to be very poor and needs further improvements. There are methods relying on Delaunay reﬁnement [5, 6, 7]. In practice, however, even though the quality of
the ﬁnal mesh is good, the representation of the interfaces is not (jiggles). In addition, sometimes there are problems
with the termination of this complex procedure for noisy or poorly resolved datasets. Some newer methods [8] improve the interface smoothness by protecting the interface points during the reﬁnement process. They will, however,
sometimes fail in practice due to under-resolved regions of high curvatures, as is unfortunately very often the case
with MRI data.
3. Methods
3.1. Geometry Extraction
To obtain a good surface representation of given domains we proceed as follows:
• Convert the desired segmentation label ﬁeld(s) into an implicit (level set) representation. Different choices are
available for the embedding function, including signed distance or molliﬁed step functions. It is important that
the gradient of this function reasonably well approximates the surface normal.
• Smooth the resulting scalar ﬁeld so as to remove stair-casing artifacts originating from the voxel representation.
• Compensate for smoothing induced volume loss by solving the level set equation ∂φ
∂t + u∇φ = 0 for the interface
embedding function φ and the interface advancing velocity u = u0 ∇φ, with u0 compensation parameter subject
to the assumption that the gradient of the embedding function approximates the surface normal. By assuming
that the embedding function is a signed distance transform, the above equations are greatly simpliﬁed, but they
will require signiﬁcant time to compute.
• Extract an explicit interface using a contouring algorithm like marching cubes.
The obtained surface mesh will be a good and smooth representation of the domain in question, but will be
excessively sized and of very poor quality (many degenerate triangles). It needs therefore to be processed further, as
presented below.

D. Szczerba
al. / Procedia
Computer
Science
00 (2010)
1–8
D. Szczerba
et al.et/ Procedia
Computer
Science
1 (2012)
837–844

3
839

Figure 1: Top left: MRI scan of a human cerebellum. Top right: Tiny, narrow and disconnected features in the segmentation. Bottom left:
Surface mesh obtained by naive contouring of the segmentation label ﬁeld. Note badly conditioned surface elements (numerous degenerate ones
are too thin to be visible). Bottom right: FEM-ready tetrahedron mesh colored with the distance (in mm) to the original voxel data. Note the mesh
orthogonality.

840

Szczerbaetetal.
al.//Procedia
Procedia Computer
D.D.Szczerba
ComputerScience
Science001(2010)
(2012)1–8
837–844

4

3.2. Surface Remeshing
To generate a good uniform surface mesh we ﬁrst decimate the original mesh using a variant of a topology preserving quadric decimation algorithm [9]. The resulting mesh is then iteratively smoothed and projected back onto its
original in order to eliminate volume loss. The result is a very good uniform surface mesh, with global element size
easily controlled by a requested reduction of the number of elements during decimation. It can be volume-meshed
right away, but we further process it with a surface optimization method [10] to adapt the mesh density to the local curvature. It is fundamental that the mesh input to this procedure is already reasonably well conditioned, else
precondition violations may result due to degenerated triangles, arbitrarily small angles, etc.
3.3. Volume Meshing
Any method capable of generating volumetric meshes from a ﬁxed surface mesh can be used. There are many
commercial as well as a few open source packages offering such functionality.
3.4. Compatible Interface Triangulations
The meshing techniques described so far enforce geometrical (typically with sub-voxel accuracy), but not topological compatibility of the triangulations between the neighboring domains (touching organs/tissues). Perhaps the
simplest way to achieve the topological consistence is to map the bounding volume of the whole dataset with unstructured elements and simply transfer the label ﬁeld from the original image data. This is ultimately robust in the
computational geometry sense, delivers meshes of extremely high quality, provides compatible triangulations between
domains, but obviously gives their worst geometric representation as the conformance to the domain boundaries is
not enforced. Moreover, transfer of the labels from voxels to unstructured elements like tets is non-unique and can
further contribute to interface jiggles. However, this may be still sufﬁcient in very many situations. Unlike machines,
living bodies do not always have precisely deﬁned discontinuous interfaces between their components. Therefore,
such representation may be sufﬁcient in some cases when completed with a continuous smooth scalar ﬁeld deﬁning
the material properties. To achieve better representation of the interface one can add various 3D Delaunay reﬁnement
methods [5, 6, 7, 8] to enforce the interface compliance.
A simple method offering better control of the geometrical ﬁdelity of the interfaces is based on the idea of a
background material. Arguably, in living bodies the organs often do not touch each other directly with a discontinuous
interface. Instead, the regions in contact are often coated with fat, connective tissue or ﬂuid. Under this assumption
the mesh generation is straight forward. The largest domain is the background material, containing all the organs and
always preventing their direct contact by a separating layer. Therefore it is sufﬁcient to only mesh the background
material with the method described before. All the contained organs will appear in this mesh as separated holes. These
holes can be easily ﬁlled by any volume meshing procedure that will preserve the given (good) surface triangulation.
When the background material approach is not acceptable one can use a variant of marching cubes algorithm operating on discrete scalar ﬁelds. The interface in such a case is created exactly middle way between the adjacent voxels.
This generates topologically compatible interfaces, unfortunately, retains the staircasing. We use a volume preserving
windowed sinc function interpolation kernel to regularize the point coordinates [11] and achieve satisfactory results.
The drawback is that the method requires clean and sufﬁciently resolved segmentations, else the interpolation kernel would generate exploding spikes at the noisy locations. To avoid this problem the segmentation has to be either
manually corrected or smoothed automatically, as shown in Fig. 3.
When corrections to the segmentations are not possible, another method is to very slightly offset the embedding
function (in the sub-voxel range) past the original segmentation border prior to the explicit surface extraction so as to
generate geometrical intersections between the extracted domains. Using then boolean operations on these surfaces
(a large number of different methods has been proposed in the computer graphics literature) one obtains a union
grid of bad quality but geometrical and topological consistency between domains and a smooth representation of
the interfaces. It can be now volume-meshed by e.g. re-meshing interface surfaces one at a time while recursively
constraining the just added points in the triangulations of the following interfaces. Another option is to simply use
a cut-cell octree based method as available in some commercial packages. A fundamental point is that the boolean
operations on surface meshes are very sensitive to the condition of the input which must consist of well conditioned
orientable manifolds or the boolean operations will fail due to numerical problems.

D. Szczerba
al. / Procedia
Computer
Science
00 (2010)
1–8
D. Szczerba
et al.et/ Procedia
Computer
Science
1 (2012)
837–844

Figure 2: Examples of FEM models of a human body created from the Virtual Family datasets using the presented methods.

5
841

842

Szczerbaetetal.
al.//Procedia
Procedia Computer
D.D.Szczerba
ComputerScience
Science001(2010)
(2012)1–8
837–844

6

4. Results
We have applied the described methods to generate unstructured body ﬁtted adaptive meshes from segmented
medical image dataset of one Virtual Family member. While we are aware that correcting the input segmentations
would ﬁx many problems, we intentionally did not do so (neither manually nor automatically) to assess the methods’
performance on ”real life” non-perfect datasets. The ﬁrst ﬁnding was that very thin structures like nerves or smaller
vessels could not be meshed. They were often resolved with just 1-3 voxels in which cases the level set transform does
not make any sense due to the obvious lack of continuity. However, we were easily able to process all medium to big
sized tissues/organs (bigger than about 5 − 10mm), including the largest arteries and veins. The method proved very
robust against disconnected tiny islands or noisy features by simply ignoring them in the smoothing step (the method
is still volume preserving, i.e. no shrinkage results). Typical meshing times were about 15 minutes (including about 5
minutes of interactive choice of parameters) with notable exceptions of the skull and the white matter, where the total
processing time reached a few hours (including trial and error interactivity of about 1h). Quality of all the meshes
measured as the radii ratios ensured the absence of any ﬂat elements (slivers). Apart from the quality, the meshes
are also highly orthogonal, making them suitable also to simpler discretization schemes (e.g. cell face values are
arithmetic means, cell face gradients can be easily computed, etc.), which would normally fail on non-orthogonal but
otherwise good meshes. All the organs have geometrical, but not topological compatibility at the internal interfaces
making them suitable to e.g. domain decomposition methods relying on cross domain interpolations. Some of the
resulting meshes are presented in Fig. 1 and 2.
Next, we attempted to generate models with compatible triangulations at the interfaces for selected organ complexes. The method based on the Delaunay reﬁnement was able to terminate even with the original segmentations.
The result (Fig. 3, bottom right) is a huge mesh of several million high quality elements, with compatible, but somewhat jiggled internal interfaces. Most certainly, there will be applications where such a solution will be an acceptable
option, e.g., by relying on additional smooth scalar ﬁeld of tissue parameters derived from the original continuous
gray level data.
We achieved very good results exploiting the background material approach. A potential drawback is that for very
thin layers of the coating material very small elements have to be created, which can lead to excessive mesh sizes.
We were not able to obtain any satisfactory results with the method enforcing topological compatibility based on
the discrete variant of the marching cubes without modiﬁcations of the segmentation data. The results obtained from
this method inherently preserve staircasing artifacts and must be smoothed in some way. The interpolation kernel
used in our volume preserving smoothing routine turned out to be too sensitive to the given noise, which resulted in
many random spikes all over the surfaces. We found, however, that automatic smoothing of the segmentation based
on the same level set idea as to extract the initial geometries (each label separately at a time) changed the situation
dramatically. The meshes did not contain spikes anymore and their cross-domain triangulations were topologically
compatible. The drawback is some loss of sharp features, even though the smoothing is volume preserving. Also, the
approach ”resolve or reject” may be unacceptable for some applications. But then again, while this approach is not an
ultimate answer to the compatible triangulation problem, it will certainly be applicable in some situations.
We achieved very good results with the method relying on boolean operations on surface meshes. Here the
segmentation corrections were not needed again, but manual corrections would probably give much better control
over the more exact deﬁnition of interfaces. The surface meshes obtained by decimation and projected smoothing
proved to be sufﬁciently well conditioned for a robust performance of the boolean surface operations (see Fig. 3, top
right, bottom left). This resulted in very good, both geometrically and topologically compatible meshes with smooth
interfaces.
All operations were performed on a 64-bit PC with the Intel 8-core Xeon processor, 32 GB RAM, linux operating
system and the GNU compiler collection. Images were rendered using the Visualization Toolkit (VTK) from Kitware,
Inc.
5. Conclusions
We have reviewed several techniques to generate unstructured meshes directly from the segmented medical image
data. We have evaluated these methods on the Virtual Family datasets by generating over a hundred of unstructured
models of various organs and tissues. Although none of the presented methods is an automatic solution that can be

D. Szczerba
al. / Procedia
Computer
Science
00 (2010)
1–8
D. Szczerba
et al.et/ Procedia
Computer
Science
1 (2012)
837–844

7
843

Figure 3: Top left: Automatically cleaned segmentation to facilitate compatible meshing discussed in the text (cf. Fig. 1). Top right: Common
conforming compatible interfaces between brain sub-regions highlighted in red. Middle: Topologically compatible triangulations obtained with
the boolean operations (left) and Delaunay reﬁnement method (right) discussed in the text. Bottom: Magniﬁed fragments of the images in the
middle row.

844

Szczerbaetetal.
al.//Procedia
Procedia Computer
D.D.Szczerba
ComputerScience
Science001(2010)
(2012)1–8
837–844

8

applied to any input data in all possible cases, our evaluation aims to provide guidance in selecting the optimal method
to generate a required anatomical model from segmented medical images.
If topologically compatible interfaces between the domains are not required, the presented procedures work quite
reliably, almost automatically, and do not require a highly trained software engineer to operate them. Human supervision is generally only required to decide about the mesh size and reﬁnement parameters. It is, however, rather sensitive
to the (lack of) resolution and features must be resolved with sufﬁcient accuracy or the meshes may contain erroneous
elements in those one-voxel narrow passages, under-resolved high curvatures or three-voxels small sub-regions. Rejecting such tiny features (most conveniently in the segmentation) that are anyway on the edge of uncertainty has
always resolved such problems.
To achieve topologically compatible interfaces while ensuring their high geometrical ﬁdelity is not an easy task,
both to implement and to operate. We found, however, that if the segmentation is of sufﬁcient resolution and quality,
and if the extracted geometrical surfaces are well conditioned, very good results can be achieved with optimal amount
of user interaction.
References
[1] A. Christ, W. Kainz, E. Hahn, K. Honegger, M. Zefferer, E. Neufeld, W. Rascher, R. Janka, W. Bautz, J. Chen, et al., The Virtual Family–
Development of anatomical CAD models of two adults and two children for dosimetric simulations, Physics in Medicine and Biology.
[2] D. Szczerba, R. McGregor, G. Sz´ekely, High quality surface mesh generation for multi-physics bio-medical simulations, in: LNCS, 2007, pp.
906–913.
URL http://dx.doi.org/10.1007/978-3-540-72584-8_119
[3] M. A. Yerry, M. S. Shephard, Automatic three-dimensional mesh generation by the modiﬁed-octree technique, International Journal for
Numerical Methods in Engineering 20 (11) (1984) 1965–1990.
URL http://dx.doi.org/10.1002/nme.1620201103
[4] M. S. Shephard, M. K. Georges, Automatic three-dimensional mesh generation by the ﬁnite octree technique, International Journal for
Numerical Methods in Engineering 32 (4) (1991) 709–749.
URL http://dx.doi.org/10.1002/nme.1620320406
[5] L. Rineau, M. Yvinec, A generic software design for delaunay reﬁnement meshing, Computational Geometry 38 (1-2) (2007) 100 – 110,
special Issue on CGAL. doi:DOI: 10.1016/j.comgeo.2006.11.008.
URL http://www.sciencedirect.com/science/article/B6TYS-4NDMN9J-2/2/123233326f16d98780ac47c7d3d49d32
[6] J. Pons, F. S´egonne, J. Boissonnat, L. Rineau, M. Yvinec, R. Keriven, High-quality consistent meshing of multi-label datasets (2007).
URL http://dx.doi.org/10.1007/978-3-540-73273-0_17
[7] J.-D. Boissonnat, J.-P. Pons, M. Yvinec, From segmented images to good quality meshes using delaunay reﬁnement (2009).
URL http://dx.doi.org/10.1007/978-3-642-00826-9_2
[8] S.-W. Cheng, T. K. Dey, J. A. Levine, A practical delaunay meshing algorithm for a large class of domains (2008).
URL http://dx.doi.org/10.1007/978-3-540-75103-8_27
[9] M. Garland, P. Heckbert, Surface simpliﬁcation using quadric error metrics, in: Proceedings of the 24th annual conference on Computer
graphics and interactive techniques, ACM Press/Addison-Wesley Publishing Co. New York, NY, USA, 1997, pp. 209–216.
[10] J. Sch¨oberl, Netgen an advancing front 2d/3d-mesh generator based on abstract rules, Computing and Visualization in Science V1 (1) (1997)
41–52.
URL http://dx.doi.org/10.1007/s007910050004
[11] G. Taubin, T. Zhang, G. Golub, Optimal surface smoothing as ﬁlter design, Lecture Notes in Computer Science 1064 (1996) 283–292.

