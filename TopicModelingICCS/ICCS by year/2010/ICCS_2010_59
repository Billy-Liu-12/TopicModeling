Procedia Computer
Science
Procedia
Computer
Science
00 (2010)
1–987–95
Procedia
Computer
Science
1 (2012)

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Distributed computing in accelerator physics theory and technology
S. Andrianov1
Faculty of Applied Mathematics and Control Processes, Saint Petersburg State University,
198504, Saint Petersburg, Russian Federation

Abstract
This report is devoted to discussion of numerical and symbolic computing ratio in beam physics. We tray to draw
attention on basic conceptual and computational problems ﬁrst of all. It is known that the main problem in modern
computational beam physics connected with high performance computing realization. The most of used approaches
are not appropriate for computing using multiprocessing systems. Here we give some possible solutions, which based
on a matrix presentation of necessary information and modern information technologies.

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: Beam physics, Lie algebraic tools, symbolic, parallel and distributed computing

1. Introduction
Last year’s accelerator physics technology have made essential contributions to other branches of science and
technology. Among major applications it is necessary to mention electron microscopy, microprobes, charged-particlebeam lithography, ion implantation, isotope production, particle beams for precision hadron therapy, neutral-beam
heating of plasmas, synchrotron light sources, x-ray lithography, free-electron lasers and so on. There is a need to
mention possible future applications of these theory and technology include intense beams for inertial fusion, the
production of tritium, the production of nuclear “fuels”, the transmutation of nuclear waste, and other applications.
Nearest future possible discoveries can be include “quark-gluon” plasmas (i. e. Large Hadron Collider in CERN and
Project NICA — the Nuclotron accelerator in JINR), supersymmetric counterparts to the known existing particles,
and last the fundamental origin of mass. These and other experiments realized on linear and circular accelerators
have made remarkable discoveries about the basic nature of matter. The successful functioning of these accelerators
requires essential advancement in theory and technology leading to new particle accelerators capabilities. Using
powerful mathematical tools and computational technologies one can achieve physical instruments with undoubted
merits. The complexity of accelerator physics problems makes comprehensive use of modern analytical and numerical
methods and computational technologies and facilities. First, extensive computation of electric and magnetic ﬁelds is
required fast and highly accurate solution of 3-dimensional Maxwell equations using both on mesh and ﬁnite-element
methods. Second, “hard” computation is required to study long-term motion of single-particle orbits moving in these
electromagnetic ﬁelds. For example, in the CERN Large Hadron Collider “life time” of particles beam is comparable
with “life time” of the Universe. Third, the particle beam is an ensemble of enormous number of particles. Their
interaction (not only via space charge ﬁeld) leads to very complicated behavior of this ensemble, for example, some
1 sandrianov@yandex.ru

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.011

88

S.S.Andrianov
ProcediaComputer
ComputerScience
Science
(2012)
87–95
Andrianov // Procedia
00 1(2010)
1–9

2

of these collective eﬀects, such as space-charge eﬀects in high current machines, beam-beam eﬀects in both linear and
circular colliders. In particular, chaotic behavior of beam particles makes an impact signiﬁcant role in both dynamical
aperture forming and beam halo-chaos, which can cause excessive radioactivity of accelerators (so halo-chaos can
signiﬁcantly limits the accelerators emittance). By now signiﬁcant advances have been mainly made in the study
of single-particle dynamics. Corresponding methods are based on truncated power series, Lie algebraic methods,
diﬀerential algebra, symplectic integrators, normal forms, and so on. These methods require both extensive symbolic
and numerical computational methods and tools. The second direction in theoretical investigation is based on methods
which permit collective motion of beam particles. Some of single particle approaches are used in this case too, but
these methods have to be modiﬁed and adapted correspondingly. Unfortunately, primordial collective methods are not
developed so detailed. Here there we should point the two following directions. The ﬁrst of theses is based on adapting
of single-particle approaches for collective behavior of particles, and the second - on developing special methods, such
as the rms-envelopes method, the method of the distribution function combined with specially developed particle-incell methods. Finally, extensive computation is required to treat both random eﬀects and collective eﬀects involving
large numbers of particles. Random eﬀects include synchrotron radiation reaction, RF noise, power supply noise, and
ground motion. Collective eﬀects include those arising from electromagnetic wake-ﬁelds produced by particles as
they pass through various structures, space-charge eﬀects in high current machines, laser-plasma-beam eﬀects in laser
or charged-particle driven acceleration in plasmas, and beam-beam eﬀects in both linear and circular colliders. The
current calculation of these eﬀects often involves the use of specially written particle-in-cell codes. The process of
numerical simulation in beam physics plays a suﬃcient role. This role can be explained by following reasons:
• the complexity of the modern accelerators (modern accelerators are very complicated facilities both by devices
and by their interactions);
• the complexity of the beam evolution eﬀects (ﬁrst of all collective dynamics);
• the necessity to optimize control systems for similar machines (there is a need to solve multi-objective optimization problems containing conﬂicting objectives).
Let us formulate some necessary steps, which are imperative for any modeling process:
• analysis and development of the information structure of beam physics models;
• creation of mathematical models, which are adequate both physical models and computer tools;
• to range an order of particular problems in some hierarchy and to formulate corresponding connections.
Cumulative knowledge allows to formulate some demands to modeling methods and tools. First of all these methods
have to be universal and adaptive, secondly — these should be adjustable, and last the theoretical description must be
adjustable to any computational environment (for parallel, distributed computing, grid- and cloud-computing).
In the present paper we consider an approach based on so called matrix representation for Lie algebraic tools (see,
for example, [1, 2]). Let us enumerate some main features of this approach:
• the beam line propagator can be evaluated in the terms of two-dimensional matrices;
• these matrices can be evaluated using in numerical and symbolic forms;
• if it is necessary (for long time evolution) these matrices can be modiﬁed in order to guarantee the symplecticity
condition;
• the most forms of the beam description (envelope description, distribution function and so on) support the
matrix representation for beam propagator;
• the most part of conditions for optimal control problems can be presented in terms of corresponding matrix
elements;
• the matrix formalism admits brunching of computational process into several processes.

89
3

S. Andrianov
/ Procedia
S. Andrianov
/ ProcediaComputer
ComputerScience
Science 1
00(2012)
(2010) 87–95
1–9

2. Mathematical Backgrounds
Dynamics of beam particles can be presented in the form of Lie nonlinear transformation M in the form of timeordered exponential operator (see, for example, [3, 4])
⎛ t
⎞
⎜⎜⎜
⎟⎟⎟
⎜⎜⎜
⎟
(1)
M(t|t0 ) = T exp ⎜⎜⎜ LF(τ) dτ⎟⎟⎟⎟⎟ ,
⎝
⎠
t0

or the so called Magnus’s presentation [5]

(2)

M(t|t0 ) = exp LG(t|t0 ) ,

where LF(τ) is a Lie operator associated with some function F(τ) = F(τ; X, U, B), deﬁning the motion equation for
beam particles
dX
= F(t; X, U, B),
(3)
dt
where X ∈ X, U ∈ U, B ∈ B are a phase vector, a control functions vector and a control parameters vector respectively. Eqs. (1)–(3) deﬁne a dynamical system with control functions U = (U1 , . . . , Un )T (U j are electromagnetic ﬁeld
components, corresponding to an external (control) electromagnetic ﬁeld), control parameters B = (B1 , . . . , Bm )T (Bk
are parameters which can not veriﬁed during a work-session) and the operator M can be identiﬁed with the dynamical
system itself. The new vector-function G(t|t0 ) for the Lie operator LG(t|t0 ) can be calculated using the continuous
analogue of the well known CBH-formula [5].
2.1. The Additional Deﬁnitions and Concepts
The above introduced Lie transformation (beam propagator) M(t|t0 ) maps the initial phase manifold (occupied by
beam particles) M(t0 ) in a current manifold M(t). Naturally, that the every dynamical system has some qualitative
properties, and these properties should be preserved during the whole propagation process. Here we should mention
such properties as invariants (kinematic and dynamic, see, for example, [6]), symmetries. Especially, we should
mention the possibility to ﬁnd explicit solutions for some special types of dynamical systems [7].
In general case the retrieval of invariants and symmetries is very complicated problem. Taking into account
that usually the Lie map can be found using perturbation presentation we redeﬁne the conception of invariants and
symmetry [8]. In other words a researcher ﬁnds so called approximating invariants and symmetries. But, in the case of
kinematic invariants we should tell about explicit invariants (compare, for example, with symplectic property, which
is inherent in any hamiltonian system). For many problems of accelerators physics one have to accurately track the
orbits of beam particles during many thousand turns. Traditional numerical methods for motion equation integration
result in several artiﬁcial eﬀects, which are not allied to real behavior of beam particles. This urges us to use special
numerical methods which guarantee necessary conservation lows with necessary precision. First of all here we mean
the conservation problem for symplecticity property when one replace an exactly symplectic map (produced by any
Hamiltonian system) with approximating map.
2.2. The Matrix Formalism for the Problem
On the assumption that the function in Eq. (3) F(X, t) admits the expansion as a Taylor series F(X, t) =
we can rewrite required solution of Eq. (3) in the terms of matrices M1k :
X(t) = M(t|t0 ) ◦ X0 =

∞

M1k (t|t0 )X[k]
0 .

∞
k=0

P1k (t)X[k] ,

(4)

k=0

Here X[k] is the Kronecker power of the k-th order for the phase vector X[k] and P1k (t), M1k (t) are two-dimensional
matrices. Matrices M1k are named aberration matrices (matrices M1k accumulate all abberations of k-th order). The
main goal of the matrix formalism is to calculate these matrices up to some approximating order N [1]. This order

90

S.S.Andrianov
ProcediaComputer
ComputerScience
Science
(2012)
87–95
Andrianov // Procedia
00 1(2010)
1–9

4

usually is deﬁned taking into account information about used control elements (for example, usually for quadrupole
magnet lenses it is necessary to know M1k up to third or ﬁfth order).
The Dragt–Finn factorization for the Lie transformations (1) or (2) allows us to rewrite the exponential operator
as an inﬁnite product of exponential operators generated by corresponding Lie operators

HTk X[k] ,

M = . . . · exp{LH2 } · exp{LH1 } == exp{LV1 } · exp{LV2 } · . . . ,

(5)

VTk X[k]

where Hk =
Vk =
are homogeneous polynomials of k-th order. The vectors Hk or Vk can be calculated
with the help of the continuous analogue of the CBH- and Zassenhauss formulae and by using the Kronecker product
and Kronecker sum technique for matrices [2]. Moreover, using the matrix representation for the Lie operators one
can write a matrix representation for the Lie map generated by these Lie operators. Here we consider homogeneous
equations of particle motion in a reference orbit neighborhood. So, for any beam propagator one can write the
following matrix representation in the well known Poincar´e–Birkhoﬀ-Witt basis
M · X = M ◦ X∞ = (M11 M12 . . . M1k . . .)X∞ =

∞

M1k X[k] ,

(6)

k=1

where X∞ = (X X[2] . . . X[k] . . .)T , and the matrices M1k (solution matrices) can be calculated according to the recurrent
sequence of following formulas [2]:
Mk ◦ X[l] = exp{LGk } ◦ X[l] = X[l] +

∞

1
m!
m=1

m

⊕(( j−1)(k−1)+l) [m(k−1)+l]
Gm
X
,

(7)

j=1

where G⊕l = G⊕(l−1) ⊗ E + E[l−1] ⊗ G denotes the Kronecker sum of l-th order. The algebraical expressions similar
(7) are used for evaluation of aberration matrices up to an approximating order N. For this purpose a researcher has
to realized one of the concatenation procedures. For example, we can suggest the following expressions.
Let us introduce a notation M≤k = Mk ◦ Mk−1 ◦ . . . ◦ M2 ◦ M1 . Then we write for nonlinearities of the third order
3

M≤3 ◦ X = M11 X +

∞

m=2 k=1

Pk1
m
X[k(m−1)+1] +
k!

∞

∞

l=1 k=1

1 kl l (k+1) [2l+k+1]
.
X
P P
k!l! 2 3

(8)

Repeating described procedure we can evaluate M≤k ◦ X for any k with necessary calculation accuracy. But, as M≤k
is a truncated form of the map M (we use information about generating function up to k-th order only) then we have
to evaluate up to terms of k-th order for obtaining desired result for M≤k . So, we can write
M≤2 ◦ X ≈ M11 X + M12 X[2] , M12 = M11 P11
2 ,

[2]
11
M≤3 ◦ X ≈ M11 X + P11
2 X + + P3 +

1 21 [3]
= M11 X + M12 X[2] + M13 X[3] ,
P X
2! 2

M13 = M11 P11
3 +

1 21
P ,
2! 2

and so on. Well in the next we act step-by-step by operators Mk , k < m on the vector X. Here we have to keep terms
up to k-th order, and a result we get matrix representation of the beam propagator in the basis X, X[2] , . . . , X[k] . In
other words one can write the expression (6) up to some k-th order.
For some special problems one has evaluate above described procedures for a phase vector moment of k-th order
X[m] . Usage of the Lie map and Kronecker product properties we can proceeds necessary evaluations and write:
⎛
⎜⎜
M ◦ X[m] = (M ◦ X)[m] = ⎜⎜⎝⎜

∞
k=1

⎞[m]
⎟⎟
M1k X[k] ⎟⎟⎟⎠ =

...
k1 =1
km =1
k1 +...+km =m

=

M1k1 X[k1 ] ⊗ . . . ⊗ M1km X[km ] =

...
k1 =1
km =1
k1 +...+km =m

M1k1 ⊗ . . . ⊗ M1km X[m] =

...
k1 =1
km =1
k1 +...+km =m

Mml X[l] , (9)

91
5

S. Andrianov
/ Procedia
S. Andrianov
/ ProcediaComputer
ComputerScience
Science 1
00(2012)
(2010) 87–95
1–9

where Mml =

m
k1 +...+km =l
ki ≥1

i=1

M1ki , l ≥ m (compare with Eq. (6)).

For the inverse map M−1 : X → X0 = M−1 ◦ X one can compute the corresponding block-matrices using the
generalized Gauss’s algorithm. We must note here that one should evaluate the inverse matrix for M11 only. The
remaining block-matrices for the inverse matrix demand algebraic operations only.
As one can see, the starting point for all described evaluations are matrices P1k . Using these matrices (without their
content) one can compute (both in numerical and symbolic mode) aberration matrices M1k according the following
(or similar) formulae. Here we should mention that before symbolic or numerical evaluation a researcher must deﬁne
correlations between physical and their mathematical (in our case matrix) representation.
Here we should note that we can consider eq. (3) as a starting point for our beam evolution consideration in the
following form
∞
dX
P1k (t)X[k] .
(10)
= F(t; X, U, B) =
dt
k=1
If we presents the solution of (10) using (4), we can write
dX
=
dt

∞

P1k (t)X[k] .

(11)

k=1

Following to [2] one can write the solution of (11) in the following form:
X(t) =

∞

M1k (t|t0 )X[k]
0 ,

(12)

k=1

dMik (t|t0 )
=
dt

k
j=i

Pi j (t)M jk (t|t0 ), 1 ≤ i < k, Pi j = P1( j−i+1) P(i−1)( j−1) ,

11

M (t0 |t0 ) = E, Mkk (t0 |t0 ) = E[k] , M jk (t0 |t0 ) = O jk , ∀ j

k,

where E is an identity matrix, O jk — a null matrix of corresponding order. The equations (12) can be solved numerically up to necessary order of nonlinearities. This approach can be applied when independent variable t dependence
is enough complex and corresponding symbolic evaluation can not be produced.
3. Symplectiﬁcation and Invariants
It is known that symplectic integrators are very powerful tools implemented in most of the tracking codes in
accelerator physics. The property of area conservation is particularly suitable for integrating the equations of particle
motion over thousands and millions of turns for modern accelerators. The symplectic maps arise from Hamiltonian
dynamics, because these preserve the loop action. Thus, for example, the time t map of any Hamiltonian ﬂow is
symplectic, as is a Poincar´e return map deﬁned on a cross section. For example a circular particle accelerator (storage
ring or collider) has a sequence of accelerating and focusing elements that can be modeled by a composition of
symplectic maps.
The most popular approach for the dynamics of the particle is based on representing each magnet by a separate
Hamiltonian. Its ﬂow M be computed, i. e. the map linking the particle coordinates at the entrance, X(t0 ) and the
current, X(t): X(t) = M(t|t0 )X(t0 ). So the ﬂow of the full ring is then obtained by concatenating the ﬂows of each
single element of the ring. Above described matrix formalism is adapted to similar description.
3.1. Two Solution Schemes
Numerical integration algorithms play an essential role in investigation of the long term beam particle evolution,
stability of similar process, nonlinear nonintegrable Hamiltonian systems. Transfer maps generated by Hamiltonian
systems obey the symplectic condition, which can be in the following form
MT (t|t0 )J0 M(t|t0 ) = J0 , ∀ t ≥ t0 ,

(13)

92

where J0 =

S.S.Andrianov
ProcediaComputer
ComputerScience
Science
(2012)
87–95
Andrianov // Procedia
00 1(2010)
1–9

O
−E

6

E
is so called canonical symplectic matrix and M denotes the Jacobian matrix:
O
M(t|t0 ) =

∂
M(t|t0 ) ◦ X0 ,
∂XT0

(14)

Unfortunately, standard numerical integration methods are not symplectic and this violation of the symplectic condition (14) can lead to some false eﬀects, for example, spurious chaotic, dissipative behavior and so on.
There are several approaches devoted to development of numerical methods preserving some qualitative structure,
which inheres to the dynamical system under study. These schemes will be noted as conservative integration schemes.
It is necessary to distinguish two similar type of integration schemes.
The ﬁrst direction of beam propagator evaluation is based on universal exponential identities or relations among
Lie algebra, because these maps have all requisite properties. But its numerical realization losses these properties,
and it is necessary to restore desired properties for a numerical variant of this map too. In this report we take after the
second approach.
The second is based on universal schemes, such as diﬀerent symplectic variants for traditional numerical integration schemes (see, for example, works by J.M. San-Serna [9] and others).
As mentioned above an beam evolution is deﬁned completely by sequence of aberration matrices M1k . But for
practical calculations we have to break oﬀ for some aberration order N. After this manipulation the resulting map —
the restricted map MN losses the symplectic property, which should be recovered. In another words we should replace
the full map M, generated by sequence of matrices M11 , M12 , . . . , M1k , . . . on reduced map MN , generated by ﬁnite

sequence M11 , M12 , . . . , M1N .
So we have two approaches for map evaluations. The ﬁrst is based on symbolic presentation for M1k , which
can be found for some restricted models of P1 j . This set of models is deﬁned by functions family, for which there
are symbolic solutions, appropriate for fringe ﬁeld distribution. Among them the most familiar is a step function.
The symbolic presentation for aberration matrices M1k permit ones to investigate the beam propagator parametrically.
This property is especially useful for optimization problems (see, i. g. [10]). The second approach based on numerical
solution of diﬀerential equations for aberration matrices (see (14)), which can evaluated for arbitrary forms of fringe
ﬁelds in control elements. Here we loss not only the ﬂexibility symbolic-speciﬁc, but possibility to keep corresponding
solutions in data knowledge as LEGO-objects [11].

3.2. Symplectiﬁcation Procedures
Several symplectic integration methods have been proposed in the literature (see, for example, [12]–[14]). A
concept of invariants allows to use the tools of symmetry theory permitting to write any invariant property as an
appropriate symmetry condition [1].
In this paper we shortly discuss a problem of symplectiﬁcation procedure for restricted map, generated by hamiltonian dynamical systems. For this purpose let us consider the symplectic condition (13) for restricted matrix presentation
N

MN X0 =

M1k X[k]
0 .

(15)

k=1

In contrast to full series (see (12)) the symplectic condition (13) applied to a short map MN will be broken. As an
example let us consider one dimensional motion equations with second order nonlinearities
11
X(t) = M11 X0 + M12 X[2]
X0 + Q12 X[2]
0 =M
0 , dim X = 2.

(16)

The symplectic condition leads to linear algebraic homogeneous equations for matrix elements mkij : M1k = mkij .
Note that the matrix M11 in (16) is symplectic automatically, and following to [2] one can evaluate these equations

93
7

S. Andrianov
/ Procedia
S. Andrianov
/ ProcediaComputer
ComputerScience
Science 1
00(2012)
(2010) 87–95
1–9

and write for the matrix Q[2] = qi j the following:

Q12

⎡
q12
⎢⎢⎢ q11
⎢⎢⎢
⎢⎢⎢ q21
q22
⎢
= ⎢⎢⎢⎢
⎢⎢⎢ q31
q32
⎢⎢⎢
⎣
q32 /2 2 q33

q13

q14

q15

q16

q17

q18

q19

q23

q15

q25

q17

q27

q19 /2

2 q110

q33

−2 q11

−2 q21

−q12

−q22

q14 /2

−q15

q43

−q12

−q22

q32 /2

2 q33

q43

−q12

⎤
q110 ⎥⎥
⎥⎥⎥
⎥
q210 ⎥⎥⎥⎥
⎥⎥⎥ .
⎥
q25 /2 ⎥⎥⎥⎥
⎥⎥⎦
−q22

Similar formulas can be obtained for any order of nonlinearities N and dimension of the phase vector X. In
addition these relations decrease the computational costs, indeed in the case of dim X = 4 for 40 elements of Q12 we
receive 24 restrictions, and for 80 elements for Q13 — 60 restrictions of type (3.2), see [15].
3.3. Kinematic and Dynamic Nonlinear Invariants
Any numerical numerical computational process leads to distortion of qualitative properties (for example, some
dynamic and kinematical invariants [6]). These quantities can be evaluated using, for example, Casimirs operators.
According to this theory for Lie groups, generated by dynamical systems, we can construct invariants using special
forms and use these data for computational process controlling [16].

Figure 1: The total cycle of the computational experiment.

The basic types of computational processes are presented in Fig. 1. All presented modules not only are necessary
for correct realization of computational experiments, but give a researcher eﬀective tools for these experiments setup.
Usage of symbolic algebra tools give us ﬂexibility and eﬀectiveness of the computational process.

94

S.S.Andrianov
ProcediaComputer
ComputerScience
Science
(2012)
87–95
Andrianov // Procedia
00 1(2010)
1–9

8

4. Parallel and Distributed Computing in Accelerator Physics
The choice of a matrix formalism as the basic tool for the beam evaluation process allows the use of databases
of matrix objects prepared in symbolic and/or numerical modes. Moreover this aids the construction of eﬀective numerical and symbolic codes for computational experiments. Here we describe two concepts: parallel and distributed
computing.
The ﬁrst type of computational process involves the implementation of homogeneous operations on a set of homogeneous processors. In the second operations having diﬀerent structure can be computed using a heterogeneous
set of processors. This requires us to distinguish two types of computational operations: the ﬁrst of them corresponds
to matrix operations and the second to computational ﬂows. This separation allows us to distribute a computational
experiment over several clusters. Every cluster solves the problems intrinsic to one of the ﬂows. This approach has
a bottleneck problem connected with the synchronization of these ﬂows. This problem can be solved using a base
of homogeneous mathematical tools — the matrix formalism for Lie methods. The matrix form of practically all
required objects allows us to realize parallel computing in a natural way. First of all, parallel computing is realized
in the numerical stage when the matrix presentation of the current map is built. The second parallelization process is
connected with the phase beam portrait construction stage. For this stage there are several possible approaches (see,
for example, [2].

Figure 2: The types of basic calculational ﬂows.

Additional computational ﬂows are connected with the next two procedures. The ﬁrst of them is devoted to visualization of all necessary information including auxiliary procedures (for example, analysis of images using diﬀerential
geometry methods) and space-charge force computing. Here we can use the methods proposed in our previous publications (see, for example, [17]).

S. Andrianov
/ Procedia
S. Andrianov
/ ProcediaComputer
ComputerScience
Science 1
00(2012)
(2010) 87–95
1–9

95
9

5. Realization of Computer Experiments
Numerical simulation was realized using special object-oriented codes. These codes were generated using Fortran
90/High Performance Fortran and MPI codes. Most matrix objects were prepared in advance in an appropriate symbolic form. For this purpose we used the symbolic mathematical package Maple V. The computational ﬂows were
computed on separate clusters with the necessary synchronization of related results. Such computational procedures
have the property of scalability, which allows carrying out the computation on computer systems with any arbitrary
number of processors. The required number of processors is determined for each particular problem. Moreover MPI
codes give code developers ﬂexibility to combine diﬀerent program units, and to organize the required architecture
of the program complex. This program complex was tested on the cluster systems in the Saint-Petersburg State
University. For testing problem we considered the slow extraction problem for circular accelerator. The numerical
computations based on the above mentioned approach demonstrated suﬃciently eﬀectiveness from computational
point of view and allowed to account for some unwanted eﬀects (for necessary details, see [2]).
In the future this approach will be extended to a clusters block. This will permit to solve weakly and hardly
connected problems. The human–machine interface has two steps. The ﬁrst (lowest) was designed to carry out the
physical and mathematical operations, that are necessary for practical beam physics problems. The second distributes
computational tasks among computers. In the future a special interface for distant administration will be created.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]
[15]
[16]
[17]

Andrianov S.N., in: AIP Conf. Proc. 1997. N 391. NY, P, 355–360.
Andrianov S.N. Dynamical Modeling of Control Systems for Particle Beams. SPbSU, Saint Petersburg, 2004 (in Russian).
Agrachev A.A., Gamkrelidze R.V. Matematicheskii Sbornik, 1978. Vol. 107(149). P. 467–532 (in Russian).
Dragt A.J. AIP Conf. Proc., No 87. 147–313 (1987).
Magnuss W, in: Comm. Pure Appl. Math. Vol. 7. No 4 (1954).P. 649–679
A.J. Dragt, R.L. Gluckstern, F. Neri, G. Rangarajan, in: Lectures Notes in Physics, No. 343. Berlin: Springer, P. 94–121 (1989).
S.N. Andrianov, in: Proc. Fifth European Particle Accelerator Conference EPAC 96. SITGES (Barcelona, Spain). Barselona, 1996. P. 998–
1000.
S.N. Andrianov, in: Mathematics and Computers in Simulation. Vol. 57. Issue 3–5, (2001), P. 147–154.
Sanz-Serna J.M., Calvo M. Numerical Hamiltinian Problems. London, 1994.
Andrianov S.N., Edamenko N., Chernyshev A., Tereshonkov Yu. EPAC08, Genoa, Italy, P. 2969-2971.
Andrianov S.N., in: Proc. Eight European Particle Accelerator Conference — EPAC’2002, Paris (France), 2002. P. 1607–1609.
Ruth R.D., in: IEEE Trans. Nucl. Sci. Vol. 30, 2669 (1983).
Yoshida H., in: Phys. Lett. Vol. A 150, 262 (1990).
´ Phys. in: AIP Conf. Proc. N 184. Part 1. N.Y., 2 (1989).
Forest Et.
Andrianov S.N., in: Mathematics and Computers in Simulation. Vol. 57. Issue 3–5, (2001), P. 139–145.
Andrianov S.N., Mathematics and Computers in Simulation. Vol. 57. Issue 3–5, (2001), P. 147–153.
Andrianov S.N., Proc. Seventh European Particle Accelerator Conference — EPAC’2000, Vienna (Austria), 2000, 1459–1461.

