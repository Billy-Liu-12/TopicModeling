Procedia Computer Science 1 (2012) 1941–1950

Procedia Computer

www.elsevier.com/locate/procedia
Science
Procedia Computer Science 00 (2010) 1–10

International Conference on Computational Science, ICCS 2010

A sub-cell force-based framework to derive cell-centered
Lagrangian schemes on two-dimensional polygonal grids
Pierre-Henri Mairea,∗
a UMR

CELIA, Universit´e Bordeaux I, 351 Cours de la Lib´eration, 33 405 Talence, France

Abstract
We present a general sub-cell force-based formalism to derive cell-centered schemes for two-dimensional Lagrangian hydrodynamics on unstructured grids. For a general polygonal grid, the discrete equations that govern
the time rate of change of volume, momentum and total energy are obtained by means of a control volume formulation of the gas dynamics equations written using a cell-centered placement of the physical variables. Numerical
ﬂuxes are expressed in terms of sub-cell forces. Nodal velocity and sub-cell forces are computed consistently with
the cell volume variation through the use of a node-centered approximate Riemann solver. These cell-centered
Lagrangian schemes are conservative for momentum and total energy and satisfy a local semi-discrete entropy
inequality.
Keywords: Lagrangian hydrodynamics, cell-centered scheme, Generalized Riemann problem, compressible
ﬂow, high-order ﬁnite volume methods, unstructured mesh, sub-cell force
c 201247.11.Df,
⃝
Published47.10.ab,
by Elsevier
Ltd. Open access under CC BY-NC-ND license.
PACS:
47.40.Nm
2000 MSC: 76N15, 65M06

1. Introduction
Numerical schemes for Lagrangian hydrodynamics consist of moving mesh discretizations of the gas dynamics
equations. In this particular formalism, a computational cell moves with the ﬂuid velocity and is characterized by a
constant mass. Thus, Lagrangian methods can capture contact discontinuity sharply in multi-material ﬂows. However, in the Lagrangian framework, one has to discretize not only the gas dynamics equations but also the vertex
motion in order to move the mesh. Consequently, the numerical ﬂuxes of the physical conservation laws must be
determined in a compatible way with the vertex velocity so that the geometric conservation law (GCL) is satisﬁed,
namely the time rate of change of a Lagrangian volume has to be computed coherently with the node motion. This
critical requirement is the cornerstone of any Lagrangian multi-dimensional scheme. Nowadays, cell-centered ﬁnite volume schemes [1, 2, 3] that fulﬁll this GCL compatibility requirement seem to be a promising alternative to
the usual staggered ﬁnite diﬀerence discretizations [4] for compressible Lagrangian hydrodynamics. These cellcentered Godunov-type discretizations exhibit not only the good property of being naturally conservative, but also
they do not require the use of an ad hoc artiﬁcial viscosity since the numerical dissipation built in the approximate
Riemann solver automatically converts kinetic energy into internal energy through shock waves. Moreover, these
cell-centered schemes allow a straightforward implementation of conservative remapping methods when they are
used in the context of the Arbitrary Lagrangian Eulerian (ALE) strategy.
∗ Corresponding

author
Email address: maire@celia.u-bordeaux1.fr (Pierre-Henri Maire)
URL: www.celia.u-bordeaux1.fr/∼maire (Pierre-Henri Maire)

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.217

1942

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950

The aim of the present work is to develop a general formalism to derive cell-centered schemes for twodimensional Lagrangian hydrodynamics on unstructured grids that meet the compatibility GCL requirement. For
a general polygonal grid, the discrete equations that govern the time rate of change of volume, momentum and
total energy are obtained by means of a control volume formulation of the gas dynamics equations written using
a cell-centered placement of the physical variables. The motion of the vertices of the grid is deduced from the
trajectory equations, once the vertex velocity is deﬁned. The general formalism that we have developed is based
on the three following crucial steps.
• GCL compatibility requirement: the volume ﬂux is expressed as a function of the vertex velocity by
computing the time rate of change of the volume of a polygonal cell.
• Sub-cell force discretization: in each cell, momentum ﬂux is written as the summation of the sub-cell
forces that are acting at each vertex of the cell. We note that the sub-cell force concept has been ﬁrstly
introduced in staggered discretization [4] to derive compatible conservative staggered schemes. In the
present work, the sub-cell force corresponds to the integral of the pressure gradient over a sub-cell, knowing
that a sub-cell is the quadrilateral obtained by joining the cell center, a particular vertex and the midpoints
of the two edges impinging at this vertex. The total energy ﬂux is simply deduced from the momentum ﬂux
by dot-multiplying sub-cell force by its corresponding vertex velocity.
• Thermodynamic consistency and conservativity: to achieve the discretization, it remains to construct an
approximation of the sub-cell force and to compute the vertex velocity. The former task is completed by
deriving an expression of the sub-cell force that is thermodynamicly consistent. Namely, after computing
the time rate of change of entropy within a cell using the semi-discrete gas dynamics equations, we deduce a
general way of writing the sub-cell force so that a cell entropy inequality is satisﬁed. In this manner, the subcell force writes as a pressure contribution plus a tensorial viscous contribution, which is proportional to the
diﬀerence between the cell-centered and the vertex velocities. To satisfy the second law of thermodynamics,
the local 2 × 2 sub-cell tensor involved in the viscous part of the sub-cell force must be symmetric positive
deﬁnite. This tensor is the cornerstone of the scheme. Some particular expressions of this tensor are given,
they allow to recover known schemes such as those described in [1] and [2], and to make the link with a
node-centered approximate Riemann solver. Finally, the vertex velocity is computed by invoking the global
conservation of momentum and total energy. This last statement amounts to write that the summation of
the sub-cell forces over the sub-cells surrounding a vertex is equal to zero. This balance equation leads to a
2 × 2 linear system whose solution always exists and uniquely determines the vertex velocity.
The high-order extension of this general cell-centered scheme is constructed using the non-trivial two-dimensional
extension of the Generalized Riemann Problem (GRP) methodology [5, 3] in its acoustic version. Numerical
results on representative compressible ﬂuid ﬂows are presented to demonstrate the accuracy and the robustness of
these schemes.
2. Governing equations
Let D be an open set of R2 , ﬁlled with an inviscid ﬂuid an equipped with the orthonormal frame (0, X, Y) with
the orthonormal basis (eX , eY ). We also deﬁne the unit vector eZ = eX × eY . In Lagrangian form, using a control
volume which moves with the ﬂuid velocity, the compressible gaz dynamics equations write
d
dt
d
dt
d
dt
d
dt

ρ dV = 0,

(1a)

V(t)

V(t)

dV −

S (t)

U · N dS = 0,

ρU dV +

PN dS = 0,

(1c)

PU · N dS = 0.

(1d)

S (t)

V(t)

ρE dV +
V(t)

(1b)

S (t)

Here, V(t) is the moving control volume and S (t) its boundary surface, whose unit outward normal is N. The
variables ρ, U, P and E denote the density, velocity, pressure and speciﬁc total energy of the ﬂuid. Equations
(1a)-(1d) express the conservation of mass, volume, momentum and total energy. The second equation expresses
2

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950
p+

1943

N pp+
Lpp+

p

Ωc
Lp− p

N p− p

p−

Figure 1: Notation for a polygonal cell.

the time rate of change of the volume of the ﬂuid and is often named Geometric Conservation Law (GCL). It is
strongly linked to the trajectory equation
d
X = U(X(t), t), X(0) = x,
(2)
dt
where X = X(t) is the position vector of a material point at time t > 0, which was initially located at x.
The thermodynamic closure of the set of Eq. (1) is obtained by means of an equation of state (EOS) which
reads P = P(ρ, ε), where ε = E − 12 U 2 denotes the speciﬁc internal energy.
3. Compatible cell-centered discretization
We discretize the previous set of equations over a domain which is paved using a set of polygonal cells without
gaps or overlaps. Let us introduce the notation and the assumptions that are necessary to develop our cell-centered
discretization.
3.1. Notation and assumptions
Each polygonal cell is assigned a unique index c and is denoted by Ωc (t). A generic point (vertex) is labelled
by the index p, its corresponding position vector is X p . For a cell c, we introduce the set P(c) which is the
counterclockwise ordered list of points of cell c. Conversely, for a given point p, we introduce the set C(p)
containing the cells that surround point p. Being given p ∈ P(c), p− and p+ are the previous and next points with
respect to p in the ordered list of vertices of cell c. The length and the unit outward normal related to the edge
[p, p+ ] are L pp+ and N pp+ , refer to Fig. 1. The control volume formulation (1) applied to the polygonal cell Ωc (t)
leads to
d 1
mc ( ) −
U · N dS = 0,
(3a)
dt ρc
∂Ωc (t)
d
mc Uc +
PN dS = 0,
(3b)
dt
∂Ωc (t)
d
mc Ec +
PU · N dS = 0.
(3c)
dt
∂Ωc (t)
Here, ∂Ωc (t) is the boundary of the cell Ωc (t) and mc denotes the mass of the polygonal cell, which is constant
according to (1a). For a ﬂow variable φ, we have deﬁned its mass averaged value over the cell Ωc (t) as
φc =

1
mc

ρφ dV.
Ωc (t)

We notice that the ﬁrst equation corresponds to the GCL since mc = ρc Vc where Vc is the volume of cell c. We have
obtained a set of semi-discrete evolution equations for the primary variables ( ρ1c , Uc , Ec ) whose thermodynamic
closure is given by the EOS, Pc = P(ρc , εc ) where εc = Ec − 12 Uc 2 . The motion of the grid is ruled by the
semi-discrete trajectory equation written at each point
d
X p = U p (X p (t), t), X p (0) = x p .
(4)
dt
To achieve the discretization, it remains not only to compute the numerical ﬂuxes related to volume, momentum
and total energy but also to determine the nodal velocity to compute the grid motion.
3

1944

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950
p+

N pp+

LpcN pc

Lpp+

Up
p
N p− p

Ωc
Lp− p

p−

O

Figure 2: Triangulation of the polygonal cell Ωc .

3.2. Geometric Conservation Law compatibility
As mc = ρc Vc , Eq. (3a) rewrites
d
Vc =
dt

∂Ωc (t)

U · N dS .

(5)

This equations states that the time rate of change of the cell volume, Vc , must be equal to the volume swept by the
element boundary during its displacement with the ﬂow velocity. Assuming that the volume Vc (t) in the left-hand
side can be computed exactly, this amounts to requiring the exact computation of the volume ﬂux in the righthand side also. In this manner, we obtain a compatible discretization of the volume ﬂux. Using the triangulation
displayed in Fig. 2, the polygonal cell volume writes
Vc (t) =

1
2

(X p × X p+ ) · eZ .

(6)

p∈P(c)

We remark that the volume is expressed as a function of the position vectors of its vertices. Time diﬀerentiation
of Eq. (6) leads to
d
1
Vc =
(L p− p N p− p + L pp+ N pp+ ) · U p .
dt
2
p∈P(c)
Here, we have used the trajectory equation (4), i.e. dtd X p = U p and the fact that the above summation is cyclic.
For sake of conciseness, we set
1
L pc N pc = (L p− p N p− p + L pp+ N pp+ ),
(7)
2
where N2pc = 1. It turns out that the corner vector, L pc N pc , is the fundamental geometric object that allows to
deﬁne uniquely the time rate of change of cell volume as
d
Vc =
dt

p∈P(c)

L pc N pc · U p .

(8)

Corner vector, L pc N pc , satisﬁes the fundamental geometrical identity
L pc N pc = 0,

(9)

p∈P(c)

which is equivalent, by deﬁnition (7), to the well know result that the summation of the outward normals to a
closed polygonal contour is equal to zero. This also involves that the volume of a Lagrangian cell moving in a
uniform ﬂow does not change. We claim that with this purely geometric derivation we have completely deﬁned
the volume ﬂux. Moreover, this deﬁnition is by construction compatible with mesh motion. We note that the
fundamental role played by the corner vector has been recently rediscovered in [6].
3.3. Sub-cell force-based discretization
It remains to discretize momentum and total energy equations. To this end, we utilize the fundamental concept
of sub-cell force initially introduced in [4] in the context of staggered discretization. Let us introduce some
notation. Being given a polygonal cell, Ωc , for each vertex p ∈ P(c), we deﬁne the sub-cell Ω pc by connecting the
4

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950

1945

p+

p
Ωpc

Ωc
p−
Figure 3: Sub-cell Ω pc related to polygonal cell Ωc and point p.

centroid of Ωc to the midpoints of edges [p− , p] and [p, p+ ] impinging at node p, refer to Fig. 3. In two dimensions
the sub-cell, as just deﬁned, is always a quadrilateral regardless of the type of cells that compose the underlying
grid. Using the sub-cell deﬁnition, cell Ωc and its boundary ∂Ωc can be decomposed as
Ω pc ,

Ωc =

∂Ωc =

p∈P(c)

p∈P(c)

∂Ω pc ∩ ∂Ωc .

(10)

This decomposition allows to rewrite the momentum ﬂux as a summation of contributions coming from each
sub-cell boundary
PN dS =
∂Ωc

PN dS .
p∈P(c)

∂Ω pc ∩∂Ωc

Hence, we deﬁne the sub-cell force related to cell c and point p
F pc =

PN dS .

(11)

∂Ω pc ∩∂Ωc

This deﬁnition enables us to rewrite momentum equation (3b) as
mc

d
Uc +
F pc = 0,
dt
p∈P(c)

which is the Newton law applied to a particle of mass mc moving with velocity Uc . We also use the sub-cell-based
decomposition to write the total energy ﬂux

∂Ωc

PU · N dS =

p∈P(c)

∂Ω pc ∩∂Ωc

PU · N dS .

The sub-cell contribution to the total energy ﬂux is expressed in terms of sub-cell force Fcp using the approximation
⎛
⎞
⎜⎜⎜
⎟⎟
PU · N dS = ⎝⎜
PN dS ⎟⎠⎟ · U p
∂Ω pc ∩∂Ωc

∂Ω pc ∩∂Ωc

= F pc · U p .

Hence, total energy equation (3c) rewrites
mc

d
Ec +
F pc · U p = 0.
dt
p∈P(c)

This leads to the mechanical interpretation that the time variation of total energy results from the summation over
the sub-cell of the rate of work done by sub-cell force F pc . Combining the previous results, system (3) becomes

5

1946

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950

mc

d 1
( )−
L pc N pc · U p = 0,
dt ρc
p∈P(c)

(12a)

mc

d
Uc +
F pc = 0,
dt
p∈P(c)

(12b)

mc

d
Ec +
F pc · U p = 0.
dt
p∈P(c)

(12c)

The cell-centered discrete unknowns ( ρ1c , Uc , Ec ) satisfy a system of semi-discrete evolution equations wherein the
numerical ﬂuxes are expressed as functions of the nodal velocity, U p , and the sub-cell force F pc . Let us recall
that thermodynamic closure is given by the EOS, Pc = P(ρc , εc ) where εc = Ec − 12 Uc 2 and grid motion is
governed by the semi-discrete trajectory equation (4). To complete the discretization, it remains to compute the
nodal velocity and construct an approximation of the sub-cell force. This goal will be achieved by investigating
the properties of the scheme regarding its thermodynamic consistency and its conservativity for momentum and
total energy.
3.4. Thermodynamic consistency
We derive a general form of the sub-cell force requiring that the semi-discrete scheme (12) satisﬁes a semidiscrete entropy inequality. This entropy inequality will ensure that kinetic energy will be dissipated into internal
energy through shock waves. Thanks to Gibbs formula, the time rate of change of entropy within cell c writes
mc T c

d
d
d 1
σc =mc
εc + Pc
dt
dt
dt ρc
d
d 1
d
Ec − Uc · Uc + Pc
=mc
dt
dt
dt ρc

.

where σc is the speciﬁc entropy and T c the temperature in cell c. By substituting (12a) and dot-multiplying (12b)
by Uc we get
d
mc T c σc = −
F pc · (U p − Uc ) − L pc Pc N pc · U p .
dt
p∈P(c)
Recalling that the corner vector L pc N pc satisﬁes the geometrical identity (9), the time rate of change of entropy
has the ﬁnal form
d
(13)
mc T c σc = −
F pc − L pc Pc N pc · (U p − Uc ) .
dt
p∈P(c)
To satisfy the second law of thermodynamics the right-hand side of Eq. (13) must be positive. A suﬃcient condition to obtain this consists in setting
F pc = L pc Pc N pc − M pc (U p − Uc ),

(14)

where M pc is a sub-cell-based 2 × 2 matrix which must satisfy the following properties
• M pc is symmetric, i.e. Mtpc = M pc ,

• M pc is positive semideﬁnite, i.e. M pc U · U ≥ 0,

∀U ∈ R2 .

The physical dimension of M pc corresponds to a length times a density times a velocity, i.e. M pc = L ρ U.
Moreover, its deﬁnition must be compatible with the principle of material frame-indiﬀerence [7], namely it should
not depend on the external frame of reference considered. In a nutshell, M pc is invariant by translation and
transforms as M pc = RM pc Rt for a rigid rotation R. By substituting (14) into (13) we obtain the entropy inequality
mc T c

d
σc =
dt

p∈P(c)

M pc U p − Uc · (U p − Uc ) ≥ 0,

(15)

as the right-hand side is a positive semideﬁnite quadratic form. We remark that entropy production within cell
c is directly governed by the sub-cell matrix M pc and the velocity jump between the nodal and the cell-centered
velocity, ΔU pc = U p − Uc .
6

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950

1947

3.5. Conservativity
After having determined a generic form of the sub-cell force that fulﬁlls the second law of thermodynamics
requirement, we investigate the conservativity of our cell-centered scheme regarding total energy and momentum.
Total energy over the whole grid is deﬁned as E(t) =
mc Ec (t), its conservation, without taking into account
boundary conditions, involves

d
dt E

c

= 0. By deﬁnition of total energy, this last equation rewrites
mc
c

d
Ec = 0.
dt

(16)

Substituting the speciﬁc total energy equation (12c) into (16) yields the balance of total energy over the entire
domain
F pc · U p = 0.
c

p∈P(c)

Interchanging the order in the double sum in the left-hand side yields
⎛
⎞
⎜⎜⎜
⎟⎟⎟
⎜⎜⎝⎜
F pc ⎟⎟⎠⎟ · U p = 0,
p

(17)

c∈C(p)

where C(p) is the set of cells surrounding point p. Knowing that the total energy balance (17) must hold
whatever point velocity is, total energy conservation is ensured if and only if
∀ p,

F pc = 0.

(18)

c∈C(p)

It is straightforward to check that the previous condition also lead to momentum conservation. Hence, conditions
(18) turns out to ensure not only total energy but also momentum conservation. Moreover, as we shall show it in
next section, it also provides a vectorial equation that enables us to determine the nodal velocity.
4. Node-centered solver for the grid velocity
Remembering that the general sub-cell force form reads F pc = L pc Pc N pc − M pc (U p − Uc ), where M pc is a
2 × 2 symmetric positive semideﬁnite matrix, and using the conservativity condition (18), we are now in position
to write the 2 × 2 system that solves the nodal velocity U p .
4.1. Abstract formulation
In the general case this system writes
∀ p,

MpU p =

L pc Pc N pc + M pc Uc ,

(19)

c∈C(p)

where M p denotes the 2 × 2 node-centered matrix deﬁned as M p =

M pc . As M pc is symmetric positive
c∈C(p)

semideﬁnite, M p also shares the same property. To enforce the solvability of Eq. (19), we assume that the matrix
M pc is symmetric positive deﬁnite. This leads to a M p matrix which is always invertible. Therefore, provided
that the M pc matrix is deﬁned, the nodal velocity, U p , is always uniquely determined by inverting equation (19).
Concerning the boundary conditions implementation, let us note that in Lagrangian formalism we have to consider
only two types of boundary conditions as either the pressure or the normal component of the velocity is prescribed.
For a detailed presentation of this topic refer to [2].
At this point, we can conclude that the sub-cell force formalism provides a general framework that allows to
construct a family of compatible cell-centered schemes that share good physical properties such as thermodynamic
consistency and conservativity. The numerical ﬂuxes and the nodal velocity are computed in a compatible manner
by means of a node-centered solver. The key point in designing these schemes lies in constructing the corner matrix
M pc . We shall investigate this latter point in next paragraphs, by presenting two examples of such a construction
and making the link with approximate Riemann solvers.

7

1948

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950

p+

N+
pc
L+
pc
Π+
pc
Π−
pc

Ωc

Up
p
L−
pc

(ρc, U c, Pc)

N−
pc

p−
Figure 4: Notation related to Maire scheme at corner pc for a polygonal cell.

4.1.1. Despr´es-Mazeran scheme
This scheme, which has been presented in [1], is rewritten by means of sub-cell force-based approach by
introducing one nodal pressure, Π pc , at each corner pc. This yields a subcell -force which reads
FDM
pc = L pc Π pc N pc .

(20)

The corner pressure, Π pc , is expressed in terms of the cell pressure and the velocity jump between cell and point
velocity, through the use of Riemann invariant along the corner normal direction N pc
Π pc − Pc = zc (U p − Uc ) · N pc ,

(21)

where zc = ρc ac is the acoustic impedance. Combining (20) and (21), we obtain the expression of the sub-cell
force associated to the Despr´es Mazeran scheme
FDM
pc = L pc Pc N pc − zc L pc (N pc ⊗ N pc )(U p − U c ).

(22)

From the comparison between this last expression and the generic form of the sub-cell force (14), we deduce that
the corner matrix corresponding to Despr´es Mazeran scheme is given by
MDM
pc = zc L pc (N pc ⊗ N pc ).

(23)

We note that MDM
pc is proportional to the orthogonal projection onto direction N pc . It is easy to check that this 2 × 2
matrix is symmetric positive but only semideﬁnite as its kernel is spanned by N⊥pc , where N⊥pc denotes the unit
vector directly orthogonal to N pc . Entropy production associated to this scheme is given by (refer to Eq. (15))
mc T c

d DM
σ =
dt c

p∈P(c)

MDM
pc U p − U c · (U p − U c ).

We point out that sub-cell entropy production can go to zero for ﬂows wherein (U p −Uc ) ⊥ N pc . This fact probably
explains why the Despr´es Mazeran scheme can exhibit, for certain ﬂows, severe numerical instabilities such as
hourglass modes, refer to [6, 8]. Moreover, the fact that MDM
pc is only semideﬁnite can lead to singularities in the
boundary conditions implementation, which are solved by an ad hoc treatment [6].
4.2. Maire scheme
This scheme, which has been presented initially in [2] and extended in [3, 9] is rewritten by means of a sub-cell
force-based approach by introducing two nodal pressures, Π−pc , Π+pc , per corner pc. For each corner, we also deﬁne
the half-edge outward normals L−pc N−pc and L+pc N+pc , where N−pc and N+pc are unit outward normals to edges [p− , p],
[p, p+ ] and L±pc are one half of the length of the corresponding edges, refer to Fig. 4. Simple geometrical argument
shows that L pc N pc = L−pc N−pc + L+pc N+pc . With this notation, sub-cell force writes
− −
−
+ +
+
FM
pc = L pc Π pc N pc + L pc Π pc N pc .

8

(24)

1949

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950
1

1

0.9

0.9
0.8

0.8

0.7
0.7
0.6
0.6
0.5
0.5
0.4
0.4
0.3
0.3

0.2

0.2

0.1

0.1

0
0

0.2

0.4

0.6

0.8

1

0

0.2

0.4

x

0.6

0.8

1

x

Figure 5: Sod shock tube at t = 0.2. Numerical versus analytical solution for density (left) and velocity (right).

The two nodal pressures are expressed as functions of the cell pressure and the jump between cell and point
velocity, by means of two Riemann invariants along each half-edge normals directions
Π−pc − Pc = zc (U p − Uc ) · N−pc ,

Π+pc

− Pc = zc (U p − Uc ) ·

N+pc .

(25a)
(25b)

Combining (24) and (25), we obtain the expression of the sub-cell force associated to Maire scheme
−
−
−
+
+
+
FM
pc = L pc Pc N pc − zc L pc (N pc ⊗ N pc ) + L pc (N pc ⊗ N pc ) (U p − U c ).

(26)

From the comparison between this last expression and the generic form of the sub-cell force (14), we deduce that
the corner matrix corresponding to Maire scheme is given by
−
−
−
+
+
+
MM
pc = zc L pc (N pc ⊗ N pc ) + L pc (N pc ⊗ N pc ) .

(27)

−
+
We realize that M M
pc is always symmetric positive deﬁnite provided that N pc and N pc are not colinear. This situation
can exceptionally occur at some corners for degenerate polygonal cells containing hanging nodes. However, one
M
can show that the M M
p matrix which results from the sum of the M pc is always symmetric positive deﬁnite and thus
M
invertible. Moreover, due to the deﬁnite character of the M pc matrix, entropy production is always positive and
can go to zero only for uniform ﬂows. Up to our knowledge, this scheme does not exhibit hourglass instabilities
and thus does not necessitate any hourglass ﬁlter.

5. Numerical results
Numerical results presented in this section are performed in Cartesian geometry using Maire scheme, refer to
Sec. 4.2. The materials are characterized by a perfect gaz equation of state which writes P = (γ − 1)ρε where γ
stands for the polytropic index of the gaz.
5.1. Sod problem
This classical problem consists of a shock tube of unity length. The interface is located at x = 0.5. At the
initial time, the states on the left and the right sides of x = 0.5 are constant. The left state is a high pressure
ﬂuid characterized by (ρL , PL , uL ) = (1, 1, 0), the right state is a low pressure ﬂuid deﬁned by (ρR , PR , uR ) =
(0.125, 0.1, 0). The gamma gas law is deﬁned by γ = 75 . The computational domain is deﬁned by (x, y) ∈
[0, 1] × [0, 0.1]. The initial mesh is a Cartesian grid with 100 × 2 equally spaced cells. The numerical results
obtained with our Lagrangian scheme are presented in Figure 5 as spatial distributions of velocity and density,
with the numerical solution plotted as discrete points, and the corresponding exact solution shown as solid lines
These results show the classical improvement of the high-order solution relative to the ﬁrst-order one.
5.2. Sedov problem on a Voronoi grid
We consider the Sedov problem for a point-blast in a uniform medium with cylindrical symmetry. An exact
solution based on self-similarity arguments is available, see for instance [11]. The initial conditions are characterized by (ρ0 , P0 , U0 ) = (1, 10−6 , 0) and the polytropic index is set equal to 75 . We set an initial delta-function energy
9

1950

P.-H. Maire / Procedia Computer Science 1 (2012) 1941–1950
1.2
5.8
Lagrangian
Analytical

6

1
4.8
5

0.8
3.8

ρ

0.6

4

2.8

0.4

3

2

1.8

1

0.2
0.8

0

0

0

0.2

0.4

0.6

0.8

1

0

0.2

1.2

0.4

0.6
r

0.8

1

1.2

Figure 6: Sedov problem at ﬁnal time t = 1. Left: density map and grid, right: density as a function of the radius of cell centers versus
analytical solution.

source at the origin prescribing the pressure in the cell containing the origin as follows
Por = (γ − 1)ρor

E0
,
Vor

where Vor denotes the volume of the cell that contains the origin and E0 is the total amount of released energy.
By choosing E0 = 0.244816, as it is suggested in [11], the solution consists of a diverging shock whose front is
located at radius R = 1 at time t = 1. The peak density reaches the value 6. We run this problem on a unstructured
grid produced by a Voronoi tessellation that contains 775 polygonal cells. We observe in Fig. 6 that the shock
level and its location are very well rendered. This demonstrates the accuracy and robustness of our Lagrangian
scheme.
6. Conclusion
We have presented a uniﬁed sub-cell force-based framework to derive a family of compatible cell-centered Lagrangian schemes which share good physical properties. Firstly, mesh motion and numerical ﬂuxes are computed
consistently by means of a node-centered solver which can be viewed as two-dimensional extension of an approximate Riemann solver. Secondly, momentum and total energy conservation are ensured. The thermodynamic
consistency of these schemes is provided by means of a semi-discrete entropy inequality.
References
[1] B. Despr´es, C. Mazeran, Lagrangian Gas Dynamics in Two Dimensions and Lagrangian systems, Arch. Rational Mech. Anal. 178 (2005)
327–372.
[2] P.-H. Maire, R. Abgrall, J. Breil, J. Ovadia, A cell-centered Lagrangian scheme for two-dimensional compressible ﬂow problems, SIAM
J. Sci. Comput. 29 (4) (2007) 1781–1824.
[3] P.-H. Maire, A high-order cell-centered Lagrangian scheme for two-dimensional compressible ﬂuid ﬂows on unstructured meshes, J.
Comp. Phys. 228 (7) (2009) 2391–2425.
[4] E. Caramana, D. Burton, M. Shashkov, P. Whalen, The construction of compatible hydrodynamics algorithms utilizing conservation of
total energy, J. Comp. Phys. 146 (1998) 227–262.
[5] M. Ben-Artzi, J. Falcovitz, Generalized Riemann problems in Computational Fluids Dynamics, Cambridge University press, 2003.
[6] G. Carr´e, S. Delpino, B. Despr´es, E. Labourasse, A cell-centered Lagrangian hydrodynamics scheme on general unstructured meshes in
arbitrary dimension, J. Comp. Phys. 228 (2009) 5160–5183.
[7] J. Botsis, M. Deville, M´ecanique des milieux continus, Presses Polytechniques et Universitaires Romandes, 2006.
[8] B. Rebourcet, Comments on the ﬁltering of numerical instabilities in Lagrangian hydrocodes, Conference on Numerical methods for
multi-material ﬂuid ﬂows; Czech Technical University in Prague on September 10 - 14, 2007; Available at http://www-troja.fjfi.
cvut.cz/~multimat07/presentations/tuesday/Rebourcet_filtering.pdf.
[9] P.-H. Maire, B. Nkonga, Multi-scale Godunov-type method for cell-centered discrete Lagrangian hydrodynamics, J. Comp. Phys. 228 (3)
(2009) 799–821.
[10] J. Li, Z. Sun, Remark on the generalized Riemann problem method for compressible ﬂuid ﬂows, J. Comp. Phys. 222 (2007) 796–808.
[11] J. Kamm, F. Timmes, On eﬃcient generation of numerically robust Sedov solutions, Tech. Rep. LA-UR-07-2849, Los Alamos National
Laboratory (2007).

10

