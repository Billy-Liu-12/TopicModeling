Procedia Computer
Science

Procedia
Computer
Science
(2012)
Procedia
Computer Science
001(2010)
1–8997–1004
www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Using ontologies for querying and analysing protein-protein
interaction data
Mario Cannataro, Pietro Hiram Guzzi, and Pierangelo Veltri
Bioinformatics Laboratory, Department of Experimental Medicine and Clinic
University Magna Graecia, Catanzaro, Italy

Abstract
Biological function is to a large extent mediated and controlled by interactions among proteins. The study of
interactions about proteins has lead to the accumulation of a large amount of data, also referred to as protein-protein
interaction (PPI) data. Such data, stored in publicly available databases, are often queried by using simple keybased query interfaces with little semantic. Current PPI databases enable the retrieval of one or more proteins that
interact with a target protein using target protein identiﬁer. Nevertheless, a lot of biological information is available
and is spread on diﬀerent sources and encoded in diﬀerent ontologies (e.g. Gene Ontology). Annotating existing
PPI databases with biological information may result in richer querying interface and successively could enable the
development of novel algorithms that may use such biological information. The main contributions of this paper
are: (i) a framework able to extend existing PPI databases by using ontologies, and (ii) a semantic based querying
interface. The framework merges PPI data with annotations extracted from Gene Ontology and stores annotated data
into a database. Then, a semantic-based query interface enables users to query these data by using biological concepts.
Finally, a real case study showing the eﬀectiveness of such framework on the analysis of PPI data is also presented.

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Keywords: ⃝
Protein-Protein Interaction, Ontologies, Databases, Annotations

1. Introduction
After the introduction of a large number of methods and tools for the determination of the biochemical characteristics of proteins, e.g. the determination of the spatial structures, the interest of researchers has focused on the study
of the roles of proteins within a living organism. Proteins play their role usually by interacting among them or with
other macromolecules, e.g. nucleic acids. An interaction usually involves a contact among surfaces of two or more
proteins. Thus, diﬀerent experimental techniques have been introduced for the determination of interactions among
proteins, named protein-protein interaction (PPI). As a result, a large number of data has been produced [1, 2] causing
the introduction of computer science methods to manage, store and analyse them. The whole set of protein interactions of a single specie is also referred to as Protein to protein Interaction Network (PIN), and the high dimension of
this network makes infeasible the manual inspection even for simple organisms.
Email address: cannataro@unicz.it,hguzzi@unicz.it (Mario Cannataro, Pietro Hiram Guzzi, and Pierangelo Veltri)

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.110

998

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

2

PINs have been easily modeled by using undirected graphs [3] where nodes are associated to proteins, and edges
represent interactions among proteins. The simplest representation uses an undirected graph, while more reﬁned
models use directed and labelled edges to integrate the information about the kind of biochemical association and
its direction. Thus, the study of PINs requires graph-based computational methods. PPI data have been collected in
many public databases such as the Database of Interacting Proteins (DIP) [4], the Biomolecular Interaction Network
Database (BIND) [5], and the Munich Information Center for Protein Sequence (MIPS) [6]. Usually PPI databases
contain raw data, e.g. the identiﬁers of the interacting proteins and some kind of annotation related to the reliability
of the stored data, but usually this data is not annotated with information already available in other sources, such as
Gene Ontology. Reliability is a measure introduced to tackle the problem of False Positives, i.e. proteins considered
interacting by error.
PPI databases are often publicly available on the Internet oﬀering to the user the possibility to retrieve data of
interest through simple querying interfaces. The user, in fact, can conduct a search through the insertion of: (i) one or
more protein identiﬁers, (ii) a protein sequence, or (iii) the name of an organism. Results may consist of, respectively,
a list of proteins that interact directly with the seed protein or that are at distance k from the seed protein, or the list of
all the interactions of an organism. Often it is impossible to formulate even simple queries, such as all the interactions
that are related to glucose synthesis.
Currently there is a lack of methods to extend the semantics of such PPI raw data with more information. A possibility would be the application of annotation approaches developed in the e-Science and Semantic Web communities
[7, 8], e.g. for adding to actual data the information coming from ontologies such as Gene Ontology [9] and from
other sources.
The main hypothesis of the paper is that annotating PPI data with biological information may result in richer
querying interfaces and in more powerful PPI data analysis algorithms that may use such biological information in
addition to the topological information provided by current PPI databases and networks.
The paper proposes a software platform for the annotation, retrieval and analysis of PPI data enriched with Gene
Ontology knowledge. Such system could be useful not only for the semantic search of data, but also for the analysis
of PPI data. The analysis of PPI networks is usually done by using graph-based algorithms [10], and associating
graph properties (e.g. random graphs or scale free networks) to biological properties of the modeled PPI [11]. The
availability of annotated data could enable the development of novel algorithms able to gather such information.
The main contributions of this paper are:
• a framework able to extend existing PPI databases with annotations extracted from ontologies; at the
bottom of the proposed software platform there is an annotation module able to extend an existing PPI database
with annotation extracted from the Gene Ontology Annotation Database (GOA). For each protein three kind of
annotations are currently provided: biological process, cellular compartment and molecular function.
• a semantic-based querying interface for annotated PPI databases; a semantic-based query interface enables
users to query these data by using biological concepts, e.g. ﬁnd all the interactions related to a biological process
or located in a cellular environment. The user can query annotated data through a query by example approach
available through a Graphical User Interface.
• a novel approach for analysing PINs that have been built from annotated PPI data; such knowledge can
be used to realize novel algorithms for PIN analysis, attempting to improve existing algorithms that try to mine
PINs by using graph topological information only.
In a previous work [12] we presented the architecture of this framework. This work extends the architecture and
presents a ﬁrst implementation of the system showing a case study on protein complexes prediction.
The rest of the paper is organised as follows: Section 2 discusses main approaches for PPI data management,
Section 3 presents the realized architecture while Section 4 shows how to exploit the annotated data into an analysis
problem; ﬁnally Section 5 concludes the paper.
2. Related Work
Recent advances in biotechnology, i.e. the introduction of new high throughput technologies for the investigation
of cells, have produced the accumulation of vast amounts of data. Moreover, recent research in bioinformatics has led

999

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

3

to the introduction of a lot of algorithms that produce both derived data and novel knowledge. The resulting scenario is
characterised by the accumulation of a large amount of data, algorithms, databases and tools available to the scientiﬁc
community. However, there exist terminology diﬀerences, syntactic diﬀerences and semantic diﬀerences within this
ﬁeld. As a result, it is possible to retrieve diﬀerent meanings for identically named categories, overlapping meaning of
diﬀerent categories and conﬂicting meaning for diﬀerent categories [13]. Even the meanings of important high level
concepts that are fundamental to molecular biology are ambiguous. A need for a concise, unambiguous, description
of available resources has arisen.
Ontologies, undoubtedly, are a unambiguous formulation of the concepts in a domain and of the relationships
among them. They have played an important role in the concise and unambigous deﬁnition of the meaning of the
concepts of a domain by making it possible to merge together information from heterogeneous sources. Ontology
is the study or concern about what kinds of things exist - what entities or things there are in the universe [14]. In
computer science, an ontology is deﬁned as a speciﬁcation of conceptualisations about a domain.
The Gene Ontology project is maintained by the Gene Ontology [15] (GO) Consortium. The consortium aimed
at the development of a controlled-vocabulary of the molecular biology domain to describe and organise concepts
hierarchically. Gene Ontology maintains vocabularies of three domains: Molecular Function, Biological Process
and Cellular Component. The rationale of these classiﬁcations is that this organisation can be applied to all living
organisms, considering a generic eukariotic cell. The ﬁrst one, is deﬁned considering the biochemical level and
deﬁnes what a product of a gene does. The taxonomy speciﬁes the function while the spatial and temporal locations
are not determined. The second one mentions the biological goal, e.g. a set of biochemical interactions to which a
gene product contributes. The Biological Process Domain is not semantically equivalent to a biological pathway, as
stated explicitly by the GO consortium. The last one, makes reference to the place where a gene product plays its
role. The annotation of genomic data makes it possible to extend raw data (e.g. sequence) with information about the
biological functions. An important ﬁeld of application of ontologies is the possibility to extract semantic information
from data organized as taxonomies or to easily integrate knowledge about a domain with algorithms working on that
domain [16]. The Gene Ontology Annotation database (GOA) [17] stores the associations between gene products and
the related gene ontology terms. The user can search this database by using gene products identiﬁers or by using gene
ontology terms extracting the associated proteins.
So a ﬁrst issue for annotating PPI databases with ontology-based information is the automatic extraction of information from ontologies and their conversion in a suitable format for annotation. Currently, there are many proposals to
realize ontology query languages. For instance, SPARQL [18] is a query language for RDF (http://www.w3.org/TR/rdfsparql-query/), but it is easily extensible to OWL ontologies, the ontology standard of the World Wide Web Consortium (http://www.w3.org/TR/owl-features/). In the biomedical domain, the Open Biomedical Ontologies Foundry
(www.obofoundry.org) is a set of ontologies that are designed speciﬁcally to integrate information in biomedical
application.
3. The System Architecture
Existing PPI databases store protein interactions as a list of binary interactions (Pi ,P j ) where the pair (Pi ,P j )
identiﬁes the interacting proteins and states that Pi interacts with P j and viceversa. It should be noted that the lack
of common accepted identiﬁers for the interactions may be a problem to deﬁne the modalities of annotation of an
interaction (e.g. with the kind of interaction, with the direction of the biochemical reaction, etc.). Usually such PPI
databases do not contains annotations about proteins (the nodes Pi ) nor about interactions (the pairs (Pi ,P j )). The
availability of protein identiﬁers allows to retrieve further information such as the protein sequence.
In our proposal we extend a PPI database with annotations extracted from Gene Ontology. The resulting annotated
PPI database will store both protein interaction data and annotations. The annotated PPI database will contain, for
each protein, the protein identiﬁer and main annotations extracted from Gene Ontology, such as Biological process,
Molecular function and Cellular component. The binary interactions (i.e. the edges of the PPI network described by
the PPI database) may be annotated using information extracted form other public ontologies or knowledge bases, if
available.
Figure 1 depicts the architecture of the system for extracting annotations from Gene Ontology and for annotating
the PPI database. Primary data sources of such system are the PPI database and the ontology repositories. The

1000

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

4

Figure 1: The architecture for annotating PPI databases

annotation module is able to retrieve and annotate these data by using two mediator modules: the Metadata Extraction
Module and the Data Extraction Module. The ﬁrst one maintains a reference to the existing annotation datasource, e.g.
Gene Ontology Database, and it is able to query such database extracting relevant metadata. The second one maintains
a reference to existing PPI databases. Periodically it searches for newly determined interactions and extracts and sends
them to the annotation module. The cooperation of these modules produces the annotated data that are stored into the
Annotated PPI DB.
3.1. The Annotation Module
First of all we need to deﬁne the annotation of an interaction , (annotated interaction). The simplest way to
deﬁne an annotated interaction is to consider the annotation of both interactors and then derive the annotation of the
interaction. The simplest way to realize this is by considering the shared terms among interactors. Let us consider for
example proteins A and B. If the protein A is annotated with terms T 1 , T 2 , and T 3 , and the protein B is annotated with
terms T 1 , T 2 , T 5 , and T 7 , then the annotation of the interaction (A, B) is the common set: T 1 ,T 2 . Nevertheless, generally
the annotations of the interactors are organized into several taxonomies, e.g. the taxonomies of Gene Ontology, so
there is the possibility to deﬁne more sophisticated strategies for annotating interactions by considering not only
identical terms but also semantically near terms. In such version of the system we consider only identical terms.
The annotation of a PPI network consists of three main phases as depicted in Figure 2: (i) retrieval of PPI data
performed by the Data Extraction Module, (ii) retrieval of existing annotations performed by the Metadata Extraction Module, (iii) generation of annotated interactions and storage into the annotated database. Initially, the system
queries the existing interaction database PPI DB and retrieves the data about interactions. Then the protein identiﬁers
are used to ﬁnd related annotations. For instance, the GOA can be queried by using the Uniprot identiﬁers. Finally,
data are merged together and encoded by using an XML-based syntax, and then stored into the annotated database
AnnotatedDB. Through the use of XML the system is highly scalable, i.e. it can easily add new annotations without
the need to modify the data model.
In particular, the ﬁrst version of the proposed annotated database contains the following annotations extracted
from GOA: (i) Gene Ontology Component, (ii) Gene Ontology Cellular Process, (ii) Gene Ontology Molecular Function. Let us consider the interacting proteins MEC1 and RNR1 of Saccharomices Cervisiae. The ﬁrst one is annotated
by the following terms: DNA damage response, signal transduction resulting in cell cycle arrest (GO:0000077),
chromatin silencing at telomere (GO:0006348), DNA metabolism (GO:0006259), DNA binding (GO:0003677), nucleus (GO:0005634). The second one is annotated with the following terms: DNA replication (GO:0006260),
ribonucleoside-diphosphate reductase activity (GO:0004748), cytoplasm (GO:0005737), nucleus (GO:0005634). Thus,
a binary interaction in the annotated PPI database will contain the interacting proteins and the list of annotations of

1001

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

5

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

Figure 2: The Annotation of PPI Data

Table 1: A Record of the Annotated PPI Database

ProteinID
MEC1
RNR1

Interactors
[...]
[...]

GO Component
GO:0000077
GO:0005634, GO:0005737

GO Mol. Fun
GO:0006348
GO:0004748

GO Cel. Proc.
GO:0006260
GO:0006260

both proteins. Table 1 shows a record of the annotated PPI database in a tabular way, ﬁrst column shows the protein
identiﬁcation code, the second one the list of interacting partners, while the subsequent ones shows the related GO
labels.
3.2. The Querying Interface
The querying interface is a key component of such a system, because it has to deﬁne the granularity from which
queries may be formulated. In fact, while powerful queries may be formulated by using high level ontology query
languages, they require a training for the users, so they are not user friendly. Conversely, in our opinion, a query
interface should hide main details about the underlying data model and query languages, enabling to formulate simple
queries easily understatable. For instance, the user has to be able to formulate simple queries such as: ﬁnd all the
interactions whose at least one interactor is involved into a speciﬁed process and occurring in the nucleus. Moreover,
the user should not be faced with syntactical problems, so the queries should be formulated in a visual manner. For the
annotation scheme above described we designed a query module that receives as input a conjunctive list of annotations,
L, e.g. T 1 ,T 2 ,...,T n and will return all the interactions that are annotated with all the terms contained in L. For instance,
let us consider the interactions of the proteins P1 , P2 and P3 , their annotations, respectively T 1 , T 2 , and T 3 for P1 ,
T 1 ,T 2 , T 4 and T 5 for P2 , T 4 ,T 5 , and T 7 for P3 and the interactions (P1 , P2 ) and (P2 , P3 ). As described previously,
the interaction (P1 , P2 ) will be annotated with the terms T 1 ,T 2 , while the interaction (P2 , P3 ) will be annotated with
the terms T 4 , and T 5 . If the user queries the system by using the terms T 1 , T 2 , the system will return the interaction
(P1 , P2 ).
Currently, we designed the overall architecture and implemented a ﬁrst prototype of the system. We are currently
populating the system with publicly available data and we are testing the realized modules. The realized query
interface supports the following querying parameters: (i) protein identiﬁer, (ii) molecular function annotation, (iii)
cellular process annotation, (iv) cellular compartment. The user can insert a list of parameters that will be joined in a
conjunctive way, i.e. system will retrieve interactions that are annotated with all the selected terms.
Let us consider, for example the protein MLH1 of yeast and its interacting partners: MSH6, MSH2, MSH3,
PMS1 yielding four interactions. Let us consider, moreover, the Cell Cycle and DNA Processing, identiﬁed in Gene
Ontology by the code GO:00122101. When a user searches for MEC1 in DIP, he/she will retrieve the interactions:

1002

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

6

Table 2: Localisation of Proteins

ProteinID
YCK1
YCK2
YCK3
HRR25
GCS1

GO Cellular Component
Nucleus, Membrane, Plasma Membrane
Membrane, Plasma Membrane
Membrane, Plasma Membrane
Cytoplasm, Nucleus, Plasma Membrane
Golgi, Mithocondrium

(MLH1, MSH6), (MLH1, MSH2), (MLH1, PMS1), and (MLH1, MSH3). Successively, he/she has to check the
annotation manually to discover which proteins and the related interactions are annotated with the desired term. By
using the querying interface of the annotated PPI database, (Figure 3), user can directly specify the process and the
protein retrieving all the desired interactions.

Figure 3: The query interface of the system

4. Case study
Protein complexes are sets of mutually interacting proteins that play an important biological role. They may
be represented in PINs by dense subgraphs. Existing algorithms for protein complex prediction search for these
subgraphs applying only topological considerations [19, 20, 21, 22]. Nevertheless, functional information about
protein co-localisation or about protein functions are not considered in traditional algorithms. Proteins can move from
a compartment to another interacting with diﬀerent partners. In this way they can form a complex in a compartment,
while they can only participate in a binary interaction in another one. Classical algorithms that examine only the
topology of interactions, discarding any biological knowledge may cause the identiﬁcation of incorrect complexes.
Indeed, complexes can only be formed if the corresponding proteins are co-located in the cell, so the information
about co-localisation can guide the correct identiﬁcation of complexes.
The following example shows the use of ontologies to guide the identiﬁcation of complexes in yeast Saccharomyces Cervisiae. Let us consider the subgraph formed by the interacting proteins YCK3, YCK2, YCK1, HRR25,
and GCS1. Proteins YCK3, YCK2, YCK1, and HRR25 form a true complex known as casein kinase, while protein
GCS1 only interacts with YCK3 without participating in this complex. For each protein it is possible to ﬁnd the GO
annotations related to the localisation (GO cellular component). Table 2 shows for each protein, listed in the ﬁrst
column, the related GO Cellular Component annotations, each protein may have more than one component due to
cellular dynamics..
Proteins YCK1, YCK2, YCK3, and HRR25 share the localisation as depicted in Figure 4, where for each node
its annotation has been depicted. Thus the identiﬁcation of the casein-kinase complex may proceed by ﬁrst ﬁnding
in the yeast PIN the dense subgraph showed in Figure 4 and then by selecting only the proteins sharing a common
localisation.

1003

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

7

Figure 4: Localisation of interacting proteins

The use of the Annotated PPI database allows to use in a eﬀective way the biological information related to the
casein-kinase complex.
5. Conclusion
In spite of the availability of many biological information in diﬀerent databases, neither proteins nor interactions
are annotated in current PPI databases. Existing PPI databases oﬀer query interfaces with a poor semantic; for instance
they enables the retrieval of one or more proteins that interact with a query protein but do not allow to select proteins
or interactions on the basis of their functions. This paper presented a system to annotate PPI databases with biological
information extracted from Gene Ontology and a simple query interface to query the resulting annotated PPI database.
Future work will regard the whole implementation of the system.
References
[1] Y. Ho, A. Gruhler, A. Heilbut, G. D. Bader, L. Moore, S.-L. Adams, A. Millar, P. Taylor, K. Bennett, K. Boutilier, L. Yang, C. Wolting, I. Donaldson, S. Schandorﬀ, J. Shewnarane, M. Vo, J. Taggart, M. Goudreault, B. Muskat, C. Alfarano, D. Dewar, Z. Lin, K. Michalickova, A. R.
Willems, H. Sassi, P. A. Nielsen, K. J. Rasmussen, J. R. Andersen, L. E. Johansen, L. H. Hansen, H. Jespersen, A. Podtelejnikov, E. Nielsen,
J. Crawford, V. Poulsen, B. D. Sorensen, J. Matthiesen, R. C. Hendrickson, F. Gleeson, T. Pawson, M. F. Moran, D. Durocher, M. Mann,
C. W. V. Hogue, D. Figeys, M. Tyers, Systematic identiﬁcation of protein complexes in saccharomyces cerevisiae by mass spectrometry,
Nature 415 (2002) 180–183.
[2] P. Uetz, L. Giot, G. Cagney, T. Mansﬁeld, R. Judson, J. Knight, D. Lockshon, V. Narayan, M. Srinivasan, P. e. a. Pochart, A comprehensive
analysis of proteinprotein interactions in saccharomyces cerevisiae., Nature 403 (2000) 623627.
[3] D. B. West, Introduction to Graph Theory (2nd Edition), Prentice Hall, NY, 2000.
URL http://www.amazon.co.uk/exec/obidos/ASIN/0130144002/citeulike-21
[4] L. Salwinski, C. S. Miller, A. J. Smith, F. K. Pettit, J. U. Bowie, D. Eisenberg, The Database of Interacting Proteins: 2004 update, Nucl.
Acids Res. 32 (suppl1) (2004) D449–451. doi:10.1093/nar/gkh086.
[5] C. Alfarano, C. E. Andrade, K. Anthony, N. Bahroos, M. Bajec, K. Bantoft, D. Bete, B. Bobechko, K. Boutilier, E. Burgess, K. Buzadzija,
C. R., D. C., I. Donaldson, D. Dorairajoo, M. J. Dumontie, M. R. Dumontier, V. Earles, R. Farral, H. Feldman, E. Garderman, Y. Gong,
R. Gonzaga, V. Grytsan, E. Gryz, V. Gu, E. Haldorsen, A. Halupa, R. Haw, A. Hrvojic, L. Hurrell, R. Isserlin, F. Jack, F. Juma, A. Khan,
T. Kon, S. Konopinsky, V. Le, E. Lee, S. Ling, M. Magidin, J. Moniakis, J. Montojo, S. Moore, B. Muskat, I. Ng, J. P. Paraiso, B. Parker,
G. Pintilie, R. Pirone, J. J. Salama, S. Sgro, T. Shan, Y. Shu, J. Siew, D. Skinner, K. Snyder, R. Stasiuk, D. Strumpf, B. Tuekam, S. Tao,
Z. Wang, M. White, R. Willis, C. Wolting, S. Wong, A. Wrong, C. Xin, R. Yao, Y. B., S. Zhang, K. Zheng, T. Pawson, B. F. Ouellette,
C. W. Hogue, The biomolecular interaction network database and related tools 2005 update., Nucleic Acids Res 33 (Database issue) (2005)
418–424.
[6] H. W. Mewes, D. Frishman, U. Gldener, G. Mannhaupt, K. Mayer, M. Mokrejs, B. Morgenstern, M. Mnsterktter, S. Rudd, B. Weil, Mips: a
database for genomes and protein sequences., Nucleic Acids Res 30 (1) (2002) 31–34.
[7] M. Paolucci, T. Kawamura, T. Payne, K. Sycara, Semantic matching of web services capabilities, 2002, pp. 333–347. doi:10.1007/3-54048005-6 26.
URL http://dx.doi.org/10.1007/3-540-48005-6 26
[8] L. Cabral, J. Domingue, E. Motta, T. Payne, F. Hakimpour, Approaches to semantic web services: an overview and comparisons, 2004, pp.
225–239.
URL http://www.springerlink.com/content/rexl74unwpyrj8pl

1004

M. Cannataro et al. / Procedia Computer Science 1 (2012) 997–1004

M. Cannataro / Procedia Computer Science 00 (2010) 1–8

8

[9] M. A. Harris, J. Clark, A. Ireland, J. Lomax, M. Ashburner, R. Foulger, K. Eilbeck, S. Lewis, B. Marshall, C. Mungall, J. Richter, G. M.
Rubin, J. A. Blake, C. Bult, M. Dolan, H. Drabkin, J. T. Eppig, D. P. Hill, L. Ni, M. Ringwald, R. Balakrishnan, J. M. Cherry, K. R.
Christie, M. C. Costanzo, S. S. Dwight, S. Engel, D. G. Fisk, J. E. Hirschman, E. L. Hong, R. S. Nash, A. Sethuraman, C. L. Theesfeld,
D. Botstein, K. Dolinski, B. Feierbach, T. Berardini, S. Mundodi, S. Y. Rhee, R. Apweiler, D. Barrell, E. Camon, E. Dimmer, V. Lee,
R. Chisholm, P. Gaudet, W. Kibbe, R. Kishore, E. M. Schwarz, P. Sternberg, M. Gwinn, L. Hannick, J. Wortman, M. Berriman, V. Wood, ,
P. Tonellato, P. Jaiswal, T. Seigfried, R. White, The gene ontology (go) database and informatics resource., Nucleic Acids Res Nucleic Acids
Res 32 (Database issue) (2004) 258–61.
[10] T. Aittokallio, B. Schwikowski, Graph-based methods for analysing networks in cell biology, Brief Bioinform 7 (3) (2006) 243–255.
doi:10.1093/bib/bbl022.
[11] P. Erdos, A. Rnyi, On the evolution of random graphs., Publ. Math. Inst. Hung. Acad. Sci. 5 (1960) 1761.
[12] M. Cannataro, P. H. Guzzi, P. Veltri, Using ontologies for annotating and retrieving protein-protein interactions data, in: Computer-Based
Medical Systems, 2009. CBMS 2009. 22nd IEEE International Symposium on, 2009, pp. 1–5. doi:10.1109/CBMS.2009.5255274.
[13] M. Cannataro, P. H. Guzzi, T. Mazza, G. Tradigo, P. Veltri, Algorithms and databases in bioinformatics: Towards a proteomic ontology, in:
ITCC (1), 2005, pp. 322–328.
[14] J. F. Sowa, Ontology, metadata, and semiotics, in: ICCS ’00: Proceedings of the Linguistic on Conceptual Structures, Springer-Verlag,
London, UK, 2000, pp. 55–81.
URL http://portal.acm.org/citation.cfm?id=657527
[15] M. Ashburner, C. A. Ball, J. A. Blake, D. Botstein, H. Butler, J. M. Cherry, A. P. Davis, K. Dolinski, S. S. Dwight, J. T. Eppig, M. A. Harris,
D. P. Hill, L. Issel-Tarver, A. Kasarskis, S. Lewis, J. C. Matese, J. E. Richardson, M. Ringwald, G. M. Rubin, G. Sherlock, Gene ontology:
tool for the uniﬁcation of biology. the gene ontology consortium., Nat Genet 25 (1) (2000) 25–29. doi:10.1038/75556.
URL http://dx.doi.org/10.1038/75556
[16] M. Cannataro, P. H. Guzzi, T. Mazza, G. Tradigo, P. Veltri, Using ontologies for preprocessing and mining spectra data on the grid, Future
Generation Computer Systems 23 (1) (2007) 55–60. doi:10.1016/j.future.2006.04.011.
URL http://dx.doi.org/10.1016/j.future.2006.04.011
[17] E. Camon, M. Magrane, D. Barrell, V. Lee, E. Dimmer, J. Maslen, D. Binns, N. Harte, R. Lopez, R. Apweiler, The gene ontology annotation
(goa) database: sharing knowledge in uniprot with gene ontology., Nucleic Acids Res 32 (Database issue).
URL http://view.ncbi.nlm.nih.gov/pubmed/14681408
[18] R. Angles, C. Gutierrez, The expressive power of sparql, 2008, pp. 114–129. doi:http://dx.doi.org/10.1007/978-3-540-88564-1 8.
URL http://dx.doi.org/10.1007/978-3-540-88564-1 8
[19] R. Sharan, T. Ideker, B. Kelley, R. Shamir, R. Karp, Identiﬁcation of protein complexes by comparative analysis of yeast and bacterial protein
interaction data., J Comput Biol. 12 (6) (2005) 835–46.
[20] A. D. King, N. Przulj, I. Jurisica, Protein complex prediction via cost-based clustering, Bioinformatics 20 (17) (2004) 3013–3020.
doi:10.1093/bioinformatics/bth351.
[21] X. Li, S. Tan, C. Foo, S. Ng, Interaction graph mining for protein complexes using local clique merging., Genome Inform 16 (2) (2005)
260–9.
[22] M. Altaf-Ul-Amin, Y. Shinbo, K. Mihara, K. Kurokawa, S. Kanaya, Development and implementation of an algorithm for detection of protein
complexes in large interaction networks, BMC Bioinformatics 7 (1) (2006) 207. doi:10.1186/1471-2105-7-207.
URL http://www.biomedcentral.com/1471-2105/7/207

