Procedia Computer
Science
Procedia
Computer Science
Science 001(2010)
1‚Äì81691‚Äì1698
Procedia
Computer
(2012)

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Continuous interactive simulation: Engaging the human
sensory-motor system in understanding dynamical systems
Rohan J. McAdam1,‚àó
Centre for Research in Complex Systems (CRiCS), Charles Sturt University, Bathurst, NSW, Australia

Abstract
Direct and continuous interaction with a simulated dynamical system enables the full human sensory-motor loop
to be applied to the problem of understanding the behaviour of dynamical systems. A virtual environment consisting
of a continuous interaction device and a multi-sensory display allows a user to interact with an arbitrary dynamical
system in real time. The resulting tight coupling between the user and the dynamical system allows the user to explore
the system through active participation in the dynamics of the system. An example drawn from population dynamics
demonstrates that users with no specialist skills are able to discover a range of properties of an arbitrary dynamical
system through sensory-motor exploration alone.
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
‚Éù
Keywords: dynamical systems, simulation, interactive visualisation, continuous interaction, human movement

1. Introduction
Human movement is, essentially, a problem in understanding dynamical systems. The human sensory-motor
system must interact with a wide variety of environmental dynamics in order to produce desired movement outcomes
[1]. Doing so requires the solution of diÔ¨Écult problems such as prediction, optimisation and control in the face of
delayed and incomplete sensory information, time varying nonlinear dynamics, and constant disturbance [2]. In the
course of any well-practised movement most people are completely unaware of the diÔ¨Éculties involved and ‚Äújust do
it‚Äù. For example, a skilled pilot is able to draw on an implicit sensory-motor understanding of aerodynamics in order
to produce the movements needed to execute a particular manoeuvre given the current state of the aircraft and the
prevailing conditions. Furthermore, there is an essentially creative, improvised character to human behaviour that
allows movement to unfold and adapt to contingencies in the environment as they arise. In a very real sense we are
all, naturally, experts in dynamics.
The need to understand the behaviour of dynamical systems is, of course, relevant to many disciplines. Dynamical
systems models feature prominently in Ô¨Åelds as diverse as physics, ecology, economics, sociology, and so on. Developing an understanding of how nonlinear dynamical systems behave and how they can be controlled is a challenging
problem requiring specialist techniques that often apply to only limited classes of systems [3] . Given the human
‚àó

Email address: rmcadam@csu.edu.au (Rohan J. McAdam)
author

1 Corresponding

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ‚Éù
doi:10.1016/j.procs.2010.04.190

1692

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

2

capacity to learn new physical skills involving unfamiliar, often complex dynamics it might be possible to develop an
understanding of the behaviour of a dynamical system based on sensory-motor learning rather than on mathematical
theory or specialist domain knowledge. This paper describes a simple approach to enabling direct sensory-motor
interaction with a real-time simulation of an arbitrary dynamical system. Continuous movement actions are mapped
onto system parameters and the continuously evolving state of the system is mapped onto a sensory environment to
complete the sensory-motor loop. The tight coupling between a user and the system that results allows the user to
explore the behaviour of the system through active participation in the dynamics of the system, in much the same
way they would explore any unfamiliar physical situation. With practice, a user‚Äôs initial fumblings may develop into
skilled manipulations that demonstrate how the system behaves and the various ways in which it can be controlled.
This paper is organised as follows. Section 2 describes related work, section 3 describes the general approach
to engaging human sensory-motor capabilities in exploring dynamical systems, section 4 provides a simple example
drawn from the study of population dynamics that demonstrates how a purely sensory-motor approach to exploring
dynamical systems can yield important properties of a system together with insight into the ways in which the system
can be manipulated, and section 5 provides a discussion of the key issues that arise from the proposal described in this
paper.
2. Related work
The use of computers to facilitate the engagement of human sensory capabilities in understanding dynamical
systems is well established. In particular, visual representations of the behaviour of a dynamical system allows human
perception to be applied to the problem of identifying key properties of the system. For example, Ô¨Åxed points, limit
cycles, attractors and sepatrices can be recognised in a visual representation of the trajectory of a continuous dynamical
system [4]. Virtual and augmented reality environments have been used to provide a more immersive visual experience
to better exploit human perceptual capabilities (e.g., [5]). Other sensory modalities such as hearing and touch have
also been used in the presentation of a broad range of scientiÔ¨Åc data including the behavior of dynamical systems
(e.g., [6, 7]).
Interactive visualisation aims to enhance the ability of an investigator to explore and understand a system through
interaction with a visualisation of a simulated system [8]. This interaction may be directed at the visualisation of
the system (rendering techniques, user point of view etc) or at the simulated system itself. A particular form of the
latter, known as computational steering [9], allows users to modify the parameters of a simulation in order to explore
the behaviour of a system under diÔ¨Äerent conditions. Such parameter modiÔ¨Åcations may be used to establish new
initial conditions for the simulation or to change the behaviour of the simulation as it executes. While computational
steering emphasises user interaction, the realities of simulating large systems means that direct manual interaction
with the simulation may not be practical [10]. Instead there have been suggestions that much of the direct manual
control of such environments be automated with the user assuming a more supervisory role in which they set goals,
monitor progress, and examine results as they become available [10, 11]. While there are good reasons for taking
humans ‚Äúout of the loop‚Äù there is a risk that increased levels of automation mean that opportunities for applying
human creativity and improvisation, often in situations where they can be of most value, are lost [12, pg 4].
Within the human computer interaction (HCI) community, a recognition of the fundamental importance of physical
engagement with the environment to our experience of the world has led to the development of methods of interacting
with computer systems based on human movement [13]. If movement can be used as input to computer systems, then
those systems might become easier and more natural to use. At the heart of movement-based interaction is some form
of continuous rather than discrete user interface. In contrast to the discrete interactions aÔ¨Äorded by conventional user
interfaces consisting of text boxes, menus, push buttons, selection lists, and so on, continuous interaction involves a
tight coupling between the user and the system in which there is an intensive exchange of information over an extended
period of time [14]. A range of sensing devices can be used for continuous input such as joysticks, haptic devices,
data gloves, infra-red sensing, and video-based motion detection. The key requirement is to map a continuous range
of movement onto a continuous range of input to the system over an extended period of time.
Most interactive simulation platforms use conventional discrete user interface devices for controlling a simulation
[9]. In cases where continuous interaction is used it is most often used for controlling the visualisation of the system
rather than controlling the parameters of the simulation itself. This form of interaction is common in virtual and
augmented reality environments and in computer generated animation where continuous interaction is used to navigate

1693

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

 



 
 



 

 

 

 










3


 
  







Figure 1: Virtual environment for engaging the human sensory-motor system in the dynamics of a simulated dynamical system. A continuous
interaction device maps movement actions, œÜ(t), onto the control variables of the simulated system, u(t), to produce a time-varying system response,
x(t), according to the dynamics of the system, which is then mapped onto an environmental response, r(t), by a multi-sensory display. The complete
interaction loop is exercised at every time step of the simulation.

a scene or manipulate an object representing some aspect of the visualised system (e.g., [15, 16, 17]). An obvious
exception can be found in Ô¨Çight, vehicle and equipment simulators. These simulators capture the essential dynamics
of a system and the control relationship between the human operator and the relevant parameters of the simulated
system. For example, continuous movement of a joystick produces continuous changes in the parameters representing
the deÔ¨Çection of the control surfaces of a simulated aircraft. Providing a visual representation of the resulting state of
the aircraft, such as a simulated view out of the cockpit window, completes the sensory-motor loop and allows a pilot
to practice the skills needed to Ô¨Çy a plane.
More general application of human sensory-motor capabilities to the understanding and control of simulated dynamical systems has been developed in the context of manipulating constrained physical systems such as architectural
structures [18] and molecular docking problems [19]. Continuous interaction with the parameters of a simulated
dynamical system has also been applied to the manipulation and control of unstable rigid body systems [20]. The
motivation for this work was to create more realistic animation of rigid body systems by exploiting an animator‚Äôs
intuitive motor learning and motion planning skills. This idea has since been applied extensively to the animation of
human and animal Ô¨Ågures in particular (e.g., [21]). The proposal put forward in this paper generalises these ideas to
continuous interaction with arbitrary dynamical systems that may have no physical basis whatsoever.
3. Continuous interactive simulation
Consider a continuous dynamical system of the form
xÀô = f (x(t), u(t), t)

(1)

where x is a vector of variables that represent the state of the system, u represents a vector of control variables,
and f is a function of the state of the system, the control variables, and time. For models of real world systems this
function is generally nonlinear. The behaviour of such models can readily be simulated in real-time using numerical
techniques to yield a trajectory for the system‚Äôs state over time. The course of this trajectory depends on the form of
f, the initial conditions of the system, and the continuously changing values of the control variables, u.
In order to engage human sensory-motor capabilities in exploring and understanding such a system a physical
realisation of the system is needed with which a user can interact. This can be achieved using a virtual environment

1694

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

4

consisting of a real-time simulation of the system, a multi-sensory display, and a continuous interaction device, as
illustrated in Ô¨Åg 1. The multi-sensory display provides a perceptual environment consisting of visual, auditory, and
haptic elements onto which the state of the simulated system, x, can be mapped. As the simulation of the system
proceeds the display is updated to provide a representation of the system‚Äôs dynamics as they unfold. The continuous
interaction device allows a user‚Äôs continuous movement actions to be mapped onto the control variables, u, of the
system. The complete interaction loop is exercised at every time step of the simulation. As the user moves, the
behaviour of the system changes, which is then reÔ¨Çected in the sensory representation of the system. This eÔ¨Äectively
closes the sensory-motor loop around the dynamics of the system so that it becomes the subject of the central nervous
system mechanisms underlying human sensory-motor learning. The user is now free to explore the behaviour of the
system in purely sensory-motor terms. Observing the consequences of various movement actions (or inaction) allows
the user to develop an understanding of what can and can‚Äôt be done with the system given the controls available.
An important detail concerns the meaning of ‚Äúreal-time‚Äù in this context. Time scales for problems in dynamics can
vary tremendously from the sub-second realm up to days, months or many years. However, the human sensory-motor
loop requires about 150ms to produce a motor response to a sensory stimulus [22]. In order to eÔ¨Äectively engage
human movement capabilities in controlling an arbitrary dynamical system, the time scale of the system under study
may need to be scaled up or down so that a user can respond to changes in the state of the system. This can be achieved
by substituting t in equation 1 with T = at, where a is a suitable scaling factor.
There are many ways in which the multi-dimensional state of a simulated dynamical system could be presented in a
multi-sensory display [23]. A straightforward way to do this is to adopt the commonly used phase space representation
of a dynamical system in which the state of the system is depicted as a point in a space deÔ¨Åned by the state variables,
x, of the system. If an object is placed at the initial state of the system and its position updated as the simulation
proceeds the behaviour of the system will be represented by the motion of the object in phase space2 . In this case, the
mapping of the system‚Äôs state onto the visual environment is a simple scaling of the state variables onto the axes of
the phase space representation. The visual representation can be further enhanced using stereoscopic projection and
three dimensional doppler sound eÔ¨Äects to help reinforce the sense of position and motion in space. Similarly, there
are many ways in which continuous movement actions could be mapped onto the control variables of a simulated
system. A simple form of continuous input is provided by multi-axis joysticks with each axis of movement mapped to
a diÔ¨Äerent control variable. In this case the mapping of hand movements onto control variables is a simple scaling of
joystick position onto control variables. Fig 2 shows an arrangement in which the motion of a ball in three dimensions
is controlled with a hand-held controller that allows a user to explore the dynamics of systems of up to three state
variables and four control variables.
While the visualisation techniques outlined above are relatively simple, direct continuous engagement with the
user‚Äôs sensory-motor loop allows them to explore the behaviour of a system by literally ‚Äúplaying‚Äù with it to see what
it does. This exploration does not require any domain knowledge or mathematical skill, just the normal sensory-motor
curiosity that we all seem to share.
4. Population dynamics
This section provides a simple example of how human sensory-motor capabilities can be used to explore the
behaviour of an arbitrary dynamical system. The study of population dynamics is central to many Ô¨Åelds including
ecology and economics. However, the dynamics are complicated due to nonlinear interactions between populations.
One of the Ô¨Årst models to take interactions between populations of interdependent species into account is the LotkaVolterra model of predator-prey systems originally developed in the 1920s [24].
A common form of the Lotka-Volterra model is given by the following pair of Ô¨Årst order nonlinear diÔ¨Äerential
equations.

2 The

HÀô = Œ±H ‚àí Œ≤HP ‚àí hH

(2)

PÀô = Œ¥HP ‚àí Œ≥P ‚àí hP

(3)

velocity of this motion is given directly by equation 1.

1695

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

5

Figure 2: Continuous interactive simulation. The motion of a ball in three-dimensional space represents the dynamics of an arbitrary dynamical
system. Two 2-axis joysticks on a hand-held controller are used to map hand movements onto the control variables of the system. The box
represents a target state and the plane on which it sits represents a constraint on the state of the system.

Equations 2 and 3 describe the rate of growth of prey and predator population densities, H and P respectively. H
and P are the state variables. The parameter Œ± is the natural rate of prey population growth, Œ≤ is the rate at which
predator-prey interactions result in prey mortality, Œ¥ is the reproduction rate of predators per prey eaten, Œ≥ is the
intrinsic mortality rate of predators in the absence of prey. The parameters hH and hP represent the rate at which the
predator and prey populations are harvested. hH and hP are the control variables. Negative values of these parameters
correspond to populations being stocked with new individuals.
Following the approach described in the previous section a 2-dimensional phase space representation of the LotkaVolterra dynamics was constructed in which the motion of a ball represented the changing state of the system. The
horizontal axis of the phase space represented the prey population density and the vertical axis represented the predator
population density. A hand-held controller with two joysticks was used for interaction with the system. One axis of the
right-hand joystick was mapped to positive values of the prey harvest rate, hH . One axis of the left-hand joystick was
mapped to negative values of the predator harvest rate, hP . Constraining input in this way corresponds to a scenario
where a population is controlled through direct harvesting and the introduction of a predatory species. The values for
the parameters Œ±, Œ≤, Œ¥, and Œ≥ were set to 0.216, 0.0108, 0.0029, 0.173 respectively according to a model of soybean
caterpillars controlled through the application of pesticide and the introduction of predatory bugs [25]. The system
was simulated with a Runge-Kutta solver with a time scale factor of 1 second of real time to 6 days of population
time. The presentation of the system made no mention of its domain origins. Users were simply presented with a ball
that behaved rather strangely and responded in unfamiliar ways to joystick input. As a result users were forced to deal
with the system in purely sensory-motor terms.
In a series of short, loosely structured sessions Ô¨Åve users were invited to explore the dynamics of the system by
experimenting with the ways in which the system behaved and responded to their movement actions. Each participant
spent about 30 minutes in self-guided exploration. The system state and all control variable changes were continuously
recorded during these sessions. On the basis of these scant directions the users discovered that they could steer the ball
through a number of ‚Äúmoves‚Äù, some of which are illustrated in Ô¨Åg 3. Interestingly, users spontaneously adopted the
language of movement to describe what they had discovered using words such as ‚Äúnudge‚Äù, ‚Äúhold‚Äù, ‚Äúdrop‚Äù, ‚Äúcatch‚Äù,
and so on, suggesting that they were dealing with the system in physical terms. Furthermore, users reported that they
found the experience of exploring this highly contrived unfamiliar physical situation to be ‚Äúfun‚Äù and gained some
satisfaction from learning how to manipulate the system.
By examining the recorded data for each of these moves they can be interpreted in domain-level terms, as summarised in table 1.

1696

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

Table 1: Moves discovered by users and their domain-level interpretation.

Move
No action

Description
Left to its own devices the ball
travels in a continuous counterclockwise orbit

Domain-level interpretation
The familiar boom and bust cycle characteristic of Lotka-Volterra
systems

Nudging the ball

Nudging the ball with either the
right or left hand changes the size
of the orbit

Small impulses of either pesticide
application or predator introduction
will either increase or decrease the
size of the boom-bust cycle depending on where in the cycle they are
applied.

Stopping the ball

Using the right hand, the left hand
or both hands the system can be
brought to rest at the point about
which the system orbits

The system has a stable equilibrium
at H = 60.0, P = 20.0. The system
can be stabilised at this point under
the action of predator introduction
alone, prey harvesting alone, or a
combination of both

Losing the ball

Excessive use of the right hand
causes the ball to hit an invisible
barrier to the left from where it
sinks to a stationary position

Excessive use of pesticide reduces
the caterpillar population to zero after which the predatory bug population also collapses

Holding the ball with
the right hand

The ball can be held still anywhere
along the vertical line extending below the stable equilibrium using
only the right hand

The system can be stabilised anywhere along the line segment H =
60.0, P < 20.0 using a constant
level of pesticide application. This
line corresponds to the P nullcline
of the system.

Holding the ball with
the left hand

The ball can be held still anywhere
along the horizontal line extending
to the left of the stable equilibrium
using only the left hand

The system can be stabilised anywhere along the line segment H <
60.0, P = 20.0 using a constant
level of predator introduction. This
line corresponds to the H nullcline
of the system

Dropping the ball
from one hand to the
other

The ball is held in the left hand, released, and allowed to ‚Äúfall‚Äù into
the other hand

The system is allowed to transition
from a regime of predator only stabilisation to pesticide only stabilisation under the action of its intrinsic
dynamics

Bouncing the ball
with the left hand

The ball can be bounced along the
horizontal line extending to the left
of the stable equilibrium

The system, under a regime of
predator only stablisation, can be
moved to lower levels of prey population density using small impulses
of predator introduction followed
by an adjusted stabilising level of
predator introduction

6

1697

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
7

R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

(a)

(b)

50

80
1

H,P

60

40

40
20
0

30

0

2

4

6

8

6

8

P

Time
4
5

(c)
12

2
P

20

H

h ,h

3

10

0

0

20

40

60

H

80

100

6

0

0

2

4

Time

Figure 3: (a) Some of the ‚Äúmoves‚Äù users discovered while experimenting with the Lotka-Volterra system. 1. ‚ÄúLosing‚Äù the ball 2. ‚ÄúStopping‚Äù the
ball with the left hand 3. ‚ÄúStopping‚Äù the ball with the right hand 4. ‚ÄúBouncing‚Äù the ball with the left hand 5. ‚ÄúDropping‚Äù the ball from the left
hand and catching it in the right. The dashed lines show the uncontrolled trajectory of the system for various initial conditions. (b) State variable
histories for dropping the ball from the left hand and catching it in the right (dashed line = H, solid line = P ). (c) Control variable histories for
dropping the ball from the left hand and catching it in the right (dashed line = hH , solid line = hP ) .

5. Discussion
The global properties of the 2-dimensional Lotka-Volterra system discovered in this example can be determined
analytically [26]. However, the example also demonstrates that these properties can be discovered by users with no
specialist knowledge through sensory-motor exploration facilitated by continuous interaction with a simulation of the
system. While the example was a relatively simple system, it was readily dealt with by the users. Work is underway to
apply the approach outlined in this paper to more complex systems that pose a greater challenge to analytic techniques.
Continuous interactive simulation allows a user to explore the behaviour of a dynamical system through experimental manipulation of the system. As the example illustrates, this allows a user to discover not only global properties
of a system such as cycles, equilibria, and so on, but also ways in which the system can be controlled. For example,
users discovered not only that there is a stable equilibrium, but also how to steer the system to that state. In general,
the problem of controlling a nonlinear dynamical system in order to achieve a particular outcome is a good deal more
diÔ¨Écult than simply describing its global properties, even for relatively small systems. This suggests that continuous
interactive simulation might form the basis of a novel dynamics problem solving environment. With an understanding
of a system‚Äôs dynamics gained through experimentation a user can be asked to perform a task that corresponds to a
speciÔ¨Åc control problem. For example, a constrained minimum time optimal control problem might be presented to
a user as ‚Äúput the ball in the box as quickly as possible keeping the ball above the horizontal plane at all times‚Äù (see
Ô¨Åg 2). A user‚Äôs movement actions as they attempt such a task can be interpreted as a solution to the problem. As
their performance improves with practice so will the quality of the solutions produced. Such a scheme may allow
human capabilites to produce solutions to problems that are diÔ¨Écult to solve otherwise or to produce new, perhaps
more creative, solutions to problems that can be solved using more conventional techniques.
There are clearly limits to the scale of dynamical system that can be explored using continuous interactive simulation. The human sensory-motor system is a limited resource and there will, inevitably, be many systems that are too
large or too complex for humans to deal with directly. The requirement to be able to simulate a system in ‚Äúreal-time‚Äù
also places limits on the scale of the systems that might be explored in this fashion. Key to maximising the eÔ¨Äectiveness of this form of exploration will be engaging human sensory-motor capabilities to the fullest extent possible. The
simple phase space representation described in this paper can be extended to support higher dimensional systems [4]
and readily available 6-axis joysticks can allow control over more control variables than the simple 2-axis joysticks
used in the example. While there are many interesting systems with several state and control variables, this scheme

1698

R.J. McAdam / Procedia Computer Science 1 (2012) 1691‚Äì1698
R. J. McAdam / Procedia Computer Science 00 (2010) 1‚Äì8

8

represents a somewhat impoverished way of engaging human movement capabilities. The normal physical environment in which movement occurs typically involves a great many variables across a wide range of sensory modalities.
In terms of interaction, the human body is capable of about 110 independent joint rotations with associated muscle cocontractions [1]. Richer forms of physical engagement, perhaps using full-body motion capture with haptic feed-back,
for example, may allow human sensory-motor capabilities to be applied to more complex systems.
6. Acknowledgements
Thanks to Michael Antolovich, Ken Lodge, and Keith Nesbitt for comments on drafts of this paper. Appreciation
also to the Centre for Research in Complex Systems (CRiCS) at Charles Sturt University for oÔ¨Éce and laboratory
facilities and the luxury of the CRiCS writing retreats.
7. References
[1] P. D. Neilson, M. D. Neilson, Review: An overview of adaptive model theory: solving the problems of redundancy, resources, and nonlinear
interactions in human movement control, Journal of Neural Engineering 2 (3) (2005) S279‚ÄìS312.
[2] D. M. Wolpert, Z. Ghahramani, J. R. Flanagan, Perspectives and problems in motor learning, Trends in Cognitive Sciences 5 (11) (2001)
487‚Äì94.
[3] R. Murray-Smith, T. Johansen, Multiple model approaches to modelling and control, Taylor and Francis Ltd, London, 1997.
[4] R. Wegenkittl, H. L¬®oÔ¨Äelmann, E. Groller, Visualizing the behavior of higher dimensional dynamical systems, in: Proc. of IEEE Visualization97, 1997, pp. 119‚Äì125.
[5] R. Silva, P. S. Rodrigues, J. C. Oliveira, G. Giraldi, Augmented Reality for ScientiÔ¨Åc Visualization: Bringing DataSets Into the Real World,
in: Proc. of the 2004 Summer Computer Simulation Conference, Citeseer, 2004, pp. 25‚Äì29.
[6] T. Hermann, O. Honer, H. Ritter, Acoumotion-an interactive soniÔ¨Åcation system for acoustic motion control, Lecture Notes in Computer
Science 3881 (2006) 312.
[7] L. Durbeck, N. Macias, D. W. C.R., J. Hollerbach, SCIRun/haptic display for Ô¨Çow Ô¨Åelds, in: J. Salisbury, M. Srinivasan (Eds.), Proceedings
of the Third PHANTOM Users Group Workshop, AI Lab Technical Report No. 1643 and RLE Technical Report No. 624, 1998, pp. 71‚Äì75.
[8] E. Zudilova-Seinstra, T. Adriaansen, R. van Liere, E. Zudilova-Seinstra, T. Adriaansen, R. van Liere, Overview of Interactive Visualization,
in: Trends in Interactive Visualization: State-of-the art survey, Springer, 2009, pp. 3‚Äì15.
[9] J. D. Mulder, J. J. van Wijk, R. van Liere, A Survey of Computational Steering Environments, Future Generation Computer Systems 15 (2)
(1999) 119‚Äì129.
[10] R. Kalawsky, Gaining Greater Insight Through Interactive Visualization: A Human Factors Perspective, in: Trends in Interactive Visualization: State-of-the Art Survey, Springer, 2009, pp. 119‚Äì154.
[11] D. Tennenhouse, Proactive computing, Communications of the ACM 43 (5) (2000) 43‚Äì50.
[12] A. Kirlik, S. Maruyama, Human‚Äìtechnology interaction and music perception and performance: Toward the robust design of sociotechnical
systems, Proceedings of the IEEE 92 (4) (2004) 616‚Äì631.
[13] L. Loke, A. Larssen, T. Robertson, J. Edwards, Understanding movement for interaction design: frameworks and approaches, Personal and
Ubiquitous Computing 11 (8) (2007) 691‚Äì701.
[14] M. Massink, G. Faconti, A reference framework for continuous interaction, Universal Access in the Information Society 1 (4) (2002) 237‚Äì251.
[15] S. Smith, D. Duke, M. Massink, The hybrid world of virtual environments, in: Computer Graphics Forum, Vol. 18, Citeseer, 1999, pp.
297‚Äì308.
[16] R. Turner, F. Balaguer, E. Gobbetti, D. Thalmann, Physically based interactive camera motion control using 3d input devices, in: Computer
Graphics International, Vol. 91, Citeseer, 1991, pp. 135‚Äì145.
[17] A. Fuhrmann, H. L¬®oÔ¨Äelmann, D. Schmalstieg, Collaborative augmented reality: exploring dynamical systems, in: Proceedings of Visualization, Vol. 97, 1997, pp. 459‚Äì462.
[18] A. Witkin, M. Gleicher, W. Welch, Interactive dynamics, Proceedings of the 1990 symposium on Interactive 3D graphics (1990) 11‚Äì21.
[19] F. Brooks Jr, M. Ouh-Young, J. Batter, P. Kilpatrick, Project GROPEHaptic displays for scientiÔ¨Åc visualization, in: Proceedings of the 17th
annual conference on Computer graphics and interactive techniques, ACM New York, NY, USA, 1990, pp. 177‚Äì185.
[20] J. Laszlo, M. van de Panne, E. Fiume, Interactive control for physically-based animation, in: Proceedings of the 27th annual conference on
Computer graphics and interactive techniques, ACM Press/Addison-Wesley Publishing Co. New York, NY, USA, 2000, pp. 201‚Äì208.
[21] P. Zhao, M. van de Panne, User interfaces for interactive control of physics-based 3d characters, in: Proceedings of the 2005 symposium on
Interactive 3D graphics and games, ACM New York, NY, USA, 2005, pp. 87‚Äì94.
[22] C. Ghez, Voluntary movement, in: C. Ghez, E. Kandel, J. Schwartz, T. Jessell (Eds.), Principles of neural science, Elsevier, New York, 1991,
pp. 609‚Äì625.
[23] K. V. Nesbitt, MS-Taxonomy: A conceptual framework for designing multi-sensory displays, in: Information Visualisation, 2004. IV 2004.
Proceedings. Eighth International Conference on, 2004, pp. 665‚Äì670.
[24] P. W. Hedrick, Population Biology: The Evolution and Ecology of Populations, Jones and Bartlett Publishers, Boston, 1993.
[25] M. RaÔ¨Åkov, J. Balthazar, Optimal pest control problem in population dynamics, Computational & Applied Mathematics 24 (2005) 65‚Äì81.
[26] Y. Takeuchi, Global dynamical properties of Lotka-Volterra systems, World ScientiÔ¨Åc Pub Co Inc, 1996.

