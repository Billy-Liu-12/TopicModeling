Procedia Computer Science
Volume 29, 2014, Pages 844–854
ICCS 2014. 14th International Conference on Computational Science

Variable Neighborhood Search Based Set covering ILP
model for the Vehicle Routing Problem with time windows
Amine Dhahri1 , Kamel Zidi2 , and Khaled Ghedira3
1

2

National School of Computer Science (ENSI)
Tunis, 2010 Manouba, Tunisia
aminedhahri@gmail.com
University of Gafsa, Faculty of Sciences of Gafsa
Zarroug, Gafsa 2112, Tunisia
kamel.zidi@fsgf.rnu.tn
3
SOIE-Management Higher Institute
41,Cite Bouchoucha Le Bardo 2000, Tunisia
khaled.ghedira@isg.mu.tn

Abstract
In this paper we propose a hybrid metaheuristic based on General Variable Neighborhood search
and Integer Linear Programming for solving the vehicle routing problem with time windows
(VRPTW). The problem consists in determining the minimum cost routes for a homogeneous
ﬂeet of vehicles to meet the demand of a set of customers within a speciﬁed time windows. The
proposed heuristic, called VNS-SCP is considered as a matheuristic where the hybridization of
heuristic (VNS) and exact (Set Covering Problem (SCP)) method is used in this approach as
an intertwined collaborative cooperation manner. In this approach an initial solution is ﬁrst
created using Solomon route-construction heuristic, the nearest neighbor algorithm. In the
second phase the solutions are improved in terms of the total distance traveled using VNS-SCP.
The algorithm is tested using Solomon benchmark. Our ﬁndings indicate that the proposed
procedure outperforms other local searches and metaheuristics.
Keywords: Vehicle Routing Problem With Time Windows , variable neighborhood search , matheuristics, ILP

1

Introduction

Supply chain involves many activities like supply and production. For a long time, research
on logistics has focused on optimizing these activities since this optimization has eliminated
the waste of time. The transport activity is one of the most important activities in logistics.
A better organization of this activity mainly vehicle routing presents an economic challenge.
Because of this economic importance and priority, researchers have paid great interest to the
844

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.076

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

vehicle routing problem VRP. The Vehicle Routing Problem (VRP) is considered as an NP-hard
combinatorial optimization problem, which was proposed, by Dantzig and Ramser in [8]. VRP
is identiﬁed as a plan to follow for serving a number of customers by a number of vehicles,
knowing that the cost of allocating vehicles to customers must be reduced. There are many
variations of VRP, such as the Capacitated Vehicle Routing Problem (CVRP), Vehicle Routing
Problem with Pickup and Delivery (VRPPD), Dynamic Vehicle Routing Problem (SVRP) and
the Vehicle Routing Problem with Time Windows (VRPTW). Finding near-optimal solutions
within a shorter computational time using approximate approaches for the VRPTW problem
was the mainly objective for researchers over the years and the main objective of this paper.
In [22], Rochat and Taillard used a probabilistic diversiﬁcation and intensiﬁcation technique
to a local search algorithm for the VRPTW. A tabu search which is a local search-based
metaheuristic was implemented in 1997 in [28] to tackle this problem and improve the best
known solution. Since the tabu search metaheuristic has been widely used to solve the VRPTW,
we can ﬁnd more research work about it in [19], [6], [3], [13], [17] and [24]. A simulated annealing
metaheuristic and its parallel version was successfully designed by Chiang and Russell in [4]
and Debudaj-Grabysz in [9]. Results have shown that these two approaches have succeeded
in solving a large-scale of VRPTW. As an evolutionary computation (EC), population-based
metaheuristic algorithms are widely used to solve the VRPTW and much research eﬀort has
been carried out to develop evolutionary algorithms (EAs) to solve the VRPTW. Consider, for
instance, the example of paper which is used by Genetic algorithm (GA) to solve the VRPTW,
[30]. In [29], a solution is represented as an integer string, genetic operation like crossover and
adaptive mutation scheme are used to improve the quality of solutions. The ﬁndings showed the
eﬀectiveness of the hybrid GA for the VRPTW. Recently, Alvarenga in [1] has hybridized the
genetic algorithm with a set partition formulation and. Also Good feasible solutions produced
by a General Variable Neighborhood Search in work of Dhahri et al [10].

2

Problem Deﬁnition

The VRPTW is deﬁned as follows: given a graph (V ,A) where V = {0, ..., n + 1} a customer
set and A = {(i; j)|i, j; ∈ V } an arc set. Node 0 is the depot, and node i is a customer location
with demand qi , service time windows (ei , li ) where ei is the earliest time that service can
begin and li is the latest time that service can begin and service time si . Each arc (i, j) has
a non-negative distance dij . A set K of identical vehicles with capacity Q should attend n
customers, represented by vertices 1, .., n Consider that N = V − {0; n + 1}. The total demand
of each route should not exceed Q.[5];

xijk

=

1 if vehicle k travelled directly from customer ci to cj
0 otherwise
845

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

n

min

n

v

cij xijk

z=

(1)

i=0 j=0 k=1

xijk = 1 ∀i ∈ N

s.t.

(2)

k∈K j∈V

x0jk = 1 ∀k ∈ K

(3)

xijx −

(4)

j∈V

xjix = 0 ∀k ∈ K
i∈V

i∈V

xi(n+1)k = 1 ∀k ∈ K

(5)

j∈V

xijk ≤ Q ∀k ∈ K

qi
i∈N

(6)

j∈V

bik + di + cij − (1 − xijk )Mij ≤ bjk ∀k ∈ K,
ei ≤ bik ≤ li ∀k ∈ K, ∀i ∈ V

∀(i, j) ∈ A

xijk ∈ {0, 1}

(7)
(8)
(9)

The objective function (1) represents the total cost to be minimized. Constraints (2) assure
that customer i is delivered only by one vehicle k. Constraints (3)-(5) are ﬂow constraints of
the vehicle k; that is, each vehicle leaves the depot, visits the customers, and then, returns to
the depot. Constraints (6) guarantee that the vehicle capacity is not exceeded. Constraints
(7) and (8) signify the time constraints; to make sure that time window is not violated, where
bik represents the time from which the vehicle k begins to serve the customer i and Mij are
large constants. According to [5], Mij can be replaced by max {ei + di + cij − ej , 0} ∀i, j ∈ A.
Constraints (9) deﬁne the domain of the decision variables.

3

Variable Neighborhood Search for the VRPTW

Proposed by Hansen and Mladenovic in [18], variable neighborhood search VNS is a metaheuristic based on the concept of systematic change of neighborhoods during the search, knowing that
there are several rules of crucial importance to governor this change. The basic method Basic
VNS works in several stages described in 3. Firstly it requires the deﬁnition of diﬀerent neighborhood structures, denoted V1 ...VM AX generally from diﬀerent sizes. A relation order between
these structures is deﬁned in terms of problem. From an initial solution x, a neighbor of x is
selected randomly using the neighborhood structure V1 . If the solution obtained after the application of a local search method (which is deﬁned) is better than the initial solution, then VNS
resumes the search from this solution. Otherwise, a solution is selected using a neighborhood
of upper range, here is the neighborhood V1 . Local search is applied to this solution, and so on.
This method allows escaping from a local optimum if it is a local optimum for neighborhood
for a range smaller than the max.

3.1

Initial Solution

In this work we used The Nearest Neighbor algorithm for which Solomon in [26] proposed a
cost function to generate a initial solution. The nearest-neighbor heuristic start by ﬁnding the
846

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

Algorithm 1 Basic Steps of VNS
Initialization:choose a set of neighborhood structure Vk , k = 1, ..., kmax , choose a distribution function of random variable, choose a local search method, an initial solution x and
deﬁne the stopping criterion.
repeat
k←1
repeat
Shaking: generate randomly a solution y from the kth neighborhood y ∈ Vk(x) ; kth
neighborhood y ∈ Vk(x) ;
Local search: apply local search methods with y initial solution to obtain a local
optimum denoted y1
change:if the local optimum y1 is better than x then change (x ← y1 ) and continue the
search with V1 (K = 1), else k ← k + 1.
until k < kmax
until the stopping criterion is checked

closest (in terms of a measure) unrouted customer to the depot. At every subsequent iteration,
the heuristic searches for the customer closest to the last customer added to the route. This
search is performed among all the customers. The mentioned cost function is deﬁned as follows:
Cij = γ1 Dij + γ2 Tij + γ3 Vij

(10)

γ1 + γ2 + γ3 = 1, γ1 ≥ 0, γ2 ≥ 0, γ3 ≥ 0
where i is in the partial solution and j is not in the partial solution.with Dij the Euclid
distance from i to j. Tij the Time diﬀerence between completing i and starting j and Vij the
Time remaining until last possible start of j following i.

3.2

Shaking

Generation of the whole neighborhood structure is the most important part of the VNS metaheuristic. In this paper ﬁve adjacent structures were designed. There is Intra-route and Interroute. In the shaking phase customers who will be changed are selected randomly and the
target route where we will insert the segment of customers is also selected randomly , thus, the
algorithm stopped with the ﬁrst changed solution. Table 1
1. T wo − opt: Introduced by Croes in [7], the basic idea is replacing two arcs in a route by
two others of the same route while inversing the direction of the route.
2. Insert−M ove:The Insert-Move neighborhood consists to change the position of a segment
route.
3. Or − opt Introduced by Or in [20] for the traveling salesman problem . The basic idea is
to relocate a set of consecutive vertices. This is achieved by the relocation of three arcs
in the original route by another while maintaining the same orientation of route.
4. T wo − opt∗ : Introduced by Potvin in [21]. The basic idea of the Two-opt* is to combine
two routes to insert the last customers of a given route after the ﬁrst customer of another
route while maintaining the orientation of the route.
847

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

5. Exchange: Introduced by Taillard in [21]. This operator enables the exchange of a value
of γ customers between two diﬀerent routes where in our case γ ∈ [1, 5].
6. Relocate: Introduced by Lin [15]. The basic idea is to change the location of a customer in
another route. In our case we exchanged the location of γ customers located consecutively
in the original route with γ ∈ [1, 5].
In the literature, the objective function is deﬁned as hierarchy of objectives for the VRPTW,
in which we minimize the number of vehicles at ﬁrst then the total travel distance.We deﬁne a
procedure to minimize the number of route based on relocate neighborhood as follows;
Algorithm 2 route minimizing procedure
for r1 =1...v do
for r2 =1...v do
if r1 = r2 then
for each customer k ∈ r1 do
for each position in r2 do
if the route r2 after insertion of k in position i is feasible then change the neighborhood solution s of s
end for
end for
end if
end for
end for

K
1
2
3
4
5
6
7
8
9
10
11
12

Operator
Insert-Move
Insert-Move
Or-Opt
Relocate
Relocate
Relocate
Exchange
Exchange
Exchange
Exchange
Exchange
Exchange

Segment length
1
2
1
1
2
3
1
2
3
4
5
6

Table 1: set of neighborhood structure with Kmax = 12

3.3

Local Search

To ameliorate the solution obtained through the shaking process, it will be subjected to a Local
search LS method using ﬁve neighborhood with the best improvement strategy; T wo − opt,
Relocate with the relocation of one vertex, T wo−opt∗ , Or −opt, swap(1), swap(2) and swap(3)
Exchange with the exchange of one and two vertexes. The algorithm is described as follows;
848

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

Algorithm 3 basic steps of Local Search
Require: an initial solution x.
x1 ← Best improvement on x using neighborhood N1
x2 ← Best improvement on x1 using neighborhood N2
x3 ← Best improvement on x2 using neighborhood N3
x4 ← Best improvement on x3 using neighborhood N4
x5 ← Best improvement on x4 using neighborhood N5
if f (x4 ) < f (x) then
x ← x5
end if

3.4

Acceptance Criterion

After shaking and local search phases have been completed, the resulting solution should be
compared with the current one. Deciding whether it will be selected or not we adopted an
acceptance criterion. In the basic VNS only solutions that improve the cost will be chosen,
but we can easily ﬁnd them in a local optimum. Thus, in most cases, therefore, it is essential
to have a strategy to not accept Improvement solution under certain conditions. Instead,
we put a system that is inspired by the simulated annealing (SA) [14]. More speciﬁcally, the
solution obtained after the local search procedure is always accepted if the quality of the solution
obtained is better and it is also accepted with a cost higher than the current solution with a
probability exp(−(f (x ) − f (x)/T )) with f (x) the cost of the solution. The temperature T
decreases linearly in n/k steps during the search, n represents the total number of iterations.
Thus, in each k iteration, T is reduced by an amount T ∗ n/k. In the next section we will
introduce our VNS-SCP approach for the VRPTW. The resulting method is called Skewed
VNS which is an extension of VNS.

4

Set Covering ILP Model for the VRPTW

Let the index set of all feasible routes be r = {1, 2, ..., R}. Let cr be the cost (e.g., length) of
route r, and let Sr ⊆ V denote those customers appearing in route r for all r ∈ R. Deﬁne

αir

=

1 if route r is in the optimal solution,
0 otherwise

for each customer i ∈ V and each route r ∈ R. Also, for every r ∈ R, let

yir

=

1 if customer ci is served by vehicle r
0 otherwise
849

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

min

z=

cr yir

(11)

r∈R

αir yir ≥ 1 ∀i ∈ V

(12)

yir ≤ K

(13)

yir ∈ {0, 1}

(14)

s.t.
r∈R

r∈R

In the set-covering formulation of the VRPTW, the objective is to select a minimum-cost
set of feasible routes such that each customer is included in some route. Constraints (12) ensure
that each customer appear in at least one route, constraints (13) guarantee that the number of
used routes is less or equal to K.

5

Hybridizing the VNS with the ILP Approach

The motivation for VNS-SCP is to exploit feasible routes of VNS solutions to obtain a high
quality solution by applying the ILP solver on the set covering model. At a given time a set
of routes is provided to the ILP model. The model will be solved by a branch-and-cut based
generic ILP solver. As a conclusion, the eﬃcacy of ILP solver depends on the quality of routes
contained in the model i.e. the amount of routes, cost-eﬀective routes and the diversity of
routes. Not enough routes will prevent the ILP solver from ameliorating the cost of solutions;
also, a large number of routes will prevent solving the model in short time. Consequently,
selected routes to be added to the model must be carefully selected. At each iteration, if the
current best solution is improved then it will be added to the pool. After each application of
local search , if the solution is improved , this new solution is transferred to pool δ. Since the
ILP used allows to customers to be served more than one time; redundant visits for customers
are removed with the minimization of the total distance traveled. In contrast, a set partitioning
model (derived by turning inequalities (12) into equalities) would yield only feasible solutions
but at the same time exclude many potentially improving combinations. In case routes were
altered during this transfer process, corresponding new columns are also added to the ILP
model.

6

Experimental Results

The VNS algorithms have been implemented in Java, and executed on a 2.53 GHz intel Core i5
with 4GB RAM. For solving the ILP model in the hybrid VNS-SCP we apply ILOG CPLEX
12 MIP solver implemented with C++ with the same conﬁguration machine. The VNS-SCP is
tested by the classical set of 56 benchmark problems [27]. Those problems are composed of six
diﬀerent problem types (R1, C1, RC1, R2, C2, RC2), each type contains a number of problem
and each problem contains 100 customers. The Euclidean distances between 2 customers are
represented by the travel times between them. Sets C have the clustered customers whose time
windows are generated based on a known solution. Sets R have the customers locations generated randomly over a square. Sets RC have a combination of randomly placed and clustered
customers. Sets of type 1 have narrow time windows and a small capacity of the vehicle. Sets
of type 2 have larger time windows and a larger capacity of the vehicle. Therefore, the solutions
850

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

Algorithm 4 basic steps of VNS-SCP
Initialization:choose a set of neighborhood structure Nk , k = 1, ..., kmax and Nk , k =
1, ..., kmax choose a distribution function of random variable, initial solution x and deﬁne
the stopping criterion.
δ←∅
repeat
K←1
repeat
Shaking: generate randomly a solution y from the kth neighborhood y ∈ Nk(x) ; kth
neighborhood y ∈ Nk(x)
Local search: apply Local Search procedure 3.3 with Ns and y initial solution to obtain
a local optimum denoted y1
if the local optimum y1 is better than x then
(1) (x ← y1 )
(2) continue the search with N1 (k = 1)
(3) add routes of solution x to δ // enrich the ILP model
else
k ← k + 1.
end if
x ← apply ILP solver on δ;
until k < kmax
until the stopping criterion is checked

to type 2 problems have very few routes and more customers per route. An initial temperature
of 30 and we apply linear cooling every 100 iterations T0 = 10, (γ1 , γ2 , γ3 ) = (0, 1, 0). For the
VNS we set an iteration limit of either 1000, an initial temperature of 10 and a linear cooling
every 100 iterations. For solving the ILP model in hybrid VNS-SCP we apply the general purpose MIP solver ILOG CPLEX 12. Each algorithm is run 20 times per instance and we report
best results; e.i. best travel costs and the time in seconds were the best result is found.For
the time execution of the ILP solver we can solve the model with 1500 route on a 2 seconds
or less. In Table 2, the best results obtained by many authors in the literature [25]. The ﬁrst
column lists the authors. Columns R1, R2, C1, C2, RC1 and RC2 shows the average number
of vehicles(NV), the average total distance(TD) and the average time in in minutes(Time) .It
is observed that our approach, as a metaheuristic can produce good solutions even best known
soltions was founded in a short time .

7

Conclusion

This paper proposed an algorithm based on the hybridization of exact an heuristic method
to solve the Vehicle Routing Problem with Time Windows (VRPTW). The algorithm was
presented in detail to allow a more deeply understanding of the metaheuristic operation. The
use of the SCP formulation as a cooperative combination of VNS and a generic ILP solver
applied to a set covering ILP formulation was proposed. The VNS provides the ILP with a set
of feasible routes of the actual best solutions, and the ILP solver uses a parallel branch and
cut to solve the formulation. The reached solution is added to VNS and so on, until a given
time limit is reached. By applying the algorithms to 56 instances used as benchmarking in
the literature, the approach was able to ﬁnd a good or even the best known solutions with the
851

VNS-SCP for VRPTW

[28]

[4]

[16]

[11]

[12]

[23]

[6]

[2]

VNS-SCP

NV
TD
Time
NV
TD
Time
NV
TD
Time
NV
TD
Time
NV
TD
Time
NV
TD
Time
NV
TD
Time
NV
TD
Time
NV
TD
Time

A.Dhahri, K.Zidi and K.Ghedira

R1
12.17
1209.35
229.6
12.17
1209.35
12.17
1249.55
225.8
12.00
1217.73
210.0
11.92
1209.35
275.0
12.08
1210.21
12.08
1210.14
12.00
1229.48
125.7
12.17
1204.19
12.69

R2
2.82
980.27
337.2
2.73
980.27
2.82
1016.58
33.9
2.73
967.75
210.0
2.73
980.27
352.0
3.00
941.08
2.73
969.57
2.73
989.62
107.2
3.00
982.96
19.03

C1
10.00
828.38
10.00
828.38
10.00
830.06
10.00
828.38
10.00
828.38
10.00
828.38
10.00
828.38
10.00
828.38
10.00
828.38
2.68

C2
3.00
589.86
3.00
589.86
3.00
591.03
3.00
589.86
3.00
589.86
3.00
589.86
3.00
589.86
3.00
590.30
3.00
589.86
2.23

RC1
11.50
1389.22
187.7
11.88
1389.22
11.88
1412.87
155.3
11.50
1382.42
210.0
11.63
1389.22
242.0
11.63
1382.78
11.50
1389.78
11.50
1394.26
102.2
11.75
1366.46
10.28

RC2
3.38
1117.44
193.3
3.25
1117.44
3.25
1204.87
36.3
3.38
1229.54
210.0
3.25
1117.44
363.0
3.38
1105.22
3.25
1134.52
3.25
1141.07
51.9
3.25
1200.62
15.4579

Table 2: Comparison of solutions produced by the Proposed approach, with the results of
diﬀerent metaheuristics Proposed by other authors.The Time line depict the time consumption
in minutes
minimum number of vehicles.

References
[1] Guilherme Bastos Alvarenga, Geraldo Robson Mateus, and G De Tomi. A genetic and set partitioning two-phase approach for the vehicle routing problem with time windows. Computers &
Operations Research, 34(6):1561–1584, 2007.
[2] Olli Br¨
aysy. A reactive variable neighborhood search for the vehicle-routing problem with time
windows. INFORMS Journal on Computing, 15(4):347–368, 2003.
[3] Olli Br¨
aysy and Michel Gendreau. Tabu search heuristics for the vehicle routing problem with
time windows. Top, 10(2):211–237, 2002.
[4] Wen-Chyuan Chiang and Robert A Russell. Simulated annealing metaheuristics for the vehicle
routing problem with time windows. Annals of Operations Research, 63(1):3–27, 1996.
[5] Jean-Francois Cordeau, Guy Desaulniers, Jacques Desrosiers, Marius M Solomon, and Fran¸cois
Soumis. Vrp with time windows. The vehicle routing problem, 9:157–193, 2002.

852

VNS-SCP for VRPTW

A.Dhahri, K.Zidi and K.Ghedira

[6] Jean-Fran¸cois Cordeau, Gilbert Laporte, and Anne Mercier. A uniﬁed tabu search heuristic for
vehicle routing problems with time windows. Journal of the Operational research society, pages
928–936, 2001.
[7] GA Croes. A method for solving traveling-salesman problems. Operations Research, 6(6):791–812,
1958.
[8] George B Dantzig and John H Ramser. The truck dispatching problem. Management science,
6(1):80–91, 1959.
[9] Agnieszka Debudaj-Grabysz and Zbigniew J Czech. Theoretical and practical issues of parallel
simulated annealing. In Parallel Processing and Applied Mathematics, pages 189–198. Springer,
2008.
[10] Amine Dhahri, Kamel Zidi, and Khaled Ghedira. Vehicle routing problem with time windows
under availability constraints. In Advanced Logistics and Transport (ICALT), 2013 International
Conference on, pages 308–314. IEEE, 2013.
´
[11] Luca Maria Gambardella, Eric
Taillard, and Giovanni Agazzi. Macs-vrptw: A multiple colony
system for vehicle routing problems with time windows. In New ideas in optimization. Citeseer,
1999.
[12] Hermann Gehring and J¨
org Homberger. A parallel hybrid evolutionary metaheuristic for the
vehicle routing problem with time windows. In Proceedings of EUROGEN99, volume 2, pages
57–64, 1999.
[13] Sin C Ho and Dag Haugland. A tabu search heuristic for the vehicle routing problem with time
windows and split deliveries. Computers & Operations Research, 31(12):1947–1964, 2004.
[14] Scott Kirkpatrick. Optimization by simulated annealing: Quantitative studies. Journal of statistical physics, 34(5-6):975–986, 1984.
[15] Shen Lin et al. Computer solutions of the traveling salesman problem. Bell System Technical
Journal, 44(10):2245–2269, 1965.
[16] Fuh-Hwa Franklin Liu and Sheng-Yuan Shen. A route-neighborhood-based metaheuristic for vehicle routing problem with time windows. European Journal of Operational Research, 118(3):485–
504, 1999.
[17] Qi Ming-yao, Miao Li-xin, Zhang Le, and Xu Hua-yu. A new tabu search heuristic algorithm
for the vehicle routing problem with time windows. In Management Science and Engineering,
2008. ICMSE 2008. 15th Annual Conference Proceedings., International Conference on, pages
1648–1653. IEEE, 2008.
[18] Nenad Mladenovi´c and Pierre Hansen. Variable neighborhood search. Computers & Operations
Research, 24(11):1097–1100, 1997.
[19] William P Nanry and J Wesley Barnes. Solving the pickup and delivery problem with time windows
using reactive tabu search. Transportation Research Part B: Methodological, 34(2):107–121, 2000.
[20] Ilhan Or. Traveling salesman-type combinatorial problems and their relation to the logistics of
regional blood banking. Xerox University Microﬁlms, 1976.
[21] Jean-Yves Potvin and Jean-Marc Rousseau. An exchange heuristic for routeing problems with
time windows. Journal of the Operational Research Society, 46(12):1433–1446, 1995.
´
[22] Yves Rochat and Eric
D Taillard. Probabilistic diversiﬁcation and intensiﬁcation in local search
for vehicle routing. Journal of heuristics, 1(1):147–167, 1995.
[23] Louis-Martin Rousseau, Michel Gendreau, and Gilles Pesant. Using constraint-based operators to
solve the vehicle routing problem with time windows. Journal of heuristics, 8(1):43–58, 2002.
[24] Paul Shaw. A new local search algorithm providing high quality solutions to vehicle routing
problems. APES Group, Dept of Computer Science, University of Strathclyde, Glasgow, Scotland,
UK, 1997.
[25] sintef. Benchmarks-Vehicle Routing and Travelling Salesperson Problems. Benchmark data sets
for vehicle routing problems with time window. http://www.sintef.no/Projectweb/TOP/VRPTW/

853

VNS-SCP for VRPTW

[26]
[27]
[28]

[29]
[30]

A.Dhahri, K.Zidi and K.Ghedira

Solomon-benchmark/100-customers/. [Online; Access in Octobre 2013].
Marius M Solomon. Algorithms for the vehicle routing and scheduling problems with time window
constraints. Operations research, 35(2):254–265, 1987.
Marius M Solomon. Vrptw benchmark problems. Excerpt from unpublished article, n. pag.
http://www. cba. neu. edu/˜ msolomon/.(15 May 2000), 2003.
´ Taillard, Philippe Badeau, Michel Gendreau, Fran¸cois Guertin, and Jean-Yves Potvin. A tabu
Eric
search heuristic for the vehicle routing problem with soft time windows. Transportation science,
31(2):170–186, 1997.
Kay Chen Tan, Loo Hay Lee, QL Zhu, and Ke Ou. Heuristic methods for vehicle routing problem
with time windows. Artiﬁcial intelligence in Engineering, 15(3):281–295, 2001.
Kenny Qili Zhu. A new genetic algorithm for vrptw. In Proceedings of the International Conference
on Artiﬁcial Intelligence. Citeseer, 2000.

appendix
best known solutions:Problem RC103, Distance=1235.7256
Route
Route
Route
Route
Route
Route
Route
Route
Route
Route

854

1: 1 3 7 8 9 47 5 46 6 4 2 1; 1 7 61 80 74 79 89 56 1;
2: 1 97 55 43 45 44 41 37 36 38 82 1 ;
3: 1 99 13 12 16 15 48 18 17 14 11 83 1;
4: 1 81 95 94 72 73 39 40 42 62 71 101 69 1;
5: 1 100 54 1;
6: 1 57 64 77 90 19 49 26 78 1;
7: 1 92 96 63 68 85 86 52 21 23 25 84 1;
8: 1 91 53 60 10 88 98 76 59 1 ;
9: 1 67 65 50 20 24 22 75 87 58 66 1 ;
10: 1 93 51 34 33 31 29 27 28 30 32 35 1

