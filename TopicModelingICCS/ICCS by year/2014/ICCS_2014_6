Procedia Computer Science
Volume 29, 2014, Pages 924–935
ICCS 2014. 14th International Conference on Computational Science

Performance Evaluation and Case Study of a Coupling
Software ppOpen-MATH/MP
Takashi Arakawa1 , Takahiro Inoue2 , and Masaki Sato3
1
2

Research Organization for Information Science and Technology, Shinagawa, Tokyo, Japan
arakawa@rist.jp
Research Organization for Information Science and Technology, Shinagawa, Tokyo, Japan
tinoue@rist.jp
3
University of Tokyo, Kashiwa, Chiba, Japan
sato@aori.u-tokyo.ac.jp

Abstract
We are developing a coupling software ppOpen-MATH/MP. ppOpen-MATH/MP is characterized by
its wide applicability. This feature comes from the design that grid point correspondence and
interpolation coeﬃcients should be calculated in advance. However, calculation of these values
on the unstructured grid model requires a lot of computation time in general. So, we developed
new eﬀective algorithm and program for calculating the grid point correspondence as a preprocessor of ppOpen-MATH/MP. In this article, an algorithm and performance evaluation of the
program is presented in the ﬁrst half, and next, an application example of ppOpen-MATH/MP,
targeting atmospheric model NICAM and ocean model COCO coupling, is described.
Keywords: Earth System Modeling, Coupler, Coupling framework

1

Introduction

Historically, global atmospheric models have employed spectral method, because this method
is better on conservation than grid method and is easier to avoid grid concentration at polar
region. Spectral method requires data transformation between wave space and grid space during
every time integration step, and this transformation needs all to all data exchange. Therefore,
this method is not suitable for recent MPP super computers. Based upon this background,
unstructured or sub-structured grid atmospheric models, which have an approximately uniform
grid point distribution on the whole globe have been developed. NICAM is developed by
AORI (Old name : CCSR Center for Climate System Research) of the University of Tokyo
and JAMSTEC [5] [7]. Details of this model will be described in later section. The ICON
dynamical core is developed by the Max Planck Institute for Meteorology (MPI-M) and the
Germany Weather Service (DWD) [4]. MPAS-A is developed by the climate modeling group
at Los Alamos National Laboratory and the National Center for Atmospheric Research. This
924

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.083

a Coupling Software

Arakawa, Inoue and Sato

model employs unstructured Voronoi meshes and C-grid discretization [6]. For utilizing these
models as an atmospheric component of an earth system model, these models must be coupled
with other components such as ocean model. However, unstructured grid is diﬃcult to couple
with other models, and coupling software that is applicable to such grid system is strongly
required.
For the reasons mentioned above, we are developing a coupling software ppOpen-MATH/MP
as a part of study for developing a software suite ppOpen-HPC. ppOpen-MATH/MP is applicable to
various models employing discretization methods supported by ppOpen-HPC such as FVM, FDM,
FEM. ppOpen-MATH/MP utilizes a coupling library Jcup[1] as a core technology. Jcup has very
wide applicability because it is independent from grid structure and enables users to implement
an arbitrary interpolation code. However, in order to apply Jcup to a model, ancillary programs
that support concrete grid systems are needed. ppOpen-MATH/MP is constructed with Jcup and
other models that supports various grid structures as illustrated in Figure.1.
The outstanding feature of Jcup (and ppOpen-MATH/MP) is its very wide applicability. This
comes from the design that, instead of the information such as grid structure and grid position
of each model, Jcup utilizes the correspondence table of grid points of both models used for
interpolation calculation as input information. Therefore, for coupling models through Jcup,
this correspondence must have been calculated beforehand. Hereinafter the correspondence
table is referred to as a mapping table.
Calculation of the mapping table is easy when the grid structures of both models are simple
for example when ΔX, ΔY , ΔZ are constant, but requires a large amount of calculation
when the grid structure is complex. So, we developed new eﬀective algorithm and program for
calculating the grid point correspondence of the unstructured mesh on a sphere as a preprocessor
of ppOpen-MATH/MP. In this article, an algorithm and perfomance evaluation of the program is
presented in the ﬁrst half. Then, an example application of ppOpen-MATH/MP that targets an
icosahedral global atmospheric model NICAM and an ocean general circulation model COCO
is described.

Figure 1: structure of ppOpen-MATH/MP

925

a Coupling Software

2

Arakawa, Inoue and Sato

Mapping Table Calculation

2.1

Polygon Search Algorithm

In this section, calculation method of grid point correspondence will be discussed. The simplest
form of interpolation calculation can be expressed as a code listed below.
do i = 1, N
R(fr(i)) = R(fr(i)) + S(fs(i))*C(i)
end do

Here, R is an interpolated value of a receive model, S is a grid point value of a send model,
and C is an interpolation coeﬃcient. fr means a conversion table from the iteration index i to
the grid point index of the receive model, and fs is a conversion table from i to the grid point
index of the send model. Mapping table is deﬁned as a conversion table of send grid indexes,
coeﬃcients and receive grid indexes, for the interpolation calculation.
To calculate the mapping table, send grid indexes corresponding to the receive grid index
must be searched ﬁrst. This point search algorithm is dependent on an interpolation scheme.
When nearest neighbor method is adopted, nearest neighbor search is applied. It is well known
that kd-tree algorithm is eﬀective for searching the nearest neighbor point, the amount of
calculation is O(n log n) when n is the number of the grid point. Flux conservation of physical
value (e.g. heat or momentum) is essential on atmosphere-ocean coupling that is the main
target of our study. On such case, a control volume interpolation is generally adopted. On the
control volume interpolation, an area-averaged ﬂux F k at a receive grid cell k that is overlapping
N cells on the send grid can be calculated from the equation below [3],
Fk =

1
Ak

N
n=1

Ank

fn dA,

(1)

where Ank is the area of the send grid sell n covered by the receive grid cell k, and fn is the
local value of the ﬂux in the send grid cell. Therefore, polygons overlapping to a polygon of the
receive model should be searched ﬁrst. These polygons can be calculated eﬀectively from the
process below,
• searching the send grid polygons in which vertices of receive grid polygon are included,
• searching the send grid polygons of which a vertex is included in the receive grid polygon.
Therefore, above procedures can be simpliﬁed to the search problem of the polygon in which
the target vertex is included. A brute-force method requires O(n2 ) calculation for this search
calculation, and it is thought that it might become to a bottle neck on high-resolution large
scale simulation.
So, we developed a new algorithm of which the amount of the calculation is O(n). This
algorithm can be illustrated as Figure.2. In this example, we search a polygon contains a grid
point 26 . We assume that the polygon which contains a previous grid point 25 is already found
as 1 , so the new search starts from this polygon 1 , and followed by polygons 2 , then 3 , 4 ,
as in a spiral.

2.2

Implementation

As stated in the previous section, the algorithm of the newly developed search program is
straightforward. The essence of this study is on the implementation which realizes the algorithm, in particular, is on the data structure which enables the spiral search. The whole code of
926

a Coupling Software

Arakawa, Inoue and Sato

Figure 2: Schematics of polygon search algorithm. For searching a polygon contains a grid
point 26 , the search starts from the polygon 1 which contains the previous grid point 25 , and
followed by polygons 2 , then 3 , 4 , as in a spiral.

ppOpen-MATH/MP including this search program is written in Fortran95, and the data structure

is deﬁned as a structure by ’type’ statement of the Fortran95 standard. The code deﬁning the
structure is shown in the List.1.
Type point_type deﬁnes a point, and member variables x and y are the coordinates of the
point and must be designated in longitude and latitude. A member variable target_polygon is
a pointer which points a polygon contains this point.
Type point_ptr_type is a structure that has a member pointer to a point_type. This structure is to deﬁne the array of pointer to a point_type type in other structure polygon_type.
Type polygon_type is the most important datatype of this search program. Polygon_type
deﬁnes a polygon. This has many member variables, but some of them are explained here.
A variable num_of_point is a number of vertices of this polygon, point is for the array of
vertex. Next_polygon is an array of polygon_type pointer which points polygons neighboring this polygon, and a variable num_of_next means the number of these neighboring polygons. User can deﬁne a mesh structure by deﬁning neighbor polygons. A pointer variable
target_polygon points to a type target_polygon_type, the polygons overlapping on this polygon. Type target_polygon_type is deﬁned as bi-directional list structure so that there can be
an arbitrary number of overlapping polygons.
All these variables and types are encapsulated in a module, and the module is designed so
927

a Coupling Software

Arakawa, Inoue and Sato

that user can access these through the interface procedures.
List 1: data types implmentation
type point_type
integer :: index
real(kind=8), pointer :: x
real(kind=8), pointer :: y
type(polygon_type), pointer
end type point_type

! ID number
! location in x direction
! location in y direction
:: target_polygon ! a polygon contains this point

type point_ptr_type
type(point_type), pointer :: ptr
end type point_ptr_type
type polygon_ptr_type
type(polygon_type), pointer :: ptr ! pointer to polygon_type.
end type polygon_ptr_type
type target_polygon_type
real(kind=8) :: coef ! interpolation coefficient: ‘r = r + coef*target\%data‘
integer :: area ! overlapped area
type(polygon_type), pointer :: target ! pointer to my polygon.
type(target_polygon_type), pointer :: before ! pointer to the polygon before me.
type(target_polygon_type), pointer :: next
! pointer to the polygon next to me.
end type target_polygon_type
!> polygon_type defines a polygon.
type polygon_type
logical :: search_flag ! flag whether search is completed or not.
logical :: mask
! flag whether this polygon is valid or not.
logical :: is_latlon
! flag whether the sides of this polygon are along lat-lon
integer :: index
! ID number of this polygon.
real(kind=8) :: data
! physical value of this polygon (not used).
type(point_type), pointer :: data_point ! point where the physical value is
defined
integer :: num_of_point
! number of vertex.
type(point_ptr_type), pointer :: point(:) ! array of vertex
integer :: num_of_next !< number of neighbor polygon
type(polygon_ptr_type), pointer :: next_polygon(:) ! pointer array of neighbor
polygon
integer :: num_of_target
! number of overlapping
polygon
type(target_polygon_type), pointer :: target_polygon ! pointer to the overlap
polygon list
logical :: is_included ! flag whether this polygon is included in the target
polygon
end type polygon_type
!> mesh_type defines a mesh.
type mesh_type
integer :: num_of_data_point ! number of data point ( = num_of_polygon )
type(point_type), pointer :: data_mesh(:) ! array of grid point
integer :: num_of_volume_point
! number of vertexes

928

a Coupling Software

Arakawa, Inoue and Sato

type(point_type), pointer :: volume_mesh(:) ! array of vertexes
integer :: num_of_polygon
! number of polygon ( =
num_of_data_point )
type(polygon_type), pointer :: polygon(:)
! array of polygon
end type mesh_type

2.3

Performance Evalulation

After the implementation of the search code, computational performance has been evaluated
on two conditions. The one is a simple and ideal case of which both mesh are rectangular, and
the other is a realistic case of which is NICAM hexagonal grid vs. lat-lon grid (LL grid). The
utilized computer is Linux PC which CPU is Core 2 Quad (2.66GHz) and memory size is 16GB,
and the compiler is Intel Fortran compiler.
Figure.3 shows the result of the simple case. The horizontal axis is a number of grid points,
the vertical axis is execution time, and both axes are plotted in log scale. A red square means
the result of brute-force method, and a blue square means the result of newly developed method.
Multiplier of the regression line is 2.0159 on the brute-force method case, and 1.0095 on the
new method case. This means that increase of execution time are O(n2 ) and O(n) at primitive
method and new method respectively.

Figure 3: Execution time on the simple case. Red square : Brute-force method, Blue square :
newly developed method.
Then the performance of the realistic case was measured. Here “realistic” means the case
that rectangular latitude-longitude grid is covered by a NICAM hexagonal grid. The grid of
NICAM is composed of a panel of ten diamond covering the Earth’s surface, and the resolution
(the number of grid point) is expressed by the number of dividing the side of the diamond.
For example GL05 (Grid Level 5) means the number of grid point is 20480 (25 × 25 × 10 × 2).
The resolutions of NICAM grid were GL05, GL07 and GL09, and corresponding to the NICAM
resolutions, the resolution of latitude-longitude grid was varied so as to keep the ratio of grid
size. Table.1 shows the number of grid points.
Performance measurement was done on the two case as follows,
929

a Coupling Software

Arakawa, Inoue and Sato

Table 1: Number of grid points
Resolution of NICAM grid
Number of grid point of Lat-Lon grid
Number of grid point of NICAM grid

GL05
10,585
20,480

GL07
166,753
327,680

GL09
2,657,665
5,242,880

• Search a polygon of Lat-Lon grid corresponding to the grid points of NICAM grid,
• Search a polygon of NICAM grid corresponding to the grid points of Lat-Lon grid.
The result is shown in Figure.4. Multiplier of the regression line is 1.022 on NICAM to LatLon case, and 1.0107 on Lat-Lon to NICAM case. This result reveals that the newly developed
method described above is eﬀective to the realistic condition as well as to the idealized condition.

Figure 4: Execution time on the realistic case. Blue square : NICAM grid to Lat-Lon grid, Red
square : Lat-Lon grid to NICAM grid.

3

NICAM COCO Coupling

In this section, coupling of atmospheric model NICAM and ocean model COCO will be introduced as a case study of ppOpen-MATH/MP.

3.1

Model Description

NICAM is a non-hydrostatic global atmospheric model employing icosahedral grid. Discretization is Finite-volume method with Arakawa A-grid. It is utilized as a global cloud resolving
model, and also used as a low-resolution Atmospheric General Circulation Model (AGCM) and
as a regional cloud resolving model based on stretched grids (Stretch-NICAM).
930

a Coupling Software

Arakawa, Inoue and Sato

COCO is an ocean general circulation model developed by AORI and JAMSTEC [2]. COCO
employs hydrostatic equations with Boussinesq approximation, and adopts generalized curvilinear horizontal coordinate (and also tripolar coordinate system). Discretization is Finitediﬀerence method with the Arakawa B horizontal staggered grid. This is also used as an
oceanic part of the coupled general circulation model MIROC [8]. The version of COCO used
in this study is the newest version employing tripolar grid.
Figure.5 shows the meshes of NICAM and COCO. Colored hexagon is NICAM grid. The
resolution of NICAM is GL05 which corresponds that the horizontal resolution is about 220km.
Black rectangle is COCO grid. The mesh is stretched at arctic region so that north-pole is
moved to Eurasia continent and North America continent.

Figure 5: Grid structer of NICAM and COCO. Colored hexagon grid: NICAM, Black rectangle
grid : COCO

3.2

Coupling Methods

As stated previously, COCO is used not only as a stand-alone model but also as an ocean
component of MIROC ESM. The employed model in this study is this coupled version. COCO
has been coupled to an atmospheric component of MIROC ESM through Jcup, and the exchange
data of NICAM-COCO coupling are almost the same as MIROC coupling without river runoﬀ.
Therefore, the code of COCO could be diverted to coupling with NICAM only with very little
modiﬁcation.
On the other hand, NICAM has implemented two types of ocean models. The one is
a ﬁxed ocean model which utilizes ﬁxed value obtained from outer ﬁle, and the other is a
mixed layer ocean model representing shallow ocean. Switching of these models is done with
a parameter OCEAN_TYPE written in a conﬁguration ﬁle of NICAM. The code of these models
are summarized into the module mod_ocean_sst and mod_ocean_mixedlayer respectively. So,
we made a new module mod_ocean_coco from mod_ocean_mixedlayer by inserting the interface
subroutines of ppOpen-MATH/MP, and added the caller program into the switching code. The
modiﬁed switching code and a call tree is shown in the Figure.6. As shown in the ﬁgure, the
subroutines of mod_ocean_coco are called when the parameter OCEAN_TYPE equals ’COCO’. ppOpenMATH/MP has a function to detect what model is running. By using this function, the parameter
931

a Coupling Software

Arakawa, Inoue and Sato

OCEAN_TYPE is overwritten in run time at the beginning of the main program of NICAM. So user

can control whether to couple with COCO or not through the argument of mpiexec (or mpirun)
without modifying the conﬁguration ﬁle or any code in models.
Exchange variables are summarized in the Table.2. Thirteen variables (wind stress, heat
ﬂux, precipitation etc.) are transferred to COCO from NICAM, and six variables (sst, sea ice
thickness etc.) are transferred to NICAM from COCO.
program prg_driver
call sfc_setup()
subroutine sfc_step()
do n = 1, TIME_LSTEP_MAX
call one_step_advance()
call sfc_step()

call ocean_step()
end subroutine

end do
end program

subroutine ocean_step()
if (OCEAN_TYPE == “SST”) then
call ocean_sst_step()
else if (OCEAN_TYPE == “mixedlayer”) then
call ocean_mixedlayer_step()
else if (OCEAN_TYPE == “COCO”) then
call ocean_coco_step()
end if
end subroutine

Figure 6: Subroutine call tree of NICAM ocean component

Table 2: Exchange data NICAM to COCO and COCO to NICAM
Index
1
2
3
4
5
6
7
8
9
10
11
12
13
Index
1
2
3
4
5
6

3.3

NICAM to COCO
Meaning of the variable
wind stress of X direction on sea ice
wind stress of Y direction on sea ice
wind stress of X direction on sea surface
wind stress of Y direction on sea surface
feat ﬂux from atmosphere to ocean
feat ﬂux from sea ice to ocean
feat ﬂux from atmosphere to ocean
short wave radiation
sublimation from sea ice
evaporation
precipitation
snowfall
surface temperature of sea ice
COCO to NICAM
Variable name Meaning of the variable
OSST
sea surface temperature
OA
density of sea ice
OHI
thickness of sea ice
OHSN
snow depth of the sea ice
OTICE
sea ice temperature
OTSI
sea ice surface temperature

Variable name
TAIX
TAIY
TAOX
TAOY
TQAI
TQIO
TQAO
TSWA
TWSB
TWEV
TPRC
TSNW
TTSI

Simulation Results

Coupled simulation has been performed on Fujitsu FX10 of the University of Tokyo. Results of 4
year integration from 2009/01/01 to 2012/12/31 are shown in Figure.7 and Figure.8. Figure.7 is
932

a Coupling Software

Arakawa, Inoue and Sato

a snap shot of sea surface temperature, and Figure.8 is time series of zonal mean air temperature
at the lowest layer. Realistic seasonal variation was reproduced. However, when looking at the
detail, it is possible to detect a tendency of the temperature decline. This trend is clearer at
the equatorial region. The range of 20degC or more temperature was 30S-15N at the start of
the integration was reduced to 15S-10N at the end of the time. The cause of this drift is not
clariﬁed yet and meteorological validity check of the exchange datais in progress by climate
researchers.

Figure 7: Snap shot of sea surface temperature

Figure 8: Time series of zonal mean air temperature at suraface
933

a Coupling Software

4

Arakawa, Inoue and Sato

Other Related Works

There are two other related works using ppOpen-MATH/MP.
Icosahedral grid applied to NICAM is inconvenient for meteorological analysis. Because,
for example, it is diﬃcult to calculate zonal mean, many analysis tools used by meteorological
science communities assume lat-lon grid, etc. Therefore, NICAM has a tool called “ico2ll”. This
tool converts lat-lon rectangular grid value from the value of hexagonal grid. It works as a post
process and not parallelized, and so, this data conversion is time consuming task. Therefore,
we are developing a real-time parallel IO tool which is executed in parallel with NICAM and
receives data from NICAM through ppOpen-MATH/MP.
In this article, FVM model NICAM and FDM model COCO coupling is described. ppOpenMATH/MP is designed to be applicable not only to these models but even to FEM model. So, in
order to demonstrate the validity and eﬀectiveness of the design of ppOpen-MATH/MP, study on
FDM model and FEM model coupling is ongoing. In this study we selected a seismic model
as FDM model and a structure model as FEM model. The target models are “Seism3D” and
“FrontISTR++”. Currently mapping table calculation codes has been completed, and inserting
ppOpen-MATH/MP interface subroutines in these models is in progress.

5

Conculusion

A coupling software ppOpen-MATH/MP has been developed as a part of a software suite ppOpenHPC. For realizing wide applicability, ppOpen-MATH/MP is designed to use a conversion table
between grid point indexes of the send model and these of the receive model. For calculating
this table eﬀectively, we developed a grid point search program of which eﬃciency is O(n). After
the implementation, we applied the code on the simple idealized case and realistic case and
could obtain the eﬃciency which was expected. ppOpen-MATH/MP was applied to the icosahedral
global atmospheric model NICAM and the global ocean model COCO as a case study. In this
experiment, four years integration was completed and realistic SST or temperature ﬁeld were
reproduced, although some physical problems still remain. ppOpen-MATH/MP is applicable not
only to FVM and FDM models but also to FEM models. For substantiating this applicability,
a study on a coupling with a seismic model (FDM) and a structure model (FEM) model is in
progress.

References
[1] Takashi Arakawa, Hiromasa Yoshimura, Fuyuki Saito, and Koji Ogochi. Data exchange algorithm
and software design of kakushin coupler jcup. Procedia Computer Science, 4:1516–1525, 2011.
[2] Hiroyasu Hasumi. Documentaion for CCSR Ocean Component Model (COCO) Version 4.0s. Center
for Climate System Research, April 2007.
[3] P. H. Jones. First- and second-order conservative remapping schemes for grids in sperical coordinates. Monthly Weather Review, 127:2204–2210, 1999.
[4] Florian Rauser, Jan Riehmeb, Klaus Leppkesc, Peter Korna, and Uwe Naumannc. On the use of
discrete adjoints in goal error estimation for shallow water equations. Procedia Computer Science,
1:107–115, 2010.
[5] M. Sato, T. Matsuno, H. Tomita, H. Miura, T. Nasuno, and S. Iga. Nonhydrostatic icosahedral
atmospheric model (nicam) for global cloud resolving simulations. Jounal of Computational Physics,
227:3486–3514, 2008.

934

a Coupling Software

Arakawa, Inoue and Sato

[6] William C. Skamarock, Joseph B. Klemp, Michael G. Duda, Laura Fowler, Sang-Hun Park, and
Todd D. Ringler. A multi-scale nonhydrostatic atmospheric model using centroidal voronoi tesselations and c-grid staggering. Monthly Weather Review, 240:3090–3105, 2012.
[7] H. Tomita, K. Goto, and M. Satoh. A new approach to atmospheric general circulation model: global
cloud resolving model nicam and its computational performance. Jurnal on Scienticif Computing,
30:2755–2776, 2008.
[8] S. Watanabe, T. Hajima, K. Sudo, T. Nagashima, T. Takemura, H. Okajima, T. Nozawa, H. Kawase,
M. Abe, T. Yokohata, T. Ise, H. Sato, E. Kato, K., S. Emori, and M. Kawamiya. Miroc-esm 2010:
model description and basic results of cmip5-20c3m experiments. Geoscientiﬁc Model Development,
4:845–872, 2011.

935

