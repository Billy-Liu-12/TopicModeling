Procedia Computer Science
Volume 29, 2014, Pages 1893–1903
ICCS 2014. 14th International Conference on Computational Science

Extending the Front: Designing RFID Antennas using
Multiobjective Diﬀerential Evolution with Biased
Population Selection
James Montgomery1 , Marcus Randall2 , and Andrew Lewis3
1

3

School of Engineering and ICT, University of Tasmania, Australia
james.montgomery@utas.edu.au
2
Department of Informatics, Bond University, Queensland, Australia
mrandall@bond.edu.au
Institute for Integrated and Intelligent Systems, Grifth University, Queensland, Australia
a.lewis@griffith.edu.au

Abstract
RFID antennas are ubiquitous, so exploring the space of high eﬃciency and low resonant frequency antennas is an important multiobjective problem. Previous work has shown that the
continuous solver diﬀerential evolution (DE) can be successfully applied to this discrete problem, but has diﬃculty exploring the region of solutions with lowest resonant frequency. This
paper introduces a modiﬁed DE algorithm that uses biased selection from an archive of solutions
to direct the search toward this region. Results indicate that the proposed approach produces
superior attainment surfaces to the earlier work. The biased selection procedure is applicable
to other population-based approaches for this problem.
Keywords: multiobjective optimisation, weighted preferences, RFID antenna design, diﬀerential evolution

1

Introduction

First introduced in 1948 [21], radio frequency identiﬁcation (RFID) has become one of the major
methods for the tracking and identiﬁcation of goods and items, particularly within logistics and
supply chains [9]. An RFID system consists of two basic components: a reader and a tag
(containing an antenna). The reader sends an RF signal which can power the receiver (the
tag). This in turn will radiate back a signal to the reader [20]. This backscattered signal
usually contains a number that uniquely identiﬁes the tag, and hence item. A key design
objective for the antenna is improving the read range (the distance the signal can be sent and
received), which is aﬀected by two main factors: read range is generally inversely proportional
to an antenna’s resonant frequency, f0 , and proportional to its gain (related to its eﬃciency,
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2014.05.174

1893

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis

25mm

25mm
1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

16

17

18

19

20

21

22

23

24

25

(a)

(b)

(c)

6mm

Figure 1: (a) A 5 × 5 antenna grid. (b) A meander line RFID antenna deﬁned on that grid. (c)
The complete dipole antenna produced by mirroring the solution shown in (b); the two halves
are joined by a 6mm bridge.

η). Both these factors are determined by the design of the antenna, and hence become a
multiobjective optimisation (MOO) problem.1 It is desirable to minimise f0 and maximise η.
This is achieved by producing antennas that maximise the length of the antenna in a convoluted
space-ﬁlling manner. RFID antennas are usually designed in such a way that they form meander
lines as dipole structures. An example of such an antenna is given in Figure 1. Note that these
antennas can be laid out on a Cartesian grid and are symmetrical around the dipole, so only
one half of the antenna needs to be designed by an algorithm. The number of points in the
grid deﬁnes the problem. Previous work examined grids between ﬁve and 10 nodes, as does
this paper.

1.1

Designing and Optimising RFID Antennas

Meander line RFID antennas have traditionally been designed manually either using engineers’
understanding of the interactions between antenna segments, or based on simple designs such
as a plough (see Figure 1) or spiral. These antenna designs have all been of the maximum
length possible. Gelehdar, Thiele and O’Keefe [7] were the ﬁrst to explore the search space of
the problem, enumerating solutions on a 5 × 5 grid (a very small size). Since 2007 metaheuristics have been applied to explore the space of meander line antennas and provide a range of
alternative trade-oﬀ designs (see, e.g., [8, 11, 12, 16, 19, 22]). In addition to demonstrating that
such automated design is possible, these studies showed that antennas may be shorter than the
maximum length while still achieving high eﬃciency and low resonant frequency, which in turn
makes the search space easier to navigate.
Producing a meander line antenna is essentially a constructive activity, so the ﬁrst optimisation heuristic to be applied was the constructive metaheuristic ant colony optimisation
(ACO), initially to single-objective formulations [19, 22] and then to the multiobjective problem described here [12, 11]. To provide comparative results using a very diﬀerent approach, in
2011 Montgomery, Randall and Lewis [16] presented an adaptation of the continuous diﬀerential evolution [18] metaheuristic to the problem, which encoded constructive moves into each
dimension of a real-valued space. An updated version of that algorithm is used in the current
work and described in more detail in Section 2 below. More recently, extremal optimisation
1 This paper assumes some degree of familiarity with MOO. See Coello Coello [3] or Deb [4] for good
introductions to the topic.

1894

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis

has also been applied to the problem [8].
Although posed as a MOO problem, not all regions of the Pareto front are of equivalent interest, with solutions of lower resonant frequency (yet highest eﬃciency possible) preferred. Most
previous applications of heuristic solvers to this problem aimed to achieve good approximations
of the (unknown) Pareto front without incorporating this preference. In order to encourage
exploration of (near-)Pareto optimal solutions with lower resonant frequency, the earlier DE
work [16] tested a minimum length constraint, which considered any antenna less than half the
maximum length as infeasible, and hence dominated by any longer solution. The constraint was
placed on antenna length, rather than on objective value, because very short antennas have a
tendency to be highly eﬃcient. As that version of the algorithm used a single population of 100
individuals to both generate new solutions and represent the archive of best solutions, these
short antennas, once generated, might never be replaced as they were non-dominated in the
eﬃciency objective. The use of the minimum length constraint was successful in increasing the
proportion of solutions with low resonant frequency for grid sizes up to eight, but retarded the
search in larger grid sizes.
This paper investigates an alternative mechanism to direct the search: biased selection of
the working population from a larger archive of non-dominated solutions (sometimes referred
to as ‘weighted preferences’ in the literature). As this is the focus of this work, no comparisons
will be made between the current DE algorithm and the prior version, nor with the ACO or
EO algorithms. A detailed comparison of the design choices made in the new DE algorithm,
including inter-algorithm comparisons, will be presented in a forthcoming work [17].
The next section describes the DE algorithm and its application to RFID antenna design,
while Section 3 describes the bias mechanism that will be used. The approach is evaluated in
Section 4.

2

Diﬀerential Evolution for RFID Antenna Design

DE is a population-based search heuristic that operates in continuous domains and which
has been applied successfully to many diﬀerent problems [18]. Single-objective DE algorithms
operate a generational model where, at each iteration, each solution is considered as a target
for replacement by a newly generated solution. Adaptations of DE to MOO vary in their
similarity to DE for single-objective optimisation [13]. The heuristic solver used in this work is
a multiobjective DE/rand/1/exp algorithm that uses Pareto ranking to select between archived
and newly generated solutions. This means that it retains the solution mutation mechanism of
DE but uses general-purpose MOO mechanisms to manage the population and archive of known
good solutions, in this case the non-dominated sorting component of Deb et al.’s NSGA-II [5].
The DE/rand/1/exp algorithm variant was selected previously [16] as the DE/rand/1/*
family of algorithms is both widely-used and eﬀective [14]. The exp crossover, which takes
contiguous components from an intermediate candidate solution during crossover, is used as
prior testing [16] found it to be more eﬀective on this problem than DE/rand/1/bin.

2.1

Population Archive

While the previous DE algorithm maintained a single working population that also served as the
archive, the present algorithm maintains an independent archive that can, when all solutions
within it are non-dominated, grow larger than the population. For each iteration, a new working
population is drawn from the archive (Section 3 describes how this may be biased). Then, for
each member of the population, a new solution is generated using that population member as
1895

Extending the Front: DE for MO RFID Antenna Design
Dimension/step

Value

1

0.9

Position in range

0

3

1

2

3

0

3

1.3

Dimension/step

Antenna
1

2

Montgomery, Randall and Lewis
Value

0

3

4

5

6

7

8

9

2

2.6

4

1.3

3

L

F

Position in range

Antenna

3

F

L
0

3

L

F

R

Figure 2: Decoding a vector in continuous space to construct an RFID antenna. The shaded
portion of each range indicates the starting node or direction chosen. The range of each dimension [0, 3] is independent of the grid size.

one of the three ‘parents’ (its role in mutation is the same as target although it will actually
compete with all children generated during that iteration). The newly generated solutions are
combined with the archive and non-dominated sorting is performed to eliminate the poorest
solutions.

2.2

Mapping Antenna Designs to Continuous Space

Antennas are encoded as a series of construction decisions, beginning with the selection of an
initial node along the ‘top’ edge of the grid, followed by a set of moves expressed in relative
directions. This representation, and the use of relative rather than absolute directions, was
selected because it has previously been found to be more eﬀective in evolutionary algorithms
(EAs) for the related problem of constructing self-avoiding walks [1]. The ability to select a
starting node was not present in the previous DE algorithm, which started all antennas from
node 1 [16]. This provides access to the complete search space of meander line antennas; the
impact of this change will be examined in a forthcoming work. Construction is assumed to
be pointing ‘down’ from this starting node, and proceeds by moving along edges either (L)eft,
(F)orward or (R)ight from successive nodes, until no further edges can be constructed.2 The
maximum number of such instructions on an m×m grid is m2 −1. Thus, including the selection
of an initial node, each DE solution is a vector in n = m2 dimensional space, where the ﬁrst
dimension describes the starting node, the second dimension the relative direction to move from
that node, and so on. Each dimension is over the (arbitrary) range [0, 3], and is divided into
three areas corresponding to L, F and R, respectively.
To encourage the construction of longer antennas, the interpretation of a component’s value
is altered adaptively such that only currently feasible directions are represented. For example,
if only the directions L and F are possible from a given node, the corresponding dimension’s
range is considered to be divided in two, the lower half representing the direction L and the
upper half the direction F. Consequently, a value in [0, 1) represents a tendency to go left at that
point, a value in [1, 2) a tendency to go forward, etc. In this way the solution representation
in continuous space has an intuitive correspondence with its discrete counterpart. Figure 2
illustrates this solution encoding and how it is interpreted during antenna construction.

2 The

1896

previous work referred to the forward direction as (S)traight.

Extending the Front: DE for MO RFID Antenna Design

3

Montgomery, Randall and Lewis

Directing the Search via Biased Archive Selection

Zitzler, Brockhoﬀ and Thiele [23] propose a number of weighting (i.e., bias) functions to incorporate user preference information into multiobjective optimisation with hypervolume-based
EAs. In the following, assume that each objective value xi has been normalised to lie in the
range [0,1], where a value of 1 corresponds to the current observed best value for that objective
while 0 corresponds to the current observed worst value. Zitzler et al. introduce a number
of weighting functions for bi-objective problems, including wext , which represents a bias towards the best solutions in any objective, and wasym , which represents a bias towards a single
objective:
m
20·xi
i=1 e
m · e20

wext (x) =

wasym (x) = e20·x1 /e20
Friedrich, Kroeger and Neumann [6] later showed how Zitzler et al.’s weighting functions can
be incorporated into other algorithms that are not based on hypervolume, such as NSGA-II. A
key feature NSGA-II is its use of a diversity mechanism based on a measure of how crowded
each solution is within its front, i.e., how near it is to its neighbours in objective space. This
is applied to the last front and can be used to eliminate crowded solutions to maintain a ﬁxed
archive size. (In the present work, crowding is used for this purpose until only a single front
exists in the archive, at which point it may grow indeﬁnitely.) In NSGA-II, a solution’s crowding
distance is the sum of the relative distance between its two adjacent solutions in each objective.
Solutions at the extreme of each objective are assigned a crowding distance of ∞. Friedrich et
al. combine a solution’s crowding distance with its bias weight.
The approach used here is an adaptation of wext that allows any number of objectives to
be weighted by varying degrees:
wvar =

m
20·bi ·xi
i=1 e
m
20·bi
i=1 e

(1)

where b is a vector of bias weights, which sum to 1. When all weights in b are equal, Equation 1]
leads to equivalent bias behaviour as wext , while when one weight is 1 (and the others 0) it is
equivalent to wasym .
In the present algorithm, when the archive is larger than the working population and no
bias is being used, solutions are drawn from the archive with uniform probability. When the
bias is in eﬀect, solutions are drawn in non-increasing order of their crowding distance, which
incorporates the bias weighting.

4

Computational Experience

Experiments concerned grid sizes between 5 × 5 and 10 × 10 with a ﬁxed track width of 1mm
and grid dimensions of 25 × 25mm, as used in both the previous study and Lewis et al. [12].
Experiments were conducted on a virtual Linux machine with four processing cores. Solutions
were evaluated using a modiﬁed version of NEC [2], based on source code from late October
2010 (the same version used in [16]). As the largest antennas can take more than 160 seconds to
be evaluated, a solution cache is employed so that rediscovered solutions are not re-evaluated.
Four solutions are evaluated simultaneously (one per core), so any runtimes mentioned below
1897

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis





f0 (MHz)








˜



	


	







Figure 3: Distributions over f0 for 7 × 7 problem with diﬀerent biases towards f0

represent approximately one quarter of the total computing time required. Solution evaluation
thus dominates computation time, with runs on the largest grid size of 10 × 10 taking approximately one day wall clock time, with the DE algorithm (and any bias mechanism employed)
occupying only a few minutes of this time.
Prior work [16] found that a DE/rand/1/exp algorithm with crossover Cr = 0.99 and vector
scale factor F = 0.8 worked well with this problem model, so the same conﬁguration is used
here. The algorithm’s working population (and archive) begin with 50 randomly initialised
solutions. This is half the size used in the previous work, where the population also served as
archive, as an external archive is now available and smaller populations have been shown to
work well with DE [15]. Each run was allowed to produce 10,000 solutions (200 iterations) in
addition to the 50 in the initial population. Three variants of the algorithm are examined in
the following sections: DE with no bias; DE with the minimum length constraint introduced
by Montgomery et al. [16], referred to as DEminL ; and DE with the weighted bias described
above, referred to as DEbias .

4.1

Varying the Bias between Extremes

An initial study was conducted into the eﬃcacy of the variable weighting mechanism introduced
in Section 3. Bias favouring resonant frequency f0 was varied across ﬁve runs on a 7×7 grid with
values of b =1, 0.53, 0.5, 0.47 and 0 (the bias values for η are the complement of each). Each
bias setting is referred to hereafter as bbias , as in b0.47 . The values 0.53 and its complement were
chosen by inspecting the bias function’s landscape to select values likely to produce behaviour
intermediate between the extremes and 0.5. The grid size 7 × 7 is large enough for diﬀerences
to be apparent while having a relatively low runtime (approximately nine hours per run).
Figure 3 shows box plots of the distributions of f0 , the objective of most interest, for each
bias setting. A trend from low to high values of f0 is apparent. As the data are non-normally
distributed a Kruskal-Wallis test was performed across the ﬁve distributions, which showed a
statistically signiﬁcant diﬀerence existed. Pairwise Mann-Whitney U tests conﬁrmed that most
of the diﬀerences between pairs of distributions are statistically signiﬁcant at the 1% level,
except between b1 and b0.53 and between b0.5 and both b0.47 and b0 .
Biasing the search towards f0 also increases the size of the ﬁnal solution set, with the runs
b1 through b0 producing ﬁnal solution sets of 213, 186, 126, 135 and 131 solutions, respectively.
Hypervolume values (not reported but available upon request) also show a trend to better
1898

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis





f0 (MHz)








˜

	


	


	


	


	


	


	


	


	


	



	


	


	



minL

	


	



bias

Figure 4: Distributions over f0 for each run on 10 × 10 problem

attainment surfaces as the bias is increased to 1. Although this study is small, with only a single
sample (i.e., distribution) per bias setting, the diﬀerences observed and the apparent trend in
attainment surface size indicate that bias b1 (equivalent to the wasym weighting function) is
suitable for directing the search to antennas with low f0 , so this setting is used by DEbias in
subsequent experiments.

4.2

Biasing the Search toward Lower Resonant Frequency

In the following experiments DE, DEminL and DEbias (with bias b1 ) were run across ﬁve random
seeds on each grid size from 5 × 5 to 10 × 10. Figure 4 shows the distributions over f0 achieved
in each run of the three algorithms on the 10 × 10 grid. DEbias is clearly superior to DE
in producing antennas with low f0 . The distributions for DEminL indeed focus on lower f0
solutions, since by excluding antennas below half length it also excludes solutions with f0
greater than approximately 1100MHz. However, its performance is still not as good as DEbias
when various metrics are considered.
Table 1 presents summary metrics across the three algorithms: hypervolume,3 minimum
f0 present in the solution set, total size of the solution set and number of solutions with
f0 ≤ 600MHz. The best value within each problem size–statistic group is bolded. It is evident
that DEbias not only produces a greater number of solutions but also a greater number of
solutions in the area of most interest and, typically, the best solutions in terms of f0 .
To visualise the distribution of solutions across both objectives, Figure 5 shows the best, median and worst summary attainment surfaces, calculated according to Knowles’ [10] approach,
for grid sizes 8 × 8 to 10 × 10. Note these are not the actual solution sets produced but the
boundaries within which the best, median or worst solution sets may be found. These conﬁrm
that DEminL can improve on the performance of DE in terms of the area dominated by the
solution sets it produces, especially in the number of low resonant frequency solutions produced.
However, as was found earlier [16], it appears to reduce the algorithm’s ability to ‘ﬁll in’ the
front, especially on the largest grid size. Overall, the use of biased archive selection produces
3 Hypervolumes were calculated by subtracting f values from 2,250 (to transform f into a maximisation
0
0
objective) and multiplying η values by 20 so that both objectives were of similar magnitude. The reported values
have been normalised by the maximum possible—but not practically achievable—area determined by these upper
bounds, then multiplied by 100 for readability. The original solution sets are available upon request.

1899

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis

Table 1: Best, median and worst results for hypervolume, minimum f0 , solution set size and
number of solutions with f0 ≤ 600 MHz.
Hypervolume
best med worst

Minium f0
best med worst

total solutions. . . . . . with f0 ≤ 600
best med worst best med worst

5×5

DE
73.8 73.8 73.8
DEminL 73.7 73.7 73.7
DEbias 73.8 73.8 73.8

574 574
574 574
574 574

574
574
574

104 103
101 95
100 97

102
92
97

9
9
10

9
9
9

9
9
9

6×6

DE
76.2 75.5 75.4
DEminL 76.1 76.1 75.9
DEbias 76.3 76.2 76.2

514 533
514 516
514 514

536
520
514

154 143
154 143
188 168

140
124
148

42
44
67

24
31
61

12
26
30

7×7

DE
77.8 77.0 76.0
DEminL 77.9 76.4 75.3
DEbias 78.2 78.2 77.6

472 495
466 504
464 464

518
529
478

195 179
172 145
217 197

134
130
164

48
58
113

28
46
87

17
11
41

8×8

DE
78.4 77.7 76.8
DEminL 77.7 77.4 76.7
DEbias 79.5 79.2 77.0

457 476
468 473
427 436

497
493
492

205 183
190 156
267 252

146
119
191

42
33
63
28
167 129

25
19
79

9×9

DE
78.6 77.6 77.0
DEminL 79.3 77.4 76.7
DEbias 80.3 79.8 79.4

451 476
423 471
404 418

488
489
431

208 187
169 146
295 270

172
108
222

40
33
67
30
138 131

23
23
99

10 × 10 DE
77.9 77.4 76.6
DEminL 78.3 77.0 76.8
DEbias 80.8 79.4 79.2

462 479
439 466
390 422

496
482
431

199 190
144 128
266 229

181
106
204

27
39
113

19
30
80

24
35
98

the best results in terms of number of solutions, quality of the front (and its likely proximity
to the true Pareto front), and ability to focus on antenna designs with low resonant frequency.

5

Concluding remarks

In the objective space of low resonant frequency and high eﬃciency RFID antennas, the region of
most interest is that containing solutions with lowest resonant frequency. Previous work applied
DE to this problem used a minimum antenna length constraint to encourage exploration of this
region, but this was only partially successful. The present work used biased selection from the
solution archive instead, and was successful in producing high quality attainment surfaces that
both extend the solution set’s reach along the f0 objective and produce good coverage along
the entire front. The mechanism employed is easily transferable to other population-based
techniques for this problem if they use (or can use) separate archive and working populations.

References
[1] D. Ashlock, K. Bryden, S. Corns, and J. Schonfeld. An updated taxonomy of evolutionary computation problems using graph-based evolutionary algorithms. In IEEE Congress on Evolutionary
Computation, CEC 2006, pages 403–410, 2006.
[2] G. Burke, A. Poggio, J. Logan, and J. Rockway. NEC — Numerical electromagnetics code for
antennas and scattering. In Antennas and Propagation Society International Symposium, 1979,
pages 147–150, June 1979.

1900

Extending the Front: DE for MO RFID Antenna Design
























(%) 












˜

˜



minL

bias

  	   
f0 (MHz)





˜

˜

η

  	   
f0 (MHz)


˜

˜




Montgomery, Randall and Lewis

  	   
f0 (MHz)


(a) 8 × 8





















(%) 












˜

˜



minL

bias

  	   
f0 (MHz)





˜

˜

η

  	   
f0 (MHz)


˜

˜





  	   
f0 (MHz)


(b) 9 × 9





















(%) 












˜

˜



minL

bias

  	   
f0 (MHz)





˜

˜

η

  	   
f0 (MHz)


˜

˜





  	   
f0 (MHz)


(c) 10 × 10

Figure 5: First (best), median and last attainment surfaces

1901

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis

[3] C. Coello Coello. A comprehensive survey of evolutionary-based multiobjective optimization techniques. Knowledge and Information Systems, 1(3):269–308, 1999.
[4] K. Deb. Multi-Objective Optimization using Evolutionary Algorithms. Wiley, 2002.
[5] K. Deb, A. Pratap, S. Agarwal, and T. Meyarivan. A fast elitist non-dominated sorting genetic
algorithm for multi-objective optimization: NSGA-II. IEEE Trans. Evol. Comput., 6(2):182–197,
2002.
[6] T. Friedrich, T. Kroeger, and F. Neumann. Weighted preferences in evolutionary multi-objective
optimization. In D. Wang and M. Reynolds, editors, AI 2011: Advances in Artiﬁcial Intelligence,
volume 7106 of Lecture Notes in Computer Science, pages 291–300. Springer, 2011.
[7] A. Galehdar, D. Thiel, and S. O’Keefe. Antenna eﬃciency calculations for electrically small, RFID
antennas. IEEE Antenna and Wireless Propagation Letters, 6:156–159, 2007.
[8] P. Gomez-Meneses, M. Randall, and A. Lewis. A multi-objective extremal optimisation approach
applied to RFID antenna design. In O. Schutze, editor, EVOLVE - A bridge between probability,
set orientated numerics, and evolutionary computation II, volume 175 of Advances in Intelligent
and Soft Computing, pages 431–446. Springer, Berlin, 2012.
[9] M. Keskilammi, L. Syd¨
anheimo, and M. Kivikoski. Radio Frequency Technology for Automated
Manufacturing and Logistics Control. Part 1: Passive RFID Systems and the Eﬀects of Antenna
Parameters on Operational Distance. The International Journal of Advanced Manufacturing Technology, 21(10):769–774, 2003.
[10] J. Knowles. A summary-attainment-surface plotting method for visualizing the performance of
stochastic multiobjective optimizers. In Fifth International Conference on Intelligent Systems
Design and Applications (ISDA V), 2005.
[11] A. Lewis, M. Randall, A. Galehdar, S. Thiel, and G. Weis. Using ant colony optimisation to
construct meander-line RFID antennas. In A. Lewis, S. Mostaghim, and M. Randall, editors,
Biologically-Inspired Optimisation Methods: Parallel Algorithms, Systems and Applications, volume 210 of Studies in Computational Intelligence, pages 189–217. Springer-Verlag, 2009.
[12] A. Lewis, G. Weis, M. Randall, A. Galehdar, and D. Thiel. Optimising eﬃciency and gain of
small meander line RFID antennas using ant colony system. In Proceedings of the Congress on
Evolutionary Computation, pages 1486–1492, 2009.
[13] E. Mezura-Montes, M. Reyes-Sierra, and C. Coello Coello. Multi-objective optimization using
diﬀerential evolution: A survey of the state-of-the-art. In U. Chakraborty, editor, Advances in Differential Evolution, volume 143 of Studies in Computational Intelligence, pages 173–196. Springer,
2008.
[14] E. Mezura-Montes, J. Vel´
azquez-Reyes, and C. A. Coello Coello. A comparative study of differential evolution variants for global optimization. In Genetic and Evolutionary Computation
Conference (GECCO’06), pages 485–492, Seattle, Washington, USA, 2006.
[15] J. Montgomery. Crossover and the diﬀerent faces of diﬀerential evolution searches. In IEEE CEC
2010, pages 1804–1811, Barcelona, Spain, 2010. IEEE.
[16] J. Montgomery, M. Randall, and A. Lewis. Diﬀerential evolution for RFID antenna design: A
comparison with ant colony optimisation. In GECCO 2011, volume 12, pages 673–680, 2011.
[17] J. Montgomery, M. Randall, and A. Lewis. A continuous solver in discrete space: Adapting
diﬀerential evolution to meander line RFID antenna design. in prep.
[18] K. Price, R. Storn, and J. Lampinen. Diﬀerential Evolution: A Practical Approach to Global
Optimization. Springer, Berlin, 2005.
[19] M. Randall, A. Lewis, A. Galehdar, and D. Thiel. Using ant colony optimisation to improve the
eﬃciency of small meander line RFID antennas. In Proceedings of the 3rd IEEE International
e-Science and Grid Computing Conference, 2007.
[20] K. Seshagiri Rao, P. Nikitin, and S. Lam. Antenna design for UHF RFID tags: A review and a
practical application. IEEE Transactions on Antenna Propagation, 53:3870–3876, 2005.

1902

Extending the Front: DE for MO RFID Antenna Design

Montgomery, Randall and Lewis

[21] H. Stockman. Communication by means of reﬂected power. In Proceedings of the Institute of
Radio Engineers, pages 1196–1204, 1948.
[22] G. Weis, A. Lewis, M. Randall, A. Galehdar, and D. Thiel. Local search for ant colony system to
improve the eﬃciency of small meander line RFID antennas. In IEEE Congress on Evolutionary
Computation, 2008, pages 1708–1713, 2008.
[23] E. Zitzler, D. Brockhoﬀ, and L. Thiele. The hypervolume indicator revisited: On the design of
pareto-compliant indicators via weighted integration. In S. Obayashi, K. Deb, C. Poloni, T. Hiroyasu, and T. Murata, editors, EMO 2007, volume 4403 of Lecture Notes in Computer Science,
pages 862–876. Springer, 2007.

1903

