Procedia Computer Science
Volume 29, 2014, Pages 1535–1545
ICCS 2014. 14th International Conference on Computational Science

Wind ﬁeld uncertainty in forest ﬁre propagation prediction∗
Gemma Sanjuan1 , Carlos Brun1 , Tom`as Margalef1 , and Ana Cort´es1
Computer Architecture and Operating Systems department, Universitat Aut`
onoma de Barcelona,
Cerdanyola del Vall`es, Spain
email:gemma.sanjuan@caos.uab.es, carlos.brun@caos.uab.es, tomas.margalef@uab.es,
ana.cortes@uab.es

Abstract
Forests ﬁres are a signiﬁcant problem especially in countries of the Mediterranean basin. To
ﬁght against these disasters, the accurate prediction of forest ﬁre propagation is a crucial issue.
Propagation models try to describe the future evolution of the forest ﬁre given an initial scenario
and certain input parameters. However, the data describing the real ﬁre scenario are usually
subject to high levels of uncertainty. Moreover, there are input parameters that present spatial
and temporal variation that make the prediction less accurate. Therefore, to overcome such
uncertainty and improve accuracy it is necessary to couple complementary models such as the
case of the wind ﬁeld model. Such models use the meteorological forecasted wind to provide
the wind direction and speed depending on the topography of the terrain. We use WindNinja
as wind ﬁeld simulator. This simulator takes a lot of time to deliver the predictions and it is
a serious problem because ﬁre propagation prediction must accomplish strict time constraints.
To solve this problem, we propose map partitioning and solving independently for each one of
the parts. However, the model has problems concerning boundary eﬀects which is an additional
source of uncertainty. Therefore, it is necessary to apply certain degree of overlapping among
parts to reach a stable wind ﬁeld without inconsistencies and a minimum uncertainty.
Keywords: Forest ﬁre, Wind ﬁeld, Simulation, Map Partitioning, Overlapping, Uncertainties, Prediction

1

Introduction

Forest ﬁres are a signiﬁcant problem around the world, especially in places with hot and dry
summer seasons such as Mediterranean countries, California or Australia. To ﬁght against
these hazards and use the available resources in the best possible way, it is mandatory to
have an accurate prediction of their evolution beforehand. So, propagation models have been
developed to determine the expected propagation of a forest ﬁre[10][2][9]. Such propagation
models require several input parameters representing the scenario where the ﬁre is taking place
∗ This

work has been supported by Ministerio de Ciencia e Innovacion under contract TIN-2011-28689-C02-01

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.139

1535

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

to produce the predictions of the propagation. Some parameters are well known, but in many
cases the information concerning the values of the input parameter is obtained or estimated from
indirect measurements. Such indirect estimations imply an uncertainty degree concerning the
values of the parameters that are translated to uncertainty in forest ﬁre propagation prediction.
Typically, a given terrain is deﬁned as a mesh of cells (raster space) with a certain resolution.
In the case of forest ﬁre spread simulations, each cell has associated the corresponding values
of every input parameter, such as slope, vegetation type, moisture contents, wind speed and
direction, and so on. So, the ﬁre behavior is deﬁned by the values of the set of parameters
corresponding to each cell. As it has been commented, the uncertainty in the values of the
parameters can induce either poor or wrong prediction results that should be minimized as
much as possible to reproduce the real ﬁre behavior. An approach to overcome this problem
is to apply parameter calibration strategies by means of stochastic frameworks. A Two-Stages
prediction strategy was deﬁned in [1]. In a ﬁrst stage the values of the input parameters are
calibrated taking into account the observed behaviour of the ﬁre between two time instants.
The calibrated values are then used to predict the behaviour of the ﬁre in the consequent/next
time interval. This approach is very successful to predict the behaviour of prescribed burnings
or short ﬁres that take few minutes and burn some few hectares.
However, when the ﬁres last longer and covers larger terrains the values of the parameters
cannot be considered constant and uniform. Wind speed and direction are critical parameters
because they signiﬁcantly aﬀect ﬁre propagation. The wind parameters (speed and direction)
provided by a global weather forecast model or measured at a meteorological station in some
particular point are just single values that do not represent the wind at each point of the terrain,
since the wind is modiﬁed by the topography of the terrain and has a diﬀerent value at every
point of the terrain. To estimate the wind speed and direction at each point of the terrain it
is necessary to apply a wind ﬁeld model that determines those values at each point taking into
account the terrain topography. In this way, the wind ﬁeld model is coupled to the forest ﬁre
propagation model in order to improve the accuracy of propagation predictions [4][3]. However,
coupling a wind ﬁeld model with the forest ﬁre propagation implies a signiﬁcant increase in the
execution time that is not aﬀordable since the propagation prediction has strict real time constraints in order to be operational. Therefore, it is necessary to apply computational methods
to reduce execution time of both, the forest ﬁre propagation model and the wind ﬁeld model.
In this paper, the parallelisation of the wind ﬁeld model calculation is considered.
In this paper the coupling of wind ﬁeld model to reduce wind uncertainty and the parallelization of such model are considered. So, the paper is organised as follows. Section 2 describes
the coupling of wind ﬁeld model and forest ﬁre propagation model. Section 3 presents the main
limitations of WindNinja as wind ﬁeld simulator and introduces the map partitioning approach
to overcome the execution time and memory limitations of WindNinja. Section 4 summarises
the results of the experimental study carried out. Finally, section 5 shows the main conclusion
of this work.

2

Coupling wind ﬁeld and forest ﬁre propagation models

Two of the parameters that suﬀer from temporal and spatial variation are wind speed and
direction. Such variation introduces a high degree of uncertainty in the results of forest ﬁre
propagation prediction. As it is well known the wind is not constant and certain weather
forecast model must be introduced to predict the future evolution of the wind. On the other
hand, the meteorological wind is modiﬁed by the topography of the terrain under consideration.
So, in each point of the terrain there is a diﬀerent value of the wind in speed and direction. So,
1536

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

it is necessary to introduce a wind ﬁeld model that evaluates the wind speed and direction for
each point of the terrain. So, the values of wind speed and direction are calculated by a wind
ﬁeld simulator for each cell of the terrain.
WindNinja [7][6][8] is a wind ﬁeld simulator that provides an estimated wind direction and
wind speed at each point of the terrain given a meteorological wind. This wind ﬁeld simulator
can be coupled to a forest ﬁre simulator. FARSITE [5] is one of the most widely used forest
ﬁre propagation simulators in the forestry community. It has been designed to accept a wind
ﬁeld map as input data. WindNinja is a wind ﬁeld model that was originally developed to be
directly coupled to FARSITE, so, this is the reason why we decided to use WindNinja as wind
ﬁeld model. Figure 1 shows the coupling of WindNinja and FARSITE.

Figure 1: Coupling wind ﬁeld and forest ﬁre propagation models
WindNinja is a wind ﬁeld simulator that calculates the eﬀect of topography on wind ﬂow.
Unlike common weather forecasting models, WindNinja does not predict wind ﬁelds for future
times, but computes the spatially varying wind ﬁeld on the surface for one instant time. WindNinja requires as basic input parameters the elevation map of the underlying terrain (Digital
Elevation Model -DEM- ﬁle), the meteorological wind speed and wind direction and the required output resolution. As output, WindNinja delivers wind speed and wind direction at
each cell of the terrain at the speciﬁed resolution. In the experiments reported in this paper,
the resolution delivered in the output wind ﬁeld has been set to be the same resolution as the
input elevation map. Using this one-to-one relationship, each map cell will have its own wind
components. It is worth mentioning that the resolution of this output map has a direct impact
in WindNinja execution time. Figure 2 shows the internal structure of WindNinja and the steps
that it carry out to calculate the wind ﬁeld.
The calculation of the wind ﬁeld takes some time when the map has a considerable size
(30x30 Km) and the resolution is high (30x30meters). This time penalizes the prediction of
forest ﬁre spread and may eventually make impractical the eﬀective prediction of ﬁre spread
with wind ﬁeld. Actually, calculating the wind ﬁeld for such a map could take around 3200
seconds in a single node and such time is unaﬀordable for forest ﬁre propagation prediction.
But, execution time is not the only problem of WindNinja. Memory is another issue that
signiﬁcantly constrains the viability and performance of such model. It must be outlined that
the data structures needed to calculate the wind ﬁeld of a large map requires a large amount
of memory that may not be available on a single node of a current system.
1537

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

Figure 2: WindNinja System
The operational requirements of emergency services indicate that the total forest ﬁre prediction time must be below 15 minutes, and the wind ﬁeld calculation should last less than 2
minutes. So we must ﬁx a boundary value of 100 seconds to calculate the wind ﬁeld.
To reduce the computation time of the wind ﬁeld a data partitioning method has been
applied. In this method the wind ﬁeld is calculated in parallel on each part of the map and
then the wind ﬁelds of the diﬀerent parts are joined to form the global wind ﬁeld. Furthermore,
by partitioning the terrain map, the data structures necessary to solve the wind ﬁeld in each
part are reduced signiﬁcantly and can be stored in the memory of a single node in a current
parallel system. Therefore, the existing nodes can perform computation in parallel with data
that ﬁt the capacity of the memory on each node.

3

WindNinja parallelisation using map partitioning

The initial approach that has been considered to overcome WindNinja limitations is to use
map partitioning. In this way, a global map is partitioned in a certain number of square parts
and the wind ﬁeld is calculated simultaneously on each part. In this way the execution time
should reduce signiﬁcantly and the amount of memory to calculate the wind ﬁeld corresponding
to each part is also reduced.However, far from being an easy approach, this map partitioning
scheme involves new issues that must be tackled. WindNinja is based on the equations that
describe air ﬂow variation in the atmosphere. Speciﬁcally, it is based on a mass conservation
model initialized by boundary conditions. The function to minimize is constructed using the
square of the diﬀerence between the adjusted and observed values as is shown in equation 1,
where u, v, w are the velocity components in the x (positive to East), y (positive to North),
and z (positive upward) directions, respectively. The initial values of velocity are u0 , v 0 , w0 .
Furthermore, λ(x, y, z) is a Lagrange multiplier and α1 is the Gauss precision moduli.
E(u, v, w, λ) =

[(α1 )2 (u − u0 )2 − (α1 )2 (v − v 0 )2 − (α1 )2 (w − w0 )2 + λ(

∂u
∂v
∂w
+
+
)]dvol (1)
∂x
∂y
∂z

This implies that terrain slope variation generates wind changes and, because of boundary
conditions, the obtained results in regions close to the borders of the map will not be correct
until the system is stabilized. Consequently, many external map cells have a non reliable value
1538

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

and, therefore, a set of cells around the evaluated map must be dismissed as a ﬁnal result. When
the main map is partitioned into parts, this problem is extrapolated to all parts and a direct
combination of output wind ﬁelds results in an aggregation of boundary errors introducing
additional uncertainty in wind values.
To solve this problem, it is necessary to include a certain degree of overlapping among the
map parts. So, there is a margin from the beginning of the part and the part cells itself.
The overall wind ﬁeld aggregation is obtained by discarding the calculated overlapping margin
of each part. The inclusion of an overlapping to each part increases the execution time, but
the variation and uncertainty in the wind ﬁeld is signiﬁcantly reduced. An example of this
partitioning and overlapping approach can be seen in ﬁgure 3 where the result of applying
overlapping in a AxB parts partitioning is shown. So, we propose a map partitioning with
overlapping scheme for wind ﬁeld evaluation as follows:
1. partition the input DEM map into X parts with a given overlapping,
2. run in parallel as many executions of the wind ﬁeld model as parts have been generated
at the partitioning process and,
3. combine the outputs of the X parts discarding the overlapping cells to obtain the global
map.

Figure 3: AxB partitioning with overlapping
Finally, the resulting wind ﬁeld map, once the map partitioning scheme has been applied,
has the same dimensions as the original one. In the following section this methodology is
studied using diﬀerent map partitioning, many overlap values and diﬀerent wind speeds and
wind directions. The execution times and the error obtained will be compared to the values
obtained when executing WindNinja with a non-partitioned map.
To determine the adequate map partitioning and part overlapping it is necessary to reach a
trade-oﬀ between memory requirements, execution time and wind ﬁeld diﬀerences.
The memory size is deﬁned by the 3 vectors that are created to form the mesh. The
expression to estimate the amount of memory in MBytes provided by WindNinja developers is
the following one (2):
M emory(bits) = 163840 + 122880N Rows + 122880N Cols + 92160N RowsN Cols

(2)

This equation shows that the amount of memory is related to the number of columns of the
map (NColumn) and the number of rows of the map (Nrows). So, it can be concluded that the
time depends on the map size.
1539

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

From the results obtained using maps of diﬀerent size it is determined that the relationship
between execution time and the number of cells can be approximated to a straight applying
linear regression. Figure 4 shows the execution time for an IBM cluster depending on the
number of cells of the map.

Figure 4: Execution time depending on the number of cells
The expression obtained from linear regression is the following one (3):
t = 4, 73 ∗ 10−4 N Cells + 2, 31

(3)

Since it has been determined that the maximum time is 100s, from expression (3), it can
be deduced that the size of each map part should be around 160000. The results of the wind
direction and speed of a cell depend on the cells that are around. Therefore, the squarer the
part the fewer exposed cells were found in the partition, as the square is the geometric ﬁgure
that has the minimum perimeter. So, the parts must be of a maximum size of 400x400, where
the overlapping for each part is included within these 400x400 cells.
With this part of 400x400 diﬀerent possibilities can be considered as shown in ﬁgure 5. It
is possible to consider a part map of 350x350 cells with an overlapping of 25 cells for each side
(4x4), a part map of 300x300 with an overlapping of 50 cells for each side (5x5) and a part
map of 250x250 with an overlapping of 75 cells for each side (6x6).
Since all the parts have an actual size of 400x400 the execution time and memory requirements are approximately the same for each case. However, since in case (4x4) the overlapping
in smaller the diﬀerence in the wind ﬁeld could be larger. In case (6x6) with the largest overlapping the diﬀerence in wind ﬁeld should be the smaller one, but in this case, the eﬀective
map is so small that WindNinja could not reach stabilisation.
So, it is necessary to carry out an experimental study to validate the memory requirements
model, the execution time model and determine the eﬀect of overlapping and part size on wind
ﬁeld diﬀerence. This study is carried out in next section.
1540

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

Figure 5: Map parts with diﬀerent overlapping

4

Experimental results

To determine the most suitable part division and overlapping size for a given map, diﬀerent
kind of partitions and diﬀerent overlapping have been tested. In particular, the partitions used
have been 4x4, 5x5 and 6x6, where AxB means that the original map has been partitioned
into A divisions in the horizontal axis and B divisions in the vertical direction. For each kind
of partition respectively, diﬀerent overlapping has been tested ranging from 25, 50 and 75. So,
for all the cases all the parts are 400x400 cells, but the eﬀective wind ﬁeld calculated for each
case are 350x350, 300x300 and 250x250, respectively. Besides, wind components must be taken
into account, so, 3 wind directions (45, 180 and 270 degrees) and 3 wind speeds (5, 10 and 15
mph) have been considered to cover a wide range of combinations.
The terrains used for this study are located in diﬀerent points of Spain. They are a region
of interest because they present very diﬀerent slope from each other. The raster maps used are
composed by 1501 rows and 1501 columns with 30m resolution per cell. That means that the
map has a dimensions of 45km x 45km. The only point to be considered is that the studied
maps do not include cliﬀs because so high slopes as those of cliﬀs provoke inconsistencies in the
wind ﬁeld generated by WindNinja.
The experiments have been executed in two diﬀerent multi-core platforms:
1. IBM cluster x3650 composed of 32 Dual-Core Intel(R) Xeon(R) CPU 5150 2.66GHz nodes
and 12 GB Fully Buﬀered DIMM 667 MHz per node.
2. DELL cluster based on Poweredge C6145 with a total of 8 CPUs with 16 cores and 128
GB of memory.
Every combination has been simulated and compared with the non-partitioned global wind
ﬁeld simulation in terms of similarity of the resulting wind ﬁeld map and the time incurred
in the map partitioning process. To evaluate the similarity between both wind ﬁelds three
measures has been considered: the Root-Mean-Square Error (RMSE), the maximum diﬀerence
between both maps and the number of cells with a diﬀerence higher to 1mph for the case of
speed and 5◦ for the case of wind direction.
The Root-Mean-Square Error (RMSE) is shown in equation 4. More precisely, for each map
cell (N ), the value of wind speed in that particular cell i obtained when no partition is applied
to the input DEM map (N P (ws)i ) is compared to the speed obtained in the same cell when
applying the map partitioning strategy with a given partition scheme (SCAxB (ws)i ). The same
1541

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

procedure is also applied to wind direction just changing the corresponding terms of equation
4 to wd.

RM SEAxB (ws) =

N
i=0

(N P (ws)i − SCAxB (ws)i )2
N

(4)

Before discussing the results obtained, some general considerations must be taken into account for wind speed and wind direction. WindNinja implements a system of equations for
each part of the map. That means, for the particular case of the wind speed, that the solution
error propagation will not be too much signiﬁcant if the general wind speed is low (5 mph)
because the obtained wind speed at each map cell will have slight variations. However, for
higher wind speeds such as 10 and 15 mph, the values obtained in the wind ﬁeld will have a
higher variation rank. Under this condition, the WindNinja solver propagates higher error in
the solution provided. This feature is independent on the underlying elevation map.
On the other hand, analyzing what happens with wind directions, it has been determined
that supplementary angles (0◦ -180◦ and 90◦ -270◦ ) have identical errors for a given speeddirection-partition conﬁguration. The equations that deﬁne WindNinja system try to ﬁnd
saddle points. These points are those which have the maximum elevation in a given direction
and the minimum in the perpendicular direction. More precisely, a saddle point of a function is
a point at which the ﬁrst derivative is zero, while the sign of the second derivative (curvature)
depends on the direction to be calculated.
Table 1 shows the RMSE for speed and direction, number of cells with diﬀerence greater
than 1mph in the case of the speed and diﬀerence greater than 5◦ in the case of the angle
and the maximum diﬀerence in speed and direction. These values are shown for 4x4, 5x5 and
6x6 partitions considering diﬀerent wind speeds and a direction of meteorological wind of 45◦
because it was the most unfavorable condition in the studied maps.
Speed
(mph)
5
5
5
10
10
10
15
15
15

Partitioning
6x6
5x5
4x4
6x6
5x5
4x4
6x6
5x5
4x4

RSM Esp
(mph)
0.191
0.187
0.188
0.383
0.373
0.375
0.574
0.559
0.563

Speed ≥ 1
(mph)
8183
7818
7531
60920
49565
49182
156479
140826
140196

M axsp
(mph)
3.76
3.76
3.76
7.50
7.50
7.50
11.3
11.3
11.3

RSM Eang
(◦ )
1.703
1.571
1.701
1.703
1.571
1.701
1.703
1.571
1.701

Angle ≥ 5
(◦ )
11062
7216
9719
11062
7216
9719
11062
7216
9719

M axang
(◦ )
20
26
24
20
26
24
20
26
24

Table 1: Similarity indexes for diﬀerent partitioning
The results show that partitioning the map in 5x5 parts of 400x400 cells with an overlapping
of 50 cells per side provide a reasonable wind speed and direction diﬀerence. As it has been
mentioned above with this type of partitioning, each process solves an eﬀective part of a map
of 300x300 cells.
From the experiments carried out it can be observed that as the wind speed is increased,
the error increases proportionally to the speed. Comparing the diﬀerent results it can also
be observed that the 5x5 partitioning is the one that presents the lowest RMSE in speed
1542

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

and direction. The same results have been obtained for diﬀerent maps. Therefore, it can be
concluded that the best partitioning is 5x5 with 50 rows and columns overlapping.
It is also interesting to represent graphically diﬀerences between the wind ﬁeld obtained
with the global map and the 5x5 partitioning map in the worst case (wind speed of 15mph).
Figure 6 shows in dark brown the points with a diﬀerence lager than 1mph. It can can be seen
that the selected boundary conditions do not aﬀect the resolution of the map. The diﬀerences
are concentrated at those points where there is a signiﬁcant change in slope. This is due to the
fact that the partitioning map systems of equations is diﬀerent from the global map system of
equations and there are always some diﬀerences that propagates through the map. However,
the diﬀerences are very slight and only aﬀect on the more extreme conditions.

Figure 6: Points with wind speed diﬀerence higher than 1mph

Concerning execution time and memory requirements the experiments show that for map
parts of equal size, the execution time and the memory used is almost exactly the same. Table
2 summarizes the results for map parts of 400x400 with diﬀerent overlapping. The execution
time is for all the cases under 100 seconds and the memory required is under 2GB. These
results perfectly ﬁt the expectations. So, the map partitioning approach allows to reduce the
memory requirements and the execution time of WindNinja wind ﬁeld simulator by exploiting
the features of current multicore architectures.
1543

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

Partitioning

Overlap

6x6
5x5
4x4

75
50
25

t
(s)
92
90
95

Memory
(Gb)
1.9
1.9
2.0

Table 2: Execution time and memory requirements for diﬀerent partitioning

5

Conclusion

Wind speed and direction are parameters that aﬀect forest ﬁre propagation dramatically. So, an
accurate estimation of such parameters is crucial to predict the ﬁre propagation precisely. However, meteorological wind is modiﬁed by terrain topography and a diﬀerent value of wind speed
and direction is eﬀectively found on each point of the terrain. To overcome such uncertainty in
wind parameters it is necessary to introduce a wind ﬁeld simulator and couple this simulator to
forest ﬁre propagation simulator. A wind ﬁeld simulator, such as WindNinja, presents to main
drawbacks to become operational coupled to FARSITE forest ﬁre propagation simulator when
the size of the map under consideration increases signiﬁcantly: It takes to long to compute the
wind ﬁled and it requires to much memory. So, a map partitioning strategy has been developed
to compute partial wind ﬁeld maps that can be aggregated afterwards. Each map part can be
computed in parallel and the amount of memory required is available in a single node. In this
way the wind ﬁeld calculation becomes feasible to be integrated to an operational forest ﬁre
propagation prediction framework. However, it must be considered that wind ﬁeld calculation
includes some border eﬀects and the straight map partition could introduce uncertainty in the
wind values in the points close to the border of each resulting part. Therefore, a certain degree
of overlapping has been introduced to minimize such uncertainty in wind ﬁeld parameters. The
results show that the wind ﬁeld obtained by map partitioning is very close to the wind ﬁeld
obtained with a global map, that implies that the forest ﬁre propagation prediction will not be
aﬀected by map partitioning.

References
[1] Baker Abdalhaq, Ana Cort´es, Tom`
as Margalef, and Emilio Luque. Enhancing wildland ﬁre prediction on cluster systems applying evolutionary optimization techniques. Future Generation Computer Systems, 21(1):61–67, 2005.
[2] F.A. Albini, Intermountain Forest, Utah) Range Experiment Station (Ogden, and United
States. Forest Service. Estimating wildﬁre behavior and eﬀects. General technical report INT.
Dept. of Agriculture, Forest Service, Intermountain Forest and Range Experiment Station, 1976.
[3] Carlos Brun, Tom`
as Art´ees, Tom`
as Margalef, and Ana Cort´ees. Coupling wind dynamics into a
dddas forest ﬁre propagation prediction system. Procedia Computer Science, 9:1110–1118, 2012.
[4] M´
onica Denham, Ana Cort´es, Tom`
as Margalef, and Emilio Luque. Applying a dynamic data
driven genetic algorithm to improve forest ﬁre spread prediction. In Marian Bubak, Geert van
Albada, Jack Dongarra, and Peter Sloot, editors, Computational Science – ICCS 2008, volume
5103 of Lecture Notes in Computer Science, pages 36–45. Springer Berlin / Heidelberg, 2008.
10.1007/978-3-540-69389-5 6.
[5] M. A. Finney. FARSITE, Fire Area Simulator–model development and evaluation. Res. Pap.
RMRS-RP-4, Ogden, UT: U.S. Department of Agriculture, Forest Service, Rocky Mountain Research Station. 1998.

1544

Wind ﬁeld uncertainty

Sanjuan, Brun, Margalef, Cort´es

[6] J. M. Forthofer, K. Shannon, and B. W. Butler. Simulating diurnally driven slope winds with
windninja. In 8th Symposium on Fire and Forest Meteorological Society, 2009.
[7] Jason Forthofer, Kyle Shannon, and Bret Butler. 4.4 simulating diurnally driven slope winds with
windninja. 2009.
[8] J.M. Forthofer, K. Shannon, and B. W. Butler. Initialization of high resolution surface wind
simulations using nws gridded data. In Proceedings of 3rd Fire Behavior and Fuels Conference;
25-29 October, 2010.
[9] Josep Jorba, Tomas Margalef, Emilio Luque, J Campos da Silva Andre, and Domingos Xavier
Viegas. Parallel approach to the simulation of forest ﬁre propagation. In Proceedings of the
13 Internationales Symposium” Informatik fur den Umweltshutz” der Gesellshaft Fur Informatik,
pages 69–81, 1999.
[10] R.C. Rothermel. How to predict the spread and intensity of forest and range ﬁres. Intermountain
Forest and Range Experiment Station Ogden, 1983.

1545

