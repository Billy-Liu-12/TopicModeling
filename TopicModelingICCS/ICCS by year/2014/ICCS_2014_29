Procedia Computer Science
Volume 29, 2014, Pages 877–887
ICCS 2014. 14th International Conference on Computational Science

Several hundred ﬁnite element analyses
of an inversion of earthquake fault slip distribution
using a high-ﬁdelity model of the crustal structure
Ryoichiro Agata1 , Tsuyoshi Ichimura1 , Kazuro Hirahara2 ,
Mamoru Hyodo3 , Takane Hori3 , and Muneo Hori1
1
The University of Tokyo, Tokyo, Japan
agata@eri.u-tokyo.ac.jp, ichimura@eri.u-tokyo.ac.jp, hori@eri.u-tokyo.ac.jp
2
Kyoto University, Kyoto, Japan
hirahara@kugi.kyoto-u.ac.jp
3
Japan Agency for Marine-Earth Science and Technology, Yokohama, Japan
hyodo@jamstec.go.jp, horit@jamstec.go.jp

Abstract
To improve the accuracy of inverse analysis of earthquake fault slip distribution, we performed several
hundred analyses using a 108 -degree-of-freedom ﬁnite element (FE) model of the crustal structure in an
eﬃcient way based on capacity computing. we developed a meshing method and an eﬃcient computational method for these large FE models, which methods are specialized for the problem setting. We
applied the model to the inverse analysis of coseismic fault slip distribution for the 2011 Tohoku-oki
Earthquake. The high resolution of our model provided a signiﬁcant improvement of the ﬁdelity of the
simulation results compared to existing computational approaches.
Keywords: ﬁnite element analysis, crustal deformation, inversion of earthquake fault slip, capacity computing

1

Introduction

Many analyses of crustal deformation due to earthquake fault slips at fault planes have been reported in
the ﬁeld of solid earth science. Many-case computation of crustal deformation analysis is the principle
technique for inverse analysis of fault slip distributions, in which we use displacement data observed
on the ground and the seaﬂoor to estimate fault slip, because the observation matrix in the formulation
of the inverse problem can be constructed using several hundred Green’s functions. In addition, Yagi
et al. [17] pointed out that introduction of uncertainty of Green’s function into the inverse analysis
aﬀects the estimation result signiﬁcantly. If this uncertainty is to be taken into account as a stochastic
problem, a Monte Carlo approach can be used to compute the Green’s functions; this requires many-case
computations to obtain statistically converged solutions.
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.079

877

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

Previous studies of inverse analysis of fault slip distribution have used analytical solutions in a homogeneous half-space to simulate the crustal deformation (e.g., [1]). However, recent increases in the
available computational resources have led to the use of three-dimensional (3D) numerical analyses,
such as the ﬁnite element (FE) method, which can consider geometries of the heterogeneous crust structure. Many commercial/noncommercial packages for FE analysis are available now. For example, Sato
et al. [12] and Hughes et al. [4] used those tools to carry out inversion analyses using an FE model consisting of 106 degrees-of-freedom (DOFs), with a simpliﬁed geometry describing the crustal structure.
On the other hand, detailed elevation data of crustal structures have accumulated (e.g., 1 km resolution elevation data are now available for the crustal structure of the Japanese islands [8]). If we seek
to construct an FE model for the focal region of an inter-plate earthquake with the same resolution as
that of those data, the number of DOFs is expected to be of the order of 108 ; hereafter, we term such a
detailed model a “high-ﬁdelity model” (HFM). The model construction methods in the previous studies,
which use a computer aided design (CAD) model to deﬁne the model geometry, needs manual tuning to
maintain the mesh quality, which cannot be applied to a model with such a large number of DOFs. At
the same time, the large DOFs leads to heavy computation costs. Thus, there have been no reports of
inverse analysis with such HFMs.
For many-case computation of an FE model with 108 DOFs, signiﬁcant computational resources are
required, and in particular, parallel computation is necessary. There are essentially two approaches to
many-case parallel computing: capability computing and capacity computing. Capability computing
repeats the calculation using the entire computational resource to solve each case. Therefore, the more
computer nodes that are used, the more the eﬃciency suﬀers, i.e., the problem does not scale eﬃciently.
On the other hand, because capacity computing executes multiple computations simultaneously, the
number of nodes used does not strongly aﬀect the eﬃciency. Hence, the latter approach scales much
more eﬃciently with a large number of nodes.
We developed a capacity computing crustal deformation analysis method using an HFM. We applied
the method described in [5], which includes the HFM construction method specialized for stratiﬁed
geometry data and the computation method specialized for capacity computing, to several hundred
calculations of inverse analysis of a fault slip distribution. The remainder of this paper is organized as
follows: ﬁrst, we discuss why Green’s functions are useful to estimate fault slip; second, we introduce
the computational method for crustal deformation and the capacity computing implementation; and
ﬁnally, we describe an application example, where several hundred calculations were carried out.

2

Method

To accurately estimate a fault slip distribution, we must execute several hundred FE simulations with
∼ 108 DOFs. For this purpose, we developed an eﬃcient computational method [5]. However, the
method has not yet been applied to capacity computing. In this section, we ﬁrst explain the reason
why hundreds of Green’s functions are necessary for the inverse problem formulation. Then, we brieﬂy
discuss the method reported in [5], and describe how to apply it to capacity computing.

2.1

Formulation of the inverse problem

We seek to model fault slip using crustal deformation data from m observation points on the surface of
the earth. We represent the spatial distribution of the fault slip using a linear combination of a ﬁnite
number of basis functions, i.e.,
n

xj =

ai φij ,
i=1

878

(1)

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

where x j is the j-th component of the vector for fault slip, ai is the superposition coeﬃcient of the i-th
basis function, and φij is the j-th component of the vector for the i-th basis function. Here we introduce
unit fault slip, which uses a bicubic B-spline deﬁned on n grid points distributed on the fault plane as the
basis functions [16]. Crustal deformation during an earthquake is considered linear elastic deformation.
Therefore, if we can compute the Green’s functions gki , which describe the displacement response in
the k-th observation point on the ground surface due to a unit fault slip φij , we can describe the fault slip
using a linear equation where the unknowns are ai as follows:
Ga = d,

(2)

where G is an m × n matrix, the components of which are g ji ; a is n-dimensional vector, the components
of which are ai ; and d is an m-dimensional vector, the components of which are d j , which is the observed
displacement in the j-th observation point. m > n in many cases, but because G is usually an illconditioned or sometimes a singular matrix, we regularized G using prior knowledge of the smoothness
of a [12]. Assuming that a is deﬁned using predeﬁned grid points, we can describe the condition as
ak−1,l + ak+1,l + ak,l−1 + ak,l+1 − 4ak,l = 0.

(3)

Here the subscripts are arranged so that ak,l describes the displacement of the grid point (k, l). If this
constraint is rewritten in matrix notation, we ﬁnd that La = 0, with an n × n matrix L, and the target
equation can be written as
G
αL

a=

d
0

,

(4)

where α is the weighting coeﬃcient of the constraint, and is termed the regularization parameter, which
is often determined using an L-curve method [9] (or another statistical method).
Green’s functions have been computed using an elastic solution in a homogeneous half-space, or
simpliﬁed FE models. Using HFMs, the accuracy of the approach is expected to be considerably improved. Speciﬁcally, using a unit fault slip in the high-ﬁdelity FE models, g1i g2i . . . gmi T are computed
simultaneously. Thus FE analyses with 108 DOFs should be solved n times to construct G, where n is
typically at least several hundred.

2.2

Formulation of FE model

We used FE because it can describe an arbitrary geometry. Coseismic crustal deformation is typically
modeled as an elastic deformation due to the nature of fault slip. After taking the boundary conditions
into account, the target equation becomes
Ku = f,

(5)

where K, u, and f are the global stiﬀness matrix, displacement vector, and force vector, respectively.
Fault slip was ﬁrst described using the split-node technique [10], and inﬁnite elements [18] were implemented at the sides and bottom of the target domain.
We used the method described in [5] to construct a 3D FE model directly from the layered crustal
structure data, which includes the elevation and material parameters, without using a CAD model and
manual tuning. The method is illustrated in Figure 1, and can be summarized as follows:
(a) Let a uniform background cell cover the entire target domain. We can deﬁne the necessary minimum resolution as ds (see Figure1(a)).
879

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

(b) The geometry of the ground surface and interfaces is simpliﬁed slightly to maintain good element
quality. In the target region, we generate tetrahedral and voxel elements using the background
grids. Tetrahedral elements are generated in grids that intersect with the ground surface or interface, and are generated using gridwise Delauney triangulation. If the voxel elements are unnecessarily small, we enlarge the elements by merging eight small voxel elements into one (see
Figure 1(b)).
(c) We insert tetrahedral elements between the elements of diﬀerent sizes to maintain the integrity of
the mesh. Inﬁnite elements are generated on the sides and bottom of the model (see Figure 1(c)).
This method generates the mesh in two ways: voxel elements are generated using the background grid,
and tetrahedral elements are generated via gridwise Delauney triangulation. Thus, a robust adaptive
mesh can be generated, and control over the element quality can be maintained. The method is not a
general-purpose tool, but useful when the geometry data are given in the form of stratiﬁed layers as
those of crustal structure.

2.3

Fast FE analysis

Because an HFM constructed by our model construction method typically has a large number of DOFs,
parallelization is desirable. To develop a computational method for capacity computing, parallelization
without using distributed memory is preferable, as this requires more communication between computer
nodes. We developed a memory-eﬃcient solver and used shared-memory parallelization, as described in
[5]. Speciﬁcally, the conjugate gradient (CG) and element-by-element (EBE) methods [15] were used.
	
 
 

 


(a)

(b)

(c)

Figure 1: Schematics of the FE model construction. (a)Let a uniform background cell of the size
ds cover the entire target domain. (b)The geometry of the ground surface and interfaces is simpliﬁed
slightly to maintain good element quality. In the target region, we generate tetrahedral and voxel elements using the background grids. (c)We insert tetrahedral elements between the elements of diﬀerent
sizes to maintain the integrity of the mesh. Inﬁnite elements are generated on the sides and bottom of
the model.
880

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

The matrix-vector product with K in the CG algorithm was calculated as
num(α,β)

Ktie uie +

Ku =
i

Kvie (α, β)uie +
α

β

i

Kiie uie ,

(6)

i

where Ktie , Kiie and Kvie (α, β) are the element stiﬀness matrices for the i-th unstructured tetrahedral,
inﬁnite, and voxel elements, where the Young’s modulus and Poisson’s ratio are related to a heterogeneous elasticity tensor, and the sizes are α and 2β−1 ds, respectively. Then this linear equation is solved
without storing the entire K matrix in memory.
For eﬃcient computation with the CG method, it is important to choose an appropriate preconditioning method to improve convergence. In preconditioning, the linear equation Mz = r must be solved,
where r is the residual obtained from the CG algorithm, and M satisﬁes M−1 K I. Methods where M−1
is explicitly used, such as direct solvers, are memory-intensive and so cannot be applied to our problem.
Instead, we solve Kz = r using the CG and EBE methods with a prescribed error (i.e., inexact preconditioned conjugate gradient method [3]). Let the outer loop denote the main iteration and the inner loop
denote the iteration to solve z = K−1 r. This type of preconditioning is termed adaptive preconditioning
because the eﬀect of preconditioning changes during each step of the outer iteration. The inner loop can
be solved using single precision variables to minimize memory usage.
Here we describe the details of improvements to the convergence of the inner loop. We used a multigrid approach [11], where we obtain a solution in a coarse problem and use it as an initial solution for
a ﬁner-resolution problem. The coarse stiﬀness matrix Kc and mapping matrix P, which approximately
satisﬁes Kc = PT KP, should be constructed. Then the equation that is solved in the inner loop Kz = r
is mapped to Kc zc = rc , the solution of which initializes the inner loop.
There are two ways to construct these matrices: the algebraic multigrid (AMG) approach and the
geometric multigrid (GMG) approach. Usually, with problems that have an unstructured mesh, AMG is
applied because it only requires manipulation of K to construct both Kc and P. However, because the
full matrices K, Kc , and P must be stored in memory, AMG is not suitable for our model. GMG creates
Kc by generating a coarse model in the same target area of the original resolution model, as shown in
Figure 2. Then we may obtain P in a straightforward manner using the predeﬁned interpolation function
of the elements. GMG is more memory eﬃcient because the mapping matrix can be obtained from
an elementwise interpolation. It is often diﬃcult to obtain good mapping of P with two unstructured
meshes that have diﬀerent geometries; however, GMG is applicable to our problem because the two
models of diﬀerent resolutions have the same geometry and the mesh pattern near the surface and the
boundary of the layers, and so do not need any mapping there. In the inside of each layer, mapping can
be deﬁned by elementwise (Figure 3). Thus good mapping was obtained with a simple manner.
To make use of the features of our model construction method, we developed a fast and memoryeﬃcient solver based on adaptive preconditioning with GMG. In the application discussed later, one case
of crustal deformation analysis using the computation method required 4084 s for completion. When
we used 3×3 block Jacobi preconditioning, which is a simple and widely used preconditioning method,
the model required 24654 s to complete. We were able to improve the time for computation by a factor
of approximately six by modifying the preconditioner.

2.4

Computing several hundred Green’s functions with 108 DOFs

If the fault slip distribution is to be estimated in a region of several hundred kilometers with grid points
in intervals of dozens of kilometers, several hundred Green’s functions should be calculated. Because
the calculation of the Green’s functions using an HFM took more than 1 h, we seek to use capacity
computing, assuming a moderate-scale parallel computation environment with dozens of nodes.
881

Several hundred FEAs of inversion of fault slip

	




Agata, Ichimura, Hirahara, Hyodo, Hori and Hori


	


Figure 2: GMG creates Kc by generating a coarse
model in the same target area of the original resolution model. Then we may obtain P in a straightforward manner using the predeﬁned interpolation function of the elements. The red squares
indicate the areas picked up in Figure 3.

Figure 3: A schematic of construction of mapping matrix. Because pk in coarse model only
depends on ek of ﬁne model, mapping can be deﬁned by elementwise, where k = 1, 2 and 3. The
mesh pattern near the boundary of geometry is
the same in two models and so mapping is not
needed.

Figure 4: The concept of Green’s function computation with an example of computing eight cases with
three computation nodes. We submitted several hundred computation jobs with a spacing in time of tg
between each computation node.

In the analysis method described in [5], each computational job uses the input mesh data to perform
each crustal deformation analysis using one computer node. Therefore, several hundred jobs must be
submitted for capacity computing of Green’s function. A Network File System (NFS), which is often
implemented in PC clusters, permits all of the computer nodes to access the ﬁle system simultaneously.
Therefore, if multiple jobs access the ﬁle system at the same time, ﬁle access may be expected to
limit the overall performance. To avoid this, we submitted jobs with a spacing in time of tg . Figure 4
illustrates this concept with an example of computing eight cases with three computer nodes. With these
implementations, all jobs are independent. Using this approach, we expect that parallel eﬃciency will
not decrease in spite of the use of multiple nodes.
882

Several hundred FEAs of inversion of fault slip

3

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

Application example

We applied the method to compute several hundred crustal deformation analyses of an inversion of fault
slip of the 2011 Tohoku-oki Earthquake. The results by an HFM and a model with a simpliﬁed geometry
and material properties were compared.
The target region was 0 ≤ x ≤ 784 km west-to-east, 0 ≤ y ≤ 976 km south-to-north, and −400 ≤
z ≤ 0 km vertically, as shown in Figure 5. The crustal structure consisted of four layers, and the material
properties were deﬁned based on the data in [13] (see Table 1). We constructed two FE models using the
parameters with which the numerical solution converged to the analytical solution in [5]. The HFM was
constructed with a 1 km resolution, which is the same as that reported in [8]. The simpliﬁed model (SM)
was constructed without considering the geometry or material heterogeneity, which corresponds to the
analytical solution in the homogeneous half-space (see Figure 7). The height of the ground surface in the
SM was the average of HFM. The HFM had 127,263,300 DOFs, and contained 37,255,182 tetrahedral
elements and 35,585,620 voxel elements. GPS displacement data from the GNSS Earth Observation
Network System (GEONET) [2] was used for the crustal deformation data, and the seaﬂoor data were
taken from [6], [7], and [14] (see Figure 5). The grid points used to input the Green’s functions were
located at 30 km intervals in the range 310 ≤ x ≤ 670km and 200 ≤ y ≤ 710km. Unit fault slips
were applied at points satisfying two conditions: points in the area where the Paciﬁc Plate and the upper
mantle or crust were in direct contact, and points located in the west of the Japan Trench. The number
of the points which satisfy the conditions was 137 (see Figure 6). Since we had to compute Green’s
functions in x and y direction on the fault plane, the total number of Green’s functions to compute was
137 × 2 = 274.
We calculated the fault slip in the 2011 Tohoku-oki Earthquake using the HFM and SM. First, we
estimated the fault slip using the L-curve method; however, we found many high-frequency components
of the fault slip distribution in both of the results. Then we changed the parameter for regularization
to a larger one so that the estimation results followed a smoother distribution. Then the results were
obtained without the inﬂuence of the high-frequency components, as shown in Figure 8. The absolute
diﬀerences were larger nearer the trench axis, which may be due to diﬀerences in the geometry between
the two models. From these results, we can see the inﬂuence of model simpliﬁcation on the fault slip
estimation results. Therefore, the HFM should be used to model fault slip, and the method to compute
the Green’s functions based on capacity computing was eﬀective for this task. However, the estimated
results obtained using the L-curve method included high-frequency components, which may be because
the uncertainty in the Green’s function was neglected. To take this uncertainty into account, both the
solver and capacity computation method should be modiﬁed so that a Monte Carlo approach can be
applied to the crust deformation analysis.
We computed 274 Green’s functions as described in section 2.4 using 16 computation nodes, each of
which had two 6-core Intel(R)Xeon X5680 processors running at 3.33 GHz, and 48 GB of DDR3-1333
memory. The timing between jobs was tg = 8 min, which was based on the input time for mesh data.
The total time for computation was 21.4 h. Suppose that the computation of every Green’s function
takes 4084 s when it is singly executed, the ideal computation time for 274 Green’s functions is 4084 s
× 274 / 16 nodes 19.4 h. Since a computation node has to wait 15 tg = 2 h at maximum to start the
computation, 21.4 h is almost identical to the ideal computation time and parallel eﬃciency does not
suﬀer much with our capacity computing method. The maximum memory usage within a computation
node was 40 GB.
883

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

Table 1: The material properties of 4 layers consisting the HFM. V p : P wave velocity (m/s), V s : S wave
velocity (m/s), ρ: density (kg/m3 ), E: Young’s modulus (GPa), ν: Poission’s ratio.
Crust layer
Upper-mantle layer
Philippines Plate
Paciﬁc Plate

Vp
5664
8270
6686
6686

Vs
3300
4535
3818
3818

ρ
2670
3320
2600
2600

E
72.3
176
95.4
95.4

ν
0.243
0.285
0.258
0.258


40˚



35˚


0 100 200 km
140˚



145˚



Figure 5: The area outlined by the black lines indicates the target region of modeling. Black and
red points indicate the observation points on the
ground and the seaﬂoor.

4



 	



Figure 6: The locations of grid points to input the
basis functions.

Concluding remarks

We carried out several hundred computations of Green’s functions for inverse analysis of fault slip distribution in the 2011 Tohoku-oki Earthquake, based on a crustal deformation analysis method using the
high-ﬁdelity FE model described in [5]. We found that several hundred computations of the Green’s
function with the HFM were completed in a reasonable time without a decrease of parallel eﬃciency
because of the eﬃcient computational method. Results generated using the HFM and the simpliﬁed
model exhibited signiﬁcant diﬀerences. It follows that the simpliﬁcation of the crustal structure introduced by the use of analytical approximations in the homogeneous half-space model aﬀects estimation
results signiﬁcantly.
The results obtained using the L-curve method included a number of spurious high-frequency components, which may be due to the uncertainty of the Green’s functions. To account for this uncertainty,
a Monte Carlo approach with many more solutions is required. Therefore, in future work, we plan to
modify the method and implement a larger parallel calculation.
884

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

(a)

(b)

(c)

Figure 7: (a)The overview of the HFM, (b)each layer of the HFM, (c)The overview of the SM
42˚

8

60

60

50

50

40

40

144˚

30
1200

20
10

30

0

70

50

12

70

4
0
−8

−4

20

−8

10

10

−12

0

0

−16

20

0

HFM

80

30

36˚

142˚

80

−4

30

m
16

0

38˚

m
90

40

40

40˚

m
90

100 km
146˚

0
142˚

144˚

SM

100 km
146˚

0
142˚

144˚

100 km
146˚

Absolute diﬀerence (HFM–SM)

Figure 8: Magnitude of the estimated fault slip distribution in the HFM and SM, and absolute diﬀerence
between them (HFM–SM). The absolute diﬀerences were larger nearer the trench axis.

References
[1] E. L. Evans and B. J. Meade. Geodetic imaging of coseismic slip and postseismic afterslip: Sparsity promoting methods applied to the great Tohoku earthquake. Geophysical Research Letters,
39(11):1–7, 2012.
[2] Geospatial Information Authority of Japan. Gnss earth observation network system. http://
terras.gsi.go.jp/gps/geonet_1.html, last viewed January 2014.
[3] G. H. Golub and Q. Ye. Inexact Preconditioned Conjugate Gradient Method with Inner-Outer
885

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

Iteration. SIAM Journal on Scientiﬁc Computing, 21(4):1305–1320, 1999.
[4] K. L. H. Hughes, T. Masterlark, and W. D. Mooney. Poroelastic stress-triggering of the 2005 M8.7
Nias earthquake by the 2004 M9.2 Sumatra-Andaman earthquake. Earth and Planetary Science
Letters, 293(3-4):289–299, 2010.
[5] T. Ichimura, R. Agata, T. Hori, K. Hirahara, and M. Hori. Fast numerical simulation of crustal
deformation using a three-dimensional high-ﬁdelity model. Geophysical Journal International,
195(3):1730–1744, 2013.
[6] Y. Ito, T. Tsuji, Y. Osada, M. Kido, D. Inazu, Y. Hayashi, H. Tsushima, R. Hino, and H. Fujimoto. Frontal wedge deformation near the source region of the 2011 Tohoku-Oki earthquake.
Geophysical Research Letters, 38(15):1–5, 2011.
[7] M. Kido, Y. Osada, H. Fujimoto, R. Hino, and Y. Ito. Trench-normal variation in observed seaﬂoor
displacements associated with the 2011 Tohoku-Oki earthquake. Geophysical Research Letters,
38(24), 2011.
[8] K. Koketsu, H. Miyake, H. Fujiwara, and T. Hashimoto. Progress towards a Japan Integrated Velocity Structure Model and Long-Period Ground Motion Hazard Map. The 14th World Conference
on Earthquake Engineering, pages 1–7, 2008.
[9] C. L. Lawson and R. J. Hanson. Solving least squares problems, volume 15 of Classics in Applied
Mathematics. Society for Industrial and Applied Mathematics (SIAM), Philadelphia, PA, 1995.
Revised reprint of the 1974 original.
[10] H. J. Melosh and A. Raefsky. A simple and eﬃcient method for introducing faults into ﬁnite
element computations. Bulletin of the Seismological Society of America, 71(5):1391–1400, 1981.
[11] Y. Saad. Iterative Methods for Sparse Linear Systems (2nd edition). Society for Industrial and
Applied Mathematics, 2003.
[12] K. Sato, T. Baba, T. Hori, M. Hyodo, and Y. Kaneda. Afterslip distribution following the 2003
Tokachi-oki earthquake: An estimation based on the Green’s functions for an inhomogeneous
elastic space with subsurface structure. Earth, Planets and Space, 62(12):923–932, 2011.
[13] K. Sato, N. Minagawa, M. Hyodo, and T. Baba. Eﬀect of elastic inhomogeneity on the surface
displacements in the northeastern Japan : Based on three-dimensional numerical modeling. Earth,
Planets and Space, 59:1083–1093, 2007.
[14] M. Sato, T. Ishikawa, N. Ujihara, S. Yoshida, M. Fujita, M. Mochizuki, and A. Asada. Displacement above the hypocenter of the 2011 Tohoku-Oki earthquake. Science (New York, N.Y.),
332(6036):1395, 2011.
[15] J. M. Winget and T. J. R. Hughes. Solution algorithms for nonlinear transient heat conduction analysis employing element-by-element iterative strategies. Computer Methods in Applied Mechanics
and Engineering, 52:711–815, 1985.
[16] T Yabuki and M Matsu’ura. Geodetic data inversion using a Bayesian information criterion for
spatial distribution of fault slip. Geophysical Journal International, 109(2):363–375, 1992.
[17] Y. Yagi and Y. Fukahata. Introduction of uncertainty of Green’s function into waveform inversion
for seismic source processes. Geophysical Journal International, 186(2):711–720, 2011.
886

Several hundred FEAs of inversion of fault slip

Agata, Ichimura, Hirahara, Hyodo, Hori and Hori

[18] O. C. Zienkiewicz, C. Emson, and P. Bettess. A novel boundary inﬁnite element. International
Journal for Numerical Methods in Engineering, 19:393–404, 1983.

Acknowledgment
We thank Prof. Yoshihiro Ito at Tohoku University for providing crustal deformation data. Part of
the results is obtained by using the K computer at the RIKEN Advanced Institute for Computational
Science (Proposal number hp120308).

887

