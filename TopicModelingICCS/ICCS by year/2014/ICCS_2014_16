Procedia Computer Science
Volume 29, 2014, Pages 1182–1192
ICCS 2014. 14th International Conference on Computational Science

Multiﬁdelity DDDAS Methods with Application to a
Self-Aware Aerospace Vehicle
D. Allaire1 , D. Kordonowy2 , M. Lecerf3 , L. Mainini3 , and K. Willcox3
1

3

Department of Mechanical Engineering, Texas A&M University, College Station, TX
dallaire@tamu.edu
2
Aurora Flight Sciences, Cambridge, MA
dkordonowy@aurora.aero
Department of Aeronautics & Astronautics, Massachusetts Institute of Technology, Cambridge, MA
{lecerfm,lmainini,kwillcox}@mit.edu

Abstract
A self-aware aerospace vehicle can dynamically adapt the way it performs missions by gathering information about itself and its surroundings and responding intelligently. We consider the
speciﬁc challenge of an unmanned aerial vehicle that can dynamically and autonomously sense
its structural state and re-plan its mission according to its estimated current structural health.
The challenge is to achieve each of these tasks in real time—executing online models and exploiting dynamic data streams—while also accounting for uncertainty. Our approach combines
information from physics-based models, simulated oﬄine to build a scenario library, together
with dynamic sensor data in order to estimate current ﬂight capability. Our physics-based
models analyze the system at both the local panel level and the global vehicle level.
Keywords:

1

Introduction

A self-aware aerospace vehicle can dynamically adapt the way it performs missions by gathering information about itself and its surroundings and responding intelligently. Such a vehicle
embodies the paradigm of a dynamic data-driven application system (DDDAS), whereby “application (or simulations) and measurements become a symbiotic feedback control system”1 .
Making the vision of a self-aware aerospace vehicle a reality requires new DDDAS approaches
that drive decision-making through dynamic response to uncertain data, while incorporating
information from multiple modeling sources and multiple sensor ﬁdelities. We consider the speciﬁc challenge of an unmanned aerial vehicle (UAV) that can dynamically and autonomously
sense, plan, and act. The challenge is to achieve these tasks in real time—executing online models and exploiting dynamic data streams—while also accounting for uncertainty. Our advances
1 http://www.dddas.org/

1182

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.106

Multiﬁdelity DDDAS Methods

Allaire et al.

will enable a revolutionary new generation of self-aware UAVs that can perform missions that
are impossible using current design, ﬂight, and mission planning paradigms.
Figure 1 shows our approach that combines oﬄine computation with online sensor data to
provide a time-constrained, updated estimate of UAV ﬂight capability. More speciﬁcally, we
combine information from physics-based models, simulated oﬄine to build a scenario library,
together with dynamic sensor data in order to estimate current ﬂight capability. We also use
dynamic data to modify our information-gathering strategies to manage uncertainty in our
capability estimates.

Figure 1: To achieve a self-aware vehicle capability, we use oﬄine physics-based modeling combined with dynamic sensor data to achieve dynamically updated estimates of vehicle capabilities
(e.g., the vehicle ﬂight envelope).
Signiﬁcant recent advances have greatly increased the capabilities of structural sensing and
vehicle health monitoring systems. Operational loads monitoring uses on-board aircraft sensors to identify damage and fatigue, with a goal of reducing maintenance costs and increasing reliability [1]. Integrated vehicle health management systems combine operational data,
physics-based models, and prognosis techniques to detect damage, fatigue and loss of aircraft
capability [2, 3, 4]. The digital twin paradigm takes this vision even further, aiming to achieve
data-informed vehicle certiﬁcation and sustainment [5]. The advent of increased on-board data
availability together with increased on-board computing power oﬀers an opportunity to extend
the digital twin paradigm even further to support real-time and on-board decision-making. To
achieve this requires DDDAS modeling approaches and algorithms.
One example of real-time integration of data and modeling is the On-Board Active System
Safety (ONBASS) project, which aims to achieve real-time aircraft health monitoring and onboard risk analysis [6]. As another example, Ref. [7] develops a DDDAS approach for realtime monitoring of stochastic damage, using high-ﬁdelity models to create candidate models of
system behavior that are then weighted based on real-time data. Real-time assessment results
in actions to increase estimation conﬁdence as well as actions to heal the system given current
damage estimates. Our approach parallels the oﬄine/online strategy of [7], but we focus on the
mapping from sensed data to system capability (in our case the updated vehicle ﬂight envelope)
rather than attempting to infer damage state.

1183

Multiﬁdelity DDDAS Methods

2

Allaire et al.

Approach

We describe the problem setup and then present the oﬄine and online elements of our approach.

2.1

Problem setup

We consider two kinds of quantities of interest:
• The quantities that are measured during ﬂight, referred to as the measured quantities
of interest. We denote these by qm (x), m = 1, . . . , M , where qm is the mth measured
quantity of interest (generally a vector representing a discretized ﬁeld quantity) and we
consider M such quantities.
• The quantities employed in the decision process that give information about capability
and performance constraints, referred to as the capability quantities of interest. We denote
these by sc (x), c = 1, . . . . , C, where sc is the cth capability quantity of interest (generally
a vector representing a discretized ﬁeld quantity) and we consider C such quantities.
Both quantities of interest are functions of the vehicle state, x, which includes quantities
describing the current damage state (e.g., damage location, extent and depth). In an oﬄine
phase, we use high-ﬁdelity models to obtain detailed information about the system and its
possible responses for diﬀerent ﬂight conditions and diﬀerent damage states. The simulated
information is stored in a damage library and is used to build a mapping from measured
quantities of interest to capability quantities of interest via surrogate models. In the online
phase, these surrogate models provide rapid estimates of vehicle capability given real-time
measurements. The next two subsections describe in more detail the models and methods
employed in our oﬄine and online phases.

2.2

Oﬄine stage

Our oﬄine phase considers a suite of multiﬁdelity physics-based models, at varying levels of
physics resolution, and ranging from the panel level to the full vehicle level. We store oﬄine
analysis information in a damage library. We use a variety of strategies to build surrogate models
from this information, including support vector machines, proper orthogonal decomposition
(POD) and self-organizing maps.
Vehicle-level models. At the vehicle level, a combination of ASWING [8] and the Variational Asymptotic Beam Cross-Sectional Analysis (VABS) [9] provides estimates of internal
wing stresses and deﬂections as a function of input aircraft kinematic states and estimates of
damage to the nominal aircraft structure.
ASWING [8] is a nonlinear aero-structural solver for ﬂexible-body aircraft conﬁgurations of
high to moderate aspect ratio. ASWING uses unsteady lifting line aerodynamics together with
a ﬁnite diﬀerence Euler-Bernoulli beam structural model. The aerodynamic model is extended
with Prandtl-Glauert compressibility treatment and a sectional stall model. The nonlinear
Euler-Bernoulli beam model permits analysis of large deﬂections. Figure 2 shows the ASWING
representation of our concept UAV and the corresponding aerostructural assessment for an
example pull-up maneuver. The ASWING model is a set of interconnected slender beams—one
each for the wing, fuselage, horizontal stabilizer, and vertical stabilizer. Lifting surfaces (the
wing and stabilizers) have additional cross-sectional lifting properties that are pre-speciﬁed.
VABS [9] models the wing box as an array of two-dimensional cross-sectional ﬁnite element
models. The cross-sections capture the details of a multi-ply composite wing skin and local
damage eﬀects. VABS computes lumped stiﬀness and inertial properties at a reference point in
each cross section, forming a global line representation of the beam. A standard beam problem
1184

Multiﬁdelity DDDAS Methods

Allaire et al.

Figure 2: The representation of our concept UAV within ASWING. The structure is speciﬁed
as a set of interconnected slender beams, where lifting surfaces have additional aerodynamic
properties speciﬁed along their span. The plots to the right show the aeroelastic trim solution
computed by ASWING for a pull-up maneuver at a ﬁxed ﬂight velocity and load factor.

solver ﬁnds the global force and moment distribution along this reference line given input forces
and moments. Using the reference line solution, the internal strain ﬁeld can be recovered in the
beam cross sections using relations initially computed by VABS. Figure 3 provides an overview
of the VABS modeling framework. In this work, we use the speciﬁc UM/VABS implementation
developed in FORTRAN by R. Palacios and C. Cesnik at the University of Michigan [10].
In our integrated modeling setup, ASWING manages the one-dimensional beam solution,
computing loads in the wing box for speciﬁc ﬂight conditions, while VABS resolves local stiﬀness
loss due to damage on the aircraft wing.
Panel-level models. At the panel level, we use a ﬁnite element model that simulates and
analyzes the panel behavior under speciﬁed loading and damage scenarios using a plate model.
The composite panel comprises carbon ﬁber plies with a speciﬁed stacking sequence. Four
clamped edges deﬁne boundary conditions that simulate the presence of fastening bolts along
the panel perimeter. Figure 4 shows a panel layout and corresponding panel cross-section for
a case with four plies with the symmetric stacking sequence [±45◦ , 0◦ /90◦ , 0◦ /90◦ , ±45◦ ]. The
border area that hosts the holes is reinforced with two additional plies with orientation 0◦ /90◦
and ±45◦ . The grey shaded area on the right plot of Figure 4 denotes the damaged region,
which is centered at (yd , zd ) and has extent Δy × Δz.
The loads l on the panel are deﬁned by the prescribed aircraft maneuver. The presence of
damage is simulated by weakening the stiﬀness properties of the ﬁnite elements that belong to
the prescribed damaged area. This model is used to explore diﬀerent damage scenarios. For
each scenario, we generate a snapshot set by evaluating the measured quantities of interest and
the capability quantities of interest. The measurement quantities of interest are the components
1185

Multiﬁdelity DDDAS Methods

Specify 2D FEMs
of cross sections
(MSC.NASTRANcompliant)

Allaire et al.
UM/VABS calculates
a)  Stiffness properties along reference line
b)  Influence coefficients relating reference
line solution to cross-sectional warping

Influence
coefficients

Internal stress
and strain
profiles can be
recovered

Stiffness
properties
Reference line
forces and
moments

1D
Beam
Solver

Specify
reference line
geometry

Any 1D beam solver can find the
force + moment solution along
reference line based on boundary
conditions

Figure 3: Variational Asymptotic Beam Cross-Sectional Analysis (VABS) allows for dimensional
reduction of an expensive three-dimensional beam solution into two-dimensional ﬁnite element
models coupled with an external beam solver.

z

18”
14”

l

Δy

18” 14”
A

A

Δz
zd

A-A

Ply 6: ±45◦
Ply 5: 0◦ /90◦
Ply 4: ±45◦
Ply 3: 0◦ /90◦
Ply 2: 0◦ /90◦
Ply 1: ±45◦

yd

y

Figure 4: Panel layout and layer sequence. Panel state variables include the damage location,
damage size, and load deﬁnition.
of strain evaluated for each element in the computational mesh. The capability quantities of
interest are the failure indices, also evaluated for each element in the computational mesh.
Failure index is an indicator of the structural condition that is translated into a scaling factor
for maneuver parameters. It is deﬁned as the ratio between the experienced stress and the
maximum allowable stress (typically the compression/tension/shear strength that characterizes
the material properties).
Damage library. The purpose of the damage library is to store information from analyses
run oﬄine using the panel-level and vehicle-level models. This information may be accessed by
online analyses in a variety of diﬀerent ways (e.g., directly accessing the predictions associated
with a damage scenario, or using library entries to perform dynamic adaptation of a reducedorder model). The damage library is populated by oﬄine analysis of a range of damage scenarios
1186

Multiﬁdelity DDDAS Methods

Allaire et al.

and kinematic states relevant to the planned mission of the vehicle. Information regarding the
planned mission can be used to determine the type of damage that may occur and the types
of maneuvers that may be performed. This information, along with resource constraints on
the library, can be used to optimize the contents of the damage library given mission level
objectives. In our current implementation, the library contains model predictions of sensed
strain and maximum failure indices for each scenario considered. Ongoing work is investigating
the utility of including model predictions of other quantities.
Classiﬁcation and surrogate modeling. We embody the information generated by these
physics-based models using various surrogate modeling techniques. At the panel level, we build
low dimensional representations of the measured and capability quantities of interest, using the
POD. We then use self-organizing maps to cluster the resulting data and to build a surrogate
model that maps measurements to capability estimates. The steps in this process are outlined
in Figure 5. The details of the panel-level approach are described in [11].
At the vehicle level, we use the maximum computed failure index to classify all simulated
conditions into safe (maximum failure index < 1) and unsafe (maximum failure index ≥ 1).
We build a representation of the failure boundary (maximum failure index = 1) as a function
of damage parameters and vehicle operating conditions. Our current implementation uses a
simple bisection method to deﬁne the failure boundary; future work will use adaptive sampling
with support vector machines as in [12]. The steps in this process are outlined in Figure 6 and
are described in more detail in [13].

2.3

Online stage

In the online stage, our goal is to move from sensed data to updated estimates of structure
capability at the local panel level and updated ﬂight envelopes at the vehicle level. The key
is to achieve these estimates suﬃciently rapidly to support dynamic decision-making, while
leveraging the rich amount of physics-based information contained within our damage library.
We also aim to characterize our level of conﬁdence in our updated estimates.
At the panel level, the low-dimensional POD representations combined with the selforganizing map clustering achieve the desired rapid assessment. Figure 5 shows the online
ﬂow of analysis that moves from sensed strain data to estimates of panel failure indices. The
reconstruction of the POD coeﬃcients in the second step is achieved using the gappy POD
approach [14, 15].
At the vehicle level, we use a Bayes classiﬁer that assigns a posterior estimate of the probability of being in any damage state contained in our damage library. A simple approach, described
in [13], assigns equal prior probability to each damage state in the library and classiﬁes the vehicle’s damage state as the state in the library with the maximum posterior probability. A
more sophisticated approach incorporates mission information, current maneuver, and a mixture model of the posterior damage state. The additional mission and maneuver information
permit us to relax the assumption of equal prior damage state probabilities. The mixture
model of the posterior damage state enables interpolation among records in the damage library,
permitting us to characterize a richer range of vehicle damage states.

3

Results

The oﬄine vehicle model allows for determination of the vehicle capability over a range of
damage events using classiﬁcation. Figure 7 shows an example of this process. We simulate a
pull-up maneuver at constant velocity V = 260 ft/s with varying load factor n ∈ [1, 3.5] over
a range of two chordwise damage size parameters, with ﬁxed spanwise size parameters and
constant depth. Each damage and maneuver combination is classiﬁed as “safe” or “unsafe”
1187

Multiﬁdelity DDDAS Methods

Allaire et al.

OFFLINE

ONLINE

High fidelity simulations
Complete dataset

Incomplete
Sensor data

Measured
Capability
quantities of interest quantities of interest
qm (x)
sc (x)

Measured
quantities of interest
qm (x)

POD model for
qm (x) and sc (x)

POD modes
c
ϕm
i and ψi

POD coefficients
αim (x) and βic (x)

Reconstruction of
measurements
POD coefficients
αim (x)

SOM training to cluster
similar states in the
POD coefficients space

Classification of
reconstructed αim (x) into the
closest SOM cluster

Surrogate model for
capability POD coefficients
βic (α)

Approximation of
capability POD coefficients
βic (α)

Estimation of capability
quantities of interest
using POD expansion with
approximated coefficients
sc (α)

Figure 5: Diagram of the oﬄine (black boxes) and online (red boxes) steps of our approach at
the panel level. POD models and clusters are obtained oﬄine and employed online as indicated
by the gray arrows.
based on the value of the maximum failure index in the wing structure. Using this classiﬁer
variable, the boundary surface between safe and unsafe maneuver regions for any given damage
case can be determined using a bisection algorithm.
Figure 8 presents results for an example case at the panel level. The surrogate models are
obtained oﬄine using an evaluation set of 3000 diﬀerent damage cases for ﬁxed panel layout and
loading condition (Figure 4). We show here results for the case of a 3.5220 × 7.7540 square-inch
damage located at (yd = 10.5900, zd = 12.9100) and involving plies 4, 5 and 6. The ﬁgure
shows the original ﬁnite element solution for the failure index ﬁeld over the panel. We use this
solution to generate synthetic data with which to test our approach. The bottom right plot of
1188

Multiﬁdelity DDDAS Methods

Allaire et al.

OFFLINE

ONLINE

High fidelity simulations
Complete dataset

Incomplete
Sensor data

Measured
Capability
quantities of interest quantities of interest
qm (x)
sc (x)

Measured
quantities of interest
qm (x)

Discrete lookup functions
relating
measured truth values qm (x)
to capability metric sc (x)

Cluster in
measurements qm (x) space
based on sc (x)

Store discrete values
of the quantities of interest
in a library of clusters

Bayes classification of the
incomplete measured quantity qm
into the most probable cluster
in library

Estimation of capability
quantities of interest
according to the lookup table
of the most probable cluster
sc (qm )

Figure 6: Diagram of the oﬄine (black boxes) and online (red boxes) steps of our approach
at the vehicle level. Damage library information is stored using oﬄine clustering based on
the capability quantities of interest. The library information is employed online using a Bayes
classiﬁer as indicated by the gray arrow.

Figure 8 shows the corresponding online estimate of the failure index given by our surrogate
modeling approach, reconstructed using strain sensor measurements that cover 50% of ply 4.
The other two plots in Figure 8 are included to give insight to the errors due to the POD
approximation and the self-organizing map as follows. The top right plot represents the best
approximation of the original ﬁnite element solution in the POD basis—this would be achieved
only if we could reconstruct the POD modal coeﬃcients exactly. The bottom left plot shows
that a small amount of additional error is introduced by using the self-organizing map to map
from POD measurement coeﬃcients to POD capability coeﬃcients. The ﬁnal plot in the lower
1189

0D[LPXPDOORZDEOHORDGIDFWRUQPD[

Multiﬁdelity DDDAS Methods

Allaire et al.

3.4

3.34

3.38
3.33
3.36
3.34

3.32

3.32

3.31

3.3
3.3

3.28

3.29

3.26
3.24

3.28

3.22
3.27

3.2
0

3.26

0.05
0.1
0.15

'DPDJH
FKRUGZLVHH[WHQW

0.4

0.35

0.3

0.25

0.2

3.25

nmax

'DPDJH
FKRUGZLVHORFDWLRQ

Figure 7: Surface representing the vehicle capability as a function of two damage parameters
using the oﬄine vehicle model. A pull-up maneuver with constant velocity V and varying load
factor n produces wing loading cases that are classiﬁed as safe or unsafe, producing a maximum
safe load factor nmax for each damage case using a bisection algorithm. Note that when the
chordwise damage extent is zero, the damage region is degenerate with zero volume, and the
model operates using the baseline “pristine” aircraft conﬁguration; hence, we see no change to
the maximum allowable load factor.
right also includes the error due to inferring the POD measurement coeﬃcients from sparse
data. Overall, the reconstructions of the failure indices are suﬃcient to provide a ﬁrst-cut
assessment for online decision-making.

4

Conclusions

DDDAS methods and algorithms have signiﬁcant potential to bring new capabilities to the design and operation of future aerospace vehicles. A self-aware vehicle is one example of achieving
this through a synergistic combination of simulations and measurements, integrated dynamically in real time and feeding back to drive decision-making and adapt vehicle behavior. Our
work is developing DDDAS methods that exploit an oﬄine/online decomposition of tasks to
incorporate information from multiple modeling sources and multiple sensors. We draw on
techniques from reduced-order modeling, inference and uncertainty quantiﬁcation, and combine them with physics-based models of the vehicle at multiple levels of resolution. Here we
described the speciﬁc consideration of models at the local panel level and at the overall vehicle
level. Ongoing work aims to quantity the beneﬁts of the DDDAS-enabled vehicle relative to a
vehicle designed using current practices.

Acknowledgments
This work was supported by AFOSR grant FA9550-11-1-0339 under the Dynamic Data-Driven
Application Systems (DDDAS) Program, Program Manager Dr. Frederica Darema. The authors thank Professor Drela for the use of ASWING and Professor Cesnik for use of the University of Michigan Variational Asymptotic Beam Section Analysis (UM/VABS), revision 1.23b.

1190

Multiﬁdelity DDDAS Methods

Allaire et al.

POD approximation

0.05
0

FI

FI

Original FEM data

15

0.05
0
15

10

z location

10
5
5

10
y location

15

z location

5

POD+SOM approximation

10
y location

15

POD+GAPPY+SOM approximation

0.05
0

FI

FI

5

15

0.05
0
15

10

z location

10
5
5

10
y location

15

z location

5
5

10
y location

15

Figure 8: Failure index FI over the panel. The panel border containing the bolt holes is excluded
for plotting clarity. Top left: the “truth” ﬁnite element model (FEM) solution. Top right:
the representation of the FEM solution in the POD basis. Bottom left: POD approximation
combined with self-organizing map (SOM) surrogate, mapping measurement POD coeﬃcients
to capability POD coeﬃcients. Bottom right: our full approach using gappy POD to infer
POD coeﬃcients from measured data, and SOM to map from measurement POD coeﬃcients
to capability POD coeﬃcients.

References
[1] S. Willis, OLM: A hands-on approach, in: 25th ICAF Symposium, no. May, Rotterdam, pp.
1199–1214.
[2] E. M. Ortiz, G. J. Clark, H. Hall, M. M. Arita, J. L. Vian, Multi source data integration for aircraft
health management, in: Fourth IEEE International Workshop on Engineering of Autonomic and
Autonomous Systems, 2007.
[3] B. Glass, Integrated system vehicle health management (ISVHM) architecture design: ISHM
impact study and architecture design, AFRL-RB-WP-TR-2008-3148.
[4] A. Srivastava, R. Mah, M. Claudia, Integrated vehicle health management, Technical Plan, Version
2.03, NASA Aeronautics Research Mission Directorate Aviation Safety Program (2009).
[5] E. Glaessgen, D. Stargel, The Digital Twin paradigm for future NASA and US Air Force vehicles,
AIAA Special Report, NTIS N (2012).
[6] B. Kirk, P. I. Schagaev, T. Wittig, A. Kintis, T. Kaegi, F. Friedrich, E. T. Ag, S. A. Spirit, S. Avenue, P. Faliro, Active safety for aviation, in: 6th INO Workshop, EUROCONTROL Experimental
Centre (EEC), 2007.

1191

Multiﬁdelity DDDAS Methods

Allaire et al.

[7] E. Prudencio, P. Bauman, S. Williams, D. Faghihi, K. Ravi-Chandar, J. Oden, A dynamic data
driven application system for real-time monitoring of stochastic damage, Procedia Computer Science 18 (2013) 2056–2065.
[8] M. Drela, Integrated simulation model for preliminary aerodynamic , structural , and control-law
design of aircraft, in: In the proceedings of the 40th AIAA SDM Conference, no. 99–1394, American
Institute of Aeronautics and Astronautics, St. Louis, MO, 1999. doi:10.2514/6.1999-1394.
[9] C. E. S. Cesnik, D. H. Hodges, VABS: A new concept for composite rotor blade cross-sectional
modeling, Journal of the American Helicopter Society 42 (1) (1997) 27–38. doi:doi:10.4050/
JAHS.42.27.
URL http://www.ingentaconnect.com/content/ahs/jahs/1997/00000042/00000001/art00003
[10] R. Palacios, C. E. S. Cesnik, Cross-sectional analysis of nonhomogeneous anisotropic active slender
structures, AIAA Journal 43 (12) (2005) 2624–2638.
[11] L. Mainini, K. Willcox, A surrogate modeling approach to support real-time structural assessment
and decision-making, AIAA-2014-1488, in Proceedings of 10th AIAA Multidisciplinary Design
Optimization Conference, National Harbor, MD (January 13–17, 2014).
[12] C. Dribusch, S. Missoum, Construction of Aeroelastic Stability Boundaries Using a MultiFidelity Approach, in: 53rd AIAA/ASME/ASCE/AHS/ASC Structures, Structural Dynamics
and Materials Conference, Structures, Structural Dynamics, and Materials and Co-located Conferences, American Institute of Aeronautics and Astronautics, Honolulu, HI, April 23–26, 2012.
doi:10.2514/6.2012-1803.
URL http://dx.doi.org/10.2514/6.2012-1803
[13] M. Lecerf, D. Allaire, K. Willcox, D. Kordonowy, A dynamic data driven approach to online ﬂight
envelope updating for self aware aerospace vehicles, AIAA-2014-1175, in Proceedings of 16th AIAA
Non-Deterministic Approaches Conference, National Harbor, MD (January 13–17, 2014).
[14] R. Everson, L. Sirovich, The Karhunen-Lo`eve procedure for gappy data, Journal of Optical Society
of America 12 (8) (1995) 1657–1664.
[15] T. Bui-Thanh, M. Damodaran, K. Willcox, Aerodynamic data reconstruction and inverse design
using proper orthogonal decomposition, AIAA Journal 42 (8) (2004) 1505–1516.

1192

