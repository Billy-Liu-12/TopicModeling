Procedia Computer Science
Volume 29, 2014, Pages 400–409
ICCS 2014. 14th International Conference on Computational Science

Improving Collaborative Recommendation via
Location-based User-Item Subgroup
Zhi Qiao1,3 , Peng Zhang2 , Yanan Cao2 , Chuan Zhou2 , and Li Guo2
1
2

Institute of Computing Technology, Chinese Academy of Science, Beijing, China
qiaozhi@nelmail.iie.ac.cn
Institute of Information Engineering, Chinese Academy of Science, Beijing, China
{zhangpeng, caoyanan, zhouchuan}@iie.ac.cn
3
University of Chinese Academy of Sciences, Beijing, China

Abstract
Collaborative ﬁlter has been widely and successfully applied in recommendation system. It
typically associates a user with a group of like-minded users based on their preferences over
all the items, and recommends to the user those items enjoyed by others in the group. Some
previous studies have explored that there exist many user-item subgroups each consisting of
a subset of items and a group of like-minded users on these items and subgroup analysis can
get better accuracy. While, we ﬁnd that geographical information of user have impacts on
user group preference for items. Hence, In this paper, we propose a Bayesian generative model
to describe the generative process of user-item subgroup preference under considering users’
geographical information. Experimental results show the superiority of the proposed model.
Keywords: Recommendation system, collaborative ﬁlter

1

Introduction.

Recommender systems have attracted increasing attention lately due to the booming applications in online advertising. Recommender systems can help users to eﬃciently select their
favorable products from a huge number of candidate products by analyzing the associated useritem matrix. It is of utmost importance in recommendation systems to accurately model user
rating described by a triple (user, item, rating).
Recently due to the wide use of mobile devices and ubiquitous sensors, it is urgent to incorporate location-based information in rating an item [1]. Many studies have explored the
beneﬁt of involving the geographical information for recommendation. However, these works
rarely fully consider the geographical information. Most of them are studied in three aspects:
1)Simply take the geographical information as an attribute and derive a user classiﬁcation/clustering model for recommendation [16, 20, 10]. 2) Include only item geographical information
for user rating. For example, Resnick et al.[18] presented a LCARS system that can cluster
400

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.036

Collaborative Recommendation
























Qiao, Zhang, Cao, Zhou and Guo

(a) User preference on movie topics in
the six areas

(b) User attention to movie topics in the
six areas

Figure 1: Data characteristics

content-similar spatial items into the same topic with high probability, where location attribute
of items is used for modelling. Apparently, this method does not consider user location. 3)Consider only individual user location information. For example, a recent work [8] constructs a
hierarchical pyramid structure to split original location space and reorganize subspaces, where
an item-based collaborative ﬁlter model is learned.
Some previous studies have explored that there exist many user-item subgroups each consisting of a subset of items and a group of like-minded users on these items and subgroup
analysis can get better accuracy. Generally, the user group characteristics reﬂects the reality
that users in the same group share similar preference on an item. Apparently, existing works
rarely consider geographical information of users in modelling sub-group between users and
items. In this paper, we denote the users’ latent groups as location-aware user groups (short
for user groups) and items’ latent groups as item groups. We suppose that the user group
preference is viewed as rating distribution of a group rating item group. Each rating is derived
by computing weighted mean score which integrates all possible latent user groups and item
groups assignments of the (user, item) pairs.
The Motivation of our study comes from the MovieLens data set. After carefully analyzing
the historical rating log data, we found that there exists latent user group preference for movie
topics. Moreover, the latent user group preference has strong correlation with user location
information. Users who live nearby probably share the same rating score for a movie. We select
6 areas, which are 1 MN, MINNEAPOLIS, 2 MN, MINNEAPOLIS, 3 MN, MINNEAPOLIS,
4 MO, MILLCREEK, 5 NJ, KEASBEY and 6 MO, KANSAS CITY. Areas 1 , 2 and 3 are
close, but far from areas 4 , 5 and 6 , and areas 4 , 5 and 6 are also far away from each
other. We show the results in Fig.1(a) where we can observe that the average score for the
19 movie topics in 6 areas. We can observe that neighboring areas show similar rating score
distributions. Fig.1(b) shows the ratio of user rating for 19 movie topics in 6 diﬀerent places.
In both ﬁgures, the same conclusion can be drawn that users nearby share similar preference
to a given topic. This phenomenon demonstrates that there actually exists the location-based
user group preference for movie topics.
401

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

Compared to existing location-based recommendation, modelling location-based user group
preference has its unique characteristics that pose non-trivial technical challenges:
• How to combine users’ geographical information to learn the location-based user group
preference. Location-based user group and item group are not independent and need to
be learnt symmetrically and simultaneously.
• How to design a probability generative model to simulate the generative procedure of
user rating under considering the location-based user group preference. The popular LDA
models are incapable of describing the complicated generative process, which demands a
new hierarchical Bayesian model.
• How to infer the parameters of the generative model and design experiments for evaluation.
It is necessary to design an eﬃcient inference algorithm for parameter estimation and
validate the performance on real-world data sets.
In this paper, we present a new generative model to model location-based user group preference according to the 4-tuple information (user ID, user location, user rating, item ID).
The generative model consists of two interacting LDA models, where the ﬁrst one models the
location-based user groups (user dimension) and the other models the item groups. We also
present a Gibbs sampling algorithm for parameter estimation in the model. Experiments show
the performance of the proposed method.

2

Problem Description.

We ﬁrst deﬁne the key data structures and notations used in this paper.
Geographical information of User. Each user u has a register location generated in various
EBSNs or LBSNs. User Activity. A user activity is a triple (u, v, r) that user u rates item
v with score r. User activity historical data is given by S ⊆ U × V × R, where user activities
are positive observations in the past. User Group. A user group can be a set of users by
considering users’ geographical information. Item group. A sets of item with similar preference
from users.
In our analysis, rating scores are strongly correlated with location-based user group preferences, where zl and zg represent two diﬀerence topic models. This enables rating r to be
mutually inﬂuenced during the both topic discovery processes.

3
3.1

Los Model
Model Description

The proposed model, Los, is mainly a probabilistic mixture generative model which aims to
model location-based user group preference for personal recommendation. In Fig.2, the model
presents that each rating is determined by preference distribution of user groups rating item
groups. Los treats users and items symmetrically, which learn both location-based user groups
and item groups. In Los, ratings are generated in the following way:
1. Choose K l × K g distributions over rating Ψij ∼ Dir(ξ)
2. Choose a distribution over K l location-based user group for each user Ωu ∼ Dir(ω)
3. Choose a distribution over K g item groups for each item θv ∼ Dir(α)
402

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

¦

¹
¡

©









¶

Figure 2: The graphical representation of the Los model

4. For each user-item pair (uv)
(a) Choose a user group zlu ∼ M ultinomial(Ωu )
(b) Choose a item group zgv ∼ M ultinomial(θv )
(c) Choose a rating ruv ∼ p(ruv |zlu , zgv , Ψzlu zgv ) with Multinomial distribution
In the modelling procedure, we let Ψij be the distribution over the rating values 1...K s when
ith user group rates jth item group. Additionally, lu is the speciﬁc location of the uth user. φlki
determines generative probability of the location of the user i from the kth group. Each group
has several parameters: Expection μ and Variance Σ, and user’s location conforms to Gaussian
distribution for each group, which can be denoted as li ∼ N (μj , Σj ) where li represents the
location of the ith user and (μj , Σj ) represents the parameters of the jth group.
Speciﬁcally, given a querying user u, the likelihood of score that user u will rate item v, is
sampled from the following model.
p(R|Zg , Zl , Ψ)

(1)

where capital variables represent the collection of individual variables, Zg = {Zg1 , Zg2 , ..., Zgv }
and Zl = {Zl1 , Zl2 , ..., Zln }(v is the number of items, and n is the number of users). Each score
is modelled as following:
p(rij |zgi , zlj , Ψ)

(2)

Now our goal is to model observed user rating based on prior parameter. As in the model, user
group, item group and rating distribution are strong correlated with mid parameter θ, Ω and
Φ. Hence, we obtain the joint distribution for the Los model as in Eq. (3).
p(rij , θi , Ωj , Φij |α, ε, ω)
= p(rij |Φij )p(Φij |ε)p(θi |α)p(Ωj |ω)
Kg Kl

=

p(rij , zgi = p, zlj = q|Φij )p(Φij |ε)p(θi |α)p(Ωj |ω)

p=1 q=1
K

g

K

(3)

l

=

p(rij |zgi = p, zlj = q, Φij )p(zgi = p|θi )

p=1 q=1

p(zlj = q|Ωj )p(Φij |ε)p(θi |α)p(Ωj |ω)
We can obtain the likelihood of a score rij , when user i rates item j, as one of its marginal
403

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

distributions by integrating out the distributions θi , Ωj , Φij .
p(rij |α, ε, ω)
p(rij |Φij )p(Φij |ε)p(θi |α)p(Ωj |ω)

=

Kg Kl

p(rij |zgi = p, zlj = q, Φij )p(zgi = p|θi )

=

(4)

p=1 q=1

p(zlj = q|Ωj )p(Φij |ε)p(θi |α)p(Ωj |ω)

3.2

Model Inference

We use collapsed Gibbs sampling [18] to obtain samples of hidden variable assignments and the
unknown parameters {Φ, Θ, Ψ, θ} in the model. As for the hyperparameter α, β, ξ and ω, we
take a ﬁxed value (i.e., α = 0.01, ξ = 0.1 and ω = 0.1). In the sampling procedure, we begin
with the joint probability of all user activity and registered location in the data set. Next, using
the chain rule, we obtain the posterior probability of sampling groups. Speciﬁcally, we employ
a two-step Gibbs sampling procedure. We ﬁrst sample the coin zl according to the posterior
probability:
l
p(zil = k|z−i
, R, L, Ω, Φ) =
r

kg

nlkij,−i + βrij

j=1

ks
s
s=1 (nlk ,−i

φlki =

+ βrij )

n−i
k + ωk
ks
−i
t=1 (nt + ωt )

×

−1

× φlki

1
exp(− (li − μk )T Σ−1 (li − μk ))
2
|Σk |

1
2π

(5)

(6)

r

where nlkij,−i is the number of times that the user group k and the rating rij have been sampled
in the the user rating activity R; nslk ,−i is the number of times that the user group k and the
rating s have been sampled in the user rating activity R; n−i
k is the number of times that the
user group k except the user i has been sampled from the multinomial distribution speciﬁc to
user u; n−i
t is the number of times that user group t except user i has been sampled from the
multinomial distribution speciﬁc to user u. Additionally, φlki determine generative probability
of location i from group k. Here, we suppose each group has location expection μ and location
Variance Σ, and user’s location conforms to Gaussian distribution for each group, li ∼ N (μj , Σj )
where i represents the ith user and j represents the jth user group.
Then we perform latent assignment on item group. We begin with the joint probability of all
user activity and corresponding items in the data set. Next, using the chain rule, we obtain the
posterior probability of sampling groups for each four-tuple. Speciﬁcally, we employ a two-step
Gibbs sampling procedure. Due to space constraints, we show only the derived Gibbs sampling
formulas, omitting the detailed derivation process. We then sample the zg according to the
posterior probability:
g
p(zjg = k|z−j
, R, L, Ω, Φ, Θ) =
kl

r

ngij
+ βrij
k ,−j
ks

i=1
r

s
s=1 (ngk ,−j

+ βrij )

×

ks

n−j
k + αk

−j
t=1 (nt

(7)

+ αt ) − 1

is the number of times that the item group k and the rating rij have been sampled
where ngij
k ,−j
in the user rating activity R; nsgk ,−i is the number of times that the item group k and the rating
404

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

s have been sampled in the user rating activity R; n−j
k is the number of times that item topic
k except item j has been sampled from the multinomial distribution speciﬁc to item j; n−j
is
t
the number of times that user group t except item j has been sampled from the multinomial
distribution speciﬁc to item j.
After a suﬃcient number of sampling iterations, we can obtain group assignment of users
and items. Hence, φlki can be computed according to equation 6 after group parameter of each
group is gotten.
we can estimate the parameters Ωi , θi , Φrij as follows:
Ωi =

3.3

n i + ωi
kl
j
j=1 (n

+ ωi )

; θi =

ni + αi
kg
j
j=1 (n

+ αi )

; Φrij =

nrij + εr
ks
t
t=1 (nij

+ εr )

(8)

Model Application

A rating task in our recommendation system takes four arguments (u < user >, lu < location
of user >, v < item >). After we obtain parameters (Ω, θ, Φ, φ), we can calculate the predicted
value of rij as follows
kl

kg

ks

Φtij Ωip θqj φlqj

r˜ij =

(9)

p=1 q=1 t=1

New User Rating Known Item. When a user is unknown to the recommendation system, there
is no rating history or activity log for the new user. This is a cold start problem, which is
a usual problem for collaborative ﬁltering. In our model, user preference conforms to group
preference. Hence, we can ﬁrst obtain probability on which the user belongs to each group
based on user location. Then use Eq. (9) to predict rating.
Known User Rating New Item. When an item is unknown to the recommendation system, this
is also a cold start problem. We ﬁrst obtain probability on which the item belongs to each group
based on item content. Here, we can compute proﬁle similarity between the new item and other
known items, and then integrate distribution of similar items to predict the probability of new
item. After that, Eq. (9) is used to predict rating.
θkt =

m
i
i=1 sim(i, t)θk
m
i=1 sim(i, t)

(10)

New User Rating New Item. There may be a scenarios, where user and item are both new for
model. In the case, we combine above two procedures to accomplish rating prediction.

4

Experiments

To verify the eﬀectiveness of our approach, two experiments are performed: (i) we compare the
error rate of our model, Los, with benchmark methods, (ii) we analyze relationship between
the error rate and latent parameter setting. Data Sets. 1) Douban: the dat set consisting
of user ratings for items from Douban Event user histories. 2) MovieLens: the ratings in the
MovieLens data set are user-provided star ratings, from 0.5 to 5 stars.
Evaluation metric. 1) The Root Mean Squared Error (RMSE) is to measure the prediction
performance on the test data. RMSE is a frequently used measure of the diﬀerences between
values predicted by a model or an estimator and the values actually observed, as RM SE(e) =
2

n
i=1

|xi −ˆ
x i |2
.
n

2) The Mean Absolute Error (MAE) is used to measure how close forecasts
405

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

Data Set
Douban Event
Movielens

No. of User
100000
943

No. of Item
300000
1682

No. of Ratings
3500000
100000

Table 1: Data set description
or predictions are to the eventual outcomes. The mean absolute error is given by M AE(e) =
n
1
ˆi |. In the both equation, x
ˆi is the predicted value and xi the observed value.
i=1 |xi − x
n
Baseline Method. 1) Pure content-based predictor(PCP), the prediction task is considered as a
multiple label text-categorization problem. Content (e.g. title, cast, etc.) of each item can be
seen as a bag of words, and user rating 0.5-5 is deﬁned as one of twelve labels. 2) User-based
CF(UCF), we implemented a pure collaborative ﬁltering component that uses a neighborhoodbased algorithm. In neighborhood-based algorithms, a subset of users are chosen based on
their similarity to the querying user, and a weighted combination of their ratings is used to
produce predictions for the active user. 3). Matrix Factorization(MF), the fundamental idea is
to embody user i and item j with low-dimension latent factors vector Ui ∈ Rk and Vj ∈ Rk .
Then, the dyadic rating r(ui , vj ) of user i to item j is approximated by the inner product UiT Vj .

4.1

Experimental Evaluation

Model Accuracy. We tested Los and other three baseline methods on both Douban and Movielen
datasets, and results are listed in Table 2. The experimental results show that out model has
higher predictive accuracy. Apparently, our model integrates group preference which can better
model pattern of user rating. In the model, group preference is considered as distribution of
location based user group rating diﬀerent topics. Hence, a bayesian hierarchical generative
model is applied to summarize rating procedure and learn the generative rule.

Douban: 99% as Training data
Douban: 80% as Training data
Douban: 50% as Training data
Douban: 20% as Training data
MovieLens: 99% as Training data
MovieLens: 80% as Training data
MovieLens: 50% as Training data
MovieLens: 20% as Training data

RMSE
MAE
RMSE
MAE
RMSE
MAE
RMSE
MAE
RMSE
MAE
RMSE
MAE
RMSE
MAE
RMSE
MAE

PCP
1.157
1.059
1.161
1.066
1.181
1.087
1.215
1.113
1.327
1.117
1.331
1.121
1.351
1.141
1.384
1.172

UCF
1.099
0.104
1.107
0.106
1.123
0.112
1.153
0.146
1.219
1.071
1.224
1.076
1.242
1.096
1.276
1.127

MF
0.818
0.771
0.823
0.775
0.843
0.791
0.871
0.825
1.016
0.966
1.023
0.971
1.041
0.991
1.071
0.122

Los
0.719
0.693
0.721
0.697
0.739
0.716
0.773
0.747
0.931
0.892
0.935
0.897
0.955
0.917
0.983
0.946

Table 2: Precision comparison among diﬀerent models.
Parameter Impacts. Our model needs two additional predeﬁned parameters, K l representing
number of latent user groups and K g representing number of item groups. There are some
works on how to set number of latent groups. But the self-adaptive models need more time
cost on parameter setting by multiple iterative learning. We implemented the model based on
diﬀerent latent parameter, use RMSE to measure precision and then we get the results in Fig.
5. We consider that model is performed based on diﬀerent K l under K g with constant value 50,
and experimental results on both data sets are showed in Fig.3(a) and Fig.4(a). Next, when K l
is constant value 50 and the similar procedure is applied to K g in Fig.3(b) and Fig.4(b). Then
406

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

we can ﬁnd that error rate decreases as parameter increasing on both situations, and there are
small changes beginning from 50. In the last experiment, we also set both parameters to be 50.

0.88

0.84

99% as Training Data

99% as Training data
0.82

80% as Training Data

0.86

80% as Training data

50% as Training Data

50% as Training data
20% as Training data

20% as Training Data

0.84

0.8

0.82

0.8
0.78

0.78
0.76

0.76

0.74

0.74

0.72
0.72

0.7

0.7
10

20

30

40

50

60

70

80

90

100

0.68
10

20

30

(a) K l number

40

50

60

70

80

90

100

(b) K g number

Figure 3: Latent variables w.r.t. model precision on Douban data.

1.04

1.04

99% as Training Data

99% as Training Data

80% as Training Data
1.02

80% as Training Data

50% as Training Data

1.02

50% as Training Data

20% as Training Data

20% as Training Data

1

1

0.98

0.98

0.96

0.96

0.94

0.94

0.92

0.92

0.9
10

20

30

40

50

60

70

(a) K l number

80

90

100

0.9
10

20

30

40

50

60

70

80

90

100

(b) K g number

Figure 4: Latent variables w.r.t. model precision on Movielen data.

5

Related Work.

Traditional recommenders. There are two typical ways used to make recommendation:
collaborative ﬁltering [14, 3, 15, 7, 2, 19] and content-based recommendation. Collaborative
ﬁltering techniques automatically suggest relevant items for a given user by referencing item
rating information from other taste-similar users. There are two main methods in collaborative
ﬁlter, memory-based and model-based collaborative ﬁltering. Memory-based collaborative ﬁlter
makes rating prediction based on the entire collection of previously rated items by the users.
In most real-world scenarios, data are sparse. If a user is new and only rates few items, this
method cannot work well. Model-based method, like SVD, can get high accuracy, but it is
diﬃcult to scale to large data and is very slow to converge. Recommender systems using pure
collaborative ﬁltering approaches tend to fail when little knowledge about the user is known or
no one has similar interests to the user. Although the content-based method is capable of coping
with the lack of knowledge, it fails to account for community endorsement. As a result, some
research work focused on how to combine the advantages of both collaborative ﬁltering and
content-based methods [6, 13, 11]. Our model aims to collaborate user group preference under
407

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

considering geographical information of user and content of item for personal recommendation,
which can tackle the cold start problem and obtain higher precision.
Location-aware recommenders. To date, many works recommend services to users by
considering users as nodes on the map with GPS locations. Take the mobile phone application
for example, several simple and practical methods are applied: (1) the KNN technique [5]
and its variants, e.g., the Additional KNN [9, 12] method which simply retrieves the k objects
nearest to a user. (2) Preference based methods such as skylines [4] and location-based methods
[17] require users to express explicit preference constraints. The CityVoyager system [17] mines
a users personal GPS trajectory data to determine her preference shopping sites. The spatial
activity recommendation system [21] mines GPS trajectory data with embedded user-provided
tags in order to detect interesting activities located in a city (e.g., art exhibits and dining
downtown). Based on this data, system can answer two query types: (a) given an activity type,
return where in the city the activity is happening, and (b) given an explicit spatial region,
querying burst activities in this region. All of above works didn’t consider location-based user
group. In our analysis, we ﬁnd the signiﬁcance of location-based user group preference for
rating prediction. Hence, our model can fully unleash the power of location information.

6

Conclusion

Collaborative ﬁltering (CF) is one of the most successful recommendation approaches. The
subgroup analysis has been proposed for improving accuracy. While, we ﬁnd that geographical
information of user have impacts on user group preference for items. In the paper, we proposed
a new Bayesian generative model, Los, for location-based user group preference modelling. The
collapsed Gibbs sampling was used for parameter inference. We also collected two datasets
from Douban and MoiveLen for testing. Experimental results show the performance of the Los
model.

Acknowledgments
This work was supported by the NSFC (No. 61370025), 863 projects (No. 2011AA010703
and 2012AA012502), 973 project (No. 2013CB329606), and the Strategic Leading Science and
Technology Projects of Chinese Academy of Sciences(No.XDA06030200).

References
[1] Gediminas Adomavicius and Alexander Tuzhilin. Toward the next generation of recommender
systems: A survey of the state-of-the-art and possible extensions. In IEEE TRANSACTIONS ON
KNOWLEDGE AND DATA ENGINEERING, pages 734 – 749. IEEE, 2005.
[2] Chumki Basu, Haym Hirsh, and William Cohen. Recommendation as classiﬁcation: Using social
and content-based information in recommendation. In Proceedings of the ﬁfteenth national/tenth
conference on Artiﬁcial intelligence/Innovative applications of artiﬁcial intelligence, pages 714–
720. American Association for Artiﬁcial Intelligence, 1998.
[3] John S. Breese, David Heckerman, and Carl Kadie. Empirical analysis of predictive algorithms
for collaborative ﬁltering. In Proceedings of the Fourteenth conference on Uncertainty in artiﬁcial
intelligence, pages 43–52. Morgan Kaufmann Publishers, 1998.
[4] Stephan Brzsnyi, Donald Kossmann, and Konrad Stocker. The skyline operator. In Proceedings of
the 17th International Conference on Data Engineering, pages 421–430. IEEE Computer Society
Washington, 2001.

408

Collaborative Recommendation

Qiao, Zhang, Cao, Zhou and Guo

[5] Surajit Chaudhuri and Luis Gravano. Evaluating top-k selection queries. In Proceedings of the 25th
International Conference on Very Large Data Bases, pages 397–410. Morgan Kaufmann Publishers,
1999.
[6] Marco de Gemmis, Giovanni Semeraro, Pasquale Lops, and Pierpaolo Basile. A retrieval model for
personalized searching relying on content-based user proﬁles. In Proceeding of 6th AAAI Workshop
on Intelligent Techniques for Web Personalization and Recommender Systems (ITWP), page 19.
AAAI, 2008.
[7] Jonathan L. Herlocker, Joseph A. Konstan, Loren G. Terveen, and John T. Riedl. Evaluating
collaborative ﬁltering recommender systems. In Journal of ACM Transactions on Information
Systems (TOIS), pages 5–53. ACM, 2004.
[8] Justin J. Levandoski, Mohamed Sarwat, Ahmed Eldawy, and Mohamed F. Mokbel. Lars: A
location-aware recommender system. In Proceedings of the 2012 IEEE 28th International Conference on Data Engineering, pages 450–461. IEEE, 2012.
[9] Amlie Marian, Nicolas Bruno, and Luis Gravano. Evaluating top-k queries over web-accessible
databases. In Journal of ACM Transactions on Database Systems (TODS), pages 319–362. ACM,
2004.
[10] David W. McDonald and Mark S. Ackerman. Expertise recommender: a ﬂexible recommendation
system and architecture. In Proceedings of the 2000 ACM conference on Computer supported
cooperative work, pages 231–240. ACM, 2000.
[11] Raymond J. Mooney and Loriene Roy. Content-based book recommendation using learning for
text categorization. In Proceedings of the ﬁfth ACM conference on Digital libraries, pages 195–204.
ACM.
[12] Kyriakos Mouratidis, Man Lung Yiu, Dimitris Papadias, and Nikos Mamoulis. Continuous nearest
neighbor monitoring in road networks. In Proceedings of the 32nd international conference on Very
large data bases, pages 43–54. VLDB Endowment, 2006.
[13] Michael J. Pazzani. A framework for collaborative, content-based and demographic ﬁltering. In
Artiﬁcial Intelligence Review, page 393408. Springer, 2013.
[14] Paul Resnick, Neophytos Iacovou, Mitesh Suchak, and Peter Bergstrom. Grouplens:an open architecture for collaborative ﬁltering of netnews. pages 175–186.
[15] Badrul Sarwar, George Karypis, Joseph Konstan, and John Riedl. Item-based collaborative ﬁltering recommendation algorithms. In Proceedings of the 10th international conference on World
Wide Web, pages 285–295. ACM, 2001.
[16] J. Ben Schafer, Joseph Konstan, and John Riedl. Recommender systems in e-commerce. In
Proceedings of the 1st ACM conference on Electronic commerce, pages 158–166. ACM, 1999.
[17] Yuichiro Takeuchi and Masanori Sugimoto. Cityvoyager: An outdoor recommendation system
based on user location. In biquitous Intelligence and Computing, pages 625–636.
[18] Hongzhi Yin, Yizhou Sun, Bin Cui, Zhiting Hu, and Ling Chen. Lcars: A location-contentaware recommender system. In Proceedings of the 19th ACM SIGKDD international conference
on Knowledge discovery and data mining, pages 221–229. ACM, 2013.
[19] Peng Zhang, Chuan Zhou, Peng Wang, Boyron Gao, Xingquan Zhu, and Li Guo. E-tree: An
eﬃcient indexing structure for ensemble models on data streams. IEEE Transactions on Knowledge
and Data Engineering, pages 366–381, 2014.
[20] Zi-Ke Zhang, Tao Zhou, and Yi-Cheng Zhang. Toward the next generation of recommender
systems: A survey of the state-of-the-art and possible extensions. In In Journal of Computer
Science and Technology. IEEE, 2012.
[21] Vincent W. Zheng, Yu Zheng, Xing Xie, and Qiang Yang. Collaborative location and activity
recommendations with gps history data. In Proceedings of the 19th international conference on
World wide web, pages 1029–1038. ACM, 2010.

409

