Procedia Computer Science
Volume 29, 2014, Pages 1600–1609
ICCS 2014. 14th International Conference on Computational Science

Individual-Oriented Model Crowd Evacuations
Distributed Simulation
A. Gutierrez-Milla, F. Borges, R. Suppi, and E. Luque
Universitat Aut`
onoma de Barcelona, Bellaterra, Barcelona, Spain
albert.gutierrez@caos.uab.cat, francisco.borges@caos.uab.cat, remo.suppi@uab.cat,
emilio.luque@uab.cat

Abstract
Emergency plan preparation is an important problem in building design to evacuate people as
fast as possible. Simulation exercises as ﬁre drills are not a realistic situation to understand
people behaviour. In the case of crowd evacuations the complexity and uncertainty of the
systems increases. Computer simulation allows us to run crowd dynamics models and extract
information from emergency situations. Several models solve the emergency evacuation problem. Individual oriented modelling allows to give behaviour rules to the individual and simulate
interactions between them. Due to variation on the emergency situations results have to be
statistically reliable. This reliability increases the computing demand. Distributed and parallel
paradigms solve the performance problem. In the present work we present a crowd evacuations
distributed simulator. We implemented two versions of the model. One using Netlogo and
another using C with MPI. We chose a real environment to test the simulator: pavilion 2 of
Fira de Barcelona building, able to hold thousands of persons. The distributed simulator was
tested with 62,820 runs in a distributed environment with 15,000 individuals. In this work we
show how the distributed simulator has a linear speedup and scales eﬃciently.
Keywords: IoM, Distributed Simulations, MPI, Crowd Evacuations

1

Introduction

When a building is designed or when a macro festival is prepared the best conﬁguration for
the evacuation of the building has to be known. A bad conﬁguration can be critical. Crowd
evacuations represent an abnormal but potential situation where human lives are in risk to suﬀer
any harm or even, to die. Motivations of evacuations can be ﬂoods, ﬁres, terrorism, bomb attack,
gas leak, biological agents, earthquakes, etc. The aim of a good conﬁguration is to get the faster
and more secure evacuation for all the individuals. In the case of moving human crowds through
the space the crowd dynamics determine the behaviour of the individuals. Human simulations
are not reliable as the human rules used in an emergency evacuation situation are diﬀerent
from a simulation when there is no danger for the individual. Variables as panic, velocities or
1600

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.145

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

obstacles determine variance. In the speciﬁc case of crowd evacuations it becomes more complex
because the number of individuals has the order of thousands or more. How do we simulate the
behaviour of thousands of individuals in a crowd evacuation situation with statistical signiﬁcant
results? To solve these problems simulation is needed. Simulation will allow us to predict the
behaviour of the system and get information without interacting with the real system and be
able to learn and take decisions from the output of the simulation. That way the evacuation time
is known beforehand and this information can be used to take decisions in case of evacuation.
For this we need to create a model with rules extracted from the real system.
The crowd evacuations problem is solved by diﬀerent approaches. We chose individualoriented models (IoM). IoM emerged to solve problems involving populations whom behaviour is
determined by each individual behaviour. This modelling technique is used in ﬂocks, herds[13],
ﬁsh schools [15], hospital emergency systems [16], etc. It allows us to introduce rules to the
individuals. These rules will determine the behaviour of the whole system, which is unknown
at the begging. The individual rules can not give the results of the system in an analytical
way without simulation. The advantages of IoM are a more real conceptual situation where the
individual is independent and has its own properties. The motion is calculated separately for
every individual, in front of analytical models that assume the whole population as a function.
There are simulators oriented to solve evacuations as EXODUS, REGAL’s Evacuation Planning Tool, Simulation of Transient Evacuation and Pedestrian Movements or PEDSIM that are
able to run sequential simulations in order to analyse how the individuals behaves according
to the environment. NetLogo [12] is a common used modelling tool. It is useful to test and
validate a model, but when a ﬁnal tool is needed problems emerge. In the case of crowd evacuations with thousands of individuals and big space to gather this crowd NetLogo can present
limitations. Due to this restrictions a crowd evacuations simulator is proposed. High level
languages, and message passing libraries allow us to create high performance simulators that
speedup the execution time of common simulators.
When a simulation is launched, the results generated are valid if they are statistically reliable. The results of a reduced number of runs will not be reliable if we have a big standard
deviation from the mean. In order to check this, the method proposed by Diaz-Emperanza [4]
can be used to calculate the runs for normal distribution results. The number of replications
of the simulations will impact on the accuracy and reliability of the results. The number of
simulations chose in this paper will be calculated with this method.
In this work we present a crowd evacuations HPC simulator. This simulator allows to test
the evacuation time and run thousands of simulations with thousands of agents. The aim is to
provide a HPC tool to run a big number of crowd evacuations simulations to obtain statistically
reliable information of interactions in big populations. The expected results are an scalable tool
to support the decision taking process.
In section 2 we analysed the related work in crowd evacuations; in section 3 the crowd
evacuation models and the building used to test the model are described; in section 4 the number
of simulations are calculated and the simulator is explained and in section 5 the experimental
results are presented.

2

Related work

Evacuation modelling allows to simulate the behaviour of thousands of individual without
the need of testing the real environment. There have been several approaches to solve the
evacuations problem. Mathematical models, cellular automata (CA), ﬂow nets, rule based
models, experiments based on non-human animals, etc, and these methods have been already
1601

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

compared [19]. In the case of CA there is an extense literature [5] [2] [7] [11], but in the present
paper IoM is used instead of CA.
Crowd pedestrian behavior was solved in the areas of AI and computer graphics rendering.
The goal is to introduce in the agents a realistic pedestrian behaviour, drive them to the goal
and render big populations of individuals [17]. Rendering indexes are important metrics in
these researches.
In the area of HPC to solve crowd problems GPUs have been used to implement the crowd
dynamics algorithm and the rendering [1]. MPI was used in city evacuations distributing the
space and agents[10]. On the other hand there is research solving the evacuations problem to
provide knowledge [18]. These tools are normally tested with number of individuals of the order
of hundreds.
In the present work we present our simulator based on the Helbing model [8]. The 9 rules
extracted from the analysis of scenarios that determine the model will be used and not the
social force model. This simulator allows us to load an environment and run thousands of
agents, and thousands of executions in a MPI cluster. We implement a NetLogo model to test
the behaviour of our model and to check what is the performance of this tool simulating crowd
systems. This will give us more statistically reliable results.

3

Crowd evacuations model

Models allow to summarise the basic rules that determine the main behaviour of a system. Our
model is an abstraction of the model developed by Helbing [8]. Our model is able to avoid
obstacles, presents bottlenecks in emergency exits as in real emergency situations, crowd slows
down, clogging occurs close to the exits and individuals tend to have a mass behaviour. In
the design of the model we selected to discretize the space in a grid. Every individual has
an 8 connectivity neighbours. Components of the grid has a size of 40x40cm. The model
considers that this is the space needed to hold one individual. This simpliﬁcation allowed to
access directly the neighbours without iterating over all the individuals. Every individual has
exclusivity to this space and the movements are between adjacent grid positions. Because of
this every individual walks at the same velocity.

Figure 1: Flowchart of the individual logic for one simulation step
In IoM the rules of the individuals determine the ﬁnal output of the system. In the Fig.
1 can be seen the logic that determines the behaviour of every agent in our model. In every
simulation step every agent checks their 8 neighbours. Neighbours can not be always iterated
in the same order or the individuals will move only to one side of the space. The position is
checked and tested if it is free (this also means that there is no wall) and if the individual is
approaching the exit. When there is an obstacle while going in the exit direction it is avoided
until free space is reached. In the case that the individual cannot approach the exit it will not
1602

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

move and will wait. Once the individual reaches the exit it disappears assuming it is safe and
released.
The individual has an objective function determined by the selected exit. Because of this
the exit determines the movement of the individual that is trying to reach the goal. Every exit
will have a cluster of individuals associated. These will be the set of individuals with this exit
as objective. The variable that will determine the exit target is the distance. In the Fig. 2
can be seen that each individual holds a position in the grid. The simulation show how the
individuals are able to cross doors and overpass walls in order to achieve their objective.

Figure 2: Simulation of the model in NetLogo
The aim of the research is to provide a tool for the real world. A necessary approach for
the simulator is to select real buildings. We chose the building 2 of Fira de Barcelona [6].
This space receives international conferences and fairs with thousands of attendants. The event
Salo del Manga[14] is one of these events. It hosted 105.000 visitors in 2013. This attendance
has motivated the election of this space with the distribution of the mentioned event. In the
Fig. 3 can be seen the original map. We did simpliﬁcations in the map digitization involved
chairs, platform, importance of exits and the bar exit. The building was chosen for testing
purposes, but the simulator is building independent, and other spaces could be loaded to run
the simulation.

Figure 3: Map of Fira de Barcelona

1603

IoM Crowd Evacuations Distributed Simulation

4

A. Gutierrez-Milla et al.

Model Implementation

We simulated the space Fira de Barcelona with populations of 3,000, 6,000, 12,000 and 15,000
individuals. We have implemented the model in the tool NetLogo and in the simulator able to
distribute the simulation with OpenMPI in a MPI cluster.
Studies like [9] [3] are able to solve the calculation of the numbers of runs of a simulator
beforehand. In our work we use Diaz-Emperanza study [4] to calculate our number of runs.
Before we analysed the simulation execution time for 1,000 independent runs and the results
approach a normal distribution testing with chi2 and Kolmogorov-Smirnov. According to DiazEmperanza the number of simulation runs (T) needed are calculated with the Formula 1.
T =

t2α pH (1 − pH )
2

(1)
A2
Where t is a parameter determined from the density of the normal function, H is the interval
of probability, pH is probability in H, 1 − α is the level of conﬁdence and A is the accuracy. This
probability is held in the interval [0.045 0.055]. The number of runs has to be runs ≥ T . Only
1 − α values over 0.90 are reliable. In our case we chose 0.95. As the aim of this work is to get
a tool for good accurate results the A of 0.0002. Due to the interval that we are working with
our pH is 0.05. Replacing these values in the previous formula we solve and get the number of
runs.
T =

2.32 0.05(1 − 0.05)
= 62, 818.75
0.0022

Figure 4: (a) NetLogo visualisation; (b) MPI visualisation
We developed the model described in section 3 using NetLogo, a widely applied modeling
tool. We wanted to study the behaviour of the model and also analyse the response time of the
simulator. In NetLogo implementation the space is represented by a matrix. In its nomenclature
all positions of the matrix is a patch and the individuals are agents. Each agent has a unique
associated position or patch. There cannot be two agents in the same patch. As the agent move
around the map, the position is updated to the current patch. To load the map we created a
bidimensional matrix that contains the information about the patch -where each patch can be
identiﬁed as coordinates using the rows and columns of the matrix. A patch can be:
• wall : that deﬁne the boundaries of the map.
• free space: where the agent can move freely.
• exit: the aiming point for an agent in order to leave the map.
1604

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

• obstacle: speciﬁc patches where the agent cannot pass through.
The initial position of the people is generated using random coordinates inside a free space.
Every agent knows in advanced which exit should try to direct to. This information determines
the agents movement. In the Fig. 4 (a) can be seen an execution of 15,000 agents using NetLogo
visualisation as they are heading to the emergency exits. The same scenario is repeated in Fig.
(b) but using MPI visualisation.
The initial state is always generated randomly and is the variance that determines the
diﬀerence simulation time. The space is not altered. The number of agents chose for the MPI
simulation is related to the NetLogo simulation individuals chose. We developed a simulator
using C to declare the rules and OpenMPI to distribute simulation between nodes. In the Fig.
4 (b) can be seen an execution of 15,000 agents in our C-MPI simulator. The movement is
similar to the showed in the Netlogo simulation in Fig. 4 (a).

5

Experimental results

In the NetLogo model we run the simulation with 3,000 to 15,000 individuals. The simulation
times includes the random distribution of the individuals among the space and the crowd
dynamics simulation. In the Fig. 5 can be seen the response time that increase linearly
with the increment of number of individuals. The model was developed using C with the full
optimisation parameter (O3) and MPI. The simulator was executed in the cluster described in
Table 1.

Cluster
32 IBM x3550 Nodes

Table 1: Cluster characteristics.
Characteristics
2 x Dual-Core Intel(R) Xeon(R) CPU 5160 @ 3GHz 4MB L2 (2x2)
12 GB Fully Buﬀered DIMM 667 MHz
Hot-swap SAS Controller 160GB SATA Disk
Integrated dual Gigabit Ethernet
gcc 4.4.7
OpenMPI 1.6.4





174

88


55

	



129




26


















Figure 5: NetLogo execution times(s)
1605

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

We run the NetLogo simulator in a Intel Core i5-2400 CPU 3.10GHz 6MB L2 (2x2). In the
Fig. 5 can be seen the execution times of the NetLogo model. These are the means of 100 runs,
where the mean execution time did not have signiﬁcant variance. The execution time includes
several steps of the simulation. First the random distribution of the agents and is executed until
the moment when all the individuals have reached the exit and are safe. It can be seen how
the times increase as the number of agents increase linearly as the number of agents increase
linearly. This shows how the the simulation time increases as the number of individuals increase
in NetLogo.
		
	



	
	





















			


Figure 6: Distributed simulator execution times
In the Fig. 6 can be seen the execution times of this simulator for 4, 8, 12 and 16 MPI
process for 62,820 runs, which is a greater number than the simulations run that were calculated.
It can be seen how the times decrease signiﬁcantly due to the increase of nodes thanks to the
MPI distribution of the executions.
	

	
15.



82


11.



83


7.8



2



3.9



3

	

	


















Figure 7: Speedup
We executed the serial version for 62,820 simulations and compared the result time with the
parallel versions. In the graphics seen in the Fig. 7 the speedup showed becomes linear. As the
1606

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

eﬃciency is close to 1 it can be said that the algorithm scales and is eﬃcient. The diﬀerences in
the scalability (Fig. 8) remains in the variances of the simulations with a stochastic component.



0.9

86

88

0.9

79

79

0.9

0.9









	












Figure 8: Scalability

Crowd evacuations simulators aim to provide knowledge about the mass behaviour. In the
Fig 9 the results showed how about the 80 ticks clogging occurs and the people slows down.
In the tick 200 the amount of people evacuated per time unit decreases and the evacuation
becomes worst.









	


















         



Figure 9: Evacuated individuals and individuals moved per time

1607

IoM Crowd Evacuations Distributed Simulation

6

A. Gutierrez-Milla et al.

Conclusions and future work

6.1

Conclusions

Emergency evacuations are important situations were human lives are in risk. The behaviour
of the individuals is unknown and it can vary widely. This gives us a lot of combinations and
the need of get knowledge for every building and event. Because this we proposed a model and
a simulator. We have worked with IoM. We digitised the building Fira de Barcelona as a real
scenario for the simulation. It showed big computational times for a single execution. Because
the computational needs we developed a C model that was distributed using MPI with 3,000 15,000 and showed how all the individuals reached the emergency exit. The main conclusions
from the work are:
• A crowd evacuations model based on was presented, based on Helbing’s evacuation model.
• Netlogo has been used to implement the model. The simulations has been tested with
3,000, 6,000, 12,000, 9,000 and 15,000 individuals. For 15,000 individuals the executions
time was 174 seconds for one simulation.
• We used Diaz-Emperanza method to calculate the number of simulations to have statistically signiﬁcant results for crowd evacuations.
• The model implemented in the Netlogo platform was implemented in C distributing the
simulations with MPI. Both models had the same behaviour.
• The simulator scales eﬃciently approaching a linear eﬃciency.

6.2

Future work

The main goals for our future work are:
• Explore new models and individuals characteristics, their behaviour, implement them and
compare them with the current work.
• Digitalize new real spaces able to hold crowd events and test the simulator with bigger
number of agents.
• Explore new validaton methods for our simulation and their viability.
• Check the impact of the presented work in the decision taking process.

Acknowledgements
This research has been supported by the MICINN Spain under contract TIN2007-64974 and
the MINECO (MICINN) Spain under contract TIN2011-24384.
All trademarks, material, images and information used in this work are propriety of their
owners and here is used with academic purposes.
1608

IoM Crowd Evacuations Distributed Simulation

A. Gutierrez-Milla et al.

References
[1] Avi Bleiweiss. Multi agent navigation on the gpu. White paper, GDC, 9, 2008.
[2] Victor J. Blue and Jeﬀrey L. Adler. Cellular automata microsimulation for modeling bi-directional
pedestrian walkways. Transportation Research Part B: Methodological, 35(3), 2001.
[3] Christos G. Cassandras and Stphane Lafortune. Introduction to Discrete Event Systems, volume
2283. Kluwer Academic Publishers, 1999.
[4] Ignacio D´ıaz-Emparanza. Selecci´
on del n´
umero de replicaciones en un estudio de simulaci´
on.
Estad´ıstica espa˜
nola, 37(140), 1995.
[5] Jan Dijkstra, Harry JP Timmermans, and A. J. Jessurun. A multi-agent cellular automata system
for visualising simulated pedestrian activity. Theory and Practical Issues on Cellular Automata,
2001.
[6] Fira de Barcelona authors. Fira de barcelona. https://www.firabarcelona.com/, last viewed
January 2014.
[7] Christian Gloor, Pascal Stucki, and Kai Nagel. Hybrid techniques for pedestrian simulations.
Cellular Automata, 2004.
[8] Dirk Helbing, Ill´es Farkas, and Tam´
as Vicsek. Simulating dynamical features of escape panic.
Nature, 407(6803), 2000.
[9] S.G. Henderson and B.L Nelson. Simulation. Handbooks in operations research and managment
science, volume 13. Elsevier. North- Holland, 2006.
[10] Hiroyuki Kobayashi, Yutaka Ishimoto, Masaki Fujioka, and Kenichi Ishibashi. A multi-agent
evacuation simulator to design safe cities for high quality of life with computer clustering. SICE
Annual Conference, 2007.
[11] Masakuni Muramatsu, Tunemasa Irie, and Takashi Nagatani. Jamming transition in pedestrian
counter ﬂow. Physica A: Statistical Mechanics and its Applications, 267(3), 1999.
[12] NetLogo Authors. Netlogo. http://ccl.northwestern.edu/netlogo/, last viewed January 2014,
1999–2014.
[13] Craig W. Reynolds. Flocks, herds and schools: A distributed behavioral model. ACM SIGGRAPH
Computer Graphics, 21(4), 1987.
[14] Salo del manga authors. Salo del manga. http://manga-xix.ficomic.com/, last viewed January
2014.
[15] Roberto Solar, Remo Suppi, and Emilio Luque. High performance distributed cluster-based
individual-oriented ﬁsh school simulation. Procedia Computer Science, 4, 2011.
[16] Manel Taboada, Eduardo Cabrera, Ma Luisa Iglesias, Francisco Epelde, and Emilio Luque. An
agent-based decision support system for hospitals emergency departments. Procedia Computer
Science, 4, 2011.
[17] Adrien Treuille, Seth Cooper, and Zoran Popovi´c. Continuum crowds. ACM Transactions on
Graphic, 25(3), 2006.
[18] Jason Tsai, Natalie Fridman, Emma Bowring, Matthew Brown, Shira Epstein, Gal Kaminka, Stacy
Marsella, Andrew Ogden, Inbal Rika, Ankur Sheel, Matthew E. Taylor, XuezhiWang, Avishay
Zilka, and Milind Tambe. Escapes - evacuation simulation with children, authorities, parents,
emotions, and social comparison. The 10th International Conference on Autonomous Agents and
Multiagent Systems, 2, 2011.
[19] Zheng Xiaoping, Zhong Tingkuan, and Liu Mengting. Modeling crowd evacuation of a building
based on seven methodological approaches. Building and Environment, 44(3), 2009.

1609

