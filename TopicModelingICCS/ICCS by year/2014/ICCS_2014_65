Procedia Computer Science
Volume 29, 2014, Pages 2090–2101
ICCS 2014. 14th International Conference on Computational Science

Low-dimensional visualization of experts’ preferences in
urgent group decision making under uncertainty∗
Iv´an Palomares1 and Luis Mart´ınez1
University of Ja´en, Ja´en, Spain
{ivanp,martin}@ujaen.es

Abstract
Urgent or critical situations, such as natural disasters, often require that stakeholders make crucial decisions, by analyzing the information provided by a group of experts about the diﬀerent
elements of interest in these contexts, with the aid of decision support tools. This framework
can be modeled as a Group Decision Making problem deﬁned under uncertain environments,
which are characterized by the imprecision and vagueness of information about the problem
tackled. One of the main aspects to consider when solving Group Decision Making problems in
urgent situations, is the fact that decisions should be taken under the highest level of possible
agreement amongst all participating experts, in order to avoid serious mistakes or undesired
responsibilities by some experts. Due to the complexity of urgent situations and the great
amount of information about experts’ preferences that must be managed by stakeholders, it
would be diﬃcult to reach consensus in the group within a reasonable time period, since it
requires an adequate analysis of experts’ preferences. Such an analysis might become a difﬁcult task in these contexts, due to the inherent complexity, time pressure, etc. In order to
help making consensual decisions in urgent situations and urgent computing environments, we
propose a visual decision support tool for Group Decision Making problems deﬁned under uncertainty. Such a tool provides stakeholders with a two-dimensional visual representation of
experts’ preferences based on the similarities between them, and it enables the analysis of easily interpretable information about the state of the decision problem, as well as the detection
of agreement/disagreement positions between experts. The tool is based on Self-Organizing
Maps, an unsupervised learning technique aimed at the visual projection of information related
to preferences of experts into a low-dimensional space.
Keywords:

1

Introduction

Unusual emergency events, such as natural disasters or mass traﬃc accidents, often bring devastating
eﬀects when they occur. Emergency planning and management are essential tasks to be carried out,
∗ This

2090

research was partially funded by the Research Project TIN-2012-31263 and ERDF

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.193

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

in order to minimize such eﬀects in this kind of situations [32]. These tasks usually consist in decision
processes [6], in which a number of stakeholders must make crucial decisions, by analyzing some information provided by a group of experts regarding the possible actions to perform in response to the
event occurred. The existing computer-based decision support systems and tools are often utilized in
these contexts to support stakeholders in decision making processes [7, 31].
Many real-life decision problems - including those taking place in urgent situations - are characterized not only by the participation of multiple experts with diﬀerent attitudes and level of knowledge
who must make a common decision, but also by the existence of uncertainty due to the imprecision
and vagueness of information about the problem tackled [16]. These frameworks can be modeled as
Group Decision Making (GDM) problems deﬁned under uncertain environments [13]. Several works
have been proposed by diﬀerent authors to deal with this type of GDM problems [4, 11, 22].
One of the main aspects to consider when solving GDM problems in urgent situations, is the fact
that decisions should be taken under the highest level of possible agreement amongst all participating
experts, in order to make higher-quality decisions, as well as avoiding serious mistakes or undesired
responsibilities by some experts [5, 28]. To do this, diﬀerent consensus-based models and approaches
aimed at achieving a high level of agreement in GDM problems under uncertainty, have been proposed
in the literature [13, 22, 24]. Based on such consensus approaches, a number of Group Decision
Support Systems (GDSS) have been developed to assist groups in the resolution of GDM problems
under consensus [14, 23, 35].
Despite the progress made by the existing models and GDSS to support groups in decision making
contexts, urgent situations normally present an inherently higher complexity and some constraints that
would not be present in other types of contexts, e.g. time constraints, highly uncertain information,
etc [6]. Such constraints make sometimes necessary the use of decision support tools that provide
stakeholders with an insight on the current state of the problem to make quick decisions. These
decisions would be more time-consuming with the aid of current GDSS only, since most of them are
based on providing textual or numerical information, whose analysis is often not immediate.
Moreover, when a considerable group of experts must take part in the decision process, the great
amount of information about their individual preferences that must be managed by stakeholders, makes
more diﬃcult to reach consensus in the group within a reasonable time period [20]. In large groups,
the existence of experts with drastically diﬀerent opinions to the rest of the group or experts who do
not cooperate to reach an agreement, is also more frequent [21]. Therefore, it is necessary to develop
appropriate decision support tools that facilitate an adequate analysis of experts’ preferences in a
group, simplifying and enabling eﬃcient decision making processes under the inherent complexity, time
pressure and other features normally present in urgent contexts.
In order to help making group decisions in urgent situations and urgent computing environments
with diﬀerent nature, we propose a visual decision support tool for GDM problems deﬁned under
uncertainty. Such a tool provides stakeholders with a two-dimensional visual representation of experts’
preferences based on the similarities between them, and it enables the analysis of easily interpretable
information about the state of the decision problem and the overall level of agreement in the group, as
well as the detection of agreement/disagreement positions between experts. The tool is proposed as a
complementary resource for existing GDSS based on numerical or textual information, and it is based
on Self-Organizing Maps [15], an unsupervised learning technique widely utilized for data visualization
purposes, which facilitates the visual projection of information related to preferences of experts into a
low-dimensional space.
The remaining of this contribution is set out as follows: Section 2 reviews some basic concepts
about GDM problems under uncertainty and consensus reaching. Section 3 presents the visual decision
support tool, illustrating its usefulness in diﬀerent kinds of urgent situations, and shows an example of
its application to a emergency context. Finally, Section 4 draws some concluding remarks.

2091

The Class File

2

Mokhov, Sutcliﬀe, Voronkov and Gough

Preliminaries

In this section, some basic concepts about GDM problems under uncertainty and Consensus Reaching
Processes are revised, since they are the basis of our proposal to support decision processes in urgent
situations.

2.1

GDM problems under Uncertainty

GDM problems, where a group of experts with diﬀerent viewpoints must make a common decision
together, are frequently utilized in many complex real-life situations [4, 16]. Formally, a GDM problem
can be deﬁned as a decision situation characterized by the participation of a group of experts, having
each one their own knowledge and attitudes, in a decision problem consisting of a set of alternatives
or possible solutions to the problem [13, 16]. Thus, the following elements are found in any GDM
problem:
• A set X = {x1 , . . . , xn }, (n ≥ 2) of alternatives.
• A set E = {e1 , . . . , em }, (m ≥ 2) of experts, who express their opinions or preferences on the
alternatives in X.
Each expert ei ∈ E, i ∈ {1, . . . , m}, expresses his/her preferences over alternatives in X, by means of a
preference structure. A commonly utilized preference structure in GDM is the preference relation [19].
Given X ﬁnite, a preference relation Pi associated to ei is given by a n × n matrix,
⎛

−
⎜
Pi = ⎝ ...
pn1
i

...
..
.
...

⎞
p1n
i
.. ⎟
. ⎠
−

with each element plk
i being an assessment, representing the degree to which xl is better than xk ,
l, k ∈ {1, . . . , n}, l = k, according to ei . Other preference structures that have been considered in
multiple GDM approaches are utility vectors [4] and preference orderings [29].
GDM problems are usually deﬁned in environments of uncertainty, characterized by the existence
of vague and imprecise information [1]. Fuzzy modeling and linguistic information have been widely
utilized in such situations [33, 34], in which experts must express their preferences over alternatives by
means of information domains that allow them to deal with such uncertainty. Some of these information
domains are [11]:
• Numerical [19]: Assessments are represented as numerical values belonging to a speciﬁc scale,
e.g. values in the [0,1] interval.
• Interval-valued [8]: Assessments are represented as intervals, I([0, 1]).
• Linguistic [25]: Assessments are represented as linguistic terms su ∈ S, u ∈ {0, . . . , g}, belonging
to a linguistic term set S = {s0 , . . . , sg } with granularity g.
The solution to a GDM problem can be obtained by applying either a direct approach or an indirect
approach. In a direct approach, the solution is directly obtained from experts’ preferences, whereas in
an indirect approach, a collective opinion is computed before determining the solution alternative/s [9].
Regardless of the approach considered, the selection process to solve GDM problems consists of two
phases (see Figure 1) [26]: (i) an aggregation phase, where individual preferences are combined, and
(ii) an exploitation phase, where an alternative or subset of alternatives are obtained as the solution to
the problem.

2092

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

Figure 1: Classical selection process for the resolution of GDM problems

2.2

Consensus Reaching Processes

The classical alternatives selection process reviewed above does not regard the existing level of agreement amongst experts before making the decision [5]. As a result, it may occur that some individuals
do not accept the solution chosen, because they might consider that their opinions have not been taken
into account suﬃciently [28]. A highly accepted solution by the whole group is an important aspect
to consider in many GDM problem. For this reason, an additional phase called Consensus Reaching
Process (CRP) was introduced in the resolution process for GDM problems (see Figure 2), in order to
achieve a high degree of agreement amongst experts before making a decision. In a CRP, experts discuss and modify their preferences, bringing them closer to each other and towards a collective opinions
which is viewed as satisfactory by all of them. Consensus has attained a great importance to reach
more appreciated solutions in GDM problems, and it has become a major research topic in the last
decades [3, 10, 14, 24].

	








	








Figure 2: Resolution scheme of consensus-based GDM problems
The process to reach consensus is a dynamic and iterative discussion process, frequently coordinated
by a human ﬁgure known as moderator, who is responsible for supervising and guiding experts over
the course of the CRP [5, 17, 28]. A general scheme of CRPs is shown Figure 3. Its phases are brieﬂy
described below:
(1) Consensus measurement: Preferences of all experts over X, Pi , i ∈ {1, . . . , m}, are gathered to
compute the current degree of consensus in the group by means of a consensus measure, which
determines how close the opinions of experts are from unanimous agreement.
(2) Consensus control : The consensus degree computed in the previous phase is checked to decide
whether it is enough or not. If consensus is enough, the group moves on to the selection process.

2093

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough



	



Figure 3: General consensus reaching scheme in GDM
Otherwise, it is necessary to carry out another round of discussion. Two parameters, whose
values are ﬁxed a priori by the group, could be utilized in this phase:
• A consensus threshold μ, whose value indicates the minimum level of agreement required
amongst members in the group. Many consensus models compute the consensus degree as
a value in the unit interval [14, 18, 24], being a value of 1 interpreted as full and unanimous
agreement, therefore μ ∈ [0, 1] in such cases.
• A maximum number of discussion rounds allowed, M axround ∈ N. If the number of rounds
carried out exceeds this value, then the CRP ends without having reached consensus.
(3) Consensus Progress: If the current degree of consensus is not enough, a procedure is applied to
increase the level of agreement in the following round of the CRP. Such a procedure has been
traditionally based on providing experts with some feedback, which indicates them how to modify
their preferences, but some approaches that conduct this process automatically have been also
proposed:
(a) Feedback Generation: Many existing consensus models incorporate feedback mechanisms
based on this process [12, 18], in which the moderator identiﬁes the farthest experts’
assessments from consensus in the current round. He/she then provides experts with some
advices to modify the value of assessments previously identiﬁed, in order to bring them
closer to the rest of the group and increase the consensus degree in the following round.
(b) Automatic Updates: Some consensus models do not incorporate a feedback mechanism, and
instead they implement approaches that update information (e.g. assessments of experts)
to increase consensus in the group automatically [2, 23]. Therefore, once experts provide
their initial preferences at the beginning of the CRP, they do not need to supervise them
at each round. The main advantage of implementing consensus models based on this
approach is their low time cost due to the full automation of the CRP, thus making them
more adequate in GDM problems deﬁned in time-constrained urgent situations. On the
other hand, their main weakness is the total loss of experts’ sovereignty to decide whether
they accept changes suggested on their assessments or not.

3

Visual Decision Support Tool for GDM in Urgent Situations

In this section, we present a visual decision support tool to facilitate the resolution of GDM problems
under uncertainty that take place in urgent situations. Such a tool aims at providing stakeholders
with easily interpretable knowledge problem state, thus giving them additional support under certain
circumstances present in emergency contexts:

2094

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

• Highly time-constrained events that require making group decisions as quickly as possible, without investing a substantial amount of time in analyzing the non-visual information managed by
existing GDSS.
• The presence of experts or subgroups of them with conﬂicting opinions within a large group, and
the diﬃculty to reach consensus in such a case.
• The possible existence of experts who do not cooperate with the rest of the group to reach an
agreement [21], and the necessity of detecting them visually to avoid delays in reaching consensus.
The proposed tool attempts to monitor these features both in classical GDM problems and in CRPs,
in order to analyze the positions of experts’ preferences with respect to the group based on their
preferences, and it is based on Self-Organizing Maps (SOMs) [15], one of the most utilized techniques
to create low-dimensional visual projections of high-dimensional data sets - e.g. preferences of a group
of experts over a set of alternatives - based on the closeness degree between data objects.
The proposal description is divided into three parts:
• An overview of the decision support tool architecture and technologies utilized.
• A description of the main features of the tool regarding its use in GDM problems taking place
in urgent contexts.
• An example of its application to a speciﬁc urgent scenario.

3.1

Architecture of the Decision Support Tool
	




  

	

	,+%



	
	
%	&
	
'





	

%	

 ! "

 


#
$

(	
#&$
%
)&
	



#
*	+'






Figure 4: Architecture of the tool
Figure 4 shows the architecture of the proposed tool. It has been developed as a local application
that receives a set of experts’ preferences associated to a GDM problem and outputs a two-dimensional
graphical representation of such preferences. As illustrated in the ﬁgure, the tool can be either used
directly used by decision groups who provide their preferences, or by integrating it with existing GDSS
to provide a more interpretable representation of the information provided by them. The following
technologies have been considered for its development:
• Java: Utilized to read input data, i.e. experts’ preferences and generate a preference data-set
upon them.

2095

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

• MATLAB : Utlized to create a SOM-based two-dimensional projection from a preference data-set,
by applying a SOM algorithm. Further detail on SOM techniques and algorithms can be found
in [15].




 !

)*
&'''(


"
#

	
	


$#!%
!
##

#
	+,

-.

/	
	0
/	
/	
		


-.


Figure 5: Scheme followed by the tool to visualize group preferences
A scheme of the tool operation is shown in Figure 5. The procedure followed to generate a graphical
representation about the status of the GDM problem consists of three phases:
(1) Gathering information about the GDM problem: Preferences of all experts in the group, Pi , i ∈
{1, . . . , m}, are gathered in this phase. In many GDM problems, especially those requiring a high
level of consensus, the collective preference of the group Pc should be computed (by aggregating
individual preferences) as gathered as well, with the aim of visualizing how close experts opinions
are from such a collective preference.
The proposed tool deals with preferences expressed as fuzzy preference relations (i.e. preference
relations in which assessments plk
i ∈ [0, 1]), to generate a data-set from them. Nevertheless,
diﬀerent preference structures can be also managed by transforming them into fuzzy preference
relations [12]. Preferences expressed under diﬀerent information domains (e.g. intervals or linguistic values), can be also transformed into numerical values in [0,1] by applying the adequate
transformation functions [11]. These functionalities are implemented in the Java module of the
tool.
(2) Generating preference data-set: Once information to be visualized has been gathered and expressed as fuzzy preference relations, in this phase a preference data-set ﬁle with extension .data
is generated upon them. As occurred with the previous phase, this process is also carried out
by the Java module. In a preference data-set, each row contains the assessments plk
i , l = k,
corresponding to a single fuzzy preference relation Pi . Therefore, for a GDM problem with
n alternatives, the dimension of each data object obtained from preferences must be equal to
n(n − 1).
A particularly interesting aspect of the visualization tool is the fact that each data sample
can be optionally tagged by placing an alphanumerical tag at the end of the corresponding
row in the data-set, with informative purposes. Tagging provides additional information about
a speciﬁc preference relation (for example, the name, identiﬁer or role of the corresponding
expert who provided it). Tags are visualized together with their corresponding preference in
the two-dimensional representation of the GDM problem state. Some examples that illustrate

2096

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

the usefulness of tagging preferences in urgent GDM problems will be presented in the following
subsection.
(3) Visualizing the problem status: The preference data-set is used as an input by the MATLAB
module of the proposed tool, to apply a SOM-based technique that generates a two-dimensional
graphical projection of data contained in it. Such a projection may be utilized by one or several
stakeholders for analyzing aspects of interest about the GDM problem and receiving additional
support in emergency situations (see Section 3.2).
A SOM algorithm [15] must be invoked to create the two-dimensional map on which data will
be visualized. To do so, a third-party MATLAB library so-called SOM Toolbox1 [30], has been
utilized to create and manage SOMs. Once constructed the map, each preference in the data-set
is projected into it, so that similar data objects are projected into closer positions to each other
in the map.
As previously stated, tagging data might be useful for several visualization purposes, e.g. viewing
the collective preference of the group, by including and tagging it in the preference data-set.

3.2

Use of the Tool in Diﬀerent Urgent Scenarios

Once the architecture and operation scheme of the visual decision support tool have been presented,
here we show some guidelines regarding its use to facilitate the resolution of GDM problems in several
types of urgent scenarios with diﬀerent degrees of time-constraint.
• Problems that require highly accepted decisions: Response to emergency events is usually the
result of a collaborative eﬀort amongst a number of experts with diﬀerent roles and belonging
to diverse entities, hence it is essential to determine the existing level of agreement between
experts’ preferences, which should be as high as possible. Consensus models implemented by
existing GDSS [14, 23, 22, 35] can be used to aid groups reaching consensus, by applying a CRP.
The choice between an automatic or a feedback-based consensus model (see Section 2.2), might
be subject to the level of urgency present at each particular problem, e.g. in emergencies in
which decision must be made as soon possible, it would be more appropriate to use automatic
models. In either case, the proposed visualization tool can be a valuable aid for stakeholders to
analyze some aspects of interest throughout a CRP:
(a) It can be iteratively used to visualize the state of the GDM problem at each consensus
round: visualizing the evolution of experts’ preferences across the time may provide a
better insight on the overall performance of the CRP and the foresight of the problem
state in upcoming discussion rounds.
(b) In large groups, when consensus is diﬃcult to reach due to highly conﬂicting opinions
between experts, analyzing numerical or textual information their preferences to identify
conﬂicting opinions can be a complex task. A two-dimensional visual representation of
preferences can provide a visual insight on conﬂicting opinions in these cases. Stakeholders
can identify the experts associated with such opinions by tagging preferences, e.g. by
means of a numerical identiﬁers (see Figure 6).
(3) Experts may adopt diﬀerent behaviors in a CRP, regarding their willingness to modify their
initial opinions and bring them closer to the collective opinion. Coalitions of experts with
similar interests might sometimes try to move their preferences strategically to deviate
the collective opinion in their favor [27]. If the necessary mechanisms to identify such
behaviors [21] are implemented in a GDSS, then it is possible to tag experts involved in
such behaviors to facilitate their visual detection.

1 http://www.cis.hut.ﬁ/somtoolbox/

2097

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

Figure 6: Visualization of tagged preferences: P indicates the position of the collective preference and 1 − 12 represent experts’ preferences.
In the cases that consensus is not reached after a number of rounds, the decision group would
prefer to adopt a diﬀerent strategy to solve the GDM problem (as described below), in order not
to invest a substantial amount of time in making a decision.
• Highly time-constrained problems: Some critical situations, e.g. those in which lives may be at
stake [6], require making highly time-constrained decisions, such that CRPs can not be applied.
In such cases, the proposed tool would be used to gather experts’ preferences and provide their
visual representation to stakeholders immediately, so that they decide the action to be taken, for
instance making the decision based on the preferences of an expert who represents a majority
opinion in the group (see e9 in Figure 7).

Figure 7: Selecting an expert preference as the solution to the GDM problem in highlyconstrained scenarios.

2098

The Class File

3.3

Mokhov, Sutcliﬀe, Voronkov and Gough

Application Example

Finally, an example of application of the tool is presented to show its usefulness in a real-life urgent
GDM problem.
The GDM problem is formulated as follows: due to an overnight snowfall, four towns situated
similarly close to the city of Ja´en, X = {x1 , x2 , x3 , x4 } ended up isolated. Such phenomena are
extremely uncommon in this area, therefore only one snowplow is available and a county panel formed
by 45 members E = {e1 , . . . , e45 }, must jointly decide in which order should each town be helped.
Since there were no human lives at stake, time-constrains were low enough to consider making a
decision under consensus. Therefore the panel members used a GDSS that implements a feedbackbased consensus model [22], to provide their preferences and modify them at each consensus round.
This consensus model allows expert to provide their preferences by means of either numerical, intervalvalued or linguistic preference relations [11], depending on the level of knowledge and uncertainty they
present about the problem. The visualization tool has been integrated with such a GDSS to gather
experts preferences and the collective preference obtained as each consensus round and show the existing
agreement/disagreement positions graphically.

Figure 8: Overall state of the GDM problem at three consecutive consensus rounds.
Figure 8 shows experts’ preferences and their closeness to the collective preference (obtained by
applying an arithmetic mean operator) at three consecutive discussion rounds. Based on the visual
representation of preferences, the stakeholder could easily notice the existence of several subgroups
with very similar opinions within each one. Additionally, the eﬀorts made by the group to reach
consensus were not enough after these rounds, since their opinions did not move signiﬁcantly towards
P . Depending on the level or urgency and the context of the problem, the stakeholder could perform
the following possible actions based on visual information received:
• Notify group members about the need for cooperating to achieve an agreement and encourage
them to apply more substantial changes based on the feedback received by means of the consensus
model utilized.
• Consider a majority group only (see green rectangle at the right side of the third plot) to reach
consensus more easily, excluding the opinions of the rest of expert in the group.
• In the case of having injured citizens in the four towns, consider making a quick decision, based
on a single expert’s opinion from a majority position (as previously shown in Figure 7).

4

Concluding Remarks

In this contribution, we have presented a visual decision support tool, based on Self-Organizing Maps,
for Group Decision Making problems deﬁned under uncertainty. Such a tool provides a two-dimensional
visual representation of experts’ preferences thus facilitating the analysis of information and obtaining
useful knowledge about the state of the decision problem or the level of consensus in the group. An

2099

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

application example has been presented to show the usefulness of the tool as a visual complement for
existing Group Decision Support System, in real-life group decision problems that take place in urgent
situations.

References
[1] R.E. Bellman and L.A. Zadeh. Decision-making in a fuzzy environment. Management Science,
17(4):141–164, 1970.
[2] D. Ben-Arieh and Z. Chen. Linguistic labels aggregation and consensus measure for automatic
decision-making using group recommendations. IEEE T. Sys. Man Cyb. A, 36 (1)(1):558–568,
2006.
[3] G. Bordogna, M. Fedrizzi, and G. Pasi. A linguistic modeling of consensus in group decision
making based on OWA operators. IEEE Transactions on Systems, Man and Cybernetics, Part A:
Systems and Humans, 27 (1)(1):126–133, 1997.
[4] N. Bryson. Group decision-making and the analytic hierarchy process. exploring the consensusrelevant information content. Computers and Operations Research, 23(1):27–35, 1996.
[5] C.T.L. Butler and A. Rothstein. On Conﬂict and Consensus: A Handbook on Formal Consensus
Decision Making. Takoma Park, 2006.
[6] J. Cosgrave. Decision making in emergencies. Disaster Prevention and Management, 5(4):28–35,
1996.
[7] M.J. Druzdzel and R.R. Flynn. Decision support systems. In A. Kent (Ed.): Encyclopedia of
Library and Information Science. 2nd Edition, 2002.
[8] C. Fu and S.L. Yang. An evidential reasoning based consensus model for multiple attribute group
decision analysis problems with interval-valued group consensus requirements. European Journal
of Operational Research, 223(1):167–176, 2012.
[9] F. Herrera, E. Herrera-Viedma, and J. Verdegay. A sequential selection process in group decision
making with linguistic assessments. Information Sciences, 85(1995):223–239, 1995.
[10] F. Herrera, E. Herrera-Viedma, and J. Verdegay. A model of consensus in group decision making
under linguistic assessments. Fuzzy Sets and Systems, 78(1):73–87, 1996.
[11] F. Herrera, L. Mart´ınez, and P.J. S´
anchez. Managing non-homogeneous information in group
decision making. European Journal of Operational Research, 166(1):115–132, 2005.
[12] E. Herrera-Viedma, F. Herrera, and F. Chiclana. A consensus model for multiperson decision
making with diﬀerent preference structures. IEEE Transactions on Systems, Man and Cybernetics,
Part A: Systems and Humans, 32(3):394–402, 2002.
[13] J. Kacprzyk. Group decision making with a fuzzy linguistic majority. Fuzzy Sets and Systems,
18(2):105–118, 1986.
[14] J. Kacprzyk and S. Zadrozny. Soft computing and web intelligence for supporting consensus
reaching. Soft Computing, 14(8):833–846, 2010.
[15] T. Kohonen. Self-organizing maps. Heidelberg: Springer, 1995.
[16] J. Lu, G. Zhang, D. Ruan, and F. Wu. Multi-Objective Group Decision Making. Imperial College
Press, 2006.
[17] L. Mart´ınez and J. Montero. Challenges for improving consensus reaching process in collective
decisions. New Mathematics and Natural Computation, 3(2):203–217, 2007.
[18] F. Mata, L. Mart´ınez, and E. Herrera-Viedma. An adaptive consensus support model for group
decision-making problems in a multigranular fuzzy linguistic context. IEEE Transactions on Fuzzy
Systems, 17(2):279–290, 2009.
[19] S.A. Orlovsky. Decision-making with a fuzzy preference relation. Fuzzy Set Syst., 1(3):155–167,
July 1978.

2100

The Class File

Mokhov, Sutcliﬀe, Voronkov and Gough

[20] I. Palomares and L. Mart´ınez. A semi-supervised multi-agent system model to support consensus
reaching processes. IEEE Transactions on Fuzzy Systems, page Inpress, 2013.
[21] I. Palomares, L. Mart´ınez, and F. Herrera. A consensus model to detect and manage noncooperative behaviors in large-scale group decision making. IEEE Transactions on Fuzzy Systems,
Inpress, DOI: 10.1109/TFUZZ.2013.2262769, 2014.
[22] I. Palomares, R.M. Rodr´ıguez, and L. Mart´ınez. An attitude-driven web consensus support system
for heterogeneous group decision making. Expert Systems with Applications, 40(1):139–149, 2013.
[23] I. Palomares, P. S´
anchez, F. Quesada, F. Mata, and L. Mart´ınez. COMAS: A Multi-agent System
for Performing Consensus Processes, in Abraham, Ajith; et al. (Eds.) International Symposium
on Distributed Computing and Artiﬁcial Intelligence. Advances in Intelligent and Soft Computing,
volume 91, pages Springer, 125–132. 2011.
[24] R.O. Parreiras, P. Ekel, J.S.C. Martini, and R.M. Palhares. A ﬂexible consensus scheme for multicriteria group decision making under linguistic assessments. Information Sciences, 180(7):1075–
1089, 2010.
[25] R.M. Rodr´ıguez and L. Mart´ınez. An analysis of symbolic linguistic computing models in decision
making. International Journal of General Systems, 42(1):121–136, 2013.
[26] M. Roubens. Fuzzy sets and decision analysis. Fuzzy Sets and Systems, 90(2):199–206, 1997.
[27] R.R.Yager. Penalizing strategic preference manipulation in multi-agent decision making. IEEE
Transactions on Fuzzy Systems, 9(3):393–403, 2001.
[28] S. Saint and J. R. Lawson. Rules for Reaching Consensus. A Modern Approach to Decision Making.
Jossey-Bass, 1994.
[29] T. Tanino. Fuzzy preference orderings in group decision making. Fuzzy Sets and Systems,
12(2):117–131, 1984.
[30] J. Vesanto, J. Himberg, E. Alhoniemi, and J. Parhankangas. SOM toolbox for MATLAB 5.
Technical Report, Helsinki University of Technology. http://www.cis.hut.ﬁ/projects/somtoolbox/,
2000.
[31] T. Wachowicz. Decision support in software supported negotiations. Journal of Business Economics and Management, 11(4):576–597, 2010.
[32] L. Yu and K.-K. Lai. A distance-based group decision making methodology for multi-person
multi-criteria emergency decision support. Decision Support Systems, 51:307–315, 2011.
[33] L.A. Zadeh. Fuzzy sets. Information and Control, 8:338–353, 1965.
[34] L.A. Zadeh. Fuzzy logic equals computing with words. IEEE Transactions on Fuzzy Systems, 4
(2)(2):103–111, 1996.
[35] S. Zadrozny and J. Kacprzyk. An Internet-based group decision and consensus reaching support
system, in Applied Decision Support with Soft Computing (Studies in Fuzziness and Soft Computing) 124. pp. 263-275, Springer, 2003.

2101

