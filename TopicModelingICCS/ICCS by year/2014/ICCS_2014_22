Procedia Computer Science
Volume 29, 2014, Pages 322–331
ICCS 2014. 14th International Conference on Computational Science

Discrete modeling and simulation
of business processes using event logs
Ivan Khodyrev1 and Svetlana Popova2
1

2

ITMO University, Saint-Petersburg, Russia.
Saint-Petersburg State University, Saint-Petersburg, Russia.
kivan@vismart.biz, spbu@bk.ru

Abstract
An approach to business process modelling for short term KPI pred iction, based on event logs and
values of environment variables , is proposed. Ready-for-simu lation process model is built semiautomatically, expert only inputs desired environ ment variab les, wh ich are used as features during the
learning process. Process workflo w is extracted as a Petri Net model using a combination of process
mining algorith ms. Dependencies between features and process variables are formalized using
decision and regression trees techniques. Experiments were conducted to predict KPIs of real
companies.
Keywords: Business process simulation, Petri nets, process mining, data mining

1 Introduction
1.1 Business process simulation overview
Co mputer modelling of business processes has a long story. Mass usage of modelling and
simu lation started from the emerge of SIM ULA, an Algo l-based simulat ion language, in mid 60’s
(Dahl & Nygaard, 1966). During the next decades, modelling based simu lation approach had a great
rise of popularity, its methods and tools were significantly improved and a nu mber of possible usages
increased. Today simulat ion tools like Arena, Protos, Aris and many others provide possibilities to
simulate business processes and make predictions about their behavior.
Despite the significant progress during last decades, there is still a great problem with business
process simu lation – models for simu lation are mostly created by an expert in the particular domain.
Usually a nu mber of support instruments are built into modern simu lation packages and are ready to
use by an expert, wh ich significantly simp lifies the model creat ion task. But anyway the ro le of an

322

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.029

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

expert is crucial and his decisions drive the model creation . There is a number of problems with such
an approach, in (Aalst, Nakatumba, Rozinat, & Russell, 2010) three main problems are exposed:
1. Focus on design time modelling rather than on operational decision support.
2. Modelling from scratch rather than using existing artifacts.
3. Incorrect modelling of resources.
In presented paper we are focusing on solving first and second problems. Thes e problems
appeared in the past for two reasons: there was no good digital source of objective information a bout
the business process flow, thus an expert mostly had to use his intuition to build a model; preciseness
of existed automated modelling techniques was poor. Nowadays modern information systems usually
store low-level info rmation about course of execution for most business processes of a co mpany in so
called “event logs”. Business supporting systems, such as ERP, WFM or CRM , allow construction of
business processes, control execution and automatically store objective informat ion about events
occurred during process execution. Also in the last decade a nu mber of new approaches focused on
business process analysis had risen. For examp le p rocess min ing (Aalst, et al., 2007), wh ich was
initially focused on extract ion of precise workflow models fro m event logs. In presented paper we
discuss an approach, allowing to build and simulate informat ion models to get short period KPI
predictions based on event logs using process mining paradigm.

1.2 Related works
Business process simulation could be split into two parts based on its purpose: simu lation for long term planning, wh ich is a mainstream way to use simulation and simu lation for short term p lanning
(Wynn, Du mas, Fidge, Hofstede, & Aalst, 2008). First type is used in steady state analysis for long
periods of time, focusing on assisting long-term strategic planning (Shannon, 1975) (Ross, 1990)
(Pidd, 1989). Simulat ion for short term p lanning is mostly suitable for operation decision support in
concrete situations. It was less used in practice due to the difficu lty of obtaining real-time objective
data and lack of techniques to automatically create precise process models (Wynn, Dumas, Fidge,
Hofstede, & Aalst, 2008). At the end of XX century situation had changed – the usage of informat ion
systems, allowed storing info rmation about processes, had grown exponentially, thus providing
operative source of objective data. Also new methods of model extraction were emerged.
Papers in short-term simu lation domain started to appear since the millenniu m. In (Reijers &
Aalst, 1999) authors explicated the idea and proposed a way for a practical imp lementation, which
combined a number of tools: Protos (modeling purpose), ExSpect (simu lation purpose), and COSA
(workflow management purpose). This idea was revisited in (Wynn, Du mas, Fidge, Hofstede, &
Aalst, 2008), but not yet imp lemented. In the beginning of the first decade of XXI century the process
mining techniques had received great attention (Aalst, et al., 2007) and simulation approaches based
on them started to emerge. In (Ro zinat, Wynn, Aalst, Hofstede, & Fidge, 2008) authors built a
simu lation model in semi auto matic way using predefined process model, wh ich was enriched with
probability distributions from event logs. They have also converted extracted model to a format of
popular simu lation tool (CPN tools (Jensen & Kristensen, 2009)). In (Rozinat, Mans, Song, & Aalst,
2009) authors tried to extract both the process model as well as probability distributions fro m log
files. In (Aalst, Schonenberg, & Song, Time Predict ion Based on Process Mining, 2 009) authors tried
to predict time informat ion and in (Schonenberg, Jing xian, Sidorova, & Aalst, 2010) it was shown that
to increase preciseness of predictions, informat ion about history of preceded process flow could be
used. In (Aalst, Pesic, & Song, Beyond Process Mining: Fro m the Past to Present and Future, 2010)
time based prediction and recommendation system was proposed. Also a number of papers was
dedicated to business process resource modelling (Nakatumba & Aalst, 2010) (Aalst, Nakatu mba,

323

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

Rozinat, & Russell, 2010), however resource modelling task still seems very challenging and
unsolved (Aalst, Business Process Simulation Revisited, 2010).

1.3 Problem statement
As mentioned in 1.2, state of the art approaches to short term pred ictions based on simu lation use
probability distributions to estimate values of process model variab les during simu lation. However
such distributions are calculated without considering outer factors. It could lead to imprecise
predictions, because a determination of business processes by environment in many cases is very high.
For examp le, business processes of a tour company is highly determined by current month,
economical situation, political situation in popular countries etc., business processes in so ftware
company are ruled by version release calendar and business processes in agricu lture are very sensitive
to weather conditions. Including appropriate factors into simulat ion models could improve predict ion
preciseness. The goal of presented paper is to expose the method, which allo ws inclusion of
environment variables into simu lation model of business processes. We are co mparing experimental
result with the approach, taken fro m (Ro zinat, Mans, Song, & Aalst, 2009), where all models are built
without considering outer factors.

2 Methodology
2.1 Approach overview
Process min ing is a data driven paradig m. It is based on informat ion fro m event logs, wh ich are
generated during system lifetime. It makes extracted models much more realistic, because they are
based on objective information about “how the system worked in the past”, rather than “how an expert
thinks the system should wo rk”. Most logs could be presented as rows, each containing the fo llowing
Stage
Event log filtering and
process model
extraction.

Description
Event log filtering using frequency-based approach. All process
instances are classified to active, non-active and finished.
Workflow model in Petri Net notation is extracted using combined
algorithm (combination of Heuristic and Genetic miners).
Environment model
Key environmental features are selected by an expert. Local context
creation
features are found if any present in the log file.
Universal feature set is formed and the environment model is
created.
Process model
Mathematic models of process elements are built using universal
enrichment
feature set and log information. Process elements are: event
execution time (for each event), probability of choice in a choice
situation, time until next process instance initialization. Also
mathematic models of local context features are built if any.
Model integration
Integration of the workflow model with the model of environment
into a simulation-ready model of business process.
Simulation experiment Simulation experiments with the appropriate number of sub -runs to
estimate mean values (or confidence intervals) of predicted
variables.
Table 1: Stages of the prediction approach.
informat ion: event name, related process identifier, event type, originator (person or automated agent),

324

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

start/finish event date, values of context variables if any. There exist a nu mber of unified log formats:
MXM L (Min ing eXtensible Markup Language) and its successor Open XES (eXtensible Event
Stream).
Proposed approach is based on simulat ion of process models, built fro m the data, which was
generated by information system. A lso informat ion about environment, should be set up by an expert.
It should include a set of variab les with unified way to get their values for a particu lar date. Based on
informat ion fro m event logs and outer sources a complex model is built, allowing simulat ion
experiments to be executed. The result of experiments is a prediction of values for one or more
variables, related to simulated process . Stages of the approach are presented in table 1.
Simu lation model includes a number of levels: workflo w model level, process elements model
level, environment model level. Workflo w model includes a Petri-net of a process, which is
automatically built using co mbined process mining algorith m based on Heuristic (Weijters & Aalst,
2003) and Genetic (Medeiros, Weijters, & Aalst, 2007) miners. Using workflow model, process
elements are identified: event occurrence time, probabilities of choices in choice situations, time until

Figure 1: Process model elements.
next process instance initialization. Event occurrence time is the time between the start event mark
and finish event mark in the vent log, if there is no fin ish mark, then a start of the next event is
supposed a finish mark for previous event. Choice situation is defined as a marking of a correspondent
Petri Net, in wh ich more than one mutually exclusive transition could be fired (assuming , that initial
marking doesn’t contain parallel branches). Time until next process instance initialization is the time
between first events of two successive process instances. For each of these elements a model is built,
allowing to calculate concrete values during simulation experiments (see figure 1).
To express dynamics of business -processes in informat ion system, the universal feature set is
formed and model of environ ment is created. Features for universal featu re set are selected by an
expert and could include observed variables fro m d ifferent domain areas: economic indicators,
weather variab les, domain specific features (version release calendar for software develop ment
business process) etc. Process instances also usually have a local context bound to them. For examp le
for call-processing center, name of a city of a caller is a context variable, which value is bound to each

325

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

call. Such variab les are usually stored in event logs. In presented approach we build mo dels for such
variables as well, trying to predict them. We are using environment features in a learning process for
these models. Also in (Schonenberg, Jing xian, Sidorova, & Aalst, 2010) it was shown, that preced ing
history of a particular process instance could influence its future flow. For example, if a particu lar
choice was made in a choice situation, then occurrence time of some event could become significantly
longer, than with another choice made before. To deal with such relations we are adding choices in
choice situations as features to universal feature set. So the universal feature set contains three types
of variables: g lobal environ ment variab les suggested by an expert, local context variables, wh ich are
automatically ext racted fro m event logs and variables associated with choice situations, which are also
included automatically.
On process model enrich ment stage, for each process element and local context feature
mathematic model is built us ing approach based on C4.5 algorith m (Qu inlan, 1996). Please refer to
subsection “Learning procedure” for details. Model integration stage is mostly a bridge between a set
of unrelated models of process elements, learned fro m an event log, and a simu lation-ready model o f a
whole business process. This stage is filled with data structures transformations, needed for simulat ion
purposes. On simulation stage, the whole simulat ion run is divided into a number of sub -runs, which
are played independently. Obtained values from different simulation runs are combined to gain mean
value or confidence intervals of predicted variable.

2.2 Learning procedure
To create simulation model, suitable for experiments, a number of intermed iate goals shou ld be
achieved. One of such goals is a formalization of mathematic dependencies between external and
internal variables. We are using regression techniques for nu meric response variables and
classification techniques for nominal response variables. During our research we have found that C4.5
algorith m, which builds regression and classification trees, suites our needs the most – it is fast in
learning p rocedure as well as in calcu lating the response, also it is quite robust and creates reasonable
models even for high dimension tasks. It builds a binary tree performing greedy search in a split space
to min imize part itioning entropy. Algorithm fin ishes its work when one of the fo llo wing conditions
meets: either the nu mber of data instances in all leafs is less than a predefined constant, or variance in
all leafs is less than predefined constant. We have modified original C4.5 algorithm in order to
generate random values based on the tree. In case, when response variable is nu meric our approach is
based on smoothing and discretizing of probability densities for each leaf of the tree. In case, when
response variable is nominal, we are using frequency informat ion fro m the data of each leaf to
estimate probability densities. Using known probability densities, we can randomize values needed
during simu lation. In presented experiments we did not make any assumptions about probability
densities, such as are they Gaussian or not, we just used empirical probability densities to generate
response values. Also we are taking care about smooth data aging. For each ro w of data we are
introducing weighting coefficient. Older data gets smaller, and newer gets bigger weight. Weight is
used during search of the split point, and during estimation of probability densities.
Response generation is done by tree model in t wo stages. On the first stage a leaf of the tree
should be found, which is correspondent to the input vector of feature values. For C4.5 trees this
procedure is a simple descent from the root node of the tree, where on each node some condition is
tested and only one branch is chosen for a search. Such evaluation is extremely fast for small trees and
this is usually the case for C4.5 algorith m, when reasonable parameters of the algorith m are set. After
the leaf is found, on the second stage, a random value is generated. Its generation is based on the
information of probability densities for this leaf.

326

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

2.3 Simulation procedure
After models for all the elements are built, they are comb ined into unified model, representing
analyzed process, so that it becomes possible to simu late process dynamics as many times as needed
(each simulat ion is called sub-run). A nu mber of such sub-runs are grouped into a full simulat ion run,
which allows prediction of KPI values. The important thing h ere is that we can start simulat ion fro m
the last state observed in the log file, which allows evaluation of current situation and not an abstract
one. It solves the “focus on design” problem, mentioned in introduction. Simu lation is based on the
event queue approach – all the events which have to occur, are placed into the time sorted queue with
a particular time label. When an event is removed fro m the queue the system interprets it as a change
of simu lation time to the one from event’s time label. Events are placed into the queue in one of two
cases:
1. When the first event of process instance is removed fro m the queue (occurred), simu lation
system calculates event and it’s occur time for a new process instance, placing it into the
queue. Such calculation is made using the model of time until next process instance
initialization.
2. If some event, which was removed fro m the queue, didn’t fin ish the process instance, then
next event and it’s occur time is calculated using models of event occur time and
probabilit ies of choice situations. If there are more than one choice situation active, for each
choice situation an event is generated separately. Newly generated events are placed into the
queue.

3 Experiments and evaluation
3.1 Setup
We have tested our approach on two real event logs and compared results with the results of
modified Ro zinat et al. approach (Rozinat, Mans, Song, & Aalst, 2009). The modification is in the
way how we deal with resources. Because resources is quite a co mplex thing to model (Aalst,
Business Process Simulat ion Revisited, 2010) and precise modelling of resources was not the part of
current research, for experiments we assumed that resources are infinite for both approaches, so that
each event occurs if it have to, doesn’t matter if there are free resources to deal with it.

327

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

Experimental logs are from d ifferent domain areas: one from cars repairing process (CarRep) and
another from the factory mechanis ms repairing process (CFact Rep). In table 2 properties of event logs
are exposed.

Period between starts of
first and last process
instance
Number of process
instances
Number of inactive
process instances
Number of different
event sequences
Overall number of
events in log
Number of different
events
Predicted variables

Global features used in
learning and simulation

CarRep
4 years 3 months

CFactRep
2 years

120251

3391

43861

211

28

29

807983

25630

7

10

NOpened (number of ‘opened’
events during predicted period),
TInWork ( Overall time spent on
event “In work” during
predicted period in ‫) ଼Ͳͳ כ ܿ݁ݏ‬

NCancelled (number of
cancelled events during
predicted period),
TReadyForScheduling
(Overall time spent on event
“Ready for scheduling” during
predicted period in ‫) ଼Ͳͳ כ ܿ݁ݏ‬
Month, a number of weather
variables (temperature,
humidity, precipitation etc.)

Month, Russian Trading System
index (RTS), a number of
weather variables (temperature,
humidity, precipitation etc.)
Table
2:
Properties
of ion
event
logs used
in experiments
.
CarRep log is extracted fro m the informat
system,
which
manages car-repairing
process in a
car-repairing site. It was gathered for mo re than 4 years and contains more than 120k process
instances. However not all process instances are active, because about 43k (>30%) of them were
abandoned for some reason (they did not reach final state and were not updated during long period),
such inactive process instances were excluded fro m the further analysis. CFact Rep log was gathered
fro m a repairing management system of a cosmetic factory. Th is log is a bit mo re strict (<10% of
inactive instances), however it was gathered for a smaller period of time and it has significantly less
instances and events.
In experiments we tried to predict values for a number of parameters, presented in table 2. We
have separated real log files into two parts: learning and evaluation. Learning part was used to build
models and evaluation part was used as a “golden standard” to compare predictions and reality. Both
logs are finished on march of 2011 year. As a learn ing part we have taken all the in formation before
april 2010 for both logs. Period fro m April 2010 till March 2011 was a testing period. It was split into
5 parts 2 months in each: 04,05 2010, 06,07 2010, 08,09 2010, 10,11 2010 and 01,02 2011. For each
of these periods predicted variables are calculated using approach presented in this paper and
modified Rozinat et al. approach, then obtained results were co mpared with values fro m real log files.
To calculate variab les for each period – 500 simu lation sub-runs were made and a mean value was
calculated for both tested approaches.

328

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

3.2 Results and conclusions
Results are presented in table 3, where ro ws with “Real” contain real value of variable, rows with
Rozinat et al. contain mean values from approach describ ed in (Ro zinat, Mans, Song, & Aalst, 2009)
and rows with Khodyrev et al. contain mean values for approach presented in this paper.
CarRep / NOpened
(num. of times)
Real data
Rozinat et al.
Khodyrev et al.
CarRep / TInWork
(࢙ࢋࢉ ‫ כ‬૚૙ૡ)
Real data
Rozinat et al.
Khodyrev et al.
CFactRep / NCancelled
(num. of times)
Real data
Rozinat et al.
Khodyrev et al.
CFactRep /
TReadyForScheduling
(࢙ࢋࢉ ‫ כ‬૚૙ૡ)
Real data
Rozinat et al.
Khodyrev et al.

04,05 2010

06,07 2010

08,09 2010

10,11 2010

01,02 2011

1212
873
1302

1156
861
1313

1262
901
1385

1283
911
1289

1018
903
1185

04,05 2010

06,07 2010

08,09 2010

10,11 2010

01,02 2011

1.14
1.6
1.22

1.23
1.6
0.83

1.03
1.63
1.21

1.18
1.67
1.18

0.59
1.56
1.21

04,05 2010

06,07 2010

08,09 2010

10,11 2010

01,02 2011

22
22
25

28
22
29

21
22
25

38
21
26

16
21
23

04,05 2010

06,07 2010

08,09 2010

10,11 2010

01,02 2011

1.23
1.84
1.26

1.22
0.99
1.06
0.32
1.79
1.7
1.69
1.64
1.31
1.13
1.28
1.03
Table 3: Experimental results.
As we see fro m experimental results, approach, presented in this paper gives better results on
event logs for most predicted variables. The only variab le where the quality of results is a bit worse to
those from Ro zinat’s et al. approach is NCancelled. It seems that there was not enough data to learn
context dependent models in this examp le: only one year of learning data for CFactRep co mparing
with 3 years of learning data for CarRep. Ho wever even with such a small learning basis a nother
variable’s predict ion was closer to real values on Khodyrev et al. approach. On CarRep results of
Khodyrev et al. approach are more precise than for CFact Rep, because much more learn ing data was
available.

4 Future work
There is a number of challenges for presented approach. First of all, selection of global
environment features for now is done by an expert, which could lead to subjective bias. One of
solutions here could be based on automated news analysis. Analyzing news we can try to refine
themes, which are significant for a particu lar domain, using keyphrase extract ion techniques. Authors
already made steps towards solution for this task (Popova & Khodyrev, Ranking in keyphrase
extraction problem: is it suitable to use statistics of words occurrences?, 2013) (Popova, et al., 2013)
(Popova, Kovriguina, Khodyrev, & Mouro mtsev, 2013). Matching such themes with global variable

329

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

descriptions could help automatically finding global variables for our approach. Another challenge is
that values of global environ ment features are not predicted anyhow for now, in experiments they
were taken as is. For examp le, Russian Trading System index was used as a global feature for CarRep,
and its real values for 2010-2011 years were used in pred iction stage as values. For real predictions
there should be implemented prediction mechanis m of global environment features or predict ion
providers for such variables should be connected.
Also there is a group of challenges on improvement of parts of presented approach. For examp le
as a mining algorith m we are using combination of heuristic and genetic algorith ms. Such approach
gives reasonable, but not perfect results, and should be improved in the future. One of the hardest
challenges is introduction of resources. As shown in (Aalst, Business Process Simu lation Revisited,
2010) this task is not yet solved adequately in state of the art. Also it is impo rtant to mention that one
of our goals in the future is to adapt presented approach to predictions of collaborative systems and
social networks dynamics. In this case log files will not be available at once. They should be created
using information gathered from a social network or a collaborative system (Boukhanovsky, Sloot, &
Yakushev, 2013). This task raises more challenges, which have to be investigated in the further
research.
This paper was financially supported by Government of Russian Federation, Grant 074-U01.

References
Aalst, W. v. (2010). Business Process Simulation Revisited. Enterprise and Organizational
Modeling and Simulation. Lecture Notes in Business Information Processing Volume 63 , pp. 1-14.
Aalst, W. v., Nakatumba, J., Rozinat, A., & Russell, N. (2010). Business Process Simulation: How
to get it right? Handbook on Business Process Management, International Handbooks on Information
Systems (pp. 317-342). Berlin: Springer-Verlag.
Aalst, W. v., Pesic, M., & Song, M. (2010). Beyond Process Mining: Fro m the Past to P resent and
Future. Proceedings of the 22nd International Conference on Advanced Information Systems
Engineering (CAiSE'10), volume 6051 of Lecture Notes in Computer Science (pp. 38-52). Berlin :
Springer-Verlag.
Aalst, W. v., Reijers, H., Weijters, A., Dongen, B. v., Medeiros, A. A., Song, M., & Verbeek, H.
(2007). Business Process Mining: An Industrial Application. Information Systems, 32(5), 713-732.
Aalst, W. v., Schonenberg, M., & Song, M. (2009, 04 09). Time Prediction Based on Process
Mining. Retrieved from BPM Center Report : BPMcenter.org
Boukhanovsky, A. V., Sloot, P., & Yakushev, A. V. (2013). Co mmunications in Co mputer and
Information Science, IET. Book Series: Communications in Computer and Information Science, IET
No. 394, 214-227.
Dahl, O., & Nygaard, K. (1966). SIM ULA: An ALGOL Based Simulat ion Language.
Communications of the ACM, (pp. 671-678).
Jensen, K., & Kristensen, L. (2009). Coloured Petri Nets - Modeling and Validation of Concurrent
Systems. Berlin: Springer-Verlag.
Medeiros, A. A., Weijters, A., & Aalst, W. v. (2007). Genetic Process Mining: An Experimental
Evaluation. Data Mining and Knowledge Discovery, 14(2) , pp. 245-304.
Nakatu mba, J., & Aalst, W. v. (2010). Analyzing Resource Behavior Using Process Mining. BPM
2009 Workshops, Proceedings of the Fifth Workshop on Business Process Intelligence (BPI'09),
volume 43 of Lecture Notes in Business Information Processing (pp. 69-80). Berlin: Springer-Verlag.
Pidd, M. (1989). Computer Modelling for Discrete Simulation. New York: John Wiley and Sons.

330

Modeling and simulation of business processes using event logs.

I. Khodyrev and S. Popova

Popova, S., & Khodyrev, I. (2013). Ranking in keyphrase extraction problem: is it suitable to use
statistics
of
words
occurrences?
Retrieved
fro m
http://romip.ru :
http://romip.ru/russiras/doc/2013_for_participant/russirysc2013_submission_18_1.pdf
Popova, S., Khodyrev, I., Egorov, A., Logvin, S., Gulyaev, S., Karpova, M., & Mouro mtsev, D.
(2013). Sci-Search: Academic Search and Analysis System Based on Keyphrases. KESW, volume 394
of Communications in Computer and Information Science (pp. 281-288). Springer.
Popova, S., Kovriguina, L., Khodyrev, I., & Mouro mtsev, D. (2013). Stop -words in keyphrase
extraction problem. Proceedings of the 14th Conference of Open Innovations Association FRUCT (pp.
113-121). Helsinki: State University of Aerospace Instrumentation (SUAI).
Quinlan, J. R. (1996). Improved use of continuous attributes in c4.5. Journal of Artificial
Intelligence Research, 4, pp. 77-90.
Reijers, H., & Aalst, W. v. (1999). Short-Term Simu lation : Bridging the Gap between Operational
Control and Strategic Decision Making. Proceedings of the IASTED International Conference on
Modelling and Simulation (pp. 417-421). Anaheim: IASTED/Acta Press.
Ross, S. (1990). A Course in Simulation. New York: Macmillan.
Rozinat, A., Mans, R., Song, M., & Aalst, W. v. (2009). Discovering Simu lation Models.
Information Systems 34(3), pp. 305-327.
Rozinat, A., Wynn, M., Aalst, W. v., Hofstede, A. t., & Fidge, C. (2008, 04 08). Workflow
Simulation for Operational Decision Support using YAWL and ProM. Retrieved fro m BPM Center
Report BPM: BPMcenter.org
Schonenberg, M., Jing xian, J., Sidorova, N., & Aalst, W. v. (2010). Business Trend Analysis by
Simu lation. Advanced Information Systems Engineering. Lecture Notes in Computer Science Volume
6051, pp. 515-529.
Shannon, R. (1975). Systems Simulation: The Art and Science. Englewood Cliffs: Prentice-Hall.
Weijters, A., & Aalst, W. v. (2003). Rediscovering Workow Models fro m Event -Based Data using
Little Thumb. Integrated Computer-Aided Engineering, 10(2), pp. 151-162.
Wynn, M., Du mas, M., Fidge, C., Hofstede, A. t., & Aalst, W. v. (2008). Business Process
Simu lation for Operat ional Decision Support. BPM 2007 International Workshops (BPI, BPD, CBP,
ProHealth, RefMod, Semantics4ws), volume 4928 of Lecture Not es in Computer Science (pp. 66-77).
Berlin: Springer-Verlag.

331

