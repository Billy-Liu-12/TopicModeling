Buﬀering Management Scheme for Multimedia
Synchronization in Mobile Information System
Gi-Sung Lee1 , Jeung-gyu Jee2 , and Sok-Pal Cho3
1

Dept. of Computer Science, Howon Univ., Korea
ygslee@sunny.howon.ac.kr
2
Korea Research Foundation, Korea
3
Dept. of C&C . Eng. Sungkyul Univ., Korea

Abstract. In this paper we propose on buﬀering management scheme
to address the problem how to maintain a smoothing stream presentation
in multimedia mobile environments. For this case, a feedback scheme is
used for sustaining a continuous presentation of multimedia stream and
a presentation control scheme for maintaining a normal level of buﬀer.
The proposed scheme shows not only a seamless play-out but also the
higher play-out rate and the lower loss rate.

1

Introduction

The explosive growth of Internet access in parallel with the technological advances in mobile communications has motivated multimedia applications in mobile networks. For this reason, user’s need for diverse multimedia services can’t
be admitted with the previous client/server based service structure. This limitation can be overcome by extending the concept of service providing systems
to mobile systems connected with the mobile networks. Particularly, the interest
of a distributed store technique for multimedia services is increasing in mobile
information environments. It is diﬀerent to play out multimedia data in a Mobile Host(MH) in mobile environments because high data loss rate and delay,
and low bandwidth. For these reason, buﬀer is used in the distributed multimedia systems. The Base Station(BS) receives many sub-frames from multimedia
servers. However the unexpected delay and the increase in traﬃcs result in the
decrease in the possibility of playing out sub-frames, in the case where the playout time in the BS is faster then the arrival time from the multimedia server.
The buﬀer at the BS provide temporary storage for multimedia data, in order to
smooth potential delay and jitter introduced by the wired network and facilitate
synchronization between the multimedia servers and the BS. Once the play-out
starts, data is delivered with little delay variation. Among the previous buﬀering
schemes for multimedia synchronization, a forward feedback scheme has a problem that it may not control the number of sub-frames in case of the underﬂow
and the overﬂow occurrence. Due to this reason, the buﬀer level is always controlled with the same level, and this results in the media loss. In this paper we
propose a smoothing buﬀering management scheme for sustaining a continuous
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2660, pp. 545–554, 2003.
c Springer-Verlag Berlin Heidelberg 2003

546

G.-S. Lee, J.-g. Jee, and S.-P. Cho

presentation for multimedia stream, and a presentation control scheme for maintaining a stately level of the buﬀer. As a result of the proposed methods, the safe
state of buﬀers is continuously maintained because the ﬁltering function and the
network state variables are reﬂected in the value of feedback, and the play-out
time is adaptively modiﬁed. MH is also absolved from his responsibility for synchronization because the synchronization for multimedia data is performed only
in BS.

2

Related Work

In [4][7], a start-up time before transmitting streams is deﬁned by sending a
roundtrip packet in evaluation phase, and the skew problem between the buﬀer
size and media size is solved by readjusting the number of servers with the maximum jitter and the ﬁrst transmission time in other servers. This results in the
increase in play-out rate by maintaining the safe state of buﬀer. However, it
takes much time to move into the safe state from the underﬂow or the overﬂow
because the network state is reﬂected in the value of ﬁltering function needed
to maintain the safe state. It is also hard to sustain the safe state because this
method doesn’t consider the play-out time. In[5], a BS serves as an interface
between the wired and the wireless networks, and buﬀering at the BS for interfacing with the wired networks is considered to smooth inter-packet jitter delay.
This method attempts only to apply synchronization to channel allocation. The
buﬀer management and the feedback scheme in which the received multimedia
units are registered to the buﬀer at a MH, and their play-out time is controlled
based on the middle of the buﬀer size, is studied in [2][3]. However this method
can not support the required QoS level by changing a play-out time even though
the state of wireless networks is normal. In[1], a synchronization scheme for
wireless clients and distributed multimedia systems using a quasi-sink to control
synchronization was proposed. This method deﬁnes eﬃciently the role of system
elements such as multimedia server, BS, and MH. However, the synchronization
for multimedia data is performed only in the start point of transmission. That
is, there is no policy for play-out in this method.

3
3.1

Buﬀering Management Scheme for Multimedia
Synchronization
System Model in Mobile Networks

Fig.1 shows the system model in mobile networks. The overall system conﬁguration consists of three parts: multimedia servers k, BSs m and MHs n. A BS
should communicate with MHs n, and a MH should access multimedia servers
over wired networks through a BS. This system allows the BSs to manage the
buﬀers and the transmission time using the arrival time and delay jitter from
the multimedia servers. This provides a solution to the problems of the MH with
small memory and the BS with the limited resources than the sites in the wired

Buﬀering Management Scheme for Multimedia Synchronization

547

networks. In this system, a movie that is divided into objects i is separately
registered to servers k. This system has the minimization of start up time and
the decrease of the network traﬃc and the buﬀer size. A multimedia data can
be divided into smaller Sprit Streams with logical time using a sub-frame stripping technique, and is separately registered to each server. The smaller stream
is referred as a sub-frame. A message manager in a multimedia server skips and
transmits sub-frames using the oﬀset of a control function from a feedback manager of a BS. The BS registers the arrival time of sub-frames from each server,
and gets the transmission start times from multimedia servers through dummy
packets. A communication manager in a multimedia server classiﬁes feedback
packets and messages from a BS, and reports this information. A communication manager in a BS sorts the ordering of the sub-frames transmitted from a
multimedia server.

Fig. 1. System model in mobile networks

3.2

Buﬀering Management Structure

As shown in Fig. 2, a buﬀer manager in a BS controls the state of buﬀers. The
buﬀer state can be classiﬁed into ﬁve levels: normal level, upper threshold level,
upper control level, lower threshold level and lower control level.
1. normal level
The state of the buﬀer is normal level. In this case, the buﬀer manager
receives continuously media data. It also checks sub-frame numbers and the
jitter scope, and registers the checked information.

548

G.-S. Lee, J.-g. Jee, and S.-P. Cho

2. upper threshold level and upper control level
The possibility of suﬀering from the buﬀer overﬂow gets higher if the buﬀer
reaches the upper threshold level, and the buﬀer overﬂow is originated if the
buﬀer reaches the upper control level. If the state of the buﬀer is the upper
threshold level, the buﬀer manager informs a MH of the sub-frames and the
play-out time obtained from feedback policy of a feedback manager.
3. lower threshold level and lower control level
The possibility of suﬀering from the buﬀer underﬂow gets higher if the buﬀer
reaches the lower threshold level, and the buﬀer underﬂow is originated if
the buﬀer reaches the lower control level. If the state of the buﬀer moves to
the upper threshold level, the manager of the buﬀer level informs to a MH of
a new play-out time obtained from a feedback policy of a feedback manager.

Fig. 2. Buﬀering State in a BS

3.3

Buﬀering Management Algorithm

We describe an algorithm in which the arrival rate and the play-out rate are
adaptively adjusted to maintain the safe state in the buﬀer in a BS. The
proposed algorithm is the following thing.
Procedure Buﬀering Management Algorithm
Procedure Start-up Time
Begin
BStime =Current BS Time;
For i = 0, 1 < k, i + + do
Send(Si , DummyPacketi );

/*Si is each multimedia server. This function
sends dummypackets to each server*/

Buﬀering Management Scheme for Multimedia Synchronization

549

Receive(Si , Dki , Dummypacketi );/*Dki is ith delay time of a server K.
This function computes the round trip time of each server */
i
Start-Upi = Max Dki − DK
; /∗Max Dki is the maximum delay time,

Start-Upi denotes the transmission start time*/
Set Start-Up Time for Server Sk /* Set the thransmission srart time for each
multimedia server */
End For
End

/*Procedure Start-Up Time*/

Procedure Feedback

/*Buﬀer Point at Normal Lever in BS*/

Begin
qt,m =current buﬀer_point;
C(qt,m ) = α · bt−1,m + (1 − α) · qt,m ; / ∗ bt−1,m is smoothed buﬀer, α is
smoothing factor, qt,m is the buﬀer level, a ﬁltering function*/
If DTki = = First Variance Then /*The extent of the ﬁrst variance in the
average arrival time */
Ot,m = qt,m − bt,m − Np ; / ∗ Np is Mobile Network State and the value is 1.*/
Else If DTki == Second Variance Then /*The extent of the second variance
in the average arrival time */
Ot,m = qt,m − bt,m − Np ;
/*Np is Mobile Network State, and the value is 2 */
End If
End
Procedure Nomal_Level

/*Buﬀer Point at Normal Level in BS */

Begin
ρi = 125;

/* A expected play-out time */

550

G.-S. Lee, J.-g. Jee, and S.-P. Cho

If buﬀer_point = = Normal level Then
τt = ρi

/ ∗ τt is real play-out time */

End If
End
Procedure Upper_level

/* Buﬀer Point at Upper Level in a BS */

Begin
BLallsize = BLallsize + 1; / ∗ BLallsize is the number of the buﬀers
corresponding to thethreshold level*/
BLpsize ;

/ ∗ BLpsize is the current number at upper threshold level */

ω = 0; /∗ A weight value */ ρi = 125;
If buﬀer_point = = Upper level Then
Begin
ω = BLallsize /BLpsize ; τt = ρi − (ρi × ω);
End If
End
Procedure Lower_level

/* Buﬀer Point at Lower Level in a BS */

Begin
BLallsize ; BLpsize; ω = 0; ρi = 125; λ = 10;
/* λ is the maximum delay jitter */
If buﬀer_point = = Lower level Then
Begin
ω = BLallsize − BLpsize ; ω = ω/BLallsize ; τt = ρi + λ × ω;
End If

Buﬀering Management Scheme for Multimedia Synchronization

End
Begin

/* Start Main Procedure */

Call Start-Up Time; ∆ = DTkmax − DTkmin ;

/* ∆ is jitter */

If buﬀer_point = = Normal level Then
call normal level;
Else If buﬀer-point = = Upper level Then
Begin
If DTki < ∆ Then

/* DTki is the sub-frame’s delay time */

Begin
Feedback_value = Call Feedback;
Send (Sk , Feedback_value, DTki )
End
Else
Continue;
Call Upper_Level;
End
Else If buﬀer_point = = Lower level Then
Begin
Feedback_value = Call feedback;
Send (Sk , Feedback_value, DTki );
End
Else

551

552

G.-S. Lee, J.-g. Jee, and S.-P. Cho

Continue;
Call Lower_Level;
End
End If
End
End

4

/* Buﬀering Management Algorithm */

Performance Evaluation

We describe a simulation model that developed to evaluate the performance of
our buﬀering management scheme. In our simulation environments, the interface
and algorithm has been implemented by Java development kit JDK 1.3 and
the result has been stored as a simulation.mdb in MDB. 1Kbyte of audio data
is encoded by PCM, and resolution of video frame is 120X120. Twenty-four
frames are used for encoding. It is assumed that wired networks are used for
communication between BSs and multimedia servers, wireless networks for the
communication between MHs and BSs. To carry out a proper work for each
packet, the information used in actual simulation was calculated with Poisson
distribution and the network delay time was applied equally to two types of the
media. The number of frames is 1,000, and the maximum delay jitter time is
600 ms. The play-out rate and loss rate using the presentation time with the
feedback policy and play-out control policy to keep the buﬀer level at a normal
state is compared to the previous methods. Fig. 3 shows the buﬀer water-marker
wherein The x-axis indicates the number of frames and the y-axis the buﬀer level.
It indicates that the frame number in a buﬀer is delayed from 200 to 350 and
thus the buﬀer is getting out of a normal state because the arrival time of frames
is delayed. Fig. 3 also shows the state in which the buﬀer water-marker changes
to the normal state by the feedback policy with the feedback management. It
also shows that underﬂow is reached later than that by the previous policy.
It is known that it is faster to progress to a normal state in variance 1 than
that by a previous method. Also, underﬂow reached later variance 2 better than
variance 1. The overﬂow occurs between 800 and 960 frames as shown in Fig.
3 We can see buﬀer water-marking of variance 1 and 2 is stable then that of
the previous scheme. It also shows that the previous schemes don’t control the
overﬂow between 200 and 360 frames, while the proposed scheme prevents the
underﬂow between 200 and 300 frames. The overﬂow state can be controlled
between 800 and 960. Fig. 4 shows results of the play-out policy with buﬀer
water-marker. It indicates that the frames between 200 and 350, and between
720 and 820 are waited and skipped, respectively. The play-out time is changed

Buﬀering Management Scheme for Multimedia Synchronization

553

between 200 and 350, and also the overﬂow gets to be reduced by the decrease
in play-out time from 750 to 960.

Fig. 3. Buﬀer Wate Marker at BS

5

Fig. 4. Playout Time at MH

Conclusions

In this paper we have proposed a buﬀering scheme of synchronization which
has been brought into a core technology for supporting multimedia services. We
have shown that the proposed scheme decreases the buﬀer size and traﬃc volume
by separately storing multimedia data with many servers. We also prevent the
buﬀer from experiencing the underﬂow or the overﬂow by controlling the buﬀer
level in a presentation control scheme, and maintain the safe state of the buﬀer
by using the evaluated arrival time as one of feedback variables in a feedback
scheme. The propose scheme allows the BSs to manage the buﬀers and the playout policy,and provides a solution to the problems of the small memory and the
limited resources.
Acknowledgements. This work was supported by the Foundation Fund of
University in the Ministry of Information & Communication 2002.

References
1. Azzedine Boukerche, Sungbum Hong and Tom Jacob, “MoSync : A Synchronization
Scheme for Cellular Wireless and Mobile Multimedia System,” Proceedings of the
Ninth International Symposium on Modeling, Analysis and Simulation of Computer
and Telecommunication Systems IEEE 2001
2. D. H. Nam and S. K. Park, “Adaptive Multimedia Stream Presentation in Mobile
Computing Environment,” Proceedings of IEEE TENCON, 1999.

554

G.-S. Lee, J.-g. Jee, and S.-P. Cho

3. D. H. Nam, S. K. Park, “A Smooth Playback Mechanism of Media Streams in
Mobile Computing Environment,” ITC-CSCC’98, 1998.
4. Ernst Biersack, Werner Geyer, “Synchronization Delivery and Play-out of Distributed Stored Multimedia Streams”, Multimedia Systems , V.7 N.1 , 70–90, 1999
5. M. Woo, N. Woo,N. U. Qazi, and A. Ghafoor, “A Synchronization Framework
for Communication of Pre-orchestrated Multimedia Information,” IEEE Network,
Jan./Feb. 1994.
6. T. D. C. Little, and Arif Ghafoor, “Multimedia Synchronization Protocols for Broadband Integrated Services,” IEEE Journal on selected Areas in Comm., Vol. 9, No.9,
Dec. 1991.
7. W. Geyer, “Stream Synchronization in a Scalable Video Server Array,” Master’s
thesis, Institute Eurecom, Sophia Antipolis, France, Sept., 1995.

