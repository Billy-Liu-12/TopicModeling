The Reachability Problem in a Concave Region:
A New Context
Ali Mohades1, Mohammad Ebrahim Shiri1 , and Mohammadreza Razzazi2
1

Faculty of Math. and Computer Sc. AmirKabir University of Tech.
424 Hafez Ave. Tehran, Iran.
2 Faculty of Computer Eng. at AmirKabir University of Tech.
424 Hafez Ave. Tehran, Iran.
{mohades, shiri, razzazi}@aut.ac.ir

Abstract. In this paper we present an algorithm that moves a chain confined in a T-shaped rectilinear region from an initial configuration to a final
configuration where the end point of chain reaches a given point p. This
work is an extension of the our previous results in concave region. In our
algorithm links my cross over one another and none of end points of the
link chain are fixed. It is shown that the algorithm takes a quadratic time
and works when a certain condition is satisfied.

1 Introduction
The problem related to the movement of n-link chain in two dimensions is considered. The n-link chain consists of n links, which are line segments of arbitrary
length. The links are joined end-to-end by freely rotating joints. One problem of
interest in this area is the reachability problem. In this problem, we decide whether
an n-link chain can be moved from one position in a bounded region to another
position in order to reach a point in the region.
The movement of an n-link chain was first studied by Hopcroft et al. [1]. An
algorithm running in O(n) time was then given for an n-link chain confined in a
circular region of the plane. In [2] they showed that reachability decision problems
are NP-hard if the arm constrained by arbitrary polygonal walls. The case when
the arm is confined in a square has been discussed in [3].
All the results mentioned above are on the analysis of a given arm in a convex region. In [5] and[6] we extended the reachability problem for some special
concave regions. We proved that under some conditions an n-linked chain that
is located in one part of a T-shaped concave region could reach all points of the
region. The present paper extends our previous works. We show that under some
additional conditions we can improve our previous algorithm for a given n-linked
chain without considering its placement in the region. The rest of the paper is organized as follows. Section 2 introduces the technical definitions and the problem
statement. Section 3 presents our extended algorithm.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2658, pp. 861−868, 2003.
 Springer-Verlag Berlin Heidelberg 2003

862

A. Mohades, M.E. Shiri, and M. Razzazi

2 Preliminaries and Previous Work
Assume Γ[0,1,...n] is an n-link chain and li is the length of the i-th link Li with
endpoints Ai−1 and Ai and |Γ| = max1≤i≤n li . We say that an n-link chain Γ is
bounded by b if |Γ| < b, i.e no link has length greater than or equal to b.
A simple motion is the one in which only a few joints are moved simultaneously (at most four angles), or the chain is translated or rotated as a rigid object.
We say that Γ is in Rim Normal Form (denoted RNF), if all its joints lie on ∂S.
We say that Γ is in Ordered Normal Form (denoted ONF), if Γ is in RNF and
moving from A0 toward An along Γ is always either clockwise or counterclockwise.
Consider two line segments γ1 and γ2 which intersect at q and γ1 γ2 is in
[π, 2π]. Let ρ be the line segment which starts at q and divides the angle γ1 γ2
into two angles γ1 ρ and ργ2 in such a way that γ1 ρ is in [π/2, π]. Initial configuration of Γ[1,2,3] is defined as follows: A1 placed at point p on line segment
γ1 , A2 at q and A3 at point r on line segment γ2 . By this assumption we can define
our movement in a concave region as follows.

Fig. 1. (a): Initial configuration of Γ, (b): middle-joint-up motion, (c): front-link-forward
motion, (d): final configuration of Γ.

Definition 1. The mot(A1, A2 , A3 , ρ) movement changes the initial configuration of Γ[1, 2, 3] to a final configuration by which Γ lies on γ2 . This is done by two
consecutive motions (Fig 1):

The Reachability Problem in a Concave Region:pA New Context

863

– Middle-joint-up(A1, A2 , A3 , ρ): moves A2 along ρ away from q until A1 reaches
q. During the movement A1 remains on γ1 .
– Front-link-forward(A1, A2 , A3 , ρ): fixes A1 at q then by turning counterclockwise A2 A3 about A2 and turning clockwise Γ about A1 brings down A3 on γ2
(if not already there). To straighten Γ, it moves A3 along γ2 away from q.
It is possible to show that the mot(A1 , A2 , A3 , ρ) movement can be done in finite
number of simple motions. This will be done by showing how each of middlejoint-up motion and front-link-forward motion can be done in finite number of
simple motions (see [5] and[6]).
A T-shaped rectilinear S with boundary ∂S can be considered as the union of
two rectangles S1 and S2 , with boundaries ∂S1 and ∂S2 , and with sides s1 , s2 and
s3 , s4 respectively, attached together via the side ρ (Fig 2).
√
Suppose p ∈ S2 and Γ[0, 1, ...n] confined within S1 and |Γ| < Min{ 22 s1 ,|ρ|},
then An can reach the point p using the following algorithm.

Fig. 2. (a):A T-shaped rectilinear, (b):T-shaped rectilinear can be considered as the union
of two rectangles with sides s1 , s2 ands3 , s4 .

Algorithm 1: Move all joints of Γ to ∂S1 , then move link An−1 An inside S2
and bring joints An−2 , An−3 ,...inside S2 consecutively, using mot(Ai−1, Ai , Ai+1 , ρ)
until p is reached by An .
Sketch of proof: We introduce an algorithm to bring An to the point p using
O(n2 ) simple motions, in the worst case. The algorithm consist of two cases:
d ( p, v1 ) ≥ |An−1 An | and d ( p, v1 ) < |An−1 An |.

864

A. Mohades, M.E. Shiri, and M. Razzazi

In case 1, i.e d ( p, v1 ) ≥ |An−1 An |, An reaches p in three steps. In the first step
we place all joints of Γ on ∂S1 and reach v1 by An . It takes O(n).
In the second step we move link An−1 An inside S2 , then define k0 = min {k
|d ( p, v1 ) ≥ ∑ni=k+1 li } and use mot(Ai−1, Ai , Ai+1 , ρ), k0 < i ≤ n − 1 to bring joints
An−2 , An−3 ,...,Ak0 inside S2 consecutively.
Finally p is reached during mot(Ak0 −1 , Ak0 , Ak0 +1 , ρ). This step takes O(n2 ) in
the worst case.
In the third step, if k=0, we bring the whole Γ inside S2 , and then reach the
point p (Fig 3-a).
In case 2, i.e d ( p, v1 ) < |An−1 An |, p is close to v1 and the technique of case 1
is not applicable. In this case we present three subcases (Fig 3-b, c and d). It has
been shown that each case takes O(n) time to reach p. For more details see [5, 6].

Fig. 3. (a): d ( p, v1 ) ≥ |An−1 An |, (b): An−1 belongs to the same edge as v1 , (c): An and An−1
are in both sides of ω, (d): An and An−1 are in the same side of ω.

p

The Reachability Problem in a Concave Region: A New Context

865

3 Main Result
The main result is; Moving the chain in a T-shaped region from a given configuration to a final configuration in which An reaches p.

Fig. 4. q is the farthest distance of Ai from ∂S1 \ρ

Algorithm 2: Assume Γ is an n-link chain with |Γ| < min{s1 , s2 , s3 , s4 , |ρ2| }
confined within T-shaped rectilinear S and p a point in S, then p is reachable by
the end point of Γ.
We will present a few results that will be used in the explenation of the algorithm.
Assume Ai+1 ∈ S2 , Ψ = ∂S1 \ ρ,
qi = min{Farthest distance of Ai from ψ, |Ai vi |, |Ai v2 |} (refer to Fig 4),
and i is the lowest-indexed joint such that Ai ∈ S1 \ρ and Ai+1 ∈ S2 , and assume j
is a index such that,
∑im= j+1 lm < qi ≤ ∑im= j lm ,
i
i
(if j=i define ∑m
= j lm = ∑m= j +1 lm = 0).

866

A. Mohades, M.E. Shiri, and M. Razzazi

Lemma 1. Assume |Γ| < min{s1 , s2 }, A0 ∈ S1 , i is lowest-indexed joint such
that Ai ∈ S1 \ρ and Ai+1 ∈ S2 (at least i=0). For some j, as defined before, it is
possible to bring Γ[0, .. j] to RNF or straighten Γ[0, ..i] with O(n) simple motion.
Proof: Bring the joints of Γ[0, ... j] one by one to ∂S1 in decreasing order of
their indices or straighten Γ[0, ..i] in two steps. In the first step A j is brought into
∂S1 or Γ[0, ..i] is straightened. In the second step Γ[0, .. j] is brought to ∂S1 .
Step 1:Let Ai−1 and Ai−2 move, turning Ai−1 about Ai , keeping Ai and Γ[0, ...i −
3] fixed (if i=2, let A1 and A0 move, if i=1, let A0 move and if i=0 there is nothing
to do) so that Ai−1 gets close to ∂S1 . One of the following events occurs:
Ai−1 hits ∂S1 (Fig 5-a), Ai−2 hits ∂S1 (Fig 5-b), or the joint angle Ai−2 straightens (Fig 5-c).

Fig. 5. (a): Ai−1 hits ∂S1 , (b): Ai−2 hits ∂S1 , (c): angle Ai−2 straightens.

In cases Ai−1 or Ai−2 hits ∂S1 , move to the step 2, in case the joint angle Ai−2
straightens begin again with Li−1 replaced by line segment Ai−1 Ai−3 and Ai−2
by Ai−3 . Unless for some k < i − 3, Ak hits ∂S1 , the angles will be successfully
straighten, after which repeatedly apply the same procedure to successively lowerindexed joint angles. If all joint angles become straight, the chain Γ[0, ...i − 1] is
simply turned to the direction of the Ai -to-Ai−1 until Γ[0, ..i] straightens or A0 hits
∂S1 . This step takes O(n) simple motion at most.
Step 2: Consider for some k <= j , Ak lies on ∂S1 , first bring the joints of
Γ[0, ...k] one by one to ∂S1 in decreasing order of their index joints, then bring
the joints between Ak and A j (if k = j) to ∂S1 (see [4]). This step also takes O(n)
simple motion.
Lemma 2. Assume |Γ| < min{s1 , s2 , s3 , s4 , |ρ2| }, A0 ∈ S1 and i is lowest-indexed
joint such that Ai ∈ S1 \ρ and Ai+1 ∈ S2 (at least i=0) and assume for some j <= i,
Γ[ j, ...i] is straight and A j ∈ ∂S1 , if j = 0. It is possible to bring Ai+1 to S2 .

The Reachability Problem in a Concave Region:pA New Context

867

Fig. 6. (a): turn Ai+1 about Ai , (b): move Ai+1 along λ toward the initial place of Ai , (c): Ai
is simply rotated about A0

Proof: W.l.g. assume v1 is farthest point of ρ from p. There are tree cases to
consider as follows:
In case j = i, i.e. Ai ∈ ∂S1 , turn Ai+1 about Ai until Ai+1 exit S2 and enter S1 .
By assumption (|Γ| < |ρ2| ) during rotation Ai+1 does not hit ∂S2 (Fig 6-a).
/ ∂S1 , let λ be the straight line trough Ai Ai+1 . MoveAi+1
In case j < i, i.e. Ai ∈
along λ toward the initial place of Ai letting joint Ai move, keeping the joints
between Ai and A j straight, and fixing A j . If Ai+1 exits S2 , we are done. If Ai hits
∂S1 , do the same as the case j=i. (Fig 6-b).
In case j=0, Γ[0, ...i] is straight and A0 ∈
/ ∂S1 , Ai is simply rotated about A0 .
All these cases takes a finite number of simple motion.
The algorithm consists of four consecutive steps as follows.
Step 1: Fix Ai and depending on distance of Ai from Ψ, for some j (as defined),
bring Γ[0, ... j] to ∂S1 or straighten Γ[0, ...i], using lemma 1.
Step 2: Move all chains of Γ to S1 by repeatedly applying step.1 and lemma
2 successively.
Step 3: Move Γ to ONF in S1 using Kantabutra Algorithm (see [4]).
Step 4: Move chain to a configuration in which An reaches p using algorithm
1. All these steps take O(n2 ) simple motions together at most.

References
1. J. Hopcroft, D. Joseph, and S. Whitesides. Movement problems for 2-dimensional linkages, SIAM J. Compt., 13: pp. 610-629, 1984.

868

A. Mohades, M.E. Shiri, and M. Razzazi

2. J. Hopcroft, D. Joseph, and S. Whitesides. On the movement of robot arms in 2dimensional bounded regions, SIAM J. Compt., 14: pp. 315-333, 1985.
3. V. Kantabutra. Motions of a short-linked robot arm in a square. Discrete and Compt.
Geom., 7:pp. 69-76, 1992.
4. V. Kantabutra. Reaching a point with an unanchored robot arm in a square. International jou. of comp. geo. & app., 7(6):pp. 539-549, 1997.
5. A. Mohades and M. Razazi, Reachability On a Region by two Attached Squares,
ICCS’01, USA, Lecture Notes in Computer Sc., Vol. 2120, 2001.
6. A. Mohades and M. Razazi, Reachability Problem in T-shaped Rectilinear Polygon,
Proc. 2th Fun With Algorithms, Italy, pp.199-213, 2001. 2001.

