Robust Multigrid Technique
Serguei Martynenko
Central Institute of Aviation Motors, Aviamotornaya St. 2, Moscow, Russia 111116
martyn s@mail.ru

Abstract. A new robust multigrid technique for solving a large class
of boundary value problems on structured grids is proposed. The technique is based on incorporation of adaption of equations to the technique, the control volume discretization and original multigrid solver
into general algorithm. Special subgrids of the ﬁnest grid are generated
to obtain the most powerful coarse grid correction strategy. Expanded
robustness of the multigrid technique is a result of adaption of equations, extremely accurate formulation of the discrete problems on the
coarse grids, original coarsening, the most powerful coarse grid correction strategy, construction of problem-independent transfer operators,
and absence of pre-smoothing and interpolation. The paper represents
the algorithm, estimation of computational work and results of numerical
test performed.

1

Dilemma of Robustness versus Eﬃciency

For easy of analysis, consider some boundary value problem
Lu = f ,
where L is a linear elliptic operator. A basic algorithm is deﬁned by the following
operating sequence:
1) generation of a computational grid
2) control volume discretization of the boundary value problem
3) ordering of the unknowns
4) iterative solution of the linear equations by Jacobi or Gauss-Seidel method.
Fundamental property, which makes the basic algorithm so unattractive: the
¯ 3 arithmetic operations.
basic algorithm can solve many problems at a cost of sN
¯ is the number of unknowns, and s is a constant which depends on the
Here N
problem and on iterative method.
The ﬁrst attempt of convergence acceleration is devised by applying extrapolation to the basic algorithm. The idea of SOR method is to choose a value
of the extrapolation factor that will accelerate the rate of convergence of the
¯ 2)
iterates to the solution. The computational work can be reduced downto O(N
arithmetic operations, but, in general, it is not possible to compute in advance
the value of the extrapolation factor that is optimal with respect to the rate of
convergence of SOR.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2657, pp. 550–559, 2003.
c Springer-Verlag Berlin Heidelberg 2003

Robust Multigrid Technique

551

Classical multigrid methods (CMM) are known as very fast solvers of discretised PDEs [1,2]. However, CMM cannot be understood as a ﬁxed algorithm,
because of the components of CMM have to be adapted to the given problem
[3]. Optimal adaption of the problem-dependent components makes it possible
¯ arithmetic operations.
to reduce the computational eﬀorts downto O(N)
From this it is easy to see that classical tendency of the convergence acceleration leads to the problem of the solver adoption to the given equation.
When an iteration is eﬃcient for a suﬃciently large class of problems it is
called robust [3]. In an autonomous software the method cannot be adapted to
the problem, so that user expertise is not required [2]. To overcome problem
of robustness we propose a new multigrid variant: Robust Multigrid Technique
(RMT).

2

Multigrid Structure

For reasons of simplicity, let us consider a one-dimensional problem. Assume
that an uniform ﬁnest grid has been generated in the domain Ω = [0, 1]. The
computational grid G(0; 1) for the control volume discretization consists of two
sets of grid points Gv (0; 1) and Gf (0; 1) deﬁned by
Gv (0; 1) = {xvi : xvi = (i − 1)h, i = 1, . . . , H0 + 1, h = H0 −1 } ,
f

G (0; 1) =

{xfi

:

xfi

=

0.5 (xvi

+

xvi+1 ),

i = 1, . . . , H0 } .

(1)
(2)

The ﬁnest grid G(0; 1) can be represented as an union of three coarse grids
G(1; 1), G(1; 2), and G(1; 3). Require that all these coarse grids have no common
points and each coarse grid point coincides with an unique ﬁnest grid point:
3

G(0; 1) =

G(1; k)

and G(1; n) ∩ G(1; m) = ∅ ,

n=m .

k=1

The ﬁnest grid G(0; 1) forms the zero level and the three coarse grids G(1; 1),
G(1; 2) and G(1; 3) form the ﬁrst level. The coarse grid generation is further
recurrently repeated: each grid G(L; i), i = 1, . . . , 3L of a current level L is
considered to be the ﬁnest grid for the coarse grids G(L + 1; j), j = 1, . . . , 3L+1
of the next level L + 1. The nine coarse grids derived from the three grids of the
ﬁrst level form the second level, etc. The coarse grid generation is ﬁnished when
no further coarsening can be performed. It is clear that the ﬁnest grid can be
represented as the following union of all grids of each level L:
3L

G(L; k) and G(L; n)∩G(L; m) = ∅ ,

G(0; 1) =

n = m,

L = 1, . . . , L+ .

k=1

Here L+ is the number of the coarsest level. An example of the coarse grid
generation is shown in Fig. 1. In what follows, the union of the ﬁnest grid and
coarse grids will be called the multigrid structure.

552

S. Martynenko

Fig. 1. Finest and coarse grids in one dimension

Let us summarize features of the triple coarsening:
1) the coarse grid generation consists of deleting vertices and taking unions of the
ﬁne grid cells. The coarsening used in RMT incorporates vertex-centred coarsening and cell-centred coarsening used in CMM.
2) the triple coarsening is independent on the conﬁguration of the control volumes on the ﬁnest grid.
3) mesh size of a coarse grid is h3L , where h is mesh size of the ﬁnest grid.
4) control volume on a coarse grid is union of 3L control volumes on the ﬁnest
grid.
5) each grid has virtual points. These points will be used for fast integral evaluation on the multigrid structure.

Robust Multigrid Technique

553

Actually, the notion “a grid of the Lth level” means the one-to-one mapping
of indices of the coarse grid points onto the indices of the ﬁnest grid points.
In what follows, the mapping will be denoted by the braces {}. For example,
the mapping of indices of the grid points from the set Gv (1; 1) will be written
down as xv{i} , where i and {i} are the coarse and ﬁnest grid indices, respectively:
{1} = 3 ; {2} = 6 ; {3} = 9 ; . . . (Fig. 1). The mapping of indices yields a
close-to-the-ﬁnest-grid notation. In this case, the second order derivative can be
approximated as
∂2u
∂x2

=
xv
{i}

u{i−1} − 2u{i} + u{i+1}
+ O(h2 32L ) .
h2 32L

Coarse grids for solving N -dimensional problems are generated in each space
coordinate. Each level consists of 3N L coarse grids. The control volume on a
coarse grid is a union of 3N L control volumes of the ﬁnest grid.

3

Description of the Robust Multigrid Technique

In this section for simplicity, the essential principles of RMT for boundary value
problems will be explained by studying the following one-dimensional problem
d
dx
0 < x < 1,
3.1

k(x)

du
dx

u(0) = u0 ,

− q(x) u(x) = −f (x) ,
k(x) ≥ α > 0 ,

u(1) = u1 ,

(3)
q(x) ≥ 0 .

Analytical Part of the Technique

Let solution of (3) be represented as
u=c+u
ˆ .

(4)

In follows the representation (4) will be called Σ-modiﬁcation of the solution.
The functions u
ˆ and c will be an approximation to the solution u and a correction
in the multigrid iterations, respectively. Note that representation of the solution
u as a product of u
ˆ and c may be more preferable for some nonlinear problems
[4].
Substitution of (4) into (3) gives the following Σ-modiﬁed form of (3)
d
dx

k(x)

dc
dx

− q(x) c(x) = r(x) ,

c(0) = u0 − u
ˆ(0) ,
r(x) = −f (x) −

d
dx

(5)

c(1) = u1 − u
ˆ(1) ,
k(x)

dˆ
u
dx

+ q(x) u
ˆ(x) .

(6)

554

3.2

S. Martynenko

Computational Part of the Technique

Computational part of RMT consists of the multigrid structure generation, the
control volume discretization of the modiﬁed problem on the multigrid structure
and solution of the discretization equations by original multigrid solver.
Generation of the Finest Grid. The ﬁnest grid is deﬁned by (1) and (2) (in
each spatial direction).
Generation of the Coarse Grids. Generation of the coarse grids is problemindependent component of RMT, as shown in Sect. 2.
Control Volume Discretization on the Multigrid Structure. Taking into
account the boundary conditions, let the grid points xvi and xfi be the vertices
and the control volume faces, respectively. In this case, a control volume V{i} on
the multigrid sructure is deﬁned by V{i} = {x | xf{i−1} ≤ x ≤ xf{i} } . Integration
of the Σ-modiﬁed equation (5) over the control volume V{i} gives the following
discretization equation
a{i+1}

c{i+1} − c{i}
c{i} − c{i−1}
− a{i}
− q
h2 32L
h2 32L

{i} c{i}

= J{i} ,

(7)

where

a{i}

 1
= L
h3

xv
{i}

xv
{i−1}

−1
dx 

k(x)

xf{i}

,

q

{i}

1
=
h 3L

q(x) dx ,

(8)

xf{i−1}

xf{i}

J{i} =

1
h 3L

r(x) dx .

(9)

xf{i−1}

Let the integral J{i} be evaluated on the ﬁnest grid (L = 0, {i} = i) as follows
xfi

1
Ji =
h 3L

−f (x) −
xfi−1

≈ −fi − ai+1

d
dx

k(x)

dˆ
u
dx

+ q(x) u
ˆ(x) dx

u
ˆi+1 − u
u
ˆi − u
ˆi
ˆi−1
+ ai
+ q iu
ˆi .
h2
h2

It is clear that the integral J on the ﬁnest grid is a residual of the discretization
equation.

Robust Multigrid Technique

555

Fig. 2. Control volumes on the second grid of the second level

For evaluation of the integral on the coarse grids, consider the second control
volume on the second grid of the second level (Fig. 2). Using additivity of the
integral and features of the coarse grid generation
[xf{1} , xf{2} ] = [xf7 , xf8 ] ∪ [xf8 , xf9 ] ∪ · · · ∪ [xf15 , xf16 ] ,
we obtain


xf{2}

J{2} =

1
h 32

r(x) dx =
xf{1}

1 1

9 h
=

xf8

r(x) dx +
xf7

1
h

xf9

r(x) dx + · · · +
xf8

1
h

xf16




r(x) dx

xf15

1
(J8 + J9 + · · · + J16 ) .
9

Clear that the integral J is the arithmetic mean value of residuals computed in
the ﬁnest grid points inside the control volume V{2} . Integral J{1} is evaluated
as
1
J{1} = (J1 + J2 + · · · + J7 ) .
7
Since the integrals J{i} are evaluated on the ﬁnest grid, accuracy of the computations is independent of the mesh size on coarse grids. Coeﬃcients a{i} and
q {i} (8) are computed in the same manner.
Fast procedure for computations of the coeﬃcients has been proposed in [3].
Note that the virtual grid points on each grid are intended for the procedure.
Values of the correction c at the grid points outside the domain can be
eliminated by the following interpolation formulas:
a) the Dirichlet boundary condition at x = 0:
c{0} =

2
ξ−1
ξ−1
+2
c|
c{1} −
c{2}
ξ(ξ + 1) x=0
ξ
ξ+1

(10)

556

S. Martynenko

Fig. 3. Sawtooth cycle of the robust multigrid technique

Fig. 4. Prolongation operator of the robust multigrid technique

b) the Dirichlet boundary condition at x = 1:
=
c{HL;g
x +2}
where

2
ξ−1
ξ−1
c|
c{HL;g
c L;g
+2
−
x +1}
ξ(ξ + 1) x=1
ξ
ξ + 1 {Hx }
 v
x{1}


 L ,
h3
ξ=
1
− xv{HL;g +1}


x

,
h3L

(11)

x=0
.
x=1

Multigrid Cycle. Accurate computation of the coeﬃcients and the right-hand
side vector make it possible to avoid pre-smoothing in the multigrid iterations.
Fig. 3 represents a multigrid cycle of RMT. It is to be emphasized that prolongation operator consists of change of the index mapping as shown on Fig. 4.

4

Benchmark Problem

The benchmark problem is
∂2u ∂2u
+ 2 = ex (ey + 1) + ey (ex + 1)
∂x2
∂y

on Ω = (0, 1) × (0, 1) ,

where the boundary conditions are chosen so the solution is
U (x, y) = (ex + 1)(ey + 1) .

Robust Multigrid Technique

557

We solve the benchmark problem starting iterand zero with 1001 × 1001 ﬁnest
grid (L+ = 5). Four multigrid iterations were carried out. The smoothing procedure is the point Gauss-Seidel described in [2]. Table 1 represents convergence
rate of RMT, where q the number of the multigrid iterations carried out, νˆ the
equivalent number of the smoothing iterations [4], E error of the numerical solution E = maxij |U (xi , yj ) − uij |, r the residue r = bh − Ah uh , f the right-hand
side function, · the L2 -norm.
Distribution of the computational eﬀorts in the ﬁrst multigrid iteration is
given below:
q=1
q=1
q=1
q=1
q=1
q=1

L=0
L=1
L=2
L=3
L=4
L=5

Smoothing
Smoothing
Smoothing
Smoothing
Smoothing
Smoothing

Procedure:
Procedure:
Procedure:
Procedure:
Procedure:
Procedure:

10.107%
10.529%
11.258%
11.067%
11.156%
41.441%

Integral:
Integral:
Integral:
Integral:
Integral:
Integral:

0.165%
0.396%
0.485%
0.600%
0.691%
0.856%

where the integral J is deﬁned by
xf{i}

J{ij} =

f
y{j}

1
h2 32L

ex (ey + 1) + ey (ex + 1) −
f
xf{i−1} y{j−1}

ˆ ∂2u
ˆ
∂2u
− 2
∂x2
∂y

dx dy .

Other model problems (anisotropic equations, nonlinear equations, equation
with discontinuous coeﬃcients etc.) had been considered in [4].
Table 1. Results for the benchmark problem
q

r / f

E

νˆ

0 1.000000000 13.8050000 –
1 0.000785950 0.00037883 16
2 0.000173243 0.00016134 32
3 0.000001511 0.00000142 48
4 0.000000011 0.00000005 64

5

Remarks on the Multigrid Software

Main components of the computational part of RMT (coarse grid generation,
computation of the index mapping and integral evaluation) are problem-independent. The components are implemented in form of general building blocks,

558

S. Martynenko

which helps users to develop their own software for particular applications [5].
Note that description of RMT is by means of a nonrecursive formulation.

6

Estimation of Eﬃciency Loss

RMT requires the least number of multigrid iterations to obtain a numerical
solution, but computational cost of the iterations is high enough. Therefore, CMM
can be more eﬃcient for solving the simplest problems. Maximum eﬃciency loss
can be estimated as
total eﬀorts in CMM
2N + 1 N
≈ N
¯
total eﬀorts in RMT
2 − 1 lg N
The estimation and results of numerical experiments show that there is no drastic
penalty for RMT in amount of computations [4].

7

Remarks on Parallelization

Since coarse grids of each level have no common vertices, the smoothing iterations
on these grids can be implemented in parallel. It is clear that an optimum load
balance can be obtained between 3kN processors. The simplest case (k = 1) has
been investigated in [6]. Idleness of 3N − 1 processors on the ﬁnest grid gives
N
the following estimation of the least value of speedup (Smin
) and parallelization
N
eﬃciency (Emin )
N
≈ 3N
Smin

q ∗ L+ + 1
q ∗ L+ + 1
N
and Emin
≈ ∗ +
,
∗
+
N
q L +3
q L + 3N

where q ∗ is the number of the multigrid iterations performed on the coarse levels.
2
For 1001 × 1001 ﬁnest grid (L+ = 5 and N = 2) we obtain Smin
≈ 6.52 and
2
Emin ≈ 0.72. Full parallel implementation of RMT requires parallelization of the
smoothing procedure on the ﬁnest grid. Note that the most powerfull coarse
grid correction strategy of RMT makes it possible to use highly parallelizable
smoothers on ﬁner levels.

8

Conclusion

Let us summarize the diﬀerences between RMT and basic algorithm:
1) RMT uses only the single component (approximation of the boundary conditions on the coarse grids (10)-(11)), which one cannot be in the basic algorithm
(in case of unstaggered grids).
2) there are two variants of nonlinear problem adoption to RMT.
¯ lg N)
¯ arithmetic opera3) RMT reduces amount of computations down to O(N
tions.

Robust Multigrid Technique

559

References
1. Hackbusch W. (1985) Multi-grid methods and applications, Springer, Berlin.
2. Wesseling P. (1991) An Introduction to Multigrid Methods, Wiley, Chichester.
3. Hackbusch W. (1989) Robust multi-grid methods, the frequency decomposition
multi-grid algorithm, Proc. 4th GAMM-seminar, Kiel, 1988, W. Hackbusch (ed.)
(Notes on Numerical Fluid Mechanics 123) Vieweg, Braunschweig 96–104.
4. Martynenko S.I. (2000) Robust multigrid technique for solving partial diﬀerential
equations on structured grids, Numerical Methods and Programming, 1, 83–100.
(www.srcc.msu.su)
5. Martynenko S.I. (2001) The package of application programs for the robust multigrid technique: building blocks and diagnostic tools, Numerical Methods and Programming, 2, 1–6. (www.srcc.msu.su)
6. Martynenko S.I. (2003) Parallelization of the robust multigrid technique, Numerical Methods and Programming, (to appear).

