Oh Behave!
Agents-Based Behavioral Representations in
Problem Solving Environments
1

M. North , C. Macal, and P. Campbell
1

Argonne National Laboratory, 9700 S. Cass Avenue, Argonne, IL 60439
{north,macal,campbell}@anl.gov

Abstract. The development of deregulated electricity systems around the world
has produced the need for simulation systems that are capable of addressing the
complexities that arise in the new markets. Agent-based models allow the use of
complex adaptive systems approaches that are capable of producing tools or problem solving environments that can address the behavior of each of the participants
within the electricity market. The agents in the tools are allowed to establish their
own objectives and apply their own decision rules. They can be developed to learn
from their previous experiences and change their behavior when future opportunities arise. In this paper, we will argue that the same type of agent-based technology that is used to produce “realistic” agent behavior in agent-based simulation
tools at Argonne National Laboratory can also be used to embed these tools in
problem solving environments.

1

Introduction

The development of deregulated electricity systems around the world has produced
the need for simulation systems that are capable of addressing the complexities that
arise in the new markets. As these electric utility systems continue to evolve from
regulated, vertically integrated monopoly structures to open markets that promote
competition among suppliers and provide consumers with a choice of services, the
unbundling of the generation, transmission, and distribution functions that is part of
this evolution creates opportunities for many new players, or agents, to enter the market. It even creates new types of industries, including power brokers, marketers, and
load aggregators or consolidators. As a result, fully functioning markets are distinguished by the presence of a large number of companies and players that are in direct
competition. Economic theory holds that this will lead to increased economic efficiency expressed in higher quality services and products at lower retail prices. Each
market participant has its own unique business strategy, risk preference, and decision
model. Decentralized decision-making is one of the key features of the new deregulated markets.
Agent-based models (ABMs) allow the use of complex adaptive systems approaches that are capable of producing tools or problem solving environments (PSE)
that can address the behavior of each of the participants within the electricity market.
The agents in the tools are allowed to establish their own objectives and apply their
own decision rules. They can be developed to learn from their previous experiences
and change their behavior when future opportunities arise.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2659, pp. 979–984, 2003.
© Springer-Verlag Berlin Heidelberg 2003

980

M. North, C. Macal, and P. Campbell

A PSE is a computer system that provides all the computational facilities
needed to solve a target class of problems. These features include advanced
solution methods, automatic and semiautomatic selection of solution methods, and ways to easily incorporate novel solution methods. Moreover, PSEs
use the language of the target class of problems, so users can run them without specialized knowledge of the underlying computer hardware or software.
By exploiting modern technologies such as interactive color graphics, powerful processors, and networks of specialized services, PSEs can track extended problem solving tasks and allow users to review them easily. Overall,
they create a framework that is all things to all people: they solve simple or
complex problems, support rapid prototyping or detailed analysis, and can be
used in introductory education or at the frontiers of science [1].
An agent is a software representation of a decision-making unit. Agents are selfdirected software objects with specific traits and typically exhibit bounded rationality,
meaning that they make decisions using limited internal decision rules that depend
only on imperfect local information. Emergent behavior is a key feature of ABMs.
Emergent behavior occurs when the behavior of a system is more complicated than
the simple sum of the behaviors of its components [2].
In this paper, we will argue that the same type of agent-based technology that is
used to produce “realistic” agent behavior in the Electricity Market Complex Adaptive Systems model (EMCAS), and other agent-based simulation tools at Argonne
National Laboratory (ANL), can also be used to embed these tools in a PSE-type environment – i.e. one in which all the intricacies of the underlying computer hardware
and software are hidden from the user, who is then free to focus on modeling meaningful solutions.

2 EMCAS
EMCAS is an electricity market model related to several earlier models [3,4].
EMCAS includes a large number of different agents to model the full range of time
scales – from hours to decades – that are needed to understand the domain [5]. The
focus of agent rules in EMCAS varies to match the time continuum, as shown in
Fig. 1. Over longer time scales, human economic decisions dominate. Over shorter
time scales, physical laws dominate. Many EMCAS agents are relatively complex, or
“thick,” compared to typical agents. EMCAS agents are highly specialized to perform
diverse tasks, ranging from acting as generation companies to modeling transmission
lines, as shown in Fig. 2. To support specialization, EMCAS agents include large
numbers of highly specific rules. EMCAS agent strategies are highly programmable.
Users can easily define new strategies to be used for EMCAS agents and then examine the marketplace consequences of these strategies. EMCAS and its component
agents are currently being subjected to rigorous quantitative validation and calibration.

Oh Behave! Agents-Based Behavioral Representations

Fig. 1. EMCAS time scales and decision levels

Fig. 2. EMCAS structure and agents

981

982

M. North, C. Macal, and P. Campbell

The EMCAS interface client uses Dynamic Hypertext Markup Language (DHTML)
and Scalable Vector Graphics (SVG), allowing it to be displayed in all major web
browsers. The interface client can be used anywhere in the world that a server is
available via the Internet or on portable computers without a network connection but
with a local server.
One agent class used in the EMCAS modeling system is designed to simulate the
behavior of Generating Company Agents (GCAs) and the marketing strategies that
emerge as GCAs strive to exploit the physical limitations of the power system using
the market rules under which they operate, as shown in Figure 3. GCAs can sell products in various markets. In EMCAS, a GCA learns the extent to which local and regional prices are influenced by its marketing strategies. This learning process is based
on an “explore and exploit” process. Agents explore various marketing and bidding
strategies. Once a strategy is found that performs well, it is exercised (i.e., exploited)
and fine-tuned as subtle changes occur in the marketplace. When more dramatic market changes take place and a strategy begins to fail, an agent more frequently explores
new strategies in an attempt to adapt to the dynamic and evolving supply-and-demand
forces in the marketplace. Even when a strategy continues to perform well, a GCA
periodically explores and evaluates other strategies in its search for one that performs
better. However, the exploration rate tends to be significantly lower than under stressful conditions.

Fig. 3. Generation company agent

In EMCAS, a GCA is comprised of a number of building blocks that represent different tasks or actions an agent can perform. Each GCA seeks to arrange and parameterize these building blocks in a way that allows the market player to maximize its corporate utility. A building block consists of a set of one or more relatively simple rules.
For example, one very simple agent rule may be if the GCAs sets the marketing clearing price in the last bidding period, then the GCA bid price in the next period will be
fractionally higher.” One parameter in this building block specifies the rate of change
in the bid price. Although the basic building blocks are available to all GCAs, an ex-

Oh Behave! Agents-Based Behavioral Representations

983

ploited strategy may not utilize a building block if it is discovered that it is not beneficial. However, if market conditions change or if the GCA discovers a new way to
combine the building block with another one, it can be used to develop a new strategy. When a GCA owns and operates more than one generating unit, an integrated
strategy is formulated, and the combined effects of unit-level actions are important.
This may entail losing money at one facility to gain more profits at another one.
We propose that this same agent building block approach can be used to develop
elements of a PSE. In particular, the approach can be adapted to address automatic
ontology construction/extension; personalization; and real-time visual representation
of both the program state and the “object of interest” state within a PSE.

3

Automatic Ontology Construction and Extension

An EMCAS agent makes decisions based on past experiences and anticipated conditions in the future and in the context of current market rules and the potential impact
that other players will have on the markets. In the same way, a PSE environment can
be described within a particular domain. The possible/reasonable paths through the
PSE can then be broken down into directed graphs of discrete steps, or building
blocks, each corresponding to a function/action that allows the user to progress towards the goal of “solving” the problem. Analytical agents can then be constructed
from the discrete steps in response to goals set by the user via the user interface. As
the problem or analysis is worked through, the agent reevaluates its context at each
step, assembling the necessary blocks as required. An ontology constructed this way
can then be saved for further use in later PSE applications. Since, in use, each step is
accompanied by an evaluation of the blocks needed for the next step(s), the ontology
is extended by simply using the PSE. We have found it possible to build arbitrarily
complex behavior paths using this approach.
3.1

Personalization

By providing a user interface that allows each user to enter their preferences, this initial personalization becomes part of the PSE environment that the agents automatically use to assemble the problem solving paths that are to be used. As the user continues to use the PSE, the agents learn preferred paths, or tool use, by the continual
assessment of the internal PSE environment.
3.2

Real-Time Visual Representations within PSE

True flexibility in a user input-and-display environment can be achieved by having
functions delegate these functions to other services. This can be achieved for most
functions, but is perhaps most easily discussed/illustrated for the case of real-time
visual representation. Meta-protocols have been developed that transparently link
domain objects. This allows domain objects to publish available data and functionality at run time, and allows changes in the state of domain objects to be displayed as
they occur.
Domain objects include both those responsible for functional behavior in the PSE
and those objects that are the subject of the analysis – usually data objects of some

984

M. North, C. Macal, and P. Campbell

kind. The user can therefore watch a display of the PSE elements evolving during use,
improving their understanding of the analysis process, e.g. which solver, lookup table,
data set, etc., is being used. At the same time, the change in state of each actual agent
in use and the values that the agent represents can also be displayed.

4

Conclusion

ABMs allow the use of complex adaptive systems approaches that are capable of producing tools or PSEs that can address the behavior of each of the participants within
complex systems. In this paper, we argued that the same type of agent-based technology that is used to produce “realistic” agent behavior in EMCAS and other agentbased simulation tools at ANL can also be used to embed these tools in a PSE-type
environment.

References
1. Gallopoulos, S., Houstis, E., Rice, J., Computer as Thinker/Doer: Problem-Solving Environments for Computational Science, IEEE Computational Science and Engineering, IEEE,
11-23 Vol. 1, No. 2: Summer 1994.
2. Bonabeau, E., Dorigo, M., Theraulaz, G., Swarm Intelligence: From Natural to Artificial
Systems, Oxford University Press: 1999.
3. VanKuiken, J.C., Veselka, T.D., Guziel, K.A., Blodgett, D.W., Hamilton, S., Kavicky, J.A.,
Koritarov, V.S., North, M.J., Novickas, A.A., Paprockas, K.R., Portante, E.C., Willing,
D.L., APEX User’s Guide (Argonne Production, Expansion, and Exchange Model for Electrical Systems) Version 3.0, Argonne National Laboratory: 1994.
4. Veselka, T.D., Portante, E.C., Koritarov, V.S., Hamilton, S., VanKuiken, J.C., Paprockas,
K.R., North, M.J., Kavicky, J.A., Guziel, K.A.., Poch, L.A., Folga, S., Tompkins, M.M.,
Novickas, A.A., Impacts of Western Area Power Administration’s Power Marketing Alternatives on Electric Utility Systems, Argonne National Laboratory: 1994
5. North, M., Koritarov, V., Boyd, G., Veselka, T.D., Macal, C.M., Conzelmann, G.C. Thimmapuram, P.R., E-Laboratories: Agent-Based Modeling of Electricity Markets,” American
Power Conference, Electronic Proceedings, PennWell Corporation: April 2002

