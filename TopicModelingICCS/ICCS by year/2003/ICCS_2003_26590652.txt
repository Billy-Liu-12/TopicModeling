Data Sharing Model for Sequence Alignment to Reduce
Database Retrieve*
1

1

Min Jun Kim , Jai-Hoon Kim , Jin-Won Jung2, and Weontae Lee2
1 The

Graduate School of Information and Communication, Ajou University
Suwon, 442-749, Republic of Korea
{xwind,jaikim}@ajou.ac.kr
2 HTSD-NMR Laboratory, Department of Biochemistry
Yonsei University, Seoul 120-749, Republic of Korea
{solwind,wlee}@spin.yonsei.ac.kr

Abstract. Many programs of bioinformatics provide biochemists and biologists
retrieve and analysis services of gene and protein databases. These services access databases for each arrival of user's request, which takes a long time, increases server's overload and response time. In this paper, two data sharing
models are presented to reduce database retrieve for sequence alignments. (1)
Grouping model is proposed to share database access between many requests
arrived in a certain period of time by utilizing database access patterns in bioinformatics. (2) Carpool model is also proposed to reduce response time as well
as to increase system throughput by servicing new arriving request immediately
together with the previous on going requests to share database accesses without
waiting time. Simulation results show that two data sharing models can reduce
the number of database access by sharing it among many requests and increase
system throughput.

1

Introduction
st

In the early 21 century, success in human gene project accelerates development in
bio-science technology. In the Postgenome era spread by completion of the human
genetic map, researches about structures and functions of proteins and discovery of
genes will be performed a lot. These researches produce huge quantity of gene data.
Gene data is expressed by four characters (A, T, G, C). Data more than three billion
DNA bases are accumulated in bio-database, many of which can be accessed via
Web. There are many popular bio-databases such as SwissProt [6], GenBank [7],
EMBL [8] etc.
Whole records in database are retrieved in many bioinformatics applications such
as sequence alignments and structure comparisons. The order of data retrieve does not
affect on the results in many applications. We propose new data sharing models to
*

This study was supported by the Brain Korea 21 Project in 2003, a grant of the International
Mobile Telecommunications 2000 R&D Project, Ministry of Information & Communication,
Republic of Korea, and the Ministry of Science and Technology of Korea / the Korea Science
and Engineering Foundation through the NRL program of MOST NRDP (M1-0203-00-0020).

P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2659, pp. 652–661, 2003.
© Springer-Verlag Berlin Heidelberg 2003

Data Sharing Model for Sequence Alignment to Reduce Database Retrieve

653

increase performance of applications that access bio-databases in this characteristic.
First, grouping model is proposed, which accesses database records once and process
several requests together by gathering many users’ requests arrived in a scheduled
period. Grouping model can decrease the number of database access and reduce total
system cost. Second, carpool model is proposed to avoid waiting time until the end of
period for grouping users’ requests unlike the grouping model. New arrival of request
is combined with the previous on going requests at any time and shares the database
accesses in the carpool model, while new request has to wait until the end of grouping
period in the grouping model. Carpool model can reduce an average response time for
each user as well as the number of total database accesses.

2

Traditional Model

Many applications of bioinformatics perform gene sequence alignments and protein
structure comparisons between genes and proteins. These applications and gene and
protein databases are provided on the Web. In such an environment, users send gene
or protein sequences through the Web. Then, programs on server such as FastA and
Blast read known sequences in databases and compare them with sequences contained
in users’ requests.
2.1

Traditional Architecture

Many programs used for sequence alignments or structure comparisons retrieve the
whole records in gene databases such as SwissProt [6], GenBank [7], EMBL [8], etc.
Such programs as FastA and Blast must respond to each user's request after retrieving
whole records in database and comparing each of records with user’s sequence.
In traditional model, new arrival of request is immediately processed without waiting time when system is idle. However, when the previous request is processing, new
request is registered to a queue in the order of arrival, then processed only after all the
previous requests are serviced.
2.2

Cost Analysis

Fig. 1. Traditional program model

Figure 1 shows the timing diagram to demonstrate arrival and servicing the users’
requests, R1 to R4. C DB denotes an assumed cost for database retrieve for all re-

654

M.J. Kim et al.

cords. Also,

Cseq denotes an assumed cost for comparison between gene sequence

from a user request and all gene sequences from a database.
An average cost to process a user request for a gene sequence alignment is the sum
of database retrieve cost ( C DB ) and comparison cost ( Cseq ) between gene sequences.
Thus, the average cost for a request,

C

org
avg

=

C

org
avg

, can be computed as follows:
(1)

C DB + Cseq

It is assumed that the arrival of user request is Poisson process with an arrival rate

λ . User’s request is registered to a queue by the order of arrival, and processed sequentially. It is M/G/1 queuing model. The service rate is 1

C

org
arg

. Using M/G/1 queu-

ing model, response time can be derived as follows:

wo =C

3

(2)

org 2

org
avg

+

λ C avg

2(1 − λ ⋅ C avg )
org

Grouping Model

Problem in the traditional model is retrieving the whole records in a database for a
sequence alignment on each arrival of user’s request. Bioinformatics programs like
FastA and Blast have to access whole records in the database repeatedly to service
many users’ requests. Grouping model reduces the number of database access by
grouping users’ requests and sharing the database access. Thus, it can reduce a total
system cost and increase system throughput.
3.1

Grouping Architecture

Grouping model gathers users' requests and processes together periodically without
accessing a database every time on each user's request. Grouping model retrieves
sequences from a database once in a period, it compares between gene sequences in
the database and gathered sequences from users’ requests in a period. By doing so,
grouping model can reduce the number of database access remarkably because it
retrieves records in the database once in a period without accessing database individually for each request.
In Fig. 2, Rj denotes j-th users’ requests arrived in the i-th period. Users’ requests
are processed after the end of i-th period. For grouping model, user's request may be
delayed up to the length of a period (D) even if there is no other request in the period
for grouping. But, the period can be adjusted according to the arrival rate of user request. When the arrival rate of user request is high, grouping model can reduce the
number of database access remarkably.

Data Sharing Model for Sequence Alignment to Reduce Database Retrieve

655

Fig. 2. Processing in grouping model

3.2

Cost Analysis

When the arrival of user request is governed by Poisson process with an arrival rate
λ , the average number of user request arrived during a period (D) is D ⋅ λ . Cost for
comparison between gene sequences gathered from users’ requests in a period and
gene sequences in a database is D ⋅ λ ⋅ C seq . Cost for retrieving whole records in a
database is assumed to

C DB . Thus, total system cost per period is as follows:

C

grp
total

=

C DB + D ⋅ λ ⋅ Cseq

(3)

An average cost to service a request is as follows:

C

grp
arg

=

CDB
+ Cseq
D⋅λ

(4)

The probability of the arrival of at least one user’s request during a period (D) is

1 − e − λD .

Because the database is accessed only when there is a request during a
period (D), an average cost to service a user for grouping model is as follows:

C

grp
avg

=

(

)

CDB
−λD
⋅ 1 − e + Cseq
D ⋅λ

(5)

Also, the average response time is the sum of retrieving all records in database and
comparing them with a user request, and an average waiting time ( D 2 ) until the
end of period. The average number of user requests arrived during a period is D ⋅ λ .

Thus, time for processing data is D ⋅ λ ⋅ C seq in a period (D). Because database is

656

M.J. Kim et al.

accessed once in a period, database access time is

C DB . Therefore, the average re-

sponse for grouping model ( wgrp ) is as follows:

wgrp = CDB + D ⋅ λ ⋅ Cseq +
4

D
2

(6)

Carpool Model

Because users’ requests gathered in a current period are processed in the next period
in the grouping model, response time can be long. Retrieving whole database records
is general in gene sequence alignment. Also, the result of sequence alignment is not
affected on the order of sequence analyzed. Thus, we propose a model to process each
user’s request immediately by combining with the previously arrived requests to share
and reduce database accesses without waiting until the end of period unlike the grouping model.
4.1

Carpool Architecture

In a carpool model, user’s request is processed immediately with other requests being
processed. When a server retrieves one record (sequence) from a sequence database,
new request is processed together with the previously arrived requests.

Fig. 3. Database access

Figure 3 shows an example. In the example, we assume a sequence database has
four sequences (records), Sequence 1 to 4. Sequence alignment program, such as
FastA or Blast, compares the gene sequence from a request with all gene sequences in
a database in the order of Sequence 1, 2, 3, and 4. Figure 3 shows that other users’
requests, Request 2, Request 3, and Request 4, are arrived during the service for Request 1.

Data Sharing Model for Sequence Alignment to Reduce Database Retrieve

657

Fig. 4. Processing order in carpool mechanism

Figure 4 shows service procedures for the carpool model for four users’ requests,
Request 1 to 4. Database has four sequences, as shown in Fig.3. D(i) denotes a cost
for retrieve the i-th sequence from a database, and R(i, j) denotes comparing between
Sequence j and a sequence in user Request i.
Sequence 1 is retrieved (D(1)) and compared with Request 1 (R(1, 1)). Because
Request 2 is arrived while processing Request 1, Sequence 2 is retrieved (D(2)) and
compared with both requests, Request 1 (R(1,2)) and Request 2 (R2(2,2)). Database
access can be reduced because sequence is accessed once and Request 1 and Request
2 are processed together. Request 1 is finished after retrieve the Sequence 4 (D(4))
and process (R(1,4)). After Sequence 4 is read (D(4)) from a database and processed
for three requests, Request 1 (R(1,4)), Request 2 (R(2,4)), Request 3 (R(3,4)), Sequence 1 is retrieve (D(1)) to service Request 2, Request 3 and Request 4 because
three requests have not been compared with Sequence 1. User’s request of carpool
model is processed immediately from the next retrieval of database record until all
database records are retrieved and compared with the request sequence. Thus, in a
carpool model, a new request does not have to wait unlike the grouping mechanism.
4.2

Cost Analysis

Total cost for sequence analysis adopting carpool model can be computed from the
database retrieve time and processing time. The arrival rate of user’s request is assumed to λ governed by Poisson process. Time to retrieve all records in a database
and process (compare) them with a sequence of user’s request is assumed to C cp .
total

during interval
The average number of request is λ ⋅ C
total
cp

C

cp
total

. All records in data-

base is retrieved once ( C DB ) during the interval. Thus, total cost during the interval is
computed as follows: ( Cseq is the same as the cost analysis in Sect. 2.2)

658

M.J. Kim et al.

C
From formula (7),

C

cp

cp

(7)

= C DB + λ ⋅ C total ⋅ C seq
cp

total

can be computed as follows:

total

C

cp
total

=

C

(8)

DB

1 − λ ⋅ C seq

The probability of the arrival of at least one user’s request within interval

C

cp
total

is

cp
C DB
−λ
−λ
1 − e C total = 1 − e 1− λ ⋅C seq . The average cost of a carpool model can be computed as

follows: (We derive analysis similar to formula (5), however use interval

C

cp
total

in-

stead of period D.)

Ctotal =
cp

cp
−λ ⋅ C DB 
1
 
1 − −λ⋅C total  +
⋅

 C seq =  − C seq  ⋅ 1 − e 1−λC seq  + C seq
e
cp

⋅λ 
λ
 

total

C
C

(9)

DB

Response time ( wcp ) of carpool model is the same as the sum of time to process
user’s request (

C

DB

+ C seq ) and time to process other users’ requests ( λ

⋅ wcp ⋅ C seq )

arrived during the response time ( wcp ).

w

cp

From Eq. (10),

= C DB + C seq + λ ⋅ wcp ⋅ C seq

(10)

wcp can be computed as follows:

wcp =

C

DB

+ C seq

(11)

1 − λ ⋅ C seq

5 Performance Evaluation
For performance evaluation,

C DB and Cseq is measured by executing a real sequence

alignment program FastA(version 3) accessing Genbank(Release 72.02) database, and
cytochrome as sequence of user request on Pentium 4 system (1.6GHz, 256 Mbyte
Ram (pc2700)). C DB and Cseq is 3.99 sec. and 19.98 sec., respectively, from the
experiment. Cytochrome is a gene acting in cellular redox of human protein.

Data Sharing Model for Sequence Alignment to Reduce Database Retrieve

5.1

Cost Analysis

24.5

A verage R espo nse Tim e

24

200

23.5

180

Average Response Time (sec. )

Throughput (sec / req uest)

659

23
22.5
22
21.5
21

Traditional Model
Grouping Model(Period is 50 sec.)
Grouping Model(Period is 70 sec.)
Carpool Model

20.5
20
19.5

Traditional Model
Grouping Model(Period is 50 sec.)
Grouping Model(Period is 70 sec.)
Carpool Model

160
140
120
100
80
60
40
20
0

0.002

0.01

0.018

0.026

0.034

0.042

0.05

User Arrival Rate

Fig. 5. Comparison of throughput (Average
time per request)

0.002

0 .0 1 2

0 .0 2 2

0 .0 3 2

0.042

User arrival Rate

Fig. 6. Comparison of response time

Figure 5 depicts the average cost comparisons between traditional model, grouping
model and carpool models. Period is 50 sec. and 70 sec. for grouping model. X axis is
the rate of user request ( λ ) and y axis is system cost per user request. For grouping
model and carpool model, system cost is decreased when λ value increases by sharing a database retrieve. Also, for grouping model, system cost is reduced as D increases because more requests are sharing the database access. We draw curves up to
the value of λ where the system can admit the rate of arrival. Carpool model can
admit the highest request rate (up to 0.05) while the traditional model accommodates
the lowest (up to 0.04).
Figure 6 shows response time for different models. X axis is request rate ( λ ) and y
axis is an average response time for user’s request. Because a request of traditional
model is accumulated in a queue, response time is increased rapidly as request rate is
increased. Response time of carpool model is shorter than that of grouping model at
the low request rate because each request is immediately processed without grouping
time unlike the grouping model.
5.2

Simulation

We simulated the three models to verify the analysis in Sects. 2.2, 3.2, and 4.2.
and

C DB

Cseq are set to 3.99 sec. and 19.98 sec., respectively. We simulated grouping

model with 2000 requests, and obtain an average response time. Also, carpool model
is simulated with 60000 requests. The results of simulation are shown in Table 1.

660

M.J. Kim et al.
Table 1. Response time (seconds)

Request tradition grouping grouping carpool
rate
model (D = 50) (D = 70)
nodel
0.0200
35.45
61.620 81.080
39.980
0.0250
42.89
64.530 85.050
48.090
0.0300
57.07
68.980 90.990
60.350
0.0350
88.11
72.740 96.910
80.900
0.0400
254.20
76.850 106.710
121.330
0.0450 8067.45
83.660 122.560
244.820
0.0500 19153.61
91.180 143.890 7656.720
0.0550 28282.37 103.710 190.340130092.200
Figure 7 shows the graph from Table 1. We obtain the very similar results comparing with the one obtained from the analysis (shown in Fig. 6).

400

Traditional Model
Grouping Model(Period is 50 sec.)

A ve ra g e Re s p o ns e Tim e ( se c . )

350

Grouping Model(Period is 70 sec.)
Carpool Model

300
250
200
150
100
50
0
0.02

0.025

0.03

0.035

0.04

0.045

0.05

User Arrival Rate
Fig. 7. Response time

We can know that response time of traditional model increases rapidly as the request rate increases. Grouping model shows the stable response time even if request
rate increases. Carpool model has shorter response time than traditional model because each user’s request is processed immediately and by sharing the database access.

Data Sharing Model for Sequence Alignment to Reduce Database Retrieve

6

661

Conclusion

There are huge amount of data in gene or protein databases. To access such database
efficiently, we propose two data sharing models, grouping and carpool models.
Grouping model processes set of users' requests gathered in a period. By processing
many users' requests together, database access can be shared, thus the number of
database access can be reduced. Carpool model shares database access between
requests and processes user's request immediately without waiting unlike the grouping
model.
By these data sharing models, bioinformatics programs can retrieve database
efficiently, reduce database access and admit higher rate of user request. Results from
analysis and simulation show that these data sharing models can service more users as
well as commit a shorter response time than a traditonal model.

References
[1] Ozden, B., R. Rastogi, and A. Silberschatz, and C. Martin “Demand Paging for Video on
Demand Servers,” IEEE International Conference on Multimedia Computing and Systems,
May 1995.
[2] Stephen F. Altschul, Warren Gish, Webb Miller, Eugene W. Myers and David J. Lipman,
“Basic Local Alignment Search Tool,” J. Mol. Biol., pp. 403–410, 1990.
[3] Tieng K. Yap, Ophir Frieder, and Robert L. Martino, “Parallel Homologous Sequence
Searching in Large Databases,” IEEE Proceedings of the Fifth Symposium on the Frontiers
of Massively Parallel Computation, 1995.
[4] Pearson, W.R., and Lipman, D. “Improved Tools for Biological Sequence Comparison,”
Proc. National Academic Science, USA, pp. 85, 1988.
[5] Jerry Banks, John S. Carson, II, Barry L. Nelson “Discrete-Event System Simulation,”
Prentice Hall, 2000.
[6] SWISSPROT: http://www.expasy.org/
[7] GENBANK: http://www.ncbi.nlm.nih.gov/Genbank/
[8] EMBL: http://www.ncbi.nlm.nih.gov/Genbank/

