Mantle Convection Modeling with Viscoelastic/Brittle
Lithosphere: Numerical and Computational
Methodology
Louis Moresi1 , David May2 , Justin Freeman1 , and Bill Appelbe2
1

Monash University, Dept. of Mathematical Science
Clayton, Victoria 3186, Australia
{Louis.Moresi,Justin.Freeman}@sci.monash.edu.au
http://wasabi.maths.monash.edu/MonashClusterComputing
2
Victorian Partnership for Advanced Computing
Carlton South, Victoria 3053, Australia
{davidm,bill}@vpac.org
http://www.vpac.org/snark

Abstract. The Earth’s tectonic plates are strong, viscoelastic shells which make
up the outermost part of a thermally convecting, predominantly viscous layer; at
the boundaries between plates the rheology is thought to be dominated by brittle
processes. Brittle failure of the lithosphere occurs when stresses are high. In order
to build a realistic simulation of the planet’s evolution, the complete viscoelastic /
brittle convection system needs to be considered. A Lagrangian Integration point
finite element method is discussed which can simulate very large deformation
viscoelasticity with a strain-dependent yield stress. We also describe the general,
parallel implementation of this method (Snark) and compare the performance to
a highly optimized, serial prototype code (Ellipsis). The specialized code shows
better scaling for a single processor. The parallel scaling of the general code is very
flat for “realistic” problem sizes indicating efficient use of multiple processors.

1

Introduction

Solid state convection in the Earth’s mantle drives the surface motion of a cool thermal
boundary layer comprising a number of distinct lithospheric plates. Motions in the mantle are described by the equations of fluid dynamics. The rheology needed to describe
deformation in the lithosphere is highly non-linear, and, in addition, near the surface
where temperatures are less than ≈ 600◦ C it also becomes necessary to consider the
role of elasticity (Watts et al, 1980). The strong correlation between seismicity and plate
boundaries (e.g. Barazangi & Dorman, 1969) makes it seem likely that plate motions
are associated with localization of deformation occuring when stresses reach the yield
strength of the lithosphere. This suggests that the fundamental process is thermal convection; plate tectonics is the manner in which the system organizes. Having identified
the need for efficient, large-scale convection simulations with elastic effects in an evolving cool lithosphere, we present a method for simulating viscoelastic/brittle materials
during very large deformation, and describe the practical implementation of this method
into software for parallel cluster architectures.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2659, pp. 781–787, 2003.
c Springer-Verlag Berlin Heidelberg 2003

782

2

L. Moresi et al.

Mathematical Model

We begin with the classical momentum conservation equation:
∇.σ = f

(1)

where σ is the stress tensor and f a force term. As we are interested only in very slow
deformations of highly viscous materials, (infinite Prandlt number) we have neglected
all inertial terms in (1), and assume incompressible flow.
We employ a Maxwell viscoelastic model which assumes that the strain rate tensor,
D, defined as:
Dij =

1
2

∂Vi
∂Vj
+
∂xj
∂xi

(2)

is the sum of an elastic strain rate tensor D e and a viscous strain rate tensor D v . The
velocity vector, V , is the fundamental unknown of our problem and all these entities are
expressed in the fixed reference frame xi .
To account for the low-temperature lithospheric rheology, brittle behaviour has been
parameterized using a non-linear effective viscosity. To determine the effective viscosity we introduce a Prandtl-Reuss flow rule for the plastic part of the stretching, and
introducing another additive term in the stretching D p :
τ
τ
τ
+
+λ
= De + Dv + Dp
2µ 2η
2 |τ |

(3)

where λ is a parameter to be determined such that the stress remains on the yield surface,
(1/2)
. The plastic flow rule introduces a non-linearity into the
and |τ | ≡ (τij τij /2)
constitutive law which, in general, requires iteration to determine the equilibrium state.
τ is the Jaumann corotatonal stress rate for an element of the continuum, µ is the
shear modulus and η is shear viscosity. The Jaumann stress rate is the objective (frame
invariant) quantity given by
τ=

Dτ
+ τ W − Wτ
Dt

(4)

where W is the material spin tensor.
In the mantle, the force term from equation (1) is a gravitational body force due to
density changes. We assume that these arise, for any given material, through temperature
effects:
∇ · τ − ∇p = gρ0 (1 − αT T )ˆ
z

(5)

where g is the acceleration due to gravity, ρ0 is material density at a reference temperature,
ˆ is a unit vector in
αT is the coefficient of thermal expansivity, and T is temperature. z
the vertical direction. We have also assumed that the variation in density only needs to
be considered in the driving term (the Boussinesq approximation).

Mantle Convection Modeling with Viscoelastic/Brittle Lithosphere

783

The energy equation governs the evolution of the temperature in response to advection and diffusion of heat through the fluid:
DT
= −κ∇2 T
Dt

(6)

where κ is the thermal diffusivity of the material.
The viscosity of the mantle at long timescale is known to be a complicated function
of temperature, pressure, stress, grain-size, composition (particularly water content) etc
(Karato & Wu, 1993). Despite this complexity, the dominant effect on the viscosity from
the point of view of the large-scale dynamics of the system is the effect of temperature
(e.g. Solomatov, 1995).
2.1

Numerical Implementation

As we are interested in solutions where very large deformations may occur – including
thermally driven fluid convection, we would like to work with a fluid-like system of
equations. Hence we obtain a stress / strain-rate relation by expressing the Jaumann
stress-rate in a difference form:
e

τ≈

τ t+∆t − τ t
− Wt τ t + τ t Wt
∆te

(7)

where the superscripts t, t + ∆te indicate values at the current and future timestep
respectively.
The equation of motion is then
e

∇(ηeﬀ Dt+∆t ) − ∇p = gρ0 (1 − αT T )ˆ
z − ∇ ηeﬀ

τ t Wt
τt
Wt τ t
−
+
µ∆te
µ
µ
(8)

The velocity field u and pressure at t + ∆te can be solved for a given temperature
distribution and the stress history from the previous step. Our system of equations is thus
composed of a quasi-viscous part with modified material parameters and a right-handside term depending on values from the previous timestep. This approach minimizes the
modification to the viscous flow code. Instead of using physical values for viscosity we
use effective material properties (8) to take into account elasticity through a softening
of the viscous term.

3

Computational Method

Having devised a suitable mathematical representation of the class of problems we wish
to model, we need to choose a numerical algorithm which can obtain an accurate solution
for a wide range of conditions. Our method is based closely on the standard finite element
method, and is a direct development of the Material Point Method of Sulsky et al. (1995).
Our particular formulation could best be described as a finite element representation of
the equations of fluid dynamics with moving integration points.

784

L. Moresi et al.

A mesh is used to discretize the domain into elements, and the shape functions
interpolate node points in the mesh in the usual fashion. Material points embedded in
the fluid are advected using the nodal point velocity field interpolated by the shape
functions.
The problem is formulated in a weak form to give an integral equation, and the shape
function expansion produces a discrete (matrix) equation. Equation (1) in weak form
becomes
Ω

N(i,j) τij dΩ −

Ω

N,i pdΩ =

Ω

Ni fi dΩ

(9)

where Ω is the problem domain, and the trial functions, N , are the shape functions
defined by the mesh; we have assumed no non-zero traction boundary conditions are
present. For the discretized problem, these integrals occur over subdomains (elements)
and are calculated by summation over a finite number of sample points within each
element. For example, in order to integrate a quantity, φ over the element domain Ω e
we replace the continuous integral by a summation

Ωe

φdΩ ←

wp φ(xp )

(10)

p

In standard finite elements, the positions of the sample points, xp , and the weighting, wp
are optimized in advance. In our scheme, the xp ’s correspond precisely to the Lagrangian
points embedded in the fluid, and wp must be recalculated at the end of a timestep for
the new configuration of particles.

4

Efficient Parallel Implementation

One advantage of the Lagrangian integration point FEM is that it permits the use of a grid
which is significantly more regular than the geometrical complexity developed by the
model. In a parallel code this has the advantage that the mesh connectivity and domain
decomposition is either static or evolves much more slowly than the Lagrangian particle
distribution. This fact leads to considerable efficiencies in the allocation and access of
distributed global matrices.
In the original, serial implementation of the method (ellipsis , as described in Moresi
et al, 2003) a specialized multigrid velocity solver specifically optimized for geoscience
problems (Moresi and Solomatov, 1995) was used. This multigrid solver was coupled
to a preconditioned Uzawa iteration for pressure (Moresi and Solomatov, 1995) which
was found to be robust for strong variations in material properties.
In the parallel code (snark ), we sought a more general implementation which
would be suitable for a broader range of problems, with a more flexible code design (See
the paper by Appelbe et al in this volume). The PETSc framework was chosen as the
platform since it provides both the interface for domain-decomposition, parallel vector /
matrix storage, and a wide range of solution methods. PETSc makes it possible to switch
between the many different included solvers very easily. For the velocity solver we found
the included GMRES solver to be a reliable starting point for most problems, coupled
to the same preconditioned Uzawa scheme developed for the specialized problem.

Mantle Convection Modeling with Viscoelastic/Brittle Lithosphere

785

In this section we demonstrate the impact on solver efficiency of choosing a general
approach over a highly specialized one.
4.1 Typical Problem

Fig. 1. Convection problem used for timings. The initial condition is on the left (A), and the final,
steady-state temperature solution is on the right (B). Blue (dark) is cool, Red (mid-gray) is warm

We benchmark the ellipsis and snark codes using a two dimensional convection
problem in a 1×1 box of 64×64 elements, temperature fixed top (T = 0) and bottom
(T = 1), free slip boundaries, Rayleigh number 106 , and initial condition
T (x, y) = (1 − y) + (cos πx · sin πy)/100

(11)

and using a viscosity dependent on temperature:
η = η0 exp

E
T + T0

(12)

In which T0 was chosen to be 1, and E, η0 were chosen to give a basal viscosity of 1,
and a viscosity contrast of 109 (E = 41.44,η0 = 10−9 )
A thermal convection cell develops as shown in figure 1. The temperature dependence
of viscosity leads to a thick, cool upper thermal boundary layer, with a vigorously
convecting layer beneath it. Strong viscosity gradients develop in the thermal boundary
layers which may influence the convergence rate of the solver. (See Moresi et al, 1996)
In the case of the ellipsis multigrid and the PETSc GMRES solvers, there was no
appreciable difference in the solution time for overall viscosity variations of 109 .
4.2

Solver Scaling with Problem Size

Multigrid, properly implemented, is particularly well suited for large scale problems
because the solution time scales linearly with the number of unknowns. Figure 2 shows
the scaling of the solution time for each of the methods, normalized by the number of
unknowns and the solution time for the smallest problem. The times are the result of

786

L. Moresi et al.

Fig. 2. Scaling of problem time with the number of velocity unknowns for multigrid (red) and
GMRES (blue). The timings are normalized by the number of unknowns and scaled by the coarsest
grid solution time. A flat curve is desirable since it indicates the work per unknown does not change
with the size of the problem

averaging several runs with different viscosity laws. The multigrid scaling is very close
to linear for the entire range of problem-sizes explored, whereas GMRES performance
degrades quickly as the problem size increases.

4.3

Parallel Efficiency

Fig. 3. Efficiency of the parallelization inherited from PETSc as a function of the number of
processors. The timings are scaled to the solution time on a single processor in each case and then
multiplied by the number of processors. Values below 1 indicate that the problem size is too large
for efficient execution on a single processor, values significantly above 1 indicate inefficiencies in
the parallel code – e.g. due to over-decomposition

Mantle Convection Modeling with Viscoelastic/Brittle Lithosphere

787

The parallel benchmarks were run on a distributed-memory cluster machine with
low-latency communication. In figure 3 we plot the solution time scaled by the number of
processors for parallel runs on different grid sizes. In this case it is clear that the efficiency
of the parallelization using PETSc is extremely good, provided that the problem is
sufficiently large to warrant decomposition. The timings are averaged over several runs,
but the fact that the cluster was heavily loaded during these benchmarks introduced some
scatter into the results which is evident in the figure.

5

Discussion

The abstraction of parallelism provided by building a code upon the PETSc libraries
provides significant benefits in code readability, compactness, flexibility and maintainability. The parallel performance of the resulting code scales very well on a typical
supercomputing cluster. The only issue we have found to date is that the PETSc solvers
need to be chosen carefully to reproduce the efficiency of a solver written especially for
the problem in hand. Further exploration of the issue of general PETSc multigrid solvers
for this problem is needed.

References
Barazangi, M., and Dorman, J., (1969), World seismicity maps compiled from ESSA, Coast and
Geodetic Survey, epicenter data 1961–1967, Bull. Seism. Soc. Am. 59, 369–380.
Karato, S.-I. and Wu, P., (1993), Rheology of the upper mantle:A synthesis, Science, 260, 771–778.
McKenzie, D.P., (1977), Surface deformation, gravity anomalies, and convection, Geophys. J. R.
Astr. Soc., 48, 211–238.
Moresi, L., M¨uhlhaus, H.-B., Dufour, F., Viscoelastic formulation for modelling of plate tectonics,
In Bifurcation and localization in soils and rocks 99. M¨uhlhaus, Dyskin, A. and Pasternak,
E. (ed), (Balkema, Rotterdam, 2001)
Moresi, L., Solomatov, V.S., (1995), Numerical investigations of 2D convection in a fluid with
extremely large viscosity variations, Phys. Fluids, 7, 2154–2162
Moresi, L., Solomatov, V.S., (1998), Mantle convection with a brittle lithosphere: thoughts on the
global tectonics styles of the Earth and Venus, Geophys. J. Int., 133, 669–682.
Moresi, L., Dufour, F., M¨uhlhaus, H.-B. (2002) Mantle convection models with viscoelastic/brittle
lithosphere: Numerical methodology and plate tectonic modeling. Pure Appl. Geophys., 159,
2335–2356.
Moresi, L., Dufour, F., M¨uhlhaus, H.-B. (2003) A lagrangian integration point finite element
method for large deformation modeling of viscoelastic geomaterials. J. Comput. Phys., 184,
476–497.
Moresi, L., Zhong, S.J. , Gurnis, M. (1996), The accuracy of finite element solutions of Stokes’
flow with strongly varying viscosity. Phys. Earth Planet. Inter., 97, 83–94.
Solomatov, V.S., (1995), Scaling of temperature- and stress-dependent viscosity convection, Phys.
Fluids, 7, 266–274.
Sulsky, D., Zhou, S.-J., Schreyer, H.L., (1995), Application of a particle-in-cell method to solid
mechanics, Comput. Phys. Commun. 87, 236–252.
Watts, A.B., Bodine, J.H., Ribe, N.M., (1980), Observations of flexure and the geological evolution
of the Pacific Basin. Nature, 283, 532–537.

