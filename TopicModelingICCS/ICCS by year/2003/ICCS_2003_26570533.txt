Transforming Pseudo-Triangulations
Sergei Bespamyatnikh
Department of Computer Science, University of Texas at Dallas,
Box 830688, Richardson, TX 75083, USA
besp@utdallas.edu
Abstract. We study the problem of transforming pseudo-triangulations
in the plane. We show that a pseudo-triangulation with n vertices can be
transformed into another one using O(n log n) ﬂips only. This improves
the previous bound O(n2 ) [3]. We present an algorithm for computing
a transformation between two pseudo-triangulations in O((f + n) log n)
time where f is the number of ﬂips.

1

Introduction

Pseudo-triangles and pseudo-triangulations have received much attention recently because of applications in visibility [8, 9], ray shooting [8], collision detection [7], and rigid motion [4, 10].
A pseudo-triangle is a simple polygon with exactly three convex vertices. For
a set S of n points in the plane, a pseudo-triangulation T is deﬁned as partition
of the convex hull of S into interior disjoint pseudo-triangulations whose vertices
are points of S (each point of S is a vertex of T and vice versa). A minimum
pseudo-triangulation is a pseudo-triangulation with the least number of edges
among all pseudo-triangulations of S.
One of the operations on triangulations and pseudo-triangulations is the ﬂip,
see Fig. 1. Flips in pseudo-triangulations are used for enumeration all pseudotriangulations deﬁned by a set of vertices [1, 3]. These algorithms imply that a
pseudo-triangulation with n vertices can be transformed to any other using at
most O(n2 ) ﬂips.
In this paper we show that any two pseudo-triangulations with the same set
of n vertices can be transformed into each other by O(n log n) ﬂips only. We
present a simple algorithm for ﬁnding a sequence of ﬂips based on our proof.
The algorithm computes ﬂips in O((f + n) log n) time where f is the number of
ﬂips.
Interestingly, the ﬂip distance between pseudo-triangulations is smaller than
one between triangulations. Hurtado et al. [6] show that there are 2n points in the
plane and two triangulations that require more than (n − 1)2 ﬂips to transform
one into the other.

2

Preliminaries

Let conv (A) denote the convex hull of a set A in the plane. We classify vertices
of a polygon in the plane: convex vertices whose internal angle is less than π
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2657, pp. 533−539, 2003.
 Springer-Verlag Berlin Heidelberg 2003

534

S. Bespamyatnikh

e

d(e)

a)

b)

Fig. 1. a) Flip of triangles. b) Flip of pseudo-triangles.

and reﬂex vertices whose internal angle is greater than π. A pseudo-triangle is a
simple polygon with three convex vertices. A sequence of pseudo-triangle edges
between two convex vertices is called a side of the pseudo-triangle.
We assume that S is a set of n points in the plane in general position (no
three collinear points). Let T be a pseudo-triangulation and e be an edge of T
whose ﬂip introduces an edge e . The edge e is called a dual edge of E, see Fig.
1 b).
An edge e of a pseudo-triangle ∆ is called cross edge for a vertex a if e is on
the side bc and a point of e is visible from a. Note that ∆ can have many cross
edges for a.
Lemma 1. Let abc be a pseudo-triangle of a pseudo-triangulation T and let e be
a cross edge for a. Let ∆ be a pseudo-triangle with vertex a obtained by ﬂipping
e. The dual edge of e is not a cross edge of a in ∆.
Proof. First we note that there can be two pseudo-triangles incident to a after
ﬂipping e, see, for example, Fig. 1 a). In this case the dual edge of e (which is
the common edge of two new pseudo-triangles) is incident to a and is a cross
edge in either pseudo-triangle.
In general, let bcd be the pseudo-triangle that contains the edge e. The union
of pseudo-triangles abc and bcd is a pseudo-quadrangle, a simple polygon with
exactly four convex vertices. The dual edge of e is a part of geodesic path ad in
the pseudo-quadrangle abcd, see, for example, Fig. 1 b). The lemma follows.

Transforming Pseudo-Triangulations

3

535

Canonical Pseudo-Triangulations

In this Section we introduce canonical pseudo-triangulations and show how a
pseudo-triangulation can be transformed into a canonical one.
Deﬁnition 1 Let S be a set of n points in the plane and let p be a vertex of the
convex hull of S. Let σ(p) = (p1 , p2 , . . . , pn ) be a sorted sequence of points such
that
(i) p1 = p, and
(ii) the points p 2 , . . . , pn are sorted in clockwise order around p1 , and
(iii) p 1 p2 and p1 pn are the edges of the convex hull, see Fig. 2.
A canonical pseudo-triangulation with center p, denoted by T (p, S), is deﬁned
recursively as follows. If n = 3 (if n = 1 or n = 2 T (p, S) has no pseudotriangles) then T (p, S) consists of one triangle p1 p2 p3 . Suppose that n ≥ 4.
Let m = n/2 and S1 = {p1 , p2 , . . . , pm } and S2 = {p1 , pm+1 , pm+2 , . . . , pn }.
T (p, S) contains the pseudo-triangles of T (p, S1 ) and T (p, S2 ) and a pseudo-

p10
p6
p13

p4
p7

p11

p5
p3

p12

p9
p8

p14

p2
p15
p1
Fig. 2. Canonical pseudo-triangulation with center p1 .

triangle that remains if conv (S1 ) and conv (S2 ) is removed from conv (S), see
Fig. 2.
Theorem 2. Let S be a set of n points in the plane in general position and let
p be a point of S. Let T be a pseudo-triangulation of S. The canonical pseudotriangulation with center p can be obtained from T using O(n log n) ﬂips.

536

S. Bespamyatnikh

Proof. We apply ﬂips to T and construct the canonical pseudo-triangulation
T (p, S) as follows. If S contains three points then S then they deﬁne the unique
triangle and T contains it. Suppose that S has at least four points. We consider
the sets S1 and S2 from Deﬁnition 1. Let P = conv (S) and Pi = conv (Si ) where
i = 1, 2. Let ∆ be the pseudo-triangle ∆ = P \ P1 ∪ P2 , see Fig. 3. Let pi1 and
pi2 be two convex vertices of ∆ where i1 < i2 .

pi1

pi2
∆
e3
e2

P1

e1

P2

p1
Fig. 3. Edges e1 , e2 , . . . , el .

If an edge e of the pseudo-triangulation T has both endpoints in S1 (or S2 )
then e does not intersect ∆. Thus, if an edge, say e = (pi , pj ), i < j, intersects ∆
then pi is in S1 and pj is in S2 . Therefore e crosses the pseudo-triangle ∆. Let
E = {e1 , e2 , . . . , el } be a set of the edges of T intersecting ∆ where the edges of
E are in the order they intersect the side p1 pi1 , see Fig. 3. Let s be a segment
in ∆ that connect p1 and a point of the segment pi1 pi2 .
First we show that, if the set E is empty then the pseudo-triangle ∆ is present
in T . Suppose that E = ∅. The segment s lies in a pseudo-triangle of T since
none of edges of T intersects s. Let ∆ denote this pseudo-triangle. Clearly, pi1 pi2
is an edge of ∆ . Let Cj where j = 1, 2 be the side of ∆ between p1 and pij . It
remains to show that the pseudo-triangle ∆ contains all the edges of C1 and C2 .
Suppose that an edge e = (pj1 pj2 ) of C1 is not the edge of ∆ . The edge e split
∆ into two polygons, see Fig. 4. Let Q be the polygon that does not contain
s. Q has a convex vertex diﬀerent from pj1 and pj2 (vertex pk in Fig. 4). The
vertices p1 , pi1 and pi2 are convex vertices of ∆ too. Contradiction.
By Lemma 1 the dual edge of e1 does not intersect the segment s. We ﬂip
edges e1 , e2 , . . . , el in this order. Let T be the pseudo-triangulation after l ﬂips.
By the previous argument (E is empty) T contains the pseudo-triangle ∆. Note
that p1 is included in both S1 and S2 . We apply ﬂips recursively to the sets S1
and S2 . Clearly, this yields the canonical pseudo-triangulation T (p, S).

Transforming Pseudo-Triangulations

537

pi2

pi1
∆

s

pj1
pk

C2

Q
pj2

p1
Fig. 4. Edge pj1 pj2 must be in ∆ .

It remains to show that the total number of ﬂips is O(n log n). The number
of ﬂips needed to generate the pseudo-triangle ∆ is l. l = O(n) since the total
number of edges of T is linear in terms of the number of vertices (a better bound
l ≤ 2n − 3 follows from the fact that T is a pseudo-triangulation). Let F (k) be
the number of ﬂips required by our procedure applied to a pseudo-triangulation
with k vertices. Then
F (n) = O(n) + F ( n/2 ) + F ( n/2 + 1), F (1) = F (2) = F (3) = 0.
F (n) = O(n log n) is the solution of the recurrence. The theorem follows.

4

Algorithm

Theorem 3. Let S be a set of n points in the plane in general position and let T
and T be two pseudo-triangulations deﬁned on S. A sequence of f = O(n log n)
ﬂips transforming T into T can be found in O((f + n) log n) time.
Proof. Let T and T be two pseudo-triangulations deﬁned on the same set of
vertices S. We show how to compute a sequence of ﬂips that transforms T
into T . Let p be a point on the convex hull of S. We apply ﬂips according to
Theorem 2. The algorithm computes a sequence of ﬂips to transform T into the
canonical pseudo-triangulation T (p, S) and a sequence of ﬂips to transform T
into the canonical pseudo-triangulation T (p, S). Combining these two sequences
we obtain the transformation of T into T .
The main computational diﬃculty is the ﬁnding of a dual edge. A simple
linear time algorithm leads to O(f n) total running time which can be superquadratic. We use an approach from [1] for maintaining a pseudo-triangulation.
It is based on a data structure for storing a planar subdivision [5]. Applied to
pseudo-triangulations the data structure has the following components:
– faces. The faces are pseudo-triangles. With each face we store pointers to its
sides.

538

S. Bespamyatnikh

– sides of pseudo-triangles. Each side is a sequence of edges that form a convex
chain. We store the chain edges in counterclockwise order. We associate a
binary tree with every chain. With each side we store a pointer to its pseudotriangle.
– edges. An edge is pair of vertices and we store pointers to these vertices. An
edge is incident to either one pseudo-triangle (if its edge of conv (S)) or two
pseudo-triangles (otherwise). We keep two pointers for these sides.
– vertices. Each vertex is stored one time. With each vertex we store its incident
edges.
It is shown [1] that a dual edge can found in O(log n) time and the data structure
can be maintained in O(log n) time per ﬂip. Therefore the total time for ﬂipping
edges and maintaining the data structure is O(f log n).
It remains to show how to compute the ﬂipping edges. The algorithm for
ﬁnding ﬂips is recursive we show it for one recursive call. First we compute the
segment s that divides vertices of S into two subsets of almost equal size. s has
the median slope and the median can be found in linear time [2].
We compute the edges e1 , e2 , . . . , el crossing the segment s by checking every
edge of T . In order to ﬁnd the order of the edges we compute incident sides of
pseudo-triangles and the pseudo-triangles traversed by s. This allows us to ﬁnd
the order in linear time.
Let t(n) be the total time for computing ﬂipping edges. Then t(n) = O(n) +
2t(n/2) and the theorem follows.

5

Conclusion

We presented an algorithm that transforms a pseudo-triangulation to another
one. The number of ﬂips produced by the algorithm if f = O(n log n) where n
is the number of vertices. The running time of the algorithm is O((f + n) log n).
An interesting open question is to close the gap between the trivial lower bound
f = Ω(n) and the upper bound f = O(n log n) for the smallest number of ﬂips
f.

References
1. S. Bespamyatnikh. Enumerating pseudo-triangulations in the plane. In Proc. 14th
Canad. Conf. Comput. Geom., pp. 162–166, 2002.
2. M. Blum, R. W. Floyd, V. Pratt, R. L. Rivest, and R. E. Tarjan. Time bounds
for selection. J. Comput. Syst. Sci., 7:448–461, 1973.
3. H. Br¨
onnimann, L. Kettner, M. Pocchiola, and J. Snoeyink. Counting and enumerating pseudo-triangulations with the greedy ﬂip algorithm. In Fall Workshop
on Comput. Geometry, 2001.
4. R. Connelly, E. D. Demaine, and G. Rote. Straightening polygonal arcs and convexifying polygonal cycles. In Proc. 41th Annu. Sympos. on Found. of Computer
Science, pp. 432–442, 2000.

Transforming Pseudo-Triangulations

539

5. M. de Berg, M. van Kreveld, M. Overmars, and O. Schwarzkopf. Computational
Geometry: Algorithms and Applications. Springer-Verlag, Berlin, Germany, 2nd
edition, 2000.
6. F. Hurtado, M. Noy, and J. Urrutia. Flipping edges in triangulations. Discrete
Comput. Geom., 22(3):333–346, 1999.
7. D. Kirkpatrick, J. Snoeyink, and B. Speckmann. Kinetic collision detection for
simple polygons. In Proc. 16th Annu. ACM Sympos. Comput. Geom., pp. 322–
330, 2000.
8. M. Pocchiola and G. Vegter. Pseudo-triangulations: Theory and applications. In
Proc. 12th Annu. ACM Sympos. Comput. Geometry, pp. 291–300, 1996.
9. M. Pocchiola and G. Vegter. Topologically sweeping visibility complexes via
pseudo-triangulations. Discrete Comput. Geom., 16(4):419–453, 1996.
10. I. Streinu. A combinatorial approach to planar non-colliding robot arm motion
planning. In Proc. 41st Annu. IEEE Sympos. Found. Comput. Sci., pp. 443–453,
2000.

