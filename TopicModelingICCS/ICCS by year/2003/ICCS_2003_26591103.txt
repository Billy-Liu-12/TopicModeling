Active Network Approach to Grid Management
Alex Galis1 , Jean-Patrick Gelas2 , Laurent Lef`evre2 , and Kun Yang1
1

University College London, Department of Electronic and Electrical Engineering
Torrington Place, London WC1E 7JE, UK
agalis@ee.ucl.ac.uk, kyang@ee.ucl.ac.uk
2
INRIA RESO / LIP, Ecole Normale Sup´erieure de Lyon
46, all´ee d’Italie, 69364 Lyon Cedex 07, France
Jean-Patrick.Gelas@ens-lyon.fr, Laurent.Lefevre@inria.fr

Abstract. Due to the large-scale Grid environments and their rapid expansion, both in Grid and network resources, it is getting imperative to
provide Grid management mechanisms that can enable Grid Computing
to adapt to various application requirements in a ﬂexible and automated
way. This paper proposes an Active Grid architecture and middleware for
rapid and autonomic GRID service creation, deployment, activation and
management. Proposed solutions are based on active networks (Tamanoir
Execution Environment) which support dynamic Grid services deployment for the management of Grid architectures.

1

Introduction

The widespread Internet is the living environment of Grid computing. As described in [10], a basic premise of Open Grid Services Architecture (OGSA) is
that everything is represented by a service, which is a network-enabled entity
that provides capability to users. In addition there is a network paradigm shift
dictated by the need of rapid and autonomic service creation, deployment, activation and management combined with context customization and customer
personalization. Such motivation can be traced in diﬀerent organizations, fora,
and research activities as well as market forces. This paper aims to contribute to
the state of the art of Grid research ﬁeld by focusing on network, especially the
enhancement of the network by using active networks technology to open up the
functionalities of networks. And particularly, the policy-based Grid management
largely maximizes the eﬃciency of this enhancement.
In a highly connected Internet world the needs for integrated services across
distributed, heterogeneous, dynamic domains of diﬀerent resources are getting
more imperative. The provision of integrated services is very challenging due
to the large varieties of the underlying proprietory platforms and their management systems. Research on Grid computing was originated to cope with the
ﬁrst challenge, which has resulted in a long list of Grid supporting platforms,
among which Globus [13] attracts more attention and has been widely adopted
as a Grid technology solution for scientiﬁc and technical computing [10]. But
Globus Toolkit is less concerned about the underlying network issues that are
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2659, pp. 1103–1112, 2003.
c Springer-Verlag Berlin Heidelberg 2003

1104

A. Galis et al.

vital to a successful Grid environment. On the other hand, the complexity of
Grid supporting environment, together with the various resources, also cast serious management issues. All these challenges must be addressed intelligently
and eﬀectively. This paper tends to initially practice the applicability of active
networks technology to Grid supporting environment and the use of policy-based
management method to Grid management.
While Active Network research has precisely tackled that problem domain
in ﬁxed and wireless network environments, the particular requirements of Grid
network services in terms of management (OS heterogeneity, dynamic topology,
eﬃcient failure detection ,fault tolerance) and data transport (reliable collective
communications, Quality of Service, streams adaptation) have not suﬃciently
been taken into account. Tamanoir [11] aims to provide such a case study by
focusing on the signiﬁcant active network support for Grid computing from the
network engineering’s point of view.
Most challenging problems in Grid context come from heterogeneity of Grid
resources and network elements, sheer largeness and inter-domain complexities
of programming environment and service deployment [9]. These problems can be
addressed by using active network technology. This paper proposes solutions for
rapid and autonomic GRID network services creation, deployment, activation
and management based on an Active Grid architecture [12].
The paper is structured as follows. Based on the discussion in this section,
Section 2 analyses the requirements for Grid Management and Services that highlights the use of policy-based management method for overall Grid management
and the use of active networks technology for speeding up and opening up the
network layer. Then based on the analysis of OGSA, an active Grid architecture
(together with its PBM middleware and active network middleware) is described
in Section 3. Section 4 details the active networks support for policy-based Grid
management and active networks support for Grid middleware services. And
ﬁnally, Section 5 concludes the paper.

2
2.1

Requirements for Grid Network Services and
Management
Requirements for Grid Network Services

A distributed application running in a Grid environment requires various kinds
of data streams: Grid control streams and Grid application streams. First of all,
we can classify two kinds of basic Grid infrastructures:
Meta cluster computing. A set of parallel machines or clusters are linked together with IP networks (Internet) to provide a very large parallel computing resource. Grid environments like [13] or [3] are well designed to handle meta-cluster
computing session to execute long-distance parallel applications. We can ﬁnd various network needs for meta-clustering sessions : Grid environment deployment

Active Network Approach to Grid Management

1105

(for OS heterogeneity support, dynamic topology re-conﬁguration, fault tolerance), Grid application management (collective communications like multicast
and gather for deployment of binaries of applications, parameters and collection
of results of distributed tasks), Grid support (collection of data control, node
synchronization, node workload information). The information exchanged is also
needed to provide high-performance communications between nodes inside and
outside the clusters.
Large scale computing. These environments usually provide support on thousand of connected machines (like [14], [1] or [15]). We can ﬁnd various network
needs for large scale computing sessions: Grid environment deployment (dynamic
enrollment of unused machines), Grid application deployment (fault tolerance
support, check-pointing protocols), Grid support (workload information of subscribed machines). These two Grid infrastructure can support various usage :
computational Grid, Data Grid...
2.2

Policy-Based Grid Management

End-to-end Grid services can be very complex in the Grid computing environment, and this raises the increasing requirement for the management of Grid
system as a whole. Most current researches with this goal are carried out from
the Grid resources themselves’ point of view, with examples as Condor-G system [14] and Nimrod-G Grid resource broker [15]. The research towards ﬂexible
Grid Services from the network point of view has yet been signiﬁcantly taken
into consideration. But network, as the transporting media for Grid services,
is critical to guarantee fully eﬃcient Grid services. Obviously, the bad quality
of service in the networks can signiﬁcantly obstruct the eﬃcient provisioning of
Grid services. Due to the complexity of Grid system, and the trend of getting
more complex in both hardware/software and service requirements, the management of the overall Grid system itself and the services it provides in a ﬂexible
way is getting more and more important. It is time-consuming and error-prone
for Grid administrator or resource manager/broker to conﬁgure his system manually. And it is extremely hard for him to conﬁgure his local resource while
considering other domains in the whole Grid system.
Policy-based management (PBM) is a good candidate for such complex management environment. Policies are seen as a way to guide the behaviour of a network or distributed system through high-level declarative directives. An example of policy is as follow: IF (sourceHost==Camden) and (destHost==skyﬁre)
THEN provideGoldService, which speciﬁes the QoS for speciﬁc user. In comparison with previous traditional network management approaches, such as [5]
or [4], PBM oﬀers a more ﬂexible, customizable management solution that allows controlled elements to be conﬁgured or scheduled on the ﬂy, for a speciﬁc
requirement tailored for a customer [8],[16]. The aim of PBM is to apply integrated management system so that system management, network management,
and service management can cooperate in Grid computing. PBM method has

1106

A. Galis et al.

been widely used in the IP network management ﬁeld, whereas the application
of PBM to the Grid management ﬁeld has yet attracted much attention. Yang,
et al [17] presented a policy-based Grid management architecture supervising
the overall Grid management, but without considering the Grid services.
2.3

Active Network for Grid Management and Grid Services

Based on the requirement analysis given above, we can see that the requirements
cast by Grid services can be satisﬁed when dynamic injection of new functionalities into current Grid architecture is enabled; whereas the ﬂexibility promised by
PBM doesn’t come without the automation of policy transit, policy enforcement
and code downloading. Active Networks (AN), as an enabling technology, have
been proposed as an architectural solution for the fast and ﬂexible deployment
of new network services. The basic idea of active networks is to enable third parties (end users, operators, and service providers) to inject application-speciﬁc
services (in the form of code) into the networks. Applications are thus able to
utilize these services to obtain required support in terms of element and network
management resources, thus becoming network-aware. This code is dispatched
and executed at designated (active) nodes performing operations to change the
current state of the node. Active network is distinguished from any other networking environment by the fact that it can be programmed. In our approach,
this programmability is provided by the management policies.
To support most of Grid applications, active nodes must deal with the two
main Grid conﬁgurations:
– Meta cluster computing : in this highly coupled conﬁguration, an active
node is mapped on network head of each cluster or parallel machine. This
node manages all data streams coming or leaving a cluster. All active nodes
are linked with other AN mapped at backbone periphery. An Active node
delivers data streams to each node of a cluster and can aggregate output
streams to others clusters of the Grid.
– Large scale computing : in this loosely coupled conﬁguration, an active node
can be associated with each Grid node or can manage a set of aggregated
Grid nodes. Hierarchies of active nodes can be deployed at each network heterogeneity point. Each AN manages all operations and data streams coming
to Grid Nodes: subscribing operations of voluntary machines, results gathering, nodes synchronization and check-pointing. For both conﬁgurations,
active nodes will manage the Grid environment by deploying dedicated services adapted to Grid requirements: management of nodes mobility, dynamic
topology re-conﬁguration and fault tolerance.

3
3.1

Active Grid Architecture and Its Management
Overall Architecture

Even though Open Grid Services Architecture (OGSA) is still in its draft and
continues to be revised, it has attracted a lot of attention and is regarded as

Active Network Approach to Grid Management

1107

a promising means for providing pervasive services across the Internet. Building on concepts and technologies from the Grid and Web services communities,
OGSA architecture deﬁnes a uniform exposed service semantics (the Grid service) and standard mechanisms for creating, naming, and discovering transient
Grid service instances; it also provides location transparency and multiple protocol bindings for service instances and supports integration with underlying
native platform facilities [10]. Due to its many beneﬁts, OGSA is adopted in
this paper as a guideline for Grid services. It is further integrated with both
policy-based management method and active network technology thus resulting
an active Grid architecture as depicted in Figure 1. This architecture aims to
provide mechanisms automatically adapting Grid network elements to diﬀerent
Grid services and the management of the Grid system itself.
In this paper, the method to add programmability to Grid management is to
extend the widely used Grid supporting tool, Globus, which is also the powerful
supporting tool for OGSA [10]. Both policy-based Grid management middleware
and active network middleware can be used by Grid supporting environment to
facilitate the corresponding functionality so as to achieve better usage and management of diﬀerent Grid resources such as massive storage resources, computing
resources and special scientiﬁc instruments.

Grid Network
Administrator

Grid
Applications

Policy-based Active Grid Management &
Services GUI/API
XML:
UCL
Policy1

XML:
Storage
Scheduler

Tamanoir Active Node

MA
XML Interpreter
EE
Policy-based Grid Management Middleware

Active Grid
Environment

Grid Supporting Envirnment ( Globus )

Scientific Instruments

Storage
Resources

Computional Resources

Fig. 1. Overall Active Grid Architecture

In OGSA, the user interface to an OGSA-enabled system will typically be
structured as a registry, one or more factories, and a handle mapper service. Each
factory is recorded in the registry, to enable clients to discover available factories. When a factory receives a client request to create a Grid service instance,
the factory invokes hosting-environment-speciﬁc capabilities to create the new

1108

A. Galis et al.

instance, assigns it a handle, registers the instance with the registry, and makes
the handle available to the handle mapper service. The implementations of these
various services map directly into local operations [10].
Active nodes are based on the Tamanoir Execution Environment. The
Tamanoir [11] suite is an active network framework that primarily addresses
the network management challenges. Based on standards, Tamanoir can easily
be deployed in Grid networks.
3.2

Policy-Based Management Middleware

Policy-based Grid management middleware is part of the Active Grid Management Environment and is used to control and manage the Grid environment by
deﬁning new policies, e.g., to apply a new DiﬀServ shaper, or modifying existing
policies, e.g., to add a new massive storage accessing role.
In order to deploy PBM technology, a standardization process should be
followed to ensure the inter-operability between equipment from diﬀerent vendors and, furthermore, PBM systems themselves from diﬀerent developers. The
framework and policy information model deﬁned by Internet Engineering Task
Force (IETF) Policy Framework Group [2] gains wider popularity and is adopted
as the baseline for the PBM system used in this paper.

Fig. 2. PBM Middleware Architecture

As illustrated in Figure 2 from top down, the PBM system for Grid management mainly includes four components: policy management tool, policy repository, Policy Decision Point (PDP) and Policy Enforcement Point (PEP). Policy
management tool serves as a policy creation environment for the administrator

Active Network Approach to Grid Management

1109

to deﬁne/edit/view policies in a high-level declarative language. After validation, new or updated policies are translated into a kind of object oriented representation or so-called information objects and stored in the policy repository.
The policy repository is used for the storage of policies in the form of LDAP
(Lightweight Directory Access Protocol) directory. Once the new or updated
policy is stored, signalling information is sent to the corresponding PDP, which
then retrieves the policy and enforces it on PEP. There is a need of a transport
protocol for communication between PDP and PEP so that PDP can send policy rules or conﬁguration information to PEP, or read conﬁguration and state
information from the device. A wide range of protocols can be used here, such
as SNMP, CMIP or COPS (Common Open Policy Service), among which COPS
is becoming the standard.
A draft version of object oriented information model has been designed to
represent the Grid policies. This information model is based on the IETF PCIM
(Policy Core Information Model) [6] but with addition of Grid resources management information and deduction of some rarely used classes to make the whole
information model easy to implement. Due to the space limitation, this model
will be introduced in this future paper. Furthermore, policies are represented by
XML during its transit due to XML’s built-in syntax check and its portability
across the heterogeneous platforms.
All PDPs, such as DiﬀServ PDP and Grid Resource PDP, are integrated with
Grid supporting tool, Globus [13]. There is also a PDP manager to coordinate
the cooperation among diﬀerent PDPs so as to support some complex Grid
services which requirement the cooperation of more than one PDP. More detailed
information about this PBM middleware was described in [16]
Various services for Grid application can be introduced by deﬁning new policies, e.g., to apply a new massive storage scheduler, or modifying existing policies.
Then the Java classes for fulﬁlling these policies, which abide by class hierarchy and naming rules of policy information model developed within this system,
can be instantiated by storage PDP according to these policies. And this Java
bytecode is referenced into Tamanoir active packets and is delivered to the corresponding active nodes to fulﬁll the management tasks.

4
4.1

Active Networks Support
Active Networks Supporting Environment: Tamanoir

The Tamanoir [11] suite is a complete software environment dedicated to deploy
active routers and services inside the network. Tamanoir Active Nodes (TAN)
provide persistent active routers, which are able to handle diﬀerent applications
and various data stream (audio, video,..) at the same time (multi-threaded approach). The both main transport protocol TCP and UDP are supported by
TAN. The Execution Environment (EE) relies on a demultiplexer receiving active packets and redirecting these packets towards the adapted service in function
of a hash key contained in packets header. New services are plugged in the TAN
dynamically.

1110

A. Galis et al.

Grid active services can be deployed on a Tamanoir node on various levels :
– in kernel space for lightweight management services without strong memory
requirements. Tamanoir allows the deployment of small active modules inside
the Linux kernel by using NetFilter toolbox;
– in user space for management and data services requiring storage facilities.
Tamanoir execution environment is embedded in a Java Virtual machine.
Active services are executed inside distinct Java threads;
– in clustered architecture for data active services requiring high processing
power and storage facilities. Tamanoir relies on the Linux Virtual Server
(LVS) where a dedicated front-end node distributes streams among backends nodes running Tamanoir execution environment.
4.2

Active Networks Support for Dynamic Service Deployment

The injection of new functionalities, called services, is independent from the data
stream: services are deployed on demand when streams reach an active node,
which does not hold the required service. Two services deployment are available:
by using a service repository, where TANs send all requests for downloading
required services, by deploying service from TAN to TAN (TAN query the active
node that sends the stream for the service). In order to avoid single point of
failure service repository can be distributed among sites.
Until the required service be downloaded and ready to process the data
stream eﬃciently we provide a cache mechanism in order to remove any overhead from the sender point of view. This data cache inside the network is done
with IBP technology (which provides best eﬀort data storage server called IBP
depots[7]).
TAN

TAN

core network

tcp/udp

tcp/ip

tp
ht
l
co

o
ot

pr
: ANEP packet (tcp or udp)
: service transport (tcp)
: service request (tcp)

Fig. 3. Active Grid services deployment

Active Network Approach to Grid Management

4.3

1111

Supporting High Performance Grid Management and Data
Streams

Tamanoir execution environment has been extensively experimented on local
100Mbits and Gbit platforms.
With Grid active service running in user space, experiments demonstrate
that one Tamanoir active node can support 100Mbits of active packets in several
streams. Reactivity and latency of Grid management services are also improved
when running in active node kernel space.
Experiments of Tamanoir on Gbit networks show the ability to support large
number of active services deployed on TAN and to provide raw performances
suﬃcient for high performance Grid around backbones. With simpliﬁed active
packets encapsulation, active services running in user space support around 300
Mbits of bandwidth on a GigaEthernet platform. In order to fully support Gbit/s
data streams, Tamanoir active node can be deployed on a cluster with LVS.

5

Conclusions and Future Works

This paper contributes to the deﬁnition and development of the active Grid
architecture and technologies needed for rapid and autonomic GRID service creation, deployment, activation and management. It analyses the requirements for
Grid Management and Services that highlights the use of policy-based management method for overall Grid management. It highlights the use of active
networks technology in Grids for opening up the network layer by the use of
the Tamanoir active network node systems. An OGSA compatible active Grid
architecture, together with its Policy Based Management middleware and active
network middleware is proposed and currently under development.
Experiments of Tamanoir show that this high performance execution environment can support Grid management streams and data active streams for
Grid deployed around high performance backbones.
By providing support for Grid network services, the active network infrastructure becomes a part of Grid resources (like computational or storage resources).
We are currently designing a complete framework for eﬃcient management of
active nodes and active services deployment.
Acknowledgements. This paper partly describes work in progress in the context of the EU IST project Context. This research is also partly supported by
French RNTL Etoile project and ACI-GRID.

References
[1]
[2]
[3]
[4]

Entropia : high performance internet computing. http://www.entropia.com.
Ietf policy workgroup. http://www.ietf.org/html.charters/policy-charter.html.
Netsolve project. http://icl.cs.utk.edu/netsolve/.
Tina. www.tinac.com.

1112

A. Galis et al.

[5] Tmn. www.itu.int/TMN/.
[6] Ietf pcim draft, 2002. http://www.ietf.org/internet-drafts/draft-ietf-policy-pcimext-08.txt.
[7] Alessandro Bassi, Jean-Patrick Gelas, and Laurent Lef`evre. Tamanoir-IBP :
Adding Storage to Active Networks. In Fourth Annual International Workshop
on Active Middleware Services (AMS 2002), 11th IEEE International Symposium
on High Performance Distributed Computing, pages 27–34, Edinburgh, Scotland,
jul 2002. IEEE Computer Society. ISBN 0-7695-1721-8.
[8] N. Damianou, N. Dulay, E. Lupu, and M. Sloman. The ponder speciﬁcation
language. In Workshop on Policies for Distributed Systems and Networks (Policy2001, HP Labs Bristol, jan 2001.
http://www.doc.ic.ac.uk/ mss/Papers/Ponder-Policy01V5.pdf.
[9] I. Foster, C. Kesselman, and S. Tuecke. The anatomy of the grid: Enabling scalable virtual organizations. International Journal of High Performance Computing
Applications, 15(3):200–222, 2001.
http://www.globus.org/research/papers/anatomy.pdf.
[10] Ian Foster, Carl Kesselman, Jeﬀrey M. Nick, and Steven Tuecke. The physiology
of the grid: An open grid services architecture for distributed systems integration.
In Open Grid Service Infrastructure Working Group (OGSI-WG) of Global Grid
Forum, 2002. http://www.ggf.org/ogsi-wg/drafts/ogsa draft2.9 2002-06-22.pdf.
[11] Jean-Patrick Gelas and Laurent Lef`evre. Tamanoir: A high performance active
network framework. In C. S. Raghavendra S. Hariri, C. A. Lee, editor, Active
Middleware Services, Ninth IEEE International Symposium on High Performance
Distributed Computing, pages 105–114, Pittsburgh, Pennsylvania, USA, aug 2000.
Kluwer Academic Publishers. ISBN 0-7923-7973-X.
[12] Jean-Patrick Gelas and Laurent Lef`evre. Towards the design of an active grid. In
Lecture Notes in Computer Science, editor, Computational Science - ICCS 2002,
volume 2230, pages 578–587, Amsterdam, The Netherlands, apr 2002. ISBN 3540-43593-X.
[13] Foster I. and Kesselman C. The Grid: Blueprint for a New Computing Infrastructure. Morgan Kaufmann, 1999. Globus: A Toolkit-Based Grid Architecture.
[14] Frey J., Tannenbaum T., Foster I., Livny M., and Tuecke S. Condor-g: A computation management agent for multi-institutional grids. In Proceedings of the Tenth
IEEE Symposium on High Performance Distributed Computing (HPDC10), San
Francisco, USA, aug 2001.
[15] Buyya R. Nimrod/g: An architecture for a resource management and scheduling
system in a global computational grid. In Proc. 4th Int’l Conf. on High Performance Computing in Asia-Paciﬁc Region (HPC Asia 2000), Los Alamitos, USA,
2000. IEEE CS Press.
[16] Kun Yang, Alex Galis, Telma Mota, and Stylianos Gouveris. Automated management of ip networks through policy and mobile agents. In Proceedings of Fourth
International Workshop on Mobile Agents for Telecommunication Applications MATA2002, pages 249–258, Barcelona, Spain, oct 2002. Springer. LNCS-2521.
[17] Kun Yang, Alex Galis, and Chris Todd. Policy-based active grid management
architecture. In Proceedings of 10th IEEE International Conference on Networks
(ICON02), pages 243–248, Singapore, aug 2002. IEEE Press. ISBN: 0-7803-75335.

