Procedia Computer Science
Volume 51, 2015, Pages 1052–1061
ICCS 2015 International Conference On Computational Science

Agent-based approach to WEB exploration process
Andrzej Opalinski1 , Edward Nawarecki1,3 , and Stanislawa Kluska-Nawarecka2,3
1

AGH University of Science and Technology, Krakow, Poland
andrzej.opalinski@agh.edu.pl, nawar@agh.edu.pl
2
Foundry Research Institute, Krakow, Poland
nawar@iod.krakow.pl
3
University of Computer Sciences and Skills, Lodz, Poland

Abstract
The paper contains the concept of agent-based search system and monitoring of Web pages. It
is oriented at the exploration of limited problem area, covering a given sector of industry or
economy. The proposal of agent-based (modular) structure of the system is due to the desire
to ease the introduction of modiﬁcations or enrichment of its functionality. Commonly used
search engines do not oﬀer such a feature.
The second part of the article presents a pilot version of the WEB mining system, representing a simpliﬁed implementation of the previously presented concept. Testing of the implemented
application was executed by referring to the problem area of foundry industry.
Keywords: Web mining, agent system, patterns of web pages, monitoring, assessment of the adequacy

1

Introduction

The evolution of the Internet to WEB 2.0 model has led to an avalanche growth in the amount
of information placed on the network. Increased access to the Internet and reduced cost of
these services further contributed to this state. Recent studies show that almost 2.4 milliard
people have access to the Internet[11]. Unfortunately, increasing the amount of data placed in
the network does not go hand in hand with the improvement of the quality. On the contrary,
it causes certain deterioration, which in the literature is called a phenomenon of ”infobesity”
[1]. In this situation, to ﬁnd valuable information in large network resources poses serious
problems and requires a huge amount of time or the use of specialised algorithms [10]. On
the market of products which allow searching for information in the WEB resources, there
are many general-purpose and specialised solutions. However, when it comes to searching for
and monitoring of domain speciﬁc information (industry domain or public safety aspects) from
specialised sources, the oﬀered functionalities often prove inadequate. It is an inspiration for
development of solutions, in order to facilitate selective search for information from particular
domain, and at the same time to provide with a ﬂexible source (domain, portal, web forum)
for exploration algorithms.
1052

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.263

Agent-based WEB exploration

Opalinski, Nawarecki and Kluska-Nawarecka

The paper presents the concept of a system oriented at the WEB exploration in a speciﬁc
problem area, using an agent-based approach. It also presents selected results of experiments
obtained with a pilot implementation of the proposed solution, which allows interoperability of
system modules and their adaptation to the (source speciﬁcation) speciﬁc conditions existing
in source environment.

2

Existing Solutions

To ﬁnd information in the WEB resources we can use a wide range of solutions oﬀered, considering them in terms of the distribution model, as dedicated systems, industry directories, and
services such as SaaS (Software as a Service).
In terms of the functionality oﬀered and the data on which they operate, the existing
solutions can be divided into four main groups: universal search engines, page directories,
information monitoring services to the Web, WEB search (crawl) systems. Each
group of solutions has diﬀerent functionalities, principles of operation and range of supported
data.
A common feature of universal search engines is that theoretically they are free from any
limits when it comes to the range of the search for data. Search engines are assumed to be
responsible for covering all the relevant WEB information resources, and therefore they require
huge ﬁnancial outlays for equipment and infrastructure, which means that the market is capable
of oﬀering only a small number of such solutions. Although universal search engines usually
have the ability to add additional search options, such as logical operators, types of documents,
or time and domain ranges, they only allow creation of queries in a mode as deﬁned in advance
by the administrators of the site. These features make the universal search engines the tool
that may be insuﬃcient in the case of a search in the WEB resources for sectoral information
in special areas of the industry.
The second group of solutions, which can be useful when searching for sectoral industry
information on the Internet, are directories of web pages (www.yellowpages.com,www.dmoz.
org) that contain in their resources information and links to websites of companies, institutions,
manufacturers, suppliers of materials (www.industrystock.org). Most of the web directories
have a built-in search engine, allowing search for speciﬁc items within their resources. However,
the search is normally based on tags and keywords that have been assigned to an entry in
the directory, and does not take into account the content provided in the source resources
of the domain of a given entity. In addition, most web directories are commercial sites, and
presentation of their content, the amount of contained information and the order of results
returned usually depend on the purchase of appropriate option by individual companies and
institutions located in the service resources. Another drawback of such solutions is the low
dynamics of the content of the resources, usually changing only by the service administrator
intervention, or on update of entries by the users of the system[3].
Another group of solutions, which might be used to search for information on the Internet,
are network monitoring services oﬀered by specialised companies operating in this ﬁeld, such
as Cision (www.cision.com) or NewtonMedia (www.newtonmedia.com). They oﬀer services
to monitor major news portals and user-deﬁned domains, based on the search of terms and
keyword sets. By the mere principle of operation, however, these are closed and paid solutions,
and additionally, one of the stages in the operation of processing the information is human
veriﬁcation of the returned data, necessary to ensure high-quality information.
The last type of tools that could be used in the WEB site search for information are the
Internet searching systems (crawlers) [2][8][9]. Here one can distinguish both closed and com1053

Agent-based WEB exploration

Opalinski, Nawarecki and Kluska-Nawarecka

mercial solutions, and free and open systems. Examples of closed systems include Fast Search
Web Crawler, which does not oﬀer the possibility to expand and implement ones own data
processing components found on the web, or Web Fountain which is a platform for analysis and
processing of unstructured data, subscribed and licensed on a commercial basis [4]. The group
of open systems includes projects such as Apache Nutch[6], DataparkSearch[5] and Heritix[7],
allowing search and indexing of text data within the selected domains.
Assessing the above characteristics from the point of view of the needs of scientiﬁc institutions or industrial users, specialising in work with a speciﬁc problem area, it can be concluded
that the existing arrangements for the acquisition of information from the Web are oversized on
the one hand, while on the other hand, they do not provide a particularly desired functionality.
The general requirements of the members of a given class include:
• no need to create specialised infrastructure and costly hardware solutions,
• freedom to choose a speciﬁc area of exploration and the ability to create own procedures,
which take into account the speciﬁc nature of the documents sought,
• the modular structure of the system allowing easy modiﬁcation of the search area or
applied decision algorithms.
With a more detailed analysis, these requirements translate into the following functionalities:
• the ability to deﬁne a set of Internet domains, which are the subject of subsequent search
and ones own patterns for searching, using the dedicated search model,
• the ability of cyclic monitoring of selected resources and detect changes in the content of
the pages,
• the ability to deﬁne ones own algorithm sorting results returned by the system.
One of the interesting solutions that enables meeting the above demands is agent system,
which naturally has a modular structure and provides ease of reconﬁguration and the introduction of adaptive procedures.

3

The Concept and Operation of the System

The considered system based on the agent paradigm is designed for eﬃcient procurement of
web pages on a particular problem area, said pages being the result of exploration of indicated
WEB domains.
Schematic diagram of the proposed solution is shown in Figure 1, wherein the types (kinds)
of agents used and links existing between them have been speciﬁed.
Input data entered during initialisation of the system operation are:
• collection of domains (D), in which one can search for D = (d1 , ..., dI ), deﬁned by the
addresses (URL);
• a set of keywords that characterise the area of search, as deﬁned by domain experts
K = (k1 , ..., kI );
• deﬁnition of the Search Model (SM ), which is used to generate patterns (Wi ), which will
always be attributed to speciﬁc domains undergoing exploration.
1054

Agent-based WEB exploration

Opalinski, Nawarecki and Kluska-Nawarecka

Figure 1: Agent-based system structure

In the presented approach, this deﬁnition has the form of a quadruple:
SM ≡ (K, R, L, V )

K
R
L
V

(1)

where:
is the set of keywords ki ∈ K, i = i, ..., I,
is the required coverage of set K (expressed in %),
is the range (mode) of the search for group of keywords (ALL, SEGMENT, distance),
is the mode of including the inﬂectional forms (varieties) of keywords (0 or 1).

According to this deﬁnition, patterns are generated, which are next assigned to the individual
domains:
Wi =< Ki , Ri , Li , Vi >→ di

(2)

where:
Ki ∈ K - is the subset of keywords associated with the i-th domain (selected at random or by
expert indication),
Ri , Li , Vi - are the parameters assigned to the i-th domain whose values are determined in an
arbitrary manner.
The above statements were adopted as a starting point to determine the types of agents
distinguished in the system and to specify actions led by those agents.
1055

Agent-based WEB exploration

3.1

Opalinski, Nawarecki and Kluska-Nawarecka

Initialisation of the System Operation

The Manager Agent (AM), as part of the system initialisation, receives data deﬁning a
set of domains D = (dj (address)), j = 1, ..., J and a set of keywords ki = wordi , i = 1, .., I, and
the deﬁnition of the search model SM .
Actions performed by this agent as part of the initiation include:
• generating patterns Wi and assigning to them the domains dj , where the pattern Wi is
ﬁxed for a certain period of time Tk , k = 1, .., K, T = K ∗ Tk , (T - exploration horizon),
• creating domain agent (AD) with the introduction of the attributes: di , Wi (Tk ).
The Domain Agent (AD), ushering the system operation transmits to Crawler Agent (AC)
information on a set of searched domains (di (Tk )) ⊆ D in a given time interval Tk and using
patterns (di (Tk )) → (Wi (Tk )) valid in this respect.
The Crawler Agent (AC) does a search in the domain di in a given time interval Tk ,
transferring next the obtained pages to the AD agent for ﬁnal veriﬁcation.

3.2

Cyclic Operation of the System

Web pages after pre-processing are forwarded by agent AC to agent AD in the form of a string:
S1 (di , Wi , Tk ), S2 (dm , Wm , Tk ), ...with : di , dm ∈ D, Wi , Wm ∈ W, Tk ∈ T

(3)

The domain agent (AD) makes ﬁnal classiﬁcation of the successive pages according to the
following algorithm:
Algorithm 1
FOR EACH segment IN html_content
FOR EACH word IN segment
FOR EACH pattern IN patterns_list
update_pattern(stem(word))
ENDFOR
ENDFOR
FOR EACH pattern IN patterns_list
IF (is_found()) THEN
IF (already_found(pattern, segment)) THEN
SKIP;
ELSE
return_result(pattern)
ENDIF
ELSE
reset(pattern)
ENDIF
ENDFOR
ENDFOR

1056

Agent-based WEB exploration

Opalinski, Nawarecki and Kluska-Nawarecka

where:
html_content is the source of the searched HTML page,
pattern_list is the list of user-deﬁned patterns,
stem() is the determination of the basic form (stem) of the expression,
update_pattern() is the method of updating the state of matching to a given pattern,
is_found() is statement whether the pattern matches the content crawled so far,
already_found() is statement whether the result was found for the ﬁrst time or the content
of its segment has changed,
return_result() is the return of the result by the system,
reset() is resetting of the benchmark before viewing the next segment.
The result of the operation of this algorithm is implementation of a sequence of the AD
actions, involving submitting the veriﬁcated pages to the database (DB) and the action of
sending to the Information Agent (AI) a message about the number of pages currently
obtained from the following domains di ∈ D using various patterns Wi ∈ W .
The eﬀectiveness of the system operation to a large extent depends on the proper ﬁt of
patterns Wi to the speciﬁc character of the domain di , in which the exploration is conducted.
At the stage of initialisation of the system, a set of keywords Ki entered into the pattern is
determined at random, and therefore only a comparison of the number of pages selected with
the use of patterns allows the assessment of their matching.
This evaluation is performed by the Information Agent (AI) with calculation of the values
of the eﬃciency index of pattterns used in the domain. The eﬃciency index is determined by
the following equation:
q(di , Wik , Tk ) =

xki
K
k=i

xki

(4)

where:
Wik - is the K-th pattern used in the i-th domain,
xki - is the number of pages in the i-th domain selected with the use of pattern Wik .
Information on the pattern eﬀectiveness is transferred to the manager agent (AM), which
modiﬁes the Wi patterns, used next in the exploration of di domain. In parallel, AI performs an
action, which consists in providing the user with information about the number and addresses
of the pages acquired.
In subsequent time intervals Tk , k = 1, 2, .., K the manager agent makes adaptation of
patterns Wi (Tk ) for each domain (di ) undergoing exploration. This adaptation can involve
both the exchange of patterns between the domains and generating new patterns, usually by
changing sets of keywords (Ki ); it can also consist in changing other attributes of the pattern.

User Interface Agent (AF) performs an action involving the withdrawal from the database
of URLs statement obtained in a certain period of time [Tk , Tk+n ] and the views of the pages
speciﬁed by the user s(di , Wi , Tk ). The possibility has also been considered of obtaining from AI
the information on patterns applied Wi (Tk ), i = 1, .., I and statistics characterising the number
of pages obtained in diﬀerent domains xki (tk ), k = 1, .., K with changes in these values over
time.
1057

Agent-based WEB exploration

4

Opalinski, Nawarecki and Kluska-Nawarecka

Pilot Implementation and Results of the Experiments

Application described below, which constitutes a pilot version of the disclosed agent system,
has been implemented in a way allowing testing of its most important functionalities without
the need for extensive hardware architecture.
For the experiments, ﬁve Internet domain names containing the information (data of companies, suppliers, news) from the sector of metallurgy and foundry industry were selected. It has
been assumed that this area suﬃciently well reﬂects the potential interests of industrial users
and sectoral research institutions. Selected domains D = [metpartner.pl(A), 4metal.pl(B),
metale24.pl(C), wirtualneodlewnictwo.pl(O), odlewniepolskie.pl(E)] (in parentheses are given
abbreviations of domains used later in the tables)
The system presented in this study operates based on open sources of information from the
Internet in Polish. One can also use a data processing system in other languages, but it is
necessary to have a module of the natural language processing adapted previously to this task
(it mainly concerns a stem module searching for inﬂection of a particular word). This feature
is planned to be implemented in the subsequent system version.
Another idea was to nominate a set of patterns that were to be searched in the resources
of selected domains. After consultation with an expert in the ﬁeld, 22 diﬀerent patterns were
selected and described with search model SM = (K, 100%, SEGM EN T, 1), where the set K
was as follows. K: [melting, charge material, cast iron, ﬂux, ferroalloy, scrap, reﬁner, alloy,
moulding, sand, binder, moulding mixture, coating, release agent, pattern, core, protective layer,
liquid, casting, ﬁlter, inoculant].
Used in individual patterns W subsets Ki ⊂ K consisted of randomly selected 3 keywords,
while parameters [R = 100%andL = SEGM EN T ] assumed the necessity of occurrence of all
3 keywords within a single segment. The last parameter of search model V = 1 allowed for
various forms of inﬂection of the keywords considered in the pattern.
The search of the selected 5 domains was conducted in time intervals Tk = 30min. The
whole time horizon of follow-up T = K ∗ Tk was 7 days.
In accordance with the concept shown previously, the above mentioned action corresponds
to the action of manager agent (AM). Passing the appropriate parameters to the crawler agent
(AC) and then receiving the obtained results of exploration and ultimately classifying the
subsequent pages matching patterns (using Algorithm 1) is the task of the domain agent (AD).
Hence information about the pages where the searched patterns were found is submitted to the
database, and simultaneously to the information agent (AI), which transforms it into the form
best corresponding to the needs of the user interface (AF).
Of the 22 patterns generated, only 7 were found in the contents of web pages in the crawled
WEB resources; the number of these sites depended on the pattern and the domain. As already
mentioned, the same domains were searched using publicly available Google Search engines and
monitored with Google Alerts mechanism. Summary of the obtained results is presented in the
form of Table 1.
The test system returned a total of 36 pages, with 34 being returned in the ﬁrst search
of pages Tk = 1 , while the remaining 2 appeared on the 4th day of the test duration. It is
interesting to note that this result was obtained from only 2 domains explored, as the other 3
were unavailable for the crawling mechanism. To improve system eﬃciency, dedicated parser
algorithms are required, which is planned to be implemented in the subsequent system version.
As follows from the above statements, the number of pages returned by the Google search
engine is generally higher (and in some cases much higher) than the number obtained in the
1058

Agent-based WEB exploration

Pattern
Wi

W1
W2
W3
W4
W5
W6
W7

Opalinski, Nawarecki and Kluska-Nawarecka

Keywords
Ki

Number of pages matching Number of Changes
System Google Google observed returned
searched Search
Search
changes by Google
2 sites 5 sites Internet
Alerts
moulding, material, binder
12
3
226
0
0
melting, charge, material
10
16
292
2
0
moulding, material, mixture
7
15
255
0
0
moulding, material, coating
2
9
150
1
0
casting, sand, mould
2
94
234
0
0
melting, refractory, material
2
11
237
0
0
casting, protective, layer
1
156
222
0
0
Table 1: Summary of results

test system. This eﬀect can be explained by the following circumstances:
• The Google Search is based on an extensive architecture of a network of clusters with
access to vast amounts of disk resources and ultra-fast access to the network, providing
high-performance indexing and searching of the Web. The presented system is dedicated
to run on a PC computer, which must result in a lower processing eﬃciency.
• The search for patterns using Google Search engine was conducted on all domains available
on the Internet, while the test system conducted exploration in only 5 selected domains,
and for 2 domains only the domain search process has been successfully completed.
• After analysing the contents of the pages returned as the search results by Google Search,
it turned out that some of the pages were matched to the pattern, despite the absence of
some of the keywords in the content of the page.
It is worth paying attention to the eﬀectiveness of operation of the mechanism monitoring
the page content matched to the pattern. During the experiment, three changes were detected,
while the Google Alerts system has not detected any changes.
An interesting aspect of the operation of the implemented solution concerns the relationship
between the search results (number of pages matching the pattern) and the pattern variant (Wi )
used in the domain (di ). The numerical data illustrating this observation are summarised in
Table 2.
Pattern
domain
d1
d2

W1
q1j
10 0,4
2 0,2

xj1

W2
q2j
9 0,36
1
0,1

xj2

W3
q3j
3 0,12
4
0,4

xj3

W4
q4j
0
0
2 0,2

xj4

W5
q5j
1 0,04
1
0,1

xj5

W6
q6j
2 0,08
0
0

xj6

Table 2: Pattern eﬀectiveness depending on the domain
The value of the eﬃciency ratio (qij ) for the pattern (Wi ) varies within wide limits (in this
experiment from 0 to 0.4) depending on the domain (di ). This result conﬁrms the legitimacy
of the feedback introduced between the information agent (AI) and the manager agent (AM)
(shown in Figure 1), which allows the adaptation of patterns used (tuning them to the properties
of the domains).
1059

Agent-based WEB exploration

Opalinski, Nawarecki and Kluska-Nawarecka

Figure 2: The application window and the results of search for casting information
In assessing the overall results of the conducted tests, the following observations can be
formulated: (1) The completed pilot version of the system possesses the most important functionalities required for WEB exploration, oriented at speciﬁc problem areas (the ability to search
for pages and to monitor changes in their content); (2) Search model proposed to generate patterns used in the search meets the requirements imposed (pages selectivity, ease of adaptation
to a particular problem area); (3) The advantages of the system under test with respect to the
Google tools inlude higher precision (full control over the applicable patterns) and the eﬃciency
of detection of changes, while the undoubted advantage of Google is the unrestricted area of
search;
The last act in the system operation is presentation of the results obtained in the form of
a graphical interface. Figure 2 shows the window of the executed application with fragment of
the results of the crawled pages referring to the subject of casting.
To better highlight the various threads of information contained in this window, the individual fragments were marked with numbers, which should be interpreted as follows: 1 - list
of domains selected for monitoring; 2 - the date of commencement of the last crawl process; 3
the duration of the last crawl process; 4 - the frequency of searching the domain (in seconds);
5 - the number of URLs found in the resources of a given domain; 6 - total number of results
(matches to the pattern) found by the system. Further information relates to the list of search
results found. These are successively: 7 - the date of ﬁnding the pattern match; 8 - number
of changes in the content of the page or segment; 9 - abbreviated name of the pattern that
has been found; 10 - the URL of the page containing the pattern. In addition to the window
shown above, the user can get at the request other information on the results of the search,
including print of speciﬁc pages, a list of all results and search patterns, and the number of
changes detected during monitoring of domains.
Summing up it can be stated that the presented system is eﬀective in ﬁnding accurate and
high-quality information from online resources, eliminating the main drawbacks of the tools
existing on the market. In addition, it allows for continuous monitoring of these resources and
returning information about the newly-emerging content of the search, which also makes it very
useful for the user in the diﬃcult process of analysing data from the Internet.
1060

Agent-based WEB exploration

5

Opalinski, Nawarecki and Kluska-Nawarecka

Conclusions

Completed application, which is a pilot version of the exploration system and WEB monitoring
is not a full implementation of the agent-based structure described in the ﬁrst part of the article.
At the same time, this application contains the most important elements of the structure, which
can be attributed to the relevant agent actions, thus conﬁrming the possibility of module (agentbased) system implementation. The advantage of this solution is the transparency of actions,
and thus ease of possible modiﬁcation and enrichment of individual agents in additional actions
increasing the eﬃciency of their operations. Presented concept of agent-based structure solution
have not appeared yet in the researches concerning WEB exploration.
The solution based on this concept can be used in variety of options. Besides industry
related cases, it may be useful in public safety area, in particular when it comes to the issues
realated to cybercrime or counterterrorism. The tests carried out, a fragment of which has been
described in the second part of the article, conﬁrm the ability to provide the most important
system functionalities. A full evaluation of the eﬀectiveness of its operation requires further
series of experiments, it seems, however, that the results so far obtained fully conﬁrm the advisability of the continuation of the work on this class of solutions.
Acknowledgments
Work ﬁnanced partially from funds of: (1) International project no. 820/N-Czechy/2010/0.
(2)Polish National Centre for Research and Development grant no. DOBR-BIO4/060/13423/2013

References
[1] Steven J Bell. The infodiet: how libraries can oﬀer an appetizing alternative to google. The
Chronicle of Higher Education, 50(24):B15, 2004.
[2] Mike Burner. {Crawling towards eternity: Building an archive of the World Wide Web}. Web
Techniques Mag., 2(5), 1997.
[3] Kevin Chen-Chuan Chang, Bin He, Chengkai Li, Mitesh Patel, and Zhen Zhang. Structured
databases on the web: Observations and implications. ACM SIGMOD Record, 33(3):61–70, 2004.
[4] Daniel Gruhl, Laurent Chavet, David Gibson, J¨
org Meyer, Pradhan Pattanayak, Andrew Tomkins,
and J Zien. How to build a webfountain: An architecture for very large-scale text analytics. IBM
Systems Journal, 43(1):64–77, 2004.
[5] Vesna Hassler. Open source libraries for information retrieval. Software, IEEE, 22(5):78–82, 2005.
[6] Rohit Khare, Doug Cutting, Kragen Sitaker, and Adam Rifkin. Nutch: A ﬂexible and scalable
open-source web search engine. Oregon State University, 1:32–32, 2004.
[7] Gordon Mohr, Michael Stack, Igor Rnitovic, Dan Avery, and Michele Kimpton. Introduction to
heritrix. In 4th International Web Archiving Workshop, 2004.
[8] Christopher Olston and Marc Najork. Web crawling. Foundations and Trends in Information
Retrieval, 4(3):175–246, 2010.
[9] Andrzej Opalinski, Wojciech Turek, and Krzysztof Cetnarowicz. Scalable web monitoring system.
In Computer Science and Information Systems (FedCSIS), 2013 Federated Conference on, pages
1273–1279. IEEE, 2013.
[10] Wojciech Parada Marcin Lustoﬁn Stanislawa Kluska-Nawarecka, Bartlomiej Sniezynski and Dorota
Wilk-Kolodziejczyk. The use of lpr (logic of plausible reasoning) to obtain information on innovative casting technologies. Archives of Civil and Mechanical Engineering, 14(1):25–31, 2014.
[11] International Telecommunication Union. Measuring the information society 2012. 2012.

1061

