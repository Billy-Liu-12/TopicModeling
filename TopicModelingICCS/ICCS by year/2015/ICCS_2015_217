Procedia Computer Science
Volume 51, 2015, Pages 1734–1741
ICCS 2015 International Conference On Computational Science

Using Scientific Visualization Tools
to Bridge the Talent Gap
1

Konstantin Ryabinin1 and Svetlana Chuprina1
Perm State University, Bukireva Str. 15, 614990, Perm, Russia
kostya.ryabinin@gmail.com, chuprinas@inbox.ru

Abstract
In this paper the use of adaptive scientific visualization tools in education, including in the area of
high performance computing education is proposed in order to help students understand in depth the
nature of particular scientific problems and to help them to learn parallel computing approaches to
solving these problems. The proposed approach may help to bridge the talent gap in natural and
computational sciences, since high quality visualization can help to uncover hidden regularities in the
data with which the researchers and students work and can lead to new level of understanding how the
data can be partitioned and processed in parallel. A multiplatform client-server scientific visualization
system is presented that can be easily integrated with third-party solvers from any field of science.
This system can be used as a visual aid and a collaboration tool in high performance computing
education.
Keywords: scientific visualization tools, multiplatform visualization system SciVi, mobile collaboration tool,
ontology-based adaptation to solvers, adaptive rendering distribution

1 Introduction
Tackling the talent gap in natural sciences and high performance computing is a challenging task
of modern computer science education. On the one hand the scientists from various scientific domains
need the computational power of the modern supercomputers to efficiently solve their problems. On
the other hand it is difficult for them to apply variety of parallel programming approaches since many
of them are not coming from Computer and Computational Science background. This is why the
education process should contain clean and transparent examples, which can help students to
understand how the data processing can be performed in parallel in order for them to be able to utilize
the power of massively parallel computers.
One of the possible ways to approach the above mentioned task is to use human-friendly
representation of the scientific data. This can be done by using scientific visualization tools that help
to visualize the data in the clear human-observable form. As mentioned in (Vassiliev V.R., et al.,
2004), the scientific visualization can reveal the deep nature of the data, uncover hidden regularities

1734

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.376

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

and therefore ensure the better understanding of the research material and simplify the interpretation of
the research results.
The deep understanding of the data nature can help experts as well as students to decide how to
partition the data and process it in parallel taking into account the internal structure that becomes
observable thanks to visualization.
We propose to use scientific visualization approaches in High performance computing education
courses. To do this we developed the special software that can ensure high-quality visualization to suit
the needs of learning process. The main requirements for this software are the following:
1.

Easy to use with third-party data and data generators (solvers), in order to ensure the support
of any natural science research.

2.

Easy to install, in order to ensure easy installation of this software by students and other
users.

3.

Easy to distribute data by the teacher to the students and vice versa.

4.

High visual quality of generated images, in order to ensure human-friendly data
representation.

2 SciVi Scientific Visualization System
To meet all the requirements mentioned above we propose to use scientific visualization system
SciVi (Ryabinin K. & Chuprina S., 2013), (Ryabinin K. & Chuprina S., 2014) as a visual tool
suppoting the high performance computing education process. This system is developed by the paper’s
authors in Perm State University in collaboration with Russian IT-company Nulana LTD (located in
Perm).
The distinctive features of SciVi are the following:
1.

High-level ontology-based tools to automate integration of SciVi with third-party solvers
from any field of science and education.

2.

Multiplatform portability that allows to use SciVi not only on desktop computers, but also on
smartphones and tablets.

3.

Client-server architecture and support of distributed rendering that ensures high performance
of visualization even if the client is on a mobile device connected with server via low-speed
network.

4.

High visual quality of the generated images due to adaptive anti-aliasing that ensures smooth
objects’ edges without hitting the system’s response time to user’s interactions.

Thanks to these features SciVi suites all the above requirements and can be used in education
process. First of all, SciVi can be easily adapted to the third-party data generators. It is versatile and
can be used as a visualizer in any field of science and education regardless of the subject area
(domain).
Secondly, SciVi is compatible with desktop computers and mobile devices, so the students can
easily install it on their laptops, tablets or even smartphones and use it in classes as well as at home.
Thirdly, SciVi is based on client-server architecture, so the teacher can distribute all the needed
data to a group of students by loading these data to SciVi server.
Last, but not least, SciVi ensures high visual quality and high rendering performance, so it can be
used as human-friendly and visually attractive tool to represent the data in the graphical form
including 3D visualization and animation.

1735

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

Thanks to the client-server architecture and capabilities of rendering adaptively distributed
between client and server according to the software and hardware infrastructure, SciVi can support
collaborative education. As mentioned in (Järvelä S., et al., 2007), the network and mobile
technologies can serve the better communication in students’ groups engaging their effortful
interactions in order to build a shared understanding of subjects.
Using SciVi, students can solve the same task while working in groups by using different
techniques and different devices (like laptops or tablets) and comparing each other results. For
example, in case of high-performance computing courses, students have to transform serial algorithms
into parallel ones and to solve the same tasks with the same data using different parallelizing
techniques (see Section 3) and comparing the results with help of SciVi. All the programs developed
by students are third-party solvers related to SciVi and SciVi adaptively integrates with them in a
unified way.
The SciVi architecture is demonstrated in Figure 1. The NFoundation library is used to ensure
independency from the operating system. It provides common routines (for example, memory
management and networking) and data structures (for example, dynamic and associative arrays). The
NGraphics library is used to build an abstraction layer between graphical hardware and rendering
logic. It provides the basic rendering primitives (like shaders and 3D-models) and data types (like
affine transform matrices and quaternions). The NChart3D library provides charts of different types as
a part of visualization. The third-party libraries from the VTK family are utilized to perform slicebased and volume rendering. The GUIBuilder library is responsible to generate the multiplatform
graphical user interface.
The adaptation to the third-party solvers is performed with help of integration module that provides
Web-interface based on Django third-party Web framework. This Web-interface is used to register
new solvers in SciVi and to control the work of the server. The integration module uses two kinds of
ontologies. The first one (called ) describes syntax of input-output statements of programming
languages. The second one (called ) describes visual objects used for data representation.

Figure 1: SciVi architecture

1736

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

The process of adaptation to the third-party solver is shown in Figure 2.
If the source code of the solver is available, the integration module uses the ontology  for
automatic generation of the parser based on regular expressions. This parser is used to extract the
structure description of input and output data from the source code. If no source code is available, the
user describes input and output data structure with help of high-level visual Web interface.
After that the user can map the elements of the input and output data structure to the properties of
visual objects from the ontology  using high-level visual environment tools. As soon the settings are
established, user starts the integration module that automatically generates the template for the
graphical scene. This template is automatically filled with the data produced by solver. As the result,
SciVi server creates the scene description and sends it to the SciVi client that renders the final image.
If the data are too big to be transmitted to client within reasonable time, the server performs data
simplification automatically. The ratio of simplification is determined based on heuristics.
To increase the visual quality of the final image without reducing the overall rendering speed,
adaptive anti-aliasing technique was developed (Ryabinin K. & Chuprina S., 2014).

Figure 2: SciVi adaptation process to the third-party solver

3 SciVi Usage
Currently the scientific visualization system SciVi was successfully used to solve different
visualization tasks in purposes of scientific research and education in Perm State University as well as
in industry (Nulana LTD).
SciVi was used as a visualization tool in the following scientific research tasks:
1.

Modeling the magnetic moments of nanoparticles in magnetic field. This problem comes
from physics. The solver MagnetoDynamics-F for this task is implemented in Fortran and

1737

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

developed in Perm State University (Demenev A., et al., 2012). One frame of the animation
that is a SciVi visualization result for this task is shown in Figure 3 (1).
2.

Monitoring prices on the stock market BTC-e. This problem comes from economics area. The
solver is a Java BTCeXplorer application created by one of the paper’s authors. The
candlestick diagram displayed in SciVi according to the data obtained from BTCeXplorer is
shown in Figure 3 (2).

3.

Multiple genetic sequences alignment and phylogenetic trees building according to the
alignment results. This problem comes from genomics. The genetic material was provided by
Institute of Ecology and Genetics of Microorganisms (Perm, Russia) and processed by the
third-party software ClustalW (Larkin M., et al., 2007) implemented in C++. SciVi uses the
sequence diagram to visualize the result of alignment that is shown in
Figure 3 (3). The result of phylogenetic tree visualization in SciVi with help of tree diagram
is demonstrated in Figure 3 (4).

4.

Simulation of fluid behavior in a complex shaped cavity. This problem comes from
hydrodynamics. The solver is third-party simulation software OpenFOAM (Weller H., et al.,
1998) implemented in C++. One frame of animation displayed in SciVi is shown in Figure 3
(5).

5.

Measuring fluctuations of human body temperature. This problem is a medical one. The data
are obtained within the project “MICROTEST. Apparatus and complex diagnostic procedures
to identify systemic microcirculation disorders” (Podtaev S., et al., 2010). The data are
visualized in SciVi with line and heatmap diagrams, which are shown in Figure 3 (6).

The technical side of these examples is discussed within the course “Computational Geometry and
Computer Graphics”.
Also SciVi is used within the course “Multimedia” by creating the digital art objects. On the first
stage students have to scan the real world object (for example, a sculpture of dragon’s head made of
polymer clay) using 3D scanner. On the second stage the students have to remove the unwanted
artifacts of the raw model within Blender 3D (Roosendaal T., 2014) and to convert the result into
Stanford Triangle Format (Bourke P., 2011). After that, the model is displayed in SciVi in interactive
form. The rendering of dragon’s head digitalized during the lesson is shown in Figure 3 (7).
Such visualization results are presented in the exhibitions of the Computer Science Department of
Perm State University Open Days. And every time it attracts the great attention of the visitors. The
demonstration of tools that are developed by teachers as well as by postgraduate students and proven
in real-world business projects shows the visitors and students what they can achieve in case they
apply to the Bachelor and Master Programmes “Applied Mathematics and Computer Science” and
motivates them to improve their skills.
SciVi was also used in production activity of Nulana LTD to monitor the network connection
speed of the software Remotix. This software is developed in Nulana LTD to control computers
remotely. There were some problems with performance of Remotix networking mechanisms and the
measurements were conducted to find and eliminate the bottlenecks. SciVi was used to present the
Remotix connection speed on the different network segments in clear and visible form. The
visualization result of connection speed measurements is shown in Figure 3 (8). Thanks to this
visualization, the performance problems where located and successfully dealt with.
The successful usage of SciVi as a visualization tool for all the above problems proves that this
system is adaptive and versatile. Thereby we can assert that SciVi can be easily applied to any other
research area, including high performance computing education. It is possible to visualize the changes
of data by extracting them from different variables of concrete solver and displaying them on the
single screen (like in the Figure 3 (6)).

1738

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

Figure 3: The results of scientific visualization within SciVi

1739

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

According to the goal of case study methods students’ group has to collaborate to analyze the
concrete situation (case), find out the adequate decisions for this case, evaluate the suggested
algorithms and choose the most suitable ones for the particular conditions.
We plan to use SciVi not only to solve the scientific visualization tasks, but also visual analytics
tasks on the first stage of case study and on the stage of evaluating. For example, we suggest using the
case study methods within Advanced Algorithms course in Perm State University. This course
involves 12 hours pen and paper exercise project to apply the techniques from the lectures to analyze
and parallelize given sequential algorithm testing the ability of the students to apply the parallelization
techniques and methods studied. Students have to implement parallelized algorithms using different
technologies (like OpenMP, MPI, OpenCL, etc.). All the students’ decisions should be justified and
proven in practice.
So, we propose to use SciVi in the following tasks:
1.

2.

3.

4.

To visualize the intermediate calculations to uncover the data relations to perform
efficient data decomposition. For example, as in Figure 3 (6), multiple visual scenes can
be shown on the single screen to make it possible to observe multiple data sources and
therefore to help to distribute inputs, outputs and other data. This means, we propose to
use SciVi to study the concrete algorithm behavior by visualizing the intermediate
calculation results in order to uncover the hidden data regularities.
To evaluate the parallel algorithms by visualizing statistics obtained from the solver. The
students have to log all the major operations in their serial and parallel programs to be
able to estimate the performance differences and to choose the best parallelization
technique according to the time and memory consumption criteria.
To visualize the results obtained from both serial and parallel solvers side by side in the
visualization mode similar to the one shown in Figure 3 (6). This can help to verify the
results of the parallelization by comparing the visual form of result data. The data
supposed to be identical, but if they differ, it is a signal to review the parallel code. This
comparison can uncover the major mistakes in the algorithm (in case figures rendered
vary greatly), as well as minor ones, for example, precision issues (in case the figures
rendered differ slightly).
To collaborate students by using the multiplatform capabilities of SciVi. In this case
students can use their own laptops and mobile devices regardless of the differences in
operating systems they have in order to collaborate at a time and location that are
convenient for them to compare and discuss the parallelization results they obtained and
visualized.

We believe this brings students to the new level of understanding how the data can be partitioned
and processed in parallel. Moreover SciVi can be used to track the students’ activities by visualizing
the statistical data obtained from the version control system they work with.

4 Conclusion
Scientific visualization can help to bridge the high performance computing talent gap. It is
reasonable to present the scientific data in human-observable form to let the experts and students gain
the deep understanding of the process being researched. Making the invisible features of the data
visible helps to decide how to parallelize the processing of these data.
We propose to use the adaptive multiplatform scientific visualization system SciVi as a visual tool
for the learning process in high performance computing area. This system provides high-level tools for
adaptation to the features of third-party solvers from any field of science and education. It is
compatible with desktop computers and mobile devices and has been tested by solving real

1740

Using Scientiﬁc Visualization Tools to Bridge the Talent Gap

K. Ryabinin and S. Chuprina

visualization tasks under iOS, Android, Windows, GNU / Linux and OS X. Thanks to this, SciVi can
be used as a part of pedagogical learning environment.
As a future work we plan to improve the integration of SciVi with learning process to help students
to solve interdisciplinary problems and to achieve complex higher-order skills in parallel
programming through understanding the nature of the data that are to be processed on massive parallel
computers. For this purpose we plan to use Perm State University supercomputer facilities.

5 Acknowledgements
We thank Nulana LTD for collaboration in creating scientific visualization system SciVi and
providing licenses to use the libraries NFoundation, NGraphics and NChart3D in SciVi.
We thank Dr. Demenev, Dr. Belozerova, Dr. Kharebov and Dr. Khenner for providing the
simulation software MagnetoDynamics-F and all supplementary data to run it.
We thank Dr. A. Maksimov for providing the genetic sequences for alignment.
We thank Dr. S. Podtaev and A. Ershova for providing data of skin temperature measurements and
results of wavelet analysis obtained within MICROTEST project.
We thank Maria Kolesnik for providing the original sculpture of dragon’s head.

References
Weller H., Tabor G., Jasak H., & Fureby C. (1998). A tensorial approach to computational
continuum mechanics using object orientated techniques. Computers in Physics , 12 (6), 620-631.
Vassiliev V.R., Voloboy A.G., Vyukova N.I., & Galaktionov V.A. (2004). Context-Aided
Visualization of Volumetric Data. Information technology and computer systems (4), 25-34.
Bourke P. (2011). PLY - Polygon File Format. Retrieved January 31, 2015, from paulbourke.net:
http://paulbourke.net/dataformats/ply/
Demenev A., Belozerova T., Kharebov P., & Khenner E. (2012). About The Solving Of The
Problems Of Magnetodynamics And Coherent Processes In Nanomagnetic Structures On The
Supercomputer. High-Performance Parallel Computing In Cluster Systems , 122-124.
Järvelä S., Näykki P., Laru J., & Luokkanen T. (2007). Structuring and Regulating Collaborative
Learning in Higher Education with Wireless Networks and Mobile Tools. Educational Technology &
Society , 10 (4), 71-79.
Larkin M., Blackshields G., Brown N., Chenna R., McGettigan P., McWilliam H., et al. (2007).
ClustalW and ClustalX version 2. Bioinformatics , 23, 2947–2948.
Podtaev S., Smirnova E., Popov A., Ershova A., & Zhukova E. (2010). Skin temperature
fluctuations at contralateral cooling test in type 2 diabetic patiens. 9th World congress for
microcirculation , 77.
Ryabinin K., & Chuprina S. (2013). Adaptive Scientific Visualization System for Desktop
Computers and Mobile Devices. Procedia Computer Science , 18, 722–731.
Ryabinin K., & Chuprina S. (2014). Development of Multiplatform Adaptive Rendering Tools to
Visualize Scientific Experiments. Procedia Computer Science , 29, 1825-1834.
Roosendaal T. (2014, August 28). Siggraph 2014 report. Retrieved January 31, 2015, from
blender.org: http://www.blender.org/news/siggraph-2014-report/

1741

