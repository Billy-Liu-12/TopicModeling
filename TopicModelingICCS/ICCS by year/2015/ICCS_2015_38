Procedia Computer Science
Volume 51, 2015, Pages 1003–1012
ICCS 2015 International Conference On Computational Science

A new time integration scheme for Cahn-Hilliard equations
R. Schaefer1 , M. Smolka1 , L. Dalcin2 , and M. Paszy´
nski1
1

2

AGH University of Science and Technology, Krakow, Poland
King Abdullah University of Science and Technology, Thuwal, Saudi Arabia

Abstract
In this paper we present a new integration scheme that can be applied to solving diﬃcult
non-stationary non-linear problems. It is obtained by a successive linearization of the CrankNicolson scheme, that is unconditionally stable, but requires solving non-linear equation at
each time step. We applied our linearized scheme for the time integration of the challenging
Cahn-Hilliard equation, modeling the phase separation in ﬂuids. At each time step the resulting
variational equation is solved using higher-order isogeometric ﬁnite element method, with Bspline basis functions. The method was implemented in the PETIGA framework interfaced via
the PETSc toolkit. The GMRES iterative solver was utilized for the solution of a resulting linear
system at every time step. We also apply a simple adaptivity rule, which increases the time step
size when the number of GMRES iterations is lower than 30. We compared our method with
a non-linear, two stage predictor-multicorrector scheme, utilizing a sophisticated step length
adaptivity. We controlled the stability of our simulations by monitoring the Ginzburg-Landau
free energy functional. The proposed integration scheme outperforms the two-stage competitor
in terms of the execution time, at the same time having a similar evolution of the free energy
functional.
Keywords: isogeometric analysis, Cahn-Hilliard equations, non-stationary problems, GMRES solver

1

Introduction

Cahn-Hilliard equations [8, 9] can be used in modeling the separation of the two phases of a
ﬂuid, as well as for the cancer growth modeling [12].
The Cahn-Hilliard equations pose a challenging computational problem, therefore their time
integration requires unconditionally stable schemes and appropriate time step adaptation procedures. The standard approach requires numerical solution of the non-linear algebraic equation
at every time step, compare [9]. The strong form of the Cahn-Hilliard equation has fourth
order with respect to the space variables, and thus, when solving their weak form in the space
domain by Finite Element Method (FEM), the isogeometric B-splines of at least second order
should be used as a basis [7]. Such functions are C 1 at the interfaces between elements and C ∞
inside them [9]. Both mentioned computational challenges make the numerical solution of the
Cahn-Hilliard equation diﬃcult and time consuming.
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.244

1003

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

We propose a linearized, mixed Finite Diﬀerence/Finite Element scheme for solving initialboundary value problem for the Cahn-Hilliard equations. In the space domain the solution is
approximated by means of higher order isogeometric ﬁnite element method with B-spline basis.
The linearized version of the Crank-Nicolson integration scheme, that is unconditionally stable,
is utilized for the time integration.
Our non-stationary solver has been implemented in the PETIGA toolkit [6] supporting the
isogeometric computations. The PETIGA itself is a part of the PETSc toolkit [1, 2, 3]. For the
solution of the linear problem at every time step, we use the GMRES procedure available from
the PETSc library.
We also use a simple adaptation scheme, that increases the time step size each time the
number of iterations of the GMRES solver is lower than 30. The performed simulations show
the advantage of our linearized scheme over a sophisticated two-stage predictor-multicorrector
non-linear time-adaptive scheme from [9].

2
2.1

Weak formulations of the Cahn-Hilliard equations
Strong formulation

This section presents the derivation of the weak form of Cahn-Hilliard equations based on [8].
Let us consider the following Cauchy problem.
Find u ∈ C 1 (0, T ; C 4 (Ω)) such that
ut = ∇ · (B(u)∇ (−γΔu + Ψ (u))) on [0, T ] × Ω and u(0, x) = u0 (x) on Ω,

(1)

where Ω is an open subset of Rn with smooth boundary and γ > 0 is a constant. u is usually
interpreted as the diﬀerence of the two ﬂuid phase concentrations, hence u ∈ [−1, 1]. In such
a case B(u) ≥ 0 is the diﬀusional mobility, whereas Ψ(u) is the homogeneous free energy. A
crucial notion in the theory of Cahn-Hilliard equations is the Ginzburg-Landau free energy
E(u) =

Ω

γ
|∇u|2 + Ψ(u) dx.
2

(2)

We introduce the following boundary conditions
n · (B(u)∇ (−γΔu + Ψ (u))) = 0,

n · ∇u = 0

on [0, T ] × ∂Ω,

(3)

where n is the outer normal to ∂Ω. Furthermore, we assume that the mobility functional B is
of the following form
B(u) = (1 − u2 )m B(u)
where m ≥ 1 and B : [−1, 1] → R is and C 1 -regular, bilaterally bounded function,
0 < b0 ≤ B(u) ≤ B0 ,
We also assume that the free energy functional Ψ might be decomposed into two parts
Ψ = Ψ 1 + Ψ2 ,
where Ψ2 ∈ C 2 ([−1, 1]) and Ψ1 : (−1, 1) → R is convex and satisﬁes
Ψ1 (u) = (1 − u2 )−m F (u)
1004

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

for some positive function F of the class C 1 ([−1, 1]).
Finally, following [8], we select the functions B and Ψ as:
B(u) = 1 − u2 ,
Ψ(u) =

2.2

θ
2

((1 + u) log(1 + u) + (1 − u) log(1 − u)) + 1 − u2 .

(4)

Weak formulation L2 in time

The following weak formulation is presented in [8] together with the respective existence theorem. We seek u ∈ L2 (0, T ; H 2 (Ω)) ∩ L∞ (0, T ; H 1 (Ω)) ∩ C([0, T ]; L2 (Ω)) such that ut ∈
L2 (0, T ; (H 1 (Ω)) ) and B(u)∇ (−γΔu + Ψ (u)) ∈ L2 (ΩT ; Rn ), that satisﬁes (1) in the following
sense
T

0

ut (t), ζ(t) dt = −

ΩT

[γ∇u · (B(u)∇ζ) + (BΨ )(u)∇u · ∇ζ] dxdt

(5)

for arbitrary ζ ∈ L2 (0, T ; H 1 (Ω)) such that ∇ζ ∈ L2 (0, T ; H 1 (Ω; Rn ))∩L∞ (ΩT ; Rn ) and ∇ζ·n =
0.

2.3

Weak formulation C 1 in time

Following [9] we introduce
U = u ∈ H 2 (Ω) ∩ L∞ (Ω); tr(∇u · n) = 0

(6)

We deﬁne the space diﬀerential operator A : U → U , such that
A(u), w =

Ω

[γ∇u · (B(u)∇w) + (BΨ )(u)∇u · ∇w] dx

(7)

and time-derivative operator ·t : C 1 (0, T ; U ) → C(0, T ; U ) such that
ut (t), w =

Ω

∂u
(t) · w dx, ∀t ∈ [0, T ].
∂t

(8)

Then we look for u ∈ C 1 (0, T ; U ) such that
ut (t), w + A(u(t)), w = 0 ∀w ∈ U, ∀t ∈ [0, T ] and u(0, x) = u0 (x) a.e. on Ω.

2.4

(9)

Finite diﬀerence schemes for semicontinuous variational equation

We introduce the network {t0 = 0, t1 , . . . , tK = T } ⊂ [0, T ]. To be coherent with the applied
notation we introduce the simple ”dualizing” operator τ : U → U such that
< τ (u), w >=

Ω

u · w, dx ∀w ∈ U

(10)

Three ﬁnite diﬀerence schemes will be considered. The ﬁrst is the forward Euler scheme:
τ

ui+1 − ui
ti+1 − ti

, w + < A(ui ), w >= 0 ∀w ∈ U, i = 1, . . . , K,

(11)
1005

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

where u0 ∈ U is the initial condition, and ui = u(ti ). The second scheme is the Crank-Nicolson
method:
τ

ui+1 − ui
ti+1 − ti

,w +

1
< (A(ui+1 ) + A(ui )), w >= 0
2
∀w ∈ U, i = 1, . . . , K.

(12)

Finally, if A ∈ C 1 (U ) we can use a linearized three-level scheme
τ

ui+2 − ui
ti+2 − ti

,w +

1
DA|ui+1 (ui+2 + ui − 2ui+1 ) + A(ui+1 ) , w = 0
2
∀w ∈ U, i = 1, . . . , K.

(13)

Its only disadvantage is that the double initial condition u0 , u1 ∈ U has to be known. But this
obstacle can be easily overcome by the single execution of a simpler non-linear scheme, like the
Crank-Nicolson one, in order to obtain the additional initial condition u1 .
Each of these schemes (11, 12, 13) can be eﬀectively computed if we replace the solutions ui
and the test function w by their approximations uih,p , w ∈ Vh,p from the proper Finite Element
space. In such a case equations (11, 12, 13) become mixed FD/FEM numerical schemes.
The Euler mixed scheme is very fast, because it does not need to solve any system of
equations by progressing in time. However, its computational cost can be remarkable because of
the necessary high time-step reﬁnement (numerical instability). It can even become impossible
to apply if the numerical stability cannot be achieved. The second, mixed Crank-Nicolson
scheme is unconditionally stable, but needs to solve the algebraic non-linear system at each
time step.
The linearized scheme (13) makes an advantageous compromise between the conditioning
(unconditional stability) and computational cost. It needs to solve the linear system in each
time step instead of a non-linear one. The detailed deﬁnition, the proof of convergence and
numerical stability condition of (13) can be found in [16]. We also refer to [17] for a broader
review of two- and three level mixed schemes for non-linear parabolic PDEs.

3

Numerical results

The numerical results presented in this section has been performed on a single node of ATARI
Linux cluster at the Department of Computer Science, AGH University of Science and Technology. The node is equipped with 16 cores, 2.4 GHz clock and 16 GB of RAM.

3.1

Cahn-Hilliard simulations

We performed numerical solution of the Cauchy problem (1) in the weak form, C 1 -regular with
respect to the time variable (9). The space domain of the solution is two dimensional Ω = (0, 1)2 .
We accepted the functions B and Ψ of the form (4), where θ = 1.5 is a dimensionless number
which represents the ratio between the critical temperature Ξc (the temperature at which the
two phases attain the same composition) and the absolute temperature Ξ, γ = N12 where N
c − 1 + r,
is the mesh size in one direction with periodic boundary conditions and u0 (x) = 2¯
where c¯ = 0.63 is the average concentration, while r is the scalar random perturbation with the
uniform distribution U(Ω).
1006

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

Table 1: Comparison of linear scheme with simple time adaptation and non-linear schemes with
advanced time adaptation.

N
(64 + 2)2
(128 + 2)2
(256 + 2)2

p
2
2
2

Linear scheme
iterations time [s]
250
29s
250
102s
256
498s

Non-linear scheme
iterations time [s]
120
34s
150
109s
163
634s

In our simulations we utilize the GMRES solver for solution of the linear system at every
time step. We deﬁne a simple time adaptation algorithm, that increases the time step each
time the GMRES solver requires less than 30 iterations to converge. The same linear solver was
used for solving a series of linear problems appearing in the Newton algorithm, by computing
the additional initial condition from the Crank-Nicolson equations.
The snapshots from the Cahn-Hilliard simulations capturing phase separation process at
diﬀerent time steps are presented in Figure 1. The results concerns the case with N = 1282
and second order B-splines. For smaller mesh size, there are some problems with convergence
of the free energy functional. The numerical experiments have been veriﬁed by monitoring the
evolution of the Ginzburg-Landau free energy (2). The evolution of the energy is presented in
Figure 2. We also provide in Figure 4 the history of time step evolution of our simple adaptation
algorithm, based on monitoring the number of iterations of the GMRES solver.

3.2

Comparison with non-linear scheme

We have performed the comparison of our linearized scheme utilizing simple time step adaptation rule with a complex, non-linear scheme implemented in the PETIGA library (see [9]). The
latter is a two-stage predictor-multicorrector algorithm based on the generalized-α method and
equipped with a sophisticated time step adaptation strategy following the lines of the embedded
Runge-Kutta methods. Three types of the B-spline spatial approximation were applied with the
various numbers of degrees of freedom N = 642 , 1282 , 2562 and the second order polynomials.
The evolution of the free Ginzburg-Landau energy (2) during simulation by using both
schemes is presented in Figures 2, 3. Both simulations were stopped where they reached the
assumed, identical level of free Ginzburg-Landau energy. The process of the phase separation is
characterized by the constant decay of this energy towards an equilibrium state, so the maturity
of this process can be assessed by the energy value observation. Stopping both methods after
they reached the same value of the free Ginzburg-Landau energy allow us, in particular, to
compare their computational cost of reaching the ﬁnal state with a comparable accuracy.
The simulation results are summarized in Table 1. The time step evolution for both schemes
is presented in Figures 4 and 5. The analysis of the results leads to the following conclusions.
• In general, the proposed linearized scheme with a simple time adaptation rule is faster
than the reference one, which uses a sophisticated time step adaptation.
• The reference scheme performs generally much less time steps than the linearized one, until
the simulations were stopped when the free energy reached the same assumed limit. The
comparison of the wall execution time (see Table 1) shows that one step of the linearized
scheme is approximately two times cheeper than a respective step of the reference scheme.
1007

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

(a) Snapshot 1

(b) Snapshot 2

(c) Snapshot 3

(d) Snapshot 4

(e) Snapshot 5

(f) Snapshot 6

Figure 1: Snapshots from the Cahn-Hilliard simulation solution by using the linearized scheme.

1008

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

Figure 2: Evolution of the Ginzburg-Landau free energy for the linearized scheme.

Figure 3: Evolution of the Ginzburg-Landau free energy for the non-linear scheme.

The computational cost discrepancy results from the weak numerical stability of the
reference scheme and the necessity of the frequent expensive multicorrection and time
step modiﬁcation (see Figure 4).
• The general increasing trend of time step size is similar for both methods (see Figures
4, 5). However, it increases monotonically and smoothly in case of linearized scheme,
whereas it strongly oscillates in case of the reference one, despite the sophisticated adaptation strategy applied. It shows that the proposed implicit scheme handles the strong
nonlinearity appearing in the elliptic part of Cahn-Hilliard equations much better.
1009

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

Figure 4: Time step evolution for the linearized scheme.

Figure 5: Time step evolution for the non-linear scheme.
• The speedup of linearized scheme with respect to the reference one grows when we increase
the number of degrees of freedom in the spatial approximation of the solution (see Table
1). The linearized scheme would be then recommendable when the high accuracy of the
solution is required.

4

Conclusions

In this paper we present a fast partial diﬀerential integration method for diﬃcult non-stationary
problems, based on the linearized version of the Crank-Nicolson scheme (13). The method is
applied to the challenging non-linear Cahn-Hilliard parabolic equation. The mathematical
background concerning strong, weak and semi-continuous formulations of the initial-boundary
1010

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

value problems for Cahn-Hilliard equation is provided.
The integration scheme is implemented within the PETIGA framework, a part of the PETSc
toolkit for isogeometric ﬁnite element method simulations. The GMRES solver has been used
for solving the linear system at every time step. We have utilized a simple time adaptation
scheme, where the time step length follows the number of iterations of the GMRES algorithm.
Mathematical considerations are followed by the results of numerical simulations, presenting
the separation of two phases by means of the Cahn-Hilliard equations.
We compare the linearized scheme with a two stage predictor-multicorrector reference
scheme, associated with a sophisticated time step adaptation (see [9]). We have shown that
the linearized scheme with a simple time step adaptation outperforms the original method in
terms of execution time. Moreover, it handles much better the strong nonlinearity appearing
in the elliptic part of Cahn-Hilliard equations and is recommendable for the case in which the
high accuracy of solution is required.
The future work may involve incorporating of multi-frontal, direct solver for the linear
system solution and improving the time step adaptation. Moreover we plane to execute the
whole system on a parallel distributed memory Linux cluster, using eﬃcient isogeometric multifrontal direct solvers [14, 11], as well as porting this algorithm to a GPU environment, using
our fast GPU solver for linear algebraic systems [13].
The future work may also include speeding up the numerical integration of GPGPU [15, 4,
10] or incorporating multi-grid solvers [5].

Acknowledgments
The work presented in this paper, in particular the visits of Lisandro Dalcin, PhD. at AGH has
been supported by Polish National Science Center grant no. DEC-2012/07/B/ST6/01229.

Bibliography
References
[1] S. Balay, S. Abhyankar, M. F. Adams, J. Brown, P. Brune, K. Buschelman, V. Eijkhout, W.
D. Gropp, D. Kaushik, M. G. Knepley, L. Curfman McInnes, K. Rupp, B. F. Smith, H. Zhang,
PETS c Web Page, http://www.mcs.anl.gov/petsc (2014)
[2] S. Balay, S. Abhyankar, M. F. Adams, J. Brown, P. Brune, K. Buschelman, V. Eijkhout, W.
D. Gropp, D. Kaushik, M. G. Knepley, L. Curfman McInnes, K. Rupp, B. F. Smith, H. Zhang,
PETSc User Manual, Argonne National Laboratory ANL-95/11 - Revision 3.4 (2013)
[3] S. Balay, W. D. Gropp, L. Curfman McInnes, B. F. Smith, Eﬃcient Management of Parallelism
in Object Oriented Numerical Software Libraries, Modern Software Tools in Scientiﬁc Computing,
Editors E. Arge, A. M. Bruaset and H. P. Langtangen (1997) Birkh¨
a user Press.
[4] Bana´s, K. and Plaszewski, P. and Maciol, P., Numerical integration on GPUs for higher order
ﬁnite elements, Computers and mathematics with applications (2014) 67(6) 1319-1344.
[5] Banas, K., Scalability analysis for a multigrid linear equations solver, Lecture Notes in Computer
Science (2008) 4967, 1265-1274
[6] N. Collier, L. Dalcin, V. M. Calo., PetIGA: High-performance isogeometric analysis, arxiv,
(1305.4452), (2013) http://arxiv.org/abs/1305.4452

1011

A new time integration scheme for Cahn-Hilliard equations

R. Schaefer, et. al.

[7] J. A. Cottrell, T. J. R. Hughes, Y. Bazilevs, Isogeometric Analysis: Toward Uniﬁcation of CAD
and FEA John Wiley and Sons, (2009)
[8] C. M. Elliott, H. Garcke, On the Cahn-Hilliard equation with degenerate mobility SIAM Journal
of Mathmatical Analysis, 27 (1996) 404-423.
[9] H. Gomes, V. M. Calo, Y. Bazileves, T.J.R. Hughes, Isogeometric analysis of the Cahn-Hilliard
phase-ﬁeld model, Computer Methods in Applied Mechanics and Engineering, 197 (2008) 43334352.
[10] Kruzel, F. and Bana´s, K., Vectorized OpenCL implementation of numerical integration for higher
order ﬁnite elements, Computers and mathematics with applications (2013) 66(10) 2030-2044.
[11] K. Kuznik, M. Paszynski, V. Calo, Graph grammar based mult-frontal solver for isogeometric
analysis in 1D, Computer Science, 14(4) (2013), 589-613
[12] S.M. Wise, J.S. Lowengrub, H.B. Frieboes, V. Cristini, Three-Dimensional Diﬀuse-Interface Simulation of Multispecies Tumor Growth: Numerical Method, Journal of Theoretical Biology, 253(3)
(2008) 524-43.
[13] M. Wo´zniak, K. Ku´znik, M. Paszy´
nski, V. M. Calo, D. Pardo, Computational cost estimates
for parallel shared memory isogeometric multi-frontal solvers, Computers and Mathematics with
Applications, 67(10) (2014) 1864-1883.
[14] M. Wo´zniak, M. Paszy´
nski, D. Pardo, L. Dalcin, V. M. Calo, Computational cost of isogeometirc
multi-frontal solvers on parallel distributed memory machines, Computers and Mathematics with
Applications (2014) doi:10.1016/j.cma.2014.11.020
[15] Wo´zniak, M., Fast GPU integration algorithm for isogeometric ﬁnite element method solvers using
task dependency graphs, Journal of Computational Science, (2015) in press. corrected proofs,
doi:10.1016/j.jocs.2015.02.007
[16] Schaefer, R. and S¸edziwy, S., Filtration in cohesive soils. Part II - Numerical approach, Computer
Assisted Mechanics and Engineering Sciences (CAMES), 6, (1999) 15-26.
[17] Zl´
amal, M., Finite element methods in heat conduction problems, Proc. of the Conf. ”The mathematics of ﬁnite elements and applications”, Academic Press (1975).

1012

