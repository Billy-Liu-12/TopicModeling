Procedia Computer Science
Volume 51, 2015, Pages 1158–1167
ICCS 2015 International Conference On Computational Science

Telescopic Projective Integration for Multiscale Kinetic Equations
with a Speciﬁed Relaxation Proﬁle
Ward Melis1 and Giovanni Samaey1
Department of Computer Science, K.U. Leuven, Celestijnenlaan 200A, 3001 Leuven, Belgium
ward.melis@cs.kuleuven.be

Abstract
We study the design of a general, fully explicit numerical method for simulating kinetic equations with an
extended BGK collision model allowing for multiple relaxation times. In that case, the problem is stiﬀ and
we show that its spectrum consists of multiple separated eigenvalue clusters. Projective integration methods
are explicit integration schemes that ﬁrst take a few small (inner) steps with a simple, explicit method, after
which the solution is extrapolated forward in time over a large (outer) time step. They are very eﬃcient
schemes, provided there are only two clusters of eigenvalues. Telescopic projective integration methods
generalize the idea of projective integration methods by constructing a hierarchy of projective levels. Here,
we show how telescopic projective integration methods can be used to eﬃciently integrate multiple relaxation
time BGK models. We show that the number of projective levels only depends on the number of clusters
and the size of the outer level time step only depends on the slowest time scale present in the model. Both
do not depend on the small-scale parameter. We analyze stability and illustrate with numerical results.
Keywords:

1

Introduction

Kinetic Boltzmann equations serve in many applications as a modeling tool on a mesoscopic level of description. In a scalar one-dimensional setting without external forcing, this equation portrays the evolution of
a distribution function f (x, v, t) of particles at position x with velocity v at time t, and takes the following
general form:
∂t f + v∂x f = Q(f ),
(1)
in which the left hand side corresponds to the transport of the particles whereas the collision operator
Q appearing on the right hand side describes velocity changes as a consequence of interaction between
particles. In general, the Boltzmann collision integral [3] is very expensive to discretize. To that end, a BGK
approximation to the Boltzmann collision operator is considered instead. The collisions are modeled as a
linear relaxation towards a certain Maxwellian equilibrium distribution function Mv (u ) with a (small-scale)
relaxation time (0 <
1):
1
Q(f ) = (Mv (u ) − f ) .
(2)
According to this BGK approximation, particles interact with a single collision frequency given by 1/ . A
logical extension of this simple approximation is to allow for multiple distinct relaxation times. The model
equation that is of interest here is a kinetic BGK equation in which we allow the relaxation time of the
1158

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.285

collisions to vary in space. This variation is embodied in a so-called relaxation proﬁle function denoted by
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
ω(x). We end up with the following kinetic equation:
∂t f + v∂x f =

ω(x)

(Mv (u ) − f ) .

(3)

This relaxation proﬁle in equation (3) can for instance be understood as the mathematical description of
a composite material in which each material has its very own properties, which in a natural way leads to
diﬀering collisional relaxation times.
The diﬃculty of numerically integrating equations of the form (3) follows from the stiﬀness present on the
right hand side, which restricts the choice of numerical methods. A robust and fully explicit method, which
allows for time integration of (two-scale) stiﬀ systems with arbitrary order of accuracy in time, is projective
integration. Projective integration was proposed in [4] for stiﬀ systems of ordinary diﬀerential equations
with a clear gap in their eigenvalue spectrum. In such stiﬀ problems, the fast modes, corresponding to the
Jacobian eigenvalues with large negative real parts, decay quickly, whereas the slow modes correspond to
eigenvalues of smaller magnitude and are the solution components of practical interest. Projective integration
allows a stable yet explicit integration of such problems by ﬁrst taking a few small (inner) steps (using a
step size δt) with a simple, explicit method, until the transients corresponding to the fast modes have died
out, and subsequently projecting (extrapolating) the solution forward in time over a large (outer) time step
of size Δt > δt. In [9], projective integration was analyzed for kinetic equations with a diﬀusive scaling. An
arbitrarily higher order version, based on Runge-Kutta methods, has been proposed recently in [8], where it
was also analyzed for kinetic equations with an advection-diﬀusion limit. Alternative approaches to obtain
a higher-order projective integration scheme have been proposed in [10, 11].
Projective integration methods work best whenever the problem’s spectrum consists of two eigenvalue
clusters (one corresponding to the fast and the other to the slow eigenvalues) with a clear spectral gap
between them. When the outer time step is much larger than the inner time step, Δt
δt, the stability
domain of projective integration methods consists of two circle-like stability regions [4]. In that case, the
method parameters can be tuned such that (i) all fast eigenvalues of the naive time discretization of the
kinetic equation fall into its ﬁrst stability region and (ii) its dominant stability region contains all dominant
eigenvalues. However, when we introduce a relaxation proﬁle function ω(x) to the equations, the spectrum
will in general comprise more than two eigenvalue clusters with several spectral gaps between them. The only
way that stability of the method can be guaranteed then is by choosing the method parameters such that its
stability region does not split up into two parts and contains both the fastest and slowest eigenvalue clusters.
In that case the projective integration method is called [0, 1]-stable [5]. Unfortunately, this requirement
completely destroys much of the potential speed-up of the method since this imposes a severe condition on
the maximum possible value of the projective time step [4] thus defeating its purpose.
Clearly, projective integration methods are not suitable if the eigenvalue spectrum of the given problem
contains more than two well separated eigenvalue clusters. To that end, telescopic projective integration
(TPI) methods, which are presented in [5], can be used. In these methods, the outer integrator step of the
classical projective integration method is seen as the inner integrator of yet another outer integrator on a
coarser level. By repeating this idea, TPI methods construct a hierarchy of projective levels in which each
outer integrator step on a certain level serves as an inner integrator step one level higher. The use of TPI
methods remedies the aforementioned diﬃculty of multiple spectral gaps in two distinct ways: (i) they can
be designed such that the method is always [0, 1]-stable with a greater speed-up than classical projective
integration, or (ii) they can be set up such that there is one stability region around every eigenvalue cluster.
Here, we will construct and analyze TPI methods to integrate kinetic equations of the form (3) with a
relaxation proﬁle such that every eigenvalue cluster lies within one of the method’s stability regions. The
remainder of this paper is structured as follows. In section 2, we will introduce the kinetic equations,
and discuss their hydrodynamic limit leading to the asymptotic equivalence with a hyperbolic problem.
In section 3, we describe the telescopic projective integration method that will be used to integrate these
kinetic equations. We then turn in section 4 to determining the method parameters for telescopic projective
integration based on the problem’s spectrum. Numerical results are reported in section 5, where we provide
numerical stability results and a temporal order test of the TPI methods. We conclude in section 6.
1159

2

Kinetic
Equation and Hydrodynamic Limit
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle

In this work, we are interested in the following (hyperbolically scaled) scalar one-dimensional kinetic equation
∂t f + v∂x f =

ω(x)

(Mv (u ) − f )

(4)

modeling the evolution of a particle distribution function f (x, v, t) ∈ R. The particle positions and velocities
are denoted by x ∈ R and v ∈ V ⊂ R respectively, and the right hand side of (4) represents a BGK collision
operator [2], modeling linear relaxation of f to a Maxwellian distribution function Mv (u ) ∈ R, in which
u (x, t) = f (x, v, t) is the density, obtained via averaging over the measured velocity space (V, μ),
u := f =

V

f dμ(v).

(5)

For the relaxation proﬁle function ω(x) we assume 0 <
ωmin ≤ ω(x) ≤ ωmax with ωmin and ωmax
independent of .
When assuming the following form of the Maxwellian equilibrium distribution function:
Mv (u ) = u +

F (u )
,
v

(6)

which complies with the following compatibility conditions on the Maxwellian:
Mv (u) = u,
vMv (u) = F (u)

,

(7)

it is well established that the kinetic equation (4) converges in the hydrodynamic limit
one-dimensional conservation law
∂t u + ∂x F (u) = O( ),

→ 0 to the scalar
(8)

In what follows, we will always assume that the velocity space is discrete and of the form
J

J

V := {vj }j=1 ,

wj δ(v − vj ),

dμ(v) =

(9)

j=1

with vj denoting the chosen velocities and wj the corresponding weights. Due to this choice of V the kinetic
equation (4) breaks up into a system of J coupled partial diﬀerential equations,
∂ t f j + v j ∂ x fj =

ω(x)

Mj (u ) − fj ,

1 ≤ j ≤ J,

(10)

in which fj (x, t) ≡ f (x, vj , t), and the only coupling between diﬀerent velocities is through the computation
of u . As → 0, a Chapman-Enskog expansion allows to write fj = Mj (u ) + O( ) so that, injecting it in
(10), taking the mean value over V , and considering the relations given in (7) we obtain
∂t u + ∂x F (u ) = O( ).

3

(11)

Telescopic Projective Integration

The purpose of this paper is to construct a fully explicit, arbitrary order time integration method for the stiﬀ
system (10) containing in general more than two distinct time scales. The asymptotic-preserving property [6]
implies that, in the limit when tends to zero, an -independent time step constraint, Δt = O(Δx), can be
used, similar to the hyperbolic CFL constraint for the limiting equation (8). To achieve this and overcome the
1160

diﬃculties mentioned in the introduction, we will use an extension of the projective integration method [4,9]
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
that can handle multiple time scales, entitled telescopic projective integration (TPI).
Telescopic projective integration employs a number of projective levels, which, starting from a base (zeroth) level integrator, are wrapped around the previous level. They form a hierarchy of projective integrators
in which each level fulﬁlls both an inner and outer integrator role (except of course for the ﬁrst and last
level). This clearly generalizes the idea of projective integration, which contains only one projective level
wrapped around an inner integrator. On that account, in the TPI framework the projective integration
method is called a level-1 TPI method. The idea of a level-2 TPI scheme is sketched in ﬁgure 1.
The diﬀerent level integrators can in principle be selected independently from each other, but in general
one selects a ﬁrst order explicit scheme (e.g., the forward Euler scheme) for all but the outermost integrator
level, which is selected to meet certain accuracy requirements dictated by the problem.

3.1

TPI Method Parameters

In general, the level-m TPI method possesses a (possibly varying) set of parameters corresponding to all of its
levels. This includes: (i) the level-i integrator time step hi , i = 0, ..., m, (ii) the number of level-i integrator
iterations Ki , i = 0, ..., m − 1 that are needed to suﬃciently damp the fast components on each level, (iii)
the extra number of level-i integrator iterations qi , i = 0, ..., m − 1 used to approximate the derivative and
perform the extrapolation, and (iv) the number of level-i integrator steps Mi , i = 0, ..., m − 1 over which
the level-(i + 1) integrator is applied and thus skipped by all of the underlying level integrators.
Note that the level-0 (innermost) integrator time step h0 is the only ‘real’ time step of the method
meaning that this is the only step over which numerical integration is actually performed. All higher level
time steps are merely the consequence of the K-, q- and M -values of the extrapolation. Once h0 is known,
the projective time steps are calculated by the following relation:
i

hi+1 =

i = 0, ..., m − 1

(Mk + Kk + qk )h0 ,

(12)

k=0

Additionally, we notice that for m = 1 the (level-1) TPI method coincides with the classical PI method.

3.2

Innermost Integrator

We intend to integrate the system of equations (10) on a uniform, constant in time, periodic spatial mesh
with spacing Δx, consisting of I mesh points xi = iΔx, 1 ≤ i ≤ I, with IΔx = 1, and a uniform time mesh
with time step h0 , i.e., tk = kh0 . After discretizing in space, we obtain the following semi-discrete system of
ordinary diﬀerential equations:
ω
f˙ = Dt (f ),
(13)
Dt (f ) := −Dx,v (f ) + (Mv (u) − f ) ,

M0h0
level-0:
level-1:
level-2:

h0 h0
h1

M0h0

h0 h0

M1h1

M0h0

h0 h0
h1
h2

h1

M0h0

M1h1

h0 h0
h1
h2

Figure 1: Sketch of the general idea of a level-2 telescopic projective integration method drawn for two complete
outer steps h2 of the method. The dots correspond to the diﬀerent time points at which the numerical solution is
calculated. The time step and projective step size of each level are denoted by hi and Mi respectively.

1161

in which f and ω are vectors of length I × J and where Dx,v (·) represents a suitable discretization of the
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
ﬁrst order spatial derivative v∂x (e.g., upwind diﬀerences). The innermost (so-called level-0) integrator of
the TPI method is chosen to be an explicit scheme, for which we use the following shorthand notation
f k+1 = S0 (f k ),

k = 0, 1, . . .

(14)

in which S0 denotes the time stepper of the level-0 integrator with step size h0 . The forward Euler (FE)
method immediately comes to mind:
f k+1 = f k + h0 Dt (f k ).
(15)

3.3

Projective (Outer) Levels

The telescopic projective integration method employs a number m of nested projective levels that are constructed outwards with the innermost integrator as its fundamental building block. We will here provide the
scheme of the method in a framework similar to that of classical projective integration.
To keep track of the time instant at which the numerical solution is computed throughout the TPI
method and at the same time desiring a compact notation, in what follows we employ superscript triplets of
the form (i, n, k) in which i denotes the integrator level, n corresponds to the index of the outermost time
instants tn = nhm and k represents the iteration index of the current level-i integrator. In addition to this,
we introduce a local time such that the time to which the superscript triplets point is with respect to this
local time and not with respect to the beginning of the current level-m integration step.
Starting from a computed numerical solution f n at time tn = nhm , one ﬁrst takes K + 1 steps of size h0
with the level-0 integrator,
0 ≤ k ≤ K,
(16)
f 0,n,k+1 = S0 (f 0,n,k ),
in which f 0,n,k corresponds to the numerical solution at time t0,n,k = t1,n
loc + kh0 calculated by the level-i
integrator. In the projective integration framework the scheme is set up from the highest level down to the
lowest level. The aim is to obtain a discrete derivative to be used in the level-m projective step to compute
f n+1 = f m,n+1,0 via extrapolation in time. This leads to:
f m,n+1,0 = f m−1,n,K+1 + (hm − (K + 1)hm−1 )

f m−1,n,K+1 − f m−1,n,K
,
hm−1

tm,n
loc = nhm .

(17)

From equation (17) we observe that this scheme requires the solution calculated by the (lower) level-(m − 1)
integrator. For i = 1, ..., m − 1 the lower level-i integrator schemes can be written in a similar way as follows:
f i,n,k = f i−1,n,K+1 + (hi − (K + 1)hi−1 )

f i−1,n,K+1 − f i−1,n,K
,
hi−1

i+1,n
ti,n
+ khi ,
loc = tloc

k = 0, ..., K. (18)

This method is called telescopic projective forward Euler (TPFE), and it is the simplest instantiation of
this class of integration methods.

3.4

Stability of Telescopic Projective Integration

We now brieﬂy discuss the main stability properties of the TPFE method. To this end, we introduce the
test equation and its corresponding innermost integrator,
y˙ = λy,

y k+1 = τ (λδt)y k ,

λ ∈ C.

(19)

As in [4], we call τ (λδt) the ampliﬁcation factor of the innermost integrator. (For instance, if the inner
integrator is the forward Euler scheme, we have τ (λδt) = 1 + λδt.) The inner integrator is stable if |τ | ≤ 1.
The question then is for which subset of these values the TPI method is also stable. Considering the level-m
TPFE method, it can easily be seen from equations (17)-(18) that it is stable if
|σm (τ )| = ((Mm−1 + 1)σm−1 (τ ) − Mm−1 ) (σm−1 (τ ))
1162

Km−1

≤ 1,

(20)

in which σi denotes the level-i integrator ampliﬁcation factor. Equation (20) needs to hold for all eigenvalues
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
τ of the innermost integrator.
Here, we consider the level-m TPI method with constant qi = 1 and variable Mi and Ki , i = 0, ..., m − 1.
Since we are interested in the limit → 0 for ﬁxed Δx, we look at the limiting stability regions (i.e. Mi → ∞).
In this regime, the following result holds [5]:
Theorem 3.1. The level-m TPI method contains m + 1 (principal) regions of stability around the real axis,
which can be positioned to cover the clusters of eigenvalues by choice of (possibly) diﬀerent Ki -, qi - and
Mi -values at each projective level. Furthermore, there are a number of artifact stability regions due to the
value of K, which can not be tuned independently and are of no importance whatsoever.
The TPI method allows for the accurate integration of solution modes within the dominant stability region
while maintaining stability for all other modes by matching its stability regions around the reasonably well
separated eigenvalue clusters of the problem’s spectrum.

4
4.1

Numerical Properties
Spectrum of the Innermost Integrator

We now turn to the speciﬁc goal of determining the spectrum of the innermost integrator of the TPI method
for which we will consider a simple forward Euler scheme. To do so we will ﬁrst calculate the spectrum of the
semi-discretized kinetic equation (13) under study. From these eigenvalues the spectrum of the innermost
integrator can be derived.
First, consider the case of a constant function ω(x) = ω
¯ ∈ R. We start by rewriting the semi-discretized
kinetic equation (13) in the (spatial) Fourier domain,
ˆ
ˆ
= B F(ζ)
∂t F(ζ)

B=

ω
¯

MP − I +

ω
¯

D ,

(21)

ˆ ∈ RJ , the matrices B, M, P ∈ RJ×J , and I represents the identity matrix of dimension J.
in which F
In (21), the matrix D represents the (diagonal) Fourier matrix of the spatial discretization, which depends
on the Fourier mode ζ, P is the Fourier matrix of the averaging of f over all velocities, and the matrix
M = I + V−1 represents the Fourier transform of the Maxwellian, with V the diagonal matrix with elements
vj .
To locate the spectrum, we will need to assume that the velocity space is symmetric, i.e.,
¯j,
vJ−j+1 = −vj and DJ−j+1 = D

1 ≤ j ≤ J/2.

(22)

Moreover, we write, from now on, Dj = αj + ıβj . The following theorem is a corollary to [8, Theorem 4.1].
Theorem 4.1. Under the above assumptions, the spectrum of the matrix B =

ω
¯

MP − I +

ω
¯

D satisﬁes

ω
¯
¯ )}
Sp(B) ⊂ D − , C ∪ {λ( , ω

(23)

where the constant C depends on the parameters α = (αj )Jj=1 and β = (βj )Jj=1 of the spatial discretization
¯ ) is simple and can be expanded
scheme and the chosen velocities v = (vj )Jj=1 . The dominant eigenvalue λ( , ω
as
(λ( , ω
¯ ))

=

α +

(λ( , ω
¯ ))

=

β
.
v

1
ω
¯

α2 − α

2

− β2 +

β
v

2

,

(24)
(25)

1163

When ω(x) is a piecewise constant function over the spatial domain consisting of m constant values or
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
‘levels’ ω
¯ i , i = 1, ..., m, the above expressions in the Fourier domain rapidly become very diﬃcult for in
this case the equations contain convolutions. However, we are still able to get an idea of the spectrum of
˜ by performing numerical experiments. These experiments suggest that
the (formal) ampliﬁcation matrix B
˜
the spectrum of B consists of (i) a combination of the m fast spectra obtained when considering constant
¯ 1 ) given by
ω(x) = ω
¯ i for all x and this for every i = 1, ..., m, and (ii) the dominant eigenvalues λ( , ω
(24)-(25), in which ω
¯ 1 is considered to be the largest ω-level. Therefore, using result (23), we formally write
˜
the following result on the spectrum of B:
m

˜ ⊂
Sp(B)

D −

ω
¯i

¯ 1 )} ,
, Ci ∪ {λ( , ω

(26)

i=1

in which each of the constants Ci depends on α, β and v. An illustration of the spectrum is shown on the
left hand side of ﬁgure 2. Details of this experiment can be found in section 5.1.
When we write the Fourier transform of the innermost forward Euler scheme (15) as
ˆ k = I + h0 B
˜ F
ˆ k+1 = S0 F
ˆ k,
F

(27)

it is clear that the ampliﬁcation factors τ = (τ1 , . . . , τJ ) of the forward Euler scheme, which are the eigen˜ are related via
values of S0 , and the eigenvalues λ = (λ1 , . . . , λJ ) of the matrix B
τj = 1 + h0 λj ,

1 ≤ j ≤ J.

(28)

(By convention, we consider the dominant eigenvalue λ( , ω
¯ 1 ) = λ1 .) Thus, the spectrum of an inner forward
Euler time-stepper satisﬁes
m

˜ ⊂
Sp(I + h0 B)

D 1−

¯i
h0 ω

, O( ) ∪ {1 + h0 λ( , ω
¯ 1 )} ,

(29)

i=1

with λ( , ω
¯ ) given in theorem 4.1.

4.2

TPI Method Parameters

This section is concerned with the selection of the TPI method parameters Ki and Mi such that the TPI
method is stable. The starting point is a given eigenvalue spectrum containing m + 1 eigenvalue clusters with
m fast and 1 slow eigenvalue cluster, which are all located in the left half plane of the complex λ-plane. The
aim of this section is to construct a concrete strategy for determining the time steps Ki and Mi -values of
the TPI method from the (semi-discretized) problem’s spectrum such that we end up with a stable method.
The underlying idea is the following. For i = 0, ..., m − 1 the purpose of the level-i integrator is to bring
the ith fast eigenvalue cluster to 0 (i.e. the level-i integrator should damp all eigenvalues in the ith fast
cluster) whereby the i faster-than-the-current eigenvalue clusters, which were already around 0 due to the
application of the lower level integrators still remain around 0 and are suppressed even more by the level-i
integrator. We can design the values Mi such that the the current (ith ) eigenvalue cluster is maximally
damped. The m − i remaining eigenvalue clusters to the right of the current cluster will shift somewhat
more to the left (i.e. towards 0) since the level-i integrator is also (slightly) damping these eigenvalues. For
stability reasons we require that the remaining m − i clusters still lie in the stability region of the level-(i + 1)
integrator. This can be achieved by carefully selecting the values Ki .
It is clear that in the above reasoning we only desire a stable numerical integration of the fast modes.
The dominant modes, which are the solution components of interest, on the other hand need to be integrated
both in a stable and accurate way. Underneath we scrutinize the level-m TPI method construction. The
analysis will be carried out assuming the forward Euler method on levels i = 0, ..., m − 1. The outermost
(level-m) integrator can be any stable explicit method depending on the required accuracy.
1164

Level-0 integrator. The innermost integrator of the TPI method is the forward Euler scheme with time
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
step h0 . As explained in the introduction of this section we will ﬁx h0 such that the fastest eigenvalue cluster
with center λ0 is moved to 0 in the complex τ -plane. Using equation (28), this leads to h0 = 1/|λ0 |. This
choice of the time step h0 deﬁnes a linear mapping of eigenvalues λ to (level-0) eigenvalues τ , which can be
found in the complex τ -plane within the interval [−η, 1] with η ∈ R+ close to zero.
Level-i integrator. For i = 1, ..., m − 1 the level-i integrator is the projective forward Euler (PFE)
scheme [4], which extrapolates the solution of its inner integrator (i.e. the level-(i − 1) integrator) over a
distance Mi−1 hi−1 . Its ampliﬁcation factor σi in terms of its inner integrator ampliﬁcation factor σi−1 is
given by:
Ki−1
(30)
σi (σi−1 ) = (Mi−1 + 1)σi−1 − Mi−1 σi−1
with σ0 ≡ τ . After applying the level-(i − 1) integrator there will be m + 2 − i eigenvalue clusters in the
σi−1 -plane of which there are m + 1 − i fast and 1 slow cluster, and i clusters will already have been brought
around 0 by the lower level integrators turning these into one big cluster around 0. We then demand that
Mi−1 is chosen such that the fastest eigenvalue cluster that is not yet around 0 in the σi−1 -plane will be
moved to 0 in the σi -plane. This cluster is denoted by σi−1,i , in which the notation σk,l = σk (λl ) represents
the transformation of eigenvalue cluster λk to the σl -plane. Using expression (30) we ﬁnd:
Mi−1 | σi (σi−1,i ) = 0 ⇒ Mi−1 =

σi−1,i
.
1 − σi−1,i

(31)

Once Mi−1 is known, we ﬁx the value of Ki−1 by demanding that all fast eigenvalue clusters that are
already around 0 in the σi−1 -plane fall into the projective level-i stability region around 0 which is given by
D(0, (1/Mi−1 )1/Ki−1 ) [4] where D(κ, μ) denotes the disk with center (κ, 0) and radius μ. We thus obtain:
Ki−1

log(1/Mi−1 )
,
log(ˆ
σi−1 )

1/Mi−1 ≥ σ
ˆi−1 ⇒ Ki−1 =

(32)

in which σ
ˆi−1 = maxk∈{0,1,...,i−1} |σi−1,k |. It is clear that both Mi−1 and Ki−1 are independent of .
Level-m integrator. Finally, the level-m or outermost integrator is designed by ensuring that the real part
of the fastest eigenvalue of the dominant eigenvalue cluster denoted by σ
˜m−1,m in the σm−1 -plane falls in the
dominant stability region of the level-m integrator, which is given by the region D(1 − 1/Mm−1 , 1/Mm−1 ) [4].
This leads to the following inequality:
(˜
σm−1,m ) ≥ 1 −

2
Mm−1

.

(33)

To obtain Mm−1 we examine how the expression of the fastest dominant eigenvalue in the σ0 -plane, which will
remain the fastest dominant eigenvalue in all other σi -planes, is transformed by the projective integrators.
This eigenvalue in the complex σ0 -plane is given in equation (29). In case of upwind diﬀerences of order 1
in space it is of the following form: σ
˜0,m = 1 − C˜0 h0 where C˜0 = 2 |v| /Δx. By plugging the expression of
σ
˜0,m into equation (30) we ﬁnd that for i = 1, ..., m − 1 the ith level PFE integrator scheme transforms this
eigenvalue into:
i−1

σ
˜i,m ≈ 1 − C˜i h0 ,

C˜i = C˜0

(Mk + Kk + 1).

(34)

k=0

Using equation (34) we can now use the condition given in (33) to ﬁnd the value of Mm−1 . To this end, we
will turn the inequality in (33) into an equality. The corresponding (maximal allowed) value of Mm−1 is
Mm−1 =

2
.
˜
Cm−1 h0

(35)

Once the value of Mm−1 is known we use equation (32) to determine the corresponding value of Km−1 .
1165

5
5.1

Numerical
Experiments
Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle
Stability Results

We begin by demonstrating the idea of obtaining a stable TPI method as outlined in section 4.2. To that
end, we consider the kinetic equation (3) with a piecewise constant relaxation proﬁle containing 4 diﬀerent
well separated ω-values {1, 0.01, 0.001, 0.0001} and = 10−6 . We consider the Maxwellian Mv (u) = u + u/v
corresponding to the ﬂux function F (u) = u of the linear advection equation. The velocity space is discretized
using J = 2 velocities {v1 , v2 } = {1.01, −1.01}.
The spectrum will be calculated for x ∈ [0, L], using L = 1 together with periodic boundary conditions.
Since there are 4 ω-levels, we will construct a stable level-4 TPI method. The innermost integrator is a
space-time discretization of equation (3), in which we choose the standard upwind scheme of order 1 with
grid spacing Δx = 10−2 , combined with a forward Euler time discretization with h0 = .
Using equations (31), (35) and (32) we obtain the following values for Mi , i = 0, ..., 3: 9, 8.17, 8.03 and
4.12 and Ki : 1, 1, 1 and 2. The stability regions (green) together with the eigenvalues (blue crosses) in
each plane are shown on the left hand side of ﬁgure 2. In each complex σi -plane, i = 0, ..., 3 we also plotted
the (asymptotic) stability regions (red dashed circles) of the level-(i + 1) projective integration method. We
observe that all level-i eigenvalues fall in these asymptotic regions. Moreover, notice that in the σ4 -plane
the stability region coincides with the unit disc and all σ4 -eigenvalues lie within this region.

5.2

Order Test

We now illustrate the order of the TPI method in time. To this end, we consider the Maxwellian Mv (u) =
u + u/v leading to the linear advection equation on the macroscopic scale.
We compute the solution for t ∈ [0, 0.02] and x ∈ [0, L], using L = 1. We impose periodic boundary
conditions and choose a smooth initial condition: u(x, 0) = exp −160(x − 1/2)2 . We compute the error E
at time t = 0.02 by taking the 1-norm of the diﬀerence between the numerical solution and the analytical
solution of the (linear) semi-discretized system (13). By doing so we take into account the discretization
error in space such that we only look at the error in time.
For the relaxation method, we use the kinetic equation (3) with 3 diﬀerent well separated ω-levels, in
which we discretize the velocity space using J = 2 velocities (v1 , v2 ) = (1.01, −1.01). The TPI method
consists of 3 projective levels since there are three ω-values. The innermost integrator is a space-time
discretization of equation (3), in which we choose the standard upwind scheme of order 3 with grid spacing
Δx = 10−2 , combined with a forward Euler time discretization with h0 = and = 10−8 . The values of Mi
and Ki , i = 0, ..., 2 on each level are determined such that the method is stable.
For demonstrating the temporal order of the TPI method we will vary the outermost time step h3 .
The simulations are run for PFE, PRK2 and PRK4 as outermost integrators. All other projective level
integrators correspond to the PFE method. The result can be seen on the right hand side of ﬁgure 2. On
this plot, we observe that the error curves level oﬀ for small values of h3 in the case of PRK2 and PRK4
as outermost integrators. This is due to the fact that the contribution of the temporal discretization error
becomes negligible, and the error due to the approximation of the time derivative in each projective step by
a ﬁnite diﬀerence approximation becomes dominant. The numerical error of the latter approximation cannot
√
−16
being the machine precision. This is precisely
be decreased further than O
mach with mach ≈ 10
what we observe on the left hand side plot.

6

Conclusions

We presented a general, fully explicit integration method for kinetic equations with BGK source term containing multiple relaxation times. Unlike other methods based on relaxation [1, 7], the telescopic projective
integration method does not rely on a splitting technique, but only on an appropriate selection of time steps
using a naive explicit discretization method at its core. Its main advantage is its generality and ease of use.
1166

σ 0 -plane

λ -plane

-500
-1000
-10

-8

-6

-4

-2

Re(λ)

0.4

0.6

0.8

1

0

σ 3 -plane

0.4

0.2

0.2

Im(σ 4 )

Im(σ 3 )
0.6

0.8

1

1

10

-4

10 -5

0.6

0.4

0
-0.2

10

-6

10

-7

10

-8

0
-0.2
-0.4
-0.6
-0.8

-0.8
0.4

Re(σ 2 )

0.8

σ 4 -plane

1

-0.6

0.2

0.6

0.8

-0.4

0

0.4

Re(σ 1 )

0.6

-0.1

0.2

Re(σ 0 )

0.05

10

-3

-0.1
0.2

PFE
PRK2
PRK4

0

0.8

-0.05

10 -2

-0.05

σ 2 -plane

0

Temporal order test

0.05

0

0
×10 5

0.1

Im(σ 2 )

TPI order test (time) for linear advection

0.1

Error

0

0.1
0.08
0.06
0.04
0.02
0
-0.02
-0.04
-0.06
-0.08
-0.1

Im(σ 1 )

Im(σ 0 )

500

Im(λ)

σ 1 -plane

Telescopic Projective Integration for Multiscale Kinetic Equations with a Speciﬁed Relaxation
Melis,Samaey
Proﬁle

1000

-0.5

0

Re(σ 3 )

0.5

1

-1
-1

-0.5

0

Re(σ 4 )

0.5

1

10

-4

10

-3

10

-2

h3

Figure 2: Left: stability analysis for a level-4 TPI method. Blue crosses in each plane correspond to eigenvalues in
that plane. Green regions represent the stability regions of the full level-4 TPI method with respect to the plane
under study. The red dashed regions are the stability regions of the projective integration method of the next level
integrator in a certain plane. Right: order test in time for a level-3 TPI method. Solid lines: numerical error curves
calculated with the 1-norm. Dotted lines: expected error curve for a particular order.

We showed that, with an appropriate choice of inner step size, the time step restriction on the outer
time step is independent of the small-scale parameter. Moreover, the number of projective levels is also
independent of the scaling parameter. We analyzed stability, and illustrated with numerical results.
For future work, we foresee to elaborate on the application of a time-dependent relaxation proﬁle function.
In that case, the problem’s spectrum changes with time and as a result the TPI method parameters will
also be time-dependent. Alternatively, one could construct a TPI method using a ﬁxed set of parameters
containing only one stability region encompassing all eigenvalues. This of course yields a less eﬃcient method.

References
[1] D. Aregba-Driollet and R. Natalini. Discrete kinetic schemes for multidimensional systems of conservation laws.
SIAM Journal on Numerical Analysis, 37(6):1973–2004, 2000.
[2] P.L. Bhatnagar, E.P. Gross, and M. Krook. A model for collision processes in gases. I. Small amplitude processes
in charged and neutral one-component systems. Physical review, 94(3):511, 1954.
[3] C. Cercignani. The Boltzmann Equation and Its Applications, volume 1979. Springer New York, 1988.
[4] C.W. Gear and I.G. Kevrekidis. Projective methods for stiﬀ diﬀerential equations: problems with gaps in their
eigenvalue spectrum. SIAM Journal on Scientiﬁc Computing, 24(4):1091–1106, 2003.
[5] C.W. Gear and I.G. Kevrekidis. Telescopic projective methods for parabolic diﬀerential equations. Journal of
Computational Physics, 187(1):95–109, 2003.
[6] S. Jin. Eﬃcient asymptotic-preserving (AP) schemes for some multiscale kinetic equations. SIAM Journal on
Scientiﬁc Computing, 21(2):441–454, 1999.
[7] S. Jin and Z. Xin. The relaxation schemes for systems of conservation laws in arbitrary space dimensions.
Communications on pure and applied mathematics, 48(3):235–276, 1995.
[8] P. Laﬁtte, A. Lejon, and G. Samaey. A high-order asymptotic-preserving scheme for kinetic equations using
projective integration. Submitted, 2014.
[9] P. Laﬁtte and G. Samaey. Asymptotic-preserving projective integration schemes for kinetic equations in the
diﬀusion limit. SIAM Journal on Scientiﬁc Computing, 34(2):579–602, 2012.
[10] S.L. Lee and C.W. Gear. Second-order accurate projective integrators for multiscale problems. J. Comput. Appl.
Math., 201(1):258–274, 2007.
[11] R. Rico-Martınez, C.W. Gear, and I.G. Kevrekidis. Coarse projective kMC integration: forward/reverse initial
and boundary value problems. J. Comput. Phys., 196(2):474–489, 2004.

1167

