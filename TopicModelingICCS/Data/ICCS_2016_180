Procedia Computer Science
Volume 80, 2016, Pages 1392–1403
ICCS 2016. The International Conference on Computational
Science

Localized computation of Newton updates in fully-implicit
two-phase ﬂow simulation
Soham M. Sheth and Rami M. Younis
The University of Tulsa, Tulsa, Oklahoma, USA
soham-sheth@utulsa.edu, rami-younis@utulsa.edu

Abstract
Fully-Implicit (FI) Methods are often employed in the numerical simulation of large-scale subsurface ﬂows in porous media. At each implicit time step, a Newton-like method is used to
solve the FI discrete nonlinear algebraic system. The linear solution process for the Newton
updates is the computational workhorse of FI simulations. Empirical observations suggest that
the computed Newton updates during FI simulations of multiphase ﬂow are often sparse. Moreover, the level of sparsity observed can vary dramatically from iteration to the next, and across
time steps. In several large scale applications, it was reported that the level of sparsity in
the Newton update can be as large as 99%. This work develops a localization algorithm that
conservatively predetermines the sparsity pattern of the Newton update. Subsequently, only
the ﬂagged nonzero components of the system need be solved. The localization algorithm is
developed for general FI models of two phase ﬂow. Large scale simulation results of benchmark reservoir models show a 10 to 100 fold reduction in computational cost for homogeneous
problems, and a 4 to 10 fold reduction for strongly heterogeneous problems.
Keywords: Fully-Implicit, Localization, Newton’s Method, and porous media

1

Introduction

Numerous physical phenomena are modeled using nonlinear and variable-coeﬃcient forms of the
Advection-Diﬀusion-Reaction (ADR) partial diﬀerential equations (PDEs) [3]. These include
geologic subsurface multiphase ﬂows [1, 6, 8, 2], large-scale and steady ﬂuid dynamics [5, 7]
and atmospheric ﬂows [11, 4]. These phenomena are generally characterized by a stiﬀ nonlinear
coupling and a wide disparity in the range of varying coeﬃcients. Furthermore, in many applications there is a need to model large-scale domains while capturing critical, intrinsically local
eﬀects. As a consequence of these factors, modern numerical methods must somehow balance
robustness with computational eﬃciency.
For the class of problems at hand, implicit numerical approximations are particularly attractive owing to their unconditional stability with respect to the time-step size (see for example
[1, 2]). An implicit time-step requires the solution of a tightly coupled nonlinear system of
1392

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.445

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

discrete residual equations given the target time-step size and the initial state vector for the
time-step. An often cited limitation of implicit methods remains to be their need for the solution of large coupled nonlinear algebraic systems at each time step. Due to the nonlinear
nature of the governing equations, Newton-like iterative processes are the method of choice,
and subsequently, requires the solution of a large linear system at every iteration.
Recent mathematical developments show that there is signiﬁcant locality present with the
Newton updates. [12, 9] present a novel algorithm to characterize this locality and reduce the
size of the linear system which increases the computational eﬃciency. [10] applies this algorithm
to two phase sequential implicit simulation of ﬂow and transport.
This work extends the solution strategy to three-dimensional two-phase fully implicit simulation. This is a meaningful point of departure for the development of adaptive solution methods
for more general problems.

2

General approach

Fluid ﬂow in porous media can be described by the canonical equation
∂t a(u) + ∂x f (u) + ∂x G(u, ∂x u) + s(u) = 0,
α(u) + β

∂u
∂ν

= w,

in (0, T ) × Ω,

(1a)

in (0, T ) × ∂Ω,

(1b)

u = u0 , for t = 0 and x ∈ ∂Ω

(1c)

where Ω is a bounded domain in Rd with boundary ∂Ω and (d = 1, 2, 3); ∂u
∂ν denoted the
gradient along the outward oriented unit-normal on ∂Ω; u = (u1 , . . . , um )T is the state vector
that is comprised of the independent state variables, ui : Ω × (0, T ) → R, for i = 1, . . . , m; a(u)
is the accumulation; f (u) is the inviscid ﬂux; G(u, ∂x u) is the viscous ﬂux, and s(u) are the
reaction terms.
T
), . . . , un+1
Upon the semi-discretization in time, the independent state vector un+1 = (un+1
m
1
n+1
n+1
is introduced, where ui
: Ω → R, i = 1, . . . , m. The solution, u
, is the approximation to
the independent state vector at discrete time level n + 1; i.e., un+1 (x) ≈ u(x, tn+1 ). The type
of implicit discretization is unimportant so long as the resulting semi-discrete form has a single
stage. Linear multistep methods follow this paradigm for example. In what follows we drop
the superscript indicating the discrete time level, and we assume that all variables are at the
n + 1 level. The corresponding canonical form of the semi-discrete equations becomes,
R∞ (u) := s(u) + ∂x f (u) + ∂x G(u, ∂x u) = 0, in Ω,
∂u
= w, in ∂Ω,
B∞ (u) := αu + β
∂ν

(2a)
(2b)

where s(u) incorporates both the reaction and discrete accumulation. The dependence on the
approximations at previous time levels is implied by the fact that all terms in Equations 2
are spatially variable. Equation 2 is a nonlinear system of PDE and is referred to as the
inﬁnite-dimensional problem.
Assuming Fr´echet diﬀerentiability (denoted by R∞ ), and invertability of the derivative,
Newton’s method may be applied to solve Equation 2. Given an initial guess, u0 , the inﬁnitedimensional Newton updates,
ν
(x) := uν+1 − uν , ν = 1, . . . ,
δ∞

1393

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

are obtained by solving the linear PDE,
ν
R∞ (uν )δ∞
+ R∞ (uν ) = 0,
∂ ν
ν
+ β δ∞
= 0,
αδ∞
∂ν

in Ω,

(3a)

in ∂Ω,

(3b)

Analogously, assuming that the ﬁnite-dimensional residual equations are diﬀerentiable, and
that the resulting Jacobian matrix is invertible, the ﬁnite-dimensional problem may be solved
using Newton’s method as well. The iteration is started from Uh0 , and the update directions
are obtained by solving the linear algebraic system,
Rh (Uhν )(δhν ) + Rh (Uhν ) = 0 ν = 1, . . . .

(4)

The inﬁnite- and ﬁnite-dimensional Newton iterates are also realed to each other through the
spatial discretization error. This situation is summarized in Figure 1. Assuming a suﬃciently

Figure 1: The connections between the Newton processes for the inﬁnite- and ﬁnite-dimensional
problems.
accurate discretization, and requiring the inﬁnite norms, we have that the nonzero support of
the inﬁnite update is equation to that the numerical update,
ν
= supp δhν .
supp δ∞

The approach taken in [12, 9, 10] is to seek an analytical approximation to the solution of the
problem 3. An approximation is necessary as the problem has generally variable coeﬃcients,
and despite beng linear, the direct solution may be intractable. Nevertheless, the approximate
solution, δ ∗ , is derived such that,
(5)
δ ∗ ≥ δ∞ ,
thereby guaranteeing that the support of the estimate is conservative,
ν
supp δ ∗ ⊇ supp δ∞
≈ supp δh .

In multiple dimensions, the analytical solution to the linear problem described above is challenging. Next, we present an algorithm that produces conservative estimates.
1394

Localized computation of Newton updates in implicit ﬂow simulation

3

S.M. Sheth and R.M. Younis

Fully implicit multidimensional algorithm

The inﬁnite-dimensional Newton iteration is a linear Partial Diﬀerential Equation (PDE) with
variable coeﬃcients. For ﬂow, Equation 3 becomes the screened Poisson equation (or the
modiﬁed Helmholtz equation), and for transport, it reduces to a ﬁrst-order hyperbolic equation
with no time component. Since the PDEs are linear, superposition may be applied by the
decomposition of the residual into a serious of bump functions, each of which has a disjoint
and compact support. This allows us to derive the estimate that is composed of the sum
of the solutions of each sub-domain. In order to use the superposition principle eﬃciently,
for each compactly supported residual component, the PDE may be solved analytically. In
multiple dimensions, closed form analytical solutions for general variable coeﬃcient PDEs are
almost impossible to obtain. Following the procedure described in [10], instead of seeking exact
analytical update, δ∞ , we may choose to solve a similar but simpler problem for a conservative
estimate, δ ∗ , that satisﬁes condition given in Equation 5.
Similar to the algorithm developed in [10], we will seek spherically symmetric solutions that
will be conservative to the solutions obtained within a three-dimensional cubic space. For highly
heterogeneous problems, the solutions obtained will be overly conservative due to the strong
spatial correlation in the variable coeﬃcients of the Newton problem.
For coupled ﬂow and transport, the inﬁnite-dimensional Newton iteration is a system of
linear PDEs. If Rp (p, s) and Rs (p, s) represent the governing equations for ﬂow and transport,
respectively, then the Newton iteration is given by
⎡
⎤
∂Rp (p,s+ δs )
∂Rp (p+ δp ,s)
Rp (p, s)
∂
∂
=0
=0 ⎦ = −
⎣
,
(6)
∂Rs (p+ δp ,s)
∂Rs (p,s+ δs )
Rs (p, s)
∂

=0

∂

=0

∂Ru (u+ δu ,v)
∂

(u,v)
where
is the Fr´echet derivative, which evaluates to ∂Ru∂u
· δu . We postulate
=0
∗
that a conservative estimate, δ , can be obtained by neglecting the oﬀ-diagonal entries in the
matrix system given by Equation 6 and solving a decoupled system for ﬂow and transport.
With an analytical solution of Equation 3, the following algorithm can be used to identify
the support of the discrete Newton update:

1. Inspect the discrete residual vector. If it is sparse, we proceed to step 2. Otherwise, the
original system is solved.
2. For each nonzero residual entry:
(a) Project the nonzero entry onto a piecewise constant bump function whose support
is the corresponding grid cell.
(b) Use the analytical estimate to obtain the radius of the anticipated support due to
the residual entry; supp δ ∗ .
(c) Flag all cells within the radius from the i-th cell.
3. Solve the discrete Newton system for the ﬂagged cells only by removing the rows and
columns of all unﬂagged cells from the Jacobian matrix.
The complexity of this algorithm scales linearly with the number of nonzero residual entries,
O(||Rh ||0 ). Next we derive the decoupled analytical estimates for ﬂow and transport for threedimensional problems, which corresponds to the solution of Equation 6 by neglecting the oﬀdiagonal matrix entries. The equations derived will be used to obtain a priori estimates of the
nonzero support of the Newton updates for a fully implicit time stepping algorithm.
1395

Localized computation of Newton updates in implicit ﬂow simulation

4

S.M. Sheth and R.M. Younis

Flow

The following second order diﬀerential equation describes ﬂuid ﬂow in porous media in multiple
dimensions. The canonical form is give by
∂a(p(x, t))
+ ∇(K(p(x, t), x)∇(p(x, t))) = w(p(x, t)),
∂t

in (0, T ) × Ω,

(7)

with the auxiliary conditions
K(p, x)∇p = 0,
0

p=p ,

in ∂D, t ≥ 0,
t = 0,

(8a)
(8b)

where K(u, x) is a nonlinear mobility function which incorporates spatially varying diﬀusion
coeﬃcient and a dynamic mobility dependency. In most applications K is solely a function of u
but in cases with spatial heterogeneity, its a direct function of u and x. a(u) is mostly nonlinear
and it incorporates a heterogeneous porosity and general density dependencies. The net source
term is denoted by w(u) and it may be spatially and temporally variable. Equation 7 reduces
to a reaction-diﬀusion equation when K(u, x) is constant. The semi-discrete form of Equation 7
is
(9)
Rp (pn+1 ) = a(pn+1 ) − a(pn ) + Δt ∇.[K(pn+1 , x)∇pn+1 ] − w(pn+1 ).
Subsequently, the inﬁnite-dimensional Newton iteration becomes
Rp (pν ) = −Rp (pν )δp
= − [{a (pν ) − Δt w (pν )}δp + Δt ∇{∇ [K(pν , x)δp ] − ∇K(pν , x)δp }] .
Assuming no spatial variation in K i.e., ∇K(p, x) = 0, the above equation reduces to
Δδˆp (x) + h(x)δˆp (x) = −Rp (x),
where δˆp = Δt K(p, x)δp and
h(x) =

(10)

a (p) − Δt w (p)
.
Δt K(p)

As described in the previous section, instead of seeking solution of Equation 10, we solve a
similar equation such that we obtain conservative solution. It is postulated that for a modiﬁed
Helmholtz equation, the inﬁmum of the variable coeﬃcient, h(x), produces the most conservative estimates. Using the inﬁmum of the variable coeﬃcients, the estimates obtained may
sometimes be highly conservative. Through experiments, it was observed that harmonic mean
averaging also provide conservative estimates and are less conservative than the estimates obtained by taking the inﬁmum as the homogenization strategy. Therefore, letting
λ2avg = −harmmeanx∈Ω h(x),
we obtain

Δδp∗ (x) − λ2avg δp∗ (x) = −Rp (x).

(11)

For a two-dimensional problem, a step wise solution is obtain in [10]. Following the same
method, we obtain spherically symmetric solutions of Equation 11. Assuming a nontrivial
residual bump function, β, with a nonzero support of radius r1 ,
δp (r) =
1396

R2
1
βeλavg (r1 −r)
−
,
2λavg Δt K(p, r) r(1 + λavg R) λavg

(12)

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

where, R is the domain boundary and Δt is the time step size. The radius of the nonzero
support of the Newton update can be computed from the above expression numerically by
equating the right hand side to machine precision number.

5

Transport

Transport equation governs the motion of a conserved scalar ﬁeld as it is transported by a
known velocity vector ﬁeld. One such process is the ﬂow of ﬂuids in porous media described by
the hyperbolic conservation laws. The canonical form of the saturation equation is given by
∂a(s(x, t))
+ ∇ · f (s(x, t)) = w(s(x, t)),
∂t

in (0, T ) × Ω,

(13)

where f (s) is a general nonlinear ﬂux function, a(s) is the mass accumulation term and w(s) is
a source term. The auxiliary conditions prescribed here are
f (s(x, t)).ˆ
n = 0,
0

s=s ,

in ∂D, t ≥ 0,
t = 0.

(14a)
(14b)

The semi-discrete form of Equation 13 is
Rs (sn+1 ) := a(sn+1 ) − a(sn ) + Δt ∇ · f (sn+1 ) − Δt w(sn+1 ),

(15)

where Δt is the time step size. Following the procedure described in the previous sections, the
Fr´echet derivative results in a quasilinear diﬀerential equation given by
Rs (sn+1 )δs := {a (sn+1 ) − Δt w (sn+1 )}δs + Δt ∇ · (f (sn+1 )δs ).

(16)

Subsequently, the inﬁnite-dimensional Newton iteration becomes
Rs (sν ) = −Rs (sν )δs
= − [{a (sν ) − Δt w (sν )}δs + Δt ∇ · (f (sν )δs )] .
The above equation reduces to
∇δˆs (x) + h(x)δˆs (x) = −Rs (x),

(17)

where δˆs = Δt f (s)δs and
h(x) =

a (s) + Δt w (s)
.
Δt f (s)

The solution obtained in [10] for a two-dimensional case decomposes the residual function into
summation of several bump functions. Following the same procedure, the solution in threedimensions is
δ ∗ (r∗ ) r∗ 2 −λmin (r−r∗ )
e
,
(18)
δs (r) = s
Δt f (s) r2
where r∗ is the position of the residual, δ ∗ is the Newton update experienced by the gridcell
contained within r∗ and λmin is the inﬁmum over all h(x).
1397

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

From Equation 18, the radius of the nonzero support of the Newton update caused by the
residual at r∗ is computed by
A
2
√
Wn
A
2 B
⎡
A
2
√
= ⎣log
A
2 B

r=

⎛
A
√
2 B

− log log

− log ⎝1 −

A
√
2 B

log log
log

A
√
2 B

where Wn (x) is the Lambert function evaluated at x, A = λmin and B =

6

⎞⎤
⎠⎦ ,

m Δt f (s)
δs∗ (r ∗ )r ∗ exp[λmin r ∗ ] .

Results

Incorporating the analytical estimates derived in the previous sections in a two phase reservoir
simulator, we estimate the radius of inﬂuence for each nonzero residual entry. The union of all
the sub-domains that result from individual ﬂagging, forms the new and reduces computational
domain for the linear solver. The ﬁrst test case is a homogeneous permeability ﬁeld with
1, 122, 000 gridcells (60X220X85). One production and one injection well act as a source and
a sink with slight compressibility in the problem. Figure 2 shows the simulation results for a
few time steps with the time-step size increasing stepwise, shown by the green curve on the
secondary axis. The primary y-axis is the percentage of domain that is solved every iteration.
For conventional solution strategies, the entire domain is solved every iteration, resulting in a
straight line at 100% as its ordinate. The red curve in Figure 2 is the actual domain that is
showing a nonzero Newton update or in other words active. The rest of the domain, which is
inactive, if excluded from the computational domain will neither aﬀect the solution nor degrade
the nonlinear convergence rate. The blue curve is an a priori estimate of the active domain
obtained by applying the aforementioned algorithm. As it can be observed, the estimate is
consistently conservative to the a posteriori numerical solution. The maximum domain that
needs to be solved is around 25%, with an average of 8.5%.
The corresponding increase in the computational eﬃciency is shown by computing the complexity of the new algorithm against that of the conventional methods. Suppose that the
computational cost for a linear solver is given by
cost = αN β ,

(19)

where N is the size of the problem, α and β are constants. Usually, the values of β for a
linear solver range from 1.1 − 1.5. In Table 1 the ﬁrst row gives the increasing values of β,
second row shows the ratio of the complexity of the developed localized algorithm to that of
the conventional full ﬁeld simulation, give by
ratio =

α

n
β
i=1 (%Ni )
,
αnN β

where n is the total number of iterations and %Ni is the reduced size of the domain as predicted
by the algorithm. The folds increase in the computational eﬃciency is given in the third row.
For an average β value of 1.4, the localized algorithm will be 28 times faster compared to solving
the entire domain every iteration. Stronger the locality, higher will be the computational gains.
The second test case is the highly heterogeneous SPE10 comparative study with 1, 122, 000
gridcells (60X220X85), shown in Figure 3. Due to a huge contrast in the values of the variable
1398

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

Figure 2: Percentage of domain solved over several time-steps for a homogeneous permeability
ﬁeld.
coeﬃcient, the homogenization of the pressure equation leads to overly conservative estimates.
Saturation equation being hyperbolic in nature results in highly local estimates.
Table 1: Complexity analysis for localized linear solver for a homogeneous domain.
β value
α

n
β
i=1 (%Ni )
αnN β

Folds faster

1.0

1.2

1.4

1.6

1.8

2.0

0.0847
11.80

0.0546
18.29

0.0356
28.03

0.0235
42.50

0.0156
63.83

0.0105
95.03

Table 2: Complexity analysis for localized linear solver for the SPE10 comparative study case
(60X220X85 gridcells).
β value
α

n
β
i=1 (%Ni )
αnN β

Folds faster

1.0

1.1

1.2

1.3

1.4

1.5

1.6

1.7

1.8

1.9

2.0

0.38
2.65

0.34
2.90

0.32
3.16

0.29
3.45

0.27
3.76

0.24
4.10

0.22
4.46

0.21
4.86

0.19
5.30

0.17
5.77

0.16
6.28

Stricter estimates can be obtained by devising alternate strategies for homogenizing the variable
coeﬃcient equation. One such strategy is shown in the next section. Observing the nonzero
Newton updates for pressure and saturation over several iterations, see Figure 4, show that
there is no uniform trend visible, thus rendering ad hoc prediction methods unreliable. In
Figure 4, blue shaded area is obtained by the application of the algorithm described in this
paper while the green shaded area is the result from the numerical simulator. As it can be
easily observed, the new algorithm is conservative and sharp at all points in the domain, thus
1399

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

(b) Logarithm of permeability for the 48th layer of
SPE10.
(a) Logarithm of permeability in the xdirection for the full SPE10 case.

Figure 3: SPE 10 comparative geological model permeability ﬁeld.

(a) Iteration 1: Pressure

(d) Iteration 1: Saturation

(b) Iteration 2: Pressure

(e) Iteration 2: Saturation

(c) Iteration 3: Pressure

(f) Iteration 3: Saturation

Figure 4: Nonzero Newton updates for pressure and saturation over three consecutive iterations.
The blue shaded ares is obtained by using the algorithm described in the paper while the green
area is the actual domain showing a nonzero Newton update. Our estimates are conservative
and sharp.

1400

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

Figure 5: Percentage of domain solved over several time-steps for the SPE10 comparative study
case.
proving to be a reliable method for the prediction of locality present in the nonlinear solution
process. Another important observation made is that the degree of locality increases over
iterations. From Figure 5 it can be observed that the ﬁrst iteration for pressure result in a
fairly global update but the subsequent iterations are all local. The overall computational
gains are summarized in Table 2.
Depending on the complexity of the linear solver, the localized algorithm will result in
improved computational speed. The average gain in the computational eﬃciency is around
4 folds. Even for the worst case scenario, this algorithm is 2.6 times faster than the full
ﬁeld solution strategies. The higher gains are a result of the strictly localized behavior of the
hyperbolic equation. With multicomponent systems, the gains would be substantially higher
than two phase simulations.

7

Homogenization strategy

The homogenization strategy that result in conservative estimates theoretically is the inﬁmum
strategy. In other words, taking the inﬁmum of the variable coeﬃcient on the domain results
in a constant coeﬃcient second order equation whose solution is always conservative to the
solution of the variable coeﬃcient equation. Through experiments, it was observed that this
strategy can be replaced by harmonic mean averaging. In this section we present an alternate
strategy that result in very sharp estimates that might not be conservative at all times. It
was also observed that even though the estimates are not conservative in some cases, the
nonlinear convergence rate is not aﬀected. Figure 6 is obtained by simulating the ﬁrst 20
layers layers of the SPE10 comparative study case for several time-steps. It can be readily
seen that the arithmetic averaging strategy result if very sharp estimates as the diﬀerence
between the blue and the red curves is signiﬁcantly smaller than the one for harmonic averaging
1401

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

strategy in Figure 5. Sharp estimates mean high computational gains. Hence, using arithmetic
averaging instead of harmonic averaging will result in higher computational gains at the expense
of nonconservative estimates. For this case, the estimates obtained are always conservative,
which might not be the case in more complex cases. Further investigation is required to develop
conservative and sharp homogenization strategies.

Figure 6: Percentage of domain solved over several time-steps for the arithmetic homogenization
strategy applied on the SPE10 comparative study case.

8

Conclusions

An algorithmic approach and associated theory is developed to exploit the locality present in
the nonlinear solution processes for ﬂow in porous media. The methods are conservative and
reproduce the Newton updates exactly, thereby preserving the nonlinear convergence rate. The
degree of locality depends on the physics and complexity of the problem. It is a strong function
of the compressibility of the system and the numerical time-step size. Advanced homogenization
strategies can be developed to obtain conservative and sharp estimates such as the arithmetic
averaging strategy. Gains of up to 95 fold were obtained for homogeneous simple problems. Up
to 6 fold gains were observed in the computational time for the case of highly complex problems.
The future work includes extending this algorithm to general fully-implicit simulation of coupled
ﬂow and multicomponent transport.

References
[1] K. Aziz and A. Settari. Petroleum reservoir simulation. Chapman & Hall, 1979.
[2] Z. Chen, G. Huan, and Y. Ma. Computational methods for multiphase ﬂows in porous media,
volume 2. Siam, 2006.

1402

Localized computation of Newton updates in implicit ﬂow simulation

S.M. Sheth and R.M. Younis

[3] W. Hundsdorfer and J.G. Verwer. Numerical solution of time-dependent advection-diﬀusionreaction equations, volume 33. Springer Science & Business Media, 2013.
[4] G.J. McRae, W.R. Goodin, and J.H. Seinfeld. Numerical solution of the atmospheric diﬀusion
equation for chemically reacting ﬂows. Journal of Computational Physics, 45(1):1–42, 1982.
[5] G.I. Montecinos and E.F. Toro. Reformulations for general advection–diﬀusion–reaction equations
and locally implicit ader schemes. Journal of Computational Physics, 275:415–442, 2014.
[6] D.W. Peaceman. Fundamentals of numerical reservoir simulation. Elsevier, 2000.
[7] T.H. Pulliam. Early development of implicit methods for computational ﬂuid dynamics at nasa
ames. Computers & Fluids, 38(3):491–495, 2009.
[8] T.F. Russell and M.F. Wheeler. Finite element and ﬁnite diﬀerence methods for continuous ﬂows
in porous media. The mathematics of reservoir simulation, 1:35–106, 1983.
[9] S.M. Sheth and R.M. Younis. Asynchronous multirate newton - a class of nonlinear solver that
adaptively localizes computation. In 14th European conference on the mathematics of oil recovery,
2014.
[10] S.M. Sheth and R.M. Younis. Localized linear systems for sequential implicit simulation of ﬂow
and transport. In SPE Reservoir Simulation Symposium. Society of Petroleum Engineers, 2015.
[11] J.G. Verwer, E.J. Spee, J.G. Blom, and W. Hundsdorfer. A second-order rosenbrock method
applied to photochemical dispersion problems. SIAM Journal on Scientiﬁc Computing, 20(4):1456–
1480, 1999.
[12] R.M. Younis. A sharp analytical bound on the spatiotemporal locality in general two-phase ﬂow
and transport phenomena. Procedia Computer Science, 18:473–480, 2013.

1403

