The Security of Many-Round Luby-Rackoﬀ
Pseudo-Random Permutations
Ueli Maurer and Krzysztof Pietrzak
Department of Computer Science
Swiss Federal Institute of Technology (ETH), Zurich
CH-8092 Zurich, Switzerland
{maurer,pietrzak}@inf.ethz.ch

Abstract. Luby and Rackoﬀ showed how to construct a (super-)pseudorandom permutation {0, 1}2n → {0, 1}2n from some number r of pseudorandom functions {0, 1}n → {0, 1}n . Their construction, motivated by
DES, consists of a cascade of r Feistel permutations. A Feistel permutation 1for a pseudo-random function f is deﬁned as (L, R) →
(R, L ⊕ f (R)), where L and R are the left and right part of the input and
⊕ denotes bitwise XOR or, in this paper, any other group operation on
{0, 1}n . The only non-trivial step of the security proof consists of proving that the cascade of r Feistel permutations with independent uniform
r
random functions {0, 1}n → {0, 1}n , denoted Ψ2n
, is indistinguishable
2n
from a uniform random permutation {0, 1} → {0, 1}2n by any computationally unbounded adaptive distinguisher making at most O(2cn )
combined chosen plaintext/ciphertext queries for any c < α, where α is
a security parameter.
Luby and Rackoﬀ proved α = 1/2 for r = 4. A natural problem, proposed
by Pieprzyk is to improve on α for larger r. The best known result, α =
3/4 for r = 6, is due to Patarin. In this paper we prove α = 1 − O(1/r),
i.e., the trivial upper bound α = 1 can be approached. The proof uses
some new techniques that can be of independent interest.

1

Introduction

The security of many cryptographic systems (e.g., block ciphers and message
authentication codes) is based on the assumption that a certain component
(e.g. DES or Rijndael) used in the construction is a pseudo-random function
(PRF) [2]. Such systems are proven secure, relative to this assumption, by showing that any eﬃcient algorithm for breaking the system can be transformed into
an eﬃcient distinguisher for the PRF from a uniform random function (URF).
1.1

Constructing Pseudorandom Permutations

There is a long line of research based on this paradigm, initiated in the seminal
paper of Luby and Rackoﬀ [5] who showed how to construct a pseudo-random
permutation (PRP) from any PRF. That paper is not only of interest because it
E. Biham (Ed.): EUROCRYPT 2003, LNCS 2656, pp. 544–561, 2003.
c International Association for Cryptologic Research 2003

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

545

introduced the paradigm, but also because it proposed a very natural construction, motivated by DES, consisting of r Feistel permutations involving independent invocations of a PRF.
Usually, the only non-trivial step in a security proof of a construction based
on PRF’s is a purely probability-theoretic step, namely the analysis of the idealised construction when the PRF’s are replaced by URF’s, and proving that it
is information-theoretically indistinguishable from, in our case, a uniform random permutation (URP), when the number of allowed queries is bounded (by a
large, usually exponential bound).1 The strength of the security proof depends
on the size of this bound. Ideally, the number of allowed queries should be close
to the trivial information-theoretic upper bound: If, for some suﬃciently large
number of queries, the expected entropy contained in the answers from the perfect system exceeds the entire internal randomness of the construction, then a
(computationally unbounded) distinguisher trivially exists.
More concretely, the r-round Luby-Rackoﬀ construction of a permutation
r
{0, 1}2n → {0, 1}2n (hereafter denoted by Ψ2n
) consists of a cascade of r Feistel
permutations involving independent URF’s {0, 1}n → {0, 1}n , where a Feistel
permutation for a URF f is deﬁned as (L, R) → (R, L ⊕ f (R)). Here L and R
are the left and right part of the input and ⊕ denotes bitwise XOR or, in this
paper, any other group operation on {0, 1}n .
Two versions of a PRP were considered in [5], namely when queries from only
one side are allowed, and when queries from both sides are allowed. When the
PRP is considered as a block cipher, these two variants correspond to chosenplaintext and to combined chosen-plaintext/ciphertext attacks respectively . The
latter variant was referred to in [5] as a super-PRP. In this paper we will only
consider this stronger variant.
r
The problem we hence address is to prove that Ψ2n
is indistinguishable from
2n
2n
a uniform random permutation {0, 1} → {0, 1} by any computationally unbounded adaptive distinguisher making a certain number of queries. To compare
results, it makes sense to measure the number of queries on an logarithmic scale,
i.e., by the number c when O(2cn ) queries are allowed. More precisely, one can
state a result in terms of a constant α such that for all c < α, indistinguishability
holds for all suﬃciently large n.
Luby and Rackoﬀ proved that α = 1/2 for r = 4. Since then several simpliﬁcations (e.g. [6],[8]) and generalisations of this result have appeared. Ramzan
and Reyzin [13] proved that even if the adversary has black-box access to the
4
middle two functions of Ψ2n
, the security is maintained. Naor and Reingold [8]
showed that the security is maintained if one replaces the ﬁrst and last round
4
of Ψ2n
with pairwise independent permutations, and even weaker constructions
were proven secure in [11].
1

Two systems F and G are indistinguishable by a distinguisher D making at most k
queries if the following holds: The expected advantage of D, after making k queries
to a black-box containing either F or G with equal probability, in guessing which
system is in the black-box, is negligible.

546

U. Maurer and K. Pietrzak

A natural problem, proposed by Pieprzyk [12], is to improve on α for larger
m. The best known result, α = 3/4 for r = 6, is due to Patarin [10]. He also
conjectured that better bounds hold. In this paper we address this problem
and prove α = 1 − O(1/r), i.e., that the optimal upper bound2 α = 1 can be
approached for increasing r.
The proof uses some new techniques that appear to be of independent interest. In many of the literature (e.g. [6],[7],[8]) on security proofs based on PRF’s,
one considers a (bad) event such that if the event does not occur, then the system
behaves identically to the system it should be distinguished from, thus one can
concentrate on the (simpler) problem of provoking the bad event. However, this
r
approach has so far only been successful in analysing Ψ2n
for (small) constant r.
r
Therefore, as a new technique, we extend the system Ψ2n
to a more sophisticated
construction that oﬀers new possibilities to deﬁne such events.
1.2

The Main Theorem

Our main theorem states that any computationally unlimited distinguisher,
making at most k chosen plaintext/ciphertext queries has advantage at most
6r−1
k2
kr+1
from a uniform random permutation
22n−2 + 2r(n−3)−1 in distinguishing Ψ2n
(URP).
As a corollary3 we get that any distinguisher (as above), making at most
r
O(2cn ) queries has exponentially small (in n) advantage in distinguishing Ψ2n
4
(here r + 1 must be a multiple of 6) from a URP if c < 1 − 6/(r + 7). This beats
the best known bound α = 3/4 for r = 23 where we get α = 4/5.
1.3

Related Work

Diﬀerent constructions of PRP’s, so called unbalanced Feistel schemes, were
investigated in ,[4],[8]. An unbalanced Feistel scheme over {0, 1}n , for k ≥ 2 and
= n/k, is a generalisation of the original scheme, where the URF’s in each
round are unbalanced, i.e. {0, 1}(k−1) → {0, 1} . For k = 2 one gets the original
Feistel scheme. In [8] the security of those schemes (where the number of rounds
is k + 2) up to 2n(1−1/k)/2 queries is shown.5 We approach the same bound (for
2

3

4
5

r
This upper bound can be seen as follows: The internal randomness of Ψ2n
are the r
n
function tables for the URF’s, each containing n2 bits. The entropy of an output
of a URP on 2n bits is log(22n ) = 2n bits for the ﬁrst, log(22n − 1) for the second
output and so on, which is more that n for the ﬁrst 22n − 2n queries. So after r2n
(this is in O(2n ) for any ﬁxed r) queries the entropy of the output of a URP is larger
r
than the entropy in Ψ2n
, and thus a computationally unbounded distinguisher exists.
k2
kr+1
We use that 22n−2 + 2r(n−3)−1
∈ O kr+1 /2rn , and this is in O(1) if k is in the
1
n(1− r+1
).
order of 2

If 6 does not divide r + 1, then this must be replaced by c < 1 − 1/( r+1
+ 1).
6
This bound is basically the birthday bound for the URF’s used, and thus the square
root of the information theoretic upper bound O(2n(1−1/k) ) for this construction.

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

547

a permutation over the same domain {0, 1}n ) for the original Feistel scheme (i.e.
ﬁxed k = 2) as the number of rounds is increased.
Another line of research concentrated on schemes where the number of different PRF’s used in the construction is minimised (see [12],[9]). Knudsen [3]
considered a diﬀerent settings where the functions are not URF’s but chosen
from a family of size 2k .
A generic way to strengthen the security of random permutations was given
by Vaudenay [14] who showed that the advantage (for computationally unlimited
distinguishers) in distinguishing a cascade of independent random permutations
from a URP is basically only the product of the advantages of distinguishing
each random permutation separately.
1.4

Organisation of the Paper

The proof of our main theorem is based on the framework of [7]; the required
deﬁnitions and results from [7] are summarised in Section 2. In Section 3 we
propose a new lemma which reduces the task of upper bounding the indistinguishability of a random permutation from a URP by adaptive combined chosen
plaintext/ciphertext strategies, to the task of upper bounding the probability
that a non-adaptive chosen plaintext only strategy succeeds in provoking some
event. In Section 4 we ﬁrst give a formal deﬁnition of the (many-round) LubyRackoﬀ construction and then state the main theorem (Section 4.1). An outline
of the proof is given in Section 4.2. The full proof is shown in Section 5. Section
6 summarises some conclusions.

2

Indistinguishability of Random Systems

This section summaries some deﬁnitions and results from [7], sometimes in a less
general form. We also propose two simple new lemmas.
2.1

Notation

We denote sets by capital calligraphic letters (e.g. X ) and the corresponding capital letter X denotes a random variable taking values in X . Concrete values for
X are usually denoted by the corresponding small letter x. For a set X we denote
by X k the set of ordered k-tuples of elements from X . X k = (X1 , X2 , . . . , Xk )
denotes a random variable taking values in X k and a concrete value is usually
denoted by xk = (x1 , x2 , . . . , xk ).
Because we will consider diﬀerent random experiments where the same random variables appear, we extend the standard notation for probabilities (e.g.
PV (v),(PV |W (v, w)) by explicitly writing the random experiment E considered
as a superscript, e.g. PEV (v). Equivalence of distributions means equivalence on
all inputs, i.e.
PEV1 = PEV2 ⇐⇒ ∀v ∈ V : PEV1 (v) = PEV2 (v)
If a denotes the event that a random variable A takes some speciﬁc value, say
a ⇐⇒ A = 1, then we write PEa to denote PEA (1).

548

2.2

U. Maurer and K. Pietrzak

Random Automata and Random Systems

A central concept in the framework are systems, which take inputs (or queries)
X1 , X2 , . . . ∈ X and generate, for each new input Xi , an output Yi ∈ Y. Such a
system can be deterministic or probabilistic, and it can be stateless or contain
internal memory. A stateless deterministic system is simply a function X → Y.
Deﬁnition 1 A random function X → Y (random permutation on X ) is a random variable which takes as values functions X → Y (permutations on X ). A
deterministic system with state space Σ is called an (X , Y)-automaton and is described by an inﬁnite sequence f1 , f2 , . . . of functions, with fi : X × Σ → Y × Σ,
where (Yi , Si ) = fi (Xi , Si−1 ), Si is the state at time i, and an initial state S0 is
ﬁxed. An (X , Y)-random automaton F is like an automaton but fi : X ×Σ ×R →
Y × Σ (where R is the space of the internal randomness), together with a probability distribution over R × Σ specifying the internal randomness and the initial
state.6
Deﬁnition 2 A uniform random function (URF) R : X → Y (A uniform random permutation (URP) P on X ) is a random function with uniform distribution
over all functions from X to Y (permutations on X ). Throughout, the symbols
P and R are used for the systems deﬁned above.
A large variety of constructions and deﬁnitions in the cryptographic literature
can be interpreted as random functions, including pseudo-random functions. The
more general concept of a (stateful) random system is considered because this
is just as simple and because distinguishers can also be modelled as random
systems.
The observable input-output behaviour of a random automaton F is referred
to as a random system. In the following we use the terms random automaton
and random system interchangeably when no confusion is possible.
Deﬁnition 3 An (X , Y)-random system F is an inﬁnite7 sequence of conditional
probability distributions PF
Yi |X i Y i−1 for i ≥ 1. Two random automata F and G
are equivalent, denoted F ≡ G, if they correspond to the same random system,
G
F
G
i.e., if PF
Yi |X i Y i−1 = PYi |X i Y i−1 for i ≥ 1 or, equivalently, PY i |X i = PY i |X i for
i ≥ 1.
2.3

Monotone Conditions for Random Systems

In the sequel it will be very useful to consider conditions deﬁned for a random
system F. Loosely speaking, a random system F with a condition A, denoted FA ,
is the random system F, but with an additional binary output A1 , A2 , . . ., where
Ai = 1 means that the condition holds after the ith query to F. Throughout we
will only consider monotone conditions, this is to say that if a condition fails to
hold at some point, it never hold again.
6
7

F can also be considered as a random variable taking on as values (X , Y)-automata.
Random systems with ﬁnite-length input sequences could also be deﬁned.

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

549

Deﬁnition 4 Let F be any (X , Y)-random system. We use the notation FA to
denote a (X , {0, 1} × Y)-random system (FA is deﬁned the sequence of distribuA
tions PF
Ai Yi |X i Y i−1 Ai−1 where Ai ∈ {0, 1}) for which the following holds:
A

F
PF
Yi |X i Y i−1 = PYi |X i Y i−1 for i ≥ 1

This simply says, that if we ignore the Ai ’s in FA , we get a random system
which is equivalent to F. Moreover the Ai ’s are monotone, this is to say that
(Ai = 0) ⇒ (Aj = 0) for j > i or equivalently (Ai = 1) ⇒ (Aj = 1) for j < i.
To save on notation we will denote an event Ai = 1 by ai and Ai = 0 by ai . “Ai
holds” means Ai = 1.
One way to deﬁne a random system FA is to explicitly give a distribution as in
Deﬁnition 4. If F is given as a a description of a random automaton one can also
deﬁne a “natural” condition directly on the random automaton.
r
As an example consider the random automaton Ψ2n
as described in the intror
duction. The evaluation of Ψ2n requires the evaluation of the r internal URF’s.
r
Let j U denote the input to the URF in round j in the th query (i.e. as Ψ2n
is
r
queried with X ). Now we could for example deﬁne a condition A for Ψ2n such
that Ai holds if, for some ﬁxed j, all the j U are distinct for 1 ≤ ≤ i. The proof
of our main theorem will require a (more complicated) condition of this kind.
We will now deﬁne what we mean by equivalence of random systems with
conditions.
Deﬁnition 5 FA

GB means
A

B

G
PF
ai Yi |X i ai−1 Y i−1 = Pbi Yi |X i bi−1 Y i−1
A

(1)

B

G
or, equivalently, PF
ai Y i |X i = Pbi Y i |X i for all i ≥ 1.

So FA
GB if the systems are deﬁned by the same distribution whenever
A
i
i
GB
i
i
the condition holds, i.e. for all xi , y i : PF
Ai Y i |X i (1, y , x ) = PBi Y i |X i (1, y , x ).
A

i
i
However, if the condition does not hold, we may have PF
Ai Y i |X i (0, y , x ) =
B

i
i
PG
Bi Y i |X i (0, y , x ).

2.4

Distinguishers for Random Systems

We consider the problem of distinguishing two (X , Y)-random systems F and
G by means of a computationally unbounded, possibly probabilistic adaptive
distinguisher algorithm (or simply distinguisher) D asking at most k queries,
for some k. The distinguisher generates X1 as an input to F (or G), receives
the output Y1 , then generates X2 , receives Y2 , etc. Finally, after receiving Yk , it
outputs a binary decision bit. More formally:
Deﬁnition 6 A distinguisher for (X , Y)-random systems is a (Y, X )-random
system D together with an initial value X1 ∈ X , which outputs a binary decision
value Ek after some speciﬁed number k of queries to the system. By D F we
denote the random experiment where D is querying F.

550

U. Maurer and K. Pietrzak

Throughout we will only consider distinguishers who never ask the same query
twice. For bidirectional permutations (see Deﬁnition 11) we additionally require
that distinguishers do not query with a Yi (Xi ) when they already received Yi
(Xi ) on a query Xj (Yj ) for a j < i. Because we will only apply distinguishers
to stateless systems (e.g. random permutations), this can be done without loss
of generality. Such queries yield no information and thus there always is an an
optimal distinguisher (see deﬁnition below) who never makes such queries.
Deﬁnition 7 The maximal advantage, of any adaptive distinguisher D issuing
k queries, for distinguishing F and G, is
∆k (F, G) := max PD

F

D

(Ek ) − PD

G

(Ek ) .

A distinguisher that achieves the above maximum is called an optimal distinguisher for F and G.
We now consider a distinguisher D (according to the view described above)
which queries a system FA and whose aim it is to make A fail, making k queries
to FA (i.e. to provoke the event ak ).
Deﬁnition 8 For a random system FA , let
ν(FA , ak ) := max PD

FA

D

(ak )

be the maximal probability, for any adaptive distinguisher D, of provoking ak
in F. A distinguisher that achieves the above maximum is called an optimal
provoker for ak in F. Moreover, let
A

k
µ(FA , ak ) := max PF
ak |X k (x )
xk

be the maximal probability of any non-adaptive distinguisher in provoking ak .
The following proposition (Theorem 1 from [7]) states that, for two random
systems F and G, we can upper bound ∆k (F, G) by ν(FA , ak ) or ν(GB , bk ) if
there is any FA and GB such that FA GB .
Proposition 1 If FA
GB then ∆k (F, G) ≤ ν(FA , ak ) = ν(GB , bk ). MoreA
B
over, µ(F , ak ) = µ(G , bk ).
2.5

Some Useful Propositions and Deﬁnitions

Deﬁnition 9 The cascade of an (X , Z)-random permutation E and a (Z, Y)random permutation F, denoted EF, is the (X , Y)-random permutation deﬁned
as applying E to the input sequence and F to the output of E.
For EA and FB (where E and F are as above), the (X , Y × {0, 1}2 )-random
A B
F
system EA FB can be deﬁned naturally.8 EA FB
GC HD means PE
ai bi Y i |X i =
C

D

H
PG
ci di Y i |X i , i.e., equivalence of the distributions if both conditions hold.
8

A

B

F
Formally PE
Ai Bi Y i |X i =

A

Zi

B

F
PE
Ai Z i |X i PBi Y i |Z i .

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

Lemma 1 If EA

GC and FB

HD then EA FB

551

G C HD .

Proof. Let X and Z (Z and Y ) denote the input and output of the ﬁrst (second)
permutation in the cascade. For any xi and y i we have
A

B

F
i
i
PE
ai bi Y i |X i (y , x ) =

A

B

C

D

i
i
F
i i
PE
ai Z i |X i (z , x )Pbi Y i |Z i (y , z ) =
z i ∈Z i
C

D

i
i
H
i i
G H
i
i
PG
ci Z i |X i (z , x )Pdi Y i |Z i (y , z ) = Pci di Y i |X i (y , x ).
z i ∈Z i

For any z i ∈ Z i , equality of the ﬁrst (second) factor in the sums of the second
and third term above holds because we have EA GC (FB HD ).
The following proposition (Theorem 2 from [7]) states, that if the probability of
ai (i.e. Ai = 1), conditioned on ai−1 , X i and Y i−1 , does not depend on Y i−1
(which is the output seen so far), then adaptive strategies are no better than
non-adaptive ones in making A fail.
A

A

F
A
A
Proposition 2 If PF
ai |X i ai−1 Y i−1 = Pai |X i ai−1 , then ν(F , ak ) = µ(F , ak ).

Deﬁnition 10 For a random permutation Q, the inverse is also a random permutation and is denoted by Q−1 . If the (X , Y × {0, 1})-random system QA is
−1
deﬁned, the (Y, X × {0, 1})-random system QA can be deﬁned naturally: Let
A −1

−1

A −1

A

A

Q
Q
Q
Q
PQ
Ai X i |Y i = PX i |Y i PAi |X i Y i , i.e., we let PAi |X i Y i = PAi |X i Y i .
def

Deﬁnition 11 For an X -random permutation Q, let Q be the bidirectional
permutation9 Q with access from both sides (i.e., one can query both Q and
Q−1 ). More precisely, Q is the random function X × {0, 1} → X deﬁned as
follows:
if Di = 0
Q(Ui )
Q (Ui , Di ) =
Q−1 (Ui ) if Di = 1 .
If QA is deﬁned, QA can also be deﬁned naturally: Let Vi := Q (Ui , Di ), and
let Xi and Yi be the i-th input and output of Q (i.e., if Di = 0, then Xi = Ui and
QA

A

Yi = Vi , and if Di = 1, then Yi = Ui and Xi = Vi ). Now we let PAi |X i Y i = PQ
Ai |X i Y i .
def

The proposition below is Lemma 10 (iii) from [7].
Proposition 3 FA

GB ⇐⇒ FA

GB .

We will also need the following
Lemma 2 ν( PC PD

−1

, ck ∨ dk ) ≤ ν( PC P−1 , ck ) + ν( PPD
C

−1

, dk ).

D −1

. D can be
Proof. Consider D, the optimal provoker for ck ∨ dk in P P
used to provoke ck resp. dk separately (though here it may not be optimal), the
lemma now follows by application of the union bound and the observation that
using optimal provokers for ck resp. dk can only increase the success probability.
9

This deﬁnition is motivated by considering a block cipher which, in a mixed chosenplaintext and chosen-ciphertext attack, can be queried from both sides.

552

3

U. Maurer and K. Pietrzak

Cascades of Two Random Permutations

Consider a cascade of two independent URP’s (recall by the symbol P we denote
a URP) where a condition C is deﬁned on the ﬁrst URP. Eq. (2) from Lemma 3
states that making C fail is equally hard for adaptive distinguishers which may
access the cascade from both sides as for an non-adaptive distinguishers who
may access the URP (on which C is deﬁned) only from one side.
Lemma 3

ν( PC P−1 , ck ) = ν(PC P−1 , ck ) = µ(PC , ck )
ν( PP

D −1

, dk ) = ν(PD P−1 , dk ) = µ(PD , dk ).

(2)
(3)

Proof. We ﬁrst show that
ν(PC P, ck ) = µ(PC P, ck ) = µ(PC , ck ).
C

(4)

C

P
P P
Here PP
ci |X i ci−1 Y i−1 = Pci |X i ci−1 holds because C is deﬁned on the ﬁrst P in the
cascade, but Y i−1 gives no information (is independent) of the output of the
ﬁrst P. The ﬁrst step now follows from Proposition 2. The last step is trivial.
We now prove (2). Consider an optimal provoker D for ck in PC P−1 . Let
Zi denote the random variable denoting the value appearing between the two
−1
P’s in the ith query. D may query either PC P−1 or PPC , a query to the latter
results in a uniform random10 Zi and thus also a uniform random value at the
−1
input to PC , we see that querying PPC
can be no better to provoke ck than
querying PC P−1 with a random value, thus there always is an optimal provoker
−1
for ck which never chooses to query PPC and the ﬁrst step of (2) follows. The
second step follows from (4) using P ≡ P−1 . Eq.(3) follows by symmetry.

Lemma 4 Let F and G be random permutations and let P be the uniform random permutation on the same domain as F and G. If there are any FA , PC , GB
and PD such that FA PC and GB PD holds, then11
∆k ( FG−1 , P ) ≤ µ(PC , ck ) + µ(PD , dk ).

(5)

Proof. The ﬁrst step below uses the simple fact that PP−1 ≡ P, the second
−1
B
PC PD , which follows
step below follows from Proposition 1 using FA G−1
from Lemma 1. The fourth step follows from Lemma 2.
∆k ( FG−1 , P ) = ∆k ( FG−1 , PP−1 ) ≤
ν( PC PD

−1

, ck ∧ dk ) = ν( PC PD

ν( PC P−1 , ck ) + ν( PP

C −1

−1

, ck ∨ dk ) ≤

, dk ) = µ(PC , ck ) + µ(PD , dk ).

The last step follows from Lemma 3.
10
11

Meaning uniform random in Z \ {Z1 , . . . , Zi−1 }, see the comment at the end of
Deﬁnition 6.
Note that by Proposition 1 we have µ(PC , ck ) = µ(FA , ak ) and µ(PD , dk )+µ(FB , bk ),
so one could also write the second term of (5) as µ(FA , ak ) + µ(FB , bk ).

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

553

Corollary 1 If FA
PC then ∆k ( FF−1 , P ) ≤ 2µ(PC , ck ), where the two
F’s in the cascade FF−1 must be independent.
Note that with this corollary we have reduced the problem of upper bounding
the indistinguishability of a cascade FF−1 of two random permutations from P
by any adaptive strategy who may access the cascade from both sides to the task
of ﬁnding a FA and a PC such that FA PC and upper bounding µ(P, ck ), i.e.,
the maximal probability of making C fail in P by any non-adaptive strategy who
may access the permutation only from one side.

4

The Main Theorem

In Section 4.1 we give a formal deﬁnition of the (many-round) Luby-Rackoﬀ
construction and state the main theorem. In Section 4.2 an outline of the proof
is given. The full proof is given in Section 5.
4.1

Statement of the Main Theorem

We denote by I the set {0, 1} of bit-strings of length . For a random permutation (random function) Q the subscript denotes that it is a permutation on
I (a function I → I ).
Deﬁnition 12 For n ∈ N, let12 ψ(Rn ) be the Feistel-permutation on I2n deﬁned
def
r
we denote the
by ψ(Rn )(L, R) = (R, L ⊕ Rn (R)), where L, R ∈ In . By Ψ2n
permutation which is deﬁned as a cascade of r permutations ψ(Rn ), where the
Rn are all independent.
Our main theorem states that
Theorem 1
∆k
4.2

6r−1
Ψ2n
, P2n

k2

≤

22n−2

+

k r+1
2r(n−3)−1

.

Outline of the Proof

In this section we will see how the results from Sections 2 and 3 can be used
r
to upper-bound the indistinguishability of any random permutation (and Ψ2n
in
particular) from a URP. We stress here that all statements in those sections are
about random systems, hence also about any particular realisation as random
automata. Below we will also need the following simple
Lemma 5
∆k
12

r
r −1
Ψ2n
(Ψ2n
) , P2n

= ∆k

Recall that the symbol R denotes a URF.

2r−1
Ψ2n
, P2n

.

554

U. Maurer and K. Pietrzak
def

Proof. Let Π(L, R) = (R, L), i.e. Π simply exchanges the right and left half
r −1
r
1
1
1
)
≡ ΠΨ2n
Π, with this and Ψ2n
ΠΨ2n
≡ Ψ2n
,
of the input. We have (Ψ2n
which holds because the XOR of two independent URF’s is again a URF, we
r−1 1
r−1
2r−1
r
r −1
1
get Ψ2n
(Ψ2n
)
≡ Ψ2n
Ψ2n ΠΨ2n
Ψ2n
Π ≡ Ψ2n
Π. This and P2n ≡ P2n Π
2r−1
r
r −1
proves the ﬁrst step of ∆k Ψ2n
(Ψ2n
) , P2n = ∆k Ψ2n
Π , P2n Π =
2r−1
∆k Ψ2n , P2n , the second step is trivial.
r
, P2n ). With Propositions 1 and 3 this can
Our aim is to upper-bound ∆k ( Ψ2n
r
be done as follows: Deﬁne some random automata F and G such that F ≡ Ψ2n
and G ≡ P2n . Then deﬁne conditions A and B on F and G respectively, such that
FA GB and prove an upper bound ε(k, r, n) for ν( GB , bk ) (or ν( FA , ak ),
r
which is the same). It follows that ∆k ( Ψ2n
, P2n ) ≤ ε(k, r, n).
With Corollary 1 we can bypass the task of upper bounding ν( GB , bk ) and
give an upper bound ε (k, r, n) for µ(GB , bk ) instead.13 Then, using Lemma 5 in
the ﬁrst and Corollary 1 in the second step, we get
2r−1
r
r −1
∆k ( Ψ2n
, P2n ) = ∆k ( Ψ2n
(Ψ2n
) , P2n ) ≤ ε (k, r, n).

Note that the price we payed for this simpliﬁcation is that our bound now applies
for Feistel-permutations with 2r − 1 instead of r rounds. This is basically the
idea underlying the proof of the main theorem. Though in the proof the two
random automata F and G (as discussed above) are not deﬁned separately,
we only give one random automaton H with two outputs, where the random
3r
system H is equivalent to14 Ψ2n
or P2n if we ignore the right or left output of
H, respectively. For this H, a condition M is given such that the two outputs
of HM have the same distribution whenever the condition holds.

5

Proof of the Main Theorem

In this section we propose three lemmas used in the proof (as outlined in the
previous section) of our main theorem. The proof itself is given at the end of
this section.
For the sequel ﬁx any r ∈ N and n ∈ N, and let H denote the (X , Y × Z)def
random automaton (where X = Y = Z = I2n = {0, 1}2n ) as shown in Figure 1.
Let HL (HR ) be equivalent to H, but where the output is only the left (right)
half of the output of H.
3r
3r
(the two Ψ2n
’s drawn in
H is constructed by combining a P2n and a Ψ2n
the ﬁgure are one and the same). In H, the output Yi × Zi on the ith query Xi
3r
is determined as follows: Ψ2n
is queried with Xi , this gives Yi . The Xi is also
˜ i . Then Ψ 3r is queried with X
˜ i which gives the
applied to P2n to get a value X
2n
Zi .
13

14

This is likely to be much easier because we need to consider only non-adaptive chosenplaintext strategies instead of adaptive combined chosen plaintext and ciphertext
strategies.
for technical reasons, we will need the number of rounds to be a multiple of 3 here

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

555

X

P2n
0V

0W

X
0S

1V

1W

2V

2W

3V

3W
1S

3rV

3r+1V

Y

3rW

3r+1W

Z

Fig. 1. The random automaton H. The labelling refers to the random variables as
3r
used in Section 5. On input X , Ψ2n
is invoked twice, once with X and once with X .
3r
Ψ2n and P2n are independent, and also all 3r URF’s are independent. Note that in the
3r
ﬁgure the two Ψ2n
permutations are one and the same, i.e., URF’s at the same level
are identical.
3r
Lemma 6 HL ≡ Ψ2n
and HR ≡ P2n .
3r
Proof. HL ≡ Ψ2n
can be seen directly from the deﬁnition of HL . We have
3r
HR ≡ P2n Ψ2n ≡ P2n since the cascade of a URP with any other permutation
(which is independent of the URP) is again a URP.

Consider H being queried with some xk = {x1 , . . . , xk } ∈ X k . The th query
3r
x results in two invocations of Ψ2n
, once with x and once with X , where X
is the random variable denoting the output of P2n on input x (cf. Fig. 1). A
3r
results in one query to every of the 3r URF’s. Let jV denote the
query to Ψ2n
input to the jth URF when queried with x and let jW denote the input to the
jth URF when queried with X .
After k queries we say that an input jV resp. jW is unique (and we denote
this event by j τ resp. j τ ) if the jth URF was invoked only once with jV resp.
jW , i.e., for 1 ≤ i ≤ k and 1 ≤ j ≤ 3r we deﬁne
jτ

⇐⇒ (∀i, i = : jV = jVi ) ∧ (∀i : jV = jWi )

jτ

⇐⇒ (∀i, i = : jW = jWi ) ∧ (∀i : jW = jVi ).

556

U. Maurer and K. Pietrzak

By q ξ we denote the event that 3q+2V , 3q+3V , 3q+2W and 3q+3W are all unique,
i.e, for 0 ≤ q ≤ r − 1:
qξ

⇐⇒

3q+2τ

∧

3q+3τ

∧

∧

3q+2τ

3q+3τ

.

By λ we denote the event that q ξ holds for some q, 0 ≤ q ≤ r − 1:
r−1

λ ⇐⇒

qξ

.

q=0

We can now deﬁne our monotone condition M for H.
Deﬁnition 13 The condition M for H is deﬁned as (Recall that mk denotes
the event that Mk = 1):
k

mk ⇐⇒

k

r−1

=1

q=0

λ ⇐⇒
=1

3q+2τ

∧

∧

3q+3τ

3q+2τ

∧

3q+3τ

.

(6)

So after HM has been queried with k inputs x1 , . . . , xk , the condition Mk holds
if the following holds for i = 1, . . . , k: There is an index q such that the four
values that appear as the input to the URF’s in the consecutive rounds 3q+2 and
3r
˜ i , are unique. In the proof of Lemma
3q + 3, when Ψ2n
is queried with xi and X
8 we will use this fact to show that the right and left part of the output of HM
has the same distribution whenever the condition holds, i.e., HM
HM
L
R . But
ﬁrst we give an upper bound on the probability of any non-adaptive strategy,
making at most k queries, in provoking the event mk (i.e. Mk = 0).
Lemma 7
k
µ(HM , mk ) = max PH
mk |X k (x ) ≤
def

xk ∈X k

k2
22n−1

+

k r+1
2r(n−3)

.

Proof. Consider any xk ∈ X k (in particular the one maximising the second term
in the lemma). Throughout the proof, all probabilities are in the random experk
iment where H is queried with xk . So for example P[mk ] denotes PH
mk |X k (x ).
r+1

2

k
k
+ 2r(n−3)
.
To establish the lemma, we must show that P[mk ] ≤ 22n−1
Let γk denote the event (deﬁned on H after k queries) which holds if and
only if xk and X k have no elements in common (i.e. all elements in xk X k are
distinct)15 . The birthday bound gives us
k−1

P[γk ] =

1−
i=0

k+i
22n

≥1−

k2
22n−1

.

(7)

3r
We will now upper bound P[mk |γk ]. In order to do so it helps to think of Ψ2n
as
3
a cascade of r blocks, each a Ψ2n permutation. For 0 ≤ q ≤ r − 1 let
qS
15

def

= ((3q+1V1 , 3qV1 ), ..., (3q+1Vk , 3qVk ), (3q+1W1 , 3qW1 ), ..., (3q+1Wk , 3qWk ))

The xk are all distinct, see comment after Deﬁnition 6.

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

557

denote the values appearing on the input to the q + 1th block on input xk and
X k (here 0V and 0W are as in ﬁgure 1). Let q S denote the set of values q S may
take on. Next we prove that, for any : 1 ≤ ≤ k, h ∈ {2, 3} and any possible
qs ∈ qS
P[¬3q+h τ |γk , q S = q s] ≤

2k
2n

and

P[¬3q+h τ |γk , q S = q s] ≤

2k
.
2n

(8)

R
Let q sj denote the jth element in q s (e.g. 0 s1 = {1 v1 , 0 v1 }) and let q sL
j and q sj
denote the left and right part of q sj . We will only prove the ﬁrst statement for
h = 2, the other cases are similar. The probability that ¬3q+2 τ , conditioned
on q S = q s, is the probability that there is a t = , 1 ≤ t ≤ 2k, such that
2k
R
f (q sL ) ⊕ q sR = f (q sL
t ) ⊕ q st , where f is a URF. This is at most 2n if all the
2k elements in q s are distinct, which is the case because we condition on γk .16
Now for any , q and q s ∈ q S we get (using the union bound in the ﬁrst and (8)
in the second step)

P[¬q ξ |γk , q S = q s] ≤

P[¬τ |γk , q S = q s] ≤
τ ∈{3q+2 τ ,3q+3 τ ,3q+2 τ ,3q+3 τ }

8k
k
= n−3 .
(9)
2n
2
The reason we introduced q S is that, conditioned on q S, the probability of any
3r
event deﬁned on the last 3r − q rounds of Ψ2n
does not depend on any event
3r
deﬁned on the 3q ﬁrst rounds of Ψ2n
. The reason is that all rounds (random
functions) are independent, and every interaction between the ﬁrst 3q and the
last 3q−r rounds is captured by q S (which speciﬁes all values exchanged between
round 3q and round 3q + 1). Let q κ be any event deﬁned on the 3q ﬁrst rounds
3r
of Ψ2n
. By the above argument for any q s ∈ q S,
P[¬q ξ |γk , q S = q s, q κ] = P[¬q ξ |γk , q S = q s].
For 0 ≤ q ≤ r − 1 let q κ =

def

q−1
t=0

¬t ξ . Now

r−1

P[¬λ |γk ] = P[

r−1

¬q ξ |γk ] =
q=0

P[¬q ξ |γk , q κ] =

(11)

q=0

r−1

P[q S = q s|γk , q κ]P[¬q ξ |γk , q S = q s, q κ] ≤
q=0 q s∈q S

(10)

k
2n−3

r

=

kr
2r(n−3)

.

In the fourth step above we used P[¬q ξ |γk , q S = q s, q κ] = P[¬q ξ |γk , q S = q s] ≤
k
2n−3 , which follows from (10) and (16). Now using the union bound in the third
and (11) in the fourth step below, we obtain
16

L
R
R
L
R
L
R
Consider any t = . If q sL
t = q s , then q st = q s (because {q st , q st } = {q s , q s })
R
L
L
L
R
L
and thus f (q sL ) ⊕ q sR = f (q sL
)
⊕
s
.
If
s
=
s
,
then
P[f
(
s
)
⊕
s
=
f
(
s
q t
q t
q
q
q
q t )⊕
t
R
n
L
q st ] = 1/2 . With the union bound we now get that the probability that f (q s ) ⊕
R
L
R
n
n
q s = f (q st )⊕ q st for any of the 2k−1 possible t = , is at most (2k−1)/2 ≤ 2k/2 .

558

U. Maurer and K. Pietrzak
k

k

λ |γk = P

P[mk |γk ] = P ¬

k

¬λ |γk ≤

=1

=1

P[¬λ |γk ] ≤ k
=1

kr
2r(n−3)

(12)

And ﬁnally, using (7) and (12) in the last step, we get
P[mk ] = P[mk , ¬γk ] + P[γk ]P[mk |γk ] ≤ P[¬γk ] + P[mk |γk ] ≤

k2
22n−1

+

k r+1
2r(n−3)

.

P[mk ,γk ]

Lemma 8
HM
L

HM
R .

k
Proof. We will show that for all k and all xk , g , g ∈ I2n
we have
M

M

k
H
k
PH
mk Y k Z k |X k (g , g , x ) = Pmk Y k Z k |X k (g , g , x ).

(13)

If we sum the two terms above over all g , we see that (13) implies that for all
k
xk , g ∈ I2n
HM

HM

k
PmLk Y k |X k (g , xk ) = PmR
k
k (g , x )
k Z |X

(14)

holds. Note that this is exactly the statement of the lemma.
The space of internal randomness for H (see Deﬁnition 1) consists of the funcn
3r
(each uniform random in {0, 1}n2 )
tion tables for the 3r Rn ’s which build Ψ2n
and a number uniform random between 1 and 22n ! deﬁning one possible permutation on {0, 1}2n . Thus the internal randomness of H is an element chosen
n
def
uniformly random in R = {0, 1}3rn2 × [1, 22n !].
Let R(xk , g , g ) ⊂ R be such that iﬀ the internal randomness of H is ρ ∈
R(xk , g , g ), then the system will output (g , g ) on input xk and Mk will hold
(note that Mk is determined by xk and ρ). With this we can write (13) as
|R(xk , g , g )|
|R(xk , g , g )|
=
.
|R|
|R|

(15)

We will prove (15) by showing a bijection between the sets R(xk , g , g ) and
R(xk , g , g ), which implies that they have the same cardinality.
Consider H with internal randomness ρ ∈ R(xk , g , g ) was queried with
k
x . Let V, W and X be as deﬁned before Deﬁnition 13. Note that V, W, X are
determined by ρ and xk , we use the corresponding small letters to denote the
values taken by V, W and X. Also all 3r URF’s are deterministic functions when
ρ is ﬁxed, we denote the function in the jth round by fj .
Let α1 , . . . , αk be such that 3α +2 τ ∧3α +3 τ ∧3α +2 τ ∧3α +3 τ for =
1, . . . , k. By (6) and the fact that Mk holds, such α1 , . . . , αk exist. If there are
several possibilities for α then let it be, say, the smallest possible value. Note
that for 1 ≤ ≤ k, ρ deﬁnes the following relations:
f3α

+2 (3α +2v

) = 3α

+1v

⊕ 3α

+3v

f3α

+2 (3α +2w

) = 3α

+1w

⊕ 3α

+3w

f3α

+3 (3α +3v

) = 3α

+2v

⊕ 3α

+4v

f3α

+3 (3α +3w

) = 3α

+2w

⊕ 3α

+4w

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

559

Let φxk (ρ) be a transformation on ρ which for 1 ≤ ≤ k changes the function
table of f3α +2 resp. f3α +3 on inputs 3α +2v and 3α +2w resp. 3α +3v and
3α +3w to
f3α +2 (3α +2v ) = 3α
f3α +3 (3α +3w ) = 3α

+1v

⊕ 3α

+3w

f3α

+2 (3α +2w

+2v

⊕ 3α

+4w

f3α

+3 (3α +3v

) = 3α
) = 3α

+1w
+2w

⊕ 3α
⊕ 3α

+3v
+4v

Then φxk (ρ) is in R(xk , g , g ). To see this, ﬁrst note that φxk only changes
f3α +2 and f3α +3 on inputs that are unique. Consider the two cases where the
internal randomness of H is ρ and φxk (ρ) respectively. On input x , jv and jw
are equal for j ≤ 3α + 2 in both cases, this is because for j ≤ 3α + 1 the
input/output behaviour of the internal functions fj on inputs jv and jw is not
aﬀected by φxk . With (3α +1v , 3α +2v ) and (3α +1w , 3α +2w ) being equal in
both cases, we see by the deﬁnition of φxk (ρ) that the values (3α +3v , 3α +4v )
and (3α +3w , 3α +4w ) are exchanged in both cases. With this also all jv and jw
are exchanged for all j ≥ 3α +4 (φxk does not aﬀect the input/output behaviour
of the internal functions fj on inputs jv and jw for j ≥ 3α + 4), so the outputs
g and g are also exchanged for all 1 ≤ ≤ k, and thus φxk (ρ) ∈ R(xk , g , g ).
Finally note that φxk (φxk (ρ)) = ρ, thus φxk is a bijection (actually even an
involution) between R(xk , g , g ) and R(xk , g , g ), and hence |R(xk , g , g )| =
|R(xk , g , g )|.
Proof (of Theorem 1). There is a random automaton H (cf. Figure 1) with
3r
two outputs such that HL ≡ Ψ2n
and HR ≡ P2n (Lemma 6). Here HL and
HR denote H, but where only the right and left half, respectively, is seen at
the output. There is a condition M deﬁned for H (Deﬁnition 13) such that
k2
kr+1
M
HM
HM
L
R (Lemma 8) and µ(H , mk ) ≤ 22n−1 + 2r(n−3) (Lemma 7). With
M
Corollary 1 and the observation that17 µ(HM
R , mk ) = µ(H , mk ) we now get
∆k

r
r −1
Ψ2n
(Ψ2n
) , P2n

≤

k2
22n−2

+

k r+1
2r(n−3)−1

and the theorem follows with Lemma 5.

6

Conclusions

In this paper we showed that the number of queries needed to distinguish a unir
(the r-round Feistel-permutation
form random permutation (URP) from Ψ2n
with independent uniform random functions) by any computationally unbounded adaptive distinguisher making combined plaintext/ciphertext queries,
approaches the information theoretic upper-bound O(2n ), as r is increased.
The proof of our main theorem is based on the framework of [7]. In this framework, for our case, one must deﬁne two random automata with the input/output
17

In the non-adaptive case it does not matter how much of the output the distinguisher
can see.

560

U. Maurer and K. Pietrzak

r
behaviour of Ψ2n
and a URP, respectively. Then one must give a condition for
each automaton, such that both have the same input/output behaviour as long
as the condition holds. The expected probability of any distinguisher (as above)
making k queries, in making this condition fail, is now an upper bound for the
r
advantage of any distinguisher (as above) in distinguishing Ψ2n
from a URP.
We proposed a new result (Lemma 4, see also Corollary 1) which reduces the
arising problem of upper bounding the probability of any adaptive distinguisher
making combined chosen plaintext/ciphertext queries in making the condition
fail, to the case where one only has to consider a distinguisher making nonadaptive chosen plaintext queries. This lemma is generic and can be applied to
any random permutation, but it comes at a price: The bound now only holds for
a cascade of two of the originally considered random permutations.
We took a new approach in deﬁning the two random automata as discussed
above. Only one random automaton H with two outputs was deﬁned, such that
r
or a URP when only the right or
H has the same input/output behaviour as Ψ2n
left part of the output is considered. One now must only ﬁnd a single condition
for H such that the input/output behaviour, when only the left or the right half
of the output is considered, is identical whenever the condition holds. We do
not know how to prove our result without this trick, and think that it could be
useful for the analysis of other systems as well.
Patarin conjectured that the information theoretic upper bound is already
reached if the number of rounds is constant (5 or maybe 6 or 7), this question
is still open. If the conjecture is true, then collision arguments (like “as long as
there is some input that has not appeared yet ... we cannot distinguish”), as
used here and in many other papers, will be too weak as to prove it.18 Maybe
adopting ideas from [1], and arguing about linear independence (like “as long as
some internal inputs are linearly independent...”) would be more successful.

Acknowledgements. We would like to thank Serge Vaudenay for his valuable
comments which helped to improve the presentation of this paper.

References
1. W. Aiello and R. Venkatesan, Foiling birthday attacks in length-doubling transformations – Benes: A non-reversible alternative to Feistel, Advances in Cryptology
– EUROCRYPT ’96, Lecture Notes in Computer Science, vol. 1070, pp. 307–320,
Springer-Verlag, 1996.
2. O. Goldreich, S. Goldwasser, and S. Micali, How to construct random functions,
Journal of the ACM, vol. 33, no. 4, pp. 210–217, 1986.
3. L. R. Knudsen, The security of Feistel ciphers with six rounds or less, Journal of
Cryptology vol. 15, no. 3, pp. 207–222, Springer-Verlag, 2002.
18

r
After O(2nr/(r+1) ) queries to Ψ2n
, we have a constant probability that there was a
query where none of the r URF’s was invoked with an input on which it was never
invoked before.

The Security of Many-Round Luby-Rackoﬀ Pseudo-Random Permutations

561

4. S. Lucks, Faster Luby-Rackoﬀ ciphers, Fast Software Encryption, Lecture Notes in
Computer Science, vol. 1039, pp. 189–203, Springer-Verlag, 1996.
5. M. Luby and C. Rackoﬀ, How to construct pseudo-random permutations from
pseudo-random functions, SIAM J. on Computing, vol. 17, no. 2, pp. 373–386, 1988.
6. U. M. Maurer, A simpliﬁed and generalized treatment of Luby-Rackoﬀ pseudorandom permutation generators, Advances in Cryptology – EUROCRYPT ’92,
Lecture Notes in Computer Science, vol. 658, pp. 239–255, Springer-Verlag, 1992.
7. ——, Indistinguishability of random systems Advances in Cryptology – EUROCRYPT ’02, Lecture Notes in Computer Science, vol. 2332, pp. 110–132, SpringerVerlag, 2002.
8. M. Naor and O. Reingold, On the construction of pseudorandom permutations:
Luby-Rackoﬀ revisited, Journal of Cryptology, vol. 12, no. 1, pp. 29–66, 1999.
9. J. Patarin, How to construct pseudorandom permutations from a single pseudorandom function, Advances in Cryptology – EUROCRYPT ’92, Lecture Notes in
Computer Science, vol. 658, pp. 256–266, Springer-Verlag, 1992.
10. ——, About Feistel schemes with six (or more) rounds, Fast Software Encryption,
Lecture Notes in Computer Science, vol. 1372, pp. 103–121, Springer-Verlag, 1998.
11. S. Patel, Z. Ramzan, and G. Sundaram, Towards making Luby-Rackoﬀ ciphers optimal and practical, Fast Software Encryption, Lecture Notes in Computer Science,
vol. 1636, pp. 171–185, Springer-Verlag, 1999.
12. J. Pieprzyk, How to construct pseudorandom permutations from single pseudorandom functions, Advances in Cryptology – EUROCRYPT ’90, Lecture Notes in
Computer Science, vol. 473, pp. 140–150, Springer-Verlag, 1990.
13. Z. Ramzan and L. Reyzin, On the round security of symmetric-key cryptographic
primitives, Advances in Cryptology – CRYPTO ’00, Lecture Notes in Computer
Science, vol. 1880, pp. 376–393, Springer-Verlag, 2000.
14. S. Vaudenay, Adaptive-attack norm for decorrelation and super-pseudorandomness, Proc. of SAC’99, Lecture Notes in Computer Science, vol. 1758, pp. 49–61,
Springer-Verlag, 2000.
15. Y. Zheng, T. Matsumoto, and H. Imai, Impossibility and optimality results on constructing pseudorandom permutations, Advances in Cryptology – EUROCRYPT
’89, Lecture Notes in Computer Science, vol. 434, pp. 412–422, Springer-Verlag,
1989.

