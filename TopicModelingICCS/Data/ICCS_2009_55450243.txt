A Fully Implicit Jacobian-Free High-Order
Discontinuous Galerkin Mesoscale Flow Solver
Amik St-Cyr1, and David Neckels2
1

2

National Center for Atmospheric Research (NCAR), Boulder, USA
amik@ucar.edu
Previously NCAR now Beckman Coulter Inc., Fullerton, California, USA

Abstract. In this work it is shown how to discretize the compressible
Euler equations around a vertically stratiﬁed base state using the discontinuous Galerkin approach on collocated Gauss type grids. A stiﬄy
stable Rosenbrock W-method is combined with an approximate evaluation of the Jacobian to integrate in time the resulting system of ODEs.
Simulations with fully compressible equations for a rising thermal bubble
are performed. Also included are simulations of an inertia gravity wave
in a periodic channel. The proposed time-stepping method accelerates
the simulation times with respect to explicit Runge-Kutta time stepping
procedures having the same number of stages.

1

Introduction

With modern climate models currently able to reach nonhydrostatic resolutions, it is generally perceived that the next generation of general circulation
models will be able to run globally for both weather and climate prediction.
The Reynolds numbers involved in global and mesoscale atmospheric modeling explains the choice of numerical weather prediction (NWP) centers for the
compressible Euler equations. The eventual availability of petascale calculators
forces the research stream into highly-scalable numerical methods. A very popular approach nowadays for applications is the so called discontinuous Galerkin
method which enjoys some of the properties of ﬁnite-volumes and ﬁnite-elements
methods [1]. It beneﬁts from a variable polynomial degree within each element,
it is highly scalable since the cost of parallel communications can be almost
completely hidden [2]. For global atmospheric computations such comparable
methods are performing very well [3]. However, at increasingly ﬁner resolutions,
time-stepping the compressible Euler equations is problematic. Most models utilize an explicit time-stepping procedure and are thus strongly dependent on the
Courant-Friedrich-Lewy (CFL) condition which dictates the maximum allowable
time-step to be proportional to the minimal spatial mesh size. The consequences
of such techniques are such that, in order to solve a global climate problem at a
NCAR is operated by the University Corporation for Atmospheric Research and
sponsored by the National Science Foundation (NSF). A part of this work supported
by the NSF under CMG grant 0530845.
G. Allen et al. (Eds.): ICCS 2009, Part II, LNCS 5545, pp. 243–252, 2009.
c Springer-Verlag Berlin Heidelberg 2009

244

A. St-Cyr and D. Neckels

1km resolution at scientiﬁcally relevant integration rates, a 220 folds increase in
computing power will be required. Following Moore’s Law such a supercomputer
will be available in 30 years. Therefore developments in new algorithms are of
utmost importance.
In the present work a fully implicit framework for solving the compressible
Euler equations at low Mach number is proposed. First, the governing equations
are presented with their non-dimensionalisation. The space discretization then
follows. Next, the time-discretization is discussed and the Rosenbrock W-method
is introduced with the low Mach treatment of the numerical ﬂux. Finally, various standard numerical experiments proposed to test mesoscale ﬂow solvers are
presented.

2

Governing Equations

The model system of equations that will be solved in this work is a system
of m-conservation laws with source term, in two spatial dimensions, written
generically as
(1)
Ut + ∇ · F(U) = S(U).
where F(U) ≡ (F, G) : Rm → Rm × Rm and U = U(x, t) : R2 × R+ → Rm . For
convenience we deﬁne the hyperbolicity matrix as
2

A(U; n
ˆ) ≡

Ai (U)ˆ
ni

(2)

i=1

with A = (A1 , A2 ) where A1 = F (U) and A2 = G (U). The above generic
equation permits the study of various sets of equations. In [4], the conservative
form of the compressible Euler equations involves the conservation of potential
temperature instead of the total energy as traditionally favored in computational
ﬂuid dynamics. The state vector and the ﬂuxes associated with this formulation
are
⎞
⎛
⎞
⎛
⎞ ⎛ ⎞
⎛
W
U
ρ
ρ
⎜ WU ⎟
⎜ ρu ⎟ ⎜ U ⎟
⎜ UU + p ⎟
⎟
⎟ ≡ ⎜ ⎟ , F ≡ ⎜ ρUW ⎟ , G ≡ ⎜ W Wρ
U≡⎜
⎠
⎝ ρ + p⎠
⎝ ρw ⎠ ⎝ W ⎠
⎝
ρ
WΘ
UΘ
ρθ
Θ
ρ
ρ
and S = (0, 0, −ρg, 0)T . In the above system ρ represents density, u and w are
the horizontal and vertical velocities and θ is the potential temperature. To close
the system, an expression for the pressure is required:
p = pref (

RΘ γ
)
pref

(3)

with γ = cp /cv = 1004.6/717.6 and where pref = 1013.25 kpa. For certain tests,
the Eady model is required and consists into adding the yˆ momentum equation
with an f plane Coriolis force. The entire approach is still 2D and all derivatives
in the yˆ direction are zero.

A Fully Implicit Jacobian-Free High-Order

245

The system of conservation laws is re-written around a hydrostatically balanced base state. This step is necessary in order to later avoid any kind of
roundoﬀ issues. The hydrostatic assumption reads
∂ p¯
= −ρ¯g.
∂z
Thus the following assumption is made on the dependent variables:
p = p¯(z) + p

(4)

ρ = ρ¯ + ρ
U = ρ u + ρ¯u = U + U

(5)
(6)

W = ρ w + ρ¯w = W + W
¯ +Θ .
Θ = ρ¯(z)θ(z)

(7)
(8)

To minimize numerical cancellation errors associated with the original set of
equations, the equation are written in their non-dimensional form. Thus a length
scale x0 , a time scale t0 along with a reference velocities u0 , pressure γp0 , ρ0 and
θ0 are introduced into the equations using the simple replacement ρ → ρρ0 . This
leads to the apparition of the Strouhal number t0xu00 in front of all time derivatives
and to the inverse Mach number in front of the pressure gradient.
√ The buoyancy
0
term has a factor gx
which
can
be
made
equal
to
one
if
u
=
gx0 . If a reference
2
0
u0
length x0 is chosen, the time scale is determined by setting the Strouhal number
to one. Therefore, the ﬁnal form of the conserved variables and ﬂuxes used in
the discretization are
⎞ ⎛
ρ
ρ
⎟ ⎜U
⎜ (¯
ρ
+
ρ
)u
⎟≡⎜
U≡⎜
⎝ (¯
ρ + ρ )w ⎠ ⎝ W
(ρθ)
Θ
⎛

⎞

⎛

U
⎜ U U + 12 p
⎟
⎜
(
ρ+ρ
¯
)
M
⎟, F ≡ ⎜
UW
⎠
⎝
(ρ+ρ
¯
)
UΘ
(ρ+ρ
¯
)

⎞

⎛

⎟
⎜
⎟
⎜
⎟, G ≡ ⎜
⎠
⎝

W

WU
(ρ+ρ
¯
)
WW
+ M12 p
(ρ+ρ
¯
)
WΘ
(ρ+ρ
¯
)

⎞
⎟
⎟
⎟
⎠

The boundary conditions employed in the numerical experiments are either of
the periodic or slip type. This condition is expressed simply as u · n
ˆ = 0 and will
be imposed weakly in the spatial discretization.

3

Spatial Discretization

The discontinuous Galerkin method can be formulated in two diﬀerent ways. The
ﬁrst approach is one popularized by Cockburn and various authors, see [5], and
is known as the weak formulation. The second one, the strong formulation, was
ﬁrst considered in [6] and employed herein. Also, instead of considering modal
orthogonal basis functions we consider only nodal ones. Thus, in a nodal discontinuous Galerkin discretization, the computational domain Ω is partitioned
into J quadrilateral elements Ωj in which the dependent and independent variables are approximated by N –th order tensor-product polynomial expansions.

246

A. St-Cyr and D. Neckels

A function U : R2 × R+ → R is spatially expanded, on element Ωj , in terms
of the N –th degree Lagrangian interpolants hi as deﬁned in [7],
N

Uh (x(r1j , r2j ), t)|Ωj

N

(Ujkl )(t) hk (r1j (x)) hl (r2j (x)),

≡

(9)

k=0 l=0

where x → (r1j (x), r2j (x)) is an aﬃne transformation, Tj , from the quadrilateral
element Ωj , on the original domain, to the reference element [−1, 1] × [−1, 1]
and the (uj )kl are the nodal basis coeﬃcients deﬁned at the Gauss-Lobatto
Legendre (GLL) quadrature points {ξˆi }N
i=0 . Introducing the ﬁnite dimensional
space Wh = {vh ∈ L2 (Ω) | ∀Ωj ∈ Ω, vh ◦ Tj ∈ Pk }, the discrete weak
formulation is obtained by integration by parts of the diﬀerential equation (1),
using the representation (9), on an element Ωj :
vh
Ωj

dUh
dA +
dt

M

vh ∇ · F(Uh )dA =
Ωj

vh Uh dA +
Ωj

+
¯ j ∩∂Ω
Ω

∂Ωj \∂Ω

vh (F(Uh ) − Fnum (Uh )) · n
ˆ dσ

vh (F(Uh ) − Fbnd (Uh )) · n
ˆdσ

(10)

where vh and Uh are in [Wh ]4 . The ﬂux is not uniquely deﬁned at the boundary
∂Ωj and a numerical ﬂux was introduced in the above expression. The Russanov
ﬂux, or local Lax-Friedrich, is
Fnum (Uh ) · n
ˆ=

1
1
L
L
L
(F(UR
ˆ − D(UR
ˆ )(UR
h ) + F(Uh )) · n
h , Uh ; n
h − Uh )
2
2

(11)

+
at the interface ∂Ωj with UR
h deﬁned as the discrete counterpart of U (x) ≡
lim →0+ U((1 − )x+ n
ˆ) where x ∈ ∂Ωj and n
ˆ points in the outward direction of
is
obtained.
The matrix D, deﬁned in
element Ωj . Notice that with → 0+ , UL
h
more details in a forthcoming section, is a function of (UR,L
and of the interface
h
points x ∈ ∂Ωj . Notice that the numerical ﬂux is the only function connecting the
element Ωj to its neighboring elements. The integrals are directly evaluated using
Gauss-Lobatto quadratures. The latter, for surfaces, are obtained as follows:
N

(f, g)j ≡

f (xj (ξk , ξl ))|Ωk · g(xj (ξk , ξl ))|Ωj |J j (ξk , ξl )|ρk ρl ,

(12)

k,l=0

where |J j (ξk , ξl )| is the Jacobian of the transformation xj (r) and {ρi }N
i=0 are
the Gauss-Legendre weights associated with the quadrature points {ξi }N
i=0 . The
boundary integrals are also performed using the GLL points. Once the spatial
discretization is performed, the semi-discrete problem in time is
dUh
¯ = Rh (Uh )
(13)
¯
dt
and a method of lines can be applied to the above system of ordinary diﬀerential
equations.

A Fully Implicit Jacobian-Free High-Order

4

247

Time Discretization

A general Rosenbrock method for solving the ODE (13) with suitable initial
ˆ n+1 , can be written as
conditions, with an error estimator U
¯h
i

ri =

i−1

γij kj , ki =
j=1
i−1

(

1
ri −
cij rj
γii
j=1
i−1

1
cij
− Jh )ri = Rh (Unh +
aij rj ) +
( )rj
¯
Δtγii
Δt
j=1
j=1
s

Un+1
h
¯

=

Unh
¯

+
j=1

ˆ n+1 = Un +
mj rj , U
¯h
¯h

(14)
s

m
ˆ j rj
j=1

h
where Jh ≡ ∂R
is simply the Jacobian. When the Jacobian Jh is exact,
∂u
un
the above Rosenbrock method has the same stability domain as the equivalent
diagonally implicit Runge-Kutta (DIRK) scheme [8]. They can be L-stable and
stiﬄy accurate provided that the number of stages exceeds the order of the
method. For an explicit Runge-Kutta, having the same number of stages s, a
cost function for the average number of Krylov iterations, per stage, necessary
to solve the linear systems for a Rosenbrock method can be established as iter ≤
Δti
Δte accel were Δti /Δte is the ratio between the implicit time-step size and the
CFL constrained explicit time-step and accel is the desired acceleration factor
with respect to explicit. The latter clearly establishes that outperforming an
explicit scheme is very diﬃcult unless very large Δti /Δte ratios are employed.
It should be noted that in the case of a Jacobian free Newton-Krylov approach,
for DIRK, the upper bound would still be valid but divided by the number
of Newton iterations. Notice that the above cost formula is idealized in the
sense that the costs for setting up or applying a non-trivial preconditioning
technique were not included. Because the linear system at each stage can at
most be solved approximatively, due to the use of iterative procedures, traditional
Rosenbrock methods cannot be used. In turn, methods able to support arbitrary
matrices instead of the true Jacobian are available. These methods are called
Rosenbrock W-methods and were ﬁrst investigated in [9]. Rang and Angermann
have derived L-stable Rosenbrock methods of order 3 with 4 stages and this is
the method used here [10]. The coeﬃcients of the method in table 1 are for use
with the Rosenbrock method in the form of (14) which avoids multiplication by
the Jacobian in the rhs. The coeﬃcients were computed using arbitrary precision
arithmetics and truncated at the 15th digit. Finally, the linear problem is inverted
using a restarted generalized conjugate residual (GCR) Krylov accelerator. The
latter is equivalent to GMRES.

4.1

Construction of the Jacobian for Euler

In order to have a practical method, it is necessary to have an eﬃcient evaluation
of the Jacobian matrix for the compressible Euler equations. One approach is the

248

A. St-Cyr and D. Neckels

Table 1. L-stable Rosenbrock W-method coeﬃcients with γ = 0.4358665215084590
a21
a31
a32
a41
a42
a43
m1
m2
m3
m4

= 2.0000000000000000
= 1.4192173174557647
= −0.2592322116729697
= 4.1847604823191607
= −0.2851920173554959
= 2.2942803602790417
= 0.242123807060954
= −1.223250583904515
= 1.545260255335102
= 0.435866521508459

c21 = −4.588560720558083
c31 = −4.184760482319161
c32 = 0.285192017355496
c41 = −6.368179200128358
c42 = −6.795620944466836
c43 = 2.870098604331056
m
ˆ 1 = 3.907010534671192
m
ˆ 2 = 1.118047877820503
m
ˆ 3 = 0.521650232611491
m
ˆ 4 = 0.500000000000000

Jacobian free technique where the action of the Jacobian on a vector is approximated using a Gˆ
ateau derivative. Since a Rosenbrock-W method is employed a
slight error in the Jacobian has no eﬀects in the consistency of the method but
could adversely aﬀect the stability. The multiplication of the vector Vh by the
¯
Jacobian, frozen at Unh , of the discretized right hand side of the Euler equations
¯
is deﬁned as
∂Rh
Rh (Unh + Vnh ) − Rh (Unh )
¯
¯
¯ + O( ).
V
=
JVh =
¯
∂u Unh ¯ h
¯

5

(15)

Low Mach Number Preconditioning

Current compressible ﬂow solvers are not suitable to simulate, without any modiﬁcations, ﬂow ﬁelds transitioning from incompressible to compressible regimes.
The literature on the subject demonstrates that the extension of a compressible
solver to the incompressible regime leads to asymptotically wrong solutions at
the low Mach limit. By adding time derivatives in an incompressible system it
is possible to obtain a clustering of the hyperbolic eigenvalues such that they
are all of the same magnitude when compared to one another: see [11] and references therein. However these techniques were developed in order to march the
equations towards a steady state. Viozat and collaborators [12,13] have shown
how to taylor such an approach to unsteady low Mach number simulations in the
ﬁnite-volumes case. In what follows we adapt the Russanov ﬂux for the equation
proposed in [4] for the low Mach regime. The ﬁrst step consist into rewriting
in entropy variables W = (p, u, v, s)T the system using the following passage
matrices:
⎛

c2
⎜ −u/ρ
⎜
∂W
=⎜
⎜ −w/ρ
∂U
⎝
γ/ρ

0 0
1/ρ 0
0 1/ρ

⎞

0
0
0
1−γ
γ

0

0

γ R pref
p1/γ

⎛
⎟
⎜
⎟
⎟ and ∂U = ⎜
⎜
⎟
∂W
⎝
⎠

1/c2
u/c2
w/c2
p
1
γR pref

1−γ
γ

00
ρ0
0ρ

0
0
0

00

pref
( p )1/γ
γR pref

⎞
⎟
⎟
⎟
⎠

A Fully Implicit Jacobian-Free High-Order

249

where U = (ρ, ρu, ρw, ρθ)T and s ≡ log p/ργ . The preconditioning employed is
the same as in [13] and consist, in the entropy variables, in a diagonal matrix
denoted by P −1 (W) = diag{β 2 , 1, 1, 1} with β = O(M ).
˜W
P (W)Wt + P (W)G(W) · ∇W = P (W)M

(16)

where the quasi-linear form of the compressible Euler equations was employed.
Transforming back to the conserved variables yields the preconditioning matrix
P (U) ≡

∂U
∂W
P (W)
∂W
∂U

and the corresponding quasi-linear system of conservation laws
P (U)Ut + P (U)A(U) · ∇U = P (U) M U.

(17)

The Russanov ﬂux is modiﬁed next only in the dissipative term in analogy
to what was proposed by [11]. More precisely the maximum eigenvalues are
computed with respect to the hyperbolicity matrix P (U)A(U) · n
ˆ and multiplied
by P −1 (U):
F(UR , UL ) · n
ˆ=

1
1
UR + UL
(F(UR )+F(UL )) · n
)D(UR , UL ; n
ˆ − P −1 (
ˆ ) (18)
2
2
2

with
D(UR , UL ; n
ˆ ) = diag(max{|eigen{P (U)A(U) · n
ˆ }|})(UR − UL ).
Thus, as remarked in [14] the only modiﬁcation required to precondition the
system are performed in the dissipation matrix. It will later be seen that these
modiﬁcations lead to lower iteration counts in the iterative solution process when
the considered domains are non-hydrostatic.

6
6.1

Numerical Experiments
Rising Smooth Bubble Experiment

We carry an integration using as initial condition a continuous perturbation of
the potential temperature in an initially hydrostatically balanced atmosphere.
The complete details of the initial condition can be found in [15]. The computational domain consist in a rectangle of dimension 20km in the horizontal by
10km in the vertical with slip boundary conditions on the top and bottom of
the atmosphere and periodic conditions on both ends. The initial perturbation
is integrated for a 1000 seconds. The same test is performed with two diﬀerent
values of β. In table 2 the solver is used with the low Mach preconditioning
(LM) set with β = 0.4 while the modiﬁcation is turned oﬀ by using β = 1.0. The
acceleration nearly doubles at large Courant numbers.

250

A. St-Cyr and D. Neckels

Table 2. Eﬀects of low Mach (LM) number preconditioning for the raising bubble experiment. Relative residual tolerance set to Solver 1×10−6 , with 7th degree polynomials
per element and 16 elements in the horizontal direction and 8 in the vertical.
Time step Iterations with LM acceleration Iterations without LM acceleration
1.0s
30
3.2
33
2.8
2.0s
36
5.1
45
4.1
10.0s
69
13.5
103
9.1
50.0s
207
22.7
493
10.2

6.2

Inertia Gravity Waves in a Periodic Channel

An initial perturbation in a periodic channel triggers internal gravity waves that
are transported by a background mean ﬂow of 20m/s to the right of the domain.
The original full deﬁnition of the initial condition can be found in [16]. The domain is again a rectangle of dimensions [300, 10]km. The translating perturbation
is integrated for 3000 seconds. The domain is covered using [90, 3] elements of
polynomial of degree 8 leading to a relative mesh spacing of Δx = Δz = 500m
for all simulations. In Fig. 1 left panel, a time step of 12 seconds is employed
which is twice the time step used in [16] for a comparable resolution. For a large
unphysical time-step, the solution is signiﬁcantly degraded but stable: Fig. 1
right panel. For time-steps up to 50 seconds which is twice the advective scale
(500/20 = 25) the approach produces reasonable solutions.
6.3

Eady Model

The same test as in the previous section is modiﬁed by considering an Eady
model. The forcing term f is set to 0.0001 and the periodic channel is transformed
to a very thin shell of dimensions [6000, 10]km. The latter is tiled using 600
elements of dimension 1km2 each of 7th degree. The model is integrated for 60000
seconds with a resolution of approximatively 1.5km in both spatial directions. In
this conﬁguration β = 1.0 lead to faster compute times. The time steps employed
in this simulations were ranging from 500s to 2000s at which an acceleration of
a:

b:

Fig. 1. Inertia gravity wave in a periodic channel using the equations in potential
temperature density form. The various time-steps (in alphabetical order) for the third
order Rosenbrock W-method are: 12 secs and 100 secs.

A Fully Implicit Jacobian-Free High-Order

251

Fig. 2. Inertia gravity wave in a periodic channel in hydrostatic conﬁguration using the
Eady model. The various time for the third order Rosenbrock W-method is 500 secs.

45 with respect to explicit was observed. The extreme gains are explained by the
exact vertical preconditioning in this case: a consequence of using one element
in the vertical direction.

7

Conclusions and Future Directions

In this work it was shown how to discretize the stratiﬁed compressible Euler
equations for low Mach, nearly incompressible atmospheric simulations consisting in slight perturbation of a hydrostatically balanced state. A low Mach preconditioning of the numerical ﬂux used for yielding asymptotically valid results
leads to lower iteration counts for the Krylov accelerator. All simulations result
in lower simulation times for simple block Jacobi preconditioning1 . However,
the ﬂux preconditioning needs to take into account the aspect ratio of the domain in order to diﬀerentiate between a nonhydrostatic and hydrostatic regimes.
Moreover, the numerical results presented show that the nonlinear cycle present
in Jacobian-Free Newton Krylov method can be avoided and provides a robust
framework for unsteady computations. For very thin domains, where the hydrostatic assumption could be employed, the solver shows very good accelerations.
If these results are extrapolated to global climate or weather modeling, the corresponding time-steps sizes at 10km resolution would be close to 30 minutes: the
time scale employed by most physical parameterizations. Future work will concern the coupling to idealized physics, inclusion of moisture transport, adaptive
hybrid non-conforming grids, extension to three spatial dimensions, higher-order
Rosenbrock methods and, most importantly, improved preconditioning.

References
1. Cockburn, B., Karniadakis, G.E., Shu, C.W.: Discontinuous Galerkin Methods:
Theory, Computation, and Applications. Lecture Notes in Computational Science
and Engineering, vol. 11. Springer, New York (2000)
1

The quality of the non-linear solutions can be readily compared with more traditional
approaches at http://www.mmm.ucar.edu/projects/srnwp_tests/

252

A. St-Cyr and D. Neckels

2. St-Cyr, A., Thomas, S.J.: Parallel atmospheric modeling with high-order continuous and discontinuous galerkin methods. In: Deane, A., Periaux, J., Ecer, A.,
Satofuka, N., McDonough, J. (eds.) Parallel Computational Fluid Dynamics 2005:
Theory and Applications: Proceedings of the Parallel CFD 2005 Conference, pp.
485–492. Elsevier Science, Amsterdam (2006)
3. Bhanot, G., Dennis, J.M., Edwards, J., Grabowski, W., Gupta, M., Jordan, K.,
Loft, R.D., Sexton, J., St-Cyr, A., Thomas, S.J., Tufo, H.M., Voran, T., Walkup,
R., Wyszogrodzki, A.A.: Early experiences with the 360tf ibm bluegene/l platform.
Int. J. Comput. Meth. 5(2), 237–253 (2008)
4. Skamarock, W.C., Klemp, J.B., Dudhia, J., Gill, D.O., Barker, D.M., Wang, W.,
Powers, J.G.: A description of the advanced research WRF version 2. NCAR Tech.
Note TN-468+STR, National Center for Atmospheric Research, 1850 Table Mesa
Drive, Boulder, Colorado, 80305, USA (2005) (revised January 2007)
5. Bassi, F., Rebay, S.: High-order accurate discontinuous ﬁnite element solution of
the 2d euler equations. Journal of Computational Physics 138(2), 251–285 (1997)
6. Giraldo, F.X., Hesthaven, J.S., Warburton, T.: Nodal high-order discontinuous
galerkin methods for the spherical shallow water equations. Journal of Computational Physics 181(2), 499–525 (2002)
7. Ronquist, E.M.: Optimal Spectral Element Methods for the Unsteady ThreeDimensional Incom- pressible Navier-Stokes Equations. Ph.D thesis. MIT, Cambridge, MA, USA (1988)
8. Hairer, E., Wanner, G.: Solving Ordinary Diﬀerential Equations II, 2nd edn.
Springer Series in Computational Mathematics, vol. 14. Springer, Heidelberg (1996)
9. Steihaug, T., Wolfbrandt, A.: An attempt to avoid exact jacobian and nonlinear
equations in the numerical solution of stiﬀ diﬀerential equations. Math. Comp. 33,
521–534 (1979)
10. Rang, J., Angermann, L.: New Rosenbrock W-methods of order 3 for partial differential algebraic equations of index 1. BIT Numerical Mathematics 45, 761–787
(2005)
11. Meister, A.: Asymptotic based preconditioning technique for low Mach number
ﬂows. ZAMM 83(1), 3–25 (2003)
12. Viozat, C.: Calcul d’´ecoulements stationnaires et instationnaires `
a petit nombre
de Mach, et en maillages ´etir´es. Ph.D thesis, Universit´e de Nice-Sophia Antipolis,
Nice, France (October 1998)
13. Guillard, H., Viozat, C.: On the behaviour of upwind schemes in the low mach
number limit. Comput. Fluids 28, 63–86 (1999)
14. Mavriplis, D.J.: Multigrid strategies for viscous ﬂow solvers on anisotropic unstructured meshes. Journal of Computational Physics 145, 141–165 (1998)
15. Wicker, L.J., Skamarock, W.C.: Time splitting methods for elastic models using
forward time schemes. Mon. Wea. Rev. 130, 2088–2097 (2002)
16. Skamarock, W.C., Klemp, J.B.: Eﬃciency and accuracy of the Klemp-Wilhelmson
time-splitting technique. Mon. Wea. Rev. 122, 2623–2630 (1994)

