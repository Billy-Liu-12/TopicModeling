An Eﬃcient Monte Carlo Approach for Solving
Linear Problems in Biomolecular Electrostatics
Charles Fleming1 , Michael Mascagni1,2 , and Nikolai Simonov2,3
1

Department of Computer Science and
2
School of Computational Science,
Florida State University, Tallahassee, FL, 32306-4530, USA
3
ICM&MG, Lavrentjeva 6, Novosibirsk 630090, Russia

Abstract. A linear (elliptic) problem in molecular electrostatics is considered. To solve it, we propose an eﬃcient Monte Carlo algorithm. The
method utilizes parallel computing of point potential values. It is based
on the walk-in-subdomains technique, walk-on-spheres algorithm, and an
exact treatment of boundary conditions.

1

Introduction

Recently [1, 2], we proposed an advanced Monte Carlo technique for calculating diﬀerent properties of large organic molecules. To use this approach, the
problems under consideration have to be treated in the framework of continuous
media models. In particular, to investigate electrostatic properties of molecules,
we adopted one of the most popular and commonly used models, namely, the
implicit solvent model. This means that solvent and ions dissolved within are
treated as a continuous medium, whose properties are characterized by dielectric
permittivity, e , whereas the molecule under investigation is described explicitly.
The solute (molecule) is thought of as a cavity with dielectric constant, i , which
is much less than that of the exterior environment.
Mathematically, this classical electrostatic approach leads to a boundary
value problem for the Poisson equation satisﬁed by the electrostatic potential,
u(x):
(1)
− ∇ ∇u(x) = ρ(x) , x ∈ R3 ,
where is the position-dependent permittivity and ρ(x) is the charge distribution
[3]. Usually, the molecule under consideration is described geometrically as a
union of spherical atoms with partial point charges at the sphere centers. This
M

qm δ(x − x(m) ), where q (m) are the charges and x(m) are

means that ρ(x) =
m=1

the atomic centers and hence the charge locations.
The charge distribution in the solvent is determined by the dissolved mobile ions. In the framework of a continuous medium approach, their positions
in physical space are described by the Boltzmann statistical distribution; this
leads to the non-linear Poisson-Boltzmann equation for u(x) in the solvent [3].
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 760–765, 2005.
c Springer-Verlag Berlin Heidelberg 2005

An Eﬃcient Monte Carlo Approach

761

For small potential values, this equation may be linearized, thus leading to the
relation
(2)
∆u(x) − κ2 u(x) = 0 , x ∈ G1 ,
where κ2 is a positive constant called the Debye-H¨
uckel screening parameter.
All the diﬃculties that one encounters in solving such boundary-value problems arise from the geometrical features of the model of the molecule. The geometry comes through the boundary conditions that have to be satisﬁed by the
limiting values of functions and their normal derivatives on diﬀerent sides of the
boundary, Γ :
ui (y) = ue (y) ,

i

∂ui
=
∂n(y)

e

∂ue
, y∈Γ .
∂n(y)

(3)

Here, Γ is either the surface of the molecule or the boundary of the so-called
ion-exclusion layer. One of the possible variants is when these surfaces coincide.
One of the distinctive and attractive features of the Monte Carlo approach
is that there is no need to perform cumbersome and otherwise labor-consuming
preparatory approximations of the molecular surfaces and boundary conditions.
In fact, a primitive analytic description based on a list of atomic centers and
radii is absolutely adequate for type of random-walk simulations we carry out.
Another favorable aspect of the Monte Carlo algorithms we employ is their
natural, immanent parallelizability. For linear electrostatic problems, the desired
computational entity can often be represented as a linear functional of point
potential values. This makes possible further distribution of the calculations and
therefore computing these values in parallel.

2

Energy: Linear Case

We consider the problem of calculating the electrostatic free energy of a large
biomolecule. In the linear case, this energy is equal to
M

1
u(m) q (m) ,
E=
2 m=1

(4)

where u(m) is the regular part of the electrostatic potential at the center of the
mth atom. To estimate u(m) , m = 1, . . . , M we make use of the walk-on-spheres
algorithm. The speciﬁc form of the molecule’ geometrical model makes it possible
to simulate the required Markov chains in such a way that the chain converges
to the boundary geometrically, and the last point lies exactly on Γ .
M

B(x(m) , r(m) ) be the inside of the molecule. Here, B(x, r) de-

Let Gi =
m=1

notes the ball centered at the point x, and r is its radius (see Figure 1). For
a given distribution of point charges in Gi , the electrostatic potential can be

762

C. Fleming, M. Mascagni, and N. Simonov

Fig. 1. An example of a computational domain in the energy calculation. The domain is
a union of atomic spheres, and the line follows a walk-on-spheres/walk-in-subdomains
trajectory that begins at the center of the largest sphere and ends as it leaves the
interior of the computational domain

M

q (m)
1
. From
4π i |x − x(m) |
m=1
this it follows that the regular part of the electrostatic potential, u0 , satisﬁes the
Laplace equation in Gi . To ﬁnd u(m) = u0 (x(m) ), we construct a Monte Carlo
estimate based on combination of the walk-on-spheres and walk-in-subdomains
algorithms [4]. Let ξ[u0 ](x0 ) be a Monte Carlo estimate for u0 (x0 ). Using the
probabilistic representation, we set ξ[u0 ](x0 ) = u0 (x∗ ), where x∗ is the exit point
of Brownian motion from G. The most eﬃcient way to simulate these exit points
is to use the natural representation of G as a union of intersecting spherical subdomains. For every ball, the exit point can be sampled directly. By the Poisson
integral formula for a function, u, that satisﬁes the Laplace equation, at every

represented as ui (x) = u0 (x) + g(x), where g(x) =

point x ∈ B(x(m) , r(m) ) we have u(x) =

S(x(m) ,r (m) )
(m) 2

pp (x → y) u(y)dσ(y), where

1 (r(m) )2 − |x − x |
is the Poisson kernel. The Markov
|x − y|3
4πr(m)
(m) (m)
chain {xi , i = 0, 1, . . . , N } is deﬁned recursively. Given xi ∈ B(xi , ri ),
(m) (m)
the next point is chosen randomly on S(xi , ri ) in accordance with density pp (xi → xi+1 ). By deﬁnition, xi+1 either hits the boundary or lies in some
other ball. With probability one, the path of this Markov chain terminates at
the boundary after a ﬁnite number of steps, N . With some natural assumptions
about G, which are always valid for molecular geometries, EN < ∞. We can
then set x∗ = xN .
pp (x → y) =

3

Boundary Conditions

Next, we have to construct estimates for boundary values of the potential, u0 .
By deﬁnition ξ[u0 ](xN ) = ξ[ψ](xN ) − g(xN ), where ψ is the unknown boundary

An Eﬃcient Monte Carlo Approach

763

value of u. One approach for constructing a Monte Carlo estimate for ψ is to
randomize a ﬁnite-diﬀerence approximation of the boundary condition with stepsize h [1]. Hence, we have ψ(xN ) = E(u(xN +1 )|xN ) + O(h2 ), where xN +1 =
i
xN −hn with probability pi =
, xN +1 = xN +hn with the complementary
+
i
e
probability, pe , and n is the external normal vector. This introduces an O(h) bias
into resulting Monte Carlo estimate.
Here, we propose another approach that speeds up the computations and
eliminates the bias. This approach is new and is speciﬁcally adapted to the
boundary ﬂux-type conditions that include normal derivatives. Consider an auxiliary sphere S(xN , a), which does not contain point charges. Then, application
1 sinh(κ(a − r))
of Green’s formula to functions ui , ue and Φκ (x) = −
, where
4π r sinh(κa)
r = |x − xN |, leads to the following mean-value relation:
e

u(xN ) =

+

where Qκ,a (r) =

+

e

+

i

Se (xN ,a)

i

Si (xN ,a)

i

+
−

e

− i)
e+ i

(

1
κa
ue
2πa2 sinh(κa)
1
κa
ui
2πa2 sinh(κa)

e

2
Γ

B(xN ,a)\{xN }

i
e

+

i

Bi (xN ,a)

(5)

∂Φ0
Qκ,a u
∂n

[−2κ2 Φκ ]ui ,

sinh(κ(a − r)) + κr cosh(κ(a − r))
< 1, and Γ is the surface
sinh(κa)

of the molecule.
Randomization of this formula provides a procedure to extend the Markov
chain {xi } after it hits the boundary without introducing any bias. The algorithm
works as follows. With probability pe the next point is chosen in the exterior
of the molecule, Ge , and with the complementary probability, pi , xN +1 ∈ Gi .
In the exterior, the next point of the Markov chain is chosen isotropically on
the boundary of B(xN , a) Ge . The random walker in this case has non-zero
probability of terminating. On S(xN , a) the termination probability is equal to
κa
1−
. Note that B(xN , a) Ge is not convex. This means that there
sinh(κa)
can be two intersections with its boundary. In this case we can choose randomly
one of them. In the interior, we choose an isotropic direction ﬁrst. Then, with
the corresponding probabilities, the next point is sampled on the chosen straight
line either on the boundary of B(xN , a) Gi , or inside the domain. From (5) it
follows that ψ(xN ) = Eu(xN +1 ).

764

4

C. Fleming, M. Mascagni, and N. Simonov

Random Walks Inside and Outside

The further construction is common to both methods of treating these boundary
conditions.
For internal points, we construct a Markov chain of the walk-in-subdomains
starting at xN +1 , and set u(xN +1 ) = E(u0 (x∗2 ) + g(xN +1 )|xN +1 ) where x∗2 ∈ Γ
is the next exit point.
For u(xN +1 ) ∈ Ge , we can use the walk-on-spheres algorithm. A random
κdi
walker of this Markov chain survives at every step with probability
,
sinh(κdi )
where di is the distance to the boundary. With probability one this chain terminates. This happens either inside Ge or when the distance di from the point
to the boundary becomes less than a prescribed number, ε. In the second case
we return to estimating ψ on the boundary. Since the probability of terminating
is bounded away from zero, the mean number of steps in the Markov chain is
ﬁnite.
The same approach works also for the case when the ion-exclusion layer is
introduced into the molecule model. This means that the whole space is divided
into three domains: the internal part of the molecule, Gi , the external, Ge , and
the layer between them, G0 . In G0 we have = e and κ = 0. On ∂Gi the
mean-value relationship (5) then reads:
u(xN ) =
+

e
e

+

i

i

+
e−
−
e+
e

i

1
u
2 e
Se (xN ,a) 2πa
1
u
2 i
Si (xN ,a) 2πa

i
i

(6)
2

Γ

B(xN ,a)\{xN }

∂Φ0
u,
∂n

1
1
1
−
. On ∂Ge the dielectric constants are equal
4π |x − xN | a
on both sides. This means that the third term in (5) equals zero.
where Φ0 (x) = −

5

Experiments, Conclusions, and Future Work

To test the proposed algorithms we applied our Monte Carlo estimates to a
simple model problem with a known analytic solution. For a spherical (one-atom)
molecule, the exact value of E scaled by q 2 /(4π i R) equals i /( e (1 + κR)) − 1.
For the values i = 4.0, e = 78.5, κ = 0 one obtains the exact solution of
−0.9490. Our calculation based on the walk-on-spheres method provided the
result −0.9489 with a 0.1% statistical error in 0.7 seconds for a = 0.1 and in 1.4
seconds for a = 0.03. The algorithm based on the ﬁnite-diﬀerence approximation
of the boundary condition with h = 0.001 provided the result with the same
accuracy in 5.6 seconds. All calculations were carried out on an ordinary desktop

An Eﬃcient Monte Carlo Approach

765

computer with a 1.3 GHz P4 processor running Windows 2000, which is already
a fairly slow computer.
Thus we see roughly a speed increase of one order of magnitude when progressing from the ﬁnite-diﬀerence approach to the boundary condition to this
new method. In addition, this comes with the elimination of the O(h) bias of the
ﬁnite-diﬀerence technique. While we carried out these very simple computations
on an ordinary PC, it is important to note that the speciﬁc form of the functional (4) we computed makes it possible to simulate in parallel M independent
random walks for estimating every u(m) very much more rapidly in a parallel
setting.
We believe these techniques will be very important in the eventual creation of
a suite of Monte Carlo approaches to problems and computations in biomolecular
electrostatics. Thus, we plan to continue this line of research towards this longterm goal. In the short term we plan to investigate other molecular surfaces
and their implications for these methods, the direct solution of the nonlinear
Poisson-Boltzmann equation via Monte Carlo, and the calculation of forces and
other types of functionals of the potential and its partial derivatives.

References
1. Mascagni, M. and Simonov, N.A.: Monte Carlo method for calculating the electrostatic energy of a molecule. In: Lecture Notes in Computer Science, Vol. 2657.
Springer-Verlag, Springer-Verlag, Berlin Heidelberg New York (2003) 63–74.
2. Mascagni, M. and Simonov, N.A.: Monte Carlo methods for calculating some physical properties of large molecules. SIAM Journal on Scientiﬁc Computing. 26 (2004)
339–357.
3. Davis, M.E. and McCammon, J.A.: Electrostatics in biomolecular structure and
dynamics. Chem. Rev. 90 (1990) 509–521
4. Simonov, N.A.: A random walk algorithm for the solution of boundary value problems with partition into subdomains. in Metody i algoritmy statisticheskogo modelirovanija, Akad. Nauk SSSR Sibirsk. Otdel., Vychisl. Tsentr, Novosibirsk (1983)
48–58.

