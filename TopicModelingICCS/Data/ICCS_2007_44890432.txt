On Eﬃciency Group Multicasting Algorithm
with Multiple Minimum Steiner Trees
Moonseong Kim1 , Minseok Kang2 , Hyunseung Choo1 ,
Jong S. Yang3 , and Young-Cheol Bang2,
1

School of Info. and Comm. Engineering, Sungkyunkwan University, Korea
{moonseong, choo}@ece.skku.ac.kr
2
Dep. of Computer Engineering, Korea Polytechnic University, Korea
{k19m81s, ybang}@kpu.ac.kr
3
Korea Institute of Industrial Technology Evaluation and Planning, Korea
yjs@mail.itep.re.kr

Abstract. In this paper, we study the problem of constructing minimum cost group multicast trees with bandwidth reservations. Our algorithm uses multiple candidate paths to select a path from source to each
destination member in each multicast tree construction. We show that
our proposed algorithm performs better in terms of total tree cost for real
life networks over well-known algorithm GKMB. The enhancement is up
to about 10% ∼ 25% in terms of normalized surcharge for the GKMB
tree cost.
Keywords: Group Multicast Routing Algorithm, Minimum Steiner
Trees, Group KMB (GKMB) Algorithm, and Minimum Cost Multicast
Tree (MCMT) Algorithm.

1

Introduction

With the emergence of real-time applications, such as video conferences and online games, and peer-to-peer (P2P) applications, and other content distribution
networks, a group of entities may exchange data among themselves. A network
layer may provide support for these applications by creating a set of multicast
routing trees simultaneously. The problem of ﬁnding a set of multicast trees
where every member in a group is a terminal as well as a source node is called
the Group Multicast Routing Problem (GMRP). The routing algorithm must
construct a multicast tree for each member node with each tree rooted at the
member and spanning all other member nodes simultaneously.
Jia and Wang proposed a group multicast routing algorithm, Group KMB
(GKMB) [1], that is based on KMB algorithm. The KMB heuristic was proposed
by Kou, Markowsky, and Berman [2]. KMB applies Prim’s minimum spanning
tree algorithm to the complete distance graph, where the complete distance
graph is a graph that contains Steiner points (multicast members) and has an
Corresponding author.
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 432–439, 2007.
c Springer-Verlag Berlin Heidelberg 2007

On Eﬃciency Group Multicasting Algorithm

433

edge between every pair of nodes representing the shortest path between them.
KMB is very well-known heuristic algorithm in minimum Steiner tree problem.
Recently, Bang et al. proposed the Minimum Cost Multicast Tree (MCMT)
algorithm [3] to create minimum Steiner tree. MCMT is proved that it has
the nearest optimal tree cost than other algorithms, are known to be the best
heuristic. Although KMB algorithm has the nearest optimal solution, we strongly
believe that MCMT outperforms KMB in terms of tree cost. Therefore, in this
paper, we propose an algorithm, called Group MCMT (GMCMT), that is based
on the adaptation of MCMT algorithm. Also, simulation studies show that our
algorithm outperforms GKMB.
The subsequent sections of this paper are organized as follows. In Section 2,
the network model and previous algorithms are described. Section 3 presents
details of our algorithm. Section 4 shows the results of simulation studies. This
paper is ﬁnally concluded in Section 5.

2
2.1

Preliminaries
Network Model

The source node of a multicasting is assumed to know all the information
needed to construct the multicast tree. A network is modeled as a directed
weighted graph G = (V, E) with node set V and edge (link or arc) set E. An
edge e ∈ E from u ∈ V to v ∈ V is represented by e = (u, v). We deﬁne
a path as sequence of links such that (v0 , v1 ), (v1 , v2 ), . . . , (vi−1 , vi ), belongs
to E. Let P (v0 , vi ) = {(v0 , v1 ), (v1 , v2 ), . . . , (vi−1 , vi )} denote the path from
node v0 to node vi . The path contains the nodes v0 , v1 , . . . , vi and the edges
(v0 , v1 ), (v1 , v2 ), . . . , (vi−1 , vi ). Each link e = (u, v) ∈ E is associated with two
parameters, namely link cost c(e) ≥ 0 and available link bandwidth b(e) ≥ 0.
They are asymmetric in general. The cost of a link can be associated with the
utilization of the link. A higher utilization is represented by a higher link cost.
The path cost of path P (s, m) is φC (P ) = e∈P c(e) and the tree cost of tree
T is given by φC (T ) = e∈T c(e).
For a given a network graph G(V, E), let a multicasting group be D ⊂ V .
D = {m1 , m2 , . . . , mk } is a group of nodes in G, where |D| = k. For each node
mi ∈ D, multicast member node mi has a bandwidth requirements of Bi units.
The bandwidth requirement Bi of each node in D is speciﬁed by the user. The
GMRP is that of ﬁnding a set of directed routing trees {T1 , T2 , . . . , Tk }, one for
each member of group D which satisfy the follows:
k

c(e) χie ,

minimize

∀

e∈E

i=1 e∈Ti

subject to
k

Bi χie ≤ b(e) , where χie =
i=1

1 if e ∈ Ei
0 otherwise

(1)

434

M. Kim et al.

for each tree Ti = (V, Ei ), where Ei ⊂ E, represents the tree rooted at node
mi ∈ D that spans all members in D.
The objective function ensures that the total cost of generated trees is minimized under constraint (1) is to ensure that the total bandwidth utilized on
each link does not exceed its available bandwidth. A set of trees {T1 , T2 , . . . , Tk }
which satisfy constraint (1) is called a feasible solution to the GMRP. A link is
called to be saturated if the diﬀerence between its available bandwidth and its
allocated bandwidth is less than the amount of bandwidth required by a user.
Variations of the GMRP have been investigated in the literature, including
GMRP under bandwidth constraints, GMRP under delay constraints, GMRP
protocols, and the static and dynamic GMRP. GMRP under QoS constraints
has drawn attention with the increasing development of real-time multimedia
applications, such as video-conference and on-line games. In this paper, we focus
on the bandwidth constrained GMRP.
2.2

Group KMB Algorithm

Jia and Wang proposed Group KMB (GKMB) [1] using KMB [2] as the single
source multicast routing algorithm. This algorithm constructs the set of multicast trees by sequentially invoking a single source multicast tree algorithm
over the multicast member nodes. If any links in the network become saturated,
i.e., overloaded, in the process, it implies that some multicast trees constructed
previously which use these links have to release them and take alternative paths.
The algorithm KMB by Kou, Markowsky, and Berman is a minimum spanning
tree based algorithm. Doar and Leslie report that KMB usually achiving 5%
of the optimal for a large number of realistic instances [4]. KMB algorithm is
illustrated in Fig. 1. To ﬁnd a tree, KMB starts with constructing the complete
distance network G = (V , E ) induced by D where, V contains source node
and destination nodes D only, and E is a set of links connecting nodes in V for
each other. In next step, a minimum spanning tree T of G is determined. After
then, a subgraph Gs is constructed by replacing each link (i, j) of T with its
actual corresponding minimum cost path from i to j in G. If there exist several
minimum cost paths, pick an arbitrary one. Next step is to ﬁnd the minimum
spanning tree T of Gs . In ﬁnal step, delete from T all unnecessary nodes and
corresponding links. Then the resulting tree is a KMB tree. Fig. 1(b) shows the
complete graph from the given network Fig. 1(a) and the minimal spanning tree.
Fig. 1(c) represents KMB tree by replacing each edge in the spanning tree by
its corresponding shortest path in the given network.
In GKMB algorithm, a multicast tree rooted at v is constructed for each v ∈ D
using KMB algorithm. When two or more trees compete for a saturated link, it
would simply imply that some of these trees would have to use alternative links
to get to the other member nodes in the trees. The diﬀerence in cost between
the original tree and the alternative tree is known as the alternative overhead.
The tree with the least alternative overhead will be forced to give up this link
and take the alternative link. GKMB has shown that the algorithm runs in time
O(k 3 n2 ) with |D| = k and |V | = n.

On Eﬃciency Group Multicasting Algorithm

(a) A given network

435

(b) The
complete (c) A multicast tree based on
graph and the minimal KMB
spanning tree
Fig. 1. e.g., KMB algorithm

3
3.1

The Proposed Algorithm
MCMT Algorithm

Recently, Bang et al. proposed the Minimum Cost Multicast Tree (MCMT)
algorithm [3] to create Steiner tree. MCMT is based on the Modiﬁed Dijkstra’s
Shortest Path (MDSP) algorithm to select all the minimum cost paths from
source to each destination in G [5] and Prim’s minimum spanning tree [6].
α
In Fig. 2, the sub-graph Gα
mj such that Gmj is constructed by merging all
the shortest paths from α ∈ V to each mj ∈ D, where Gα
mj can be constructed
using MDSP. Thus, any path of Gα
is
a
minimum
cost
path, also Gα
mj
mj is an
acyclic graph. Let T be a set of nodes that constitute a tree we want to deﬁne,
and be empty initially. Let G = (V , E ) be sub-graph of G with V ⊆ V and
E ⊆ E, where G = G ∪ Gα
mj with G = ∅ initially. Then, the conceptual main
idea of MCMT is as follows; select (s, mk ) pair, called (s, mk )min such that
φC (P (s, mk )) is minimum among all (s, mi ) pairs with mi ∈ D where, s is a
source of the multicast communication at initial step. If G = ∅, ﬁnd (α, mj )min
pair with α ∈ V and mj ∈ D. If α is not in T that is empty initially, we
select single minimum cost path Pmin of Gsmk that contains a node α. Once
Pmin via α is selected, nodes of Pmin are added to T , and all other redundant
nodes and links are pruned from Gsmk . When α is in T , then we just add Gα
mj
to the set G . We repeat this process until all Gα
mj with α ∈ V and mj ∈ D
are considered. At the end of process, if there exist Gα
mj of which Pmin is not
selected, single path from such Gα
selected
and
all
redundant
nodes and links
mj

436

M. Kim et al.

(a) MCMT basic concept

(b) A multicast tree based on MCMT

Fig. 2. e.g., MCMT algorithm

are removed. Then, the ﬁnal sub-graph, G , is a tree, and spans all destinations.
We strongly believe MCMT outperforms KMB in terms of tree cost. Therefore,
in this paper, we propose an algorithm, Group MCMT (GMCMT), that is based
on the adaptation of MCMT algorithm.
3.2

Group MCMT Algorithm

According to GKMB algorithm, which is based on KMB algorithm, it only considers the shortest paths between the destination nodes in multicast members
set D in the construction of each multicast tree. In particular, the selection of
the least cost link in each iteration of the greedy strategy is made from the set
of shortest paths between the multicasting members. However, if we increase the
set for the greedy strategy, the ﬁnal multicast trees may lead to lower cost solution for GMRP. The proposed algorithm is based on MCMT algorithm [3] and
we call this algorithm Group MCMT (GMCMT). Since the MCMT algorithm
ﬁnds multiple shortest paths and also considers the nodes between the group
members and the relay nodes, we strongly believe that the proposed algorithm
GMCMT is better than the performance of GKMB.
The GMCMT algorithm constructs a multicast tree Td , rooted at d ∈ D,
using the MCMT algorithm. If saturated edges occurs in a tree Td , then it may
imply that some trees which uses these edges will have to release them and use
other alternative edges. In this case, the goal is to obtain a feasible solution with
least cost possible. Since the problem of ﬁnding feasible solution for the GMRP
is NP-complete, however, the determination of which set of trees to throw up the
saturated edges will be a non-trivial task. In GMCMT algorithm, the alternative
overhead of the current tree Td is compared with the alternative overhead of the
most recently built tree that uses the saturated edges. The party that has the
smaller alternative overhead will have to give up the saturated edges and use
alternative links to get to other member nodes of D. The GMCMT algorithm
runs in time O(k 3 n2 ) with |D| = k and |V | = n.

On Eﬃciency Group Multicasting Algorithm

4
4.1

437

Performance Evaluations
Random Real Network Topology

Random graphs of the acknowledged model represent diﬀerent kinds of networks, communication networks in particular. There are many algorithms and
programs, but the speed is usually the main goal, not the statistical properties.
In the last decade the problem was discussed, for examples, by B. M. Waxman
(1993) [7], M. Doar (1993, 1996) [8,9], C.-K. Toh (1993) [10], E. W. Zegura, K.
L. Calvert, and S. Bhattacharjee (1996) [11], K. L. Calvert, M. Doar, and M.
Doar (1997) [12], R. Kumar, P. Raghavan, S. Rajagopalan, D. Sivakumar, A.
Tomkins, and E. Upfal (2000) [13]. They have presented fast algorithms that
allow the generation of random graphs with diﬀerent properties, in particular,
these are similar to real communication networks. However, none of them have
discussed the stochastic properties of generated random graphs. A. S. Rodionov
and H. Choo [14] have formulated two major demands for the generators of random graph: attainability of all graphs with required properties and uniformity of
distribution. If the second demand is sometimes diﬃcult to prove theoretically,
it is possible to check the distribution statistically. The method uses parameter
Pe, the probability of link existence between any node pair. We use the method
by Rodionov and Choo.
4.2

Simulation Results

We now describe some numerical results with which we compare the performance
of the proposed schemes. We generate 100 diﬀerent random networks for each
size of 25, 100, 150, and 200. Each node in network has the probability of link
existence Pe = 0.3. The algorithms, GKMB and GMCMT, are implemented in C.
The destination nodes are picked uniformly from the set of nodes in the network
topology (excluding the nodes already selected for the destination). Moreover,
the destination nodes in the multicast group, D, are occupied 5% ∼ 50% of the
overall nodes on the network. The link cost values in our computer experiment
are selected uniformly between 1 and 10. We simulate 1000 times (10 × 100 =
1000) for each |V |. For the performance comparison, we implement GKMB and
GMCMT in the same simulation environments.
Fig. 3 are described that GMCMT is always better than GKMB. We use the
normalized surcharge, introduced in [15], of the algorithm with respect to our
method deﬁned as follows:
δC =

φC (TGKMB ) − φC (TGMCMT )
φC (TGMCMT )

The enhancement is up to about 10% ∼ 25% (|V |: 200) in terms of normalized
surcharge for the GKMB tree cost.

438

M. Kim et al.

(a) |V |: 20 with Pe : 0.3

(b) |V |: 100 with Pe : 0.3

(c) |V |: 150 with Pe : 0.3

(d) |V |: 200 with Pe : 0.3

Fig. 3. Total tree costs

5

Conclusion

In this paper, we study the problem of constructing minimum cost group multicast trees with bandwidth reservations. Following that we propose a new eﬃcient
heuristic algorithm, called GMCMT, for ﬁnding low cost solutions for GMRP.
Results from our computer simulation show that GMCMT algorithm performs
better than GKMB algorithm in terms of total tree cost. For future work, we intend to investigate GMRP under dynamic group multicast routing. Any change
of the group membership (i.e., a process quits or joins the group) would incur
the re-computation of the routing trees of the group if keeping the network cost
optimal after the group membership change is the primary goal. Furthermore,
another future research direction is to extend the algorithm to GMRP under
other kinds of constraints.

Acknowledgment
This research was supported by Ministry of Information and Communication,
Korea under ITRC IITA-2006-(C1090-0603-0046).

On Eﬃciency Group Multicasting Algorithm

439

References
1. X. Jia and L. Wang, “A group multicast routing algorithm by using multiple minimum Steiner trees,” Elsevier Computer Communications, vol. 20, pp. 750-758,
1997.
2. L. Kou, G. Markowsky, and L. Berman, “A fast algorithm for Steiner trees,” Acta
Informatica, vol. 15, pp. 141-145, 1981.
3. Y.-C. Bang, S.-T. Chung, M. Kim, and S.-S. Joo, “On Multicast Communications
with Minimum Resources,” Springer-Verlag Lecture Notes in Computer Science,
vol. 3726, pp. 4-13, September 2005.
4. M. Doar and I. Leslie, “How Bad is Naive Multicast Routing?,” In Proceeding of
IEEE INFOCOM 93, pp. 82-89, 1993.
5. R. K. Ajuja, T. L. Magnanti, and J. B. Orlin, Network Flows: Theory, Algorithms,
and Applications, Prentice-Hall, 1993.
6. R. C. Prim, “Shortest Connection Networks And Some Generalizations,” Bell System Techn. J. 36, pp. 1389-1401, 1957.
7. B. W. Waxman, “Routing of multipoint connections,” IEEE Journal on Selected
Areas in Communications, vol. 6, no. 9, pp. 1617-1622, December 1988.
8. M. Doar, “Multicast in the ATM environment,” Ph.D dissertation, Cambridge
University, Computer Lab., September 1993.
9. M. Doar, “A Better Mode for Generating Test Networks,” In Proceeding of IEEE
GLOBECOM 96, pp. 86-93, 1996.
10. C.-K. Toh, “Performance Evaluation of Crossover Switch Discovery Algorithms for
Wireless ATM LANs,” In Proceeding of IEEE INFOCOM 96, pp. 1380-1387, 1996.
11. E. W. Zegura, K. L. Calvert, and S. Bhattacharjee, “How to model an Internetwork,” In Proceeding of IEEE INFOCOM 96, pp. 594-602, 1996.
12. K. L. Calvert, M. Doar, and M. Doar, “Modelling Internet Topology,” IEEE Communications Magazine, pp. 160-163, June 1997.
13. R. Kumar, P. Raghavan, S. Rajagopalan, D. Sivakumar, A. Tomkins, and E. Upfal,
“Stochastic Models for the Web Graph,” In Proceeding of the 41th IEEE Symposium on Foundations of Computer Science 2000.
14. A. S. Rodionov and H. Choo, “On Generating Random Network Structures: Connected Graphs,” Springer-Verlag Lecture Notes in Computer Science, vol. 3090,
pp. 483-491, September 2004.
15. V. P. Kompella, J. C. Pasquale, and G. C. Polyzoa, “Multicast routing for multimedia communications,” IEEE/ACM Transactions on Networking, vol. 1, no. 3,
pp. 286-292, 1993.

