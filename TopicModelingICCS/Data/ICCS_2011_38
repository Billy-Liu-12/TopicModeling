Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 2076–2085

International Conference on Computational Science, ICCS 2011

A Multitier System for the Verification, Visualization and
Management of CHIMERA
E. J. Lingerfelta, O. E. B. Messerb,c, J. A. Osborned,e, R. D. Budiardjac, A. Mezzacappac,f
a

Computer Science and Mathematics Division, Oak Ridge National Laboratory, Oak Ridge, TN 37831-6354
b
Leadership Computing Facility, Oak Ridge National Laboratory, Oak Ridge, TN 37831-6354
c
Department of Physics and Astronomy, University of Tennessee, Knoxville, TN 37996-1200
d
Department of Electrical Engineering and Computer Science, University of Tennessee, Knoxville, TN 37996-2100
e
NSF Teragrid XD RDAVCenter, National Institute for Computational Sciences,
University of Tennessee, Knoxville, TN 37996-2100
f
Physics Division, Oak Ridge National Laboratory, Oak Ridge, TN 37831-6354

Abstract
CHIMERA is a multi-dimensional radiation hydrodynamics code designed to study core-collapse supernovae. The code is made
up of three essentially independent parts: a hydrodynamics module, a nuclear burning module, and a neutrino transport solver
combined within an operator-split approach. Given CHIMERA’s complexity and pace of ongoing development, a new support
system, Bellerophon, has been designed and implemented to perform automated verification, visualization and management tasks
while integrating with other workflow systems utilized by CHIMERA’s development group. In order to achieve these goals, a
multitier approach has been adopted. By integrating supercomputing platforms, visualization clusters, a dedicated web server and
a client-side desktop application, this system attempts to provide an encapsulated, end-to-end solution to these needs.
Keywords: supernovae; visualization; regression test; code verification; multitier system

1. Introduction
Core-collapse supernovae are nature’s mechanism for producing the elements heavier than oxygen, which make
up our bodies and the world around us. By designing and implementing multi-dimensional, multi-physics codes, like
CHIMERA [1], scientists can leverage the power of supercomputing platforms to explore this phenomenon. Similar
to the three-headed beast in mythology, CHIMERA consists of three, separate, rather mature codes: a
hydrodynamics module, a nuclear burning module, and a neutrino transport solver, which are combined within an
operator-split approach. In order to maintain CHIMERA’s pace of development, we are creating a system,
Bellerophon, to assist in the verification, visualization and management of the code. a

a

In legend, Bellerophon, riding upon the flying horse, Pegasus, slayed the Chimera by using a spear tipped with a block of lead. When the hero
launched his spear into the throat of the fire-breathing beast, the lead mass melted and suffocated it. We have a quite different aim in mind using
our Bellerophon.

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.227

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

2077

The initial goal of Bellerophon is to provide CHIMERA’s development team with a system that addresses
verification, visualization, and management needs from one central, online portal. Bellerophon’s multitier
architecture provides a robust stage for developing solutions to these needs by combining the power of
supercomputing platforms and visualization clusters with a dedicated web server and a sophisticated client-side
desktop application. Since its developers are also its users, Bellerophon is being designed specifically for the
CHIMERA code. This near-complete overlap of user base and developer team has been the primary design
consideration for Bellerophon to this point. The aim has been to provide a “one-stop shop” for both code
development and scientific workflow management. Once an initial suite of software tools has been developed,
Bellerophon will be generalized for other codes and platforms. The next step in this generalization is to apply the
Bellerophon system to GenASiS [2,3], a computational astrophysics code under development at ORNL. Following
the successful adaptation of Bellerophon to GenASiS, the system will be developed further to suit the needs of a
broad array of scientific applications.
In the CHIMERA use case, the system accomplishes verification by performing automated regression testing of
both the 2D and 3D versions of the code on supercomputing platforms and making the results of these tests
accessible via the Regression Test Explorer software tool. Results of the regression tests not only indicate problems
with the code, but also possible issues with the testing platforms. Bellerophon’s visualization utility is comprised of
two subcomponents, chimera2silo and spearhead. Currently under development is a completely automated system,
which will use these subcomponents and others to generate visualization concurrent with running CHIMERA
simulations. Bellerophon also integrates with other workflow systems already utilized by the group. These workflow
systems include a Subversion code repository [5] and a Trac project management system [6]. Lastly, the system
assists the CHIMERA team with management tasks by providing access to code repository statistics,
supercomputing platform status and direct links to other external workflow features.
Other systems have been created to address some of these code development issues. Bell and others have
implemented an automated regression test suite for CASTRO [7, 8], another multiphysics code used for stellar
astrophysics simulations. In that work, a regression test system, written using the Python language, executes a series
of verification test problems and compares the results to current benchmarks. A web page detailing regression test
results by date is also generated. Hudson, et al. [9] have also recently presented their architecture for a simulation
management and analysis (SMA) system for data produced by the FLASH code [10]. The FLASH SMA is mainly
concerned with data management and analysis, as opposed to the FlashTest regression test system that has been
previously released. For general-purpose workflow construction, Kepler [11], is a free and open source framework
for generating and executing customized scientific workflows across different platforms and protocols. Kepler’s
Java-based graphical user interface enables users to create, modify, manage and visualize sophisticated workflows
and their data products quickly from prebuilt and user-defined components. The Electronic Simulation Monitoring
dashboard (eSiMon) [12] is a web-based system enabling researchers at the Oak Ridge Leadership Computing
Facility (OLCF) to monitor simulation runs and analyze, archive and share the results with collaborators. The
graphical user interface for eSiMon is a cross-platform Flash application, which interfaces to backend services
through code implemented in PHP.
2. Architecture
As previously stated, Bellerophon is a multitier software system comprised of supercomputing platforms,
visualization clusters, a central web server and a client-side desktop application. These components not only provide
the data, logic and presentation tiers commonly employed in n-tier system architectures, but also a new tier called
the scientific computing tier. A schematic representation of these components and tiers is seen in Figure 1.
Bellerophon’s scientific computing tier utilizes resources available at Oak Ridge National Laboratory’s National
Center for Computational Sciences (ORNL NCCS) and the National Institute for Computational Sciences (NICS) at
the University of Tennessee. The supercomputing platforms at the NCCS and NICS, Jaguar XT4/5 and Kraken, are
used to execute automated regression testing of CHIMERA. The results of these tests are archived using High
Performance Storage Systems (HPSS). Both the NCCS and NICS provide an HPSS for users. Bellerophon’s

2078

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

visualization needs are currently satisfied in part by the Lens data analysis and visualization cluster at the NCCS.
Future development of these capabilities will incorporate Nautilus, a new resource provided by the NICS Remote
Data Analysis and Visualization Center (RDAV).

Figure 1. A schematic representation of Bellerophon’s multitier architecture.

Besides using HPSS for data archiving and long term storage, the primary components to Bellerophon’s data tier
consist of a MySQL database and a hierarchal system of indexed directories on a dedicated web server. The
database consists of indexed records of metadata pointing to regression test datasets and visualization sets stored in
the hierarchal directory system. The database also stores user account information and active sessions, as well as
logs of past sessions, client/server exchanges, server errors, and client-side exceptions.
The logic tier consists of a web service and other scripts, written in PHP, to consume data transmitted from the
scientific computing tier. When regression test datasets or visualization sets are transmitted to a temporary storage
area on the web server, scripts running as cron jobs archive the raw data sets and consume the data sets by creating
database records using the set’s metadata profile. It then moves the processed data into the indexed storage area. The
main purpose of the logic tier is to provide a web service allowing secure access to the data tier by the presentation
tier. The logic tier also provides mechanisms for sending automated emails to the development team in the event of
a regression test failures, server errors or client-side exceptions.
The presentation tier of Bellerophon’s architecture consists of a web-deliverable, cross-platform Java desktop
application. This digitally signed application uses Java WebStart technology [13], which enables installation and
execution by simply clicking a hyperlink in a web page. If enabled, the user can also choose to install a shortcut to
the application in the Applications folder for Mac OS users or the Start menu for Windows users. If not, the user
may continue to load the application from the hosting web page. There are several advantages to this approach.
Whether the user launches the application from a hyperlink or from the desktop, Java WebStart will automatically
check for Bellerophon updates on startup. The dashboard design of the application employs the WYSIWYG
approach to graphical user interface development, which simplifies the experience for the user. The client
application communicates with the logic tier’s web service by making asynchronous calls via multipart/form-data
web transmissions over the network.

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

2079

3. Verification
Verification of CHIMERA is performed by an automated regression test system, which spans all components of
Bellerophon’s architecture beginning with the scientific computing tier. A series of PBS scripts test the 2D and 3D
versions of CHIMERA’s code on the Jaguar XT4/XT5 and Kraken platforms daily, archives the results in the
associated HPSS and copies the results along with the necessary metadata to the data tier. Automation of this
process is achieved by using scripts that resubmit themselves to the job submission queue on a daily basis. The
regression test system checks out the head revision of each code from CHIMERA’s repository, configures several
input files using a small Java program, and attempts compilation and execution. The results of a test, the associated
metadata file and the job’s standard output and error file are compressed and transferred to the web server. The
compressed regression test archive is also moved to HPSS for long-term storage.
On the web server, a regression test processing script checks for new data every hour. When new data is detected,
the script consumes the regression test data by creating a database record and moving the data to an associated
directory. If a compilation or execution error is detected, an email is sent to all developers who have contributed to
the code since the last successful revision. An email is also sent if a particular test is the first successful test after a
series of failures. In the event of an execution failure, Bellerophon attempts to create a stack trace of the issue using
the addr2line Linux utility. The email is populated with a stack trace constructed of hyperlinks, which point directly
to the file, line number and revision of the code in CHIMERA’s Trac code repository browser, and sent to
developers who have modified the code since the last successful revision.

Figure 2. A screenshot of the Regression Test Explorer’s test selection interface.

2080

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

The Regression Test Explorer software tool provides users with the ability to select, compare and investigate
regression test results. The regression test selection interface of the tool allows users to filter tests by regression test
index, code revision, job id, code type (2D or 3D), test date, owner, test platform, and final test result. Users may
also sort regression test records by these attributes. After selecting one or more records, the user can explore the
results of the selected regression tests. Each regression test has a directory of files available for viewing which
include the makefile, input/output files and metadata files. The user can view, copy, save and print any file as well
as download the entire regression test directory as a compressed archive. If an execution failure occurred and a stack
trace for the failure could be generated, a file called addr2line is made available for inspection. Like the previously
mentioned email, this file also contains hyperlinks that point directly to the file, line number and revision of the code
in CHIMERA’s Trac code repository browser. Another capability allows the user to directly access the selected
revision’s changeset and log entry in Chimera’s online Trac system. Figures 2 and 3 show the regression test
selection and inspection graphical user interfaces, respectively.

Figure 3. A screenshot of the Regression Test Explorer’s test inspection interface.

4. Visualization
The VisIt Visualization Tool is used to generate series of images for animations of CHIMERA data. The VisIt
tool accepts input data to be in one of several acceptable formats. For CHIMERA, the Silo input data format has
been selected. Two new tools have been developed to facilitate the visualization process for 2D results. The first

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

2081

tool, chimera2silo, converts 2D binary output data into the Silo format. This tool consists of two components, an
executable written in C, which converts data at each frame into a silo file, and a Java program, which parses
configuration files and generates a list of arguments required by the converter. Currently, only scalar variables can
be converted, but development is underway to generate silo files containing vector and matrix data types. The
second tool, spearhead, automates the process of generating images from the silo files using the VisIt Python API.
The tool is a scripting system, which parses parameters from configuration files, dynamically generates the Python
code required to create a series of images and then executes the Python code serially to generate the images.
The chimera2silo and spearhead components are a central part of an automated visualization system, which is
currently under development. We are designing and developing a system whereby a CHIMERA user will be able to
generate and view animations of data through the Bellerophon client while the job is being executed on a
supercomputing platform such as Jaguar or Kraken. The ability to apply this automated system to archived data sets
is also being developed. The system will be introduced in two phases. The first phase will apply to the 2D version of
the code and the second to the 3D version.
Our plan for concurrent 2D visualization can be seen in the Figure 4. When a user starts or restarts a CHIMERA
2D simulation, a script called the silo_generator will be executed from the simulation’s PBS batch script and will
monitor the generation of new CHIMERA 2D data. When new data is available, chimera2silo is called by
silo_generator to convert the data into the silo format. The silo_generator script will archive the silo files into HPSS
and transmit the files and associated metadata to a temporary storage area on the web server. Scripts running in the
logic tier will consume the silo files and generate images using the spearhead system.

Figure 4. A schematic representation of Bellerophon’s automated visualization process, which is under development.

2082

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

In order to provide Bellerophon with the information required to generate and access animations from simulation
results, the user must first use the Visualization Set Editor software tool, which is also under development. The
Visualization Set Editor allows the user to create a visualization set for a particular simulation and enables the user
to save notes, prescribe a unique 60-character simulation identifier and to dictate the variables that will be
visualized. Several attributes of each animation are configurable including the animation’s range and domain, color
table and color table range. Once submitted to Bellerophon’s web service, the user receives a unique visualization
set index, which is then used as an argument to the silo_generator script. The logic tier will use this index to identify
silo files or images when they are transmitted to the web server.
Another desktop application tool under develop, the Visualization Set Explorer, enables the user to examine and
compare animations from different visualization sets (see Figure 5). Using this tool the user can select multiple
visualization sets and filter visualization sets by visualization set index, simulation identifier, creator, creation date,
progenitor source and mass, and resolution. After making the selections, the user can use the tool to load and play
animations with a custom viewer while accessing visualization set and simulation metadata. The user also has the
ability to download the current frame as a PNG and the entire animation as a QuickTime-compatible MP4 movie.

Figure 5. A screenshot of the Visualization Set Explorer’s animation viewer interface loaded with an animation of entropy data
from a 512 x 256 CHIMERA 2D simulation with a 15 solar mass Woosley-Heger 2007 progenitor [14].

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

2083

Given the size of CHIMERA 3D results and the computing power required to render 3D images and animations,
it is untenable to transfer the data across the network and generate images on a common web server. Therefore, in
phase II, we plan on using the NCCS Lens cluster and the new NICS RDAV resource, Nautilus, to access the data in
place and render 3D images using VisIt. These images will then be transferred to the Bellerophon web server where
they will be consumed by the logic tier and made available to users via the Visualization Set Explorer.
5. Management
Bellerophon addresses management needs through the SVN Statistics On-Demand software tool and the
Important Links and Information feature. SVN Statistics On-Demand allows users to execute the StatSVN [15] code
repository statistics generator via Bellerophon’s web service. StatSVN generates a set of interlinking HTML pages
with tables and plots detailing statistical information about a project’s code development. With SVN Statistics OnDemand, the user can configure the statistical output by selecting either the CHIMERA 2D or 3D code and a mixed
range of revisions and dates. The tool also displays the log entry for a selected revision to assist the user in
determining the correct range. The Bellerophon web service generates the content on the server using StatSVN and
downloads the content to a selected directory on the user’s computer. The Important Links and Information feature
as seen in Figure 6 provides direct links to CHIMERA’s 2D and 3D Trac repository browser, its public and private
wikis and the NCCS and NICS homepages. With this tool, a user can post to the CHIMERA mailing list, browse the
mailing list archives and create a new Trac ticket as well as receive real time updates of NCCS and NICS systems
status.

Figure 6. A screenshot of the Important Links and Information feature.

2084

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

6. Future Developments
Future enhancements include expanding regression test capabilities by introducing an array of verification test
problems for both the 2D and 3D codes and comparing results of these new tests to benchmarked solutions. A new
tool, Regression Test On-Demand, is also slated for development. This new tool will provide CHIMERA’s
developers the ability to perform a regression test over a selection of verification test problems and compare the
results with previous revisions. Once Bellerophon’s automated visualization system is fully implemented for
CHIMERA 2D data sets, it will be expanded to include 3D results. We also plan to develop the capability to post
animations created with Bellerophon’s visualization system directly to CHIMERA’s private group wiki using the
Visualization Set Explorer. Future developments also include an Android app enabling mobile interaction with the
web service.
7. Conclusion
Bellerophon is an integrated solution for the verification, visualization and management needs for the multidimensional core-collapse supernova code, CHIMERA. Its multitier architecture combines supercomputing
resources, visualization platforms, a dedicated web server and a web-deliverable, cross-platform desktop
application. An automated regression test system and tools to facilitate the generation of visualization content have
been developed. Bellerophon’s desktop application enables users to investigate regression test results, generate code
repository statistical information and access important external links and other workflow tools. After this initial
development phase, we intend to generalize Bellerophon to other codes and platforms. We believe that this
development cycle – the construction of an overall system expressly tailored to the needs of the CHIMERA
collaboration, followed by a generalization cycle to other multiphysics HPC codes – has, most importantly,
produced a product that meets our current needs to enable leadership-scale computational science with CHIMERA.
We also believe that the multitier architecture of Bellerophon affords us considerable advantage regarding future
generalization, as relatively coarse-scale modules can easily be traded in and out of Bellerophon based on particular
code requirements.
Acknowledgements
This research used resources of the National Center for Computational Sciences at Oak Ridge National Laboratory,
which is supported by the Office of Science of the U.S. Department of Energy under Contract No. DE-AC0500OR22725.
Excluding the VisIt Visualization Tool and the StatSVN Code Repository Statistics tool, Bellerophon uses the
following third-party software products:
Tango Icon Library (http://tango.freedesktop.org/Tango_Icon_Library)
SwingX GUI Extensions (https://swingx.dev.java.net)
JTechLabs Directory Chooser Java Bean (http://www.jtechlabs.com/components/jdirectorychooser)
TableLayout GUI Layout Manager (https://tablelayout.dev.java.net)
Apache Commons Exec API (http://commons.apache.org/exec)
FFmpeg (http://www.ffmpeg.org/)
X264 (http://www.videolan.org/developers/x264.html)
References
1. O. E. B. Messer, S. W. Bruenn, J. M. Blondin, W. R. Hix, A. Mezzacappa and C. J. Dirk. Petascale supernova simulation with CHIMERA.
J. Phys.: Conf. Ser., 78 012049 2007.
2. R. D. Budiardja. Towards Simulations of Binary Neutron Star Mergers and Core-Collapse Supernovae with GenASiS. Diss. Univ. of
Tennessee, 2010.
3. C. Y. Cardall, E. Endeve, R. D. Budiardja, P. Marronetti and A. Mezzacappa. Towards exascale supernova simulations with GenASiS.
SciDAC 2010, July 11-15.

E. J. Lingerfelt et al. / Procedia Computer Science 4 (2011) 2076–2085

2085

4. https://wci.llnl.gov/codes/visit
5. http://subversion.tigris.org
6. http://trac.edgewall.org
7. A. S. Almgren, V. E. Beckner, J. B. Bell, M. S. Day, L. H. Howell, C. C. Joggerst, M. J. Lijewski, A. Nonaka, M. Singer and M. Zingale.
CASTRO: A New Compressible Astrophysical Solver. I. Hydrodynamics and Self-Gravity. ApJ 715 1221 2010.
8. https://ccse.lbl.gov/Research/CASTRO/CastroUserGuide.pdf
9. R. Hudson, J. Norris, L. B. Reid, K. Weide, G. C. Jordan IV, M. E. Papka. A Management and Analysis System for Data-Intensive
Simulations. Journal of Parallel and Distributed Computing, 2010 (submitted).
10. A. C. Calder, B. Fryxell, T. Plewa, R. Rosner, L. J. Dursi, V. G. Weirs, T. Dupont, H. F. Robey, J. O. Kane, B. A. Remington, R. P.
Drake, G. Dimonte, M. Zingale, F. X. Timmes, K. Olson, P. Ricker, P. MacNeice and H. M. Tufo. On Validating an Astrophysical Simulation
Code. ApJS 143 201 2002.
11. https://kepler-project.org
12. http://www.olcf.ornl.gov/center-projects/esimmon
13. http://java.sun.com/javase/technologies/desktop/webstart
14. S. E. Woosley and A. Heger. Nucleosynthesis and remnants in massive stars of solar metallicity, Physics Reports, Vol 442, Issues 1-6,
The Hans Bethe Centennial Volume 1906-2006, April 2007, Pages 269-283.
15. http://www.statsvn.org/

