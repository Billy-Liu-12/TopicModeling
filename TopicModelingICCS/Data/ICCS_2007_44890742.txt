Adaptive Mining the Approximate Skyline over Data
Stream
Liang Su, Peng Zou, and Yan Jia
School of Computer Science National University of Defense Technology
Changsha 410073, China
suliangnudt@gmail.com, zpeng@nudt.edu.cn, jiayanjy@vip.sina.com

Abstract. Skyline queries, which return the objects that are better than or equal
in all dimensions and better in at least one dimension, are useful in many
decision making and monitor applications. With the number of dimensions
increasing and continuous large volume data arriving, mining the approximate
skylines over data stream under control of losing quality is a more meaningful
problem. In this paper, firstly, we propose a novel concept, called approximate
skyline. Then, an algorithm is developed which prunes the skyline objects
within the acceptable difference and adopts correlation coefficient to adjust
adaptively approximate query quality. Furthermore, our experiments show that
the proposed methods are both efficient and effective.
Keywords: Approximate skyline, adaptive algorithm, data stream, data mining.

1 Introduction
For two objects X=(x1, x2,…,xd) and Y=(y1, y2,…,yd) in the d-dimensional space, X
dominates Y if xi≤yi for1≤i≤d. Skyline computing aims to find all objects that are not
been dominated by other objects and roots in many decision making and monitor
applications. B¨orzs¨onyi et al. [1] proposed first two algorithms for the skyline
computation: the BNL (block nested loop) and DC (divide and conquer) algorithm.
Subsequently, skyline problem and its variants [2,3,4,5] have been extensively
studied, and a lot of algorithms have been developed. BBS [2] compute the skyline
using nearest neighbor search. However, in [7], Bentley et al. proved that the average
number of skyline objects is O((lnN)d-1) (N is the size of the original objects) which is
the cardinality bound most often cited and employed. In paper [3], Xuemin Lin et al.
consider the problem of efficiently computing the skyline against the most recent N
elements in a data stream, they had realized the algorism scalability and proposed
approximate skyline problem. None of the algorithms referenced above was originally
designed to support approximate skyline computation over data stream. These are the
motivations of our research in the paper. To the best of our knowledge, there is no
similar work existing in the literature in the context of adaptive approximate skyline
computation over data stream.
The rest of the paper is organized as follows. Sections 2 provide our techniques for
processing approximate skyline problem and algorithm. Results of comprehensive
experimental studies are discussed in section 3. Section 4 concludes the paper.
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 742–745, 2007.
© Springer-Verlag Berlin Heidelberg 2007

Adaptive Mining the Approximate Skyline over Data Stream

743

2 Approximate Skyline Problem and Algorithms
To eliminate the number of skyline set and improve the manageability, intuitively,
first we depict accurately how close the degree of two skyline objects is. We are
naturedly aware of the geometry distance. Then we use an acceptable difference
distance to prune some neighbor objects, and find the approximate skyline set. Behind
of the paper we only use the Euclidian distance as the dist function.
Definition 1. (Approximate Skyline Set) Let Ω be the set of d-dimensional objects,
and Ωskyline be the skyline set on Ω. The acceptable difference distance is ε and
obviously satisfies ε≥0. ΩAskyline reprsents the approximate skyline set that satisfies:
1. ∀X i , X j ∈ Ω ASkyline , X i ≠ X j , then dist (X i , X j ) ≥ 2ε

2. ∀X i ∈ Ω Skyline , then ∃X j ∈ Ω ASkyline , s.t. dist (X i , X j ) ≤ ε
Definition 2. (Strongly Dominating Relationship) An object X i ∈ Ω strongly

dominates another object X j ∈ Ω , noted as X i

X j , if X i + ε

X j ( Xi

means X i dominates X j ). That is to say: ∀ 1 ≤ k ≤ d, x + ε ≤ x , and ∃ 1
k
i

k
j

Xj

≤ t ≤ d,

x + ε < x , reversely, X j is a strongly dominated object by X i .
t
i

t
j

Definition 3. (Correlation Coefficient) Given n d-dimensional objects, which

X i = ( xi1 ,..., xi d ), 1 ≤ i ≤ n , set matrix
⎛ x11 … x1d ⎞
⎟
⎟ = (Y1 ,..., Yd )
1
d
⎜x
⎟
x
n ⎠
⎝ n

then A = ⎜
⎜

A = ( X 1 ,..., X n )

, and ρ (Yi , Y j ) =

T

and Y j = ( x11 ,..., x1n )T ,

E ((Yi − EYi )(Y j − EY j ))
DYi i DY j

=

E (Yi Y j ) − EYi EY j
DYi i DY j

1 n i
∑ xk is the expectation of vector Yi ;
n k =1
DYi = E (Yi − EYi ) 2 = EYi 2 − ( EYi )2 is the variance of vector Yi . The correlation
coefficient is between -1 and +1. We construct a translation function which
a+b
b−a
, 1 ≤ a ≤ b and choose ε Φ ( ρ ) as the bound of difference
is Φ( ρ ) =
−ρ
2
2
distance to adaptively mining the approximate skyline in data stream.

is the correlation coefficient; EYi =

Theorem 1. Given a dataset Ω Skyline , if X i , X j ∈ Ω Skyline and dist (X i , X j ) ≤ ε ,
d

then ∑ x ik − x kj ≤ ε d .
k =1

2.1 Extended Micro-cluster Feature Tree Based Approximate Skyline
Algorithm

To save the memory and run time, we partition the sliding window data into extended
micro-cluster feature tree based on CF-tree [6] which only save the approximate

744

L. Su, P. Zou, and Y. Jia

skyline set and the information of their close neighbors(two or more micro-clusters
can build a larger one). The pseudo code of EMCFTA algorithm is showed below.
Definition 4. (Extended Micro-Cluster Feature Tree, EMCF-Tree) A extended
micro-cluster feature tree for a set of d-dimensional objects X1,X2,…,Xn

( X i = ( xi1 ,..., xi d ) ), is defined as a (3d+3+L(Hskyline)+L(Hdominated))-tuple ( ASF 1 ,

A SF 2 , ASF 3 , K(Xcentriod), Xcentriod, Parent, Hskyline, Hdominated). The definition of
each of these entries is as follows, Figure 2 is the whole data structure:
n

• The p-th entry of ASF1 is equal to x p ;The p-th entry of ASF2 is equal to
∑ j
j =1

n

∑ (x
j =1

p
j

)2 ;

• The p-th entry of ASF3 is equal to min nj =1 ( x jp ) ;K(Xcentriod) is the ordinal of Xcentriod;

Ω

• Xcentriod is belong to ASkyline, which represents the centroid of its micro-cluster;
• Parent is pointer to its parent node, which is to trace back to modify its ancestors;
• Hskyline is a heap to save the skyline objects within its micro-cluster; Hdominated is a
heap to save the dominated objects by Xcentriod; n is the length of sliding window.

......
......
Fig. 1. Tree Micro-Cluster regions

......

Fig. 2. Extended Micro-Cluster Feather Tree

ε

Algorithm EMCFTA( , Ω )
/*ε is the approximate skyline distance; input the original data objects in Ω; Output is the approximate skyline
set ΩASkyline. The Xnew represents a new object from the data stream.*/
1
find the closest micro-cluster from the EMCF-Tree, that is MCd which also is the leaf node;
2
if Xnew
Xcentriod, then Xnew is located in region(Ⅴ) Fig 1, so Xcentriod := Xnew;
3
else if Xcentriod
Xnew
4
5

begin
if K(Xnew)-K(Xcentriod

) ≤ n-K(Xcentriod) mod n, then no action;

Xnew is located in region(Ⅰ) Fig 1, so add Xnew

6
7

else
end;

8

else if dist(Xnew ,

10

else

to Hdominated;

Xcentriod ) ≤ ε, then Xnew is located in region(Ⅳ) Fig 1, and add Xnew to Hskyline;
Xnew is located in region (Ⅲ) Fig 1, create a new micro-cluster leaf node to MCd’s parent, and

Xnew is the centroid object.

Adaptive Mining the Approximate Skyline over Data Stream

745

3 Experiments
We use the three most popular synthetic benchmark data, correlated, independent,
and anti-correlated [1,2,3,4,5] and implement them in C++. Experiments were
performed on an Intel Pentium 4, CPU 2 GHZ, and RAM 512 MB, with Windows
XP. All generated data value is between 0 and 1, the difference distanceε [0,1] and
dimension d is from 2 to 10.
Firstly, we compare ΩASkyline with ΩSkyline in size at three data distributions. We
observe that the result set produced by EMCFTA algorithm is between 30% and 55%
of the basic skyline set with d=5 andε=0.1. Secondly, we would examine the quality
of approximate skyline set. Because the number of basic skyline objects in the
correlation distribution is fewer than other two distributions sharply, we only use the
anti-correlation and independent distributions as next experiments. To measure the
quality of approximate skyline set, We use the average distance inΩSkyline andΩASkyline
which is the average distance among the arbitrary two objects. These two formulas
are as follows:

∈

Ω

A v g D is t S k y lin e =

(

i =1

Ω

A v g D is t A S k y lin e =

Ω

S k y lin e

∑

j=2∧ j≠i
Ω

A S k y lin e

∑

i =1

S k y lin e

∑

(

d is t ( X i , X j ) )

A S k y lin e

∑

j=2∧ j≠i

d is t ( X i , X j ) )

(Ω

S k y lin e

(Ω

i( Ω

A S k y lin e

S k y lin e

i( Ω

− 1) 2 )

A S k y lin e

(1 )

− 1) 2 ) ( 2 )

The average distance ratio (equals: 100*AvgDistSkyline/ AvgDistASkyline) is between
90 and 99, the skyline objects have been reduced to almost 45% of basic skyline
objects. So our algorithm is efficient which are meaningful for data stream mining.

4 Conclusions and Future Work
In this paper, we propose a novel concept and an efficient algorithm which can prune
adaptively the skyline objects. In future, we plan to develop a parallel and distributed
algorithm to meet more scalable and changeable data stream environment.

References
1. Stephan B¨orzs¨onyi, D.K., Konrad Stocker. The Skyline Operator. in ICDE (2001).
2. Dimitris Papadias, Y.T., Greg Fu, Bernhard Seeger. An Optimal and Progressive Algorithm
for Skyline Queries. in SIGMOD (2003).
3. Xuemin Lin, Y.Y., Wei Wang, Hongjun Lu. Stabbing the Sky: Efficient Skyline
Computation over Sliding Windows. in ICDE (2005).
4. Chee-Yong Chan, H.V.J.,et al. On High Dimensional Skylines. in EDBT (2006).
5. Y. Tao,et al. SUBSKY: Efficient Computation of Skylines in Subspaces. in ICDE (2006).
6. Tian Zhang, R.R., Miron Livny. BIRCH: An Efficient Data Clustering Method for Very
Large Database. in SIGMOD (1996).
7. Bentley, J.L., Kung, H. T., Schkolnick, M., Thompson, C. D. On The Average Number of
Maxima in a Set of Vectors and Applications. JACM (1978).

