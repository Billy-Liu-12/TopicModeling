Procedia Computer Science 1 (2012) 791–799
Procedia Computer Science 00 (2010) 1–9

Procedia Computer
Science
www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

A space-time adaptive approach to orientation dynamics in particle
laden ﬂows
Evgeniy Zharovskya,∗, Bernd Simeona
a Technische

Universit¨at M¨unchen, Chair of Numerical Analysis, Boltzmannstr. 3, D-85748 Garching, Germany

Abstract
1949 Toms discovered that a minute amount of polymer ﬁbers suspended into a Newtonian solvent can increase
the ﬂow-rate of the ﬂuid and thus reduce the turbulent drag. Today, the mechanism behind this eﬀect is still not
completely understood. We aim at studying this phenomenon numerically by directly solving the governing FokkerPlanck equation (FoP) for particle orientation statistics. From a numerical analysis point of view, this is a convectiondominated convection-diﬀusion equation in orientation space where the convection term depends on the ﬂuid ﬂow.
Since the orientation space is naturally given by the surface of the unit sphere, we tackle the problem by combining
a geodesic grid discretization with the Finite Volume Method (FVM). Due to an isolated moving peak in the solution
of the FoP, we employ a space-time adaptive approach and discuss the performance of the adaptive algorithm with
respect to diﬀerent reﬁnement strategies for an analytical test problem (simple shear ﬂow) and for input data from the
direct numerical simulation of a turbulent channel ﬂow. Furthermore, the results are compared to previous approaches
based on uniform grids. It turns out that the space-time adaptive algorithm is indeed advantageous for certain ﬂow
ﬁelds but so far not as robust as approaches with ﬁxed grids.
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: convection-diﬀusion, space-time adaptivity, geodesic grids, Fokker-Planck, ﬁnite volume method,
paricle laden ﬂow, tubulent drag reduction
1. Introduction
Particle laden ﬂows arise in various ﬂuid dynamics applications, such as blood ﬂow, short ﬁber composite production or paper industry. An other important application is turbulent drag reduction, e.g., in pipelines [1]. Though the
eﬀect was discovered experimentally already 60 years ago by Toms [2], the mechanism behind it is still not completely
understood by now.
Over the last years, several authors have provided numerical methods to investigate the problem [3, 4, 5, 6], but
the eﬃcient direct numerical simulation of the Fokker-Planck equation for particle orientation dynamics remains a big
challenge. From the numerical analysis point of view this is a convection-dominated convection-diﬀusion equation
in orientation space naturally given by the surface of a unit sphere. The solution tends to form steep isolated peaks
and is varying rapidly due to the chaotic nature of the turbulent carrier ﬂuid [7], which is responsible for the particle
∗ Corresponding

author
Email addresses: zharovsk@ma.tum.de (Evgeniy Zharovsky), Simeon@ma.tum.de (Bernd Simeon)
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝

doi:10.1016/j.procs.2010.04.085

E. Zharovsky,
Zharovsky and
B. Simeon
/ ProcediaComputer
Computer Science
Science 00
(2010) 1–9
E.
B. Simeon
/ Procedia
1 (2012)
791–799

792

2

orientation. This imposes high demands on numerical algorithms in order to capture the orientation dynamics in
suﬃcient detail.
Recently, we proposed an approach that is based on geodesic grids for spatial discretization and a Finite Volume
Method (FVM) for spatial approximation. Such grids have become popular in meteorology [8, 9, 10, 11], and the
FVM has proved its reliablity in various convection-dominated applications [12]. We were able to show that the
approach with geodesic grids yields high quality solutions for particle orientation dynamics [13]. However, due to the
localized phenomena the results obtained so far suggest further developments towards a fully adaptive algorithm in
space and time. In the current work we present a ﬁrst version of such an algorithm and demonstrate that for simple
ﬂow regimes it is already highly advantageous with respect to CPU time. For a more complicated real life example,
however, the new approach shows a lack in robustness, and the results give guidelines for further development.
The paper is structured as follows. In the next section we present the mathematical model and the governing
equations of the problem. Section 3 gives an overview on the numerical techniques that we employ, among them the
spatial discretization by means of geodesic grids, the FVM approximation and the adaptive Rothe method for spacetime adaptivity. Thereafter in Section 4 we present the results obtained by our new method for a simple shear ﬂow
and for a Lagrangian path in a turbulent channel ﬂow. The performance of the proposed method is then discussed in
Section 5 and further developments are sketched.
2. Governing equations
In this section, we present a mathematical model for particle orientation dynamics.
2.1. Dynamics of the particle laden ﬂow
We consider rigid rodlike inertia-free particles suspended in a Newtonian incompressible carrier ﬂuid. In the
context of turbulent ﬂows, we assume that the length of the particles is smaller than the Kolmogorov scale. The
particle laden ﬂow can then be homogenized as a single-phase non-Newtonian ﬂow governed by the incompressible
Navier-Stokes equations
∇ · u = 0,

(1)
N

ρ (∂t u + u · ∇u) = −∇p + ∇ · τ + τ

NN

,

(2)

deﬁned on the domain D ⊂ R3 with appropriate initial and boundary conditions. Here, u = u(x, t) is the velocity
vector, p(x, t) the pressure and ρ the density of the carrier ﬂuid. As usual, x ∈ D ⊂ R3 denotes the spatial variable and
t the time. On the right-hand side we have τN (x, t), which is the Newtonian part of the stress tensor attributed to the
carrier ﬂuid and τNN (x, t), the non-Newtonian part of the stress tensor due to the suspended particles. The tensor τN
can be computed via
(3)
τN = 2μD,
with μ being the dynamic viscosity of the carrier ﬂuid and the rate-of-strain tensor
D(x, t) =

1
∇u(x, t) + ∇uT (x, t) .
2

All of the quantities in Eq.’s (1) and (2) except τNN can be computed via a solver for incompressible ﬂuid problems.
For τNN we employ Brenner’s rheological theory [14], which connects the non-Newtonian stress to the orientation
distribution of the particles. Therefore, a particle description is needed ﬁrst. We describe a particle via its unit axial
vector n as shown in Fig. 1.
Note that ||n||2 = 1, so that the corresponding domain is the surface of the unit sphere ∂B(0; 1). If we assume that
the particle orientation is distributed according to a probability density function Ψ = Ψ(x, n, t), the non-Newtonian
stress is given by
τNN = 2μ0 D + μ1 ID : nn Ψ + μ2 D : nnnn Ψ
(4)
+2μ3 ( nn Ψ · D + D · nn Ψ ) + 2μ4 Dr (3 nn Ψ − I),

3
793

E. Zharovsky
B. Simeon
/ Procedia
Computer
Science
00 (2010)
1–9
E. Zharovsky,
B. and
Simeon
/ Procedia
Computer
Science
1 (2012)
791–799







Figure 1: Schematic view of a rigid rodlike particle.

where μ0 , . . . , μ4 are material constants and I is the identity tensor. The brackets nn
and fourth statistical moments of the orientation distribution function Ψ, e.g.,
nn

Ψ

Ψ

and nnnn

Ψ

are the second

nnT Ψ(x, n, t) dn,

= nn Ψ (x, t) =

(5)

∂B(0;1)

and analogously for nnnn Ψ . Therefore, if the orientation distribution Ψ is known, the non-Newtonian stress can
then be computed by simple integration or quadrature, respectively, and all terms in the Navier-Stokes equations (1)
and (2) are then available.
2.2. Particle orientation dynamics
Under the previously given assumptions, the particles are subjected to a creeping ﬂow. The resulting force in
orientation space is given via Jeﬀrey’s equation [15]
f(x, n, t) = Ω(x, t) · n + κ [D(x, t) · n − (n · D(x, t) · n) n] ,
with the shape factor κ =

2

r −1
r2 +1

(6)

where r is the aspect ratio of the particle. The rate-of-rotation tensor is deﬁned by
Ω(x, t) =

1
∇u(x, t) − ∇uT (x, t) .
2

It holds
n · f(x, n, t) = 0 ∀x, n, t,

(7)

so that the force acts tangential to ∂B(0; 1) at each point and the Euclidean norm of n is conserved in time.
As the size of the particles is tiny, they are additionally subject to Brownian motion, which we model via a
random process. The orientation dynamics of a Brownian particle carried along a Lagrangian path L = {(t, x) ∈
[t0 , tmax ] × D; x = x(t)} is described via
˙ = f(x(t), n, t) + Γ(t),
n(t)
(8)
where the stochastic term Γ(t) is represented by a Wiener process [16]
√
2Dr
kB T
Γ(t) dt =
dW, Dr =
,
m
λ

(9)

in which m is the mass of the particle and Dr is the rotary diﬀusion coeﬃcient expressed by means of the Boltzmann
constant kB , absolute temperature T and the friction coeﬃcient λ of the particle [5]. Equation (8) can be rewritten in
integral form as
√
t
t
2Dr
dW.
(10)
f(x(τ), n, τ) dτ +
n(t) = n0 +
m
0
0
This formulation allows to simulate the particle orientation numerically via a Monte-Carlo type solver as presented in
[5].

E. Zharovsky,
Zharovsky and
B. Simeon
/ ProcediaComputer
Computer Science
Science 00
(2010) 1–9
E.
B. Simeon
/ Procedia
1 (2012)
791–799

794

4

Figure 2: A geodesic icosahedral type grid reﬁned uniformly from level 0 to level 2

Equation (10) is equivalent to a Fokker-Planck or Kolmogorov forward equation for the orientation probability
density function [16]
∂t Ψ(x, n, t) = −∇n · (Ψ(x, n, t)f(x, n, t)) + Dr Δn Ψ(x, n, t) ∀(x, t) ∈ L.

(11)

Here, ∇n and Δn denote the gradient and Laplace operator with respect to the variable n. We rely on this last formulation in this paper. It deﬁnes a convection-diﬀusion problem on the surface of the unit sphere. Usually, the convective
part dominates in real world applications, which leads to steep gradients in the solution and calls for adaptive algorithms.
Finally, as Ψ is the stochastic density of orientation probability, we remark that it features additionally the conservation property
∂B(0;1)

Ψ(x, n, t) dn = 1 ∀(x, t) ∈ D × [t0 , tmax ].

(12)

3. Numerical algorithm
In this section we introduce discretization schemes to solve the Fokker-Planck equation (11) directly. In a ﬁrst
step, an adequate discretization of the unit sphere ∂B(0; 1) is provided.
3.1. Geodesic grids
The need to discretize a spherical surface arises in other disciplines, too, such as e.g. meteorology. An extensive
overview over available schemes is presented in [8]. We stick to geodesic grids, as they are easy to construct and do
not suﬀer from degeneration or consistency problems, in contrast to other available grids. One of the ﬁrst applications
of geodesic grids was published by Baumgardner in 1985 [17], and over the last ten years the method became very
popular in meteorology, see, e.g., [11, 9].
In order to construct a geodesic grid, a Platonic solid is used, in our case the icosahedron. An initial triangulation
is obtained by projecting the Platonic solid onto its circumsphere. This initial discretization can then be reﬁned to
obtain a mesh with the desired resolution. In a recent work, we employed uniform reﬁnement [13] as shown in Fig. 2,
but since the solution features highly localized phenomena (Fig. 3), we consider here an Adaptive Mesh Reﬁnement
(AMR) strategy.
Note that Jeﬀrey’s equation (6) is symmetric to the origin in n, i.e.,
f(−n) = −Ω · n − κ(D · n − (n · D · n)n) = −f(n).

(13)

If we start from an initial distribution which is symmetric in n, it follows that
Ψ(x, −n, t) = Ψ(x, n, t) ∀(x, t) ∈ D × [t0 , tmax ].

(14)

E. Zharovsky
B. Simeon
/ Procedia
Computer
Science
00 (2010)
1–9
E. Zharovsky,
B. and
Simeon
/ Procedia
Computer
Science
1 (2012)
791–799

5
795

Figure 3: The orientation distribution function at Pe = 738 with r → ∞ in turbulent channel ﬂow at t = 18.24.

In fact, the symmetry of Ψ can be derived also from the physics of the problem and is therefore an important feature
[18]. The icosahedron is symmetric to its center of mass, which in our case is the origin. This allows us to employ
an initial triangulation consisting of ten instead of twenty triangles, and also with respect to the reﬁned grids we have
savings of 50 % by exploiting this symmetry, see [13].
3.2. Spatial approximation by the Finite Volume Method
As a suitable discretization technique for the unit sphere has been introduced, we now turn to the numerical
approximation. Our choice is the Finite Volume Method due to its robustness with respect to strong convection and
its conservation properties. In particular, it preserves (12) in the case of a consistent initial condition. As we deal with
a spherical surface, no boundary condition has to be satisﬁed, and the system we have to solve consists of (11) and
(12).
We employ an ansatz that is constant in each cell with the degrees of freedom located cell-centered at the intersection of the orthogonal bisectors of the edges of an element. The FVM is constructed from an integral formulation
of (11) for each triangle T i of the triangulation,
d
dt

Ti

Ψ dn = −

Ti

∇n · (Ψf) dn +Dr

convective part

Ti

∇n · ∇n Ψ dn .

(15)

diﬀusive part

For the convective ﬂuxes we employ a blending scheme where a Central Diﬀerence Scheme (CDS) is blended
with 5% of an Upwind Diﬀerence Scheme (UDS) for stability. For the diﬀusive ﬂuxes we employ a ﬁnite diﬀerence
reconstruction rule for the gradient, see [13] for more details. After applying the discretization in space we obtain a
semi-discrete ODE system
˙˜ t) = (−[βAUDS (x, t) + (1 − β)ACDS (x, t)] + D B)Ψ(x,
˜ t), ∀(x, t) ∈ L.
Ψ(x,
r

(16)

Here, AUDS (x, t) and ACDS (x, t) are the matrices from the discretization of the convective term with UDS and CDS,
respectively, β = 0.05 is the blending factor, B is the matrix corresponding to the discretization of the diﬀusive term,
˜ is the vector of coeﬃcients for the numerical approximation Ψ
˜ of the density Ψ.
and Ψ
3.3. Time discretizaiton
The evolution of (16) in time is computed by means of the explicit 3(2) Runge-Kutta pair of Bogacki and Shampine
[19], which is also the basis of Matlab’s ode23 integrator. We choose this method as it was the fastest in our tests with
a uniform grid [13]. The initial condition is a uniform distribution.
3.4. Adaptive Rothe method
For space-time adaptivity, we employ the adaptive Rothe method. It is a popular approach in space-time adaptivity
and advocated in, e.g., [20, 21]. For this method, the space adaptation loop is embedded in the time adaptation loop.
A rough sketch of the general algorithm reads
˜ + Δt)
1. evaluate the ODE solver and obtain a prediction Ψ(t

E. Zharovsky,
Zharovsky and
B. Simeon
/ ProcediaComputer
Computer Science
Science 00
(2010) 1–9
E.
B. Simeon
/ Procedia
1 (2012)
791–799

796

2.
3.
4.
5.

6

˜ + Δt)
estimate spatial error errn for Ψ(t
if errn > toln : determine new triangulation T and go to 1.
estimate time error errt
if errt > tolt : decrease time step size Δt, go to 1.
else: accept timestep, t ← t + Δt, go to 1.

The search of a new grid T is performed iteratively. In our case, we start from a coarse uniform grid, and the data
from the previous time step is kept at its resolution level until the new mesh is accepted. This guarantees that no
information of the previous timestep is lost due to coarsening.
For the estimation of the spatial error we employ two diﬀerent indicators. The ﬁrst one is a residual based error
estimate from [22] and related to discontinuous Galerkin methods. It reads
ζ(T )2 ,

ζ=
T ∈T

ζ(T ) =

1
2

hT
E∈ET

˜ E ||L2 (E)
||[Ψ]

(17)

˜ E stand for
where hT denotes the diameter and ET the edges belonging to the triangle T . Furthermore, the brackets [Ψ]
˜
the jump of Ψ across the edge E.
The second error indicator is based on an equal mass distribution. In other words, it imposes the requirement that
each element of the triangulation carries approximately the same mass.
For the estimation of the time error the embedded Runge-Kutta formula is evaluated, and the timestep is controlled
via a PI controller [23] as suggested in [21].
3.5. Data structures
To store the data of an adaptive grid, a specialized data structure is required that corresponds to the intended
reﬁnement strategy. Each triangle shall be reﬁned by simply connecting the midpoints of its edges. In one reﬁnement
step we thus obtain four triangles out of one. Therefore we employ quad trees as data structure for the elements while
the edges are stored in a linked list. These two data structures allow for an eﬃcient insertion and deletion of data,
which is a favorable feature for AMR applications. The mesh data is connected to the vector oriented integration
kernel of the application via a gather and scatter paradigm, see, e.g., [8] for further information. The mesh is stored
in an unstructured fashion such that the neighbor information is given explicitly. Moreover, the reﬁnement procedure
ensures that neighboring elements diﬀer by at most one with respect to the reﬁnement level.
4. Numerical tests
In this section we provide two test cases and results for the two diﬀerent spatial adaptation strategies. The ﬁrst
test case is the simple shear ﬂow. In this scenario the carrier ﬂuid ﬂow is subject to a constant shear rate and has a
linear ﬂow velocity proﬁle. The second test case is a Lagrangian path recorded by Manhart [5] in a Direct Numerical
Simulation (DNS) of a turbulent channel ﬂow at Reτ = 180.
For the residual based reﬁnement we utilize a tolerance of toln = 0.3 and for the mass based reﬁnement we allow
for each element a deviation of 30% from the mass average. In both cases the search for a new spatial grid T starts
from a uniform grid of level 2. For time integration standard tolerances are employed, namely ATOL = 1.0E-6 and
RTOL = 1.0E-3. We use the Intel Fortran compiler with no optimization ﬂags on a dual Opteron 2378 workstation
with 32 GB RAM and Ubuntu Linux 8.04 LTS 64Bit operating system. All codes are run non-parallel. For runtime
comparison we take our uniform non-adaptive algorithm with a uniform mesh of level 4 with 2560 cells and the largest
possible uniform timestep of Δt = 0.006.
4.1. Simple shear ﬂow
For the simple shear ﬂow with constant shear rate γ˙ the gradient of the ﬂow velocity needed in (6) is given via
⎛
⎞
⎜⎜⎜0 0 γ˙ ⎟⎟⎟
⎜⎜⎜
⎟
∇u = ⎜⎜0 0 0⎟⎟⎟⎟ .
(18)
⎝
⎠
0 0 0

7
797

E. Zharovsky
B. Simeon
/ Procedia
Computer
Science
00 (2010)
1–9
E. Zharovsky,
B. and
Simeon
/ Procedia
Computer
Science
1 (2012)
791–799
0.85

0.75

n1 n1

0.85

Rothe Pe=94
reference
Rothe Pe=374
reference
Rothe Pe=748
reference

0.8

Rothe Pe=94
reference
Rothe Pe=374
reference
Rothe Pe=748
reference

0.8
0.75

0.7

0.7

0.65

0.65

0.6

0.6

0.55

0.55

0.5

0.5

0.45

0.45

0.4

0.4

0.35

0.35

0.3

0.3
0

2

4

6

8

10

12

14

16

18

20

0

2

4

6

t

8

10

12

14

16

18

20

t

Figure 4: Second moment nn computed via adaptive Rothe method with residual (left) and mass based (right) reﬁnement in simple
shear ﬂow

As in [5], the aspect ratio of the particle is taken here as r = 5.0. The rotary diﬀusion coeﬃcient is expressed by
means of the P´eclet number Pe, with
γ˙
.
(19)
Pe =
Dr
The results of the tests can be found in Fig. 4. One observes that the mass based reﬁnement strategy gives results that
are closer to the reference solution. However, more overall reﬁnement cycles are needed and therefore the runtime is
increased (Tab. 1). For higher Pe, the solution obtained by both adaptive algorithms is not as smooth with respect to
time as the reference.
Pe
94
374
748

residual based
0.15s
0.45s
0.54s

mass based
0.44s
0.62s
0.58s

uniform
18.36s
18.36s
18.36s

Table 1: Runtimes for the simple shear test case

4.2. Lagrangian path
This test case is aimed at real world applications. As experimental data in this ﬁeld is hard to obtain, a DNS of
the carrier ﬂuid is performed in [5] and the velocity gradient along a Lagrangian path recorded. We utilize this data
as input to our algorithm in order to evaluate Jeﬀrey’s equation (6). In this test case we assume an inﬁnite aspect
ratio r, which leads to κ = 1. Note that for r → ∞ and Pe → ∞, the gradients in the solution Ψ with respect to n
become steeper, which leads to a high number of reﬁnement cycles. For strict tolerances the mesh is even reﬁned up
to degeneration such that the ﬁnite diﬀerences for the ﬂux evaluation consist only of numerical noise. To prevent the
mesh from degeneration we restricted the maximum reﬁnement level in our test runs to 5.
The results are shown in Fig. 5. It turns out that the adaptive approach is always close to the reference but
looks less visually pleasing due to a lack of smoothness in time. For this testcase the adaptive algorithm with mass
adaptation criterion outperforms the others with respect to runtime (Tab. 2). This is due to the fact that much less
elements are used and the time stepsize is in average a bit larger than that of the residual based algorithm.
5. Discussion of results, conclusions and outlook
For the simple test problem the adaptive algorithm performs much better than the uniform one. This test case
also shows the importance of the spatial reﬁnement criterion in order to obtain the quantity of interest with desired

8

E. Zharovsky,
Zharovsky and
B. Simeon
/ ProcediaComputer
Computer Science
Science 00
(2010) 1–9
E.
B. Simeon
/ Procedia
1 (2012)
791–799

798
1

1

Rothe Pe=94
reference
Rothe Pe=738
reference

0.9

Rothe Pe=98
reference
Rothe Pe=738
reference

0.9

0.8

0.7

0.7

0.6

0.6

0.5

0.5

0.4

0.4

n1 n1

0.8

0.3

0.3
0

2

4

6

8

10

12

14

16

18

20

0

2

4

6

t

8

10

12

14

16

18

20

t

Figure 5: Second moment nn computed via adaptive Rothe method with residual (left) and mass based (right) reﬁnement in
turbulent ﬂow

Pe
98
748

residual based
13.42s
58.41s

mass based
6.76s
14.05s

uniform
19.13s
19.13s

Table 2: Runtimes for the Lagrangian path

precision. The standard residual based error estimate, which has a stronger theoretical background and controls the L2
error of the solution, is not suitable for the given problem, while the more heuristic mass based reﬁnement strategy is
signiﬁcantly more eﬃcient. Since we are mainly interested in the second stochastic moment, a so-called goal-oriented
reﬁnement criterion as proposed in [24] represents an option for future investigations.
The real life problem reveals that the adaptive approach presented here still suﬀers from a lack of smoothness
in the time evolution. At the moment, it seems that this behavior is due to the strong jumps in the solution across
neighboring elements, which lead to an oscillatory behavior in the time stepping and are unavoidable due to the steep
gradients. We remark that much more sophisticated integration methods than the one used here are available, see, e.g.,
[25]. The insuﬃcient accuracy in the prediction of the dynamics of the adaptive solution indicates that a problemspeciﬁc approach could lead to a signiﬁcant improvement. The MUSCL scheme [26] combined with an appropriate
integration scheme might be an option in this context.
We will address both, the goal-oriented spatial reﬁnement and the compatible approximation scheme in space and
time in our future work. It has to be noted that the curse of dimensionality plays an important role, as for two-way
coupled simulations, a ﬁve-dimensional PDE with fast varying right-hand side has to be solved. For one time step of
the coupled system, the particle orientation statistics for millions of ensembles is required, each represented by the
solution of a Fokker-Planck equation on a Lagrangian path.
Acknowledgement
We are very grateful to M. Manhart and coworkers for valuable discussions and for supplying the DNS data.
Special thanks goes to J. Lang and his group, who provided deeper insight into the adaptive Rothe method during a
visit in October 2009. Finally, the authors gratefully acknowledge the support by the International Graduate School
of Science and Engineering (IGSSE), project 3-02 ”Particle Dynamics in Turbulent Flows”.
References
[1] E. D. Burger, W. R. Munk, H. A. Wahl, Flow increase in the Trans Alaska Pipeline through use of a polymer drag-reducing additive., J. Pet.
Tech. 34 (2) (1982) 377 – 386.

E. Zharovsky
B. Simeon
/ Procedia
Computer
Science
00 (2010)
1–9
E. Zharovsky,
B. and
Simeon
/ Procedia
Computer
Science
1 (2012)
791–799

9
799

[2] B. A. Toms, Some observations on the ﬂow of linear polymer solutions throug straight tubes at large Reynolds numbers, Proc. 1st Intern.
Congr. Rheol. II (1949) 135–141.
[3] J. Paschkewitz, Y. Dubief, C. Dimitropoulos, E. Shaqfeh, P. Moin, Numerical simulation of turbulent drag reduction using rigid ﬁbres, J.
Fluid Mech. 518 (2004) 281–317.
[4] J. Gillissen, Numerical simulation of ﬁbre-induced drag reduction in turbulent channel ﬂow, Ponsen and Looijen b.v., 2008.
[5] M. Manhart, Rheology of suspensions of rigid-rod like particles in turbulent channel ﬂow, J. Non-Newton. Fluid 112 (2003) 269–293.
[6] J. K. C. Suen, Y. L. Joo, R. C. Armstrong, Molecular orientation eﬀects in viscoelasticity, Annu. Rev. Fluid Mech. 34 (1949) 417–444.
[7] C. Johnson, Computational Turbulent Incompressible Flow, Springer-Verlag, New York, 2007.
[8] J. Behrens, Adaptive Atmospheric Modeling: Key Techniques in Grid Generation, Data Structures, and Numerical Operations with Applications, Springer-Verlag New York, Inc., Secaucus, NJ, USA, 2006.
[9] DWD, MPI-M, Icosahedral non-hydrostatic general circulation model, http://www.icon.enes.org/.
[10] D. A. Randall, T. D. Ringler, R. P. Heikes, P. Jones, J. Baumgardner, Climate modeling with spherical geodesic grids, Comput. Sci. Eng. 4 (5)
(2002) 32–41.
[11] R. L. Walko, R. Avissar, The Ocean-Land-Atmosphere Model (OLAM): a formulation for high resolution weather and climate simulation,
AGU Fall Meeting Abstracts.
[12] J. H. Ferziger, M. Peric, Computational Methods for Fluid Dynamics, 3rd Edition, Springer, Heidelberg, Berlin, New York, 2002.
[13] E. Zharovsky, A. Moosaie, A. L. Duc, M. Manhart, B. Simeon, On the numerical solution of a convection-diﬀusion equation for particle
orientation dynamics on geodesic grids, Tech. Rep. TUM-NUM40, Technische Universit¨at M¨unchen (2009).
[14] H. Brenner, Rheology of a dilute suspension of axisymmetric brownian particles, Int. J. Multiphas. Flow 1 (1974) 195–341.
[15] G. B. Jeﬀery, The motion of ellipsoidal particles immersed in a viscous ﬂuid, Proc. R. Soc. Lond. A 102 (1922) 161–179.
¨
[16] H. Ottinger,
Stochastic Processes in Polymeric Fluids, Springer-Verlag, Berlin, 1996.
[17] J. R. Baumgardner, P. O. Frederickson, Icosahedral discretization of the two-sphere, SIAM J. Numer. Anal. 22 (6) (1985) 1107–1115.
[18] S. G. Advani, C. L. T. III, The use of tensors to describe and predict ﬁber orientation in short ﬁber composites, J. Rheol. 31 (8) (1987)
751–784.
[19] P. Bogacki, L. F. Shampine, A 3(2) pair of Runge - Kutta formulas, Appl. Math. Lett. 2 (4) (1989) 321 – 325.
[20] F. A. Bornemann, An adaptive multilevel approach to parabolic equations, IMPACT 4 (1991) 279 – 317.
[21] J. Lang, Adaptive Multilevel Solution of Nonlinear Parabolic PDE systems, Springer, 2001.
[22] C. Carstensen, R. Lazarov, S. Tomov, Explicit and averaging a posteriori error estimates for adaptive ﬁnite volume methods, SIAM J. Numer.
Anal. 42 (2005) 2496 – 2521.
[23] K. Gustafsson, M. Lundh, G. S¨oderlind, A PI stepsize control for the numerical solution of ordinary diﬀerential equations, BIT 28 (1988)
270 – 287.
[24] R. Becker, B. Vexler, A posteriori error estimation for ﬁnite element discretizations of parameter identiﬁcation problems, Numer. Math. 96
(2004) 435–459.
[25] W. Hundsdorfer, J. Verwer, Numerical Solution of Time-Dependent Advection-Diﬀusion-Reaction Equations, Springer-Verlag, New York,
2003.
[26] B. van Leer, Towards the ultimative conservative diﬀerence scheme,V. A second order sequel to Godunov’s method, J. Comp. Phys. 32 (1979)
101–136.

