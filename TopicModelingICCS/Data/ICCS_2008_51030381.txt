Multi-Agent System for Collaboration in Hybrid Control
Dariusz Choiński, Witold Nocoń, and Mieczyslaw Metzger
Faculty of Automatic Control, Electronics and Computer Science,
Silesian University of Technology,
ul. Akademicka 16, 44-100 Gliwice, Poland
{dariusz.choinski,witold.nocon,mieczyslaw.metzger}@polsl.pl

Abstract. Research and design in novel branches of technology usually require
experts with different skills to cooperate on the same project. Participation of
external experts is crucial for the best possible results of any significant experimentations and research. Successive iterations in these tasks need flexible
validation. An ontology-based Multi-Agent System augmented with Web engineering is proposed for validation of hybrid control of biotechnological plant.
For acquiring knowledge through Web, the proposed system carries out reduction, selection and validation of data and of its structures and then reconfiguration of multi agent hybrid control system.
Keywords: MAS, ontology, hybrid control, validation, scalability and
reconfigurability.

1 Introduction
Research and design in novel branches of technology usually require experts with
different skills to cooperate on the same project. For example, designing state-of-theart biotechnological processes requires not only a deep biological and chemical understanding of the phenomena employed, but also an integration of the process with
control and computer systems that are used to monitor and supervise the process.
Hence, collaboration between biotechnological engineers or scientists and control or
computer engineers is crucial.
Design and development, as well as operation and control of modern industrial
processes are characterised by no common understanding and terminology related to
these tasks (see e.g. [1]). On the other hand, research and design quite often require
continuous iterations (changes) during experimentations or design phase. An additional, remote expert can be helpful in both design and operating control with an application of Internet (see e.g. [2]). In such activities, better understanding between
humans and information systems within the net is expected. These requirements can
be fulfilled using Semantic Web (see e.g. [3]). The fundamentals of such kind of understanding are based on ontologies, with appropriate rules (see e.g. [4]). Ontologies
are simple for discrete systems because of being based on discrete logic, however, for
continuous processes with infinite number of states when the problem is more difficult, creating ontology may be possible in some cases [4], [5]. Synthesis of ontology
for physical processes is similar to synthesis of phenomenological models when object-based description is used.
M. Bubak et al. (Eds.): ICCS 2008, Part III, LNCS 5103, pp. 381–388, 2008.
© Springer-Verlag Berlin Heidelberg 2008

382

D. Choiński, W. Nocoń, and M. Metzger

Using object-based description with decomposition to subsystems and functions, it
is possible to treat subsystems as hybrid automata [6], [7] and to apply flexible control
of hybrid systems [8], [9]. The major advantage of a hybrid system deals with its
particular proprieties when event-driven part (hybrid automaton subsystem) and timedriven part (continuous state equations subsystem) can be corrected separately without disturbing the whole system. Hybrid control facilitates recognition of discrete
states required by technology. If it is possible to define those states and technology
rules, than binding of those states by ontology is also possible. In this case a Multi
Agent System (MAS) iterative improvement of hybrid control is applicable (the MAS
notion is well-established in the scientific domain – see [10] as an example of general
description and [11] of an industrial applications). In this paper such kind of hybrid
control for a biotechnological process is proposed, developed and evaluated.
The proposed hybrid control system compiles techniques discussed above. Description of industrial equipment and instrumentation as well as automatic control
deals with hierarchical description – even for small plants it has a very complicated
structure which is difficult to survey. On the other hand, browsing of database is
based on relation models. That is why, in most cases, these tasks are incoherent. Our
contribution includes: a) a mechanism that reflects dynamical hierarchical structure in
a relational database, b) possibility for browsing the process data by the remote expert, with the hierarchical structure of the process reproduced from the relational
database. It can be also noticed, that for acquiring knowledge through Web, the proposed system carries out reduction, selection and validation of data and its structures.
On the basis of such information, it is possible to take appropriate operating decisions
(for example choosing a sequence transition to a new process state). Such operations
should be treated as a particular kind of scalability and reconfigurability of a controlled process under consideration because, according to external demands, the process can change its structure, number of states and configuration of agents.
The paper is organised as follows. Sect. 2 provides a brief description of a multi
agent system used for control. Sect. 3 provides formalisms for ontology-based MAS.
The proposed implementation is presented in sect. 4. Concluding remarks are presented in sect. 5.

2 Hybrid-Hierarchical Control of Biotechnological Process
The biotechnological pilot-plant designed and operated at the Faculty of Automatic
Control, Electronics and Computer Science serves as a platform for investigations
regarding activated sludge process in aquatic environment. Depending on the needs of
the researching team, the structure of the biological process involved may be changed.
For example, the plant may be operated as a continuous or sequencing activated
sludge process, the later involving cyclic utilization of the biological reactor for reaction and settling phases, the former involving continuous sedimentation of activated
sludge in the settler with recycle of the thickened sludge back to the reactor.
Those possibilities of different modes of process operation make it necessary
to automatically move the process state into a different region. Therefore, the considered object model is described as a state machine augmented with differential equations, namely as a hybrid automaton. Because of the complexity of a biotechnological

Multi-Agent System for Collaboration in Hybrid Control

383

process model, it is convenient to split the model into smaller operating entities that
are associated with a particular, locally valid subsystem.
The necessity of state transitions, partitioning of the process model and the complexity of the whole controlled process makes the application of MAS for control
purposes justified. Fig. 1 illustrates this problem, where Ω denotes a set of objects
states. For example, the object state may be changed from continuous control (Ωi) to
discrete control (Ωi+1) for changing biomass concentration and identification of OTR
(oxygen transfer rate) and return to continuous control (Ωi+2) of object with additional
function based on calculated OTR coefficient for better dissolved oxygen control.

Object
state
Ω i+1
Supervisory
Agent

Control Agent

Cooperation in
hierarchical system
based on OPC and
Self-organising
Database
Object
state
Ωi

Object
state
Ω i+2

Expert Agent

Fig. 1. An example [2] of object states transition in hybrid hierarchical and multi-agent control
system

Structure of the control system is hierarchical, and consists of the following hierarchically dependent agents:
• Control agent – implementing all the closed-loop and open-loop control algorithms, hence this part of the control system is time-driven, e.g., the measurements
are read and controls are transmitted to the plant in fixed time intervals regardless
of the process behaviour.
• Supervisory agent – responsible for general supervision of the process performance
and basic automatic compensation against process fluctuations
• Expert agent – provides remote expert knowledge in case of some off-nominal
situations than can not be dealt with by the supervisory or control agent.
Because the presented control system has been designed hierarchically and the control scheme is hybrid in nature, the whole system may be considered as agent-ready,
that is, application of MAS should not require any additional adaptation of the system.
This structure will also enable the control system to be easily adapted in case of the
system’s expansions, modification and scaling.

384

D. Choiński, W. Nocoń, and M. Metzger

3 Design of a Multi-Agent Control System
Formalism of the technological projects, the DCS (Distributed Control System) architecture and software is based on, is commonly realized by CAD software compatible
with the IEC 61346 standard. This standard specifies rules for structuring and reference designations. The structure defines dependencies and relations between objects
that are considered in the process of designing, construction, realising, operation,
exploitation and disposal. A set of mutually connected objects is a system. Information about objects and about the system may be chosen based on different aspects.
Therefore, the structure of the system and of the particular objects may be described
in many different ways. The standard provides three examples of structures: functionoriented, location-oriented and product-oriented. The particular structures are organized hierarchically and should specify the information regarding the system, content
of the particular documents and composition of reference designations.
The functions hierarchy tree enables engineers of different specializations to work
on the project using a consistent naming convention, hence reducing organizational
effort. In addition, the CAD software used for the reference designations creation,
enables automatic update of this functions hierarchy tree in case of the system’s expansions, modification and scaling. The presented hierarchy is also used to specify the
OPC structure of the information needed for the implementation of control algorithms. OPC technology is selected because it is versatile and commonly used in
process automation systems. Based on component ontology, different subsystems of
the automated process are distinguished.
Apart from the hierarchy of functions, synthesis of control algorithms for the
automated process requires additional information (Fig. 2). First, knowledge about the
process behaviour, both static and dynamic must be considered in order for a correct
control algorithm to be synthesised. Such knowledge is usually represented by phenomenological models existing as a set of ordinary or partial differential equations
extended with conditions for changing the process state by certain transitions. Hence,
as was discussed in sect. 2, the system is modelled as a hybrid automaton. The taxonomy of functions based on phenomenological models, together with the particular
component ontology, serves as a basis for the needed functions to be implemented.
Additionally, knowledge about the process and control equipment boundary conditions and constraints must be taken into account. Control algorithms must not be
created regardless of those constraints and conditions. Therefore, once a particular
subsystem is distinguished, a deterministic finite state automaton is created that takes
the boundary conditions and constraints into account.
Both the taxonomy-based functions and the knowledge about constraints serves as
a basis for a hybrid control system realization. One should note, that because the hierarchy of functions based on the IEC 61346 standard [12] is automatically updated in
case of system expansions or modifications (realized by the CAD software), update of
the control system software and/or the control system architecture is facilitated. Easy
scaling of the control system is therefore enabled.

Multi-Agent System for Collaboration in Hybrid Control
Fenomenological
models

385

Boundary
conditions

Process under design
IEC 61346

Subset of function
hierarchy

Set of the reference designations
Subset of location
Subset of product
hierarchy
hierarchy

process
power supply
Component
ontology

control

taxonomy

Subsystem
Deterministic finite
state automaton

Hybrid system

Functions

Control
System
Software

Control
System
Architecture
OPC

Self-orginizing Relational Data Base
WEB
XML

Corrector

Mediator
taxonomy
Observed
functions
Corrected
functions

Component
ontology
Observed finite
states
Corrected state
transitions

Fig. 2. System architecture

4 Implementation
Implementation of control system architecture, algorithms and software for a biotechnological process requires collaboration of different specialists. Once a preliminary
control system architecture is created, distant experts my be employed to correct this
system in a proper way. Fig. 3 presents a general idea of a remote corrector taking
part in designing and testing of the control system.
The Corrector application enables reading of the hierarchical structure of items in
database, selection of those that are interesting for the Corrector, monitoring of current and historical data and the realization of control algorithms that utilize this data.
Mechanisms for establishing connection to the database, sending the defined user
configuration and sending values of items with write-to-OPC-server request into the

386

D. Choiński, W. Nocoń, and M. Metzger

Technology
rules

Engineering
constraints

Corrector

Web

Engineering

Component
ontology

Subsystems

Taxonomy

Functions
Expert
validation

System
architecture

System software

States

Fig. 3. Corrector realization in the Web environment

database, are also implemented. Visualization and coupling of dynamically loaded
clips to the measurements is realized as well.
The most crucial element of the Corrector is a Mediator [13] which, by gathering
knowledge about the plant and by gathering data, ensures limitation of basic errors
resulting from a bad understanding of structure and states of the system (refer to Fig. 3).
Subset of function
hierarchy

Boundary conditions

Ω

===Level sequences

Continuous state variables

===Level function
===Hydraulic retention function
===Dilution rate function

Φu

uncontrollable events for transiction

Φc

controllable events for transiction

===Solid retention function

f

Settler retetion
fenomenological
model

S

f

Settling
fenomenological
model
Fenomenological model
class

Subsystem
Reactor
retention
f

f

Subsystem Settler retention

Fig. 4. Taxonomy for model and functions

Multi-Agent System for Collaboration in Hybrid Control

387

The taxonomy is a set of tools that assure encapsulation and polymorphism of phenomenological models (Fig. 4). Encapsulation should ensure division of model properties into the private part that is enclosed in the subsystem parameter range, and into
the public part that defines interactions between other subsystems. At the same time,
formalized methods exist that enable modifications of model properties. Consecutive
derived classes correspond to models. Methods and properties of the base class are
virtual. Private properties are only modified by methods. The base class, designed as
an abstract class, will enable a polymorphism-based design of controls utilizing models represented by objects. This enables the assignment of the base class address to the
derived model of a particular object.
In order to avoid the need for creation of a virtual constructor of the derived class,
the base class possesses a cloning method that clones the derived-class object. The
abstract base class may for example represent a class of models that are based on the
mass balance and reaction rate. The parameters of this type of models are encapsulated so that only the allowed procedures (methods) may change those parameters.
Every consecutive type of models (a class) is created using the inheritance mechanism, hence by creating child classes. On the other hand, an object of a particular
derived-class is created as a pointer (an address) to the base class (polymorphism).
Because of that, an extended class of models may by used in the distributed hierarchical system. The major reason for such description is the possibility of utilizing programming tools that enable creation of distributed, object-oriented applications, for
example the EN 61499 [14] compatible CAD software.

5 Concluding Remarks
The biotechnological pilot-plant designed and operated continuously for three years at
the Faculty of Automatic Control, Electronics and Computer Science serves as a platform for investigations regarding activated sludge processes in aquatic environment.
Depending on the particular set of control algorithms applied, the structure of the
biological process involved may be changed. For example, the plant may be operated
as a continuous or sequencing activated sludge process, the later involving cyclic
utilization of the biological reactor for reaction and settling phases, the former involving continuous sedimentation of activated sludge in the settler with recycle of the
thickened sludge back to the reactor.
Such kind of operations are difficult tasks. Hence, a participation of external experts in process operations as well as in equipment corrections is crucial for successful maintenance of the biological processes and for the process improvement. The
proposed system evidently enables these tasks. The proposed system has been beneficially functioning for two years. Therefore, future work will include adaptation of this
system to other types of continuous processes.
Acknowledgements. This work was supported by the Polish Ministry of Science and
Higher Education, using funds for 2006-2008, under grant no. N514 006 31/1739.

388

D. Choiński, W. Nocoń, and M. Metzger

References
1. Marquardt, W., Nagl, M.: Workflow and information centered support of design processes—the IMPROVE perspective. Computers and Chemical Engineering 29, 65–82 (2004)
2. Choiński, D., Nocoń, W., Metzger, M.: Multi-Agent System for Hierarchical Control with
Selforganising Database. In: Nguyen, N.T., Grzech, A., Howlett, R.J., Jain, L.C. (eds.)
KES-AMSTA 2007. LNCS (LNAI), vol. 4496, pp. 655–664. Springer, Heidelberg (2007)
3. Berners-Lee, T., Hendler, J.: Publishing on the semantic web - The coming Internet revolution will profoundly affect scientific information. Nature 410(6832), 1023–1024 (2001)
4. Borst, P., Akkermans, H., Top, J.: Engineering ontologies. Int. J. Human – Computer
Studies 46, 365–406 (1997)
5. Morbach, J., Yang1, A., Marquardt, W.: OntoCAPE—A large-scale ontology for chemical
process engineering. Engineering Applications of Artificial Intelligence 20, 147–161 (2007)
6. Leduc, R.J., Lawford, M., Dai, P.: Hierarchical Interface-Based Supervisory Control of a
Flexible Manufacturing System. IEEE Transactions on Control Systems Technology 14(4), 654–668 (2006)
7. Lynch, N., Segala, R., Vaandrager, F.: Hybrid I/O Automata. Information and Computation 185, 105–157 (2003)
8. Cassandras, C.G., Pepyne, D.L., Wardi, Y.: Optimal control of a class of hybrid systems.
IEEE Transactions on Automatic Control 46(3), 398–415 (2001)
9. Schaft van der, A.J., Schumacher, J.M.: Compositionality issues in discrete, continuous,
and hybrid systems. International Journal of Robust and Nonlinear Control 11(5), 399–539
(2001)
10. Wooldridge, M., Jennings, N.R.: Intelligent agents: theory and practice. The Knowledge
Engineering Practice 10(2), 115–152 (1995)
11. Marik, V., McFarlane, D.: Industrial Adoption of Agent-Based Technologies. IEEE Intelligent Systems, 27–35 (January/February 2005)
12. International Electrical Commision: IEC 61346-1, Industrial Systems, installations and
equipment and industrial products - Structuring principles and reference designations, 1st
edn. (1996)
13. Wiederhold, G.: Mediators in the Architecture of Future Information Systems. IEEE Computer 25, 38–49 (1992)
14. IEC Technical Committee TC65/WG6, IEC61499 Industrial Process Measurement and
Control – Specification IEC Draft (2000)
15. Kraska, J.: An Internet-Based Mobile Control Algorithms. Master Thesis, Institute of
Automatic Control, Silesian University of Technology (2006) (in polish)

