Integration of Ab Initio Nuclear Physics
Calculations with Optimization Techniques
Masha Sosonkina1 , Anurag Sharda1 , Alina Negoita2 , and James P. Vary2
1

Ames Laboratory/DOE, Iowa State University, Ames, IA 50011, USA
{masha,anurag}@scl.ameslab.gov
2
Physics Department, Iowa State University, Ames, IA 50011, USA
{alina,jvary}@iastate.edu

Abstract. Optimization techniques are ﬁnding their inroads into the
ﬁeld of nuclear physics calculations where the objective functions
are very complex and computationally intensive. A vast space of parameters needs searching to obtain a good match between theoretical
(computed) and experimental observables, such as energy levels and spectra. In this paper, we propose a design integrating the ab initio nuclear
physics code MFDn and the VTDIRECT95 code for derivative-free optimization. We experiment with the initial implementation of the design
showing good matches for several single-nucleus cases. For the parallel
MFDn code, we determine appropriate processor numbers to execute
eﬃciently a multiple-nuclei parameter search.
Keywords: No Core Shell Model, MFDn, Derivative-free Optimization,
VTDIRECT95.

1

Motivation

Unlike electrons in the atom the interaction between nucleons is not known
precisely and is complicated. The shell model is the fundamental tool to study
the structure of nuclei. The basic idea is that the nucleons move in an average potential generated by the mutual interactions of the nucleons. The strong
Nucleon-Nucleon (NN) interaction as well as 3-nucleon (NNN) interactions generate the potential that describes the nucleon energy levels in the nucleus. In
particular, NN and NNN interactions tuned to ﬁt light nuclei are used in nuclear
astrophysics for solar models, supernova modeling, and Big Bang nucleosynthesis. The techniques for solving these problems also ﬁnd applications in the ﬁeld
of quantum chemistry, condensed matter physics, atomic, nuclear, and particle
physics.
Until recently, the No Core Shell Model [1,2] has been limited to nuclei up to
atomic mass A of 16. Work is underway to extend this method to heavier nuclei
[3]. The eﬀective Hamiltonian operator derived from CD-Bonn interaction [4]
gives a poor description of nuclei with atomic mass near 48. Figure 1 describes
the matches between the theoretical and experimentally obtained energy levels
for 49 Sc, where the initial version of the theory is given in the rightmost column.
M. Bubak et al. (Eds.): ICCS 2008, Part I, LNCS 5101, pp. 833–842, 2008.
c Springer-Verlag Berlin Heidelberg 2008

834

M. Sosonkina et al.

A problem with the existing Hamiltonian is that the computed spectra is too
compressed compared with the experimental spectra. The addition of the three
terms — isospin-dependent V0 , central V1 , and tensor-interaction Vtens — results in a reasonable low lying spectra for the nuclei involved in the double-beta
decay of 48 Ca. One of the physics goals is to test whether the same modiﬁed
Hamiltonian used for the isotopes of the nuclei with atomic mass of 48 is able
to describe other heavy nuclei. These three terms and possibly other (up to 20)
parameters need to be searched to obtain their best match to the experimental
values (see Fig. 1, for example). To ﬁnd this match according to some criteria,
it is required to evaluate energies at many points in a parameter search space.
In particular, a criterion, called χ2 , may be calculated that quantiﬁes the match
using weights (see Sect. 3.2). This process may be automated by taking advantage of optimization techniques which will generate the points at which χ2
may be evaluated. Note that, since derivatives do not come into the picture for
complex nuclear physics calculations on which χ2 depends, the derivative-free
optimization is considered. As a trade-oﬀ, it is typically required a large number
of function evaluations even to ﬁnd a local minimum. The time taken by such an
optimization algorithm is directly proportional to the cost of the objective function evaluation. Thus, parallel implementations of both the function evaluation
and optimization algorithm may be beneﬁcial.
The remainder of the paper is organized as follows. In Sect. 2, we give an
overview of two parallel software packages under consideration: Many Fermion
Dynamics nuclear (MFDn) and the optimization algorithm VTDIRECT95. In
5.6

+

3/27/29/2
11/2
5/2

-

1/2

)

(5/2

4.8

-

(15/2 )
-

(11/2 )

Excitation Energy (MeV)

49

Sc
-

7/2

-

7/2
11/2
13/2

-

4

box column

-

-

5/2

5/2
(9/2 )
+
1/2

-

5/2
1/2
3/2

-

-

3.2

9/2

(9/2 )
7/2
+
+
5/2 3/2

-

5/2

-

-

11/2

7/2

-

9/2

-

2.4

3/2
+
+
(5/2 3/2 )

F

-

7/2
-

5/2

-

9/2

+

1.6

3/2

-

3/2

-

+

15/2

1/2

-

11/2

-

1/2

0.8

-

7/2

convex hull

-

5/2

0

-

-

3/2

7/2

Exp

CD-Bonn
+ 3 terms

CD-Bonn

Fig. 1. Matching of experimental (Exp)
and theoretical energy levels of 49 Sc using CD-Bonn potential in its initial version
(CD-Bonn) and new with searched terms
(CD-Bonn+3terms). Each energy level is annotated with its spin value.

D

Fig. 2. Example of the scatter plot of
boxes. The F -axis is function values, and
the D-axis is box diameters.

Integration of Ab Initio Nuclear Physics Calculations

835

Sect. 3, we ﬁrst present a design to make the MFDn code and optimization
algorithm work in concert. Then, we describe our initial implementation. Sect. 4
presents the computation experiments and analyzes them with respect to nuclear
physics objectives. Sect. 5 concludes.

2

Overview of Nuclear Physics and Optimization
Packages

Many Fermion Dynamics nuclear (MFDn) [5] parallel code is used for large-scale
nuclear structure calculations in the No Core Shell Model (NCSM) formalism
[1,2], which has been shown to be successful for up to 16-nucleon problems on
present day computational resources. MFDn code is charged to compute a few
lowest (≈15) converged solutions, called wave functions, to the many-nucleon
Schr¨
odinger equation:
H |φ = E |φ .
(1)
Then other properties, called observables, are formed from the calculated wave
functions. The matrix H in (1) is the Hamiltonian operator, which is typically
solved using Lanczos diagonalization since H is symmetric and sparse. However,
the Lanczos iterative process may be very expensive due to huge dimensionality
of H with many oﬀ-diagonal elements. The number of Lanczos iterations also increases signiﬁcantly for the energy levels beyond the ground state. For example,
for the 16 O nucleus in the 6hω basis space, the ground-state energy level requires
only 35 Lanczos iterations, while 15 excited states need at least 200 Lanczos iterations to converge. Note that, in this case, the constructed Hamiltonian H has
the dimension of 26,483,625. MFDn constructs the m-scheme basis space, evaluates the Hamiltonian matrix elements in this basis using eﬃcient algorithms,
diagonalizes the Hamiltonian to obtain the lowest eigenvectors and eigenvalues,
then post-processes the wave functions to obtain a suite of observables and to
compare them with experimental values.
VTDIRECT95 [6] is a Fortran95 suite of parallel codes implementing the
derivative-free optimization algorithm DIRECT [7] that takes a set of problemand algorithm-dependent input parameters and ﬁnds the global minimum of an
objective function f inside the feasible set D. Each iteration of DIRECT consists
of the following steps.
1. INITIALIZATION. Normalize the feasible set D to be the unit hypercube.
Sample the center point ci of this hypercube and evaluate f (ci ). Initialize
fmin = f (ci ), evaluation counter m = 1, and iteration counter t = 0.
2. SELECTION. Identify the set S of “potentially optimal” boxes that are
subregions of D. A box is potentially optimal if, for some Lipschitz constant,
the function value within the box is potentially smaller than that in any other
box (a formal deﬁnition with parameter is given by [8]).
3. SAMPLING. For any box j ∈ S, identify the set I of dimensions with the
maximum side length. Let δ equal one-third of this maximum side length.
Sample the function at the points c ± δei for all i ∈ I, where c is the center
of the box and ei is the ith unit vector.

836

M. Sosonkina et al.

4. DIVISION. Divide the box j containing c into thirds along the dimensions
in I, starting with the dimension with the lowest value of wi = min{f (c +
δei ), f (c−δei )}, and continuing to the dimension with the highest wi . Update
fmin and m.
5. ITERATION. Set S = S − {j}. If S = ∅ go to 3.
6. TERMINATION. Set t = t + 1. If iteration limit or evaluation limit has been
reached, stop. Otherwise, go to 2.
Initially, only one box exists in the system. As the search progresses, more boxes
are generated, illustrated by the scatter plot shown in Fig. 2, where each circle
represents a box. The sizes of boxes increase along the D-axis (diameter) and
the function values at box centers increase along the F -axis (function). All the
boxes with the same diameter belong to a “box column”. Reference [8] proves
that all potentially optimal boxes in S are on the lower right convex hull of the
scatter plot in Fig. 2. To produce more tasks in parallel, new points are sampled
around all boxes in S along their longest dimensions during SAMPLING. This
modiﬁcation also removes the step ITERATION, thus simplifying the loop. In
the DIVISION step, multiple new boxes are generated for each potentially optimal box. The multiple function evaluation tasks at each iteration give rise to
a natural functional parallelism, which is especially beneﬁcial for expensive objective functions. The parallel implementation distributes the work to multiple
masters in the SELECTION phase. The functions are then evaluated by the pool
of workers to accomplish SAMPLING. VTDIRECT95 also supports user-level
checkpointing method to restart function evaluations through log ﬁles. Several
other options are provided by the optimization algorithm to improve the performance on large-scale parallel systems.

3

Design of Integrated System

In nuclear structure calculations, the computed and experimental results are
matched for single as well as multiple nuclei using the χ2 function. Thus, a
general case of multiple nuclei is considered in the design. At the initialization,
the search algorithm divides the search domain into multiple sub-domains and
assigns each sub-domain a set of masters (SM). Each sub-domain master is responsible for generation of evaluation points within its own sub-domain. Figure 3
shows a diagram for the case of multiple nuclei, N1, N2, and N3, with one MFDn
execution per nuclei. The overall hierarchy consists of three tiers. The ﬁrst two
tiers correspond to the set of processors used by VTDIRECT95 while the last
tier corresponds to the set of processors used by MFDn. It is denoted as MFDn
pool and included into a dash-lined oval. The evaluation points generated by
SM are then handed to the workers W assigned to VTDIRECT95 (represented as
shaded squares in Fig. 3). These workers act as connectors between the VTDIRECT95 and the MFDn. Each worker W pre-processes the evaluation point and
then delivers the pre-processed data to MFDn pool. The number of processing
elements (PE) required by MFDn typically depends on the size of the Hamiltonian matrix and the hardware characteristics. So another functionality of a W

Integration of Ab Initio Nuclear Physics Calculations

SM1

SM2

W1

SMm

Wn

W2

N1

837

N3

N1

N3

N2

N2

MFDn pool

Fig. 3. Design layout for the integration system

worker is to assemble from MFDn pool the needed number of PEs for an MFDn
run. Once an instance of MFDn completes, its output is communicated back
to the associated W worker, which is responsible for computing the χ2 function
aggregating the MFDn outputs for all the nuclei and for delivering it to the
proper SM.
3.1

Enabling Seamless Integration

The goal of this design is to treat both the VTDIRECT95 and the MFDn codes as
“black-box” components and provide an infrastructure to integrate them. Here,
we detail the implementation of the design. The MFDn code requires an input
ﬁle which contains the set of parameters for every MFDn run. The output of
the MFDn code is a text ﬁle including theoretical observables, such as excitation
energies for a given nucleus for the desired number of states. The optimization
algorithm produces points in a search space in each iteration and then accepts
the function evaluation at those points. Thus, both MFDn and VTDIRECT95
have well-deﬁned input and output interfaces. Consider the following external
additions necessary to interface MFDn and VTDIRECT95:
1. Input Modiﬁer (IM) inserts the points generated by VTDIRECT95 into
an input ﬁle for MFDn.
2. Wait (W) waits for a completion signal from the MFDn code. The Wait
stub may also gather the runtime performance information from MFDn.
3. Output Modiﬁer (OM) post-processes the MFDn output ﬁle and creates
an input for the χ2 function.
For a single iteration of VTDIRECT95, Fig. 4 shows a workﬂow between the
VTDIRECT95 and MFDn codes. The main goal of the described additions is
to provide interfaces and placeholders for pre- and post-processing. Thus, we
denote them as stubs in Fig. 4. VTDIRECT95 generates an evaluation point
which is inserted into MFDn input ﬁle through the IM stub. MFDn produces

838

M. Sosonkina et al.

then a set of values to be captured by the OM stub and provided to the χ2
evaluator, which in turn returns the objective function value to VTDIRECT95.
All the stubs related to the MFDn execution are grouped in a single box
together with MFDn in Fig. 4. The χ2 evaluator is a generic module the implementation of which may change depending on the application scientist’s goals.
Similarly, VTDIRECT95 is depicted as separate box since it is a general-purpose
optimization code. The integrated workﬂow, due to its ﬂexibility, allows to
change the objective function construction and the search algorithm without
aﬀecting the overall organization.

VTDIRECT95
IM Stub

MFD

W Stub
OM Stub

Χ2 Evaluator

Fig. 4. Workﬂow diagram for the MFDn and VTDIRECT95

3.2

Construction of the χ2 Function

The χ2 is constructed using a theory ﬁle, an experimental ﬁle, and the base
energy value of the given nucleus. The theory ﬁle is an output from the MFDn
code which contains calculated observables. The experimental ﬁle has the energy
levels as found experimentally by diﬀerent national scientiﬁc organizations [9,10].
In addition to the energy values, each energy level is associated with the spin j of
the protons/neutrons. There are many options in construction of χ2 . A particular
choice depends on such parameters as the quality of the experimental data and
the questions nuclear physicists want to answer comparing the theoretical and
experimental energy levels. As an example consider the following χ2 deﬁnition:
˜it (v)
Eie (v) − E

χ2 (v) =

2

× σi2e ,

(2)

1≤it ≤15
1≤ie ≤k

˜ are the absolute experimental and theoretical
where v = (V0 , V1 , Vtens ) and E
energies, respectively; ie and it are the indices of the corresponding matched
energy levels (one ie paired with one it ), i.e., those levels that have the same
spin j; and k is the maximum desired number of matches. Each experimental
energy level le is assigned the weight σle . This weight is inversely proportional to
the distance of that energy level from the ground energy level. In (2), diﬀerent
weight schemes were considered, such as, for every le , σle = 1/le or σle = 1/2le .

Integration of Ab Initio Nuclear Physics Calculations

4

839

Experiments

Computing platforms at the National Energy Research Scientiﬁc Computing
Center (NERSC) at the Lawrence Berkeley National Laboratory served as
testbed for the development and testing. The results presented here were
obtained on the NERSC IBM p575 POWER 5 system, named Bassi. It is a
distributed memory computer with 888 processors (comprising 111 nodes and
sharing 32 GBytes of memory) used for scientiﬁc applications. Each Bassi processor has a theoretical peak performance of 7.6 GFlops, and the nodes are
interconnected by the IBM “Federation” HPS switch. An implementation of the
proposed design for single and multiple nuclei has been developed and tested. It
integrates the serial VTDIRECT95 and parallel MFDn codes, while the usage
of parallel VTDIRECT95 has been left as a future work.
The following three nuclei have been considered: 47 K, 48 Ca, and 49 Ca. The
Hamiltonian matrices are sparse and their sizes are 136231, 12000, and 15666,
respectively, in the lowest available model space. The MFDn execution time
depends heavily on the Hamiltonian size. Also, the complexity (“shape”) of the
objective function drives the time required by the optimization algorithm to
ﬁnd the minimum. Figure 5(a) shows the number of evaluations required per
VTDIRECT95 iteration as the number of iterations grows for a sample nucleus.
For the multiple nuclei ﬁt, the runtime is guided by the runtime of the heaviest
nucleus since the evaluations for all the nuclei are needed to construct the χ2 in
this case. Therefore, it is desirable to adjust the number of processors allocated to
a particular nucleus based on its computational cost relative to the other nuclei in
the set. In particular, for our example, 47 K has the largest Hamiltonian matrix,
so executing it on the largest subset of processors makes sense. Figure 5(b)
depicts the case when all the three nuclei are evaluated once with three diﬀerent
sets of processor numbers (shown in the x-axis). The parallel time to compute all
three nuclei indeed decreases as the number of processors is increased compared
with the base case of using small equal number of processor for each nucleus.
When about twice as many (15) processors are assigned to the calculation of each
nucleus, the timings for the smaller Hamiltonians decrease by about half. The
runtime for 47 K, however, decreases only slightly. By augmenting the number
of processors to 45 for 47 K, the execution time is decreased dramatically, while
for the smallest Hamiltonian of 48 Ca, the time has actually increased with the
increase in the number of processors to 21. The latter indicates that the parallel
overhead starts to dominate the overall execution time. In general, besides the
Hamiltonian matrix size, other factors such as communication overhead and
hardware characteristics, may aﬀect the number of processors used to calculate
eﬃciently a particular nucleus.
The optimization of the parameters for 48 Ca produced the results (Fig. 6(a))
matching theoretical observables correctly to their counterparts in the experimental data ﬁle. First six states have been matched correctly with their spins
and the diﬀerence in energy levels from theoretical observables and experimental
data is less than 0.001 MeV. The second nucleus considered is 49 Ca. The groundstate level in the theoretical observable was matched within the diﬀerence of

840

M. Sosonkina et al.

(a) Evaluations per iteration for

49

(b) Execution time of 1 evaluation of VTDIRECT95 for 47 K, 48 Ca, and 49 Ca on
diﬀerent numbers of processors on Bassi.

Ca.

Fig. 5. Execution of MFDn for a single- and multiple-nuclei cases

0.02 MeV of the experimental ground state energy value (Fig. 6(b)). Higher energy levels in the theoretical observables remained unmatched to counterparts
in the experimental data. A likely reason is that some of the energy levels in
the experimental data have uncertain spin levels. The ﬁndings for 49 Ca are important from the physics point of view since they give new directions for ﬁtting
the nuclei with a similar mass starting with obtained set of parameters. Similar
arguments may be used to explain the unmatched energy levels in 47 K.
Checkpointing is a valuable feature of VTDIRECT95. Supercomputers with
batch scheduling typically have an upper bound on the time any job is allowed to
execute. For example, the maximum time permitted on NERSC supercomputers

1 ,2,3,4
3(1)

Excitation Energy (MeV)

(-)

5

4

4
3,4,5
1
(+)
3
3

5

2+
4+
0+
2+
2+
5

-

+

3
+
4
+
0
2

+

3

48

2

Ca

1

0

0

6

+

+

+

0

CD-Bonn
+ 3 terms

Experiment

(a)

48

Ca.

+

5

Excitation Energy (MeV)

-

6

4

-

-

1/2 +
9/2
1/2
+
9/2 +
(5/2+ )
5/21/2 3/2+
7/2 5/2-

9/2
11/2
7/2
1/2
3/2
7/211/2
9/2
3/2
5/2
7/2
5/2

-

(1/2 ,3/2 )
-

3

5/2 +
(9/2)

2

1/2

3/2

49

1

0

3/2

-

-

Ca

-

CD-Bonn
+ 3 terms

Experiment

(b)

49

Ca.

Fig. 6. Matching of experimental and theoretical energy levels

7/2

-

3/2

-

Integration of Ab Initio Nuclear Physics Calculations

841

is only 48 hours, which is surely not enough to ﬁnd the global or even local
minimum for such an expensive function evaluation as described in this paper.
Hence, we have utilized the checkpointing feature as a routine procedure to
restart the integrated code for the next maximum time allowed by the queuing
system.

5

Summary and Future Work

We have proposed a design for the integration of the MFDn and VTDIRECT95
parallel codes. The integration uses the master-worker paradigm of the VTDIRECT95 code and produces a three-tier scheme. Our contribution is to show
how an expensive multiprocessor function evaluation may ﬁt into this scheme.
In the paper, we have shown an implementation of the proposed design for the
case of sequential VTDIRECT95, which produces one point at a time. In this
situation, we have studied various deﬁnitions of the objective function (χ2 ) and
obtained good matches between the theoretical and experimental energy levels
for 48 Ca and the ground-state energy level for 49 Ca. We have also investigated
the eﬃcient executions of MFDn when the results from multiple nuclei are to
be considered simultaneously by VTDIRECT95. We have found that assigning
diﬀerent numbers of processors to diﬀerent MFDn executions, typically in accordance with the Hamiltonian matrix size, reduces the overall time for a function
evaluation needed by VTDIRECT95. In the future, we plan to provide an implementation taking advantage of parallelism in both VTDIRECT95 and MFDn
and also to consider a variety of nuclei in the multiple-nuclei case. We will also
compare the results produced by VTDIRECT95 with other derivative-free optimization techniques, such as those from the Toolkit for Advanced Optimization
(TAO) [11]. The integrated software will be a useful tool for a wide range of ab
initio nuclear physics calculations.
Acknowledgments. The work was supported in part by Iowa State University
under the contract DE-AC02-07CH11358 with the U.S. Department of Energy,
by the U.S. Department of Energy under the grants DE-FC02-07ER41457 (UNEDF SciDAC-2) and DE-FG02-87ER40371 (Division of Nuclear Physics), and
by NERSC.

References
1. Navratil, P., Vary, J., Barrett, B.: Properties of 12 C in the ab-initio Nuclear Shell
Model. Phys. Rev. Lett. 84, 5728 (2000)
2. Navratil, P., Vary, J., Barrett, B.: Large-basis ab-initio No-core Shell Model and
its application to 12 C. Physical Review C62, 54311 (2000)
3. Vary, J., Popescu, S., Stocia, S., Navratil, P.: No Core Shell Model A=47 and
A=49. nucl-th/0607041/
4. Machleidt, R., Sammarruca, F., Song, Y.: Nonlocal nature of the nuclear force and
its impact on nuclear structure. Phys. Rev. C53, C63, 024001, Ref 9 (1996, 2001)

842

M. Sosonkina et al.

5. Vary, J.: The Many-Fermion Dynamics Shell-Model Code. Iowa State University
(1992)
6. He, J., Watson, L., Sosonkina, M.: Algorithm XXX: VTDIRECT95: Serial and
parallel codes for the global optimization algorithm DIRECT. ACM Transactions
on Math. Soft. (submitted, 2007)
7. Jones, D.: The DIRECT global optimization algorithm. Encyclopedia of Optimization 1, 431–440 (2001)
8. Jones, D., Pertunen, C., Stuckman, B.: Lipschtzian optimization without the Lipscitz constant. J. Optimization Theory and Applications 79, 157–181 (1993)
9. Electronic version of nuclear data sheets. telnet://bnlnd2.dne.bnl.gov
10. Burrows, T.: Nuclear data sheets, 74, 1; Nuclear data sheets 76, 191 (1995)
11. Benson, S., McInnes, L.C., Mor´e, J., Munson, T., Sarich, J.: TAO user manual
(revision 1.9). Technical Report ANL/MCS-TM-242, Mathematics and Computer
Science Division, Argonne National Laboratory (2007),
http://www.mcs.anl.gov/tao

