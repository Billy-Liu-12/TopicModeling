Remote Sensing Information Processing Grid Node with
Loose-Coupling Parallel Structure
Ying Luo1,3, Yong Xue1,2,*, Yincui Hu1, Chaolin Wu1,3, Guoyin Cai1, Lei Zheng1,3,
Jianping Guo1,3, Wei Wan1,3, and Shaobo Zhong1
1
State Key Laboratory of Remote Sensing Science, Jointly Sponsored by the Institute of
Remote Sensing Applications of Chinese Academy of Sciences and Beijing Normal University,
Institute of Remote Sensing Applications, Chinese Academy of Sciences, P.O. Box 9718,
Beijing 100101, China
2
Department of Computing, London Metropolitan University, 166-220 Holloway Road,
London N7 8DB, UK
3
Graduate School of the Chinese Academy of Sciences, Beijing, China
jennyjordan@hotmail.com, y.xue@londonmet.ac.uk

Abstract. To use traditional algorithms and software packages on Grid system,
traditional algorithms and software packages, in general, have to be modified.
In this paper we focus on standards and methodologies for Grid platform within
the context of the Remote Sensing Data Processing Grid Node (RSDPGN) that
implements a loose-coupling parallel structure for orchestrating traditional
remote sensing algorithms and software packages on the Condor platform. We
have implemented 17 remote sensing applications in one system using Web
service and workflow technology without any change to traditional codes. Some
core algorithm codes are come from a remote sensing software package which
we has neither resource codes nor APIs. Others come from the program
codes accumulated by our group. The design and prototype implementation of
RSDPGN are presented. The advantage and shortage of loose-coupling
structure is analysed. Through a case study of land surface temperature calculation from MODIS data, we demonstrate the way to modify software packages
in details. Moreover we discuss the problems and solutions based on our
experience such as system architecture, the kinds of functional modules, fast
data transfer, and state monitoring.

1 Introduction
The information extracted from remote sensing data plays an important role in science
and society. The algorithms and software packages to extract information vary based
the characteristics of sensors, spectrum, etc. Generally speaking, the process of
remote sensing data is complicated and time consuming. Remote sensing software
packages such as ARCGIS, ENVI, and ERDAS are expensive, and the use of them
needs special skill. On the other hand, researchers might prefer to pay for only the
function modules which he or she is interested in, or have a third party to do the preprocessing steps or offer some computing power on demand. Thus we need a system
*

Corresponding author.

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 876 – 879, 2006.
© Springer-Verlag Berlin Heidelberg 2006

Remote Sensing Information Processing Grid Node

877

that provides individual function and computing power, allow user to pay for only
certain functions. The emergence of Grid technology brings out a solution to this
system. Grid technology is an evolution in resources sharing including hardware,
data, and software. It will change the mode of software industry at both develop stage
and sale stage.
The paper is organized as follows. In section 2 RSDPGN with some detail of the
functions of the various components and our implementation at present will be
demonstrated. Then in section 3, we will discuss the standards and methodologies for
Grid platform through a case study of land surface temperature retrieval from MODIS
data, and give our experiences in building RSDPGN on how to build a computing
Grid node. Finally, the conclusions will be addressed in Section 4.

2 Remote Sensing Data Processing Grid Node (RSDPGN)
Remote Sensing Data Processing Grid Node (RSDPGN) is the infrastructure that
manages the software and hardware resources to process remote sensing data
according to users’ demand. The data to be processed by our node is come from the
user or a third party.
2.1 Architecture of RSDPGN
Figure1 describes the architecture of remote sensing data processing Grid node. The
node has four layers:
1) Portal layer: It is an outmost
user interface, which can
display data and results,
receive data, JOB, and
algorithm, register and
certificate.
2) Application layer: It is the
most important layer for a
processing node. The fundamental modules include
reliance file transfer (RFT),
security, several database
(DB) such as algorithm
database, remote sensing
Fig. 1. Architecture of RSDPGN
data database, user information database, and instance information database, monitor to check the status
of JOB, hardware, and software, and global scheduler.
3) Grid middleware layer: The communication and management to hardware resource
is in this layer. We developed a toolkit named RSNkit (Remote Sensing Node
toolkit) to add some functions not provided by Condor.
4) Hardware layer: The hardware entities can be PCs, HPC, or Condor pools, etc.
The node issues and registers its services to SIG manage centre periodically,
responses calls of SIG, triggers services, and reports status. There an instance of an

878

Y. Luo et al.

application is called a JOB. A JOB has several steps. Each step is one task that can be
submitted to either the Condor pool or HPC or PC. Receiving require from SIG
manager, the node will find data from user or remote data servers according to user’s
requirements, organize computing resource dynamically, trigger services, and monitor
their running status. To decrease the total processing time of a task, the node will
divide a task into several sub-tasks. The exact number and size of the sub-tasks is
according to the current PC number and configure in the Condor computing pool [1]
and super computer or designated by the user. Only when the task is large enough, or
on the user’s request, the node triggers off the super computer to do a large sub-task.
The method we trigger super computer is different with that of Condor pool.
2.2 Implementation of RSDPGN
Currently, RSDPGN provides 17 remote sensing applications by MODIS data, such
as aerosol optical depth retrieval, land surface temperature retrieval, soil moisture
retrieval, surface reflectance retrieval, some vegetation indexes, and a series of preprocessing functions. Some core algorithm codes of remote sensing applications are
from a remote sensing software package, which we has neither resource codes nor
APIs. Others are program codes accumulated by our group. We implement our portal
as a Web site using dynamic page technology JSP. The development work of end user
software is minimum. Anyone who has a browser can use our node. In order to
integrate with other Grid systems in the future, our node is implemented with Web
service technology such as SOAP, XML, and WSDL. Each remote sensing
application is enwrapped individually so that the system is loose coupling and parallel
structure. There’s no global control as normal system. Each remote sensing
application manages itself following the pre-defined strategy in workflow. In other
words, the whole system is not a large workflow, but many small parallel workflows
classified by applications. Only some basic function modules such as monitor, JOB
queue, RFT are used.

3 Case Study
In this research, we will use an example of land surface temperature retrieval from
MODIS data to demonstrate how to use our node [2]. The retrieval process consists of
initialisation, data format transfer, rectification, region selection, data division,
temperature retrieval, result merging and result return to the users. When a user orders
a temperature retrieval service via Grid portal, a JOB workflow instance is initialised
once the user click the submit bottom after choosing the data to be processed. Finally
the blocks of retrial result are merged, and return to the end user. The JOB status is
monitored by the system monitor. The monitor of the whole node including JOB
status, sub jobs’ status, workflow module status, hardware status is also an important
issue. Continually status query wastes much CPU cycles. Our solution is to give a
speed attribute to each algorithm. So the system can estimate a probable time and use
the time to decide whether to query the status.
File transfer is one of the big issues. It is the bottleneck that increases the total
processing time. There is another issue adding the complexity of the data node. The

Remote Sensing Information Processing Grid Node

879

application workflow need to know not only data and metadata but also attributes
such as whether it has been rectified, with what algorithm, how about the processing
precision, and so on.

4 Conclusion
In this paper, we introduced our ongoing research on RSDPGN. It is a demonstration
on how to integrate traditional algorithms and software packages, computing
resource, and Grid in order to provide one-stop service to users. It is service-oriented.
We have implemented it mainly by workflow technology. We orchestrated 17 remote
sensing applications on the Grid node. We used the strategy to let each application
manages itself following the pre-defined workflow. The loosely coupling structure of
our node is different with common centralized control structure. It is an easy design,
modifying, and extending system. Furthermore this structure is convenient to
breakpoint and status query, but it adds spending of computing resource and store
resource. Additionally, the rock-bottom communication, control and monitor to
Condor computing pool and HPC rely on Condor and RSNkit. It is recommended to
use loosely coupling structure in complex Grid system that involved in many function
modules and hardware. But for the correspondingly system, it is better to use a
centralized control structure.

Acknowledgement
This publication is an output from the research projects "Grid platform based aerosol
fast monitoring modeling using MODIS data and middlewares development"
(40471091) funded by the NSFC, China, “Dynamic Monitoring of Beijing Olympic
Environment Using Remote Sensing” (2002BA904B07-2) and “863 - Remote
Sensing Information Processing and Service Node” (2003AA11135110) funded by
the MOST, China and "Digital Earth" (KZCX2-312) funded by CAS, China.

References
[1] Basney, J., Livny, M., and Tannenbaum, T., 1997, High Throughput Computing with
Condor, HPCU news, Volume 1(2)
[2] Xue, Y., Cai, G. Y., Guan, Y. N., Cracknell, A. P. and Tang, J. K., 2005, Iterative SelfConsistent Approach For Earth Surface Temperature Determination. International Journal
of Remote Sensing, Vol. 26, No. 1, 185–192.

