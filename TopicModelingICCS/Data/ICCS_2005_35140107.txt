A Multipole Based Treecode Using Spherical
Harmonics for Potentials of the Form r −λ
Kasthuri Srinivasan , Hemant Mahawar, and Vivek Sarin
Department of Computer Science, Texas A&M University,
College Station, TX, U.S.A.
{kasthuri, mahawarh, sarin}@cs.tamu.edu

Abstract. In this paper we describe an eﬃcient algorithm for computing the potentials of the form r−λ where λ ≥ 1. This treecode algorithm
uses spherical harmonics to compute multipole coeﬃcients that are used
to evaluate these potentials. The key idea in this algorithm is the use of
Gegenbauer polynomials to represent r−λ in a manner analogous to the
use of Legendre polynomials for the expansion of the Coulomb potential r−1 . We exploit the relationship between Gegenbauer and Legendre
polynomials to come up with a natural generalization of the multipole
expansion theorem used in the classical fast multipole algorithm [2]. This
theorem is used with a hierarchical scheme to compute the potentials.
The resulting algorithm has known error bounds and can be easily implemented with modiﬁcation to the existing fast multipole algorithm. The
complexity of the algorithm is O(p3 N log N ) and has several advantages
over the existing Cartesian coordinates based expansion schemes.

1

Introduction

Computing the potentials of the form r−λ where λ ≥ 1 is an important task
in many ﬁelds like molecular dynamics [10], computational chemistry [9] and
ﬂuid mechanics [11]. Potentials such as Lennard-Jones, Van der Wall’s forces
and H-bonds require evaluation of functions of the form r−6 , r−10 , etc. The naive
brute force algorithm based on particle-particle interaction takes O(N 2 ), where
N is the number of particles. There are various approximation algorithms with
lower complexity that have been proposed for the potential evaluation problem.
Appel’s algorithm [12], Barnes-Hut algorithm [1] etc. reduce the complexity
to O(N log N ) by making use of the cluster-particle interactions. As opposed
to brute force algorithm that evaluates the potential exactly, approximation algorithms estimate the potential to the desired accuracy that can be controlled
by certain parameters. The fast multipole method (FMM), proposed by Greengard and Rokhlin [2], is the fastest contemporary approximation algorithm to
This work has been supported in part by NSF under the grant NSF-CCR0113668,
and by the Texas Advanced Technology Program grant 000512-0266-2001.
Corresponding author.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 107–114, 2005.
c Springer-Verlag Berlin Heidelberg 2005

108

K. Srinivasan, H. Mahawar, and V. Sarin

solve the potential evaluation problem without losing much accuracy. FMM is
based on cluster-cluster interaction of the particle system and has a complexity
O(N ). Although FMM has complexity that is linear in the number of particles
in the system, its applicability is limited to operators whose multipole expansions are available analytically. In absence of such expansions treecodes such as
Barnes-Hut, Appel’s algorithm may be used [3].
For potentials of the form Φ(r) = r−1 , FMM exploits the separability of the
Greens function kernel using spherical harmonics. However, for kernels of the
form r−λ , λ ≥ 1, advances have been made by using Cartesian coordinates only.
Duan et al. [3] propose a treecode which uses Gegenbauer polynomials and
recurrence relations. Chowdhury et al. [5] recent approach generalizes single
level fast multipole algorithm for these potentials using addition theorem for
Gegenbauer polynomials. They develop necessary operators and error bounds
based on these addition theorems. Although, their approach can be used for r−λ
kernels, it is restricted to single level multipole expansions. The algorithm by
Elliott et al. [4] uses multivariate Taylor expansions. Although, these methods
are designed to compute such potentials, they strongly make use of Cartesian
coordinates and special recurrence relations speciﬁc to their schemes.
In this paper we propose a multipole based treecode that uses spherical harmonics to evaluate potentials of the form r−λ , where λ ≥ 1. This treecode has
several advantages over existing Cartesian coordinate based expansion schemes.
First, the use of spherical harmonics gives an analytic formula to compute multipole coeﬃcients eﬃciently. This analytic formula is a natural generalization
of the multipole expansion theorem for r−1 potential. Second, any previous implementation of FMM can be modiﬁed to evaluate r−λ potentials using this
approach. Third, our method allows precomputing certain vectors that significantly reduce the time to compute multipole coeﬃcients. Finally, there is no
need to use special recurrence relations or spherical harmonics other than the
ones used in FMM.
The paper is organized as follows: Section 2 discusses the multipole expansion
theorem for r−1 functions. Section 3 describes the Gegenbauer polynomials and
their relationship with Legendre polynomials. Section 4 describes a tree code
based on the hierarchical multipole method. Section 5 discusses the complexity
and implementation issues. Conclusions are presented in Section 6.

2

Multipole Expansion Theorem for r −1 Potential

This section describes the multipole expansion theorem from the classical FMM
[2]. Let P (r, θ, φ) and Q(ρ, α, β) be two points with spherical coordinates. Also let
P − Q = R(r , θ , φ ) and γ be the angle between P and Q taken in anticlockwise
direction. Then, if ρ < r, the potential Φ(P ) at P due to a charge q at Q is given
by
∞

q · ρn
q
=
Pn (cos γ),
Φ(P ) =
r
rn+1
n=0

(1)

A Multipole Based Treecode Using Spherical Harmonics

109

where Pn (cos γ) is the Legendre polynomial of degree n. We also have the addition theorem for Legendre polynomials
n

Pn (cos γ) =
m=−n

Yn−m (α, β)Ynm (θ, φ),

(2)

where Ynm are the spherical harmonics given by
Ynm (x, y) =

n − |m| m
P (cos x)eimy ,
n + |m| n

(3)

in which Pnm are the associated Legendre functions evaluated at cos x. Using (1)
and (2) we have the following theorem.
Theorem 1. Suppose that a charge of strength q is located at Q(ρ, α, β) with
ρ < a. At any point P (r, θ, φ) with r > a, the potential Φ(P ) is given by
∞

Φ(P ) =

n

Mnm m
q
=
Y (θ, φ),
r
rn+1 n
n=0 m=−n

(4)

where Mnm = qρn Yn−m (α, β).
If there are several charges {qi : i = 0, 1, . . . k} around Q with coordinates
{(ρi , αi , βi ) : i = 1, 2, . . . k} we can superpose them at Q and the resulting
k
multipole moment at Q would be Mnm = i=0 qi ρni Yn−m (αi , βi ).

3

Gegenbauer Polynomials

Gegenbauer polynomials are higher dimensional generalization of Legendre polynomials [7, 8]. Gegenbauer polynomials are eigenfunctions of the generalized
angular momentum operator just as Legendre polynomials are eigenfunctions
of the angular momentum operator in three dimensions. Gegenbauer polynomials allow addition theorem using hyperspherical harmonics similar to Legendre
polynomials which allow addition theorem using spherical harmonics. One can
refer to [7] for list of similarities between Gegenbauer and Legendre polynomials. Gegenbauer polynomials are also a generalization of Legendre polynomials
in terms of the underlying generating function. Thus, if x, y ∈ , then
∞

1
=
Cnλ (x)y n ,
(1 − 2xy + y 2 )λ/2
n=0

(5)

where Cnλ (x) is a Gegenbauer polynomial of degree n. This generating function
can be used to expand r−λ using Gegenbauer polynomials. Let P (r, θ, φ) and
Q(ρ, α, β) be points with spherical coordinates. Using (5) we have,
∞

ρn λ
1
1
=
=
C (u)
(r )λ
rn+λ n
rλ (1 − 2uµ + µ2 )λ/2
n=0

(6)

110

K. Srinivasan, H. Mahawar, and V. Sarin

where µ = ρ/r and u = cos γ. There are addition theorems for Gegenbauer
polynomials using hyperspherical harmonics which allow us to separate Cnλ (u)
in terms of the coordinates, but we require hyperspherical harmonics. Instead,
we use a relation that exists between Gegenbauer and the Legendre polynomials
[6] which allows us to use spherical harmonics in three dimensions. Let Pn (x)
and Cnλ (x) be Legendre and Gegenbauer polynomials, of degree n, respectively,
Then
n/2
(λ)n−s (λ − 1/2)s
(2n − 4s + 1)Pn−2s (x)
Cnλ (x) =
(7)
(3/2)n−s s!
s=0
where (p)s is the Pochhammer symbol. We deﬁne
λ
Bn,s
=

(λ)n−s (λ − 1/2)s
(2n − 4s + 1).
(3/2)n−s s!

(8)

Using (2) and (7), we derive an addition theorem for Gegenbauer polynomials.
The following lemma is found in abstract form in many places [7, 8]. A proof is
omitted to conserve space.
Lemma 1. (Addition Theorem for Gegenbauer Polynomials) Let P and
Q be points with spherical coordinates (r, θ, φ) and (ρ, α, β), respectively, and let
γ be the angle subtended by them at the origin. Then
n/2

Cnλ (cos γ) =

λ
Bn,m
Yn,m (θ, φ) · Yn,m (α, β)

(9)

m=0
−(n−2m)

−(n−2m)+1

T
where Yn,m
(x, y) = [Yn−2m
, Yn−2m
ical harmonics of degree n − 2m.

(n−2m)

, . . . , Yn−2m ] is a vector of spher-

Once we have an addition theorem for Gegenbauer polynomials we can prove
the multipole expansion theorem for r−λ potentials.
Theorem 2. (Multipole Expansion) Suppose that k charges of strengths
{qi ,i = 1, . . . k} are located at the points {Qi = (ρi , αi , βi ), i = 1, . . . , k}, with
|ρi | < a. Then for any point P = (r, θ, φ) with r > a, the potential Φ(P ) is given
by
n/2

∞

Φ(P ) =
n=0 m=0

where
Mm
n =

k

1
Mm · Yn,m (θ, φ)
rn+λ n

(10)

λ
qi ρni Bn,m
Yn,m (αi , βi )

(11)

i=1

Furthermore, for any p ≥ 1,
p

n/2

Φ(P ) −
n=0 m=0

where A =

k
i=1

AB
Mm
n
· Yn,m (θ, φ) ≤ λ−1
n+λ
r
r
(r − a)

|qi | and B =

n/2
m=0

λ
Bn,m

a
r

p+1

(12)

A Multipole Based Treecode Using Spherical Harmonics

111

Proof. From equation (6) and Lemma (1), for any qi at Qi we have
∞

Φ(P ) =

qi ρni λ
C (u)
rn+λ n
n=0
∞

n/2

=
n=0 m=0

λ
qi ρni Bn,m
Yn,m (αi , βi )
Yn,m (θ, φ)
rn+λ

The moments in (11) are obtained by superposition.
We now prove the error bound. Note that for every u ∈ with |u| ≤ 1, we
n/2
λ
(using triangle
have |Pn (u)| ≤ 1. From (7), Cnλ ≤ B where B = m=0 Bn,m
inequality). Now, for each qi located at Qi having |ρi | < a, we have
p

Φ(P ) −

qi ρnn λ
C (u) =
rn+λ n
n=0
≤

∞

qi ρni λ
C (u)
rn+λ n
n=p+1
B

qi
rλ−1 r − a

a
r

p+1

The error bound (12) is obtained by superposition of error bounds for all the k
charges.

4

A Treecode for r −λ Potentials

The treecode can be viewed either as a variant of Barnes-Hut algorithm [1] or
FMM [2] that uses only particle-cluster potential evaluations. The method works
in two phases: The tree construction phase and the potential computation phase.
In tree construction phase, a spatial tree representation of the domain is derived.
At each step of this phase, if the domain contains more than s particles, where s
is a preset constant, it is recursively divided into eight equal sub-domains. This
process continues until each sub-domain has at most s elements. The resulting
tree is an unstructured oct-tree. Each internal node in the tree computes and
stores multipole series representation of the particles. Since we don’t have any
translations, at each level of the tree and for every sub-domain in that level
we compute the multipole coeﬃcients of all the particles contained in the subdomain. These coeﬃcients are obtained using the theorem given in the preceding
section. Once the tree has been constructed, the potential at any point can be
computed as follows: a multipole acceptance criterion is applied to the root of
the tree to determine if an interaction can be computed; if not, the node is
expanded and the process is repeated for each of its eight children. The multipole
acceptance criterion computes the ratio of the distance of the point from the
center of the box to the dimension of the box. If the ratio is greater than α, a
speciﬁc constant, an interaction can be computed. In the following pseudo-code
for computing the multipole coeﬃcients and potential evaluation, p is the prespeciﬁed multipole degree and s is the minimum number of particles contained
in any leaf box and α, a constant.

112

K. Srinivasan, H. Mahawar, and V. Sarin

Multipole Calculation(p)
– For(each level in the Oct-tree)
• For(each node in the level)
∗ Find the multipole coefficients of all the particles in the
node using Theorem 2 with respect to the box center of the
node
Potential Evaluation()
– For(each particle)
• nodes = Alpha Criteria(particle,root)
• If(nodes = leaf)
∗ Compute potentials directly
• Else
∗ Use the multipole expansion Theorem 2 to find the potential
• Add direct and the computed potential
nodes = Alpha Criteria(particle,node)
– ratio = distance of the particle from the box center/box length
– If(ratio > α)
• return nodes;
– Else If(node = leaf)
• return leafnodes;
– Else
• For(each children nodes)
∗ nodes = Alpha Criteria(particle,node)
∗ return nodes;

5

Complexity and Implementation

It can be seen from the multipole expansion theorem that the complexity for
computing the multipole coeﬃcients at each level of the tree is O(p3 N ), where
N is the number of particles in the system and p is the multipole degree. Since
there are log N levels in the tree, the total cost of computing the multipole cocoeﬃcients is O(p3 N log N ). Similarly, it can be seen that the complexity for the
potential evaluation phase is O(p3 N log N ). Thus, the overall complexity for the
algorithm is O(p3 N log N ).
We have experimentally veriﬁed the theorem for r−6 and r−10 potentials.
The logarithmic plot (Fig 1 and Fig 2) shows the relative error and the error
bound as multipole degree p varies from 1 to 10. For an eﬃcient implementation
of this algorithm, here are few pointers.
– An existing FMM code can be appropriately modiﬁed to compute the multipole coeﬃcients in this algorithm.
– The Gegenbauer constants can be precomputed and used in the potential
evaluation phase to reduce computation time of the multipole coeﬃcients.

A Multipole Based Treecode Using Spherical Harmonics

Fig. 1. Relative error and error bound for the potential Φ(r) = r−6

Fig. 2. Relative error and error bound for the potential Φ(r) = r−10

113

114

K. Srinivasan, H. Mahawar, and V. Sarin

– Due to the decreasing nature of the indices in the Legendre polynomial’s
relation with the Gegenbauer polynomial (Equation 7), only the spherical
harmonics for r−1 potential is needed. They can be used to the compute
multipole coeﬃcients for the r−λ potentials. It should be noted that the set
spherical harmonics for r−λ potentials are the same as the set of spherical
harmonics for r−1 , but with the shift n−2m for m = 0, 1, ... n/2 as Lemma 1
shows.

6

Conclusion

An eﬃcient algorithm for the computation of r−λ potentials using spherical harmonics is presented. This algorithm has advantages over existing Cartesian coordinate based expansion schemes. Since, there are no special recurrence relations
or spherical harmonics required, an FMM code can be appropriately modiﬁed
to implement the proposed algorithm.

References
1. J. Barnes and P. Hut. A hierarchical O(n log n) force calculation algorithm. Nature,
Vol. 324:446–449, 1986.
2. L. Greengard. The Rapid Evaluation of Potential Fields in Particle Systems. The
MIT Press, Cambridge, Massachusetts, 1988
3. Z. Duan, R. Krasny. An adaptive treecode for computing nonbonded potential
energy in classical molecular systems. Journal of Computational Chemistry, Vol.22,
No.2, 184-195 (2001)
4. W.D. Elliott, J.A. Board. Multipole algorithms for molecular dynamics simulation on high performance computers. http://www.ee.duke.edu/ wrankin/SciComp/
Papers/TR95-003.html.
5. I. Chowdhury, V. Jandhyala. Single level multipole expansions and operators for
potentials of the form r−λ . In UWEE Technical Report, March 2004.
6. E.J. Weniger. Addition Theorems as Three-Dimensional Taylor Expansions. International Journal of Quantum Chemistry, Vol.76, 280-295 (2000)
7. John Avery. Hyperspherical Harmonics.
8. Claus M¨
uller. Analysis of Spherical Symmetries in Euclidean Spaces.
9. G.H. Kho and W.H. Fink. Rapidly converging lattice sums for nanoelectronic
interactions. J.Comp.Chem, 23(2001), 447-483
10. Y. Komeiji, M. Uebayasi, R. Takata, A. Shimizu, K. Itsukahi and M. Taiji. Fast
and accurate molecular dynamics simulation of a protein using a special purpose
computer . J.Comp.Chem, 18(1997), 1546-1563
11. X.B. Nei, S.Y. Chen, W.N. E and M.O. Robbins. A continuum and molecular
dynamics hybrid method for micro- and nano- ﬂuid ﬂow. J.Fluid.Mech., 500(2004),
55-64
12. A. Appel. An Eﬃcient Program for Many-Body Simulations. SIAM J Sci Comput,
1985,6, 85-103

