Network Brownian Motion: A New Method to
Measure Vertex-Vertex Proximity and to
Identify Communities and Subcommunities
Haijun Zhou and Reinhard Lipowsky
Max-Planck-Institute of Colloids and Interfaces, D-14424 Potsdam, Germany
{zhou,lipowsky}@mpikg-golm.mpg.de

Abstract. The networks considered here consist of sets of interconnected vertices, examples of which include social networks, technological
networks, and biological networks. Two important issues are to measure
the extent of proximity between vertices and to identify the community
structure of a network. In this paper, the proximity index between two
nearest-neighboring vertices of a network is measured by a biased Brownian particle which moves on the network. This proximity index integrates
both the local and the global structural information of a given network,
and it is used by an agglomerative hierarchical algorithm to identify the
community structure of the network. This method is applied to several
artiﬁcial or real-world networks and satisfying results are attained. Finding the proximity indices for all nearest-neighboring vertex pairs needs a
computational time that scales as O(N 3 ), with N being the total number
of vertices in the network.

1

Introduction

Network models are necessary to understand the behavior of complex systems,
such as a biological organism, an ecological system, a human society, or the
Internet. A Network is composed of a set of vertices and a set of edges which
connect these vertices. Many complex networks were constructed and studied in
recent years, and the small-world and scale-free properties of real-world networks
were discovered (for a review, see [1,2,3]).
As far as the dynamics of networks is considered, the concept of network
Brownian motion (or random walks) has aroused some interest among statistical
physicists [4,5,6,7,8,9,10]. For example, the diﬀusion constant on a small-world
network was investigated in [4]; random walks were used in [5,6] to study network
search problems and in [7,8] to study network traﬃc and congestion. In [9,10] a
new approach based on Brownian motion was introduced, by which one can measure the extent of proximity between neighboring vertices of a given network and
cluster vertices of this network into diﬀerent communities and subcommunities.
The present work extends the basic idea of [9,10]. Intuitively, a community
of a network should consist of a subset of vertices which are more “near” to
each other than to vertices not included in this subset. We give a quantitative
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 1062–1069, 2004.
c Springer-Verlag Berlin Heidelberg 2004

Network Brownian Motion

1063

deﬁnition of proximity measure and show how to calculate its value eﬃciently.
This proximity measure is based on biased Brownian motion on a network. We
apply this proximity measure in identifying the community structure of several
networks.
Section 2 introduces a class of biased network Brownian motions and deﬁne
a vertex-vertex proximity index. Section 3 outlines the clustering algorithm Netwalk and shows its performance by application on random modular networks.
Section 4 applies the Netwalk algorithm to several social and biological networks.
We conclude this work in section 5 together with some discussion.

2

Biased Brownian Motion and Proximity Index

Consider a connected network of N vertices and M edges, with a weight matrix
ω. If there is no edge between vertex i and vertex j, ωij = 0; if there is an edge
in between, ωij ≡ ωji > 0 and its value corresponds to the interaction strength
of this edge. In a social friendship network, for example, ωij may be proportional
to the frequency of contact between person i and person j. A Brownian particle
moves on the network, and at each step it jumps from its present position, say
i, to a nearest-neighboring position, say j. We assume that the jump probability
Pij has the form
1
ωij (cij + 1)γ ,
(1)
Pij =
Ki
where Ki = k ωik (cik +1)γ , and cij is the number of common nearest-neighbors
of vertex i and vertex j. For γ > 0, the Brownian particle has greater probability
at each vertex to jump to a nearest-neighboring vertex that shares more nearestneighbors with the original vertex. Equation (1) thus deﬁnes a biased Brownian
motion, with the degree of bias being controlled by the bias exponent γ. For
γ = 0, eq. (1) reduces to the unbiased Brownian motion discussed in refs. [9,10].
For convenience, we introduce a generalized adjacency matrix A with matrix
elements Aij = Aji = ωij (cij + 1)γ . In addition, we deﬁne a diagonal matrix K
such that Kii = Ki . The transfer matrix P in eq. (1) is then given by P = K−1 A.
Suppose the Brownian particle is initially located at vertex i. The mean-ﬁrstpassage-time dij [9] is the average number of steps the Brownian particle takes
before it reaches vertex j (or return to i in the case of i = j) for the ﬁrst time.
This quantity is given by
+∞

dij = Pij +

(m + 1)
m=1

Pik1 Pk1 k2 . . . Pkm j .

(2)

k1 =j;...;km =j

It has been shown in ref. [9] that dij is the solution of the linear equation
  

1
d1j
  .. 
 ..
[I − B(j)]  .
 = . ,
dN j

1

(3)

1064

H. Zhou and R. Lipowsky

where B(j) is the matrix formed by replacing the j-th column of matrix P with a
column of zeros. Equation (3) seems to imply that N matrix inversion operations
are needed to calculate the values of dij for all pairs i, j. This would lead to
a computational time of O(N 4 ). However, what we really need to know is the
diﬀerence of mean-ﬁrst-passage-times, ∆(i, j; k) = dik − djk . In this article, we
describe a method by which one can calculate all the N 2 (N − 1)/2 diﬀerent
∆(i, j; k) values with a computational time of O(N 3 ).
Equation (3) is equivalent to


d1j
 d2j

[K − A]  .
 ..





 
 
=
 

K1 − A1j djj
K2 − A2j djj
..
.




.


(4)

KN − AN j djj

dN j

Because the determinant of K − A is zero, one cannot invert this matrix directly
to ﬁnd the solution of eq. (4). However, one can construct two (N − 1) × (N − 1)
matrices Kr and Ar by removing the last rows and columns1 of the matrices K
and A [11]. This leads to
N −1

dij = dN j +
l=1

1
Kr − Ar

il

Kl −

TrK
Kj

N −1
l=1

1
Kr − Ar

il

Alj ,

(i < N ). (5)

In deriving eq. (5) we have used the fact that djj , the average returning time, is
N
independent of network topology, with djj = l=1 Kl /Kj = TrK/Kj [12].
With eq. (5) one only needs to invert the matrix Kr − Ar to obtain the values
of all quantities ∆(i, j; k). The total computation time scales as O(N 3 ).
For each nearest-neighboring pair of vertices i and j with ωij > 0, we deﬁne
the proximity index
Λ(i, j) =

k=i,j

∆2 (i, j; k)

(N − 2)

(6)

in order to quantity the extent of proximity between i and j. If two nearestneighboring vertices i and j belong to the same community, then the mean-ﬁrstpassage-time dik from i to any another vertex k (k = i, j) will be approximately
equal to that from j to k; in other words, the “coordinates” of the two vertices
will be near to each other. Consequently, Λ(i, j) will be small if i and j belong
to the same community and large if they belong to diﬀerent communities. The
proximity index eq. (6) gives a quantitative measure of vertex-vertex proximity
for a network that has no metric otherwise.
This proximity index is used in the Netwalk algorithm of the following section.

1

Actually one can remove an arbitrary row and an arbitrary column and the result
is unchanged. Here for deﬁniteness, we remove the N -th row and the N -th column.

Network Brownian Motion

1065

Table 1. Number of misclassiﬁed vertices as a function of the between-community
probability p. For each value of p, 100 random networks with 128 vertices are generated.
The results obtained by using unbiased (γ = 0), linearly-biased (γ = 1) and squarelybiased (γ = 2) Brownian motions are compared.

3

p

γ=0

γ=1

γ=2

0.3
0.35
0.4
0.45

0.43 ± 0.78
2.9 ± 2.9
13.0 ± 7.5
38.1 ± 14.6

0.43 ± 0.70
1.96 ± 2.1
8.3 ± 5.4
26.5 ± 10.8

0.62 ± 0.90
2.59 ± 2.4
10.2 ± 6.5
29.8 ± 10.6

Netwalk Algorithm

We exploit the proximity index to reveal the community structure of a network.
The Netwalk algorithm works as follows:
1. Calculate the inverse of Kr − Ar .
2. Calculate the proximity index Λ(i, j) for all nearest-neighboring pairs based
on eq. (5) and eq. (6).
3. Initially, the network has N communities, each contains a single vertex. We
deﬁne the proximity index between two communities α and β as
Λα,β =

1
nα,β

Λ(i, j),

(7)

(i,j):ωij >0,i∈α,j∈β

where the summation is over all edges (i, j) that connect communities α and
β, and nα,β is the total number of such edges. Merge the two communities
with the lowest proximity index into a single community and then update
the proximity index between this new community and all the other remaining
communities that are connected to it. This merging process is continued until
all the vertices are merged into a single community corresponding to the whole
network.
4. Report the community structure and draw a dendrogram.
We tested the Netwalk algorithm on an ensemble of modular random networks. Each network in this ensemble has 128 vertices, 1024 edges and, hence,
an average degree of 16 for each vertex. The vertices are divided into four communities or modules of size 32 each. The connection pattern of each network is
random, except that each edge has a probability p to be between two diﬀerent
modules. For each value of p, 100 random networks have been generated and
studied. The results are listed in Table 1. The performance of Netwalk is remarkable. For example, when p = 0.4, i.e., when each vertex has on average 6.4
between-community edges and 9.6 within-community edges, only about eight
vertices (6% of all vertices) are misclassiﬁed by this algorithm using linearlybiased Brownian motion.
Table 1 also suggests that, the performance of the linearly-biased Brownian
motion (γ = 1 in eq. (1)) is considerably superior to those of γ = 0 and γ = 2.

0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0

H. Zhou and R. Lipowsky

110-2
104-2
90-2
26-2
34-2
2-2
46-2
38-2
106-2
73-4
4-4
75-4
41-4
53-4
103-4
6-4
85-4
99-4
82-4
11-4
108-4
68-11
54-11
84-11
47-11
74-11
89-11
50-11
111-10
115-11
12-9
51-9
29-9
91-12
25-9
70-9
8-5
78-5
22-5
112-5
109-5
9-5
23-5
79-5
52-5
69-5
1-1
94-1
10-1
24-1
5-1
42-1
17-1
105-1
3-3
40-3
65-3
7-3
48-3
33-3
101-3
61-3
107-3
14-3
16-3
37-12
43-12
19-6
35-6
32-6
62-6
100-6
55-6
72-6
86-6
15-6
39-6
27-6
13-6
44-6
77-7
66-7
97-7
18-7
88-7
21-7
114-7
63-7
71-7
96-7
28-7
57-7
56-8
80-8
20-8
36-8
30-8
95-8
31-8
102-8
81-12
83-12
45-10
113-10
67-10
76-10
93-10
92-10
58-10
49-10
87-10
60-9
64-9
59-11
98-9

1066

Fig. 1. Community structure of a football-team network. In the name pattern xx-yy,
the number yy after the hyphen denotes the group identity of vertex xx according
to information from other sources. The dendrogram is generated by P. Kleiweg’s den
algorithm (http://odur.let.rug.nl/ kleiweg/levenshtein/).

Indeed, we have observed that, for each generated random network, in most cases
the number of misclassiﬁed vertices by using γ = 1 is less than that reported
by using γ = 0 or γ = 2. Therefore, in our later applications, linearly-biased
Brownian motion (γ = 1) will be used. (In general, one may also use non-integer
values of γ but this has not been explored so far.)

4

Applications

We apply the Netwalk algorithm to several real-world networks in order to detect
their community structures. In the following, we ﬁrst discuss the results for two
social networks and then for one biological network.
Karate club network of Zachary (1977).
The ﬁssion process of a social
network was studied by Zachary in 1977 [13]. This network is composed of 34
members of a karate club, it has 77 weighted edges. It broke up into two parts
because of a disagreement between the club’s oﬃcer and its instructor. When
applying our algorithm to this network, the two main communities identiﬁed by
our algorithm are in full agreement with the actual ﬁssion pattern [13].
Football network of Girvan and Newman (2002).
The American football network collected by Girvan and Newman [14] contains 115 vertices (football
teams) and 613 unweighted edges (matches). The community structure of this
network is shown in ﬁg. 1. Comparing the predicted pattern with the actual
conference structure of these football teams, we see the following diﬀerences:
(1) Conference 9 is divided into two parts by our algorithm. We have checked
that there is no direct connection between the two parts of conference 9. (2)
Vertex 111 is grouped into conference 11. We have checked that it has eight
edges to conference 11 and only three edges to other conferences; similarly, we
have checked that vertex 59 has stronger interaction with conference 9 than with
any other conference. (3) Vertices in conference 12 are distributed into several
conferences. We have also checked that there are very few direct interactions
between the ﬁve members of this conference.

1067

0

10

20

30

Network Brownian Motion

Fig. 2. Community structure of yeast’s protein-protein interaction network.

Protein-protein interaction network of yeast Saccharomyces cerevisiae. The yeast protein-protein interaction network is constructed according
to experimental data [15,16]. Each vertex of this network represents a protein,
and each edge represents some physical interaction between the two involved
proteins. The giant component of the reliable subset of this network contains
2406 proteins and 6117 unweighted edges (excluding self-connection) [15,16].
The community structure of this network as obtained via Netwalk is shown
in ﬁg. 2, which is strikingly diﬀerent from those of the two social networks as
described above. On the global scale, the protein-protein interaction network
cannot be divided into two or more large communities of similar size. At each
proximity level, the network has one giant community and many small communities, each of these small communities containing of the order of ten proteins.
As the community-community proximity index is increased, these small communities are integrated into the giant community in a hierarchical order. This
hierarchical organization of small modules seems to be a universal feature of biological networks. It is unlikely to be caused by a particular clustering method.
Similar hierarchical patterns are observed in metabolic networks using diﬀerent
clustering methods [17,18]. We also investigated the community structure of the
gene-regulation network of yeast [19] and found a similar hierarchical pattern.
The construction principles underlying such hierarchical structures are still to be
fully appreciated. It is plausible that such hierarchical structures contain information about the evolutionary history of the biological organisms (H. W. Peng
and L. Yu, private communication).
Based on ﬁg. 2 many communities of proteins can be obtained. To determine
the best threshold value of the proximity index in dividing the network, one
may calculate the network’s modularity value [20] at each value of the proximity
index. We found that for yeast’s protein interaction network, the peak value of
the modularity is 0.51, achieved by setting threshold proximity index to 1.20.
We have checked that, the communities and subcommunities predicted by the
Netwalk algorithm at this level of proximity index are composed of proteins that
have similar cellular locations and are involved in similar biological processes.

1068

5

H. Zhou and R. Lipowsky

Conclusion and Discussion

In this paper, we have discussed biased Brownian motion on networks. A quantitative measure for the degree of proximity between neighboring vertices of a
network was described based on this concept of biased network Brownian motion. This proximity index integrates both the local and the global structural
information of a given network. Based on this proximity measure, we have constructed a powerful algorithm, called Netwalk, of network community structure
identiﬁcation.
We have tested the performance of Netwalk on random modular networks and
found good performance. The algorithm was then applied to two real-world social
networks and to two biological networks. For the two biological networks, namely
(i) the protein-protein interaction network and (ii) the inter-regulation network
of transcription factors, the communities are organized in a hierarchical way.
More work is needed to understand the evolutionary origin of this hierarchical
organization and its biological signiﬁcance.
The Netwalk algorithm includes a matrix inversion operation, and its computation time scales as O(N 3 ), where N is the total number of vertices of the
network of interest. For very large networks N
103 , it is impractical to calculate exactly the value of the proximity index as given by eq. (6). An approximate
scheme is as follows. To calculation Λ(i, j), one may ﬁrst construct a subnetwork
of (say) Ns = 1000 elements including vertices i, j and their nearest-neighbors,
next-nearest-neighbors, etc., and all the edges between these elements. An estimate of Λ(i, j) can then be obtained by applying eqs. (5) and (6) on this
subnetwork. Because of the scale-free property of many real-world networks [2],
we expect the value of the proximity index obtained by this method to be a
good approximation of the exact value. If this approximate scheme is used, all
the vertex-vertex proximity indices can be calculated in a computational time
that scales linearly with the total number of edges.
For sparse networks of size N < 103 , the Netwalk algorithm is comparable in
computational time and performance with the graph-theoretical Girvan-Newman
algorithm [14]. The advantages of the statistical-physics based algorithm are as
follows: (i) It is applicable to weighted networks. Therefore it is able to uncover
some structure even for a densely connected network, provided the edges of this
network have diﬀerent weights. (ii) It could be easily extended to very large
graphs as discussed above. (iii) The local environment of each vertex is included
by the bias coeﬃcient γ in eq. (1).
We are conﬁdent that both the vertex-vertex proximity measure and the
Netwalk algorithm described in this paper will ﬁnd more applications in social
and biological networked systems.

References
1. Strogatz, S. H.: Exploring complex networks. Nature 410 (2001) 268-276
2. Albert, R., Barab´
asi, A.-L.: Statistical mechanics of complex networks. Rev. Mod.
Phys. 74 (2002) 47-97

Network Brownian Motion

1069

3. Dorogovtsev, S. N., Mendes, J. F. F.: Evolution of networks. Adv. Phys. 51 (2002)
1079-1187
4. Jespersen, S., Sokolov, I. M., Blumen, A.: Relaxation properties of small-world
networks. Phys. Rev. E 62 (2000) 4405-4408
5. Tadic, B.: Adaptive random walks on the class of Web graphs. Eur. Phys. J. B 23
(2001) 221-228
6. Adamic, L. A., Lukose, R. M., Puniyani, A. R., Huberman, B. A.: Search in powerlaw networks. Phys. Rev. E 64 (2001) 046135
7. Guimera, R., Diaz-Guilera, A., Vega-Redondo, F., Cabrales, A., Arenas, A.: Optimal network topologies for local search with congestion. Phys. Rev. Lett. 89 (2002)
248701
8. Holme, P.: Congestion and centrality in traﬃc ﬂow on complex networks. Adv.
Compl. Sys. 6 (2003) 163-176
9. Zhou, H.: Network landscape from a Brownian particle’s perspective. Phys. Rev.
E 67 (2003) 041908
10. Zhou, H.: Distance, dissimilarity index, and network community structure. Phys.
Rev. E 67 (2003) 061901
11. Newman, M. E. J.: A measure of betweenness centrality based on random walks.
e-print: cond-mat/0309045 (2003)
12. Noh, J. D., Rieger, H.: Random walks on complex networks. e-print: condmat/0307719 (2003)
13. Zachary, W. W.: An information ﬂow model for conﬂict and ﬁssion in small groups.
J. Anthropol. Res. 33 (1977) 452-473
14. Girvan, M., Newman, M. E. J.: Community structure in social and biological networks. Proc. Natl. Acad. Sci. U.S.A. 99 (2002) 7821-7826
15. Xenarios, I., Salwinski, L., Duan, X. J., Higney, P., Kim, S. M., Eisenberg, D.: DIP,
the database of interacting proteins: A research tool for studying cellular networks
of protein interactions. Nucleic Acids Res. 30 (2002) 303-305
16. Deane, C. M., Salwinski, L., Xenarios, I., Eisenberg, D.: Protein interactions: Two
methods for assessment of the reliability of high throughput observations. Mol.
Cell. Proteomics 1 (2002) 349-356
17. Ravasz, E., Somera, A. L., Mongru, D. A., Oltvai, Z. N., Barab´
asi, A.-L.: Hierarchical organization of modularity in metabolic networks. Science 297 (2002)
1551-1555
18. Holme, P., Huss, M., Jeong, H.: Subnetwork hierarchies of biochemical pathways.
Bioinformatics 19 (2003) 532-538
19. Lee, T. I., Rinaldi, N. J., Robert, F., Odom, D. T., Bar-Joseph, Z., Gerber, G.
K., Hannett, N. M., Harbison, C. T., Thompson, C. M., Simon, I., Zeitlinger, J.,
Jennings, E. G., Murray, H. L., Gordon, D. B., Ren, B., Wyrick, J. J., Tagne,
J.-B., Volkert, T. L., Fraenkel, E., Giﬀord, D. K., Young, R. A.: Transcriptional
regulatory networks in Saccharomyces cerevisiae. Science 298 (2002) 799-804
20. Newman, M. E. J., Girvan, M.: Finding and evaluating community structure in
networks. e-print: cond-mat/0308217

