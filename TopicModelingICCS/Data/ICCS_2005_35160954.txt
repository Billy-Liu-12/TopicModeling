A Quick Generation Method of Sequence Pair
for Block Placement
Mingxu Huo and Koubao Ding
Dept. of Information and Electronic Engineering, Zhejiang University,
Hangzhou 310027, P.R. China
{huomingxu,dingkb}@zju.edu.cn

Abstract. Sequence Pair (SP) is an elegant representation for the block
placement of IC Design, and it is usually imperative to generate the SP from an
existing placement. A quick generation method and one concise algorithm are
proposed instead of the original unfeasible one. It is also shown that if the
relations of any two blocks are either vertical or horizontal, the solution space
size of a representation is (n!)2 if it is P*-admissible. The analytical and
experimental results of the algorithm both show its superiority in running time.

1 Introduction
With the rapid increase of IC complexity, floorplanning and block placement become
more important, where floorplanning can be regarded as placement with soft module
blocks. Most of such complex combinatorial optimization problems are NP-Hard [1],
and therefore heuristic approaches such as Simulated Annealing algorithms are
widely used to generate good layouts. The representation of geometrical topological
relations of blocks is one of the crucial factors in evaluating values of the cost
functions. Without some additional procedures, most representations proposed in the
literature usually cannot include optimal solution, while Sequence Pair (SP) [1], BSG
[2], TCG [3] and TCG-S [4] etc are P*-admissible representations [1, 4] that can
represent the most general floorplans and contain a complete structure for searching
an optimal solution. The original method to generate SP is named Gridding [1], which
is too complicated to be implemented. However, it is imperative to find an effective
and efficient approach to generate SP from arbitrary existing placement.

2 Generation Method
The topological relations of any two non-overlap module blocks are horizontal and
vertical, i.e., left to, right to, above and below [5]. Diagonal relations also exist, but
they can be simply degenerated by preferring horizontal relations to vertical ones, or
by adopting the relation definitions in [3]. An HV-Relation-Set (HVRS) for a set of
blocks is a set of horizontal or vertical relations for all block pairs [6], and a FeasibleHVRS involves all the block relations excluding the non-realizable ones.
A Sequence Pair (SP) is an ordered pair of sequences Γ+ and Γ-, each of which is a
sequence of n block names [1], e.g., in Fig. 1 is one of the possible placements of the
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 954 – 957, 2005.
© Springer-Verlag Berlin Heidelberg 2005

A Quick Generation Method of Sequence Pair for Block Placement

955

apte circuit from MCNC benchmark 1 circuits, the SP from which is (Γ+, Γ-) =
(670185423, 120634785). A sequence pair corresponds to a Feasible-HVRS.

Fig. 1. A placement of the apte MCNC benchmark circuit. Its SP is (670185423, 120634785)

A generation plane is an infinite plane with numerous different positions. All
blocks are treated as symbol points, each of which will be embedded in one unique
position in the generation plane according to the Feasible-HVRS, and each embedded
symbol point introduces two slope lines crossing at the symbol point, as in Fig. 2(a).
The totality of all the slope lines introduced by embedded symbol points is an oblique
grid, which divide the generation plane into different positions (Fig. 2(b)).
AA
RA

5

ABOVE
AL
RIGHT

LEFT

bi

bj

bi

LL

4

0

4

3
0

RB

BL

bk

BELOW
BB

(a)

5

RR

RL

(b)

1

2

3

(c)

2
1

(d)

Fig. 2. The generation plane. (a) divided into 4 positions by bi (b) 9 positions by bi and bj, 16
positions after bk embedded (c) oblique grid after 6 symbols embedded (d) after rotated by –45
degree. The SP of these six blocks is (051423,120345)

Take an arbitrary order of the n blocks, and then embed them orderly. For blocks bi
and bj, bj must be embedded in one of the 4 unique positions according to bi, named:
LEFT, BELOW, RIGHT and ABOVE (Fig. 2(a)), to satisfy their relation. Blocks
must satisfy their relations with all embedded ones by locating at a proper position.
When all blocks are embedded, there will be 2n lines and n2 intersection points.
The n symbol points locate on n of n2 intersection points, and no two symbols locate
on the same line simultaneously. Fig. 2(c) shows the generation plane after blocks 0
to 5 of Fig. 1 are embedded. As can be easily seen from Fig. 2(d), the sequences of
the block names in column (on the vertical lines) and in row (on horizontal lines) are
the Γ+ and Γ- of the Sequence Pair to be generated, respectively.
1

See: http://www.cse.ucsc.edu/research/surf/GSRC/MCNCbench.html

956

M. Huo and K. Ding

3 A Generation Algorithm
Make use of two linked list spx and spy to represent the Γ+ and Γ- respectively, and
generate spx and spy separately by inserting the block indices into the lists. The
relations according to their Feasible-HVRS define the orders of two blocks in the lists
respectively, and in either list, bi is before bk if bi is before bj and bj is before bk. The
following program section illustrates the construction of spx.
Construction of list spx in C++ (the block indices are 0,1,2,...,n-1)

spx.push_back(0);
//insert the first block
for(i = 1; i < n; ++ i ) {
//insert others orderly
for(posx = spx.begin(); posx != spx.end();++posx) {
j = *posx; r = relation(i,j); //check relations orderly
if(r == LEFT || r == ABOVE) { //found proper position
spx.insert(posx, i); break;
// insert and stop check
} } }
spx.push_back(i);
// append to list end
}

4 Analytical and Experimental Results
The relation of every two given blocks has four possibilities. Without loss of
generality, the block names to be embedded in sequence are assumed as 1, 2, 3, … n.
Before embedding the kth block, every position introduced by the k–1 embedded block
symbols is different from others, providing the proper number of unique positions.
Let pk denote the different ways for the kth block to be embedded, which is
evidently k2. This generation process comprises the sequence to embed blocks one by
one, so the total ways for the embedment of n blocks can be calculated by multiplying
all pk, and thus the solution space size of P*-admissible representations is (n!)2.
In general, it needs n(n-1)=O(n2) time complexity to determine the Feasible-HVRS
of n blocks. All the positions in the list can be assumed equiprobable, and thus the
average comparison times for inserting the block bk+1 into a list with k blocks is:

Ck +1 =

1 k
k
i=
∑
k + 1 i=0
2

(k = 0,1, 2,..., n − 1)

(1)

Replacing k + 1 with k, let Ck denote the average comparison times for the kth block,
the total average comparison times C to sum up is in Eq. (2). Although its complexity
is still O(n2), C in Eq. (2) is only a quarter of the former n(n-1) running time.
n

k −1 1
= n(n − 1)
2
4
k =1
n

C = ∑ Ck = ∑
k =1

(2)

Table 1 shows the running process of the algorithm to generate the spx from the
placement in Fig. 1. The count of comparisons is 20, approximating to a quarter of
n(n-1)=9*8=72. If complicated data structures employed, it will be much faster.

A Quick Generation Method of Sequence Pair for Block Placement

957

Table 1. Run of the algorithm after block 0 inserted in list spx. A, B, L and R stand for
relations between two blocks of Above, Below, Left to and Right to respectively

#
1
2
3
4

Comparisons
B0
B0, R1,
R0, R1, R2
R0, R1, A2

List
01
012
0123
01423

#
5
6
7
8

Comparisons
R0, R1, A4
A0
R6, A0
R6, R7, R0, R1, L5

List
015423
6015423
67015423
670185423

Experiments on all the MCNC benchmarks are run repeatedly in comparison with
the generation routine from Parquet [7] on running time. Our results save average
91.5% time. And the more complex the circuit is, the more time is saved.

5 Conclusion
In this paper, we introduce a new method to generate Sequence Pair, and show on the
basis of the method that for any P*-admissible placement representation if it takes for
granted that every two blocks only have vertical and horizontal relations, the size of
its solution space should be as large as (n!)2. A quick generation algorithm is also
proposed according to the method to reduce the running time. Analytical and
experimental results of the algorithm both show its high performance.

References
1. Murata, H., et al., Rectangle-packing-based module placement. 1995 IEEE/ACM ICCAD.
Digest of Technical Papers, (1995):. 472-479.
2. Nakatake, S., et al., Module packing based on the BSG-structure and IC layout applications.
IEEE TCAD Of Integrated Circuits And Systems, (1998). 17(6): 519-530.
3. Jai-Ming, L. and C. Yao-Wen, TCG: a transitive closure graph-based representation for
non-slicing floorplans. Proceedings of the 38th DAC, (2001): 764-769.
4. Lin, J.M. and Y.W. Chang, TCG-S: Orthogonal coupling of P*-admissible representations
for general floorplans, in 39th DAC, Proceedings. (2002). 842-847.
5. Onodera, H., Y. Taniguchi, and K. Tamaru, Branch-and-bound placement for building
block layout. 28th ACM/IEEE DAC. Proceedings 1991, (1991): 433-439.
6. Murata, H., et al., A mapping from sequence-pair to rectangular dissection. Proceedings of
the ASP-DAC '97. 1997, (1997): 625-633.
7. Adya, S.N. and I.L. Markov, Fixed-outline floorplanning through better local search.
Proceedings 2001 IEEE ICCD: VLSI in Computers and Processors. 2001, (2001): 328-334.

