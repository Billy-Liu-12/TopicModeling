Procedia Computer
Science
Procedia Computer
001(2010)
1–9
Procedia
ComputerScience
Science
(2012)
607–615

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Supercomputer simulation of plasma electron heat conductivity
decrease due to relativistic electron beam relaxation 1
Aleksey Snytnikov1,∗
Institute of Computational Mathematics and Mathematical Geophysics SB RAS

Abstract
A 3D kinetic study of the relaxation processes caused by the propagation of an electron beam in high-temperature
plasma was carried out. This problem has two diﬀerent spatial scales: the plasma Debye length and the beam-plasma
interaction wavelength, that is some 10 or 100 times larger, thus one needs high-performance computing to observe the
two lengths at once. The mathematical model is built on the basis of the Particle-in-Cell (PIC) method. The algorithm
was parallelized by means of the mixed Lagrange-Eulerian domain decomposition. The parallelization eﬃciency is
presented as well as the performance of the program achieved with four diﬀerent clusters. The performance tests show
that it is necessary to provide a good memory bandwidth for the cluster if one wants to achieve good performance
on real physical problems. It is shown that the emergence of regions with small electron energy ﬂow observed in
computations is connected with the decrease of electron heat conductivity. Beam relaxation leads to electron heat
conductivity decrease by two or three orders of magnitude.
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: Parallel Computing, High-temperature plasma, PIC method, Fusion
PACS: 02.70.-c, 52.35.-g
1. Introduction
This work has been inspired by the eﬀect of anomalous heat conductivity observed at the GOL-3 facility in the
Budker Institute of Nuclear Physics [1]. The GOL-3 facility is a long open trap where the dense plasma is heated up in
a strong magnetic ﬁeld during the injection of the powerful relativistic electron beam of a microsecond duration. The
eﬀect is the decrease of the plasma electron heat conductivity by 100 or 1000 times compared to the classical value for
the plasma with the temperature and density observed in the experiment. Anomalous heat conductivity arises because
of the turbulence that is caused by the relaxation of the relativistic electron beam in the high-temperature Maxwellian
plasma. The physical problem is to deﬁne the origin and mechanism of the heat conductivity decrease. This is of
great importance for the fusion devices because the eﬀect of anomalous heat conductivity helps to heat the plasma and
1 Supported by RFBR under Grants 08-01-615 and 08-01-622, and also by the SB RAS Integration Projects 103 and 113, and by the Grant of
the President of Russian Federation for the support of young scientists number MK-3562.2009.9.
∗

Email address: snytav@ssd.sscc.ru (Aleksey Snytnikov )
author

1 Corresponding

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.065

608

/ Procedia Computer
Computer Science
A.A.V.Snytnikov
Snytnikov / Procedia
Science001 (2010)
(2012)1–9
607–615

2

also to conﬁne it. The problem of heat transport in fusion devices was widely discussed (e.g. [2, 3]) and some recent
works [4].
The novelty of the present work has two aspects: physical aspect and numerical aspect. From the physical point
of view, beam heating of the plasma was considered for a long time now, but the details of the process, namely the
parameters of the arising plasma instabilities are still unknown. The existing theory of the beam heating uses too many
approximations like strictly monochromatic beam, Maxwellian plasma etc. Our goal is to detemine the instabilities
and to evaluate their parameters. The numerical aspect of the novelty is that such problems are usually solved by
means of the direct Boltzmann equation solution (e.g. [5]). The PIC method is expected to give a better picture of the
turbulence and the underlying plasma instabilities, although it requres much more computational eﬀort, as pointed in
[2], in order to obtain a physically realistic picture.
This problem needs high-performance computing because of the necessity to have a large enough grid to simulate
the resonance interaction of the relativistic electron beam with plasma. The beam interacts with the plasma through
the electric ﬁeld (similar to Landau damping), thus it is necessary to observe simultaneosly two diﬀerent scales. The
ﬁrst is the plasma Debye length and the second is the beam-plasma interaction wavelength, which is 10 or 100 times
larger than the Debye length. Since one must provide at least 8 grid cells at the Debye length, it is possible to estimate
the size of the grid.
It is also necessary to provide a large number of superparticles for each cell of the grid for the simulation of
turbulence. The level of non-physical statistical ﬂuctuations is inversely proportional to the number of superparticles
per cell. So if there are too few superparticles, all the physical plasma waves and oscillations will be supressed by
non-physical noise.
This work also aims at more eﬃcient use of cluster supercomputers. In order to achieve this goal it is necessary
to evaluate their performance with some programs solving real physical problems. It would be incorrect to limit
performance testing to the general purpose tests like the LinPack package since there is a dramatic diﬀerence between
the performance of the cluster declared in Top500 list [6] (either peak or LinPack performance) and the performance
achieved by a particular user with his particular program. For example, if one employs one fourth of a cluster with
peak performance of 5.4 TeraFlOp/S (1 TeraFlOp/S is 1012 ﬂoating point operations per second), the peak performance
should be near 1 TeraFlOp/S. But in fact with the program simulating the beam relaxation in plasma described above
only 0.18 TeraFlOp/S was obtained. The diﬀerence between the declared and achieved performance is not only
because of the features of the program, but also because cluster systems are not ﬁt for this kind of problems.
2. Model description
2.1. Basic equations
The mathematical model employed for the solution of the problem of beam relaxation in plasma consists of the
Vlasov equations for ion and electron components of the plasma and also of the Maxwell equation system. These
equations in the usual notation have the following form:
∂ fi,e
∂ fi,e
∂ fi,e
+v
+ Fi,e
= 0,
∂t
∂r
∂p
rot B =

1
Fi,e = qi,e E + [v, B]
c

4π
1 ∂E
j+
c
c ∂t

rot E = −

1 ∂B
c ∂t

(1)

divE = 4πρ
div B = 0
In the present work this equation system is solved by the method described in [8]. All the equations will be further
given in the non-dimensional form. The following basic quantities are used for the transition to the non-dimensinal
form:

A.V.Snytnikov
/ Procedia
Computer
Science
00 (2010)
1–9
A. Snytnikov
/ Procedia
Computer
Science
1 (2012)
607–615

3
609

• characteristic velocity is the velocity of light v˜ = c = 3 × 1010 cm/sec
• characteristic plasma density n˜ = 1014 cm−3
• characteristic time t˜ is the plasma period (a value inverse to the electron plasma frequency) t˜ = ω−1
=
p
4πn0 e2
me

−0.5

= 5.3 × 10−12 sec

The Vlasov equations are solved by the PIC method. This method implies the solution of the equation of movement
for model particles, or superparticles. The quantities with the subscript i are related to ions and with the subscript e to
electrons.
∂pe
= − E + [ve , B]
∂t
∂pi
= κ E + [vi , B]
∂t
√
∂ri,e
me
= vi,e ,
κ=
,
pi,e = γvi,e , γ−1 = 1 − v2
∂t
mi
The leapfrog scheme is employed to solve these equations.
⎛
⎤⎞
⎡ m+1/2
m−1/2
⎜⎜⎜
⎥⎥⎥⎟⎟⎟
⎢⎢⎢ vi,e
pm+1/2
− pm−1/2
− vi,e
i,e
i,e
= qi ⎜⎜⎝⎜E m + ⎢⎢⎣⎢
, Bm ⎥⎥⎥⎦⎟⎟⎟⎠
τ
2
m+1
m
− ri,e
ri,e

= vm+1/2
,
i,e
τ
here τ is the timestep. The scheme proposed by Langdon and Lasinski is used to obtain the values of electric and
magnetic ﬁelds. The scheme employs the ﬁnite-diﬀerence form of the Faradey and Ampere laws. A detailed decsription of the scheme can be found in [8]. The scheme gives the second order of approximation with respect to space and
time.
2.2. Problem statement
Let us consider the following problem statement. The 3D computational domain has the shape of a cube with the
following dimensions:
0 ≤ y ≤ LY ,
0 ≤ z ≤ LZ
0 ≤ x ≤ LX ,

Within this domain there is the model plasma. The model plasma particles (the superparticles) are distributed uniformly within the domain. The density of plasma is set by the user as well as the electron temperature. The temperature
of ions is considered to be zero. Beam electrons are also uniformly distributed along the domain. Thus the beam is
considered to be already present in the plasma, and the eﬀects that occur while the beam is entering the plasma, are
beyond the scope of the study.
The superparticles simulating beam electrons diﬀer from those simulating plasma electrons by the value of their
energy. Beam electrons initially have the energy of about 1 MeV, and the plasma electrons have the energy of about
1 keV. Moreover, beam electrons have one direction of movement strictly along the X axis, and plasma electron have
the Maxwellian velocity distribution for all the three dimensions.
There is one more diﬀerence between the superparticles simulating beam electrons and plasma electrons. They
have diﬀerent weights at the computation of current and charge density. Let us consider the ratio of beam density
to plasma density, α (usually α varies from 10−3 to 10−6 ), then the contribution of a beam electron superparticle is
α from the contribution of a plasma electron superparticle. In such a way it is possible to provide a large number of
beam superparticles.
The main physical parameters of the problem under study are the following: the density and the temperature of
the plasma electrons, the ratio of beam density to the plasma density and the energy of the beam.

/ Procedia Computer
Computer Science
A.A.V.Snytnikov
Snytnikov / Procedia
Science001 (2010)
(2012)1–9
607–615

610

4

3. Parallel implementation
The program was parallelized by the domain decomposition method. The computational domain is divided into
parts along the direction orthogonal to the direction of the beam (along the Y axis, the beam moving along the
X axis). The computational grid in the whole domain is divided into equal parts (subdomains) along the Y axis.
Each subdomain is assigned to a group of processors (in the case of a multicore system a single core would be
called a processor, since no hybrid parallelization like MPI+OpenMP is employed, just mere MPI). Furthermore, the
superparticles of each subdomain are distributed uniformly between processors of the group with no regard to their
position, as it is shown in Figure 1.

Figure 1: The scheme of domain decomposition. The computational domain is divided into 4 subdomains. The superparticles of each subdomain
are distrubuted between four processors uniformly with no regard to their position. Diﬀerent symbols (circle, square, diamond, star) denote
superparticles belonging to diﬀerent processors in the same subdomain.

Every processor in the group solves the Maxwell equations in the whole subdomain, and exchanges boundary values of the ﬁelds with processors assigned to adjacent subdomains. Then the movement equations for the superparticles
are solved, and the 3D matrix of the current density and the charge density are evaluated by each processor. But since
the processor has only a part of the superparticles located inside the subdomain, it is necessary to sum the matrices
through all the processors of the group to obtain the whole current density matrix in the subdomain. Interprocessor
data exchange is performed by the MPI subroutines.
3.1. Parallelization eﬃciency
The parallel program was developed primarily for the simulation of beam interaction with plasma on large computational grids and with large numbers of superparticles. That is why parallelization eﬃciency was computed in the
following way.
T 2 N1 S 2
×
×
× 100%
(2)
k=
T 1 N2 S 1
here T 1 - is the computation time with N1 processors, T 2 is the computation time with N2 processors, S is the characteristic size of the problem in each case. Here the characteristic size is the grid size along the X axis. In this section the
characteristic size S is proportional to the number of processors N. It means that the workload of a single processor
is constant. The purpose of such a deﬁnition of eﬃciency is to ﬁnd out what the communication overhead is when the
number of processors is increased with the constant workload for each processor. In the ideal case the computation
time must remain the same (the ideal k = 100%). In the computations devoted to eﬃciency evaluation the X axis grid
size only was increased, all the other parameters remained constant, the results are shown in ﬁgure 2.
3.2. Cluster perfomance comparison
Every timestep consists of the following procedures:
• Computation of electric and magnetic ﬁelds
• Computation of the movement of superparticles

A.V.Snytnikov
/ Procedia
Computer
Science
00 (2010)
1–9
A. Snytnikov
/ Procedia
Computer
Science
1 (2012)
607–615

5
611

Figure 2: Parallelization eﬃciency measured with cluster named MVS-100K, Joint Supercomputer Centre of the RAS. The grid size along Y and
Z is 64 nodes, grid size along X is equal to the number of processors, 150 superparticles per cell for all the cases.

• Evaluation of the new values of current and charge density
In addition during selected timesteps (usually one timestep from a hundred) the physical data are ﬁled for future
analysis. The most important part of the data are the Fourier transforms of main physical quantities (current and
charge densities, absolute values of electric and magnetic ﬁelds)
The worktime of the above listed procedures was measured with the GnuProf (gprof) proﬁler. In each case the
worktime of a single procedure call is given.
The program was tested with four cluster supercomputers. The ﬁrst is installed in Tomsk State University. It has
564 2xXeon 5150 processors and is called SKIF Cyberia. In 2007 SKIF Cyberia was number 199 in Top-500 list.
SKIF is the name of the Joint Belorussian-Russian Supercomputer Program [7]. The second is the most powerful
in Russia (by the moment the proﬁles were obtained) and number 38 in the world MVS-100K. It is installed in the
Joint Supercomputer Center and is equipped with diﬀerent Xeon Processors. Most of them are 4xXeon E5450 and
the total number of cores is 7920. The third one is called the SKIF MSU. It is installed in the Research Computing
Center of Moscow State University. It has 1250 processors (mostly 2xXeon E5472) and it is number 103 according
to the Top-500 list. The forth cluster is installed in the Novosibirsk State University, so it will be called here the NSU
cluster. It is equipped with 2xXeon 5355 processors with the total number of cores 512. A more detailed description
for these clusters could be found at http://supercomputers.ru (the list of most powerful supercomputers in Russia), and
for MVS-100K and SKIF MSU also at http://top500.org. All the clusters are equipped with similar processors, but
with diﬀerent network, and this results in a dramatic performance diﬀerence.
3.2.1. Particle movement computation and memory bandwidth
In order to evaluate the new values of position and impulse of a superparticle it is necessary to know the values of
electric and magnetic ﬁelds at the present position of the superparticle. Each of the three components of the ﬁeld is
stored in a separate 3D array. In such a way six 3D arrays are accessed at each timestep for each superparticle. Since
the superparticles are situated randomly in the subdomain, the access to the arrays is also unordered. It means that
the use of the cache memory can not reduce the computation time. If a part of the ﬁeld array was fetched to the cache
while computing with a superparticle, it would be impossible to use this part of the ﬁeld array for computation with
the next superparticle, because it is (most likely) situated in a completely diﬀerent part of the subdomain.
Since the cache memory can not store all the six arrays for ﬁelds, one has to access the RAM for computation of
the superparticle movement. And since the speed of the processor is usually much faster than the memory bandwidth,

612

/ Procedia Computer
Computer Science
A.A.V.Snytnikov
Snytnikov / Procedia
Science001 (2010)
(2012)1–9
607–615

6

it is the memory bandwidth that determines the speed of the computation with superparticles and the performance of
the program as a whole (superparticles take over 60% of the total time). The ﬁgure 3 shows the time of computation
with superparticles during one timestep.
The conclusion of the major inﬂunce of the memory bandwidth on the superparticle computation time is conﬁrmed
by the comparison of the times obtained with the MVS-100K and the SKIF MSU clusters. Both clusters are equipped
with similar processors, thus the resulting time diﬀerence (almost twofold) can only be explained by the diﬀerence of
the memory bandwidth.

Figure 3: The worktime for the procedure of superparticle movement computation. The test computations were conducted with the SKIF Cyberia,
the MVS-100K, the SKIF MSU and the NSU cluster.

The Figure 3 also shows that there are opportunities for performance optimization. One of the possible ways is
to sort supersuperparticles along their position to enable the eﬃcient use of cache memory. The computation with
supersuperparticles takes the most time (from 92 % with the SKIF Cyberia up to 64 % with the SKIF MSU). This is
the part of the program that is parallelized with the highest eﬃciency. So the optimization of this procedure might
spoil the parallelization eﬃciency, but the decrease of the total time appears to be more important.
3.2.2. Fourier transform and computation speed
In order to separate the computation time from the memory access time in the Figure 4 Fourier transform procedure
is considered. This procedure take 1D complex array with the size of either 512 or 64 as the input and performs the
fast Fourier Transform. All the local variables of this procedure ﬁt well in the cache memory. In such a way, with the
example of this procedure one can measure the speed of the ”fast” computation, with no access to the RAM, using
only cache memory.
3.2.3. Superparticle transfer and interprocessor commmunication speed
The speed of interprocessor communication was measured by way of example of the procedure implementing the
transfer of supersuperparticles between processors. This procedure involves the search for supersuperparticles that
have ﬂown out of the subdomain and that are now situated in the additional buﬀer layer. These superparticles are
then excluded from the superparticle array and put into the transfer buﬀer. Next the buﬀers are transmitted to the
processors assigned to adjacent subdomains. If the rank of the current subdomain is even, the superparticles are ﬁrst
transmitted ”to the left”, that is, to the subdomain with the Y coordinates lower than in the current subdomain, and
then ”to the right”. If the number of the current subdomain is odd, exact the opposite happens - ﬁrst to the right, and
then to the left. Consequently the time shown in fugure 5 includes the search through the list of superparticles and
four transmitting operations MPI SendRecv.

A.V.Snytnikov
/ Procedia
Computer
Science
00 (2010)
1–9
A. Snytnikov
/ Procedia
Computer
Science
1 (2012)
607–615

7
613

Figure 4: The worktime for the procedure implementing 1D Fast Fourier Transform. The test computations were conducted with the SKIF Cyberia,
the MVS-100K, the SKIF MSU and the NSU cluster.

The number of superparticles being transmitted cannot be large due to physical considerations. In plasma physics
no large diﬀerences in density may occur within the Debye length, 10 % being a large diﬀerence in this case. The
Debye length, as pointed above, must be not less than 8 grid cells for the correct simulation of wave dynamics. With
the grid size of 512×64×64 nodes, and the domain being divided into 32 subdomains, the width of a subdomain along
the Y axis is just 2 cells. Thus the densities in adjacent subdomains may not diﬀer by more than 10 % It means that if
superparticle ﬂux from one processor to another suddenly occur to be large, the computation is physically incorrect.
In such a way it is possible to set the size of the transfer buﬀer to 5% of the size of the superparticle array, the number
of superparticles sent being usually much less.
Figure 5 shows that minimal time for transfer is being waste with the SKIF Cyberia and the SKIF MSU. The
possible cause is the ServNet technology installed on the SKIF machines [7]. The maximal time is waste for transfer
with the MVS-100K. This is probably because of the large size and heterogenous nature of this supercomputer.
4. Electron heat conductivity in computational experiments
In order to simulate the interacton of the electron beam with plasma the following values of the main physical
parameters were set:
• electron temperature of 1 KeV
• the mass of ion 1836 electron masses (hydrogene ions)
• plasma density of 1017 cm−3
• the ratio of beam density to plasma density of 10−3
• beam energy of 1 MeV
• the size of the domain of LX = 0.065 cm and LY = LZ = 0.008 cm.
• grid size of 512 × 64 × 64 nodes, 150 superparticles per cell

614

/ Procedia Computer
Computer Science
A.A.V.Snytnikov
Snytnikov / Procedia
Science001 (2010)
(2012)1–9
607–615

8

Figure 5: The worktime for the procedure of particle transfer. The test computations were conducted with the SKIF Cyberia, the MVS-100K, the
SKIF MSU and the NSU cluster.

Figure 6: Electron density contours in the XY plane, z = LZ /2, moment of time t = 91.7 (in terms of the plasma period). The density is given in
terms of the initial values of density.

A density modulation was observed in the computational experiments. The amplitude of the modulation is 220
% of the initial value of density. Modulation in this case means the emergence of regions with very high or very
low density in the previously uniform-density plasma as it is shown in Figure 6. It is seen in Figure 6 that the density
becomes non-uniform not only along the direction of the beam (the X axis), but also along the Y axis. Thus the density
is modulated not along X, that seems quite natural, but also along Y and Z. It corresponds the physics of the process
well, because it is known that the waves propagating in plasma due to beam relaxation have all the three components
of wave-vector as non-zeros.
Moreover, it was found out that the movement of beam electrons becomes eddy as a result of the beam interaction
with plasma. At the initial moment of time all the beam electrons have the same velocity strictly along the X axis. It
results in the eddy structure of the electron heat ﬂux
q(x, y) = T e (x, y, LZ /2)ve (x, y, LZ /2)
The electron heat ﬂux aloso gains modulations along X and Y. Moreover, there are regions with very low value of
the electron heat ﬂux as it is shown in Figure 7 (less than 1 % of the initial electron heat ﬂux). It means that only in
small and isolated regions the value of electron heat ﬂux is close to initial value, but generally in the computational
domain the electron heat ﬂux is very low. Thus the domain as a whole has very low heat conductivity after the beam
relaxation.

A.V.Snytnikov
/ Procedia
Computer
Science
00 (2010)
1–9
A. Snytnikov
/ Procedia
Computer
Science
1 (2012)
607–615

9
615

Figure 7: Electron heat ﬂux contours in the XY plane, z = LZ /2, moment of time t = 91.7 (in terms of the plasma period). The ﬂux is given in
terms of the initial values of the electron heat ﬂux.

5. Conclusion
The parallel implementation of the numerical model of the interaction of the electron beam with plasma is described, and the parallel eﬃciency is presented. The worktime of the program has been measured on various clusters
and analyzed. It was found out that the memory bandwidth of the cluster is the most important feature for the PIC
programs to achieve good performance. For the present program it has been shown that there are great oppurtunities
for the optimization and the decrease of computation time.
It is necessary to underline that for the grid with a small number of nodes or with a small number of superparticles
per cell there is no resonance interaction between the beam and the plasma, and the physical eﬀect of heat conductivity
decrease is not observed. Thus high performance computing is essentially necessary to solve the present problem.
References
[1] V.T.Astrelin,A.V.Burdakov,V.V.Postupaev. Generation of Ion-Acoustic Waves and Suppresion of Heat Transport during Plasma Heating by
an Electron Beam. Plasma Physics Reports. Vol24, No. 5 pp.414-425.
[2] B. I. Cohen, D. C. Barnes, J. M. Dawson, G. W. Hammett, W. W. Lee, G. D. Kerbel, J. -N. Leboeuf, P. C. Liewer, T. Tajima, R. E. Waltz
The numerical tokamak project: simulation of turbulent transport. Computer Physics Communications, Volume 87, Issues 1-2, 2 May 1995,
Pages 1-15
[3] A. Jaun, K. Appert, J. Vaclavik, L. Villard. Global waves in resistive and hot tokamak plasmas. Computer Physics Communications, Volume
92, Issues 2-3, December 1995, Pages 153-187
[4] J.-L. Gardarein, R.Reichle, F.Rigollet, C. Le Niliot, C. Pochea Calculation of heat ﬂux and evolution of equivalent thermal contact resistance
of carbon deposits on Tore Supra neutralizer Fusion Engineering and Design, Volume 83, Issues 5-6, October 2008, Pages 759-765
[5] J. C. Wright, P. T. Bonoli, E. D’Azevedo, M. Brambilla. Ultrahigh resolution simulations of mode converted ion cyclotron waves and lower
hybrid waves. Computer Physics Communications, Volume 164, Issues 1-3, 1-15 December 2004, Pages 330-335
[6] TOP500 Supercomputing Sites. - http://www.top500.org.
[7] ”SKIF” - Joint Belorussian-Russian Program. - http://www.skif.bas-net.by/index en.htm.
[8] Vshivkov V.A., Grigoryev Yu.N.,Fedoruk M.P. Numerical ”Particle-in-Cell” Methods. Theory and applications VSP, Utrecht-Boston, 249 p.,
2002.
[9] N.Krall, A.Trivelpiece. Principles of plasma physics, McGraw-Hill, 1973.
[10] Bidsall Ch., Langdon B. Plasma Physics via Computer Simulation. — McGraw-Hill, 1985.

