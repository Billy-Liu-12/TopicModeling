Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1782–1787

Memristor as an archetype of dynamic data-driven systems and
applications to sensor networks
Giovanni E. Pazienza and Robert Kozma
Center for Large-Scale Integration, Optimization, and Networks CLION, Department of Mathematical Sciences, University of Memphis, TN
{g.pazienza,rkozma}@memphis.edu. GE Pazienza is also with Pazmany University, Budapest.

Abstract
Since its introduction a decade ago, DDDAS has been applied to a wide range of science and technology ﬁelds,
with speciﬁc focus of areas requiring fast and reliable processing of massive data streams from diverse resources. It
is crucial to explore architectures and systems which are naturally suited to the DDDAS framework. In this paper,
we show that the memristor – the fourth fundamental two-terminal passive circuit element alongside the well-known
resistor, capacitor, and inductor – aﬀords the eﬃcient implementation of the working principles of DDDAS. Hence
memristors can be considered as an archetype of DDDAS nanoscale hardware embodiment, being the smallest and
most basic dynamic data driven application system. Memristors are electrical components with inherent memory
processes; they have been predicted about four decade ago and have been physically implemented recently. We
discuss the role that DDDAS may play in the development of computing platforms and sensor networks based on
memristors in the next few years.
Keywords: DDDAS, Memristor, Sensor Networks

1. Introduction
Dynamic data driven application system (DDDAS) has been introduced as a general paradigm to incorporate
additional data into an executing application and, at the same time, allow the application to dynamically adapt to the
incoming data ﬂow. Since its introduction, DDDAS has been employed in numerous contexts, especially in problems
involving large-scale networks, such as supply-chain, energy infrastructure, transportation [1] with massive amount
of data streams [2]. Important examples of DDDAS are advanced measurement and instrumentation in adaptive
sensor networks. An autonomous sensor network is a collection of sensor nodes with limited processing, power, and
communication capabilities that monitor a real world environment through diﬀering modalities. The nodes gather
information about the local environment, preprocess the data, and transmit the output to other nodes. Using intelligent
framework design, the network can support decision making and realize complex tasks. As a matter of fact, this
interactive and adaptive sensor system are an example of Dynamic Data Driven Applications Systems.
All these scenarios refer to large-scale systems. At the same time, it is interesting to consider potential components
of such systems and study how they exhibit the basic properties of DDDAS paradigm. In this paper, we discuss the
possibility for the memristor [3], the fourth fundamental two-terminal passive circuit element, to be considered as an
archetype of DDDAS at a small scale, since the current technologies allow it to be manufactured at nanoscale. The
memristor has the characteristics of a non-linear resistor with memory, in the sense that its resistance is a function
of the charge that has ﬂowed through the device and its practical signiﬁcance became evident in 2008 when HP
1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.193

Giovanni E. Pazienza and Robert Kozma / Procedia Computer Science 4 (2011) 1782–1787
/

p

(

1783

)

made public its work [4], which attracted the attention of the scientiﬁc community. Such capabilities entail dynamic
integration of the computational and measurement aspects of an application in a dynamic feed-back-loop.
The present paper is structured as follows: ﬁrst, we describe the basic features of memristor and its working
principles; then, we provide basic basic examples of how memristor could be studied in the framework of DDDAS;
last, we outline the perspectives of integrating memristor-based systems into large-scale sensor networks.
2. Fundaments of memristor
The memristor was introduced through an ‘axiomatic approach’ [3] which deﬁnes four fundamental circuit variables – voltage v, current i, charge q, and ﬂux φ – and describes the two-terminal circuit elements as relationships
between two of the four variables. There are six independent permutations of two objects in a bank of four, and hence
there must be six ways to link v, i, q, φ: two of them correspond to the deﬁnitions of current (Eq. 1) and the Faraday’s
law (Eq. 2) whereas the other three correspond to the canonical circuit elements (Eqs. 3, 4, and 5). For the sake of
completeness, Eq. 6 has to correspond to a fourth fundamental two-terminal circuit element: the memristor.
Deﬁnition of current:
Deﬁnition of voltage:
Resistor:
Capacitor:
Inductor:
Memristor:

dq = idt
dφ = vdt
dv = Rdi
dq = Cdv
dφ = Ldi

(1)
(2)
(3)
(4)
(5)

dφ = Mdq

(6)

From this equation, it is clear that when the memristance M is not a function of q, the memristor behaves like a resistor. Since the memristance M depends on the charge, the element retains a memory of the past events of the input
current. It is possible to prove [5] that all devices are characterized by the fact of displaying a pinched hysteresis loop
in the current-voltage characteristic, as shown in Fig. 1, are memristors, and vice versa.

Figure 1: A pinched hysteresis loop in the current-voltage characteristic is the hallmark of memristors.

The working principles of the memristor can be better understood through an analogy with mechanical devices
proposed in [6] and [7], and reported in Fig. 2. This device is composed of a dashpot cylinder with a tapered friction
rod attached at a certain distance from the dashpot enclosure and a piston to which is attached a thick rubber disc.
The diameter of ﬂexible rubber sleeve varies with the penetration of the piston d and hence the force needed to push
the piston further is a function of d. In other words, the incremental resistance depends on the instantaneous piston
displacement. This situation is analogue to the one of a resistor whose resistance depends on the charge ﬂown, as it
can be easily found by integrating Eq. (6) over time. It is then reasonable to model the dashpot-piston system as a
memristor [6].

1784

Giovanni E. Pazienza and Robert Kozma / Procedia Computer Science 4 (2011) 1782–1787
/

p

(

)

Figure 2: Mechanical equivalent of a memristor.

3. A DDDAS perspective of memristor
From the description above, it is evident that in general the memristor can be described as a basic circuit element that adapts to the continuos ﬂow of data. This characteristic, among others, indicate that the memristor may
be a breakthrough in the ﬁeld of artiﬁcial intelligence [8]. Memristors can model basic neurophysiological processes
including the sodium-potassium pumps in a very eﬃcient way; memristive devices on the nanoscale can implement
models of synapsis and in this way realize neuromorphic systems [9]. Recent research about the fabrication of memristive crossbar structures support these claims [10] (see Fig. 3). This implies that the memristor may soon become a

Figure 3: Schematic illustration of the potential link between memristor and synapses: (a) illustration of synaptic connection; (b) memristor
crossbar structure [10].

key element to implement genuine biologically-inspired systems composed of myriads of simple elements that weakly
interact to produce a coherent, goal-oriented behavior at the level of the overall network. At a much larger scale, these
properties are sought by DDDAS. Therefore, it is expected that the experience gained from memristive technology
can be used to advance full-scale DDDAS, including intelligent sensor systems and distributed data processing.
4. Discussion and Conclusions
4.1. The role of memristor in decision support based on DDDAS
Memristors are expected to ﬁnd a quick application in a broad range of ﬁelds, both defense and civilian, which need
a continuously adaptive computational platform. In rapidly changing, dynamic scenarios, seamless interoperability
of components of distributed systems is imperative to achieve reliable assessment of the operational environment
to support strategic decision-making. Speciﬁc constraints include limitations in time and resources imposed by the
unpredictable events. Due to the complexity of the operation, this requires multi-sensor fusion of often contradictory
pieces of information. Data are processed from high-dimensional, heterogeneous sensor resources, coming from
multiple platforms. Decisions must be made between various potential scenarios. Knowledge-based systems are
critical for robust decision making. Decision entities that are more knowledgeable will be able to approach problems
in ways that less knowledgeable entities cannot. Moreover, decision-making processes no longer need focus on the
passive oriented approaches, rather they can focus instead on being proactive and agile [11].

Giovanni E. Pazienza and Robert Kozma / Procedia Computer Science 4 (2011) 1782–1787

1785

DDDAS techniques include data acquisition, pattern recognition and classiﬁcation, data fusion from multi-modal
sensors, mobile platforms navigation and control in hostile environment, and the reliable detection and characterization of events [12]. Distributed decision support systems are in high demand in a wide range of application areas
where massive streams of data from diverse sources must be rapidly combined to support rapid response and control.
It is especially challenging to develop systems capable of continuously adapting the decisions in complex and changing conditions in the monitored system and in its environment. Lessons learned from human cognitive processing can
be very beneﬁcial in developing decision support systems, to improve their reliability and speed of operation.
4.2. Example of network-centric scenario
Net-centric approach to information fusion is an excellent example of a ﬁeld which can beneﬁt from our ideas in
DDDAS. Net-centric approach emphasizes the interaction and complementary aspects of the components of a monitoring and surveillance system, as opposed to the fragmented nature of the operation resulting from a more traditional,
platform-centric model. There is clear evidence of the beneﬁts from heightened situational awareness and real-time
response in net-centric operations. In future battle spaces, vast numbers of sensors and unmanned vehicles will be in
simultaneous use, each with diﬀerent sensing capabilities providing disparate views of the operations [11] [12]. Networked operations indicate a drastic change from passive, reactive data collections to proactive, anticipating mode of
sensing. Mission-oriented active sensing provides the user with actionable information, which has a speciﬁc meaning
in the context of its speciﬁc task and increases its situational awareness. Interconnected agents with increased situational awareness are able to coordinate their operation for more eﬃcient collective eﬀect. The main characteristics of
network centric approach are summarized in Fig. 4 [11], which includes three major domains of the warfare: physical,
information, and cognitive. The intersection of physical and information domain signiﬁes the speed and access of the
employed force, and this reﬂects a traditional view on operations. By considering the cognitive domain as a key aspect
of warfare, additional important components can be identiﬁed. At the interlay of cognitive and physical domains lies
the deployment and operation of the weaponry by the ﬁghter. Finally, considering the interface of cognitive and information domains, the meaning of the obtained sensory information comes into play and its relevance to the mission
command. Net-centric warfare includes all three major aspects, requiring simultaneous processing of multiple streams
of diverse data.

Figure 4: Conceptual view of major components of the net-centric operation paradigm, in a warfare scenario [11].

Figure 5 shows an example of net-centric approach in the case of networks of autonomous sensor agents. In
general we have N agents, each of which has its dedicated inputs and corresponding low-level task. The system has
the following components:
• Preprocessor: Input compression, normalization, units B1, B2, . . ., BN.
• Classiﬁer: Identiﬁcation/recognition of data, C1, C2, . . ., CN;
• Comparator: Low-level decision making, D1, D2, . . ., DN;

1786

Giovanni E. Pazienza and Robert Kozma / Procedia Computer Science 4 (2011) 1782–1787

• Controller: Achieve dynamical (chaotic) balance, E1, E2, . . ., EN;
• Extractor of common modes (EC): Detect covariant oscillations in separate KIII sets.
The preprocessor, classiﬁer, comparator, and controller modules perform tasks belonging to the individual agents.
The extractor module (EC) is privileged with connections to all N agents through connection to the comparator units.
EC has a crucial high-level function (KIV), i.e., it extracts the coherent components from the individual agents. The
coherent component can be very small, typically < 1%. However, this small covariant fraction of the signals indicates
the high-level interaction in the network. EC makes the decision based on the covariant component, as it is manifested
through the intermittent phase transitions [13].
The deﬁning feature of the multi-layer sensor fusion and decision support is the high-level operation of constructing an image of a future state of itself in relation to its environment and its goal. The system generates nested frames
of actions to be taken step-by-step, as well as serial predictions of the frames of multi-sensory inputs. Its advance
in each serial step is conditional on conformance of predicted and actual frames within the limits of abstraction and
generalization. Past experiences are stored in the connectivity matrices of the component layers. These matrices store
the perceptual consequences of the intentional actions taken earlier, which constitute all what the agent can ’know’
about the environment. The resulting sensory fusion approach serves as a prototype of future cognitively-motivated
decision support systems.

Figure 5: Schematic view of the decision making algorithm in the network of N agents. The notations in the case of the i-th agent are: Bi
preprocessor, Ci classiﬁer, Di comparator, Ei controller. EC denotes the entorhinal cortex model, which performs the overall decision-making. Bi
unit is a KI set; Ci, Di, Ei, are KII sets and together they comprise the i-th KIII set. The EC in cooperation with the D1, D2, , DN sets represents
the high-level KIV behavior with intermittent phase transitions.

4.3. Conclusions and future perspectives
In an environment subject to sudden changes data must be processed from high-dimensional, heterogeneous sensor
resources, and multiple platforms. In this scenario, decision support based on DDDAS may provide a quick and
eﬀective response. Due to the complexity of the operation, this requires integration of often contradictory information.
In this paper, we outlined the basic principles of memristive systems, which can be seen as a basic component for
DDDAS. We also presented an example of network-centric approaches, which shape advanced command and control
approaches. Our approach develops a novel memristor-based decision support system, by which information is not
passively received but actively predicted and anticipated. Assigned goals and guidelines serve as constraints in the
knowledge-base available a priori for the system. The adaptive memristor-based mechanism can serve as an essential
component to implement DDDAS, and it helps to interpret and understand the observed data.

Giovanni E. Pazienza and Robert Kozma / Procedia Computer Science 4 (2011) 1782–1787

1787

Acknowledgments
This research has been supported in part by research grant of the FedEx Institute of Technology, the University of
Memphis and by Air Force Oﬃce of Scientiﬁc Research (AFOSR/NL). The authors acknowledge the contribution by
J. Albo-Canals.
References
[1] C. Douglas, Dynamic Data Driven Applications Systems–DDDAS 2009, Computational Science–ICCS 2009 (2009) 445–446.
[2] G. Madey, A. Barab´asi, N. Chawla, M. Gonzalez, D. Hachen, B. Lantz, A. Pawling, T. Schoenharl, G. Szab´o, P. Wang, et al., Enhanced
situational awareness: Application of DDDAS concepts to emergency and disaster management, Computational Science–ICCS 2007 (2007)
1090–1097.
[3] L. Chua, Memristor-the missing circuit element, Circuit Theory, IEEE Transactions on 18 (5) (1971) 507 – 519.
doi:10.1109/TCT.1971.1083337.
[4] D. B. Strukov, G. S. Snider, D. R. Stewart, R. S. Williams, The missing memristor found, Nature (453) (2008) 80–83.
[5] L. Chua, S. M. Kang, Memristive devices and systems, Proceedings of the IEEE 64 (2) (1976) 209 – 223. doi:10.1109/PROC.1976.10092.
[6] G. F. Oster, D. M. Auslander, The memristor: A new bond graph element, Journal of Dynamic Systems, Measurement, and Control 94 (3)
(1972) 249–252. doi:10.1115/1.3426595.
URL http://link.aip.org/link/?JDS/94/249/1
[7] G. Oster, A note on memristors, Circuits and Systems, IEEE Transactions on 21 (1) (1974) 152 – 152. doi:10.1109/TCS.1974.1083778.
[8] M. Versace, B. Chandler, The brain of a new machine, Spectrum, IEEE 47 (12) (2010) 30–37.
[9] R. Johnson, Will memristors prove irresistible?, Electronic Engineering Times.
[10] S. Jo, T. Chang, I. Ebong, B. Bhadviya, P. Mazumder, W. Lu, Nanoscale memristor device as synapse in neuromorphic systems, Nano letters
10 (4) (2010) 1297–1301.
[11] N. Sweet, S. Kanefsky, E. S. C. H. A. MA, The C2 Constellation A US Air Force Network Centric Warfare Program.
[12] M. Bryant, P. Johnson, B. Kent, M. Nowak, S. Rogers, Layered Sensing, White Paper, Version 6 (1).
[13] R. Kozma, W. J. Freeman, The kiv model of intentional dynamics and decision making, Neural Networks 22 (3) (2009) 277 – 285, goalDirected Neural Systems. doi:DOI: 10.1016/j.neunet.2009.03.019.
URL http://www.sciencedirect.com/science/article/B6T08-4W0R0K5-1/2/56cb87da4adae4061d52c1631198ab64

