Development of Multiple Job Execution and
Visualization System on ITBL System Infrastructure
Software and Its Utilization for Parametric Studies
in Environmental Modeling
1

Yoshio Suzuki1, Nobuko Matsumoto , Nobuhiro Yamagishi1, Kenji Higuchi1,
Takayuki Otani1, Haruyasu Nagai2, Hiroaki Terada2, Akiko Furuno2,
2
Masamichi Chino2, and Takuya Kobayashi
1

Center for Promotion of Computational Science and Engineering,
Japan Atomic Energy Research Institute
6-9-3 Higashi-Ueno, Taito-ku, Tokyo 110-0015, Japan
{suzukiy,matsumoto,yama,higuchi,otani}@koma.jaeri.go.jp
http://www2.tokai.jaeri.go.jp/ccse/english/index.html
2 Department of Environmental Sciences, Tokai Research Establishment,
Japan Atomic Energy Research Institute
2-4 Shirakata-shirane, Tokai-mura, Naka-gun, Ibaraki 319-1195, Japan
{nagai,terada,furono,chino}@sakura.tokai.jaeri.go.jp
tkoba@popsvr.tokai.jaeri.go.jp
http://des.tokai.jaeri.go.jp/English/index.html

Abstract. Information-Technology Based Laboratory (ITBL) project has been
propelled as one of e-Japan priority policy programs. The purposes of the project are to share intellectual resources such as remote computers, programs and
data in universities and institutes and to support cooperative studies among researchers, building a virtual research environment, ITBL. Japan Atomic Energy
Research Institute (JAERI) has been working on installation and management
of hardware and development of infrastructure software and applications. As
application software, researches on quantum bioinformatics and environmental
sciences are carried out. This paper presents utilization of ITBL system infrastructure software for ‘Numerical Environment System’ which is developed for
environmental studies. More effective job executions and visualization are expected by using Task Mapping Editor (TME) and AVS/ITBL, which are tools
developed as infrastructure software.

1 Introduction
Information-Technology Based Laboratory (ITBL) project has been propelled as one
of e-Japan priority policy programs (priority policy program for the infrastructure of
network society of advanced information communication). By using recent technologies of information processing such as basic techniques of grid computing and infraP.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2659, pp. 120–129, 2003.
© Springer-Verlag Berlin Heidelberg 2003

Development of Multiple Job Execution and Visualization System

121

structures of high-speed networks, Japan Atomic Energy Research Institute (JAERI)
has been propelling ITBL project in cooperation with National Institute for Materials
Science (NIMS), National Research Institute for Earth Science and Disaster Prevention (NIED), National Aerospace Laboratory of Japan (NAL), the Physical and
Chemical Research Institute (RIKEN) and Japan Science and Technology Corporation (JST). This project aims to build virtual research environment for sharing intellectual resources such as remote computers, programs and data in universities and institutes and for supporting cooperative studies among researchers. JAERI has been
working on installation and management of hardware and development of infrastructure software and applications. Office for ITBL promotion of Center for Promotion of
Computational Science and Engineering (CCSE) is in charge of management of ITBL
supercomputer. R&D group for parallel basic software and R&D group for parallel
processing tools of CCSE have been developing the ITBL system infrastructure software. Studies of quantum biology and environmental sciences are appointed as its applications. Quantum bioinformatics group of CCSE and Department of Environmental Sciences of Tokai Research Establishment are building up the system
respectively. The ITBL supercomputer, which is a PRIMEPWER made by Fujitsu
Corporation, was installed in the ITBL center constructed at Kansai Research Establishment of JAERI in March 2003. This computer has 4 nodes consisted of 128 CPUs
and its performance is 1 TFLOPS. It also has 1 TBYTE memory and 15 TBYTE disk.
The Department of Environmental Sciences, Tokai Research Establishment of
JAERI is working on elucidation and prediction of material circulation in environment, started from studies on dynamic behavior of radionuclide of atmosphere, terrestrial, and oceanic environment [1], [2]. The study aims to clarify ways of preservation
of environment and their effectiveness in the future as well as the effectiveness of nuclear power for preservation of environment by establishing comprehensive and numerical models which clarify and predict the circulation of materials including radioactive substances. Especially a numerical environment system has been developed to
enable comprehensive numerical experiments by combination of models of regional
atmosphere, land, and ocean and to enable synthetic prediction of the environmental
pollution such as dispersion of radioactive substances caused by an accident of a nuclear power plant.
The numerical environment system consists of multiple numbers of codes such as
atmospheric code, air pollution code, oceanic code, oceanic pollution code and so on.
The atmospheric code predicts time-related changes of atmospheric variables such as
wind velocity and temperature. The air pollution code calculates dispersion of pollutants based on the results of the atmospheric code. One example of use of these codes
is to research which analysis is appropriate to identify real meteorological phenomena
with multiple data sets for the same time and same area, which are obtained from
some different analyses used to identify meteorological information. It is also possible to predict dispersion processes of pollutants in the atmosphere by coupled execution of atmospheric code and air pollution code. The oceanic code and the oceanic
pollution code can be used similarly.
In this paper, an argument is advanced only within the case where these codes are
used for such parametric studies. In such situations, each code is executed with spe-

122

Y. Suzuki et al.

cific input data repeatedly. In addition, each output data is manually visualized to
compare results. Therefore, it is easily imagined to execute each code with prepared
input data respectively and visualize each result automatically on multiple computers
using grid-computing technique [3] as one of efficient ways to do job executions and
visualization. To realize this, the ITBL system infrastructure software [4] is utilized to
the numerical environment system. Especially it is aimed at:
• Enabling users to execute multiple simulation codes collectively, without executing them repeatedly.
• Enabling users to execute simulation codes efficiently using less busy computers
in ITBL system automatically.
• Enabling users to manage data files easily without transferring data to do job executions and visualization.
• Enabling users to execute whole process from job executions to visualization collectively without visualizing results manually after simulations are completed.
• Enabling users to compare results easily by displaying multiple images for different parameters or different time stamps on a screen.
Here, Task Mapping Editor (TME) [5] and AVS/ITBL [6], which are tools included in infrastructure software, are used for the purpose. This paper presents the
modifications and newly developed parts of the tools to apply for numerical environment system. In the next section, the background on ITBL, the ITBL system infrastructure software including TME and AVS/ITBL and some related studies are briefly
given. The applied example and the contents of the development needed to its application are described in section 3. The functional specification is given in section 4.
Finally in section 5, the advantages and problems of the application of infrastructure
software are summarized.

2

ITBL System and Its Infrastructure Software

Figure 1 shows usage of the ITBL system infrastructure software. The functions of
ITBL system infrastructure software enable users to execute jobs at a same time on
multiple remote computers respectively and to execute a job on multiple machines at
a time. It also allows users to set up a community among users and to share data and
information, or to exchange their opinions in the community.
Figure 1 also shows the ITBL consists of sites. Each site has an ITBL server,
which intermediates between user terminals and supercomputers. In addition, ITBL
server works to get information needed for management of ITBL as much as possible
and minimize load and influence on other computers at computational sites. The
ITBL is available to be accessed through web browsers with Java applets on a PC or a
workstation that has a certificate installed for the identification of users. Users can use
computers on remote sites through ITBL even in environment where firewall is set.
This is a specific characteristic of the ITBL.
Now there are some supercomputers available through the infrastructure software
such as Fujitsu VPP5000 and Hitachi SR8000 at Tokai Research Establishment of

Development of Multiple Job Execution and Visualization System

123

JAERI, SGI Origin3800 at Naka Fusion Research Establishment of JAERI, and Compaq ES40 at Kansai Research Establishment of JAERI. Fujitsu PRIMEPOWER at
ITBL center and NEC SX6-i at Ueno Office of CCSE are under construction to connect to the ITBL system. Not only supercomputers of JAERI but also supercomputers
of RIKEN and NAL are in the process of connection. Computers of all six organizations described before will have been connected by March 2004.

Fig. 1. Usage of the ITBL system infrastructure software. A user at Site B is using a supercomputer at Site A and a supercomputer at Site C

Fig. 2. The architecture of the ITBL

124

Y. Suzuki et al.

Figure 2 shows the architecture of the ITBL. Toolkits for component programming
and community access as service layer infrastructure and single sign on authentication
mechanism and common communication interface as communication/security infrastructure have been developed as infrastructure software. Specifically there are many
functions developed for job executions. As it mentioned before, TME and AVS/ITBL
have been developed for controlling job executions and for visualization of results,
respectively.
TME has a function that allows users to register programs and data sets on remote
machines as modules and to define relations of modules with graphical user interface
(GUI). This enables to cooperate multiple programs or data sets and execute them
collectively as a batch processing. It also has a function to find a less busy computer
automatically and to allocate a job for the computer. Task Mapping Engine developed
by Fraunhofer Resource Grid (http://www/fhrg.fhg.de/) is similar to TME.
Task Mapping Engine aims for mapping of specific tasks to a resource that needs rapidly and effectively.
AVS/ITBL is a tool developed with a base of AVS/Express [7]. AVS/Express is
widely used for post-visualization of scientific data but can read only data on a computer where AVS/Express is installed (graphic server). The ITBL system enhances
AVS/Express by adding some modules that can read data sets on remote computers
directly so that AVS/ITBL on a graphic server can read any data on any computer in
the ITBL system. AVS/ITBL also has a function to visualize data on the web by designating a data file and a network file (v file). These developments have been
achieved using STARPC library. STARPC, developed by CCSE/JAERI, is a RPC
(Remote Procedure Call)-based communication library for a parallel computer cluster
[8]. Reference 6 describes the details of functions on AVS/ITBL and related studies.

3

Applied Example and the Contents of the Development

TME is applied for numerical environment system in order to cooperate some different codes such as atmospheric code and air pollution code and execute them collectively. In reality, cooperation of atmospheric code and air pollution code and that of
oceanic code and oceanic pollution code have been done. Atmospheric code ‘MM5’
is a mesoscale model developed by Pennsylvania State University and National Center for Atmospheric Research (NCAR) (http://www.mmm.ucar.edu/mm5/mm5home.html). The execution of the atmospheric code enables users to derive atmospheric information, such as wind velocity and temperature. Air pollution code
‘GEARN-NEW’ can output information on dispersion of pollutants with acquisition
of the results of atmospheric code. Oceanic code ‘POM’ enables users to derive oceanic information. Oceanic pollution code ‘SEA-GEARN’ can output information on
dispersion of pollutants with acquisition of the results of oceanic code.
Since it is more efficient to execute whole process from job executions to visualization collectively, a new development is done to enable TME job flow to invoke
AVS/ITBL with batch processing mode. AVS/ITBL is available for users to use it as
an X Window System or web client, but it was not suitable to execute prepared pro-

Development of Multiple Job Execution and Visualization System

125

cedures before its execution. Thus, AVS/ITBL has been enhanced by having a new
function (batch visualization function) to execute AVS/ITBL in command mode, perform visualization process based on preserved visualization parameters and save image data to files. Execution of AVS/ITBL with command line options enables TME to
register batch processing for visualization.
Numerical environment system adopts network Common Data Form (NetCDF) for
output files, which is an interface for array-oriented data access and a library that
provides an implementation of the interface, but was not accepted by AVS/ITBL. The
new development on AVS/ITBL includes a development of a remote data reader for
NetCDF.
In addition, an image viewer has been developed to display multiple images produced by parametric study and compare them to know how parameters and timedependent change influence the results easily. The newly developed image viewer has
three functions: a function to generate thumb-nail images from files saved on an
graphic server, a function to display only designated thumb-nail images, and a function to display an image file whose thumb-nail is selected with an original size. ImageMagick used for generating thumb-nail images for X Window System are free
software tools working on workstations (http://www.imagemagick.org/).

Fig. 3. The usage of numerical environment system applied to infrastructure software

Figure 3 shows the usage of numerical environment system applied to the ITBL
system infrastructure software. As the preparation for performing parametric study efficiently, first of all, users need to make a TME job flow without AVS/ITBL batch
processing, and then visualize the results with AVS/ITBL. Since batch processing for
visualization does not allow users to operate it interactively, they need to generate a

126

Y. Suzuki et al.

visualization parameter file in advance. It means users need to visualize data first and
save methods, parameters and viewpoints to designate image files. After the procedure, users modify the TME job flow to apply it to multiple parameters and add a
batch processing system for AVS/ITBL to execute visualization. The modified TME
job flow can run simulations of parametric study and visualization with batch processing mode. The image viewer displays thumb-nail images made from output images
so that comparative analysis can be done effectively.

4

Details of Functions

The developed functions to run AVS/ITBL in batch processing mode are as follows:
•
•
•
•
•

A function to output visualization parameter file.
A function to execute AVS/ITBL in command mode.
A function to input visualization parameter file.
A function to designate data file for visualization.
A function to output visualized images with JPEG format.

These developments are based on visualization functions on the web for AVS/ITBL
developed before. Thus, first of all, visualization function on the web is explained
briefly. Visualization function on the web for AVS/ITBL allows users to visualize
data from user terminals with web browsers. Users can display images with showImage or showPolygon button arranged on web page (see Fig. 3). The showImage button triggers display of 2D GIF images and the showPolygon button triggers display of
3D GFA data (GFA is a file format for 3D data of AVS/Express). Users can operate
those images such as rotation, scaling and transportation of the objects interactively
and change parameters for visualization. Users need to make network files including
CGI relay module and image data generation module before visualization on the web.
The CGI relay module is used for describing connections between parameters of
AVS/Express and those appeared on the web. An image data generation module is
used for generating GIF images. AVS relay process was developed to enable data
transportation between a graphic server and an ITBL server installed at users’ site.
Figure 4 shows the structure of visualization function on the web. The figure
shows the following procedures:
1.
2.

3.

4.
5.

On the web page of AVS/ITBL, select a dataset and a network file, set values to
parameters, and press showImage or showPolygon button.
The information of the data file for visualization and the visualization parameter
file is sent to AVS relay process (2nd) though a servlet on ITBL server
(STARPC communication [8]).
AVS relay process (2nd) generates a visualization task from the information and
the information of the data file for visualization and the visualization parameter
file is sent to CGI relay module (socket communication).
The information affects AVS/Express.
When AVS/ITBL reads a dataset on a remote computer, it uses functions of remote modules. It means AVS relay process (1st) is used [6].

Development of Multiple Job Execution and Visualization System

6.
7.

127

AVS/Express runs as the designated network file tells.
A generated image is sent through a servlet of ITBL server and displayed on the
web browser.

Accordingly, AVS relay process (2nd) has been modified to add a function of batch
processing to AVS/ITBL. While visualization on the web uses AVS relay process
(2nd) to get information of a data file and a visualization parameter file with communication of STARPC through servlet, batch processing of AVS/ITBL runs AVS relay
process (2nd) directly and passes the information used for visualization to the AVS
relay process by revising a part of its functions. The enclosed area with doted line in
Fig. 4 is equivalent to AVS/ITBL command in Fig. 3. The modification enables batch
processing of AVS/ITBL to execute procedures that are similar to the ones from 3 to
6 in Fig. 4 and output image files. AVS/ITBL has a modification to be able to generate JPEG images for display of thumb-nail images.

Fig. 4. The structure of visualization function on the web

5

Summary

It is expected that the integration of infrastructure software and application enables to
do more effective job execution and analysis with visualization for parametric studies
in numerical environment system. The following things are considered to be the real
advantages and problems of the integrated system.

128

Y. Suzuki et al.

Advantages:
• Users need not to execute multiple simulation codes repeatedly but enable to execute them collectively.
• It is possible for users to execute simulation codes efficiently using less busy
computers in ITBL system automatically. In addition, efficient usage of supercomputers is available.
• Users need not to transfer data to do job executions and visualization, which also
makes it easy to manage data files.
• Users need not to visualize results manually after simulations are completed, but it
is possible for users to execute whole process from job executions to visualization
collectively.
• It is possible for users to compare results easily by displaying multiple images for
different parameters or different time stamps on a screen.
Problems:
• Users need to know how to use TME and AVS/ITBL.
• It is necessary to prepare the visualization parameter file by running AVS/ITBL in
command mode.
About use of TME and AVS/ITBL, although research and development are furthered so that it may be easy to use users as possible, it is not necessarily user-friendly
as the present condition. Moreover, in this application, data delivery between simulation codes is altogether performed through the file. Development of the simulation
codes for carrying out the direct memory transmission between different remote computers is also performed in parallel. This development uses STAMPI library [9],
which is intended for carrying out communications among computers of different architectures in a heterogeneous environment developed by CCSE/JAERI. This library
is also one of the functions of ITBL system infrastructure software. The current research and development of functions, which was not in the conventional infrastructure software, have been furthered in order to unite with the research style performed
by numerical environment system. Furthermore, in order to utilize the functions of infrastructure software in various research fields, improvement united with the research
style in each research field is needed.
Acknowledgements. The authors gratefully acknowledge the support of G. Yagawa
(JAERI), T. Hirayama (JAERI), M. Yamagiwa (JAERI), M. Fukuda (JAERI),
H. Maesako (JAERI), K. Sai (JAERI), K. Kimura (JAERI), Y. Hasegawa (JAERI),
T. Takahashi (JAERI), Y. Tsujita (JAERI) and M. Fujisaki (Fujitsu Corporation). We
also thank H. Kanazawa (Fujitsu Corporation), K. Suzuki (Fujitsu Corporation),
N. Teshima (Fujitsu Corporation) and T. Arakawa (Fujitsu Corporation) for their insightful advice on this development.

Development of Multiple Job Execution and Visualization System

129

References
1.

2.

3.
4.
5.

6.

7.

8.

9.

Chino, M., Ishikawa, H., Yamazawa, H., Nagai, H. and Moriuchi, S.: WSPEEDI (Worldwide Version of SPEEDI): A Computer Code System for the Prediction of Radiological
Impacts on Japanese due to a Nuclear Accident in Foreing Countries, JAERI 1334, (1995)
Kobayashi, T., Lee, S., H. and Chino, M.: Development of Ocean Pollution Prediction
System for Shimokita Region – Model Development and Verification –, Journal of Nuclear Science Technology. Vol. 39, No. 2, (2000) 171–179
Foster, I. and Kesselman, C. (ed.): The GRID, Blue Print for a New Computing Infrastructure. Morgan Kaufmann (1998)
Yagawa, G. and Hirayama, T.: Japan IT-Based Laboratory, to be published in Proceedings
of the Global Grid Forum 5, Edinburgh (2002)
Takemiya, H., Imamura, T., Koide, H., Higuchi, K., Tsujita, Y., Yamagishi, N., Matsuda,
K., Ueno, K., Hasegawa, Y., Kimura, T., Mochizuki, Y. and Hirayama, T.: Software Environment for Local Area Metacomputing, in Proceedings of 4th International Conference
on Supercomputing in Nuclear Applications (SNA2000), Tokyo, (2000) CD-ROM
Suzuki, Y., Sai, K., Matsumoto, N. and Hazama, O.: Visualization system on Information
Technology Based Laboratory, to be published in IEEE Computer Graphics and Applications. (2003)
Upson, C., Faulhaber, T., Jr., Kamins, D., Laidlaw, D., Schlegel, D., Vroom, J., Gurwitz,
R. and van Dam, A.: The application visualization system: A computational environment
for scientific visualization. IEEE Computer Graphics and Applications. Vol. 9, No. 4,
(1989) 30–42
Takemiya, H. and Yamaghisi, N.: Starpc: a library for Communication among Tools on a
Parallel Computer Cluster – User’s and Developer’s Guid to Starpc –, JAERI-Data/Code
2000-005 (2000)
Imamura, T., Tsujita, Y., Koide, H. and Takemiya, H.: An Architecture of Stampi: MPI
Library on a Cluster of Parallel Computers. In Recent Advances in Parallel Virtual Machine and Message Passing Interface, LNCS 1908, Springer, (2000) 200–207

