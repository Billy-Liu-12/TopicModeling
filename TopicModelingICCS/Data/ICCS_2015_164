Procedia Computer Science
Volume 51, 2015, Pages 1574–1582
ICCS 2015 International Conference On Computational Science

Nonparallel Hyperplanes Support Vector Machine for
Multi-class Classiﬁcation
Xuchan Ju1,2 , Yingjie Tian2,3∗, Dalian Liu4 , and Zhiquan Qi2,3
1

School of Mathematical Sciences, University of Chinese Academy of Sciences, Beijing, China
2
Research Center on Fictitious Economy & Data Science, CAS, Beijing, China
juxuchan10@mails.ucas.ac.cn
3
Key Laboratory of Big Data Mining and Knowledge management, CAS, Beijing, China
tyj,qizhiquan@ucas.ac.cn
4
Department of Basic Course Teaching, Beijing Union University, Beijing, China
ldlluck@sina.com

Abstract
In this paper, we proposed a nonparallel hyperplanes classiﬁer for multi-class classiﬁcation,
termed as NHCMC. This method inherits the idea of multiple birth support vector machine(MBSVM), that is the ”max” decision criterion instead of the ”min” one, but it has
the incomparable advantages than MBSVM. First, the optimization problems in NHCMC can
be solved eﬃciently by sequential minimization optimization (SMO) without needing to compute the large inverses matrices before training as SVMs usually do; Second, kernel trick can
be applied directly to NHCMC, which is superior to existing MBSVM. Experimental results on
lots of data sets show the eﬃciency of our method in multi-class classiﬁcation accuracy.
Keywords: multi-class classiﬁcation, support vector machine, nonparallel, quadratic programming,
kernel function

1

Introduction

Support vector machines(SVMs) are proposed by Vapnik and his co-workers[1, 18, 19]for classiﬁcation, regression, or other problems. SVMs depend on the principle of maximum margin, dual
theory and kernel trick to be so successful. The well-known algorithm sequential minimization
optimization (SMO) can be applied and solve the problem eﬃciently.
Recently, twin support vector machine(TWSVM)[4, 9] which works faster than conventional
SVC has been successfully proposed. It seeks two nonparallel proximal hyperplanes such that
each hyperplane is closest to one of two classes and as far as possible from the other class.
TWSVMs have been studied extensively[11, 8, 10, 14].
∗ Corresponding

1574

author

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.287

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

Xuchan Ju, et.al

Although TWSVMs only solve two smaller QPPs, they have to compute the inverse of
matrices, it is in practice intractable or even impossible for a large data set by the classical
methods. Moreover, for the nonlinear case, TWSVMs consider the kernel-generated surfaces
instead of hyperplanes and construct extra two diﬀerent primal problems, i.e., they have to solve
two problems for linear case and two other problems for nonlinear case separately. In order to
avoid these drawbacks above, some nonparallel hyperplanes classiﬁers has been proposed[6, 16,
15].
For the multi-class classiﬁcation problem, a new multi-class classiﬁer, termed as multiple
birth support vector machine (MBSVM), has been proposed[20]. In this classiﬁer, it seeks K
hyperplanes by solving k quadratic programming problems(QPPs). The QPPs are developed
as the k-th class are as far as the k-th hyperplane while the rest points are proximal to the
k-th hyperplane. A new point is assigned to the class label depending on which of the K
hyperplanes it lies farthest to. Based on this trick, the size of each QPP in MBSVM has much
lower complexity and faster than the existing multi-class SVMs. However, these QPPs have to
compute the inverse of matrices and they have to solve diﬀerent problems for linear case and
nonlinear case.
In this paper, we develop nonparallel hyperplanes classiﬁer for multi-class classiﬁcation with
this trick while it can avoid drawbacks in MBSVM. Moreover, SMO can be applied and solve
the problem eﬃciently.
The paper is organized as follows. Section 2 brieﬂy dwells on the standard C-SVC, TWSVM
and NHC. Section 3 proposes our NHCMC. Section 4 deals with experimental results and
Section 5 contains concluding remarks.

2

Background

In this section, we introduce the standard C-SVC, TWSVM and NHC brieﬂy.

2.1

C-SVC

Consider the binary classiﬁcation problem with the training set
T = {(x1 , y1 ), · · · , (xl , yl )} ∈ (Rn × Y)l ,

(1)

where xi ∈ Rn , yi ∈ Y = {1, −1}, i = 1, · · · , l, standard C-SVC formulates the problem as a
convex quadratic programming problem (QPP)

min

w,b,ξ

s. t.

1
w
2

2

l

+C

ξi ,
i=1

yi ((w · xi ) + b) 1 − ξi , i = 1, · · · , l,
ξi 0 , i = 1, · · · , l,

(2)

1575

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

Xuchan Ju, et.al

where ξ = (ξ1 , · · · , ξl ) , and C > 0 is a penalty parameter. For this primal problem, C-SVC
solves its Lagrangian dual problem
1
2

min
α

l

l

l

αi αj yi yj K(xi , xj ) −
i=1 j=1

αi ,
i=1

l

(3)

yi αi = 0,

s. t.
i=1

0

αi

C, i = 1, · · · , l,

where K(x, x ) is the kernel function, which is also a convex QPP and then constructs the
decision function.

2.2

TWSVM

Consider the binary classiﬁcation problem with the training set
T = {(x1 , +1), · · · , (xp , +1), (xp+1 , −1), · · · , (xp+q , −1)},

(4)

wherexi ∈ Rn , i = 1, · · · , p + q. Let A = (x1 , · · · , xp )T ∈ Rp×n B = (xp+1 , · · · , xp+q )T ∈
Rq×n and l = p + q. For linear classiﬁcation problem, TWSVM seeks a pair of nonparallel
hyperplanes
(w+ · x) + b+ = 0 and (w− · x) + b− = 0.
(5)
by solving two smaller QPPS
min

w+ ,b+ ,ξ−

s.t.

1
(Aw+ + e+ b+ )T (Aw+ + e+ b+ ) + c1 eT
− ξ− ,
2
− (Bw+ + e− b+ ) + ξ− e− , ξ− 0,

(6)

1
(Bw− + e− b− )T (Bw− + e− b− ) + c2 eT
+ ξ+ ,
2
(Aw− + e+ b− ) + ξ+ e+ , ξ+ 0,

(7)

and
min

w− ,b− ,ξ+

s.t.

where ci , i = 1, 2 are penalty parameters. e+ and e− are vectors of ones of appropriate dimensions.For nonlinear classiﬁcation problem, two kernel-generated surfaces instead of hyperplanes
are considered and two other primal problems are constructed.

2.3

NHC

For training set(4), NHC constructs two QPPs as follows.
min

w+ ,b+ ,ξ−

s.t.

1 T
1
c3 ( w+ 2 + b2+ ) + η+
η+ + c 1 eT
− ξ− ,
2
2
Aw+ + e+ b+ = η+ ,
− (Bw+ + e− b+ ) + ξ−

1576

e− , ξ −

0,

(8)

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

Xuchan Ju, et.al

and
min

w− ,b− ,ξ+

s.t.

1
1 T
c4 ( w− 2 + b2− ) + η−
η− + c 2 eT
+ ξ+ ,
2
2
Bw− + e− b− = η− ,
(Aw− + e+ b− ) + ξ+

e+ , ξ +

(9)

0,

where ci , i = 1, 2, 3, 4 are penalty parameters. e+ and e− are vectors of ones of appropriate
dimensions. Their dual forms can be written as follows.
1
ˆ T αT )T + c3 eT α,
max − (λT αT )Q(λ
−
λ,α
2
s.t. 0 α c1 e− ,
where
ˆ=
Q

AAT + c3 I
BAT

AB T
BB T

+ E,

(10)

(11)

and
1
˜ T γ T )T + c4 eT γ,
max − (θT γ T )Q(θ
+
θ,γ
2
s.t. 0 γ c2 e+ ,
where
˜=
Q

BB T + c4 I
AB T

BAT
AAT

+ E,

(12)

(13)

and I is an identity matrix of q × q, E is a matrix of l × l with all entries equal to one. For
nonlinear classiﬁcation problem, kernel function can be added directly.

3

Nonparallel hyperplanes classiﬁer for multi-class classiﬁcation(NHCMC)

Consider the multiple classiﬁcation problem with the training set:
T = {(x1 , y1 ), · · · , (xl , yl )},

(14)

where xi ∈ Rn , i = 1, · · · , l, yi ∈ {1, · · · , K} is the corresponding pattern of xi .
For multiple classiﬁcation, we seek K nonparallel hyperplanes:
(wk · x) + bk = 0, k = 1, · · · , K

(15)

For convenience, we denote the number of each class of the training set (14) as lk and the
points belonging to k-th class as Ak ∈ Rlk ×n ,k = 1, · · · , K. Besides, we deﬁne the matrix
Bk = [A1 , · · · , Ak−1 , Ak+1 , · · · , Ak ]

(16)

as all the points except for the points belonging to k-th class.
1577

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

Xuchan Ju, et.al

2.5

2

l3

1.5

1

0.5
l2

l1
0

0

0.5

1

1.5

2

2.5

3

3.5

Figure 1: A toy example learned by the linear NHCMC

3.1
3.1.1

Linear case
The Primal Problem

We seek to construct k nonparallel hyperplanes (15) by solving the following convex quadratic
programming problems(QPPs):

min

wk ,bk ,ηk ,ξk

s.t.

1
1
C1 wk 2 + ηk ηk + C2 ek2 ξk ,
2
2
Bk wk + ek1 bk = ηk ,
(Ak wk + ek2 bk ) + ξk ek2
ξk

(17)

0,

where ηk ∈ R(l−lk ) is a variable and ξk is a slack variable. ek1 ∈ R(l−lk ) and ek2 ∈ Rlk are the
vectors of ones. C1 0 and C2 0 are penalty parameter.
In order to illustrate the primal problem of NHCMC, we generated an artiﬁcial twodimensional three-class dataset. The geometric interpretation of above problem with x ∈ R2
is shown in Figure 1,where minimizes the sum of the squared distance from the hyperplanes of
K − 1 classes, that is all classes except for those of the k−th class, and the points of the k−th
class are far from the its hyperplane. Take the ”*” class in Figure 1 as an example. We hope
the hyperplane of the ”*” class l1 is far from the ”*” points and closest the ”+” and triangular
points. In order to minimize misclassiﬁcation, the points of the k−th class are at distance 1
from the hyperplane, and we minimize the sum of error variables with soft margin lost. The
diﬀerences between multiple birth support vector machine(MBSVM)[20] and NHCMC are that
we introduce a regularization term to implement structural risk minimization(SRM) principle
and a variable is introduced to make a term of objective function to be constraints. These
changes have many positive eﬀects on original NHCMC.
1578

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

3.1.2

Xuchan Ju, et.al

The Dual Problem

In order to get the solutions of problem (17), we need to derive its dual problem. The Lagrangian
of the problem (17) is given by
1
1
C1 w k 2 + ηk ηk
2
2
+C2 ek2 ξk + λ (Bk wk + ek1 bk − ηk )

L(wk , bk , ηk , ξk , α, β, λ) =

−α (Ak wk + ek2 bk + ξk − ek2 ) − β ξk ,

(18)

where α = (α1 , · · · , αlk ) , β = (β1 , · · · , βlk ) , λ = (λ1 , · · · , λl−lk ) are the Lagrange multiplier
vectors. The Karush-Kuhn-Tucker (KKT) conditions[13] for wk , bk , ηk , ξk and α, β, λ are given
by
∇wk L = C1 wk + Bk λ − Ak α = 0,
∇bk L = ek1 λ − ek2 α = 0,

(19)

∇ηk L = ηk − λ = 0,

(21)

∇ξk L = C2 ek2 − α − β = 0,
Bk wk + ek1 bk = ηk ,

(22)

(Ak wk + ek2 bk ) + ξk

Since β

ek2 , ξk

(20)

(23)

0

(24)

α ((Ak wk + ek2 bk ) + ξk ) = 0, β ξk = 0
α 0, β 0

(25)
(26)

0, from (22) we have
C2 ek2 .

(27)

1
(B λ − Ak α),
C1 k

(28)

α

0
And from (19), we have
wk = −

Then putting (28) and (21) into the Lagrangian and using (19)∼(26), we obtain the dual
problem of problem (17)
1 ˆ
π
ˆ Λˆ
ˆ,
π+κ
ˆ π
2
s.t.ek1 λ − ek2 α = 0,
Cˆ1 π
ˆ Cˆ2 ,

min
π
ˆ

(29)

where
π
ˆ

=

(λ , α ) ,
(0, −C1 ek2 ) ,

κ
ˆ =
ˆ
C1 = (−∞ek1 , 0) ,
ˆ
C2
= (+∞ek1 , C2 ek2 ) ,

ˆ=
Λ

ˆ1
Q
ˆ
−Q
2

ˆ2
Q
ˆ3
Q

(30)
(31)
(32)
(33)

(34)

1579

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

ˆ1
Q
ˆ2
Q
ˆ3
Q

Xuchan Ju, et.al

=

Bk Bk + C1 I,

=

B k Ak ,

(36)

=

Ak Ak ,

(37)

(35)

where I is an identity matrix.
After getting the solution of the problem (29), we can obtain wk∗ and b∗k with (19) and
(23). A new point x ∈ Rn is assigned to class k(k ∈ 1, · · · , K), depending on which of the K
hyperplanes given by (15) it lies farthest to. The decision function is deﬁned as
f (x) = arg max

k=1,··· ,K

|(wk∗ · x) + b∗k |
,
||wk∗ ||

(38)

where | · | is the prependicular distance of point x from the hyperplane (wk · x) + bk = 0, k =
1, · · · , K.

3.2

Nonlinear case

Now we extend the linear NHCMC to the nonlinear case. Totally diﬀerent with the existing
MBSVM, we do not need to consider the extra kernel-generated surfaces since only inner products appear in the dual problems (29), so the kernel functions can be applied directly in the
problems and the linear NHCMC is easily extended to the nonlinear multiple classiﬁer.
1 ˆ
π
ˆ Λˆ
ˆ,
π+κ
ˆ π
π
ˆ
2
s.t.ek1 λ − ek2 α = 0,
Cˆ1 π
ˆ Cˆ2 ,

min

(39)

where
π
ˆ

(λ , α ) ,
κ
ˆ = (0, −C1 ek2 ) ,
ˆ
C1 = (−∞ek1 , 0) ,
ˆ
C2
= (+∞ek1 , C2 ek2 ) ,
=

ˆ=
Λ

ˆ1
Q
ˆ2
Q
ˆ
Q3

ˆ1
Q
ˆ
−Q
2

ˆ2
Q
ˆ3
Q

(40)
(41)
(42)
(43)

(44)

=
=

K(Bk , Bk ) + C1 I,
K(Bk , Ak ),

(45)
(46)

=

K(Ak , Ak ),

(47)

where I is an identity matrix and K(·, ·) is the kernel function. The corresponding conclusions
are similar with the linear case except that the inner product (x · x ) is taken instead of the
kernel function K(x, x ).
1580

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

4

Xuchan Ju, et.al

Numerical experiments

In this section, in order to validate the performance of our NHCMC, we compare it with
one-versus-rest(l-v-r) method[12], one-versus-one(l-v-l) method[17], directed acyclic graph
SVM(DAGSVM)[5], the multi-class SVM(M-SVM)[3], crammer and singer(C&S) method[7]
and MBSVM[20] on several publicly available benchmark datasets, some of which are used in
[20]. NHCMC is implemented in MATLAB 2010 on a PC with an Intel Core I5 processor and
2 GB RAM.
All samples were scaled such that the features locate in [0, 1] before training. For the ﬁrst
2
) is applied and for the latter three
seven datasets, the RBF kernel K(x, x ) = exp( − x−x
σ
datasets, the rectangular kernel[2] K(x, E T ) with E typically of size 10% of E is used. The
parameters are tuned for best classiﬁcation accuracy in the range 2−8 to 212 . Table 1 lists
the average tenfold cross-validation results of these methods to the ﬁrst six datasets and the
average fourfold cross-validation results of these methods to the latter four datasets in term of
accuracy. The results of the former six methods come from [20].

5

Conclusion

In this paper, we have proposed a nonparallel hyperplanes classiﬁer for multiple classiﬁcation.
The idea of NHCMC approximates to MBSVM, that is the ”max” decision criterion instead of
the ”min” one, but NHCMC has incomparable advantages. First, we do not need to compute
the large inverses matrices before training which is inevitable in MBSVM, and furthermore the
optimization problems in NHCMC can be solved eﬃciently by SMO. Second, totally diﬀerent
with MBSVM, kernel trick can be applied directly to NHC. Experimental results show the
eﬃciency of our method in classiﬁcation accuracy. Therefore this novel method could be a
promising approach and worth of further study in this ﬁeld.

Acknowledgment
This work has been partially supported by grants from National Natural Science Foundation
of China (No.11271361, No.61472390, No.71331005), Major International (Regional) Joint Research Project (No.71110107026), “New Start” Academic Research Project of Beijing Union
University (No. ZK10201409) and the Ministry of water resources special funds for scientiﬁc
research on public causes (No.201301094).

References
[1] C. Cortes and V. N. Vapnik. Support-vector networks. Machine Learning, 20(3):273–297, 1995.
[2] Fung G and Mangasarian OL. Proximal support vector machine classiﬁers. In: 7th International
proceedings on knowledge discovery and data mining, pages 77–86, 2001.
[3] Weston J and Watkins C. Multi-class support vector machines. CSD-TR-98-04 royal holloway,
University of London, Egham, UK, 1998.
[4] Jayadeva, R.Khemchandani, and S.Chandra. Twin support vector machines for pattern classiﬁcation. IEEE Transaction on Pattern Analysis and Machine Intelligence, 2007.
[5] Platt JC, Cristianini N, and Shawe-Taylor J. Large margin dags for multiclass classiﬁcation. Adv
Neural Inf Process Syst, 12:547–553, 2000.

1581

Nonparallel hyperplanes support vector machine for multi-class classiﬁcation

Datasets
Iris
Wine
Glass
Vowel
Vehicle
Segment
dna
Satimage
Letter
Shuttle

l-v-r
acc(%)
99.67
98.88
71.96
98.49
87.47
97.53
95.78
91.70
97.88
99.91

l-v-l
acc(%)
97.33
99.44
71.50
99.05
86.64
97.40
95.45
91.30
97.98
99.92

DAGSVM
acc(%)
96.67
98.88
73.83
98.67
86.05
97.36
95.45
91.25
97.98
99.92

M-SVM
acc(%)
97.33
98.88
71.03
98.49
86.99
97.58
95.62
91.25
97.76
99.91

C&S
acc(%)
97.33
98.88
71.96
98.67
86.76
97.32
95.87
92.35
97.68
99.94

MBSVM
acc(%)
98.00
98.24
69.52
98.79
86.07
96.02
96.04
90.55
93.28
99.95

Xuchan Ju, et.al

NHCMC
acc(%)
98.45
98.62
74.55
99.71
86.91
98.43
97.25
91.60
98.07
100.00

Table 1: Average results of the benchmark datasets
[6] Xu Chan Ju and Ying Jie Tian. Eﬃcient implementation of nonparallel hyperplanes classiﬁer.
International Conferences on Web Intelligence, pages 5–9, 2012.
[7] Crammer K and Singer Y. On the algorithmic implementation of multiclass kernel-based vector
machines. J Mach Learn Res, 2:265–292, 2002.
[8] R. Khemchandani, R.K. Jayadeva, and S. Chandra. Optimal kernel selection in twin support
vector machines. Pattern Recognit. Lett., 3:1:77–88, 2009.
[9] M. A. Kumar and M. Gopal. Least squares twin support vector machines for pattern classication.
Expert Systems withApplication, May 2007.
[10] M.A. Kumar and M. Gopal. Least squares twin support vector machines for pattern classiﬁcation.
Expert Syst. Appl., 36:4:7535–7543, May 2009.
[11] M.A. Kumar and M. Gopal. Application of smoothing technique on twin support vector machines.
Pattern Recognit. Lett., 29:13:1842–1848, Oct. 2008.
[12] Bottou L, Cortes C, Denker JS, Drucher H, Guyon I, Jackel LD, LeCun Y, M¨
uuller UA, Sackinger
E, Simard P, and Vapnik V. Comparison of classiﬁer methods: a case study in handwriting digit
recognition. IAPR (eds) Proceedings of the international conference on pattern recognition, IEEE
Computer Society Press, pages 77–82, 1994.
[13] O.L. Mangasarian. Nonlinear programming. Philadelphia, PA:SIAM, 1994.
[14] X. Peng. Tsvr: An eﬃcient twin support vector machine for regression. Neural Networks, 23:3:365–
372, 2010.
[15] Yingjie Tian, Xuchan Ju, Zhiquan Qi, and Yong Shi. Improved twin support vector machine.
SCIENCE CHINA Mathematics, 2:417–432, 2014.
[16] Yingjie Tian, Zhiquan Qi, Xuchan Ju, Yong Shi, and Xiaohui Liu. Nonparallel support vector machines for pattern classiﬁcation. IEEE TRANSACTIONS ON CYBERNETICS, DOI 10.1109/TCYB.2013.2279167, 2013.
[17] Krebel U. Pairwise classiﬁcation and support vector machines. In: Scholkopf B, Burges CJC,
Smola AJ (eds) Advances in Kernel methods: support vector learning, MIT Press, Cambridge,
MA, pages 255–268, 1999.
[18] V. N. Vapnik. The Nature of Statistical Learning Theory. New York: Springer, 1996.
[19] V. N. Vapnik. Statistical Learning Theory. New York: John Wiley and Sons, 1998.
[20] Zhi-Xia Yang, Yuan-Hai Shao, and Xiang-Sun Zhang. Multiple birth support vector machine for
multi-class classiﬁcation. Neural Computing and Applications, 22:Issue 1 Supplement: 153–161,
2013.

1582

