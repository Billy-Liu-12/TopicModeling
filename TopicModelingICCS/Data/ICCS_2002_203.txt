Tree-based Reliable Dissemination Protocol
With Scalable Multicast Security Key Distribution
Young-jae Kim1, Eun-yong Park1, Keecheon Kim1, Sun-young Han1,
Sunwan Choi2, Youngmin Chin3
1

Dept. of Computer Science and Engineering, Konkuk University 1 Hwa-yang dong
wang-jin gu Seoul, Korea
{youngkim, eypark, kckim, syhan}@konkuk.ac.kr
2
Dept. of Data Communication Engineering, Anyang University, Anyang 5-dong, Manan-gu,
Anyang-shi, Kyonggi-do, 430-714, Korea
sunchoi@aycc.anyang.ac.kr
3
Mutimedia Technology Laboratory, Korea Telecom
17 Woomyundong, Seochoku, Seoul, Korea
ymchin@kt.co.kr

Abstract. Although the IP multicast scheme has numerous advantages, it’s not
used widely because it have faced some problems must be solved. IP multicast
is on the UDP, so it can’t guarantee the reliable delivery. We present a reliable
multicast transfer protocol for one-to-many multicast application that also
supports differentiated control tree and scalable multicast key distribution
facilities.

1 Introduction
As the use of Internet becomes more diverse, it is necessary to develop new
services and applications. New applications such as Internet broadcasting, have
adopted multicast technology in order to provide an efficient one-to-many
communication. But the distribution of data using IP multicast does not guarantee the
reliable delivery because IP itself does not reliably transmit the data. In this paper, we
propose a Tree-based Reliable Dissemination Protocol (TRDP) with Scalable
Multicast Security Key Distribution. TRDP is designed for one-to-many data
delivery. It consists of Tree-based Reliable Transfer Protocol (TRTP) for data
multicast and Dynamic Control-Tree Configuration Protocol (DCTCP) for organizing
a hierarchical control tree. TRDP decreases recovery time for packet losses and solves
the problem of ACK implosion using the GM(Group Manager). It also supports flow
control and congestion control to avoid the potential bottlenecks. The flow control
uses a combination of rate-based and window-based techniques. The congestion
control uses a combination of slow-start and congestion avoidance techniques.
Hierarchical control tree of the TRDP is also very efficient to manage the key and rekey in multicast environment.

2. Tree-based Reliable Dissemination Protocol
TRDP is designed for one-to-many multicast application. It consists of TRTP(Treebased Reliable Transfer Protocol) for transmitting multicast data and
DCTCP(Dynamic Control-Tree Configuration Protocol) for organizing a hierarchical
control tree. TRDP reduces the time to recover a packet loss and prevents ACK
implosion. It also supports flow control and congestion control.

2.1 Features of TRDP

TRDP organizes all the receivers into local groups with restricted TTL value and
organize local groups into hierarchical control tree that is responsible for local retransmission. (Fig. 1)
Sender

: Local Group
: Group Manager
: Receiver
: ACK
: NACK

Fig. 1. Constructed hierarchical control tree of TRDP. Local group has group manager which
responsible for local re-transmission.

TRDP uses the following techniques for reliable transmission.
• Dynamic configuration of local groups
TRDP organizes the receivers into local groups and selects the group manager
of each local group. If a receiver in a local group detects the packet loss, it
requests re-transmission of manager through restricted NACK. Each local group
has multicast address of its own to avoid unnecessary traffic propagated to other
local groups while re-transmitting.
• Detecting packet loss and re-transmitting through selective acknowledgment

TRDP employs both of the sender and the receiver initiated approaches to detect
the packet losses. Sender and group managers use the former. Receivers use the
latter. The sender and each group managers set a timer to check the packet losses
of other group managers. The timer of the sender is set whenever packets are
transmitted and the timer of group manager is set whenever the group manager
received a packet from a sender. Sender and group managers perform the packet
loss detection and re-transmission using Retransmission Timeout (RTO) and fast
re-transmission which adopted in TCP. The receiver specifies the RTO by
computing the deviation of the packet arrival time.
• Flow control and congestion control
Flow control employs rate-based and window-based techniques. The rate-based
technique defines maximum transmission rate that is set when the group is
created. The window-based technique adopts a sliding window of TCP. Sender
defines the parameters of the sliding window by reporting the advertised window
of each GM through the hierarchical control tree.
Congestion Control uses a combination of slow-start and congestion avoidance
adopted in TCP. Sender computes the congestion parameters by reporting the
packet loss rate of each group manager through a control tree.
• Differential control service
Reliable multicast protocols perform poorly in a heterogeneous multicast
environment because the conflicting bandwidth requirements of all the receivers
cannot be simultaneously satisfied with one transmission rate. In this paper, we
propose a differential control service, so that many receivers are provided with
their own maximum throughput.
TRDP can address up to the three multicast groups to satisfy the requirements of
the differential throughput with a differential control mechanism. The sender
separates a control tree organized when the group is created into other groups via
this mechanism. The separate multicast group performs its own flow control and
congestion control.
• Fault tolerance of group manager
TRDP provides a simple and fast recovery technique in handling the failures of
a GM. Each group manager must periodically send the status requests. If a group
manager fails, receivers can’t receive status messages any more. In this case, one
out of all the receivers within the local group has to take the role of the group
manager. The new group manager is determined by the state information of the
receivers, which is created when a local group is originally organized.
• Multicast security key distribution
In TRDP, each local group has a symmetrical security key with each multicast
address and the local group manager makes a local group key, distributes the key
to each local group participator, that is, it is acting as a key management center. A
local group manager decrypts the multicast data through the parent local group,

and encrypt it with the local group secure key, and then re-multicasts it. In this
way, we can overcome the drawback that we must re-distribute the secure key to
the other receivers in the case when one receiver withdraws. That is, in DCTCP,
we can avoid a frequent re-distribution by re-distributing the key in the specific
local group
2.2 Constructing The Hierarchical Control Tree
TRDP employs Expanded Ring Search algorithm to construct the hierarchical
control tree. This algorithm uses restricted TTL in constructing the local group. The
local group manager finds the parent group manager with large TTL value. One
hierarchical control tree is constructed in this way. The root of the hierarchical control
tree is always the sender, and the sender is group manager of its local group.
The way to join the group in TRDP is as followed.
• If there is no group manager nearby
When a member wants to participate in a group, it multicasts a control data
with limited TTL value to find whether it belongs any local group. If the reply
message does not arrive, a member becomes a group manager. And new group
manager assigns a new multicast address for re-transmission. Also, a group
manager makes a symmetric key in order to encrypt the multicast data from a
parent group manager. The local group manager transmits its public key to the
selected parent group manager.
• If there is group manager nearby
If new member find out that the group manager exist, it sends join request to
group manager. And next stage is exchange security keys. New member
transmits its public key to the selected group manager and receives an encrypted
local group symmetric key with it’s public key sent before. The group manager
informs new members of address information of re-transmission group and adds
information of new members from the session information (group member list,
parent group member address, lower group manager address) into group member
list. And it sends the changed session information to group members through
multicast. This session information is used when a group manager fail over
In TRDP, a member who wants to leave the group should send a message to leave
the group and then leaves the group. If the member is the group manager of the local
group, it should select the successor. Otherwise, if the member is an ordinary
member, it just sends message for leaving the group to the group manager of its local
group.
When the group manager of the local group leaves the local group, first of all, it
should select its successor. The first entry of the local group state information is
selected as new group manager. Existing group manager informs all local members

and parent group manager of the address of the new group manager. The group
manager of the parent group also informs this fact to all the local group members. If a
member wants to leave is, it just sends a message to leave the group and leaves the
group.

The followings explain how members leave the local group.
• Group members
If any members leave the local group, the group have to redistribute it’s
symmetric key to prevent leaved member from listening the session. The group
manager makes a new symmetric key, transmits a new symmetric key to all the
members after encrypting it with the public key of each member.
• Group manager
If the group manager would leave the group, it has to select the successor.
The first member on group member list is selected as succeeding group
manager. The group manager informs local group members and parent group
manager of the address of the successor, and reports LEAVE message to the
parent manager.
Newly selected group manager generate new symmetric key for the group,
and distribute the key to all group members. Also, the parent group manager
re-distributes the symmetric key for the parent group.
2.3 Differential Control Service
In general, almost all the protocols which support reliable delivery does senderbased flow control and congestion control. Although one receiver has more
throughput than another receiver, they are processed to show the same throughput. In
such a case, if flow control and congestion control is done, considering the status of
each receiver as well, better throughput can be expected.
In this paper, we present differential control service. It minimizes the load for
senders in data delivery and categorizes them into at most 3 delivery groups to
maximize the throughput of the receiver. Different flow control and congestion
control is used for each control group.
For differential flow and congestion control, the sender periodically sends an
ECHO_GLOBAL message, which will be replied by the receiver of the leaf group.
The sender uses the replied message to estimate the RTT time. Based on this RTT
time, three groups are constructed. Each group estimates its own average RTT and
determines high, middle, and low group. This explains why redefining the parameters
are necessary to support the group specific flow and congestion control.
The following is the step for constructing a differential control group.
1. The sender periodically sends an ECHO_GLOBAL message. If the receiver is
in the leaf group, it replies to the group manager with the largest RTT time,

which is estimated using ECHO_LOCAL message. Then, the group manager
sends the largest RTT to its parent group manager. And the parent group
manager sends the largest RTT time among RTT times received from the
children group managers to its parent group manager. In this way, the largest
RTT time is delivered to the sender. At last, the sender estimates average RTT
time of the whole group as shown in Figure 3. The numerical formula to
estimate the RTT is as followed.
2. Using the estimated time, select an approximate RTT α.
3. Classify the control group as low, middle, and high group using the average
RTT ± α
Low group = RTT of each group < (AVR_RTT - α)
(1)
Middle group = (AVR_RTT-α) < RTT of each group
& RTT of each group < (AVR_RTT + α)
High group = RTT of each group > (AVR_RTT+α)
4. The sender separates groups as above, and assigns a new delivery group address.

AVR_RTT = (310 + 290 + 490)/3

Sender

A Group
B Group

40ms

70ms

30ms

GM 1

20ms

MAX
(270)

GM 2

60ms

MAX
(260, 110)

60ms

60ms

MAX
GM 5
(200, 70)

MAX
(50) GM 6

GM 3

80ms

MAX
(420, 200)

100ms

R1
MAX
(250, 20)

250ms

R2

GM 4

20ms

R3

200m s

R4

70ms

R5

50ms

R6

MAX
(340)

GM 7

340ms

R6

GM 8

MAX
(100)

100ms

R7

Fig. 2. Figure 3 depicts the result of constructing differential control groups. In this
configuration, 100ms is used as the value of a. In this figure, GM1 just uses the RTT of GM4
because GM1 is not in the leaf group. Only GMs within the leaf groups reply to an ECHO
GLOBAL message. Through the above sequence, tree for data delivery is divided into the three
groups. At last, the sender sends data to the three different multicast groups.

2.4 Scalable Multicast Security Key Distribution
In multicast environment, key management is very difficult because of re-keying
problem. One of the requirements for a secure multicast is to share the same security
attributes and communication requirements among multiple users to securely
communicate with every other members of the multicast group using a common
multicast group net key. The largest benefit of the multicast communication is that the
multiple receivers simultaneously get the same transmission. Thus the problem is
enabling each user to determine/obtain the same net key without permitting
unauthorized parties to do likewise (initializing the multicast group) and securely rekeying the users of the multicast group when necessary. At first glance, this may not
appear to be any different than current key management scenarios.
In TRDP, every local group has its own symmetrical security key and multicast
address for local retransmission. The group manager is key management center of
group and generates and distributes keys. As discussed above, a local group manager
is also a member of parents group.
With the group key, group manager decrypts the multicast data from the parent
group and then re-multicasts to group after encrypts data with its local group secure
key. It can eliminate the frequent redistribution problem in multicast environment.
TRDP uses two ways of encryption to keep the multicast data secure. In order to
transmit the multicast data, it uses the symmetric key encryption technique, which is
relatively easy, fast in distributing the key. In order to distribute the symmetric key to
the local group, it uses an asymmetric key encryption technique. That is, a local group
manager stores public key of all the group members. After it generates a new local
group symmetric key, and then it encrypts the public key of the member to transmit
data to the members through unicast. Figure 3 explains this scenario.

P

E SK (P)

DK 2 ( E K 1 ( SK ))
E K 1 ( SK )

P

E

:

D

:

Fig. 3. Figures 3 depicts the symmetric key distribution through Asymmetric key algorithm

3 Result
We compare TRDP with other reliable multicast protocols for techniques adopted to
support reliable transfer, which is summarized in Table 1.
Table 1. Comparison of TRDP and other reliable protocols. Appeared short terms means as
follows. NH : Non-hierarchical, H : Hierarchical, M : Multicast, U : Unicast, S : Slow start, C :
Congestion avoidance, R : Rate, W : Window
Protocol
Feature

SRM

LGMP

TMTP

RAMP

RMTP

TRDP

Control Tree

NH

H

H

N

H

H

Retransmission

M

M/U

Error control

NAK

Flow control
Failure
processing
Congestion
control
Differential
Control
Key
Management

R

M/U

M/U

M/U

NAK/
ACK
R

NAK/
ACK
R/W

NAK/A
CK
R

M/U

R/W

NAK/A
CK
R/W

ACK

N

Y

N

N

Y

Y

N

N

N

N

S

S/C

N

N

N

N

N

Y

N

N

N

N

N

Y

4. Conclusion
Some of the reliable delivery services are being studied in various areas nowadays.
The reliable multicast protocols should support an error control, flow control and
congestion control efficiently. This paper presents the TRDP (Tree-based Reliable
Dissemination Protocol with Scalable Multicast Security Key Distribution) which is
proper to one-to-many delivery to satisfy the needs for the reliable delivery.
TRDP has some advantages. Firstly, it is consisted of hierarchical control tree to
solve the problems that send-based or receiver-based reliable protocols have. So it
solves the problem of buffer overflow and delivery latency caused by the receiverbased reliable protocol, also an ACK implosion of the sender-based reliable protocol.
Secondly, it offers a TCP-like flow control and congestion control available in the
multicast environments. Thirdly, it offers a differential control service. Fourthly, it
supplies an efficient way to recover the failure of GM. And at last, TRDP supports the
efficient key management in the multicast environment using a hierarchical control
tree.
This TRDP minimizes the delays in the data re-transmission and error recovery.
TRDP also processes fast to support the fault tolerance of GM. Also it offers a
differential flow and congestion control service.
If every receiver gets data using only one flow control and congestion control, the
time consumed by every receiver will be similar. However, if the differential control
service is adopted, the consumed time will be different with each other. This is the
strong benefit of our differential control service with scalable multicast security key
distribution. In the future, we have a plan to guarantee a secure key exchange among
group members.

References
1. V. Jacobson, and M. J. Karels, “Congestion Avoidance and Control”, In proceeding s of
SIGCOMM. ACM, Nov 1988.
2. W. Stevens, “TCP Slow Start, Congestion Avoidance, Fast Retransmit, and Fast Recovery
Algorithms”, RFC 2001, Jan 1997.
3. A. Mankin, A. Romanow, S. Brader, and V. Paxson, “ IETF Criteria for Evaluating Reliable
Multicast Transport and Application Protocols”, RFC 2357, June 1998.
4. R. Yavatkar, J. Griffioen, and M. Sudan, “A Reliable Dissemination Protocol for Interactive
Collaborative Applications”, In Proceedings of Multimedia '96. ACM, 1996.
5. Markus Hofmann, “A Generic Concept for Large-Scale Multicast”, International Zurich
Seminar on Digital Communication, Feb 1996.
6. S. Paul, K. K. Sabnani, J. C. Lin, and S. Bhattacharyya, “Reliable Multicast Transport
Protocol (RMTP)”, In Proceeding of INFOCOM '96. IEEE, March 1996.
7. Koifman, A and Zabele, S, “RAMP: A Reliable Adaptive Multicast Protocol”, IEEE
INFOCOM '96, March 1996.

8. A. Basu, and S. J. Golestani, “Estimation of Receiver Round Trip Times in Multicast
Communications”, RMRG meeting on December 1998, Dec 1998.
9. S. J. Golestani, and K. Sabnani, “ Fundamental Observations on Multicast Congestion
Control in the Internet”, In proceedings of Infocom’99, 1999.
10. S. K. Kasera, J. Kurose, and D. Towsley, “A Comparison of Server-Based and ReceiverBased Local Recovery Approaches for Scalable Reliable Multicast”, CMPSCI Technical
Report TR 97-69, Dec 1997.
11. S. J. Hong, et al, “Real-Time Inter-ORB Protocol on Distributed Environment”,
International Symposium on Object-Oriented Real-Time Distributed Computing
(ISORC’98), Apr. 1998, pp. 449-456.

