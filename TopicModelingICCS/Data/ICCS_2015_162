Procedia Computer Science
Volume 51, 2015, Pages 493–502
ICCS 2015 International Conference On Computational Science

Model of Collaborative UAV Swarm Toward Coordination
and Control Mechanisms Study
Xueping Zhu1 , Zhengchun Liu2 , and Jun Yang1
1

2

School of Astronautics, Northwestern Polytechnical University, China
zhuxueping@nwpu.edu.cn, yangjun8@nwpu.edu.cn
Computer Architecture & Operating Systems, University Autonoma of Barcelona(UAB), Spain
lzhengchun@caos.uab.es

Abstract
In recent years, thanks to the low cost of deploying, maintaining an Unmanned Aerial Vehicle
(UAV) system and the possibility to operating them in areas inaccessible or dangerous for
human pilots, UAVs have attracted much research attention both in the military ﬁeld and
civilian application. In order to deal with more sophisticated tasks, such as searching survival
points, multiple target monitoring and tracking, the application of UAV swarms is forseen. This
requires more complex control, communication and coordination mechanisms. However, these
mechanisms are diﬃcult to test and analyze under ﬂight dynamic conditions. These multiUAV scenarios are by their nature well suited to be modeled and simulated as multi-agent
systems. The ﬁrst step of modeling an multi-agent system is to construct the model of agent,
namely accurate model to represent its behavior, constraints and uncertainties of UAVs. In this
paper we introduce our approach to model an UAV as an agent in terms of multi-agent system
principle. Construction of the model to satisfy the need for a simulation environment that
researchers can use to evaluate and analyze swarm control mechanisms. Simulations results of
a case study is provided to demonstrate one potential use of this approach.
Keywords: multi-agent system, unmanned aerial vehicles, ﬂight formation, coordination

1

Introduction

Unmanned Aerial Vehicle (UAV) is an aircraft which does not require an onboard pilot. The
control of an UAV is usually performed either in an autonomous way by an on-board computer, or in a manual way by an operator remotely in a ground station, or even a mixed
semi-autonomous way. Therefore, the pilot safety is no longer a concern. The original and
greatest uses of UAV are in military applications. Since the modern technologies make them
less expensive and can be made into much smaller sizes to increase their ﬂexibilities. In recent
years, unmanned aerial vehicles, have been increasingly utilized by civilian organizations, such
as anti-terrorism, disaster management, remote area surveillance and hazardous environment
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.274

493

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

monitoring. For instance, after a 6.1 magnitude earthquake struck Ludian County in Yunnan,
China, August 2014. Several UAV teams worked directly with the China Association for Disaster and Emergency Response Medicine. Given the dense rubble and vegetation in the disaster
aﬀected region of Ludian County, ground surveys were particularly challenging to carry out.
The UAVs provided disaster responders with an unimpeded bird’s eye view of the damage,
helping them prioritize their search and rescue eﬀorts. China has rapidly developed UAV use in
recent years, and it helped save time and money while providing highly reliable data. Moreover,
multiple UAVs working in groups presents the opportunity for new operational paradigms.
An UAV swarm is a group of vehicles that work together, communicating with each other
and assisting other members of the swarm in tasks to accomplish goals. There are many
possible applications for UAV swarms, the most immediate could be search and rescue: a
swarm could cover a lot of ground quickly and would require only one operator. Another could
be exploration: swarms of simple and small vehicles could scan high-risk buildings and sites
rapidly, whereas large vehicle cannot. But the challenge is how to control multiple vehicles
cooperate automatically to ﬁnish a given task. New challenges imposed by intelligent swarms
have attracted many researchers since the last decade. New simulation models, command and
control mechanisms and simulation tools have been developed to tackle issues in diﬀerent aspects
of the swarm [9].
Control, that is aimed at ensuring the moving object(plant) behaves in a desired manner.
Developing a command and control system for coordinating an UAV swarm is more challengeable since the control plant is more complex and meeting with more physical constraints and
uncertainties. A computational model of the plant provides a way to test and analyze the
performance of the designed controller via simulation. In many cases, testing newly developed
control systems in a virtual environment is the only way to guarantee safety. Additionally,
the model would allow better repeatability in testing. A good way to model the UAV swarm
for testing control scheme is by using a bottom-up modeling approach and using decentralized
methods to coordinate vehicles. Although the decentralized approach may require more communication in a low autonomy system, the intelligence is truly distributed, which makes for a
more ﬂexible, adaptive and eﬃcient organization. The principles of multi-agent systems have
been used in [1, 2, 3] and [10] to issue the control and coordination of swarm.
This paper describes a prototype application for UAV swarm control study by using agent
technology. The agents are seen as the enabling technology supporting the fusion of several
traditional UAV system areas: guidance and navigation, attitude control, telemetry, etc., in
the context of swarm control. Three key sub-models to create a multi-agent system are: agent,
agents interaction and environment. In this paper, we introduce an easy-to-use, bottom-up
approach to model the vehicles as agents with the consideration of their maneuverability and
communication for interaction. Compared with other related works about using multiple agent
system for modeling vehicle swarms, our work considered its dynamic characteristic and interaction, the six-degree-of-freedom(6DoF) model is used to represent the physical constraints
of UAVs. This simulation system would allow the swarm control system designer to focus on
control system design.
The remainder of the paper is organized as follows. In section 2, we discuss some related
work on UAV swarm control, model of swarm and swarm intelligent system utilization on UAV
related study. Section 3 presents the motivation and the way to model UAVs in principle of
multi-agent system. In section 4, we provide the model of communication to achieve interaction
purpose. Then the section 5 presents results of a case study to demonstrate an example use of
our approach on UAV cooperative study. Conclusions and future work are given in Section 6.
494

Model of Collaborative UAV Swarm Toward Coordination . . .

2

Xueping Zhu et al.

Related work

Traditional modeling techniques tended to focus on the mathematical models based on partial diﬀerential equations and accurate models, while a vast majority of mathematical models
are not solvable analytically, and thus approximate methods and numerical methods are the
alternatives[13]. It is hard to say which is better under all cases, proper combination of mathematical and computational model may bring more conveniences in the process of design and
development. Over the past two decades, swarm intelligence based computational algorithms
for optimization have been very active, there are also considerable works on the merge of multiagent system and UAVs. Concerning use of agent for studying swarm of UAVs, Gaudiano et
al. in [7] proposed an agent-based model and several decentralized strategies for swarm control. Their results show that even some fairly simple swarm control strategies based on local
communication can yield satisfactory results on search or suppression missions. Their work
demonstrated the feasibility of modeling UAVs as an self-organized agent towards swarm control and coordination study. Unfortunately, in their simulation tools, they consider vehicle as
a mass point model with simple constraint and ﬂying in a two dimensional plane. Whereas a
ﬂying UAV has many physical constraints, a six-degree-of-free model can better represent these
constraints. Furthermore, if consider the ﬂying height degree of an UAV rather than a 2D plane,
there exist more ways to avoid collision and may express more scalability and robustness.
In the process of developing intelligent autonomous agents for UAV swarm control, according
to the study of R. Ryan et al.[9] , toward the complexity arise from controlling a swarm intelligent system, one solution is decomposing the macro-level emergent behavior into the control
of agent-level parameters. Whereas, one of the principal preconditions for this decomposition
is that the agents must be self-organized and coordinate in a decentralized manner. Thus, it is
necessary to determine the level of autonomy. Clough et al.[5] developed a metrics in terms of
autonomous control levels(ACL), which was pioneered by researchers in the Air Force Research
Laboratory’s Air Vehicles Directorate charged with developing autonomous air vehicles, to determine an UAV’s autonomy. Their ACL metrics include eleven levels from zero to ten, level
zero represents remotely controlled vehicles and level 10 stands for human-like vehicles. The
metrics have been used successfully at the Air Force Research Laboratory in developing plans
and programs in autonomous UAV control research. Their work provides a progressive way to
study swarm intelligent UAV system from a point view of autonomous agent.
Chopra et al [4] examined a new formulation which views the multi-agent coordination and
synchronization from an input-output perspective. An interconnection graph was used to describe agents information exchange over a network. Thus the stability of the multi-agent system
was provided by using Lyapunov Krasovskii theorems. In addition, they provided synchronization results for both ﬁxed and switching graphs when the graph topology is not constant,
synchronization with time constant and bounded communication delay in the network was also
provided. Their work provides one solution to simplify the complexity of a swarm (look the
interconnected UAVs as a whole) to design the macro-level swarm behavior control scheme, but
it may lack the ability to concern the behavior constraint and uncertainty of each UAV.
Communication among vehicles is one of the most challenging design issues for collaborative multi-UAV systems. Bekmezci et al. made a survey in UAV-to-UAV communication
related publications in article [8]. They concluded that if all UAVs are directly connected to an
infrastructure, such as a ground base or a satellite, communication between UAVs can be realized. However, this infrastructure based communication architecture restricts the capabilities
of the multi-UAV systems. The authors formally deﬁned Flying Ad-hoc Network (FANET) and
present several FANET application scenarios. Several existing FANET test beds and simulators
495

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

are also presented. Their work recognized the importance of communication study among the
collaborative UAVs in swarm.

3
3.1

Agent model of UAV swarm
Motivation of modeling UAV as autonomous agent

Multi-agent systems are systems composed of multiple interacting computing elements, known
as agents. The agents in a multi-agent system have three important characteristics[12]: Autonomy, the agents are at least partially independent, self-aware, autonomous. The metric to
deﬁne the autonomy level is given in article [5]. Local views, no agent has a full global view of
the system, or the system is too complex for an agent to make practical use of such knowledge.
Decentralization, there is no designated controlling agent (or the system is eﬀectively reduced
to a monolithic system). In order to take advantage of the decentralized characteristic of the

Figure 1: Model an unmanned aerial vehicle as autonomous agent. The sensors and communication devices give it possible to interact with companions and environment. The ﬂight dynamic
model reﬂects constraints and uncertainties.
multi-agent system, the agent should be given some degree of autonomy. When talking about
autonomy, we mean the agent can collect information by interacting with other agents or the
environment they are in, then make decision according to these information. From the point
view of one UAV, outlined in Figure 1, UAVs collect information from other vehicles and the
environment, the decisions include special movements, period of trajectory planned etc. Then
the navigation system transfer the behavior, position or orientation, to control command for
autopilot to achieve. This mechanism is quite diﬀerent with a living body because the behavior
of an ﬂying vehicle contain many uncertainties and constraints, for instance the ﬁxed-wing vehicles must keep a minimum velocity to get enough lift force, their maneuverability is aﬀected
by many ﬂight state variables and structure. It is diﬃcult to model these uncertainties and
constraints in “if-then” statement. Fortunately, when look back to the design of a single UAV,
496

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

the mathematica model can represent most of the constraints, and uncertainties can be modeled as stochastic processes. Thus, we can use the mathematic model of UAV to perform their
decisions in order to accomplish behaviors, the system which provides intelligence to UAV will
be connected with the navigation system.
This section will describe the mathematic model of an UAV from point view of autonomous
agent. The equations of motion for a ﬂight vehicle are written in a body-ﬁxed coordinate system
Oxb yb zb rigidly connected with the moving UAV, with the origin point in the center of gravity.
The x-axis lies in the symmetry plane of the vehicle and points forward; the z-axis lies in
the symmetry plane of the vehicle, perpendicular to the x-axis, and points down; the y-axis is
perpendicular to the symmetry plane of the vehicle and points out the right wing(right-handed).
Another reference system is earth-ﬁxed Oxe ye ze , the origin O is at an arbitrary location on the
ground(e.g. launching point). The xe -axis is directed North, ze axis points towards the ground
and ye -axis can be determined by using the right-hand rule.

3.2

Flight Dynamic Model of UAV

The dynamical model of UAV forms the heart of its simulation. It can represent the complex
relationship between ﬂight state and constraint, uncertainty. The inputs of ﬂight dynamic submodel include all the ﬂight state variables in given level of detail, outputs are force and moment
applied on body. Due to the complexity of a ﬂying air vehicle, it is impossible to consider all the
force and moment applied on the body. For lack of space, we only present the main methods
for calculating the force and moment on a ﬂying ﬁxed-wing air vehicle. A detailed mathematic
model of a ﬁxed-wing aircraft can be found in [6, 11].
T
b
The external force applied on ﬂying vehicle include aerodynamic force Faero
= X Y Z ,
T

gravitational acceleration Fge = 0 0 mg0 and propulsive force P provided by engine. The
superscript e and b indicate that the force are given in the Oxe ye ze and Oxb yb zb reference
system separately. As the point at which the aerodynamic force applied is not in the center of
T
b
b
= Mxb Myb Mzb on the vehicles. Faero
gravity, which will cause external moment Maero
b
and Maero can be calculated by the given Formula (1).
⎡ ⎤
⎡ ⎤
Cx
mx
1
b
Faero
= ⎣Cy ⎦ qS, M baero = ⎣my ⎦ qSL, q = ρV 2
(1)
2
Cz
mz
T

T

Where, the Cx Cy Cz and mx my mz are aerodynamic force and moment coeﬃcient respectively. ρ is the air density, V is the velocity of vehicle and L is the chord length.
Since the direction of P is parallel with Oxb , the resultant in system Oxb yb zb can be calculated by Formula (2).
⎡ ⎤
⎡
⎤ ⎡ ⎤ ⎡ ⎤
Fxb
− sin θ
X
P
⎣Fyb ⎦ = mg0 ⎣ cos θ sin φ ⎦ + ⎣ Y ⎦ + ⎣ 0 ⎦
(2)
Fzb
cos θ cos φ
Z
0
Given the foregoing, the problem transformed to calculate the coeﬃcients under current
ﬂight state. One of the solutions to calculate these coeﬃcients is by using the vehicle’s state
and control deﬂections as variables to look-up values from the aerodynamic tables. During the
look-up process, interpolation is used for states and deﬂections not found in the tables. We take
the lift coeﬃcient computation as an example, Cz is mainly determined by angle of attack α,
velocity V and horizontal tailplane δz . Since Cz increases almost linearly with δz and α until
497

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

the stall angle is reached. The wing should never work in this zone where the Cz decreases
importantly which makes the airplane loosing altitude very rapidly. We can use the simpliﬁed
Formula (3) to calculate Cz .
Cz = f (V, α, δy ) = Cz0 + Czα · α + Czδy · δy

(3)

Where, Cz0 is the lift coeﬃcient when both α and δz are equal to zero(the zero lift coeﬃcient).
δ
Czα and Cz y are related with velocity, write as: Czα = f (V ), Czα = f (V ). These relationships
can be given as a look-up table got through some wind tunnel tests or computational ﬂuid
dynamics(CFD) software. Table 1 lists all the parameters needed to deﬁne the ﬂight dynamic
character of an UAV.

Notation
m, I
S
L
z
C δx,y,z
-V
Cα
x,y,z -V
C (x,y,z)0
z
-V
mδx,y,z
mα
x,y,z -V
m(x,y,z)0

3.3

Table 1: List of aerodynamic data needed to model an UAV
Deﬁnition
The mass and moment of inertia of the rigid body.
Sum of wing area.
The chord length.
The drag/side/lift force coeﬃcient derivative due to corresponding horizontal
tailplane to velocity.
The drag/side/lift force coeﬃcient derivative due to angle of attack to velocity.
The zero drag/side/lift force coeﬃcient.
The roll/pitch/yaw moment coeﬃcient derivative due to corresponding horizontal tailplane to velocity.
The roll/pitch/yaw coeﬃcient derivative due to angle of attack to velocity.
The zero roll/pitch/yaw moment coeﬃcient.

Kinematic Model

The Section 3.2 gives the way to compute force and moment apply on vehicle according to current ﬂight state. In this section, we use Euler angle representation to implement the six-degreesof-freedom equations of motion. The motion of a unmanned aircraft vehicle is examined in the
T
reference system Oxb yb zb . The inputs to the kinematic model include: force Fxb Fyb Fzb
and moment Mxb
include: position xe

Myb
ye

Mzb
ze

α, sideslip β, Euler angles ϕ

T

T

θ

, both should be given in the body-ﬁxed frame. The outputs

and velocity Ve in earth-ﬁxed reference frame, angle of attack
ψ

T

and the body-ﬁxed angular velocity vector ω.
⎤
⎡ ⎤
Fxb
p
1 ⎣ ⎦
Fyb + Vb × ω, ω = ⎣q ⎦
V˙b =
m
r
Fzb
⎡

(4)

Equation (4) gives the accelerated velocity in the system Oxb yb zb . The linear velocity
T
Vxb Vyb Vzb
in the system Oxb yb zb can be calculated through integration. Then the
velocity in system Oxe ye ze was calculated by multiply with a ZY X rotation order direction
cosine matrix(DCM), i.ie, Ve = MDCM ∗ Vb . Moving on from here, the location of UAV
T
( xe ye ze ) in the system Oxe ye ze is calculated by integrating velocity Ve .
498

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

As for angular rotation, Equation (5) gives the body-ﬁxed accelerated angular velocity ω,
˙
then the body-ﬁxed angular velocity vector ω can be updated.
⎞
⎛⎡
⎤
⎞
⎛
Mxb
Ixx −I xy −I xz
−I yz ⎠
(5)
ω˙ = I −1 ⎝⎣Myb ⎦ + (Iω) × ω ⎠ , I = ⎝−I yx Iyy
Mzb
−I zx −I zy
Izz
T

The relationship between the body-ﬁxed angular velocity vector, p q r , and the rate
T
of change of the Euler angles ϕ˙ θ˙ ψ˙ , can be determined by resolving the Euler rates into
the body-ﬁxed coordinate frame [6, 11] as shown in Formula (6).
⎤⎡ ⎤ ⎡
⎤⎡
⎤⎡ ⎤
⎡ ⎤
⎡ ⎤ ⎡ ⎤ ⎡
ϕ˙
0
0
1
0
0
cos θ 0 − sin θ
p
ϕ˙
1
0
0
⎣q ⎦ = ⎣ 0 ⎦+⎣0 cos ϕ sin ϕ ⎦ ⎣θ˙⎦+⎣0 cos ϕ sin ϕ ⎦ ⎣ 0
1
0 ⎦ ⎣ 0 ⎦ = J −1 ⎣ θ˙ ⎦
0 − sin ϕ cos ϕ
0 − sin ϕ cos ϕ
sin θ 0 cos θ
r
0
0
ψ˙
ψ˙
(6)
Inverting J gives the required relationship to determine the Euler rate vector from the
body-ﬁxed angular velocity.
⎡ ⎤
⎡ ⎤ ⎡
⎤⎡ ⎤
ϕ˙
p
1 (sin ϕ tan θ) (cos ϕ tan θ) p
⎣ θ˙ ⎦ = J ⎣q ⎦ = ⎣0
cos ϕ
− sin ϕ ⎦ ⎣q ⎦
(7)
˙
r
0 (sin ϕ sec θ) (cos ϕ sec θ)
r
ψ
T
Given the foregoing, the Euler angle can be updated through integrating of ϕ˙ θ˙ ψ˙
separately.
Finally, in calm weather the angle of attack α and sideslip β are expressed by the formulas
(8) according to the deﬁnition of α and β.

α = arctan

4

Vzb
,
Vxb

β = arcsin

Vby
Vxb 2 + Vyb 2 + Vzb 2

(8)

Interaction amongst UAVs

Multi-agent coordination is the key to multi-agent problem solving. In order to get information
for deciding which actions to take, communication is crucial for agents to coordinate properly.
Since UAVs move quickly and ﬂexibly, it is diﬃcult to communicate by using wire. Even
using wireless techniques, the ﬂying attitude and the speed of UAV should be considered. So,
the communication should be carefully considered in an agent level when developing a swarm
control system. This section presents the model of communication amongst UAVs with the
purpose of analyzing and optimizing UAV communication strategies.
From point view of wireless signal coverage, we implemented two types of communication in
terms of latency, coverage and power consumption to achieve interaction purpose among agents:
direct, UAVs can communicate directly without base station support but with a constrained
coverage; in-direct, communicate via some ground supported base station or moving vehicles
supported base station without distance restriction. The direct communication, such as WiFi,
Bluetooth and ZigBee, their advantages include low power consumption, less latency and free
of charge. Long distance in-direct communication, for instance, GSM and satellite, although
they can provide big coverage, usually consume more power, cost money and with high latency.
In application level, we introduced three communication types, i.e., broadcast: an agent
share its current state to a set of agents; query: an agent send a message to a set of agents to
499

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

request their states; sync: an agent (e.g. group leader) send a sync request message to a group
of agents, then all the agents who receive the sync request will broadcast their current state
to other group members. Through this, the control mechanism designer can design policies to
properly choose direct or in-direct communication media for passing messages. For example,
to know the state of all UAVs in the coverage of direct communication device, just need to
send a query message to all the UAVs through direct communication way, only those who are
currently in the direct communication range could receive this message and reply their state.
As for implementation, we implemented a message switch layer(MSL) work in an observer
role(not exist in real situation, only for implementation, all information about simulation world
is accessible by observer), all the communication amongst UAVs will pass through this layer and
MSL will record all these messages for post-simulation analysis. This provides a ﬂexible way
for control mechanism designer to optimize the communication policies in micro-level behavior.

5

Experiments and Discussion

In this section we present a simple case study to demonstrate the possible use of the presented
approach. The proof-of-concept simulator has been implemented by using Netlogo3D. The task
is to control a swarm of ﬁve UAVs, the mission of swarms is to “scan”(e.g., searching survival)
a mountain area of size 10 × 20km2 on a preset height(100 meters over ground). All the ﬁve
UAVs cooperate by forming in a horizontal line perpendicular to ground speed direction, the
distance between two neighboring UAVs should be kept as 500 meters and a leader was set in the
center to direct the formation(broadcast its state actively). All the vehicles ﬂy with their curing
speed(35m/s) to save power consumption. The physical parameter of the vehicles are from a
commercial available Tower Trainer 40 aircraft. To make it easier to implement in Netlogo3D,
the dynamic process was described by means of an inertial unit of the ﬁrst order and ground
level height was achieved by a PID controller. Its navigation system receive messages about
leader states from the leader and ground height from its sensors. The distance error between
neighbor vehicles and the height error to the ground will be used to generate tailplane control
command δzc and thrust command Pc to achieve micro-level behavior as drawn in Figure 3.
As for the simulation environment, an exponential function, as in (9), is introduced to
emulate mountains which are the main threats of the UAVs in this experiment.
n

hi ∗ exp −

z(x, y) =
i=1

x − cx i
g xi

2

−

y − c yi
g yi

2

(9)

This function gives altitude of the given coordinate (x, y) in the simulated terrain. Where,
hi controls height of peak i; cxi and cyi mark central position of peak i; gxi and gyi control
peak gradient in x and y orientation respectively. With this model, we created an area with 15
mountains, the swarm will ”scan” this area by a line formation with constant speed at a preset
ground height. Selected macro-level behavior emerge from agent-level behavior are shown in
Figure 2 and 3. One of the constraints reﬂected by 6DoF mathematic model was shown in
Figure 3b. It allows to study how system level properties emerge from the adaptive behavior
of individuals as well as how, on the other hand, the system aﬀects individuals.
As we consider the collaborative UAVs as autonomous agents, although the designed scheme
is to control the macro-level emergent behavior of swarm to meet the application objective, it is
easy to break the overall mission into agent-level behavior control. With this, we can analyze the
execution of the control algorithm in micro-level(error and control command). This individual
behavior provides detailed information to analyze the behavior achievement of controller. This
500

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

37

500

uav5
uav4
uav3
uav2
uav1

300

e

200

search speed (m/s)

z (meter)

400

36.5

100
0
0
2000
4000
6000
8000
10000
12000
e
14000
16000
18000
20000

36

35.5

35

34.5

34

x (meter)

0

−1000

0

1000

2000

3000

4000

5000

6000

7000

8000

10000

9000

33.5

ye(meter)

33

0

100

200

300

400

500

600

time(second)

(a) 3D View of UAV swarm trajectory

(b) Search speed of UAV swarm

Figure 2: Swarm trajectory and search speed (macro-level behavior).








	

	

	

	

	

0.5

0.3

0.2



az(m/s2)

height error(m)

uav5
uav4
uav3
uav2
uav1

0.4





ï

0.1

0

−0.1

−0.2

ï
−0.3

ï
−0.4

ï 












−0.5



time(second)

(a) Height error

constraint
0

100

200

300

400

500

600

time(second)

(b) UAVs’ normal acceleration (meet constraint)

Figure 3: UAVs’ height error and normal acceleration (micro-level behavior).
approach alleviate control problems arising from the non-linearity relationship between the
agent-level control behavior and application-level emergent behavior.

6

Conclusions and Future work

Instead of developing and operating one large vehicle, using a group of small UAVs has many
advantages. Whereas, a ﬂying vehicle has many uncertainties and constraints that are diﬃcult
to model through a “If...Then...Else” statement. The complexity of swarm arises the diﬃculty
to analyze and evaluate the control and coordination mechanism. This paper presented the idea
to model an UAV swarm as a multi-agent system. A six-degree-of-freedom mathematic model
was used in order to fully represent constraints and uncertainties of ﬂying vehicles. It combines
the traditional calculus based mathematical methods with computational techniques. The
model we presented can be used for developing and analyzing the global coordination control
algorithms, examining eﬀects of communication diﬃculties on coordination control scheme from
an individual level response. It simpliﬁes the modeling process without missing agent behavior
constraint character.
This work is a part of a longterm project about intelligent UAV swarm application. As
the future work, in one side, although the prototype proved the possibility of modeling UAVs
as agents in terms of the multi-agent system principle, in a Netlogo3D world the number of
patches grows very quickly that slow the model down or even cause NetLogo to run out of
memory. For this reason, we plan to implement our next version by using Go programming
language, because it supports concurrency and channel communication between its light pro501

Model of Collaborative UAV Swarm Toward Coordination . . .

Xueping Zhu et al.

cess(one process will be used to execute the model of one UAV). It seems to be an interesting
framework for implementing multi-agent systems. Currently, we only considered the ﬁxed-wing
vehicle, whereas, rotary-wing, such as quadcopter is also widely used in some application. So,
in another side, we will construct the model of quadcopter in order to provide the ability of
building heterogeneous UAV swarm.

7

Acknowledgments

This research has been supported by the Aeronautical Science Foundation of China under grant
number 20120112002 and has been partially supported by China Scholarship Council (CSC)
under reference number: 201306290023.

References
[1] Jeremy W. Baxter, Graham S. Horn, and Daniel P. Leivers. Fly-by-agent: Controlling a pool of
UAVs via a multi-agent system. Knowledge-Based Systems, 21(3):232 – 237, 2008. AI 2007 The
27th SGAI International Conference on Artiﬁcial Intelligence.
[2] JeremyW. Baxter and GrahamS. Horn. Controlling teams of uninhabited air vehicles. In Michal
Pchouek, SimonG. Thompson, and Holger Voos, editors, Defence Industry Applications of Autonomous Agents and Multi-Agent Systems, Whitestein Series in Software Agent Technologies and
Autonomic Computing, pages 97–112. Birkhuser Basel, 2008.
[3] R.W. Beard, T.W. McLain, D.B. Nelson, D. Kingston, and D. Johanson. Decentralized cooperative
aerial surveillance using ﬁxed-wing miniature uavs. Proceedings of the IEEE, 94(7):1306–1324, July
2006.
[4] Nikhil Chopra and MarkW. Spong. Passivity-based control of multi-agent systems. In Sadao
Kawamura and Mikhail Svinin, editors, Advances in Robot Control, pages 107–134. Springer Berlin
Heidelberg, 2006.
[5] Bruce T Clough. Metrics, schmetrics! how the heck do you determine a uav’s autonomy anyway.
pages 313–319, 2002. AIAA 1st Technical Conference and Workshop on Unmanned Aerospace
Vehicles, Systems, Technologies, and Operations.
[6] Bernard Etkin. Dynamics of atmospheric ﬂight. Courier Dover Publications, 2012.
[7] Paolo Gaudiano, Benjamin Shargel, Eric Bonabeau, and Bruce T Clough. Swarm intelligence: A
new c2 paradigm with an application to control swarms of uavs. Technical report, DTIC Document,
2003.
[8] lker Bekmezci, Ozgur Koray Sahingoz, and amil Temel. Flying ad-hoc networks (fanets): A survey.
Ad Hoc Networks, 11(3):1254 – 1270, 2013.
[9] R. Ryan McCune and Greg R. Madey. Control of artiﬁcial swarms with DDDAS. Procedia
Computer Science, 29(0):1171 – 1181, 2014. 2014 International Conference on Computational
Science.
[10] Paul Scerri, Tracy Von Gonten, Gerald Fudge, Sean Owens, and Katia Sycara. Transitioning
multiagent technology to uav applications. In Proceedings of the 7th International Joint Conference
on Autonomous Agents and Multiagent Systems: Industrial Track, AAMAS ’08, pages 89–96,
Richland, SC, 2008. International Foundation for Autonomous Agents and Multiagent Systems.
[11] Robert F Stengel. Flight Dynamics. Emerald Group Publishing Limited, 2004.
[12] Michael Wooldridge. An introduction to multiagent systems. John Wiley & Sons, 2009.
[13] Xin-She Yang, Slawomir Koziel, and Leifur Leifsson. Computational optimization, modelling and
simulation: Past, present and future. Procedia Computer Science, 29(0):754 – 758, 2014. 2014
International Conference on Computational Science.

502

