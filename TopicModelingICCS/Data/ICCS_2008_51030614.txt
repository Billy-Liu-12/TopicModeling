On Some Method for Intrusion Detection Used by the
Multi-agent Monitoring System
Agnieszka Prusiewicz
Institute of Information Science & Engineering, Wrocław University of Technology, Poland
Wybrzeże Wyspiańskiego 27, 50-370 Wrocław, Poland
agnieszka.prusiewicz@pwr.wroc.pl

Abstract. In this paper an original method for intrusion detection used by the
multi-agent monitoring system is proposed. Due to the complexity of the problem of the network security maintaining it is a good idea to apply the multiagent approach. The multi-agent system is used in the tasks of computer
network monitoring in order to detect the security policy violations. In this paper the algorithm for detecting some type of attack is proposed. This algorithm
is based on the network traffic analysis.

1 Introduction
In this paper an original method for intrusion detection used by the multi-agent monitoring system is proposed. The problem of the network security is taken up since
eighties [9] and is developed up today [5, 8, 20]. A comprehensive survey of anomaly
detection systems is presented in [16].
A comparison of different approaches to intrusion detection systems is given in [4].
The general challenge of the current intrusion detection systems is to find the difference between the normal and abnormal user behaviour. Intrusion detection system
(IDS) should not only recognise the previously knows patterns of attack, but also
react in case of appearance of the new events that violate the network security policy.
The first models of IDS systems were centralised namely data were collected and
analyzed on a single machine. However, the distributed nature of the task of the network security monitoring requires applying of the distributed tools for network security maintaining. Many examples of the distributed IDS systems are given in [1].
The most important postulate addressed to the intrusion detection systems is that,
such systems should automatically react in case of detecting the security policy
breach to prevent the attack execution or to reduce the potential loss in the network
systems. IDS systems should be equipped with the components responsible for the
permanent observation of the states of monitored nodes and components that integrate
the results of these observations and diagnose the security level of the system. It is
reasonable to apply the agency for solving the tasks of the network security monitoring. A multi-agent approach in a network monitoring system was used in works [7, 3,
10, 19] where the general system architecture was proposed.
In our approach we also apply the agency to solve the tasks of network security
monitoring. In work [11] the framework of an original proposal of the intrusion
M. Bubak et al. (Eds.): ICCS 2008, Part III, LNCS 5103, pp. 614–623, 2008.
© Springer-Verlag Berlin Heidelberg 2008

On Some Method for Intrusion Detection Used by the Multi-agent Monitoring System

615

detection system based on the multi-agent approach was presented. In particular, the
architecture of such system and the task of agents were specified. Proposed ideas
were further developed and in the work [14] the problem of anomalies detection on
the basis of the nodes traffic analysis was discussed. Then in the work [17] the
agents’ knowledge organisation and the general idea of the algorithm for detecting
the distributed denial of service (DDoS) attack was proposed. In this work we develop the algorithm for detecting the distributed denial of service attack.

2 The General Agents’ Knowledge Structure
It is assumed that two types of agents are in the monitoring system: managing agents
and monitoring agents. Each monitoring agent ma is responsible for one monitoring
region mr consisted of the set of nodes V. Managing agents may modify the size of
the monitoring regions by adding or removing nodes from the set V . It is assumed
that the monitoring regions may overlap.
2.1 The Characteristic of the Monitoring Agents
The agent ma observes the states of the nodes from his monitoring region mr with a
reference to the some properties from the set P. ma stores all the observations in his
private database DB.
Definition 1. A single observation of agent ma is a tuple:
O (v, ( p, x ), t ) ∈ DB

(1)

where v ∈ mr , p ∈ P , t ∈ T , T is the universe of the timestamps and DB denotes the
database of the agent ma.
Single observation O (v, ( p, x ), t ) refers to the situation that at the timestamp t the
agent ma has observed in the node v the value of the parameter p equals x [17].
DB consists of the set of observations (see definition 1) and communication data.
Communication data consists of the communication matrix CM of the timestamps in
which the communication between the nodes took place.
The second module embodied in the monitoring agent is the anomaly detection
module that is supplied by the observations from the set of observations. This module
is responsible for data analyzing to detect the security policy violation in the network
system [17].
Definition 2. An anomaly detection module of agent ma is defined as a triple:
AD = DB[t b' , t e' ] , AT , AC

(2)

where:
- DB[tb' , t e' ] is a subset of DB restricted to time interval [tb' , te' ] and is defined as:
DB[t b' , t e' ] = {O (v, ( p, x ), t ) : p ∈ P, v ∈ mr; t ∈ [t b' , t e' ]}

(3)

616

A. Prusiewicz

For a chosen time interval [tb' , te' ] each tuple O (v, ( p, x ), t ) ∈ DB that fulfils the follow-

ing condition: t ∈ [tb' , te' ] is sent into the anomaly detection module AD .
- AT is a table of discovered anomalies defined as:
AT = {A(v, p, α, [tb , t e ]) : p ∈ P, v ∈ mr ;[tb , t e ] ⊆ [tb' , t e' ]}

(4)

A single anomaly A(v, p, α, [t b , t e ]) ∈ AT is interpreted as the agent ma believes at the
level α that in the time interval [tb , te ] in the node v an anomaly connected with the
property p occurred.
- AC is an anomaly archive consisted of discovered anomalies that are sent from
AT after attack detection. However only anomalies connected with discovered attack
are sent to the archive AC . In this way the time interval of discovered anomalies is
not a criterion of sending given tuples A(v, p, α, [t b , t e ]) into anomaly archive.
Anomaly table AT is created for each monitoring region independently. On agents’
autonomy assumption it is quite possible that one agent may discover anomaly state
of the node v with reference to some property’s value, while other agent having the
same node in its monitoring area will not observed any anomaly with reference to this
property’s value.
The third module closed in internal agents’ knowledge structure is ontology module that consists of the attack patterns. Each monitoring agent subordinates only to
one managing agent.
2.2 The Characteristic of the Managing Agents
Managing agents are responsible for coordination and management of the monitoring
system. The internal structure of the managing agents is as follows. Each managing
agent is equipped with: data storage module, data analysis module, attack detection
module, queue task module and communication module. In the data storage module
two types of data are stored: data received from the monitoring agents and knowledge
about the pattern of attacks. Data sent by monitoring agents are derived from their
anomaly detection modules. In the data analysis module conflicts of inconsistent
knowledge incoming from distributed resources are solved applying consensus methods. Many a time managing agent after receiving the warn message from a one agent,
asks other agents about their opinions. Also the new patterns of attacks are discovered
in the data analysis module.
The attack detection module is responsible for the attack detections. In the attack
detection module there are embodied two algorithms: the algorithm for determining of
the sources attack and the algorithm for determining of the attack propagation scenarios. In this paper the attention to the first algorithm is paid, see Section 4 for details.
The Queue task module consists of the tasks that must be executed or delegated by
managing agent [17].

3 The Language of Communication
The agents communicate with each other to exchange knowledge about the states of
monitored nodes or send the requests. They use a communication language compatible

On Some Method for Intrusion Detection Used by the Multi-agent Monitoring System

617

with standard ACL (Agent Communication Language) proposed by FIPA (Foundation
of Intelligent Physical Agents) [15]. The ACL like KQML (Knowledge Query and
Manipulation Language), developed by DARPA knowledge Sharing Effort, rely on
speech act theory [2, 18]. These languages base on the performatives. The messages
might be sent to one or more receivers. From the number of receivers point of view
two types of performatives are considered: peer-to-peer and multicast. In the algorithm
for determining the set of Masters following types of messages are used: warn messages, multi_query_if messages, confirm (disconfirm) messages and multi_request
performatives with inform action execution. A monitoring agent ma sends the warn
message to the managing agent as a warning of the anomaly detection in his monitoring region. There must exist a tuple A(v, p, α, [tb , te ]) in the agent’s ma anomaly table.
The message with query_if performative is sent if the sender wants the receiver to ask
about the anomaly appearance, i.e. the value of the parameter p in a given node v is
higher than a given value x. Multi_query_if is used to send a query to a group of the
agents. For example the managing agent may ask, if in the given time interval the value
of the parameter p in a node v was abnormal i.e. higher than x:
multi_query_if( A(v, ( p > x ), α, [tb , te ]) ).The confirm (disconfirm) message is send by the
managing or monitoring agent if they want to confirm (disconfirm) the true of some
proposition. If the managing agent sends confirm (disconfirm) message to more than
only one agent then we have the multi_confirm (multi_disconfirm) message. The
multi_request performative is sent by the managing agent to a group of monitoring
agents. In this kind of message also the type of action must be specified. In the algorithm proposed in this paper an inform action is considered. In case of multi_request
performatives with inform action execution the managing agent sends to the group of
the monitoring agents a request of sending information about the discovered anomalies. If the managing agent requests of sending information about a state of a single
node v with the reference to the one parameter p in the time interval [t b , t e ] then the
message content is as follows: send_information( O (v, p, [tb , te ]) ). The managing agent
may also ask about the nodes that have been communicated wit a given node. In this
case the communication matrix is analyzed.

4 The Algorithm for the DDoS Attack Detecting
The algorithm for the sources of DDoS attack detecting is embodied in the managing
agent’s attack detection module. It is assumed that network traffic should be analyzed
in order to detect anomalies. The main purpose is to detect the attack before blocking
the chosen goal. In order to detect the DDoS attacks the anomalies in traffic characteristics and anomalies in communication schemes must be observed. In the DDoS attack
it is assumed that Attacker is the source of attack and initializes the overall attack in a
computer network by putting a maliciously software in chosen computers (nodes).
These nodes become Masters. In the next step each Master starts to infect other nodes
that become Demons. Next Demons infect other nodes and those next ones etc. and in
this way spreading stage is expanded. When sufficient number of nodes is infected or

618

A. Prusiewicz

at the fixed time point final attack or on earlier chosen computer (attack goal) is carried out. Due to the numerous numbers of requests sent simultaneously from different
Demons at the same time interval to the attack goal all his resources are allocated and
blocked [13].
4.1 The Idea of the Algorithm
The goal of applying the algorithm for the sources attack detecting is to determine the
node v k ∈ V that is an Attacker. This algorithm consists of two main steps. In the first
step the set of Masters is detected and in the second one on the base of Masters’ input
traffic analysis the Attacker is trailed. In this work the first Step is discussed in detail.
The idea of the algorithm is as follows [17]:
Step 1. Determine the set H of Masters.
Step 2. If the cardinality of the set H is higher than threshold value τ then go to Step
3 else go to Step 1.
Step 3. Apply the procedure of the Attacker detection.
4.2 The Algorithm for Determining the Set of the Masters
Let us assume that the set of managing agents is one-element and we detect the anomaly with reference to one monitored property.
The algorithm for determining the set of the Masters is divided into two parts: Preliminary part and Principal part.
Preliminary part
Step 1. The monitoring agent ma detects the anomaly in the node v∈mr with the reference to the property p∈P. It means that there exists the tuple (v, p, α, [tb , t e ])
in his anomaly table AT.
Step 2. The agent ma determines the node vk∈mr, in which the anomaly of the value
of the parameter p appeared at earliest.
Step 3. The monitoring agent ma affirms the local anomaly in his monitoring region,
indicates the node vk and sends a warn message to the managing agent.
Step 4. If the node vk is monitored by the other monitoring agents, then Go to the Step
5, else Go to the Step 8.
Step 5. The managing agent asks other monitoring agents about their opinions about
the state of the node vk in a given time interval [tb − Δ , t e ] . The managing agent
sends to them the message with multi_request performative with inform action execution.
Step 6. The managing agent collects the answers and obtains consistent opinion about
the state of the node vk. In this step, the procedure for verification of the node
state is carried out, in which the consensus methods are applied. The aim of
this procedure is to obtain the agreement of the node state.
Step 7. If anomaly exists then Go to Step 8 else send into the queue task module the
task of the node state verification in some time.
Step 8. The managing agent initializes Principal part of the algorithm.

On Some Method for Intrusion Detection Used by the Multi-agent Monitoring System

619

Principal part
Step 1. The managing agent asks monitoring agents which nodes communicated with
the node vk in the time interval [tb − Δ , tb ] . The managing agent sends the message with multi_request performative with inform action execution.
Step 2. Monitoring agents on the basis of their communication matrixes determine the
nodes that communicated with the node vk in the time interval [tb − Δ , tb ] and
send the answers.
Step 3. The managing agent obtains the set K of the nodes that communicated with
the node vk in the time interval [tb − Δ , tb ] .
Step 4. The managing agent commissions the monitoring agents to verify if in the
nodes from K the anomaly of the value of the parameter p in the time interval [tb − Δ , tb ] appeared. For each v∈K the managing agent sends the message
with multi_guery_if performative.
Step 5. Monitoring agents on the basis of their anomaly tables send the answers to the
managing agent.
Step 6. The managing agent determines the set of infected nodes K’. If the nodes from
K’ are monitored by more than one monitoring agents, then the managing
agent obtains the consensus opinion about the anomalies.
Step 7. If the set K’ is not empty then go to Step 8 else go to Step 9.
Step 8. From the set K’ managing agent selects the node v’ that communicated with
the node vk at earliest and applies for the node v’ the Principal Part. Go to the
Step 1.
Step 9. The node vk is a Master. Include vk into the set H. Stop.
4.3 An Example
Fig. 1 shows the anomaly of the input and output traffic in the node v2∈mr3. The node
v2 is monitored by the agent ma3. This agent has observed the anomaly of the input
traffic in the following time intervals: [t3 , t7 ] , [t11 , t16 ] , [t18 , t20 ] and [t20 , t25 ] with the
reference to the values of p1 and p2. In the time intervals: [t9 , t14 ] and [t19 , t23 ] the
anomaly of the output traffic has been observed. The nodes: v3 , v13 , v17 , v16 , v15
communicated with v2 while v2 communicated with v8 and v19 .
ma3

v 13

p1

p3
v8

]
,t 7
[t 3

[t 9,

v 17

t 14]
v7

p2

[t11 ,t 16]

v2

[t19 ,t
2

3]

]
,t 2 0
[t 18
25]

p4
v 19

[t20 ,
t

v 16

p1

v3

p2
v 15

Fig. 1. Anomaly of the input and output traffic in the node v2

620

A. Prusiewicz

ma 3

p2

t3

t7

t9

t11

p2

p1

p1

v2

t14

t16

t18 t19 t20

Input traffic

t23 t 25

Output traffic
p3

v3

t2

p4

t4

p3

v5
v6

ma 4

Fig. 2. Graphic representation of the piece of the anomaly table created by the ma3.

-

the anomaly of the parameter p1 in the time intervals [t3 , t7 ] and [t18 , t 20 ]
the anomaly of the parameter p2 in the time intervals [t11 , t16 ] and [t 20 , t 25 ]
the anomaly of the parameter p3 in the time interval [t9 , t14 ]
the anomaly of the parameter p4 in the time interval [t19 , t 23 ]

Let us concentrate on the analyzing of the parameter p3. On the basis of the time intervals in which this anomaly occurred we deduce that the node v3 is the local source
of the attack in the region mr3. Let us assume the belief coefficient α equals 1 for all
detected anomalies and the coefficient Δ equals 4.
The algorithm for determining the set of the Masters is as follows.
Preliminary part
Step 1. The monitoring agent ma3 detects the anomaly in the node v2∈mr3 with the
reference to the property p3∈P. It means that there exists the tuple
(v2 , p3 ,1, [t9 , t14 ]) in his anomaly table AT.
Step 2. The agent ma3 determines the node v3∈mr3, in which the anomaly of p3 appeared at earliest.
Step 3. The monitoring agent ma3 sends warn message to the managing agent.
Step 4. The node v3 is monitored only by the one agent.
Step 8. The managing agent initializes Principal part of the algorithm.
Principal part
Step 1. The managing agent asks monitoring agents which nodes communicated with
the node v3 in the time interval [t0 , t4 ] . The managing agent sends the message
with multi_request performative with inform action execution.
Step 2. Monitoring agents on the basis of their communication matrixes send the
answers.

On Some Method for Intrusion Detection Used by the Multi-agent Monitoring System

621

Step 3. The managing agent receives the answers from two agents: ma1 and ma2 and
determines the set K = {v7 , v9 , v12 } (Fig 3).
Step 4. The managing agent commissions the monitoring agents to verify if in the
nodes from K the anomaly of the value of the parameter p3 in the time interval [t0 , t4 ] appeared. The managing agent sends the message with
multi_guery_if performative.
Step 5. Monitoring agents on the basis of their anomaly tables send the answers to the
managing agent.
Step 6. The managing agent determines the set K’ of infected nodes: K = {v7 , v12 }
Step 8. From the set K’ managing agent selects the node v7 and applies for the node
v7 the Principal Part. Go to the Step 1.

The agent
ma 1

v9

co
com m
un
t0
The agent
ma 2

v12

n
io
at
ic
un
m 3
m t

v7

ication

n ic
mu t 5
com

on
ati

v3

t2

t4

P3

anomaly

Fig. 3. The nodes v7, v9 and v12 have communicated with the node v3 and one of them has infected the node v3.

5 Conclusions
In this paper the problem of automatic intrusion detection was discussed. This paper
is a continuation of the issues presented in previous works [11, 14]. In particular the
ideas presented in [17] were here developed and the algorithm for automatic detecting
of the DDoS attack was in detail described. This algorithm consists of two parts and
the first part was here discussed. As a future work the second part of the algorithm
must be developed and practical verification of presented results must be done.
Applying agency into the tasks of intrusions detection is the chance of building of
the automatic intrusion detection systems that act in an incomplete, inconsistent and
unpredictable environment. Agents as autonomous entities observe the nodes, take the
decisions, communicate each other, integrate the results of their local activity and
solve the global task of intrusion detection. In this paper we concentrate on the presentation of the algorithm for intrusion detection, and it was assumed that after discovering the anomaly of some parameter the agents apply the algorithm for the source of

622

A. Prusiewicz

DDOS attack detection. It must be pointed out that the anomalies discovering plays a
crucial role in a whole system. This problem basis not only on measuring some parameters and comparing them with templates but also requires taking into account
other individual nodes’ characteristics. Undoubtedly the effectiveness of monitoring
system depends not only on the applied intrusion detection algorithms but also on the
input of these algorithms i.e. effectiveness of lower layers responsible for anomalies
detecting.

References
1. Ajith, A., Thomas, J., Han, S.Y.: D-SCIDS: Distributed soft computing intrusion detection
system. Journal of Network and Computer Applications 30(1), 81–98 (2001)
2. Austin, J.L.: How to Do Things with Words, Cambridge (Mass.) (1962), Harvard University Press, 2nd edn. (2005)
3. Balasubramaniyan, J.S., Garcia-Fernandez, J.O., Isacoff, D., Spafford, E., Zamboni, D.:
An Architecture for Intrusion Detection Using Autonomous Agents. In: Proceedings of the
14th Annual Computer Security Applications Conference (1998)
4. Biermann, E., Cloete, E., Venter, L.M.: A comparison of Intrusion Detection systems.
Computers and Security 20(8), 676–683 (2001)
5. Bejtlich, R.: Tao of Network Security Monitoring. In: The: Beyond Intrusion Detection,
Addison-Wesley, Reading (2004)
6. Crosbie, A.M., Spafford, G.: Applying Genetic Programming to Intrusion Detection. In:
Proceedings of the AAAI Fall Symposium on Genetic Programming, AAAI Press, Cambridge, Menlo Park (1995)
7. Crosbie, B.M., Spafford, G.: Defending a Computer System using Autonomous Agents.
In: Proceedings of the 18th National Information Systems Security Conference (1995)
8. Dasgupta, D.: Immunity-Based Intrusion Detection System: A General Framework. In:
Proceedings of the 22nd National Information Systems Security Conference, USA (1999)
9. Denning, D.E., Edwards, D.L., Jagannathan, R., Lunt, T.F., Neumann, P.G.: A prototype
IDES: A real-time intrusiondetection expert system. Technical report, Computer Science
Laboratory, SRI International, Menlo Park (1987)
10. Fenet, S., Hassas, S.: A distributed Intrusion Detection and Response System based on
mobile autonomous agents using social insects communication paradigm, Electronic Notes
in Theoretical Computer Science (2001)
11. Kołaczek, G., Pieczyńska, A., Juszczyszyn, K., Grzech, A., Katarzyniak, R., Nguyen,
N.T.: A mobile agent approach to intrusion detection in network systems. In: Khosla, R.,
Howlett, R.J., Jain, L.C. (eds.) KES 2005. LNCS (LNAI), vol. 3682, pp. 514–519.
Springer, Heidelberg (2005)
12. KQML Specification, http://www.cs.umbc.edu/kqml/
13. Mirkovic, J., Dietrich, S., Dittrich, D., Reiher, P.: Internet Denial of Service: Attack and
Defense Mechanisms. Prentice Hall, Englewood Cliffs (2005)
14. Nguyen, N.T., Juszczyszyn, K., Kołaczek, G., Grzech, A., Pieczyńska, A., Katarzyniak,
R.: Agent-based approach for distributed intrusion detection system design. In: Alexandrov, V.N., van Albada, G.D., Sloot, P.M.A., Dongarra, J. (eds.) ICCS 2006. LNCS,
vol. 3993, pp. 224–231. Springer, Heidelberg (2006)
15. FIPA Specifications, http://www.fipa.org/

On Some Method for Intrusion Detection Used by the Multi-agent Monitoring System

623

16. Patcha, A., Park, J.-M.: An overview of anomaly detection techniques: Existing solutions
and latest technological trends. Computer Networks 51(12), 3448–3470 (2007)
17. Prusiewicz (Pieczyńska) A.: A Multi-agent System for Computer Network Security Monitoring. In: KES–AMSTA 2008, LNCS (LNAI), vol. 4953, pp. 842–849 Springer, Heidelberg (2008)
18. Searle, J.: Speech Acts. Cambridge University Press, Cambridge (1969)
19. Spafford, E., Zamboni, D.: Intrusion detection using autonomous agents. Computer Networks: The International Journal of Computer and Telecommunications Networking 34(4),
547–570 (2000)
20. Wilson, E.: Network Monitoring and Analysis: A Protocol Approach to Troubleshooting.
Prentice Hall, Englewood Cliffs (1999)

