Synchronization Scheme of Multimedia Streams
in Mobile Handoﬀ Control
Gi-Sung Lee
Dept. of Computer Science, Howon Univ., Korea
ygslee@sunny.howon.ac.kr

Abstract. This paper presents a synchronization scheme for enabling a
smooth presentation of multimedia streams during a handoﬀ in mobile
environments. As changes are made to base stations in wireless environments, mobile host-initiated handoﬀs result in multimedia data loss
in a base station as well as low quality of service (QoS) for multimedia streams. As a result of evaluations, the proposed schemes, compared
to the previons schemes, delivered a continuous playout of multimedia
streams while achieving low packet loss.

1

Introduction

Driven by the drastically increasing use of the Internet, mobile computingbased services are emerging in rapid succession. Presentations of multimedia
data stored in a mobile host are not readily implemented, largely due to the
dynamic nature of mobile network’s connectivity, for example, higher data loss
rate, higher delays, and lower network bandwidth[6]. For this reason, buﬀers are
used in a lot of distributed multimedia systems connected to wireless networks
in order to address network-speciﬁc problems including latency and data loss.
A Base Station(BS) transmits subframes from its several multimedia servers. If,
due to unexpected delay and increased traﬃc, their projected playout time is
faster than their actual arrival time, the playout of subframes cannot be implemented[4,7]. In order to address these problems, buﬀering at a BS is required
to reduce packet delay and jitter between a multimedia server and a BS. One
advantage of a mobile network is host mobility. Though, this advantage can become a disadvantage due to some cumbersome processes; not only resources must
be secured for transmission of multimedia streams but also multimedia streams
transmitted to a BS must be transmitted again. With the purpose of minimizing
those drawbacks, this paper places focus on conﬁguring two jitter buﬀers for a
BS and one jitter buﬀer for a mobile host. Streams occurring and lost during a
handoﬀ are transmitted to an Old BS (BSold ), and substreams in odd numbered
buﬀers are transmitted to a New Base Station (BSnew ). During this process, a
mobile host is adjusted to the maximum playout delay jitter. This scheme implements the playout of substreams in BSnew buﬀer that require retransmission,
eliminating the need for retransmission. However, media loss adversely aﬀects
playout.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3036, pp. 389–396, 2004.
c Springer-Verlag Berlin Heidelberg 2004

390

2

G.-S. Lee

Related Work

Research has reached a level where mobile-based synchronization schemes and
previous schemes are converging. M. Woo, N. U. Qazi, and A. Ghafoor deﬁned
the BS as wired/wireless interface. For wired networks, the interface is deﬁned
as a BS buﬀer used to reduce delay and jitter between packets. The disadvantage of this approach is its attempt to apply synchronization to buﬀers through
assignment of existing wireless communication channels [5]. D. H. Nam and S.
K. Park proposed a buﬀer management and feedback scheme that allows transmitted multimedia unit storage in the buﬀer of a MH(MH), and that adjusts
playout time to the medium buﬀer length [2,3]. However, there is a disadvantage
to this approach that the adjustment of palyout time lowers the quality of multimedia data even when a mobile network is in a normal state. That’s because
the stable state does not correspond to the buﬀer of a MH. Azzedine Boukerche
proposed an algorithm that enables message transmission among multimedia
servers, BS and mobile hosts while interfering with multimedia servers as well
as startup time for transmission [1]. The merit of this approach is a well-deﬁned
role of the multimedia server, BS, and MH. Nonetheless, this scheme has some
disadvantages in terms of its lack of a playout policy as well as the application
of only startup time for communications transmission as means of solving the
synchronization problem.

3
3.1

Mobile Network-Based Buﬀer Management Scheme
System Conﬁguration

This system supports a k multimedia server node, m BS, and n MH. The BS
communicates with an i mobile host in mth cell. The MH is necessarily supposed to access the server via the BS. This system allows a BS to manage
variations of startup time for transmission as well as buﬀers, using variables
such as delay jitter and arrival time of subframes transmitted from the multimedia server. Therefore, this system contributes to eﬀectively dealing with mobile
communications-speciﬁc small memory footprint and low bandwidth. Some of
the advantages of the proposed scheme are reduced server startup time, lighter
network traﬃc, and reduced buﬀer size, all of which are achieved by storing a
movie in the k server. The multimedia server saves multimedia data in a distributed way that splits data streams according to logical time. Data streams are
compressed data split by logical time. Accordingly, their conﬁgurations are made
according to a synchronization group, not the same byte. Such split streams are
called substreams, and this technique is referred to as subframe stripping. Figure
1 shows the conﬁguration of the proposed system. The Message Manager in the
multimedia server skips and transmits subframes using the oﬀset control mode
notiﬁed by the Feedback Manager at the BS. The BS saves the arrival time of the
subframes received by individual servers, and it sends/receives a dummy packet
to identify the startup time for transmission. The Communication Manager in
the multimedia server distinguishes feedback packets from messages notiﬁed by

Synchronization Scheme of Multimedia Streams in Mobile Handoﬀ Control

391

the BS, and the Communication Manager in the BS arranges the sub-frames
received from individual servers in an orderly manner.

Mobile Network
Mobile Network

Land-Based Network

Notebook

MS

MS

.
.
.
.

MS

0

Mobile Host

.
.
.
.
.
.

1

BS

0

.
.
.
.
.
.

PDA

Notebook

2

Mobile Host
BS

m

PDA
MS

k

Fig. 1. System Conﬁguration

3.2

Handoﬀ Management

Due to its use of soft handoﬀ, CDMA systems have some problems involving
multiple BSs. Handoﬀ management eventually leads to the increase in channel
capacity. The information such as multimedia units, data, and voice is transmitted via multiple BSs. We also present an algorithm that enables a mobile host to
implement the playout of media streams, without any multimedia data loss, or
without any additional delay accompanying message transmission, or within the
reasonable QoS limits during a handoﬀ. In this scheme, the MH (HMi ) transmits
multimedia services via the BS (BSm ) from the Server (Sk ). The BS is classiﬁed
into the primary and non-primary BSs. The former is responsible for sending
multimedia streams to the MS, and the latter adjoins the primary BS. The BS
buﬀer is of the two-jitter size, and the MH buﬀer is of the one-jitter size. Compared against buﬀer conﬁgurations made only for the BS, buﬀer conﬁgurations
like this gives the advantages of no multimedia data stream loss during a handoﬀ while complementing the MH with small memory footprint. Figure 2 shows
the system conﬁguration applied when a handoﬀ is being processed. A handoﬀ
occurs when M Hi moves from BScurrent to BSnew .BScurrent sends a handoﬀ
message to the multimedia server, and starts to implement handoﬀ processing
in the following sequence:

392

G.-S. Lee

1. M Hi implements playout as long as (1jitter × r) × λ time, regardless of handoﬀ. /* r refers to the playout speed of a substream, and λ
means the maximum jitter within the media */
2. Setting is made to BSold = BScurrent .
3. Setting is made to BScurrent = BSnew .
4. BSold sends a Handof fon message to the multimedia server. Then, the
multimedia server gives a notiﬁcation to stop transmission of multimedia
data streams.
5. BSnew receives only odd numbered multimedia data streams present in
BSold .
6. The multimedia server sends multimedia streams only to the servers that
contain odd numbered subscripts.
7. Once BSnew has received odd numbered multimedia data streams from
BSold buﬀer, it sends a Handof fof f message to the multimedia server to
inform that handoﬀ has been successfully dealt with.
8. BSnew sends a request message to individual servers and normal transmission is made.
3.3

Synchronization Algorithm on Handoﬀ

We now formally describe the algorithm for a BSm , a M Hn , and a, Sk by
means of pseudocode. Handoﬀ control algorithm describes the variables used by
Pseudocode. The handoﬀ occurs when M Hm moves from the current BSm to
another BSm .

MS

k

BS new
an odd number
Media in BS
old

n

MS

2

Moble Host
Buffer

fo
of e
nd ag
Ha ss
Me

.
.
.
.
.

1

Mobile Switching Center
(MSC)

MS

0

st
Move Mobile Ho

MS

f off
r
of e
be
nd ag
um MS
Ha ess d n in
M
od ia
an Med est
qu
re
N_

BS old
MobleHost
Buffer

Fig. 2. Handoﬀ Process Structure

Synchronization Scheme of Multimedia Streams in Mobile Handoﬀ Control

393

During the handoﬀ control process, multimedia data streams stored in are
sent to a new BSm for playout within the QoS limits. The algorithm is designed
to solve the problems arising out of handoﬀs by the use of an approach to multimedia synchronization. This paper deals with two types of messages, which are
addressed as follows:
1. Send (source, action; argument);
2. Receive (source, action; argument);
where action ← Request| N-request| Reply | Update | INT | Handof fof f |
Handof fon | Done , and arguments ⊂ {M Ski , DTki , RTki , STki , Sk }.
The algorithm is described as follows:
Synchronization on Handoﬀ
Mutimedia Serverk
Receive (BSm , DummyPacket);{
Send (BSm , reply; CurrentMultiserverTime);}
Receive (BSm , Request; MMUik );{
For i = 0, i < k, i + + Do
Send(BSm , reply; MMUik );}
Receive (BSm , N − Request; MMUik );{/∗MMUik is i-th multimedia
steame*/
Make schedule for (N − 1) requests
/ ∗ RTki is Round trip time*/
Save RTki and Dki ;
i
Send (BSm , reply; MMUk );}/ ∗ Dik is Delay time*/
Receive (BSm , Handoﬀon );{
Do
Wait;
While (Receive(BSnew , Handoﬀof f ))}
Mobile Hosti
IF (Receive(BSm ,Handoﬀon )){
Play − out is MMUik at τt +10ms;}
Else{
Send(BSm ,CurrentMultiserverTime, Requst : MMU);
Receive(BSm , MMUik ; τt );
Play − out is MMUik at τt ;}
Base Stationm
BuﬀerControl(); {
ρi =125ms;
If (buﬀer_point == NormalLevel)
τi = ρi ; Send(M Hi , M M Uki , τt );
Else If (buﬀer_point == UpperLevel){

394

G.-S. Lee

BLallsize = BLallsize+1;
/*BLallsize is overall buﬀ size*/
BLpsize =CurrentBuﬀer;
/*BL psize is buﬀer Level size*/
ω = 0; /∗ Weight Value ∗/ ρi =125;
ω = BLallsize / BLpsize ; τt = ρi − (ρi × ω);
Send(M Hi , M M Uki , τt );}
Else IF (buﬀer_point == LowerLevel){
ω = BLallsize − BLpsize ; ω = ω/BLallsize ; τt = ρi + λ × ω;
Send(M Hi , M M Uki , τt );}} /*λ is Maximum delay jitter*/
Receive(BSn , Handof fon )
BSold = BScurrent ;
BScurrent = BSnew ;
Send(M Hi , Handof fon );
Send(Sk , Handof fon );
For k=1, k ≤ K, k+2 Do
BSnew (M M Uki ) = BSold (M M Uki );
Send(Sk , Handof fon ); /* from BSnew to Sk */
Send(Sk , Request; M M Uki ); }
Main(){ /* Main Program */
Call Start − UpTime; /*∆ is jitter*/
Start-Up=MAX Dki − Dki ;
Set Start Up Time for Server Sk ;
Send(Sk , Start Up Time);
∆ = DTkmax − DTkmax / ∗ ∆ is jitter */
If (Buﬀer_point == NomalLevel)
Send(Sk , M M Uki , Request;M M Uki )
Else If (Buﬀer_point==UpperLevel){
If (DTki > ∆){
Feedback_value = Call Feedback;
Send(Sk ,Feedback_value, Dki );}
Else{
Continue;
Call BuﬀerControl(UpperLevel);}}
Else If (Buﬀer_point == LowerLevel){
If (DTki > ∆){
Feedback_value = Call Feedback;
Send(Sk ,Feedback_value, Dki );}
Else{
Continue;
Call BuﬀerControl(UpperLevel);}
}}end of main

4

Performance Evaluation

Experiments were carried out using IBM-compatible PCs with Pentium processor, and interfaces and algorithms were implemented using Java development

Synchronization Scheme of Multimedia Streams in Mobile Handoﬀ Control

395

Kit JDK 1.3. Outputs obtained from the experiments were stored in Microsoft
MDB as simulation.mdb ﬁles. 1Kbyte audio data were encoded using a PCM
encoding technique, and the video frames used had a resolution of 120 X 120
pixels. The frames used in the experiment were those encoded with 24 frames
per second. This paper assumes simulations have been performed in a mobile
environment. In order to process individual packets properly, the information
used in the actual simulations was applied equally to mobile networks using
Poisson distribution. One thousand frames were used in performance evaluation
experiments where the maximum delay jitter time of 600 ms was applied. This
paper presents our work on the algorithm that disallows any loss of data in
the BS buﬀer to smooth the playout of multimedia streams during a handoﬀ.
The comparative evaluation presented in this paper is focused not only on the
feedback policy toward maintaining the buﬀer at a normal level but also on
the play-out and loss time where the buﬀer level control-based playout policy is
applied Figure 3 shows how much the level of the buﬀer varies. As illustrated
in Figure 3, the data stored in BSold buﬀer are sent to BSnew buﬀer in order
to prevent streams against loss in the frames numbered from 800 through 960
during a handoﬀ. Additionally, during the handoﬀ, M Hi delays the playout time
of M M Uki to the maximum delay jitter of 10ms in order to secure more time
for moving substream data in BSold buﬀer to BSnew buﬀer. As shown in Figure
3, existing conventional schemes appear to be less eﬀective in dealing with handoﬀs, thus suﬀering from loss of substream data stored in BSold buﬀer. Figure 3
shows that overﬂow occurs in the frames numbered from 150 through 200, and
also shows that the buﬀer level of the proposed scheme is kept in a more stable
state than existing schemes. As it were, existing conventional schemes could not
avoid starvation occurring in the buﬀer due to handoﬀ, as the results obtained
in ﬁgure 3. However, the proposed scheme was able to prevent starvation from
occurring in the frames numbered from 800 through 960. Furthermore, it could
prevent overﬂow from occurring in the frames numbered between 150 and 200.
Figure 4 depicts what eﬀect the proposed scheme has on the buﬀer levelbased playout policy. The proposed scheme delays playout time even though a
handoﬀ has occurred in the frames numbered from 800 through 960. For existing
conventional schemes, however, the occurrence of a handoﬀ results in the loss of
data in BSm buﬀer, causing not only a failure of the playout of data streams but
also skipped frames numbered between 150 and 200. For the proposed scheme,
the playout time of the frames numbered from 800 through 960 varies according
to the playout policy while the playout time of the frames numbered from 150
through 200 decreases gradually, ultimately leading to the reduction in overﬂow.

5

Conclusions

This paper presents a scheme that disallows lower playout rates within the QoS
limits for multimedia presentations during a handoﬀ in mobile networks. The
proposed scheme enables a base station to manage buﬀers and playout policies,
and further deals with handoﬀs in a fast and eﬃcient way. Additionally, this
scheme oﬀers a suitable approach to eﬀectively dealing with limiting factors for

396

G.-S. Lee

Fig. 3. Buﬀering Fluctuations at BS

Fig. 4. Playout Time Presented by
Proposed Scheme

mobile communications such as small memory footprint and low bandwidth.
The proposed scheme’s adaptive playout time delivers soft and smooth handoﬀ
performance where the entire playout time is maintained within the playout time
of the original’s.

References
1. Azzedine Boukerche, Sungbum Hong and Tom Jacob, ”MoSync : A Synchronization
Scheme for Cellular Wireless and Mobile Multimedia System”, Proceedings of the
Ninth International Symposium on Modeling, Analysis and Simulation of Computer
and Telecommunication Systems IEEE 2001
2. D. H. Nam and S. K. Park, ”Adaptive Multimedia Stream Presentation in Mobile
Computing Environment,” Proceedings of IEEE TENCON, 1999.
3. Ernst Biersack, Werner Geyer, ”Synchronization Delivery and Play-out of Distributed Stored Multimedia Streams”, Multimedia Systems , V.7 N.1 , 70-90, 1999
4. M. Woo, N. U. Qazi, and A. Ghafoor, ”A Synchronization Framework for Communication of Pre-orchestrated Multimedia Information,” IEEE Network, Jan./Feb.
1994
5. T. D. C. Little, and Arif Ghafoor, ”Multimedia Synchronization Protocols for Broadband Integrated Services,” IEEE Journal on selected Areas in Comm., Vol. 9,
No.9, Dec. 1991.
6. W. Geyer, ”Stream Synchronization in a Scalable Video Server Array,” Master’s
thesis, Institute Eurecom, Sophia Antipolis, France, Sept., 1995.
7. Gi-Sung Lee, Jeung-gyu Jee, Sok-Pal Cho, ”Buﬀering Management Scheme for Multimedia Synchronization in Mobile Information System,” Lecture Notes in Computer
Science Vol. 2660, pp 545-554, June, 2003.

