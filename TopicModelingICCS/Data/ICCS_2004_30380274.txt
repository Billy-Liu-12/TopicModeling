Mobile Agent-Based Load Monitoring System for the
Safety Web Server Environment
H.J. Park1, K.J. Jyung2, and S.S. Kim3
1

School of Computer Information and Communication Engineering,
Sangji University, Woosandong, Wonjusi, Kangwondo, Korea
hjpak1@sangji.ac.kr
2 System Technology Laboratory, Dacom Corporation, Seoul, Korea
jkjin@origio.net
3 School of Information and Communication Engineering,
Halla University, San 66, Heungup-Li, Heungup-myon, Wonjusi, Kangwondo, Korea
sskim@halla.ac.kr

Abstract. The importance of the server is growing with the growth of the
internet and the load on the server has rapidly grown with the increase in the
number of web server user. Load monitoring has become an important technical
aspect in the performance of the server for these reasons. It has proven to be
more efficient to use a java mobile agent that operates by moving between the
systems for load monitoring of a web server rather than using the existing
client-server paradigm. A mobile agent moves around the web servers to
measure the load and sends the load information to a single node.

1 Introduction
The importance of the web server that provides web service to users all around the
world has grown rapidly with the growth of the internet. Mirroring method has also
been applied on the web servers for load balancing but has proven inefficient due to
the difficulty in managing the performance of the web servers in remote location.
Load monitoring technique on many distributed web servers is an important aspect in
the management of web server performance.
A web server must always provide the user with the appropriate service and speed
of the service is the most important aspect. If the load on the web server increases by
the increase in the number of user, size of data, number of process or the use of
memory, the server would not be able to provide the user with the appropriate service
and would cause a waste of money put into developing the web server[1]. The load
monitoring system must continuously check if the web server is operating properly,
and must apply the optimization process to restrain the number of user or size of data
for the server to operate efficiently. Accurate load information can be applied to
efficiently distribute the load on a server to another mirroring web server and the web
server monitoring technique can be applied to promptly detect and resolve an error
that has occurred within the system. The system administration condition can be
predicted based on the historical data stored in the DB and this data can also be used
as the base information for analysing and expanding the system.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 274–280, 2004.
© Springer-Verlag Berlin Heidelberg 2004

Mobile Agent-Based Load Monitoring System

275

This paper develops a load monitoring system using a java mobile agent that can
efficiently monitor the load on the web server and resolve the problems that occurred
on the systems based on the client-server paradigm.
This paper consists of the following parts. Chapter 2 deals with the related
research, chapter 3 with the design and implementation of the monitoring system
using a mobile agent and chapter 4 concludes the paper by analyzing the implemented
system.

2 Related Research
2.1 Load Monitoring in the Client-Server Paradigm
The client-server paradigm has been the base for most web-server load monitoring
systems. The client-server paradigm is a centralized method in the distributed
computing environment and must install a program that measures the load of the web
server on each server and send the load information on a demand from the client[2].
Therefore, it is impossible for a user to change the monitoring method on a single
node and to manage web servers that are remotely located. Also, the monitoring
program being operated on the web server may become a load on the server providing
the web service and the message shared between the servers increases the network
traffic. A network connection must be maintained between the client and the web
server and therefore becomes hard for the web server to adapt to the change in the
environment[3][4]. The mobile agent is applied to resolve such problems of the clientserver program by gathering information by moving through the servers.
2.2 Java Mobile Agent
The java mobile agent is a program that can be operated by moving itself to another
host on the network. The mobile agent can transfer its state information and code
from its initial environment to the system it is to be operated on. The state information
is the attribute value used to determine the job to be processed by the agent and the
code is a class code needed for the agent's operation. The mobile agent can operate
efficiently in an environment where systems connected through the network have a
low bandwidth and high delay time. The agents can also share their resource through
communicating with each other and returns to the system it was created or selfdestructs after the finishing its job. The use of a mobile agent provides a easier and
more efficient programming paradigm than the client-server paradigm in constructing
an application in the distributed computing environment[5].
The agent takes an efficient approach of moving around the system through a
connected network for gathering data and utilizing resource instead of requesting
other systems and waiting for a reply. Network connection is only required when the
mobile agent is actually moving through the system and the user does not need to take
the location of the operation taking place or the communication channel into account.
This enables the development , testing and locating of the distributed application to be
operated more efficiently (Fig. 1).

276

H.J. Park, K.J. Jyung, and S.S. Kim

Mobile Agent Server
Network

Mobile Agent Server
Network

Agent

Agent

Security layer

Security layer

Java Virtual machine

Java Virtual machine

Host Computer A

Host Computer B

Network

Fig. 1. Java mobile agent

2.3 Advantage of the Java Mobile Agent
Following are the advantages of using a Java mobile agent[6].
− Reduced load on the network: The network traffic increases on a distributed system
environment where a lot of interaction takes place between the systems, whereas a
mobile agent only requires a small amount of data to be transferred within the
system.
− Resolve Network Delay: Network delay occurs on a real-time system on a process
through the network. However, a mobile agent can directly process the job issued
by the central manager by moving itself.
− Asynchronous and Free operation: A mobile agent only requires a network
connection on a movement and operates freely and asynchronously within the
system it has moved to.
− Protocol Encapsulation: An I/O related protocol must be formed to exchange data
in a distributed system environment, whereas a mobile agent uses an independent
protocol to move to a remote host.
− Dynamic Adaptation: Detect the operating environment and automatically respond
to the change.
− Heterogeneous: Network computing through the internet contains a heterogeneous
nature.
− Fault Tolerance: Able to construct a fault-tolerant distributed system even when a
problem has occurred.

3 Web Server Load Monitoring System Using a Mobile Agent
This chapter discuss about the advantages of monitoring using a mobile agent and the
design and implementation of a web server load monitoring system.

Mobile Agent-Based Load Monitoring System

277

3.1 Mobile Agent Based Monitoring
Using a mobile agent with the above characteristics for monitoring the load on a web
server is far more efficient than implementing the existing client-server paradigm.
All the load data can be gathered into a single system without installing a program
on each web server to be monitored by using a mobile agent. The execution code of
the mobile agent moves to a web server through the network to internally measure the
load and sends the result to the monitoring server before moving onto another web
server. The mobile agent only contains the code that is crucial to measuring the load
to become a lightweight program and requires only a small amount of data upon a
network transaction. It also puts only a little extra load on the web server by only
taking up little room for execution upon a movement. A large-scale log file is required
for measuring the load on the web server. However, by using a mobile agent, the
agent will carry the log file itself instead of transmitting it through the network for a
quicker analysis of the load data.
The mobile agent is an independent protocol that moves through the ATP(Agent
Transfer Protocol). This enables the operation of the agent to proceed regardless of
the physical location of the web server to be monitored and is not restricted by the
number of web servers. The load of mirroring web servers that are physically
distributed can be monitored from a single node and the resulting data can be utilized
for the load balancing technique of a mirroring web server. Therefore, it can be
concluded that the monitoring method using a mobile agent is more efficient than the
existing client-server program.
3.2 Design
A distributed computing method using a mobile agent is required for an efficient load
monitoring on web servers that are remotely located on the internet. The system
consists of web servers to be monitored, and a monitoring system used to monitor the
load information of the web servers. Each system contains a MAS (Mobile Agent
Server). MAS (Mobile Agent Server) provides each host with an environment for the
mobile agent to be executed and manages the creation, movement and extinction of
the mobile agent. The agent is designed by combining the itinerary pattern and the
master-slave pattern related to the operation. The Master agent is executed on the
MAS of the monitoring system, and creates the Slave agent that will move to the web
server. The Slave agent moves to the first web server to analyze the log file, measure
the load on the system and sends the load information to the Master agent. The Slave
agent then moves to another agent to perform the same job after transmitting the load
information to the Master slave.
The master agent resides in the monitoring system to provide the GUI function,
display the web server's load information gathered from the Slave agents to the users
and periodically create a new Slave agent. These functions of the mobile agent are
shown in Fig. 2.

278

H.J. Park, K.J. Jyung, and S.S. Kim
W eb Server 1

Slave agent
agent

a

− agent arrive
−load m onitoring
−transfer data
−dispatch agent

M AS
log

Monitoring System
W eb Server 2

M aster
agent

MAS

−create M aster agent
−create Slave agent
−collect load data
−provide GUI

Internet

a

MAS
log

transfer load data

W eb Server 3
a

MAS

M AS : m obile agent server

log

−dispose agent

Fig. 2. Function of master and slave agent using itinerary pattern

MAS
cre a te

cre a te

M a ste r
Agent

Itin e ra ry
cla ss

M o n ito r
cla ss
re ce ive lo a d d a ta

vie w lo a d d a ta

S la ve
Agent
a d d re s s

d isp a tc h

lo a d m o n ito rin g

tra n sfe r lo a d d a ta

V ie w e r
cla ss

d is p o se

Fig. 3. Classes of load monitoring system

3.3 Implementation
The web server monitoring system using a java mobile agent consists of a master
agent and a slave agent. The master agent displays the load information obtained from
the slave agent through the viewer class(GUI function) and periodically creates a new
slave agent for monitoring. The slave agent created by the master agent moves itself
to the web server. The address of the web server the slave agent is to move to is
provided by the itinerary class. The itinerary class contains the address of the web
servers to be monitored and is transmitted upon the creation of the slave agent by the
master agent. The itinerary class delivers the agent to the next address and provides

Mobile Agent-Based Load Monitoring System

279

the function for moving on to the following server if a problem occurs at the web
server (Fig. 3).
The slave agent that moved to the web server analyses the log data of the web
server and measures the load on the system itself. It moves to another web server after
transmitting all the load data to the Master slave, and self-terminates if there is no
other job left to process. The monitor class measures the number of current users,
current transmission rate, number of currently occurred errors, average number of
jobs processed in 1·5·15 minutes interval, size of the swap memory, size of free
memory, rate of disc usage, amount of memory left in the disc and the amount of
memory left to be used in the disc. The load information of the web server is
displayed in the monitoring system as shown in Fig. 4.

Fig. 4. Load information display of web servers

4 Conclusion
The size of the program operated in each web server is as follows. The program in the
Slave agent takes up 3.2KB, in the Monitor class takes up 4.3KB, and the program in
the Itinerary class takes up 2KB which adds up to a total size of 9.5KB. 9.5KB of
class is executed during the measurement and is destroyed after the process which is
the main reason this system fares better than the client-server program in which
memory space is taken up the whole time. The whole class is only transmitted once
upon the first agent movement and only the Slave agent is transmitted after the first
transmission which results in 9.5KB of data only being transmitted once and only
3.2KB of data being transmitted after the initial transmission. This reduces the
network traffic.
The purpose of this paper is on effectively monitoring the load on the web servers
physically distributed on the internet using a java mobile agent. By using the java
mobile agent, it becomes possible to monitor more than one web servers from a single
node without installing any other program and enables the user to modify the
monitoring method. It provides a new mechanism that was not provided in the
existing client-server paradigm.

280

H.J. Park, K.J. Jyung, and S.S. Kim

References
1.
2.

3.
4.
5.
6.

Web Server Monitoring, http://www.freshtech.com
M. Caprini, R. Nacach, Z. Qian, “Java Mobile Agent for monitoring task : evaluation
report",
http://atddoc.cern.ch/Atlas/Notes/078/Note078-1.html, 1998
MARS(Monitoring Application for Resources and Servers),
http://www.altara.org/mars.html
E. Anderson, D. Patterson, "Extensible, Scalable Monitoring for Clusters of Computerts",
Proceedings of 1997 LISA Conference, 1997
R. Gray, D. Kotz, S. Nog, D. Rus, G. Cybenko, "Mobile agents for mobile computing",
Technical Report PCS-TR96-285, 1996
D. B. Lange, Mitsuru Oshima, Programming and Deploying Java Mobile Agents with
Aglets, Addison Wesley press, 1998

