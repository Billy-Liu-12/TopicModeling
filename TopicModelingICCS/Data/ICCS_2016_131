Procedia Computer Science
Volume 80, 2016, Pages 2348–2352
ICCS 2016. The International Conference on Computational
Science

Sliding Window-based Probabilistic Change Detection for
Remote-sensed Images
Seokyong Hong and Ranga R. Vatsavai
North Carolina State University, Raleigh, NC, USA
{shong3,rrvatsav}@ncsu.edu

Abstract
A recent probabilistic change detection algorithm provides a way for assessing changes on remotesensed images which is more robust to geometric and atmospheric errors than existing pixel-based
methods. However, its grid (patch)-based change detection results in coarse-resolution change maps
and often discretizes continuous changes that occur across grid boundaries. In this study, we propose
a sliding window-based extension of the probabilistic change detection approach to overcome such
artiﬁcial limitations.
Keywords: Probabilistic Change Detection, Satellite Image Processing, Spatial Data Mining, Sliding Window,
GMM

1

Introduction

Recently, a probabilistic change detection framework was proposed [7]. The framework deals with
change detection tasks by comparing probabilistic characteristics of multispectral remote-sensed imagery and automatically grouping regions according to their intensity of changes. This makes the framework much more robust in the presence of registration errors, high reﬂectance, and different shadow
orientations than traditional pixel-based methods such as image ratioing [2], regression analysis [5] and
so on. The framework divides images into multiple discrete grids (patches) and compares probabilistic
characteristics of grid pairs for computing their difference. However, such grid enforcement causes two
limitations: (1) resulting change maps are coarse-grained since the minimum unit of change detection
is a grid and (2) changes across grid boundaries are often discretized. As a result, such artiﬁcial limitations reduce the quality of change maps the framework generates. In this paper, we present a sliding
window-based probabilistic change detection algorithm by extending the previous probabilistic change
detection framework, which inherits its advantages while overcoming its limitations. Our contributions
in this paper can be summarized as follows:
• We propose a sliding window-based probabilistic change detection algorithm which yields accurate change assessments while being robust to errors.
2348

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.438

Sliding Window-based Probabilistic Change Detection

Hong, and Vatsavai

• We evaluate the proposed algorithm with real-world remote-sensed images. The result shows that
the proposed algorithm provides more accurate and ﬁner-grained change detection results than
the grid-based approach.
The rest of the paper is organized as following. Section 2 overviews related change detection algorithms. Section 3 presents the probabilistic change detection framework proposed in [7] which we
extended for our change detection algorithm with its limitations. In Section 4, we explain the proposed change detection algorithm which leverages a sliding window-based processing and describe our
experimental evaluation result. Section 5 concludes this paper and suggests our future work.

2

Traditional Change Detection Methods

Traditional change detection approaches include pixel-based techniques and object-based techniques [3].
The pixel-based techniques detect changes by performing pixel-wise operations such as image rationing [2] and change vector analysis [1]. Given two time series images, M1 and M2 , image rationing
computes
M1 (x, y)
R(x, y) =
M2 (x, y)
where x and y are pixel coordinates. If the ratio R(x, y) is less than some threshold value, the corresponding pixel is though as a single change point. Change vector analysis detects changes from images
by computing change vectors. For example, change vectors are computed from images that has three
bands as
C = (B11 − B21 )2 + (B12 − B22 )2 + (B13 − B23 )2
where Btb means a value in band b at time t. The direction of a vector indicates the nature of changes and
its length means the intensity of change. Those methods are relatively simple and can show reasonable
change detection results with moderate resolution images consisting of a few bands. However, they often
suffer from incorrect change detection results (e.g., mis-/over-detection) especially for urban features on
high-resolution multi-band imagery acquired from modern remote sensing technologies [8]. Moreover,
it is not trivial to ﬁnd optimal threshold values for those methods that achieve the best change detection
quality [3].
Recently, a probabilistic method was proposed, which leverages a block-level image registration and
shows superior change detection results to traditional methods with a single band discrete change map
and automatic categorization of computed changes. As the method compares probabilistic characteristics, it is more robust to image registration and radiometric errors than traditional methods. Moreover, it
does not require threshold parameter tuning and image segmentation. However, there are several limitations caused by its grid-based processing and they affect the change detection quality. In the following
section, we discuss the probabilistic change detection framework.

3

Probabilistic Change Detection Framework

The probabilistic change detection algorithm proposed in [7] consists of a distance computation step and
a clustering step. In the former step, it enforces n grids onto a pair of time series images, M1 and M2 .
Then, from a pair of grids g(1,i) and g(2,i) (1 ≤ i ≤ n), it computes multivariate Gaussian distributions
G(1, i) and G(2, i). Each G(t, i) is represented as
fj (x|μj , Σj ) =

1
d

−
1 e

(2π) 2 |Σj | 2

(x − μj )T Σ−1
j (x − μj )
2
2349

Sliding Window-based Probabilistic Change Detection

Hong, and Vatsavai

where x ∈ Rd and Σj ∈ Rd×d is the mean and the co-variance matrix, respectively. Next, the distance between G(1, i) and G(2, i) is computed by using Symmetrized Kullback-Leibler Divergence (SKLD) [4]. S-KLD is a symmetric version of Kullback-Leibler Divergence and DS−KLD (i) is computed
by averaging DKLD (G(1, i)|G(2, i)) and DKLD (G(2, i)|G(1, i)). DKLD is computed as
P (i) log(

DKLD (P |Q) =
i

P (i)
)
Q(i)

All the distances from grids have been calculated, the algorithm starts the clustering step. It performs
Gaussian Mixture Model with Expectation Maximization (GMM with EM) [6] clustering on them so that
regions having the same intensity of change can be grouped together in a change map.
The change detection algorithm compares probabilistic characteristics rather than pixel-wise comparisons, which results in more robustness to image errors caused by incorrect image registration and
high reﬂectance than pixel-based approaches. Despite such an advantage, however, the enforcement
of grids on images causes two limitations: (1) it causes inaccurate assessments when changes occur
across grid boundaries, and (2) resulting change maps are course-grained since it identiﬁes changes in a
grid-level. As a result, those limitations signiﬁcantly limit the change detection accuracy, reducing the
quality of change maps.

4

Sliding Window-based Change Detection

We introduce our sliding window-based probabilistic change detection framework, which overcomes the
limitations while inheriting the advantages of the previous approach. Then, we provide an evaluation
result by comparing those two approaches.

4.1

Sliding Window-based Change Detection Algorithm

As discussed in the previous section, the gridbased change detection causes two major probData: Images: M1 and M2
lems in terms of granularity and accuracy. Instead
Result: Change Map
window.SetSize(W, H) ;
of enforcing grids on images, we leverage a slidwindow.SetP osition(0, 0) ;
ing window which ﬂoats in images. The proposed
distances ← 0 ;
change map ← 0 ;
algorithm is shown in Algorithm 1. The window
while window does not reach to the end do
moves from the beginning of images to the end
s1 ← RetrieveSubImage(M1 , window);
s2 ← RetrieveSubImage(M2 , window);
pixel-by-pixel. At each position, the algorithm
G1 ← ComputeGaussian(s1 );
retrieves subimages s1 and s2 from M1 and M2 .
G2 ← ComputeGaussian(s2 );
distances(W indow.Center()) ← S-KLD(G1 ,G2 );
Then, s1 and s2 are modeled as Gaussian distriwindow.M ove()
butions G1 and G2 . S-KLD() calculates the disend
change map ← ClusterGMMWithEM(distances);
tance between G1 and G2 and the computed disDisplay(change map)
tance is assigned into distances at the center poAlgorithm 1: Sliding Window-based Probasition of the window. Those steps are repeatedly
bilistic Change Detection Algorithm
processed until the sliding window reaches the
end of M1 and M2 . In the next phase, distances
is passed to ClusterGMMWithEM() and pixels are clustered with their distances. In the end of clustering, each pixel is assigned a cluster label. All the labels are stored in a change map. Compared to the
previous probabilistic change detection approach, the sliding window does not enforce grid boundaries
and, hence, can assess changed objects without division at grid boundaries. Next, the minimum unit of
change detection is a pixel rather than a grid, it can produce far more detailed change maps.
2350

Sliding Window-based Probabilistic Change Detection

4.2

Hong, and Vatsavai

Evaluation

(a) Image at t1

(b) Image at t2

Figure 1: Evaluation Dataset: 6,972 × 6,984 Pixels and Three Bands (Red, Green, and Blue) Aerial
Images in GeoTIFF
We evaluated the sliding window algorithm in order to check the quality of change detection. The
evaluation was performed on a multi-processor workstation which has total 32 processing cores, 64GB
RAM, and a 500GB local hard disk. We used two time series aerial images as shown in Figure 1. Those
images are 6,972 × 6,984 in pixel and have three bands: red, green, and blue channels. We set the grid
size to 200 × 200 and the window size to 201 × 201 in pixel.
Figure 2 shows the change maps generated by both approaches. We highlight two regions. In the
middle left region (left images), an entirely new town has been developed between two time points.
Both approaches could identify most of the developed parts. However, the course-grained change assessment of the grid-based approach could not separate changed parts and unchanged parts within a
grid. For example, even though the center portion of the bottom right forest has not been changed, it
was assessed as changes. On the other hand, the sliding window approach could identify the unchanged
portion relatively well. In the bottom right region (right images), a town has been extended between
the two time points. Both approaches could quite well separate the previous town and the extended
town as non-changes and changes, respectively. However, the sliding window approach was able to detect small changes which the grid-based approach could not identify (e.g., small changes in the original
town). Overall, the change map the proposed algorithm generated could depict changes in a ﬁne-grained
manner, which can greatly help domain experts efﬁciently assess changes in detail.

5

Conclusion

In this research work, we extended the probabilistic change detection framework proposed in [7]. The
sliding window-based algorithm overcomes the limitations caused by grid-based computations and
could produce more accurate and ﬁner-grained change detection results. The sliding window-based
computation, however, can signiﬁcantly increase the computational complexity as input images become
larger. As our future work, we are planning to extend the proposed algorithm so that it scales well on
shared-nothing clusters for minimizing the effect of increased computational complexity.
2351

Sliding Window-based Probabilistic Change Detection

Hong, and Vatsavai

(a) Grid-based Change Detection Result

(b) Sliding Window-based Change Detection Result

Figure 2: Change Detection Quality

References
[1] Osmar A Carvalho J´unior, Renato F Guimar˜aes, Alan R Gillespie, Nilton C Silva, and Roberto AT Gomes. A
new approach to change vector analysis using distance and similarity measures. Remote Sensing, 3(11):2473–
2493, 2011.
[2] Philip J Howarth and Gregory M Wickware. Procedures for change detection using landsat digital data. International Journal of Remote Sensing, 2(3):277–291, 1981.
[3] Masroor Hussain, Dongmei Chen, Angela Cheng, Hui Wei, and David Stanley. Change detection from remotely
sensed images: From pixel-based to object-based approaches. ISPRS Journal of Photogrammetry and Remote
Sensing, 80:91–106, 2013.
[4] Don Johnson and Sinan Sinanovic. Symmetrizing the kullback-leibler distance. 2001.
[5] Aaron Kim Ludeke, Robert C Maggio, and Leslie M Reid. An analysis of anthropogenic deforestation using
logistic regression and gis. Journal of Environmental Management, 31(3):247–259, 1990.
[6] Noam Shental, Aharon Bar-Hillel, Tomer Hertz, and Daphna Weinshall. Computing gaussian mixture models
with em using equivalence constraints. Advances in neural information processing systems, 16(8):465–472,
2004.
[7] Ranga R Vatsavai and Jordan Graesser. Probabilistic change detection framework for analyzing settlement
dynamics using very high-resolution satellite imagery. Procedia Computer Science, 9:907–916, 2012.
[8] Weiqi Zhou, Austin Troy, and Morgan Grove. Object-based land cover classiﬁcation and change analysis in
the baltimore metropolitan area using multitemporal high resolution remote sensing data. Sensors, 8(3):1613–
1636, 2008.

2352

