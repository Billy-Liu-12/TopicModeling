Procedia Computer Science
Volume 51, 2015, Pages 2799–2803
ICCS 2015 International Conference On Computational Science

Towards a Performance-realism Compromise in the
Development of the Pedestrian Navigation Model
Daniil Voloshin, Dmitriy Rybokonenko, Vladislav Karbovskii
1

ITMO University, Saint-Petersburg, Russia
achoched@gmail.com, dmitry.rybokonenko@gmail.com, vladislav.k.work@gmail.com

Abstract
Despite the emergence of new approaches and increasingly powerful processing resources, there are
cases in the domain of pedestrian modeling that require the maintenance of compromise between the
computational performance and realism of the behavior of the simulated agents. Present paper seeks to
address this issue through comparative computational experiments and visual validation of the
simulations using the real-world data. Acquired results show that a reasonable compromise may be
reached for in the multi-level navigation incorporating both route planning and collision avoidance.
Keywords: agent-based modeling, virtual society, model realism, pedestrian navigation, pedestrian model

1 Introduction
There are issues in pedestrian modelling that require both the physical realism and high
performance, for instance, decision-making in extreme situations or real-time planning. Present paper
is to address the issue of achieving such a compromise for studying the behavior of the passengers of
the Pulkovo Airport (Saint-Petersburg, Russia) Terminal 1. The described research has stemmed from
the extension of the model developed for an evacuation mobile service [1]. Compared to it, the model
discussed in the present paper is a multi-level simulator (see 3.1 and 3.2 for description of levels)
capable of providing an adequate representation of obstacle avoiding behavior, based on Social Force
model along with route-generation mechanisms that can be applied to both indoor and outdoor
navigation.

2 Related works
The macro-level navigation of the model is based on case-specific route graph generation. In the
course of the development of the model for the present paper four alternative methods for route
generation have been considered: (a) Navigation Mesh (b) Generalized Voronoi Diagram (c) Quad

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.437

2799

Towards Performance-realism

Daniil Voloshin et al

Tree rasterization and (d) manual graph design. Navigation Mesh is widely used in game development
and scientific inquires [2] as it is easily automated for independent generation of routes for a
multiplicity of space configurations. Voronoi diagram graph is an analogous method that has proved
its effectiveness in navigating robots [3] and in other domains. Not limited to a specific area of
application, manual navigation graph design is described as producing reasonable outcomes, but being
complex and exposing limited flexibility [4].
For the micro-level collision avoidance used for simulating panic in closed spaces the Social Force
[5] has been chosen from other alternatives as one of the most realistic [6]. However, it is not free
from limitations and can potentially expose inadequate behavior of the agents [7], when they exceed
designated maximum speed, occlude each other’s radiuses or oscillate. In the research discussed
herein, these issues have led to alterations of the original model.
There have been numerous attempts of establishing realistic model designs and corresponding
evaluation techniques, but no well-supported “out-of-the-box” solutions have been presented so far. J.
Wąs and R. Lubaś [8] propose a realistic model of crowd dynamics, based on coupling agent based
modeling with cellular automata simulations. T. Karmakharm et al [9] propose an algorithm for
generating realistic pedestrian paths in complex and dynamic environments and verify it by altering
numbers of simulation steps, population size and navigation grid characteristics. Robin et al in their
extensive research [10] assess the performance of the model for predicting the discrete choices of
pedestrians and calibrate it with experimental and observational data. However, despite producing
plausible results, the majority of tools described in the literature do not lend themselves to wide
application being too case-specific.

3 Methods
3.1 Macro-level navigation
The macro-level navigation of agents relies upon three components: (a) Navigation route graph (b)
Activity planner (c) Route builder. Four route graph generating algorithms have been realized in order
to detect the most suitable from both realism and performance viewpoints. Quad Tree rasterization
method have proved to be one of the most detailed
and universal however extremely computationintensive and producing significant numbers of sharp
turns and decent amounts of integrity components.
Both the Voronoi diagram graph and Navigation
Mesh suffer from the same issues but expose even
higher clusterization rates.
The temporal scope of the model in-question is a
time that takes all the agents to cover the distance
from the modelled space entrance to the exit where
the agent is terminated. Routes are formed with chains
of primary and secondary points of interest generated
individually for each agent. Pathfinding behavior is
directed by the A* algorithm. A set of heuristics has
Figure 1: Comparison of methods for navigation been developed for manual graph design to minimize
the number of straight and sharp turns and chances of
route graph generation
navigating agents through unreasonably long paths.
From the realization of the graph through manual design and Quad Tree rasterization methods (see
Fig. 1) it became obvious that hand-drawn graph produces a relatively small number of vertices and
edges (see Table 1), facilitating presumably faster processing times.

2800

Towards Performance-realism

Daniil Voloshin et al

Edges
76342
1135

Quad Tree Graph
Hand-drawn Graph

Vertices
26064
886

Table 1: Comparison of two methods for graph generation – manual design and Quad Tree rasterization

3.2 Micro-level navigation: collision avoidance
Social Force pedestrian model has been chosen as a primary tool for micro-level dynamics
simulation due to its realism [6]. It inevitably occupies the substantial part of the computational power
of the navigation system, thus a way of minimizing the overall weight of the model was searched for
within the macro-level navigation system.
As a basis for the micro-level collision avoidance the original design of the model presented by
Helbing in [5] was used. According to this approach, interactive features of agents are defined by the
values of various forces. For every agent such an interaction is processed according to the following
formulae:
‫ܨ‬Ԧఈ ሺ‫ݐ‬ሻ ൌ ‫ܨ‬Ԧఈ଴ ሺ‫ݒ‬Ԧఈ ǡ ‫ݒ‬ఈ଴ ݁Ԧఈ ሻ ൅ ෍ ‫ܨ‬Ԧఈఉ ሺ݁Ԧఈ ǡ ‫ݎ‬Ԧఈ െ ‫ݎ‬Ԧఉ ሻ ൅ ෍ ‫ܨ‬Ԧఈ஻ ሺ݁Ԧఈ ǡ ‫ݎ‬Ԧఈ െ ‫ݎ‬Ԧ஻ఈ ሻ ൅ ෍ ‫ܨ‬Ԧఈ௜ ሺ݁Ԧఈ ǡ ‫ݎ‬Ԧఈ െ ‫ݎ‬Ԧ௜ ǡ ‫ݐ‬ሻ
ఉ

஻

௜

Throughout the realization of the collision avoidance mechanism the initial formulae has been left
intact while certain changes has been introduced concerning the values of forces, which may be found
in Table 2 along with the issues that have determined their necessity. The maximum speed
characteristics mentioned in the table are attributed to agents according to the age structure outlined in
[1].
Problem
Implemented solution
Agent exposes a spring-like motion movement
A buffer storing agent’s acceleration data
– acceleration, accumulated near obstacles results is automatically set to zero when agent enters
in unrealistic speeding after they are bypassed
the static area surrounding the obstacle
Agent enters the radius of another agent which
“Velocity”
variable
is
redefined
leads to “sticking” of agents passing by or automatically as a mean between the
repulsion of these agents
preceding and the maximum value
Agent oscillates while being in cumulus
Forced navigation of agent out of the area
(agents are entering the radiuses of each other)
with high concentration of agents to the next
waypoint on its route graph
Table 2: Social Force model experienced issues and solutions

It has turned out that the interaction of both levels of the navigation system has a chance of
producing “dead end” situations, where an agent approaching a certain point on its route is being
dragged by flow moving in the opposing direction through the passage. As a consequence, it is stuck
in between the obstacles that prevent it from reaching the targeted point. The analogous solution has
been proposed in [6] – an agent is led to the nearest visible route point and carries on with its itinerary.

3.3 Realism assessment technique
In order to assess the realism of the model a set of 7 video footages has been collected and
inspected visually. Every footage is 6 to 10 minutes long and was recorded using the GoPro3 camera
(focal length of the camera is 28 mm) on an elevated telescopic tripod in the crowded shopping malls
that have a pedestrian infrastructure analogous to the one of the airport. The navigation graph of the
macro-level component was split into spatial cases (which guided the assigning of positions for data
collection) - where intersection of the pedestrian flows leads to collision, emergence of the bidirectional flows or sharp turns. Then, experimental simulations were visually inspected in

2801

Towards Performance-realism

Daniil Voloshin et al

cooperation with the specialists in social behavior studies as to determine whether particular method or
component is efficient in reproducing the real walking patterns.

4 Results
The generation of agents in the airport case is schedule-related: a case of the passenger airport has
been chosen for simulation, and the schedule of the arrivals-departures has been derived from the real
one. The variance in the number of agents is determined by the carrying capacity of each aircraft.
Though real-world simulation times differ, each of the simulations is equal to 12 hours of the virtual
time. The capacity-peak count value relation is presented in the Table 3.
Series of experiments
Agents per aircraft
Peak agents count (mean)

1
2
3
300
250
200
15535
14066
12275
Table 3: Aircraft carrying capacities and related agent peak counts

4
150
10304

5
100
7420

All the calculations have been performed using the unit with the following technical
characteristics: CPU: Intel Xeon CPU E7-2830, Processor Base Frequency: 2.13 GHz, Max Turbo
Frequency: 2.4 GHz, Number of cores: 8, Number of threads: 16, RAM: 128 Gb, OS: MS Windows
Server 2012 R2 Datacenter.
Two key experimental sets have been realized: the one controlling for the micro-level collision
avoidance mechanism and another one aimed to test whether manual route design and Quad Tree
rasterization methods produce significantly different computational times. Resulting data from both
sets is presented in Fig. 2.

(b) Manually designed graph

(a) Quad Tree rasterization graph

Figure 2: Performance times with Social Force included into the simulation and excluded from it

Results of the experiments exhibit an increase in the overall processing times in both the settings
following the growth of the number of simulated agents. However, an agent count increase rate is
higher than the processing time growth, which is subject to influence from the overhead and other
external factors, having insignificant to no relation to the number of agents.

5 Discussion and conclusion
From the analysis of the experimental data, it has turned out that though general navigation is
possible without the implementation of additional methods and models, the potential performance gain
does not cover the significant physical realism loss from the implementation of simplified agent
relocations models. This is especially important in cases where physical properties of agents may
hinder the movement of pedestrian flows and cause congestions. We assume that in situations where it
is possible, route generation should be coupled with its manual evaluation as otherwise both the
performance and realism of the model may decrease and additional noise may emerge. Authors
propose the use of the parallel algorithms (that has facilitated the agent-related scalability in the

2802

Towards Performance-realism

Daniil Voloshin et al

project described) to cover the performance loss caused by the use of mixed approaches. The
described environment is capable of multi-core and multi-thread performance (via Microsoft Parallel
LINQ technology) by segmenting the population of agents and parallel calculation of each segment
separately. Multiple-resource paralleling is also possible but it would require extra synchronization
and is classified as a plan for the future.
We assume that model validation technique can be extended with automatic pedestrian tracking
tools. Moreover, there is a need for aggregating and analysis of the formalized pedestrian data – both
experimental and observational as to facilitate the statistical validation of simulation results. However,
now the majority of solutions for pedestrian tracking are not flexible and require the work of the
specialists in the sphere of Computer Vision, as well as precise location of recording devices in
crowded areas. The use of the experimental techniques and alternative tracking technologies may be
hindered as well – since the value of the data is unlikely to cover the cost of its collection and thus
only large research groups can afford it.
This paper is supported by Russian Scientific Foundation, grant #14-21-00137 "Supercomputer
simulation of critical phenomena in complex social systems". The research is done in Advanced
Computing Lab (ITMO University), which is opened in frame of 220 Decree of Russian Government,
contract #11.G34.31.0019.

References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]

V. A. Karbovskii, D. V Voloshin, K. A. Puzyreva, and A. S. Zagarskikh, “Personal Decision
Support Mobile Service for Extreme Situations,” Procedia Comput. Sci., vol. 29, pp. 1646–
1655, 2014.
W. Van Toll, A. F. Cook, and R. Geraerts, “Navigation meshes for realistic multi-layered
environments,” in Intelligent Robots and Systems (IROS), 2011 IEEE/RSJ International
Conference on, 2011, pp. 3526–3532.
J. O. Wallgrün, “Autonomous construction of hierarchical voronoi-based route graph
representations,” in Spatial Cognition IV. Reasoning, Action, Interaction, Springer, 2005, pp.
413–433.
M. Werner, Indoor Location-Based Services: Prerequisites and Foundations. Springer
International Publishing, 2014.
D. Helbing and P. Molnar, “Social force model for pedestrian dynamics,” Phys. Rev. E, vol.
51, no. 5, p. 4282, 1995.
V. Viswanathan, C. E. Lee, M. H. Lees, S. A. Cheong, and P. Sloot, “Quantitative comparison
between crowd models for evacuation planning and evaluation,” arXiv Prepr.
arXiv1401.0366, 2014.
M. Chraibi, A. Schadschneider, and A. Seyfried, “On Force-Based Modeling of Pedestrian
Dynamics,” in Modeling, Simulation and Visual Analysis of Crowds, Springer, 2013, pp. 23–
41.
J. W\kas and R. Lubaś, “Towards realistic and effective agent-based models of crowd
dynamics,” Neurocomputing, vol. 146, pp. 199–209, 2014.
T. Karmakharm, P. Richmond, and D. M. Romano, “Agent-based Large Scale Simulation of
Pedestrians With Adaptive Realistic Navigation Vector Fields.,” TPCG, vol. 10, pp. 67–74,
2010.
T. Robin, G. Antonini, M. Bierlaire, and J. Cruz, “Specification, estimation and validation of a
pedestrian walking behavior model,” Transp. Res. Part B Methodol., vol. 43, no. 1, pp. 36–56,
2009.

2803

