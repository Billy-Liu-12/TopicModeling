Concept Level Web Search Via Semantic Clustering
Nian Yan and Deepak Khazanchi
College of Information Science and Technology,
University of Nebraska at Omaha, NE 68182, USA
{nyan, khazanchi}@mail.unomaha.edu

Abstract. Internet search engine techniques have evolved from simple web
searching using categorization (e.g., Yahoo) to advanced page ranking
algorithms (e.g., Google). However, the challenge for the next generation of
search algorithms is not the quantity of search results, but identifying the most
relevant pages based on a semantic understanding of user requirements. This
notion of relevance is closely tied to the semantics associated with the term
being searched. The ideal situation would be to represent results in an intuitive
way that allows the user to view their search results in terms of concepts related
to their search word or phrase rather than a list of ranked web pages. In this
paper, we propose a semantic clustering approach that can be used to build a
conceptual search engine.
Keywords: Conceptual Search, Search Engine, Document Clustering,
Information Retrieval.

1 Introduction
Internet search engine techniques have evolved from simple web searching using
categorization (e.g., Yahoo) to advanced page ranking algorithms (e.g., Google) [1].
However, one critical disadvantage of this approach is that ranking related
information is not semantically grouped. That is, the results are not organized by
concepts but by rank. For example, if one enters the term “Java” in Google, the search
engine does not know what exactly this word means – is it “coffee Java”, “Java
programming” or even “island Java”. Indeed, all three of these different results will
show up in the search results. An added problem is that the phrase “Java
programming” is so popular that it will dominate at least the first ten pages of the
search results. Another related issue in traditional search engines is the use of Boolean
operation. Internet users retrieve information from massively indexed data by
inputting keywords followed by Boolean operations such as AND, OR and NOT as
the representatives of the query. The major disadvantage of Boolean operations is that
the search results have less relevance compared with what the user is actually looking
for [2][3]. For example, a query for “Information System” returns results with key
words “Information”, “System” and “Information System”, regardless of the
associated meaning of the phrase. Besides Boolean operations, keyword searching has
two major problems caused by synonymy and polysemy (multiple expressions of one
thing or the same expression with multiple meanings).
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 806–812, 2007.
© Springer-Verlag Berlin Heidelberg 2007

Concept Level Web Search Via Semantic Clustering

807

The use of a “conceptual search engine” can provide clarity to users while
accommodating the semantic content (and context) of a term or phrase being
searched. The “concept” in a conceptual search is defined as “one overarching idea or
topic present in a web page” [2]. An even broader view of conceptual search is to do
what one does naturally in conversations with others. In human conversations, we are
able to understand the meaning of specific text or media, including web pages, plain
text, and any documents consist of text message. This characteristic should be
mirrored in a conceptual search engine. Conceptual searching will look for patterns of
relationships rather than for individual words. We are in some sense focused on the
idea of understanding the “text” rather than just querying for the “text”.
We define a “concept” as the abstract of one stream of topics that users are interested
in. The results of “conceptual searching” should be to display relevant contents that are
organized by meaningful concepts. Thus, in this paper we explore the possibility of
developing a conceptual search engine using a semantic clustering approach.

2 Conceptual Searching
There are two general approaches that could be used to achieve the goal of conceptual
searching. One is to index the documents obtained from the internet by keywords and
concepts based on an ontology system. In [4], a goal-oriented search engine was
proposed to achieve an improvement compared with Boolean search. An adaptive
search engine was developed that uses natural language processing to parse a user’s
search goal and uses “common sense” reasoning to translate the user’s goal into an
effective query. In this project, an Open Mind knowledge base (obtained from network
contributors) is regarded as the recourse of “common sense”. Another conceptual
search engine implementation retrieves documents based on a combination of keyword
and conceptual matching [5]. The documents are indexed automatically using the Open
Directory ontology (Open Directory Project, http://dmoz.org), a distributed database of
web content classified by internet volunteers. This approach for information retrieval
of internet documents requires the support of an ontology system. It is unrealistic to
build a conceptual search engine based on an ontology system maintained by
volunteers because a well defined global version of an ontology system has not been
achievable. Moreover, the general purpose of constructing ontology system is only for
specific domain knowledge, e.g. an ontology system for the field of health informatics.
In most cases, internet users are interested in one specific domain rather than seeking
for information within a global knowledge domain.
An alternative to the previous ontology based approaches is to build conceptual
search engines that can take internet documents and self-organized them into
individual concepts. This can be used to return highly relevant concepts based on
users’ requests.

3 Conceptual Searching Using Semantic Clustering
In this section we describe our proposed solution as an alternative to the algorithms
used in classical search engines by improving upon Boolean search and incorporating

808

N. Yan and D. Khazanchi

semantic clustering. In our solution, we assume that unstructured text data is
preprocessed and then clustered. Fig. 1 illustrates the process we used in this paper to
develop our proposed solution.

Web
Data

Semantic
Analyzing
(WordNet)

Data PreProcessing

Document
Clustering

Evaluation
Fig. 1. Conceptual Searching by Semantic Clustering

3.1 Data Preprocessing
In order to analyze unstructured text data, preprocessing is implemented in three steps
[6]: (1) Tokenization: dividing the documents into a set of index terms or keywords.
(2) Stop-words: eliminating the most frequently used common English words, such as
articles, prepositions, and conjunctions. (3) Stemming: prefixes and suffixes of the
words are removed to reduce the redundancy of the same word in different phases.
For example, “do”, “doing”, and “done” will be regarded as one word after stemming
[7]. The documents are then processed by Vector Space Model [8] into a matrix with
rows and columns representing documents and words respectively.
3.2 Data Sets
Google Search Data Set
This data source is directly collected from the internet. It aims to refine the search
results of Google. Given a search term or phrase, Google’s algorithm returns search
results containing those key words ranked by a relevance score. It is necessary to
design a query optimizer to extend the user’s query to the range of key words derived
from a thesaurus or even better lexical reference system, e.g. WordNet
(http://wordnet.princeton.edu/). In this paper, the WordNet is used for semantically
analyzing the user’s input. The query optimizer then extends the original query, e.g.
from term “Java” to “Java programming”, “Java coffee” and “Java island” by
referencing the thesaurus. We collected five cases from search results for each
extended query. We use Google search API (http://code.google.com/apis/ajaxsearch/)
to program and save the results.
UCI KDD Biomedical Data Set
This data set is part of the Syskill and Webert’s web pages ranking data at UCI
Machine Learning Repository (http://www.ics.uci.edu/~mlearn/MLRepository.html).
We choose this dataset because many biomedical research applications used
document clustering in, e.g. [6].

Concept Level Web Search Via Semantic Clustering

809

3.3 Semantic Clustering
In [9], a concept-driven search engine is designed and implemented (Carrot2, http://
www.carrot2.org) based on clustering search results from traditional search engines,
e,g, Google, Yahoo and etc. The search results from traditional search engines are
preprocessed using Vector Space Model and latent semantic indexing technique and
then clustered [9].
Document clustering varies in performance under different problem settings [10].
Certainly, developing high-performance clustering algorithms could improve
document clustering. On the other hand, it is important to develop a good document
modeling method for improving the performance of document clustering. In some
situations, the lack of class-specific “core” words leads to the failure of correctly
clustering the documents. In [11], the authors proposed a semantic smoothing method
for document models for the process of clustering. A proper set of core words are
selected semantically. As a result, for each document, general words can be
discounted. We believe that document modeling plays a more important role
compared with other aspects of document clustering. A semantic document model is
proposed based on the Vector Space Model. Different from [11], we develop the core
word list as illustrated in the algorithm in Fig. 2. We use k-means, the classical
partitional clustering algorithm, to cluster the documents. However, the number of k
in k-means is not easy to determine. We have to experiment within a range from k =
2, and k < 8. The reason k stops at seven is because of the inherent limitation of
human beings to process no more than seven different concepts at the same time. Any
more concepts will result in information overload and confusion in the mind of the
user [12].
Step 1: Tokenizing
Step 2: Eliminating the stop words
Step 4: Stemming then generate word list L = { x 1 ,..., xn }, porter stemming is used.
Step 5: Semantically Analyzing user’s queries by WordNET, and generating initial
core words list C = {t0 ,…, tn}
Step 6: Adding more core words by analyzing the text sources, if
ti ⊂ {x j | f low < tf x j < f high , j = 1,..., n}, (i = 1,..., m) , where tf denotes term frequency
and f low , f high denotes the threshold of the word frequency which is regarded significant
to the final core word list. Those two parameters are determined by the experienced
threshold or analyze of the human experts.
Thus, the core word list is: C = {t0 ,…, tn , tn+1, …, tm }
Step 7: Applying Vector Space model (TF/IDF)
Step 8: Clustering the documents by k-means, k= 2,..., 7
Step 9: Evaluating the clusters by inter-distance. The longer the inter-distance is, the better
the cluster will perform
Step 10: Presenting each cluster as an individual concept
Fig. 2. Semantic Clustering based on Vector Space Model

810

N. Yan and D. Khazanchi

3.4 Simulations

The simulations are implemented in Java and the WVTools Java package
(http://rapid-i.com/content/view/21/44/lang,en/) is used for data preprocessing.

Simulation 1: Clustering Google’s Search Results
In this part, we design a pilot study on refining the Google’s search into conceptual
level. That is, using semantic cluster to identify the major streams in terms of
concepts. For this case, we already know k = 3 because there are three different topics
and for each one we collect five cases. We apply the algorithm in Fig. 2, clustering
results are shown in Table 1. There is only one web page that belongs to cluster 3 but
is clustered into cluster 2. Thus, the accuracy rate is 93.3%.
Table 1. Number of Cases in each Cluster
Cluster

Cases

Incorrectly clustered

1

5

0

2

6

1

3

4

0

Total Cases

15

Simulation 2: Conceptual Search for UCI Biomedical Data Set
We used this data set to apply semantic clustering to identify the major streams in
terms of concepts. In this case, after the step of stemming, the term frequency of each
word is shown in Fig. 3. By a further human inspecting, we set f low = 2 , f high = 42
and do the preprocessing again to get new core word list, after that there are 2051
words generated. By comparing the mean of inter-distance of the clusters under the
different k (shown in Fig. 4), we found that when k = 2, the clustering performs best.
k v.s. cluster inter-distance

Frequency of all the Words
$

7

100

Frequency

75

$

50

25

0

$
$

$

$
$ $
$ $
$
$$
$
$
$$$$ $
$$
$
$
$
$
$$
$$$ $ $$
$
$
$$ $
$$$$ $$
$$$ $
$ $$
$
$
$
$ $ $$$ $$
$$
$
$$ $
$$$ $
$$$
$$$$$$$$$ $
$$ $
$
$$ $ $$ $$$$ $ $$
$$$$
$$
$$
$$ $$$$$ $ $$
$$
$$$$ $ $$
$
$
$
$
$$ $
$
$
$
$
$
$
$ $$$$$$ $$$$$$$ $$
$
$$$$$$
$ $$$$$$$$$$$$$$
$ $$$$ $ $$$$
$$$$ $ $
$ $$$
$$$$$$$$$
$$$
$
$ $$$$$
$$$$ $$$ $ $$
$
$$
$$$
$$ $$ $ $$
$$$$
$$$
$$ $$
$$$
$
$
$$$
$ $$ $$$
$$$
$$$$
$$$
$$
$$$$$$
$
$ $$$$$$$$
$$$$
$$$$$
$$$ $$
$$
$$
$$
$$$$$ $
$$
$$
$$$$$$$$$ $
$$
$$$$$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$$
$$
$
$$$$$$$
$
$
$$$
$$$$
$
$$$$
$$$$
$$$
$$$
$
$$$$$$
$$$$
$
$
$
$
$
$
$$
$
$
$
$
$
$
$
$
$
$$$
$
$ $$$$$$$$$$$$$$$$$
$
$
$
$
$
$
$
$
$$$$
$
$$
$$
$$$
$
$$$$$$$
$$$
$$
$$$
$$$
$$$$$$ $$$
$$
$$
$$
$$$
$$$
$$$
$
$$$$$$
$
$$$
$$
$$$$$
$$$$
$$$
$$$$$$$
$$$$$$$
$$$$
$$ $
$$
$$
$
$$$
$$$$
$$
$$$$$$$$$$$
$$$
$$
$$
$$
$$
$$
$$
$
$$
$$
$
$$
$
$$
$$
$$
$$$$$$
$$$
$$$$
$
$$$$$
$$$$$
$$
$$
$$
$$
$$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$$
$
$
$
$$$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$
$$$$
$
$
$$
$$
$$
$$
$$
$$
$$$
$$
$$$$$
$$
$$$
$$
$$
$$
$$$
$$
$$
$$$$
$$
$$$
$$
$$
$$$
$$
$$
$$
$
$$
$$$
$
$$$$$$
$$
$$
$
$$
$$
$$
$$$
$$$
$
$
$$
$
$$
$$
$$$$
$$$
$$
$
$$
$$
$$$$$
$$
$$
$$
$$$
$$$
$$$$$$$$$$$$$ $
$$$$$$
$$
$$
$$
$$
$$
$$
$$
$$
$$$
$$$
$$
$$
$$
$$
$$
$$
$$$$
$$
$
$$
$$
$$
$$$
$$
$$$
$$$
$$
$$$$
$$
$$
$$
$$
$$
$$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$
$$
$$
$$
$
$
$$
$
$$
$$
$
$$
$$$
$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$
$
$$
$$
$$
$$
$
$$
$
$
$$$
$$$
$$
$$
$$$
$$
$$$
$
$$
$$
$$
$$
$$
$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$$
$
$$
$$
$$
$$
$$
$
$$
$$
$$
$$
$$$
$$$$
$$$$$$$
$
$$
$$
$$
$
$$
$
$$
$$$
$
$$
$$$
$$$$
$$
$$$
$$
$$
$
$
$$$
$$$$
$$
$$$$
$$
$
$
$
$
$$
$$
$$
$$
$$$$
$$
$$$
$$
$
$$$
$$
$
$$
$$
$$
$
$$$
$$$
$$$$
$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$
$$
$$
$
$$$
$$
$$$
$$$$
$$$$
$$
$$
$$$
$$
$$$$$
$$
$$
$
$
$$$
$$
$$
$$
$$$
$$
$$
$$
$$
$$$
$$$
$$
$$
$$
$$
$$
$

0

1000

2000

3000

4000

Number of clusters(k)

$

$

6

5

4

3

2
0.10

0.20

0.30

0.40

0.50

Word ID Number

Mea n of inter-dista nce of clusters

Fig. 3. Term Frequency

Fig. 4. Mean of inter-distance

Concept Level Web Search Via Semantic Clustering

811

When k =2, the two clusters have 4 and 132 pages, respectively. The contents of the
clusters shows the fours are materials definitely not related to biomedical, e.g.
networking, or invalid web pages. Thus we recommend k = 7, when the cluster
performs little worse than k = 2 but more reasonable. The four cases are still in one
cluster as well as when k = 2. The other six clusters are the representatives of the
different topic streams. This result is shown in Table 2.
Table 2. Number of Cases in each Cluster
Cluster
Cases

1
46

2
18

3
4

4
11

5
13

6
30

7
14

Total Cases
136

4 Conclusions
In this paper, we developed a practical approach for implementing conceptual
searching on the internet. The web documents obtained from a standard search are
semantically modeled into vectors for clustering analysis. The simulation results show
the effectiveness of this approach. For example, in simulation 1, the accuracy of
correctly assigning a document to a given conceptual cluster is 93.3%. In this
research, the identification of the topic for each cluster as the name of the concepts
remains a good research topic in the future. For example, automatically creating a
summary of the essential semantic content of a single web page for real time analysis
without any other pre-processing, indexing and storing of the data from web needs to
be further researched [2] [13]. Conceptual clustering techniques, such as COBWEB
[14], contribute to creating the descriptions for clusters by incrementally creating
hierarchical structure of the documents. Finally, the possible improvements that can
be made in future research for this application is to analyze the document in phrases
other than individual words (tokenization). Thus for example, the recognition of
“software process improvement” as a phrase makes more sense for the Vector Space
Model as compared with tokenization. The POS-tag [15] is a phrasing technique that
can be used to make more sense of the data during pre-processing.

References
1. Page, L., Brin, S., Motwani, R., Winograd, T., The PageRank Citation Ranking: Bringing
Order to the Web, Stanford University (1999)
2. Ramirez, P. and Mattmann, C., ACE: Improving Search Engines via Automatic Concept
Extraction. Proceedings of the 2004 IEEE International Conference on Information Reuse
and Integration (IEEE-IRI 2004), pp. 229-234. Las Vegas, Nevada, USA, November 8th10th (2004)
3. Deniston, M., An Overview and Discussion of Concept Search Models and Technologies,
Concept Searching Whitepaper, Fios Confidential (2003)
4. Liu, H., Lieberman, H., Selker, T., GOOSE: A Goal-Oriented Search Engine with
Commonsense, Proceedings of the Second International Conference on Adaptive
Hypermedia and Adaptive Web-Based Systems, pp. 253-263 (2002)

812

N. Yan and D. Khazanchi

5. Gauch, S., Madrid, J., Induri, S., Ravindran, D. and Chadlavada, S., KeyConcept: A
Conceptual Search Engine, Information and Telecommunication Technology Center,
Technical Report: ITTC-FY2004-TR-8646-37, University of Kansas (2004)
6. Peng, Y., Yan, N., Kou, G., Chen, Z., Shi, Y., “Document Clustering in Antimicrobial
Peptides Research”, Proceedings of the Eleventh Americas Conference on Information
Systems, August 11-14 (2005)
7. Baeza-Yates, R. and Ribeiro-Neto, B. Modern Information Retrieval. Addison-Wesley,
Wokingham, UK (1999)
8. Porter, M.F., An algorithm for suffix stripping, Program, 14(3): 130-137 (1980)
9. Osinski, S, and Weiss, D., A Concept-Driven Algorithm for Clustering Search Results,
IEEE Intelligent Systems ,vol. 20, no. 3, pp. 48-54, May/June (2005)
10. Zamir, O., Etzioni, O., Web document clustering: A feasibility demonstration. Proceedings
of the 21st Annual International ACM Conference on Research and Development in
Information Retrieval (SIGIR), 46-54 12 (1998)
11. Zhou, X., Zhang, X., and Hu, X., Semantic Smoothing of Document Models for
Agglomerative Clustering, accepted in the Twentieth International Joint Conference on
Artificial Intelligence (IJCAI 2007), Jan. 6-12, India (2007)
12. Miller, G. A., The Magical Number Seven, Plus or Minus Two: Some Limits on Our
Capacity for Processing Information, The Psychological Review， vol. 63, pp. 81-97
(1956)
13. Michalski, R. S., "Knowledge acquisition through conceptual clustering: A theoretical
framework and an algorithm for partitioning data into conjunctive concepts". International
Journal of Policy Analysis and Information Systems 4: 219–244 (1980)
14. Fisher, D., “Knowledge acquisition via incremental conceptual clustering,” Machine
Learning, vol. 2, no. 2, pp. 139-172 (1987)
15. Hage, W., Rijke, M., and Marx, M., Information retrieval support for ontology
construction and use, ISWC 2004: international semantic web conference, Hiroshima,
Japan (2004)

