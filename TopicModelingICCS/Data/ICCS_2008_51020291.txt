Scale-Splitting Error in Complex Automata
Models for Reaction-Diﬀusion Systems
Alfonso Caiazzo1, Jean Luc Falcone2 ,
Bastien Chopard2 , and Alfons G. Hoekstra1
1

Section Computational Science, University of Amsterdam, The Netherlands
{acaiazzo,alfons}@science.uva.nl
2
CUI Department, University of Geneva, Switzerland
{Jean-Luc.Falcone,Bastien.Chopard}@cui.unige.ch

Abstract. Complex Automata (CxA) have been recently proposed as a
paradigm for the simulation of multiscale systems. A CxA model is constructed decomposing a multiscale process into single scale sub-models,
each simulated using a Cellular Automata algorithm, interacting across
the scales via appropriate coupling templates. Focusing on a reactiondiﬀusion system, we introduce a mathematical framework for CxA modeling. We aim at the identiﬁcation of error sources in the modeling stages,
investigating in particular how the errors depend upon scale separation.
Theoretical error estimates will be presented and numerically validated
on a simple benchmark, based on a periodic reaction-diﬀusion problem
solved via multistep lattice Boltzmann method.
Keywords: Complex Automata, multiscale algorithms, reaction-diﬀusion,
lattice Boltzmann method.

1

Introduction

Complex Automata (CxA) have been recently proposed [1,5,6] as a paradigm
for the simulation of multiscale systems. The idea of a CxA is to model a complex multiscale process using a collection of single scale algorithm, in the form
of Cellular Automata (CA), lattice Boltzmann methods, Agent Based Models,
interacting across the scales via proper coupling templates [6].
To construct a CxA we identify the relevant sub-processes, deﬁning their
typical time and space scale. The concept of the Scale Separation Map (SSM)
[6] helps in this modeling stage. It is deﬁned as a two dimensional map with
the Cartesian axes coding the temporal and spatial scales. Each single scale
model deﬁnes a box on the SSM, whose leftmost and bottom edges indicate the
resolution of the single scale Automaton, while the rightmost and top edges
are deﬁned by the characteristics of the single scale process (e.g. the extreme
of spatial and temporal domains). The key idea of a CxA is to transform a
single big box spanning several time and space scales on the SSM in a set of
interconnected smaller boxes (see Fig. 1).
M. Bubak et al. (Eds.): ICCS 2008, Part II, LNCS 5102, pp. 291–300, 2008.
c Springer-Verlag Berlin Heidelberg 2008

292

A. Caiazzo et al.
space scale
CA2

CA3

L1
ξ1

CA1
CA4

Δx1
Δt1

τ1

T1

time scale

Fig. 1. Example of a scale separation map for a CxA model. The solid box represents
a complex process spanning several space and time scales. The CxA model splits the
box in N smaller boxes (dashed lines, centered in the typical scales (τi , ξi ) of the
sub-processes i) interacting across the scales.

Formally, we replace the original multiscale process, identiﬁed by state variable
+ update rule, with a collection of N single scale models, deﬁned by
(state variables + update rule)i , i = 1, . . . , N
plus a set of coupling templates, describing how the single scale models interact
together.
Aim of this paper is to propose a formalism and a procedure to analyze CxA
models. Focusing on an algorithm designed for reaction-diﬀusion problems, we
investigate the scale-splitting error, i.e. the diﬀerence between the numerical
solution obtained using a single multiscale algorithm based on single time and
space discretization (equal to the ones needed to resolve the small scales) and
the numerical solution obtained using the corresponding CxA model.
In section 2 we introduce shortly a lattice Boltzmann scheme for a reactiondiﬀusion problem, describing how a CxA model for that system can be constructed. In section 3 we investigate the error introduced in the CxA model,
deriving explicit estimates for the considered benchmark, which are validated on
simple numerical simulations. Finally, we draw the conclusion in section 4.

2
2.1

From a Multiscale Algorithm to Single Scale Models
Lattice Boltzmann Method for a Reaction-Diﬀusion Problem

We want to construct a CxA model for a reaction-diﬀusion process (RD) described by the equation
∂t ρ = D∂xx ρ + R(ρ), t ∈ (0, Tend ], x ∈ (0, L]

(1)

(plus additional initial and boundary conditions).
To solve numerically (1) one can use an algorithm based on the lattice Boltzmann method (LBM) (overviews of the LBM can be found for example in [4,8],
or in [2] for application to RD problems). For a chosen small parameter h, we

Scale-Splitting Error in Complex Automata Models

293

discretize the space interval with a regular grid Gh = {0, . . . , Nx − 1} of step size
Δxh = h, and employ a D1Q2 model based on two velocities ci ∈ {−1, 1} and
an update rule of the form
1
1 eq tn
(f (ρ (j)) − fitn (j)) + h2 R(ρtn (j)) .
τ i
2

fitn +1 (j + ci ) = fitn (j) +

(2)

Here j ∈ Gh is the spatial index of the node1 , while n ∈ N0 is the index which
counts the time steps of length such that
Δth
= const.
Δx2h

(3)

For the D1Q2 model we have
fieq (ρ) =

ρ
, i = 1, −1 .
2

(4)

Algorithm (2) leads to a second order approximation of the solution of (1) [7] if
the parameter τ in (2) is chosen according to the diﬀusion constant in (1) as
τ=

Δth
1
+D
.
2
Δx2h

(5)

Observe that τ is independent from h in virtue of (3).
In a more compact form, we can rewrite (2) as
t
fˆhn+1 = Ph (Ih + ΩDh (τ ) + ΩRh )fˆhtn ,

(6)

where fˆh (omitting the subscript i) represents a h-grid function , i.e. a real valued
function deﬁned on a grid of step h:
fˆh : Gh → IR2 , fˆh : j → fˆhn (j) .
Introducing the set Fh = φ : Gh → IR2 we have fˆh ∈ Fh . With this notation
the subscript h denotes operators acting from Fh to itself: Ih is simply the
identity on Fh , Ph acts on a grid function shifting the value on the grid according
to ci
Ph fˆh (j) = fˆi,h (j − ci ),
i

while ΩDh and ΩRh are the operations deﬁned in the right hand side of (2):
ΩDh fˆh

(j) =
i

1 eq
n
(f (ρ(fˆh (j)) − fˆh,i
(j)),
τ i

1
ΩRh fˆh (j) = h2 R(ρ(fˆh (j)) .
2

Since ΩDh depends on the non-equilibrium part of fˆh and ΩRh is a function
of the moment of the distribution, i.e. of the equilibrium part, it can be shown
[3] that
(7)
∀fˆh : ΩDh ΩRh fˆh = 0 .
1

For simplicity we assume periodic boundary conditions, considering the addition
j + ci modulo Nx .

294

A. Caiazzo et al.

and similarly, since the operator ΩDh maps any element of Fh in grid function
with zero moment:
∀fˆh : ΩRh (Ih + ΩDh )fˆh = ΩRh fˆh .

(8)

Relation (7) allows to split the LB algorithm (6) (see also [2]) as
t
fˆhn+1 = Ph (Ih + ΩDh (τ ))(Ih + ΩRh )fˆhn = Dh Rh fˆhtn ,

(9)

separating reaction Rh = Ih + ΩRh and diﬀusion Dh = Ph (Ih + ΩDh (τ )).
Scale Separation Map. The next step towards the CxA model is the scale
separation map. We start with the discrete process described by equation (6),
which represents in our case the multiscale algorithm. On the SSM (in this
simpliﬁed case restricted to the time scale axis) it spans a range of time scales
between Δth = h2 and Tend (ﬁg. 2a). Equation (9) shows that we can split
the problem in two processes. Assuming that the diﬀusion is characterized by a
typical time scale larger than the reaction time scale (for example if D is small
compared to κ), we introduce a coarser time step
ΔtD = M Δth ,

M ∈ N.

In practice, it corresponds to execute M steps of the reaction R, up to a time
TR = ΔtD , followed by a single diﬀusion step.
(a)

(b)

(RD)

Δth

(R)

Tend

Δth

(c)
(D)

ΔtD =TR

(D)

(R)

Tend

T
Δth R

ΔtD

Tend

Fig. 2. The SSM for the reaction-diﬀusion problem. In (a) reaction (dashed line) and
diﬀusion (solid line) are considered as a single multiscale algorithm. In (b) we assume
to use diﬀerent schemes, where the diﬀusion time step ΔtD is larger than the original
Δth . (c) represents the situation where the two processes are time separated, with a
ΔtD .
very fast reaction yielding an equilibrium state in a time TR

Back to the SSM, we have shifted to the right the lower edge of the diﬀusion
box (ﬁgure 2b) and to the left the upper extreme of the reaction box. We have
TR = ΔtD , since the reaction is run in the whole time interval [0, ΔtD ] with
time step Δth and reinitialized after each diﬀusion step.
Observe that this is not the only possibility. In some systems, the reaction
leads very quickly to an equilibrium state in a typical time smaller than the
discrete time step of the diﬀusion. The scale map for this situation is depicted in

Scale-Splitting Error in Complex Automata Models

295

Fig. 2c. However, this is a rather special case and will not be discussed here. We
restrict the analysis to a single species reaction-diﬀusion with linear reaction,
focusing on the SSM in Fig. 2b, where the time scales are not completely separated. A more complete treatment of the diﬀerent cases (including more general
multiscale processes) shall be topic of an upcoming work.
CxA Model for Reaction-Diﬀusion. After coarsening the time scale of diffusion algorithm with ΔtD = M Δth , we can deﬁne a coarser space discretization
selecting a new parameter h2
Δxh2 = h2 = MX h,

MX ∈ N .

(10)

Note that equation (2) must be modiﬁed according to√(5). We restrict to two possibilities: MX = 1 (time coarsened CxA) or MX = M (time-space coarsened
CxA, in order to preserve relation (3)).
Introducing the vector of small parameter H = (h, h2 ), the CxA can be formally described with the state variable fˆH = fˆ1,h , fˆ2,h2 , whose components
denote the state after reaction fˆ1,h and after diﬀusion fˆ2,h2 and evolve according
to
(CAR )
t1,0 =t2,n2
t2,n2
ˆ
,
f1,h1
= f1init fˆ2,h
2
t1,n1 +1
1,tn1
ˆ
ˆ
= R1,h1 f1,h1 , n1 =0,...,M−1
f1,h1

(CAD )
0
init
ˆ
ˆ
f2,h2 = f2,h2 (ρ0 ),
(11)
t2,n2 +1
t2,n2 +MΔtR
ˆ
f
fˆ2,h
=
D
Π
.
2,h2 h2 ,h 1,h1
2

init
being the initial condition.
fˆ2,h
2
Using diﬀerent discretizations, we deﬁne also a projection Πh2 ,h from the grid
Gh to Gh2 and a new operator Dh2 . In fact, it depends on the relaxation time τ ,
which must be modiﬁed according to (5).
With the terminology introduced in [6] (11) is a CxA composed of two Automata coupled through the following templates. (i) CAR is coupled to CAD
through the initial conditions, since the output value of a single CAD iteration
is used to deﬁne CAR initial conditions. (ii) CAD is coupled to CAR through
the collision operator, since the output value of the reaction (after M iterations
of CAR ) is used to compute CAD collision operator.
This example is a special case where the two processes act on the same variable, and it is possible to write the algorithm only depending on fˆ2,h2 :
t2,n +1
ˆt2,n2
fˆ2,h 2 = D2,h (τ(M) )RM
2,h f2,h ,
0
init
fˆ2,h
= fˆ2,h
(ρ0 ) .

(12)

General Formalism. From a more general point of view, we can formalize the
Complex Automata modeling technique starting with an algorithm in the form
t

fhn+1 = Φh fhtn

(13)

296

A. Caiazzo et al.

deﬁned on ﬁne space and time scales, identiﬁed by a discretization parameter
h. Equation (13) describes the evolution of a single multiscale algorithm for
a complex process where the numerical solution fhtn denotes the state of the
system at the n-th iteration and Φh is the update rule. As before, we introduce
the spatial grid Gh so that
fhtn ∈ Fh = {φ : G(h) → R2 },

Φh : Fh → Fh .

(14)

Constructing a CxA we replace algorithm (13) with several simpler single
scale Cellular Automata, described by the state variable fˆH = fˆ1,h , . . . , fˆR,h
1

R

(where H = (h1 , . . . , hR )) and an update rules for each component of fˆH :
ΦH = (Φ1,h1 , . . . , ΦR,hR ) .

(15)

CxA
The numerical solution of the CxA model fˆH belongs to a space FH
⊂
F1 × . . . FR (since the state spaces can be shared by diﬀerent Automata), and
ΦH : FH → FH . We can also introduce a general projection operator Π which
deﬁnes the way we coarsen our process and lift operator Λ which describes an
approximate reconstruction of the ﬁne grid solution starting from the CxA one:

ΠHh , Πhr ,h : Fh → Fhr , r = 1, . . . , R,

ΛhH : FH → Fh .

The relevant spaces and operators introduced in the formalism in the particular case of reaction-diﬀusion can be represented with the diagram
fh ∈ Fh

ΠHh =(Πh1 ,h ,Πh2 ,h )

✲ fH = fˆ1,h1 , fˆ2,h2 ∈ FH

M
ΦM
h =(Dh Rh )

❄
fh ∈ Fh ✛

ΦH =(RM
1,h ,D2,h2 )

ΛhH

fH

❄
∈ FH

where a single step of the update rule ΦH corresponds to M steps of the Φh ,
since ΔtD = M ΔtR . In this example example, if h1 = h2 = h, the components
of the projection ΠHh are equal to the identity on Fh . If h1 = h2 , Πh2 ,h can be a
sampling of the numerical solution on a coarser grid, and Λh,h2 an interpolation
routine.

3

The Scale-Splitting Error

The idea of the CxA model is to replace
(Ah ): the original (complex) multiscale algorithm depending on a discretization parameter h,
with
(CxA): a collection of coupled single scales algorithms.

Scale-Splitting Error in Complex Automata Models

297

This yields an improvement of the performance which is paid by a possible loss
of precision. In analyzing the CxA modeling procedure, we are interested in
quantifying E Ah ,CxA , expressing the diﬀerence between the numerical solutions
of (Ah ) and (CxA), which we call scale-splitting error or CxA-splitting error.
This quantity can be related to the loss of accuracy. Calling E CxA,EX the error
of the CxA model with respect to the exact solution and E Ah ,EX the absolute
error of the model (Ah ), we can write
E CxA,EX ≤ E Ah ,EX + E Ah ,CxA .
3.1

(16)

Error Estimates for the Reaction-Diﬀusion Model

For the CxA model of (RD), since the algorithm is designed to approximate the
variable ρ, we can deﬁne the scale-splitting error at time iteration tN as
tN
= ρ ΠHh fˆhtN − fˆ2,h
2
(17)
representing the diﬀerence between ρ(fˆh ), i.e. the numerical solution of the ﬁnegrid algorithm (9) and ρ(fˆ2,h2 ), i.e. the output of the CxA model (11) after both
reaction and diﬀusion operators have been applied.
Observing that fˆh is the solution of (2) and fˆ2,h2 is obtained from (11) we
can rewrite (17) as
tN
E A,CxA (ρ; M, MX , tN ) = ρ Πh2 ,h fˆhtN − ρ fˆ2,h
2

= ρ Πh2 ,h (Dh Rh )

M

ˆtN −MΔth
fˆhtN −MΔth − D2,h2 Πh2 ,h RM
h Λh,h2 f2,h2

(18)

For simplicity, let us assume that the two solutions coincide at the previous
time and that we can write2
tN −MΔth
fˆhtN −MΔth = Λh,h2 fˆ2,h
2

(for example if tN − M Δth corresponds to the initial time). Since the reaction
is local, we have
M
∀M > 0 : RM
h Λh,h2 = Λh,h2 R2,h2 .
Additionally, note that
Πh2 ,h Λh2 ,h fˆ2,h2 = fˆ2,h2
(projecting after reconstructing gives the same function). Hence, we conclude
that the distance between the numerical solutions can be estimated by measuring
the distance between the algorithms
2

In general, it holds
t −M Δth )
tN −Δt2
= ΛhH fˆH
+ (MX , M, tN − Δt2 ) +
fˆhN

Λ,Π (H, h)

where (MX , M, t) is bounded by E(MX , M, t) and Λ,Π (H, h) depend on the accuracy of projection and lift operations. The derivation of the estimate for this case is
not reported in this short communication [3].

298

A. Caiazzo et al.

E A,CxA (MX , M ) := ρ Πh2 ,h (Dh Rh )
M

ρ Πh2 ,h (Dh Rh )
ρ

M

− DhM RM
Λh,h2
h

ΠHh DhM − D2,h2 Πh2 ,h RM
h Λh,h2

Λh,h2 − D2,h2 RM
2,h2

≤

+

(19)

= E (1) + E (2) .

The contribution E (1) depends on the diﬀerence (Dh Rh )M − DhM RM
h , which
can be estimated as a function of [Dh , Rh ] = Dh Rh −Rh Dh , i.e. the commutator
of the operators Rh and Dh . For example, if M = 2 we have
2

(Dh Rh ) = Dh Rh Dh Rh = Dh2 R2h − Dh [Dh , Rh ]Rh .
An argument based on asymptotic analysis [3,7], assuming that the numerical
solution (which is a h-grid function) can be approximated by a smooth function
evaluated on the grid points, i.e.
fˆh (n, j) ≈ f (tn , xj ),

(20)

can be used to show (also in virtue of the properties (7)-(8)) that
[Dh , Rh ] ∈ O h3 ∂x ρκ .

(21)

By counting the number of times the commutator appears in the diﬀerence
M
(Dh Rh ) − DhM RM
h , we have
2 3
(Dh Rh )M − DhM RM
h ∈ O M h ∂x ρκ .

(22)

(2)

The part EH derives from the coarsening of the original lattice Boltzmann
algorithm. Assuming (20) for both the coarse- and the ﬁne-grid solutions we
obtain
2 2
ρ Πh2 ,h DhM − D2,h2 Πh2 h = O(MX
h + M 2 D 3 h2 ) .
(23)
We are interested in how the error depends on the coarsening in time and space,
ﬁxed a ﬁne discretization parameter h and for particular values of κ and D which
regulate the typical time scales of the system. In conclusion, (22)-(23) yield
if MX = 1: E A,CxA (M ) = O M 2 h3 ∂x ρκ + O(M 2 D3 h2 ),
2
: E A,CxA (M ) = O M h2 .
if MX = 1, M = MX

3.2

(24)

Numerical Results

We consider the benchmark problem (1) with D = 0.1, κ = 3 and initial value
ρ(0, x) = sin (2πx), for which we have the analytical solution
ρEX (t, x) = sin (2πx) exp

R − D4π 2 t .

(25)

Scale-Splitting Error in Complex Automata Models

299

From the simulation results fˆh of algorithm (2) and fˆ2,h2 of model (11), we
evaluate (17) as
E(MX , M ; tN ) = Πh2 ,h ρ(fˆh ) − ρ(fˆ2,h2 ) =
⎧
⎫
⎨
⎬ (26)
1
tN
= max
(j))
Πh2 ,h ρ(fˆhtN )(j) − ρ(fˆ2,h
,
2
tN Nx (h2 ) ⎩
⎭
j∈Gh2

Using (25), we compare also the scale-splitting error with the quantity
⎧
⎫
⎨
⎬
1
ρ(fˆhtn (j)) − ρEX (tn , xj )) ,
E Ah ,EX = ρ(fˆh ) − ρEX h = max
n Nx (h) ⎩
⎭
j∈Gh

(27)
i.e. the error of the original fully ﬁne-discretized algorithm (6) (evaluated with
an opportune norm on the ﬁne-grid space, according to the norm chosen in (26)).
Fig. 3 shows the results of scale-splitting error investigation, choosing diﬀerent
2
.
values of M and comparing the cases MX = 1 and M = MX
(b)

(c)

0.06
−2

slope ∼ 1.1

0.05

maxtN E

EH (1,M,tN )

(a)
0.02

0.015

−3

0.04

M =16

−4

0.03

0.01

−5

0.02
−6

M =9

0.005

0.01

M =4
0

0

0.5

1

tN

1.5

E Ah

slope ∼ 2

−7

0
2

0

5

10

15

20

25

−8

1

1.5

2

2.5

3

3.5

M

Fig. 3. (a): CxA-splitting error versus time for M = 4, 9, 16, ﬁxing M√X = 1. (b):
Maximum values of the CxA-splitting error for MX = 1 (◦) and MX = M (×) over
A ,EX
a complete simulation, as a function of M . The dashed line shows the error Eh h
2
of the fully ﬁne-discretized algorithm (Δxh = h, Δth = h ) with respect to the exact solution (25). (c): Order plot (ﬁg. (b) in double logarithmic scale) of maximum
CxA-splitting error versus M . The approximate slopes conﬁrm the behavior predicted
by (24).

In particular, in ﬁg. 3b we compare the maximum scale-splitting error in time
for diﬀerent values of M also with the error E Ah ,EX deﬁned in (27). It shows
that for small M the splitting error is of the same order of the discretization error
of the original lattice Boltzmann algorithm (6). In this cases, the simpliﬁcation
obtained with the CxA model does not aﬀect the quality of the results.
The order plot in ﬁg. 3c conﬁrms estimates (24). In fact, the splitting error
increases linearly in M , while for MX = 1 the increment is quadratic. As a
consequence, for a moderate range of M , MX = 1 can produce quantitatively
better results.

300

4

A. Caiazzo et al.

Conclusions and Outlook

We introduced a formalism to describe Complex Automata modeling. In particular we investigated the scale-splitting error, i.e. the modeling error introduced
by replacing a fully ﬁne-discretized problem with multiple Cellular Automata on
diﬀerent scales. Restricting to a lattice Boltzmann scheme for reaction-diﬀusion
problems, we have derived explicit estimates for the splitting error verifying the
expectation on simple numerical simulations.
The investigation of the scale-splitting error represents the basis of a theoretical foundation of the Complex Automata simulation technique. In a future
work we will discuss generalizations of the concepts presented here and of the
estimates derived in this particular example to more complicate systems and
more general CxA models.
Acknowledgments. This research is supported by the European Commission,
through the COAST project [1] (EU-FP6-IST-FET Contract 033664).

References
1. The COAST project, http://www.complex-automata.org
2. Alemani, D., Chopard, B., Galceran, J., Buﬄe, J.: LBGK method coupled to time
splitting technique for solving reaction-diﬀusion processes in complex systems. Phys.
Chem. Chem. Phys. 7, 1–11 (2005)
3. Caiazzo, A., Falcone, J.L., Hoekstra, A.G., Chopard, B. Asymptotic Analysis of
Complex Automata models for Reaction-Diﬀusion systems. (in preparation, 2008)
4. Chopard, B., Droz, M.: Cellular Automata Modelling of Physical Systems. Cambridge University Press, Cambridge (1998)
5. Hoekstra, A.G., Chopard, B., Lawford, P., Hose, R., Krafczyk, M., Bernsdorf., J.:
Introducing Complex Automata for Modelling Multi-Scale Complex Systems. In:
Proceedings of European Complex Systems Conference 2006 (CD), European Complex Systems Society, Oxford (2006)
6. Hoekstra, A.G., Lorenz, E., Falcone, J.-L., Chopard, B.: Towards a Complex Automata Formalism for Multi-Scale Modeling. (accepted for publication) International Journal for Multiscale Computational Engineering 5, 491–502 (2007)
7. Junk, M., Klar, A., Luo, L.-S.: Asymptotic analysis of the lattice Boltzmann Equation. Journal Comp. Phys. 210, 676–704 (2005)
8. Succi, S.: The Lattice Boltzmann Equation for Fluid Dynamics and Beyond. Oxford
University Press, Oxford (2001)

