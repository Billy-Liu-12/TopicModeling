Context-Aware GRID Services: Issues and Approaches
Kerry Jean, Alex Galis, and Alvin Tan
University College London, Electrical Engineering Department,
Torrington Place, London, WC1E 7JE, U.K.; Tel: +44-20-7679573;
{kjean,agalis,atan}@ee.ucl.ac.uk

Abstract. While Grid services introduce efficiency in addressing the changing
and often large resource demands of Grid applications, making the system
context-aware takes the approach a step further by incorporating the important
aspects of customisation and personalisation into Open Grid Services
Architecture (OGSA) services. This is achieved by extending the concept of
virtual organisations (VO) to Grid context, which link context information to
users, policies and resources. Context is defined as any information that can be
used to characterise the situation of an entity. When this information is
modelled and properly managed, the OGSA services can become context-aware
and context-aware services can be offered by the Grid.

1 Introduction
Large amounts of computational power and storage are required for solving complex
scientific and engineering problems [1]. The advent of the Internet has caused a
proliferation in the growth of computers but much of this computing power is not
fully utilised most of the time. The Grid concept seeks to harness this latent
computing power by providing technology that enables the widespread sharing and
coordinated use of networked computing resources to solve complex computing tasks
[1,2]. A Grid is a geographically distributed platform, accessible to their users via a
single interface, thus providing massive computation power and storage for the
solving of complex tasks [3].
Grids provide coordinated sharing of computing resources like memory, software,
data, processing power and other resources that are required for collaborative problem
solving. This sharing arrangement is highly controlled with clearly defined rules as to
what is shared, who is allowed to share and the conditions under which this sharing
takes place. The set of individuals and/or institutions that abide by these rules is
termed a virtual organisation (VO) [4]. Virtual Organisations supply a “context” ((the
definition of context here is one of association) for operation of the Grid that can be
used to associate users, their requests, and resources. These “contexts” can be used by
services as an assertion of identity, e.g. this user or resource, is a member of this VO.
This “context” can be extended to take into account any information that can be used
to characterise Grid entities. This rich context information when modelled and
managed introduces context-awareness into the Grid and enables both the
customisation of the Open Grid Services Architecture (OGSA) services [6] and the
provision of context-aware services (CAS) by the Grid to end users.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 166–173, 2004.
© Springer-Verlag Berlin Heidelberg 2004

Context-Aware GRID Services: Issues and Approaches

167

The development of Grid computing was found on a basic architectural premise: a
computing service platform is used as the means to interconnect intelligent endsystems to support large-scale applications. Most of the current research into Grid
focuses on the Grid services architecture [6,7] or the development of Grid tools and
protocols [1]. Other research has focussed on the management of the Grid [10,11,12]
and the use of the Grid to solve complex scientific problems [9].
The ability of the Grid infrastructure to adapt to new functional requirements has
become difficult to achieve. In addition, the current Grid computing infrastructure has
insufficient flexibility, support for multiple applications and rapid deployment of
applications on the infrastructure. With this in mind, it has been proposed to introduce
context management into the Grid to make the OGSA services and by extension the
Grid context-aware.
This paper presents the authors’ position on context-awareness in Grids and will
introduce the idea of context-awareness in the Grid; first enabling the OGSA services
to become context-aware and eventually the provision of context-aware services
(CAS) by the Grid. The next section will introduce the OGSA while the third section
will define context and context management. Then the context Grid service will be
detailed. The paper will conclude with a summary and the proposed work needed to
create a context-aware Grid.

2 Open Service Grid Architecture
The establishment, management, and exploitation of dynamic, distributed
heterogeneous VOs require an enabling service architecture for Grid systems and
applications. Such an architecture is the Open Grid Services Architecture (OGSA)
defined by the Open Grid Services Architecture Working Group (OGSA-WG) [6] of
the Global Grid Forum [8]. The OGSA defines an integrated set of web service (WS)based service definitions designed both to simplify the creation of secure, robust Grid
systems, and to enable the creation of interoperable, portable, and reusable
components and systems via the standardisation of key interfaces and behaviours.
The OGSA defines, in terns of web services description language (WSDL)
standard approaches to, and mechanisms for solving problems such as communicating
with other services, establishing identity, negotiating authorisation, service discovery,
and managing service collections. The three principal elements of the OGSA Platform
are the Open Grid Services Infrastructure, the OGSA Platform Interfaces, and OGSA
Platform Models [6].
Open Grid Services Infrastructure (OGSI) defines mechanisms for creating,
managing, and exchanging information among entities called Grid services [7]. A
Grid service is a web service that conforms to a set of conventions (interfaces and
behaviours) that define how a client interacts with the Grid. These conventions, and
other OGSI mechanisms, provide for the controlled, fault resilient, and secure
management of the distributed and often long-lived state that is commonly required in
distributed applications.
OGSA Platform Interfaces build on OGSI mechanisms to define interfaces and
associated behaviours for various functions not supported directly within OGSI, such
as service discovery, data access, data integration, messaging, and monitoring.

168

K. Jean, A. Galis, and A. Tan

OGSA Platform Models support these interface specifications by defining models
for common resource and service types.
The OGSA Platform components are supported by a set of OGSA Platform
Profiles addressing issues such as the following [6].
Protocol bindings: These work toward attaining interoperability among different
Grid services by defining common mechanisms for transport and authentication. An
example of such a Grid service transport profile is “SOAP over HTTP”.
Hosting environment bindings: Profiles of this sort enable portability of Grid
service implementations. For example, an “OGSA J2EE Profile” might define
standardised Java APIs to allow the portability of Grid services among OGSI-enabled
J2EE systems.
Sets of domain-specific services: These profiles define interfaces and models to
address the needs of specific application domains. For example, an “OGSA Database
Profile” might define a set of interfaces and models for distributed database
management.

3 Context and Context-Aware Services
Context is defined as any information that can be used to characterise the situation of
an entity, where an entity can be a person, place, physical or computational object.
From this point of view, almost any information that occurs in the surroundings of a
specific system usage can be termed context (e.g. the current time and date, the usage
history, the user profile, the temperature at the user location, the position of the user,
etc.). A context element is an autonomous component that also can be used by a
number of application services, but that exists independently of the application
service. Typical examples are: (1) calendar information (e.g. activity type, time,
actors, location, etc.); (2) user location information (e.g. outdoors/indoors, building,
room, etc.); (3) weather information (e.g. outside temperature, whether it is sunny,
raining, snowing, etc.); (4) social context (e.g. role –student/staff/faculty; wife; friend;
boss; colleague, director, etc.); (4) personal preferences (e.g. food preferences,
favourite sports, etc.); (5) permission profiles (e.g. what services can contact the user
and when, what contextual information can be made available to different types of
services and under which circumstances); (6) user’s behaviour (e.g. task, habits); (7)
device and network characteristics (e.g. network elements, bandwidth).
Context-awareness cannot be achieved without an adequate methodology and a
suitable infrastructure. There has been little work on the management of context
within the Grid or on efforts to make the Grid context-aware. But there has been some
work on CAS and its development [13,14]. However, this work has been hampered by
the need to develop a custom context infrastructure for each application. Presently,
there is an initiative to create an active, programmable platform for the creation and
delivery of context aware services in the Context project [15]. The introduction of
context-awareness into the Grid will easily enable the personalisation and
customisation of OGSA services. These services will easily adapt to a change in their
context. When OGSA services become context-aware, the Grid could then offer
context-aware services to customers. Hence, context-awareness will enable new types
of services in Grid computing environments.

Context-Aware GRID Services: Issues and Approaches

169

One of the most difficult aspects to cater in putting context in the Grid is that the
context of people, networks, and applications can be time varying and sometimes can
vary quite rapidly. This poses the challenge of tracking different types of environment
changes in real time and also to react accordingly to these changes [14]. This is a key
feature of context-aware applications and systems so as to fully exploit the richness of
context-information. In view of this, we have proposed a flexible Grid context service
that fits neatly into the Grid service architecture that was discussed in the previous
section. Our proposal, which will be discussed in the next section, entails defining a
new OGSA service, a Grid context service to manage context and make the Grid
context aware.

4 Grid Context Service
In order to make a Grid context-aware, we introduce the context service into the
OGSA. This is an extension of the virtual organisation’s concept of associating users
and resources to VOs by supplying a “context” (the definition of context here is one
of association). This concept is extended by looking at “context” as not just an
association of users or resources but as any information that characterises the situation
of an entity be it associations, relationships or characteristics. Hence, the context Grid
service is as an extension of this VO “context” linking contextual information, users,
resources and policies. This enables the creation of services that are context-aware,
and hence, easily customisable and personalisable.
The context Grid service creates a general framework for the gathering, storage
and management of context information as well as an infrastructure for the creation
and deployment of CAS offerings to end users. The context service is implemented
through a host of services. The context management service ensures the efficient
gathering, storage, transport and timely use of context information inside the Grid.
Through interaction with the context information management service, the OGSA
services become context-aware and hence their context can be used to make them
easily customisable and personalisable. CAS management is concerned with the
definition, deployment and operation of CAS by the Grid. It uses the context
management service and other OGSA services to enable the Grid to offer CAS to end
users, thus increasing the scope of the services that the Grid can offer.
4.1 Context Management Service
The context management service uses the context gathering and publishing service,
the context retrieval service and the context storage service. Context information is
obtained from a wide plethora of applications, services and sensors (collectively
called context sources) spread all over the network. The job of the context gathering
service is to collect this information and put it into a common model understood and
accessible by all components of the context service. This highly distributed
characteristic introduces a great challenge for the manageability of all this
information. Hence there is a need for a common context information model and a
context publishing protocol. The context is then stored in a context information base
for access by context consumers through the context retrieval service. The
relationship between the context sources and consumers are shown in Fig. 1. below.

170

K. Jean, A. Galis, and A. Tan

Context
sources

Context
consumers

Context
Gathering/
Publishing
Service

Context
Retrieval
Service

Context
Information Base

OGSA
services
Contextaware
services

Policy
service

Fig. 1. Relationship between context sources and context consumers

The interaction between context consumers and context sources could be described
as follows: (1) in a push mechanism, context sources periodically push updated
context information to the context management service. This information is
maintained in a context information base and client inquiries are serviced from a local
store. (2) In a pull mechanism, the context service must explicitly request context
information. It can either make this request on a periodic basis (polling) or when an
application demand arises. A push system collects data ahead of need and thus may
offer better performance. However, it may consume substantial resources transferring
and storing information that is never required. A pull system may use fewer resources
by obtaining only the data that is required. However, this exposes the context service
to inevitable network delays and unavailability.
4.2 Context Information Modelling
A context information model must be defined in order to map context information, for
common gathering, storage and parsing. The context information model must be rich
and flexible enough to accommodate not only the current but also future aspects of
context information. The model should scale well and be based on standards as much
as possible. The context model proposed is based on an entity and relationship
approach. This model is easily translated into an object-oriented information model
and fits well into object-oriented programming (OOP). An entity is composed of a set
of intrinsic characteristics or attributes that define the entity itself, plus a set of
relationships with other entities. Context is classified into four main types of entities:
personal context, place context, object context and task context. These main entities
form the base entity classes. Subclasses of these entities are defined and are called
sub-entities. The syntax of both entities and sub-entities are defined in XML.

Context-Aware GRID Services: Issues and Approaches

171

4.3 Context-Aware Management Service
Grid CAS management facilitates the management and provision of CAS by linking
providers of Grid resources to appropriate context information via predefined policies
or agreements. Users are associated with the CAS as a means to exploit those Grid
resources. The CAS management service provides a set of basic service components
for the creation, lifetime management and termination of CAS. They include, as
shown in Fig. 2 below; the CAS creation/destruction service, the CAS registry
service, the subscription service and a policy-based CAS lifetime management
service. For successful operation, these services rely on the context management
service for their context information and other OGSA services especially the policy
and agreements service.
The CAS creation/destruction service deals with the definition of the CAS, their
deployment and their termination. CAS are created by the composition or
customisation of predefined basic services stored in policy format. This composition
mechanism is driven by a creation policy. The subscription/customisation service
deals with customer subscription and service customisation. The CAS registry service
keeps a directory of all the CAS that have been defined by the Grid context service.
The policy-based service lifetime management manages the services as they operate.
It provides the extensibility, easy management and operability that CAS require to be
functional and efficient.
The Grid context service makes great use of the OGSA policy and agreement
services. As stated earlier, policies are used to specify the requirements for creation
and management of CAS. These policies may contain information that describes how
to create and manage the CAS as well as how these services respond to changes in
context and how they behave under specific conditions. A policy-based manager is
used for service management while basic CAS are stored in policy format. Policy
decision and enforcement points are also implemented. Hence, the context Grid
service can be implemented using policy-based management to manage the gathering,
publishing, storage and retrieval of context information as well as for the creation and
management of CAS.

Fig. 2. GRID Context-aware Management Services

172

K. Jean, A. Galis, and A. Tan

5 Conclusions and Future Work
Grid technology enables widespread sharing and coordinated use of networked
computing resources. Grids are large, distributed, dynamic and heterogeneous
platforms used for collaborative problem solving. By adding context-awareness to the
Grid infrastructure, we expect to add the extra dimension of easily personalisable and
customisable context-aware OGSA services. Such a Grid can then offer context-aware
end services, which are very relevant today especially with the proliferation of mobile
devices and in context rich situations. This is achieved through the introduction of the
context Grid service.
As future work, protocols must be defined for interactions between the Grid, the
context information management service, the context-aware services management
services and the policy service. Further work must also be done on policy-based
management of the context service. There is ongoing work on the creation of an
active policy based system for the efficient creation of context-aware services in the
Context project [15]. The results of this initiative are eagerly awaited and will be used
as a guideline to implement context-awareness in the Grid. A proof of concept of the
context Grid service will be provided with the future implementation of a contextaware virtual private Grid. However, there is also a need to investigate alternatives for
context information management architectures and context Grid service implementations.
Acknowledgements. This paper partly describes work in progress in the EU IST
project CONTEXT [15]. The IST programme is partially funded by the Commission
of the European Union.

References
1.
2.
3.
4.
5.
6.

7.

8.
9.

I. Foster, C. Kesselman, “Globus: A MetaComputing Infrastructure Toolkit”, International
Journal of Supercomputer Applications, pp. 115–128, Vol. 11 No. 2, 1997.
F. Berman, G.C. Fox, A. J. G. Hay, “Grid Computing”, Wiley 2003.
I. Foster, C. Kesselman editors, “The Grid: Blueprint for a Future Computing
Infrastructure”, Morgan Kaufman, San Francisco, USA, 1999.
I. Foster, C. Kesselman, and S. Tuecke, “The Anatomy of the Grid, Enabling Scalable
Virtual Organisations”, International Journal of Supercomputer Applications, 2001.
D. B. Skillicorn, “Motivating Computational Grids”, Proceedings of the Second
IEEE/ACM International Symposium on Cluster Computing and the Grid, IEEE 2002.
I. Foster, D. Gannon, H. Kishimoto, editors, “The Open Grid Services Architecture
Version 0.13a”,
https://forge.gridforum.org/projects/ogsa-wg/docman, Nov. 2003.
S. Tuecke et al, “Open Grid Services Infrastructure (OGSI) Version 1.0”, Global Grid
Forum Draft Recommendation, June 2003
http://www.globus.org/research/papers.html.
Global Grid Forum Web Page: http://www.gridforum.org.
EU DataGrid Project Web Page: http://www.eu-datagrid.org.

Context-Aware GRID Services: Issues and Approaches

173

10. J. Frey et al, “Condor-G: A Computational Management Agent for Multi-Institutional
Grids”, Proceedings of the Tenth IEEE Symposium on High Performance Distributed
Computing (HPDC10), San Francisco, USA, 2001.
11. K. Yang, A. Galis, and C. Todd, “A Policy-Based Active Grid Management Architecture”,
Proceedings of the Tenth IEEE International Conference on Networks (ICON02), pp. 243248, IEEE, Singapore, 2002.
12. A. Galis, J. P. Gelas, L. Lefèvre, and Y. Yang, “ Programmable Network Approach to Grid
Management and Services”, International Conference on Computational Science 2003,
LNCS 2658, pages 1103-1113, Melbourne, Australia, June 2003,
www.science.uva.nl/events/ICCS2003/.
13. Gregory D. Abowd et al, “Context-Awareness in Wearable and Ubiquitous Computing”,
First International Symposium on Wearable Computers, pp. 179-180, 1997.
14. P. Gray and D. Salber, “Modelling and Using Sensed Context Information in the Design
of Interactive Applications”, Proceedings of the Eighth IFIP Working Conference on
Engineering for Human-Computer Interaction (EHCI'01), Toronto, Canada, May 2001.
15. CONTEXT Project website, http://context.upc.es.

