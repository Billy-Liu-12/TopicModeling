An Interval Lattice Model for Grid Resource Searching
Wen Zhou1, Zongtian Liu1, and Yan Zhao2
1
2

School of Computer Engineering and Science, Shanghai University,
Sydney Institute of Language and Commerce, Shanghai University,
Shanghai, P.R. China, 200072
{zhouwen, ztliu, zhaoyan87}@shu.edu.cn

Abstract. In practice the information mostly expressed in interval form. Formal
Concept Analysis can not deal with the interval information. So the research on
interval lattice is an important task. In the paper, an interval lattice model is
proposed. Then a Grid resource matching algorithm through the interval lattice
is presented. In the end of the paper, experimental results show that the
construction algorithm has reasonable performance on the complexity.
Keywords: interval concept lattice, interval FCA, Grid resource searching.

1 Introduction
Formal Concept Analysis (FCA) is a data analysis technique based on the ordered lattice
theory firstly introduced by Wille [1]. It defines formal contexts to represent relations
between objects and attributes and interprets the corresponding concept lattice.
To deal with the uncertain and vague information in practice, the interval analysis
may be a better method. There are many researchers study in interval number such as
[2-5]. Burusco et al introduce the interval valued fuzzy data from the view of FCA
who produce a model of L-fuzzy concept theory to deal with interval valued fuzzy
data from the point of view of FCA at the first time [6]. It uses some results of
multisets and expertons and requires a complete chain to conduct the interval value
within [0, 1] to form the super-sub relation between two concepts to form lattice.
Scaling [7] is used to generate concept lattice of the formal context with nominal
attributes. Inspired by which, interval scaling is proposed to process interval attribute.
Then, based on the interval lattice to manage the resource in Grid, a Grid resource
matching algorithm is introduced. The rest of the paper is organized as follows.
Section 2 introduces Interval Formal Concept Analysis Model. Section 3 presents the
scale algorithm. Section 4 discusses the resource matching algorithms, the experiment
is in Section 5 and section 6 concludes.

2 An Interval Formal Concept Analysis Model
This section produce the Interval Formal Concept Analysis (IFCA) whose core data
structure is interval lattice, which incorporates attribute decomposing based interval
attribute scaling to make FCA has the capacity of representing interval information.
Y. Shi et al. (Eds.): ICCS 2007, Part II, LNCS 4488, pp. 689–695, 2007.
© Springer-Verlag Berlin Heidelberg 2007

690

W. Zhou, Z. Liu, and Y. Zhao

An interval [a, b] is the set of all real numbers {x: a≤x≤b}. A natural definition of
arithmetic for intervals, represented as pairs of real numbers[8]. The interval [a, b]
with a=b is called degenerate interval which degenerate to a real number a. interval
decomposition denoted as . There are two rules in decomposition process:

⊙

1.
2.

The degenerate intervals do not participate in the decomposition process.
The decomposition process does not generate degenerate intervals.

Firstly the two intervals decomposition process is analyzed. Both [a1,b1] and [a2,b2]
are not degenerate intervals. Without missing the generality, we assume a1≤a2.

⊙[a ,b ] = I ,I ,I =[a ,a ∧b ], [a ,(a ∨b )∧b ],[(a ∨b )∧b , b ∨b ] (1)
If the interval I =[a ,a ] (i=1,2,3) with a ＝a ( a and a are the lower bound and

[a1,b1]

2

2

1 2 3
-

1

2

1

2

+

2

-

1

+

2

-

2

1

2

1

2

+

i

the upper bound of Ii respectively), it does not satisfy rule 2, and will be deleted from
the result. There exists eight conditions of [a1, b1] and [a1, b2] as show in Table 1.
Table 1. The decomposition condition table of two intervals

Type
1

Condition
[a1, b1]
B1 - [a1,b1]

⊙[a , b ]
2

2

Example

⊙[2,5]= [2,5]
[2,8]⊙[2,12]=[2,8],[8,12]
[2,8]⊙[2,5]=[2,5],[5,8]
[2,6]⊙[3,6]=[2,3],[3,6]
[2,4]⊙[4,6]=[2,4],[4,6]
[2,3]⊙[4,6]=[2,3],[4,6]
[2,5]⊙[4,7]=[2,4],[4,5],[5,7]
[2,11]⊙[5,9]=[2,5],[5,9],[9,11]
[2,5]

2

A1 B2 C3 [a1,b1],[b1, b2]

3
4
5
6
7
8

B3 B1 C3
C1
A2 B2 C2
C3
B3 -

[a1, b2],[b2, b1]
[a1, a2],[a2,b2]
[a1,b1], [a2,b2]
[a1,b1],[a2,b2]
[a1, a2],[a2, b1],[b1, b2]
[a1, a2],[a2,b2],[b2, b1]

The condition A1 and A2 denote a1=a2, a1<a2 respectively, B1, B2 and B3 denote
b1=b2, b1<b2, and b1>b2, and C1, C2, C3 denote b1=a2, b1<a2 and b1>a2 respectively.
The information table (G, M, R) (the relation of R (g, m) ((g G, m M) has the
value of u (g, m)) can be represented as a cross-table shown in Table 2. The
information table has three objects representing three Grid resources, namely C1, C2
and C3. In addition, it also has three attributes, "CPU capacity" (A), "Memory Size"
(B), "Resource Price" (C) and “Working Time” (D) representing four properties of the
Grid resource. The relation between an object and an attribute is represented by a
membership value expressed by interval.

∈

∈

Table 2. Information table of interval

C1
C2
C3

A
[0-2.8]
[0-8.8]
[0-1.4]

B
[0-512]
[0-256]
[0-1024]

C
[200-10000]
[300-10000]
[500-10000]

D
[9-12]
[20-24]
[5-11]

An Interval Lattice Model for Grid Resource Searching

691

Interval attribute decomposition is for m ( m ∈ M ), the intervals u (g, m) of R (g,
m) in (G, M, R) is decomposed as Wm. The information table can be transfer to
interval context by interval attribute scaling.
Definition 1: An interval attribute scaling. After interval attribute decomposition
the information table (G, M, R) is extended to (G, M, (Wm)m M, R, I), each Wm is a set
M, g
G ),
of decomposed intervals of μ ( g , m) for the attribute m (m

∈

∈

∈

( g , m, w) ∈ I if and only if there exists w ⊆ μ ( g , m) ( w ∈ Wm , μ ( g , m) is the value of
R(g, m) of information table (G, M, R)).

Definition 2: Interval formal context. It is a tuple Κ:=(G, M , (Wm ) m∈M , I ) where G is a
set of objects, M a set of attributes, and I ⊆ G ×{(m, w) | m ∈ M , w ∈Wm} , a relation
with ( g , m, w1 ) ∈ I , ( g , m, w2 ) ∈ I ⇒ w1 = w2 . ( g , m, w) ∈ I is read “object g has value
w for attribute m”.
The interval formal context is as shown in Table 3 which is obtained from Table 2 by
interval attributer scaling after attribute decomposition.
Table 3. Interval formal context

M
A
W A1 a2
C1 1 1
C2 1 1
C3 1 0

a3
0
1
0

B
b1 b2 b3
1 1 0
1 0 0
1 1 1

c1
1
0
0

C
c2
1
1
0

D
c3 d 1 d 2 d 3 d 4
1 0 1 1 0
1 0 0 0 1
1 1 1 0 0

Definition 3: for A ⊆ G , there are two mapping:

A′ := {w ∈ Wm ∀g ∈ A, m ∈ M , ( g , m, w) ∈ I }

B′ := {g ∈ G ∀w ∈ Wm , m ∈ B, ( g , m, w) ∈ I }

Definition 4: Interval formal concept. C (A, B) is called an interval formal
concept of K := ( G , M ,W , I ) if and if only A ⊆ G , B ( M B , WB ) , M B ⊆ M ,

Wm ( B ) = {∪wm wm ∈ B} , A′ = B and B′ = A , A and B are called the extent and

intent of C respectively.
Definition 5: Interval lattice. The concepts of a given context are naturally ordered
by the partial relation defined by C1 ( A1 , B1 ) ≤ C2 ( A2 , B2 ) :⇔ A1 ⊆ A2 ⇔ Wm( B2 ) ⊆ Wm( B1 )
( Wm ∈ B2 ). The ordered set of all interval formal concepts of Κ :=(G , M , W , I ) is
denoted by B (G , M , W , I ) , and is called the interval concept lattice of (G , M , W , I ) .
Without ambiguousness, the interval concept lattice is called concept lattice or lattice.

692

W. Zhou, Z. Liu, and Y. Zhao

3 The Interval Lattice Construction Principle
The attribute decomposition is the base of attribute scale to form the interval context
after the attribute decomposition. The attribute decomposition algorithm is extended
from the two interval decomposition according to the definition equation (1).
According to the results in Table 1, the decomposition process of two intervals is
shown in Table 4. Attribute decomposition of the context is based on the method of
two-interval-decomposition.
Table 4. The two interval decomposition following the condition in Table 1

1

[a1,b1]

Wm

Return
r2
r1
[a1,b1]
-

2
3

[a1,b1], [b1, b2]
[a1, b2],[ b2, b1]

Wm=Wm+[a1,b1]
Wm

4

[a1, a2],[a2,b2]

5

Type

Wm

[a1, b1]Ĵ[a2, b2]

Return
Flag
No.
1

true

[b1,b2]
[a1,b2] [b2,b1]

1
2

true
true

Wm=Wm+[a1,a2]

[a2,b2]

-

1

true

[a1,b1], [a2,b2]

Wm=Wm+[a1,b1]

[a2,b2]

-

1

false

6

[a1,b1] ,[a2,b2]

Wm=Wm+[a1,b1]

[a2,b2]

-

1

false

7

[a1, a2],[ a2, b1],[ b1, b2] Wm=Wm+[a1,a2]

[a2,b1] [b1,b2]

2

true

8

[a1, a2], [a2,b2],[b2, b1]

Wm= Wm+[a1,a2] [a2,b2] [b2,b1]

2

true

#5{G , A[0,1.4];
B[0, 256];
C[500,10000]}
# 4{C1C 3, A[0,1.4];
#2{C1C2, A[0,2.8];
B[0, 512];
B[0,256];
C[500,10000];
C[300,10000]}
D[9,11]}
# 3{C 3, A[0,1.4];
B[0,1024];
#0{C1, A[0, 2.8];
C [500,10000];
#1{C 2, A[0,8.8];
B[0,512];
D[5,11]}

C[200,10000];
D[9,12]}

# 6{ , A[0, 8.8];
B[0,1024];
C [200,10000];
D [5,12],[20, 24]}
Fig. 1. The interval lattice

B[0, 256];
C[300,10000];
D[20, 24]}

An Interval Lattice Model for Grid Resource Searching

693

By attribute decomposition, the decomposed attribute set W is obtained. According
to the attribute scale definition the interval context is generated as an example shown
in Table 1. The lattice is generated as Figure 1 from context shown as Table 3.

4 The Resource Searching Algorithm in Grid Environment
In Grid environment, one issue is how to effectively manage the Grid resource.
Another is when a resource request is submitted, how to find out the fitful Gird
resource to satisfy the request. The request is given out in the form of interval set [9].
This is our motivation to propose the interval lattice model and extend the FCA to
IFCA. Using IFCA as the method to solve the two issues, interval lattice as tools to
manage the Grid resource and based on which the task of resource searching
according to the resource request is carried out.
According to the type of the request, we design two algorithms for search fitful
Grid resources. One is bottom-up algorithm which is much quicker for the complex
requests with many attributes than simple ones as shown in Figure 2. The other is topdown algorithm which is quicker for the simple request with few attributes than
complex ones. The judgeRequest algorithm is to judge if a node in lattice match the
request. For the reason of page limit, we only introduce the first method in this paper.
Algorithm: Bottom-up resource searching algorithm:
Input: a request, interval lattice L of Grid resource
Output: matching Grid resource G of the request
Process:
1.match=null; I=null;
2.if (B doesn’t satisfy the request) return match; //judge the bottom node B of L
else {B.flag=true; I.add(B);}
3. while (I.size!=0) //it means there is at least one node in I
{ II=null;
for (each lattice node i in I)
{
for (each i’s parent node j)
{
if (j.flag==null) //j.flag denotes if j satisfy the request.
{
Boolean flag = judgeRequest(request, j);
if (flag = true) {j.flag=true; II.add(j);}
else j.flag=false;
}
else if (j.flag==true) i.flag=false;
else continue;
for (each i in I )
{
Fig. 2. The Bottom-up resource searching algorithm

694

W. Zhou, Z. Liu, and Y. Zhao

if(i.flag=false) continue;
else
for(each i’s parent node j)
{
if (j.flag== true) i.flag=flase;
if (i.flag==ture) match.add(i);
}
}
if (II.size==0) break; //it means there are no nodes in II
else if (II.size==1) //there are just one node in II
if (II.get(0)==TopNode) break;
else I=II;
}
}
4. for (each node i match)
{
If(i.object ∉ G) G.add(I.object);
}
5. return G;

∈

Fig. 2. (Continued)

5 Experiments and Discussion

the size of concept lattice

Adopting the random data as the test data, all the algorithms realized with Java
running on PC (CPU PIV 2.8G, memory 512M) within Windows XP environment. To
improve the reality of the experiments, each of experiments with different parameters
carries on five randomly generated data and take the average values of results of five
times of experiments as the final result.
First, the spatial consuming of incremental lattice construction algorithm are tested.
Figure 3 expresses the spatial complexity. Curve 1 and Curve 2 show the numbers of
lattice nodes changing according to the different number of objects and the different
numbers of attributes respectively. The horizontal ordinate indicates both the numbers
of objects and attribute are respectively {10,20,30,40,50,60}. The vertical ordinate
18000
16000
14000
12000
10000
8000
6000
4000
2000
0
10

20

30

40

50

60

The number of objects/attributes
1.the size of concept lattice according to the number of objects
2.the size of concept lattice according to the number of attributes

Fig. 3. Relations between the size of lattice and the numbers of both objects and attributes

An Interval Lattice Model for Grid Resource Searching

695

indicates size of lattice. With the ascending of object numbers, the size of the lattice
has exponential ascending tendency. The influence of attribute number has very slight
impact on the size of lattice.
The curves confirm the results that the numbers of objects have big influence on
the lattice both in the size and the numbers of attributes haven’t so strong impact on
the result lattice. Fuzzy lattice spatial consuming character is different. In fuzzy FCA
[10], the numbers of objects has slight influence on lattice size, but the attribute
numbers has big impact on it.

6 Conclusion
In this paper, interval lattice (IL) model produced extend FCA to IFCA which can
deal with the real interval values in practice. It is different from the classical FCA.
The future research include appling this interval lattice as the Grid resource
management tools and using the resource searching algorithm as the resource match
tools in the real Grid enviornments to using the real data of Grid environment to
further test the model and algorithms we proposed.

Acknowledgments
The work presented in this paper is supported partially by National Science
Foundation of China (reference number: NSFC 60275022 and NSFC 60575035).

References
1. Wille, R.: Restructuring lattice theory: an approach based on hierarchies of concepts,
Reidel, Dordrecht (1982)
2. Young, R.C.: The algebra of many-valued quantities. Annals of Mathematics 104 (1931)
260-290
3. Markov, S., Okumura, K.: The Contribution of T. Sunaga to Interval Analysis and Reliable
Computing. Kluwer Academic Publishers (1999)
4. Moore, R.E.: Interval analysis. Prentice-Hall Englewood Cliffs, NJ (1966)
5. Fernandez, A.J., Hill, P.M.: An interval lattice-based constraint solving framework for
lattices. 4th International Symposium on Functional and Logic Vol. 1722 (1999) 194-208
6. Burusco, A., Fuentes-González, R.: The study of the interval-valued contexts. Fuzzy Sets
and Systems 121 (2001) 439-452
7. Prediger, S., Stumme, G.: Theory-driven logical scaling. International Workshop on
Description Logics, Vol. 22 (1999)
8. Moore, R.E., Bierbaum, F.: Methods and Applications of Interval Analysis. Soc for
Industrial & Applied Math (1979)
9. Buyya, R.: Economic-based Distributed Resource Management and Scheduling for Grid
Computing. Vol. Ph.D.. Monash University Australia (2002)
10. Qiang, Y., Liu, Z.T., al., e.: Research on fuzzy concept lattice in knowledge discovery and
a construction algorithm. Acta Electronica Sinica 33 (2005) 350~353

