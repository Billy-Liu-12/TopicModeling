Lagrangean Heuristic for Anycast Flow Assignment in
Connection-Oriented Networks
Krzysztof Walkowiak
Chair of Systems and Computer Networks, Faculty of Electronics,
Wroclaw University of Technology, Wybrzeze Wyspianskiego 27, 50-370 Wroclaw, Poland
Krzysztof.Walkowiak@pwr.wroc.pl

Abstract. In this work we address the problem of anycast flow assignment.
Anycast is a one-to-one-of-many delivery technique that allows a client to
choose a content server of a set of replicated servers. We formulate an optimization problem of anycast flows assignment in a connection-oriented network,
which is 0/1 and NP-complete. Thus, we propose a new effective heuristic algorithm based on Lagrangean relaxation technique. To our best survey, this is the
first study that applies the Lagrangean relaxation to anycast flow problem. We
evaluate the performance of the proposed scheme by making a comparison with
its counterpart using a sample network topology and different scenarios of traffic demand patterns and replica location. Obtained results show advantage of
the Lagrangean heuristic over a previously proposed algorithm.

1 Introduction
The influence of the Internet can be noticed in many areas of people’s life, and in the
future its importance will grow. Currently, most of transmissions issued in the Internet are unicast – two individual systems connect one-to-one to exchange data. However, new approaches are developed to overcome problems now being encountered in
computer networks, e.g. network latency, congestion, growing costs. One of the most
interesting approaches that can facilitate the development of new services in the
Internet and enable QoS (Quality of Service) guarantees is the anycast paradigm.
Anycast is a one-to-one-of-many technique to deliver a packet to one of many hosts.
Significance of anycast transmission will grow with popularity of the Internet and
development of new services, e.g. distribution of electronic music, movies, books.
One of the most famous technologies that applies anycast traffic is Content Delivery
Network (CDN). CDN uses many content servers offering the same content replicated
in various locations. User-perceived latency and the other QoS parameters can be
easily and inexpensively improved by the CDN.
In this work we concentrate on problems of CDN design in MPLS (Multiprotocol
Label Switching) environment. The MPLS proposed by the Internet Engineering Task
Force (IETF) in [8] is a networking technology that enables traffic engineering and
QoS performance for carrier networks. MPLS is a connection-oriented (c-o) technique
and is widely applied in backbone networks. Thus, MPLS should be addressed in
designing of CDNs. The considered problem can be formulated as follows:
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 626 – 633, 2006.
© Springer-Verlag Berlin Heidelberg 2006

Lagrangean Heuristic for Anycast Flow Assignment in Connection-Oriented Networks

Given
Minimize
Over
Subject to

627

network topology, traffic demand pattern, location of replica servers,
link capacity
network delay
selection of replica server, routing (path assignment)
connection-oriented flow constraints, capacity constraints

The considered problem was formulated and solved in [9]. In this paper we propose a Lagrangean relaxation method combined with subgradient optimization to
iteratively solve the problem by a heuristic algorithm ANBFD [9] using as initial
solutions results given solving dual problems. Lagrangean relaxation with subgradient
optimization has been used successfully for solving various communication network
routing problems [3], [7]. Our starting point is the algorithm proposed in [3]. However, we modified this approach according to anycast flow constraints.
Due to limited size of the paper we cannot present more information on anycast
flow, CDN and networks optimization. For more information refer to [1], [4-6], [7-9].

2 Anycast Flow Assignment Problem
Since we consider a connection-oriented network, we model the network flow as nonbifurcated multicommodity flow. In c-o networks an anycast demand must consist of
two connections: one from the client to the server (upstream) and the second one in
the opposite direction (downstream). Upstream connection is used to send user’s
requests. Downstream connection carries requested data. Consequently, each anycast
demand is defined by a following triple: client node, upstream bandwidth requirement
and downstream bandwidth requirement. In contrast, a unicast demand is defined by a
following triple: origin node, destination node and bandwidth requirement. To establish a unicast demand a path satisfying requested bandwidth and connecting origin
and destination nodes must be calculated. Optimization of anycast demands is more
complex. The first step is the server selection process. Next, when the server node is
selected, both paths: upstream and downstream can be calculated analogously to unicast approach. However, the main constraint is that both connections associated with
a particular anycast demand must connect the same pair of network nodes.
To mathematically represent the problem, we introduce the following notations:
V
A
P

set of n vertices representing the network nodes.
set of m arcs representing network directed links.
set of q connections in the network. A connection can be of two types: downstream or upstream.

Πp

the index set of candidate routes (paths) π kp for connection p. For upstream
connection paths are between client node and a node hosting a content server.
Analogously, downstream candidate paths connect a server and a client node.

Xr

set of route selection variables x kp , which are equal to one. Xr determines the

unique set of currently selected routes.
ca
capacity of arc a.
Qp
bandwidth requirement of connection p.
τ (p) index of the connection associated with connection p. If p is a downstream
connection τ (p) must be an upstream connection and vice versa.

628
k
δ pa

K. Walkowiak

binary variable, which is 1 if arc a belongs to route π kp and is 0 otherwise.

o(π) origin node of route π.
d(π) destination node of route π.
T
total arrive rate of messages in the network
The anycast non-bifurcated flow assignment (AFA1) problem is as follows

1
f ar
∑
T a∈A (ca − f ar )

min
Xr

(1)

subject to
k k
∑ δ pa x p Q p

f ar = ∑

a∈P k ∈Π p

(2)

k
∑ xp =1

∀p ∈ P

(3)

0 ≤ f ar ≤ ca

∀a ∈ A

(4)

k∈Π p

∑ x kp d (π kp ) =

k∈Π p

∀a ∈ A

∑

k ∈Πτ ( p )

x kp ∈ {0,1}

xτk( p ) o(πτk( p ) )

∀p ∈ P; k ∈ Π p

⎛
⎞
⎜
⎟
Xr = ⎜ ∪
x kp ⎟
⎜ p , k :x kp =1
⎟
⎝
⎠

{ }

∀p ∈ P

(5)

(6)

(7)

Variable r denotes the index of set Xr including information on currently selected
routes given by variables x equal to 1. The goal is to minimize the network delay [2],
[7]. Condition (3) states that each connection can use only one route. (4) is a capacity
constraint. Equation (5) guarantees that two routes associated with the same anycast
demand connect the same pair of nodes. Constraint (6) ensures that decision variables
are binary ones. Note that the constraints set doesn’t include a constraint guaranteeing
that upstream (downstream) connection ends (starts) in a node with a replica server.
This follows from the construct of set Π p that contains only feasible candidate
routes, i.e. each route connects the client node and a replica node. The AFA problem
given by (1-7) is NP-complete. This follows from the fact that the unicast nonbifurcated flow assignment is NP-complete [8]. AFA is 0/1 optimization problem.
Complexity of AFA problem is a result of huge solution space.
Accordingly to [3] we transform the AFA1 problem into an equivalent formulation
called AFA2, which is better suited for a Lagrangean relaxation procedure. Since the
objective function (1) is not decreasing with fa, we can replace equality (2) with an
inequality leading to the following problem

Lagrangean Heuristic for Anycast Flow Assignment in Connection-Oriented Networks

ϖ = min
Xr

1
f ar
∑
T a∈A (ca − f ar )

629

(8)

subject to (3-7) and
∑

k k
∑ δ pa x p Q p ≤ f a

p∈P k∈Π p

∀a ∈ A

(9)

3 Lagrangean Relaxation
The major idea of the Lagrangean Relaxation (LR) decomposition algorithm is to
consider the dual problem of by relaxing constraints to obtain a simpler subproblem
iteratively to drive towards the optimal solution of the original problem. Therefore, a
suitable constraint set is chosen to be relaxed. In our case we use the approach proposed in [3] and relax the constraint (9) using a vector of positive Lagrangean multipliers λa, a∈A. Consequently, the following Lagrangean relaxation of problem AFA2,
called LR_AFA is formulated as

ϕ (λ ) = min

(

1
f ar
k k
+ ∑ λa ( ∑ ∑ δ pa
x p Q p − f ar )
∑
T a∈ A (ca − f ar ) a∈ A
p∈P k ∈Π p

(10)

subject to (3-6).
The set of feasible solutions for the problem AFA is a subset of the set of feasible
solutions for the Lagrangean relaxation of AFA. Since we assume that
0 ≤ λa

∀a ∈ A

(11)

in any feasible solution of AFA, the term ∑ λa ( ∑
a∈ A

k k
∑ δ pa x p Q p − f ar ) is non-

p∈P k ∈Π p

positive and thus, the value of the objective function (10) never exceeds the value
of the objective function in problem AFA. Thus, accordingly to Lagrangean relaxation theory, whenever problem AFA has a feasible solution, ϕ (λ ) ≤ ϖ . Consequently, for each vector of multipliers λ, ϕ(λ) is a lower bound of delay function.
The best lower bound can be obtained for the vector of multipliers λ* for which

ϕ (λ* ) = max ϕ (λ ) .
λ
The objective function of Lagrangean problem can be rewritten as

ϕ (λ ) = min

⎫⎪
⎫ ⎧⎪
⎧1
f ar
k k
− λa f ar ⎬ + ⎨ ∑ λa ( ∑ ∑ δ pa
x pQ p )⎬
⎨ ∑
p∈P k ∈Π p
⎪⎭
⎭ ⎪⎩a∈ A
⎩ T a∈ A (ca − f ar )

(12)

Since there are no coupling constraints between variables fa and variables x kp , the
considered problem can be divided into two independent subproblems:

630

K. Walkowiak

Subproblem 1

⎧1
⎫
f ar
− λa f ar ⎬
⎨ ∑
(
−
)
T
c
f
ar
⎩ a∈ A a
⎭

(13)

⎧⎪
⎫⎪
k k
⎨ ∑ λa ( ∑ ∑ δ pa x p Q p )⎬
p∈P k ∈Π p
⎪⎩a∈ A
⎪⎭

(14)

ϕ1 (λ ) = min
subject to (4).
Subproblem 2

ϕ 2 (λ ) = min

subject to (3) and (5-6).
According to formulation of objective function we can separate subproblem 1 into
m=|A| subproblems and each of such subproblems is solved by
⎧⎪(c − ca /(T ⋅ λa )
f ar = ⎨ a
⎪⎩
0

when
λa > 1 /(T ⋅ ca )
otherwise

(15)

Subproblem 2 can be separated into q=|P| subproblems, one for each connection
⎧⎪
⎫
k k⎪
⎨ ∑ x pα p ⎬
⎪⎩k∈Π p
⎪⎭

ϕ 2p = min

(16)

subject to (3), (5-6) and

α kp

=

k
∑ λa δ pa Q p

a∈A

(17)

α kp denotes the length of route k∈Πp. The minimum for each connection p is attained
when for the shortest route calculated under a metric λaQp. It means that the subproblem 2 consists of a number of shortest path problems. Comparing to the unicast version of considered problem addressed in [3], in the anycast flow problem to find a
shortest path we must take into account all content servers. Another modification is
the coupling between upstream and downstream connections given by (5). Therefore,
upstream and downstream connections must be processed jointly. Consequently, for
each pair of connections we calculate a shortest path using Dijkstra under the metric
λaQp to each of content servers. Next, we select a pair of paths that satisfy constraint
(5) and have the smallest sum of lengths. Such a procedure guarantees optimal solution of subproblem 2. If the set of candidate routes includes only a subset of all possible routes, we must find a pair of routes for which length is the smallest.

4 Subgradient Search
Given multiplier’s vector λ we can solve the Lagrangean relaxation problem by solving two subproblems as presented above. Let

x kp (λ ) and far(λ) be an optimal solution

Lagrangean Heuristic for Anycast Flow Assignment in Connection-Oriented Networks

631

of Lagrangean relaxation for a fixed vector of multipliers λ. The corresponding subgradient of the dual function (10) at λ is given by

γ a (λ ) = ( ∑

k k
∑ δ pa x p (λ )Q p ) − f ar (λ )

p∈P k ∈Π p

∀a ∈ A

(18)

The multipliers are updated as follows

λia+1 = max(1, λia + tiγ ai )

∀a ∈ A

(19)

The step-size, tk, can be given as [3], [7]
ti = ρ (ϕ − ϕ (λi )) / γ i

2

(20)

ϕ denotes un upper bound on the dual function, which can be calculated using a
heuristic algorithm that can find a feasible solution of the primal problem. Note that ρ
is commonly used in the range 0≤ρ≤2 [7].
Lagrangean Relaxation Heuristic (LRH) Algorithm
Step 0. Select an initial λ0, Set ρ:=2, ρmaxiter=5, ρmin:=0.005, imax=100,.i:=0, ρiter:=0,
ϖbest:=∝, λ*:=λ0. Using a heuristic, compute an overestimate ϕ of φ(λ*) or set ϕ to
an arbitrary large value.
Step 1. Set i:=i+1, ρiter:=ρiter+1. Given λi, solve the LR_AFA as decoupled subproblems to obtain φ(λi), xi, fi.
Step 2a. If (φ(λi)>φ(λ*)) then λ*:=λi and ρiter:=-1.
Step 2b. Use xi, fi to compute feasible primal objective ϖ of the problem AFA2 using
best
.
ANBFD[9] algorithm. If ϖ<ϖbest then ϖbest:=ϖ, xbest:=xi, fbest:=fi, ϕ := ϖ
Step 2c. If (ρiter>ρmaxiter) then ρ:=max{ρ/2,ρmin} and ρiter:=0.
Step 3. Use decoupled solutions xi, fi to compute: subgradient γi(λi) (refer to (18));
step size ti (refer to (19)); multipliers λi+1 (refer to (20)).
Step 4. If i>imax, stop. Otherwise go to 1.

5 Results
We now describe our simulation setup and scenarios. Algorithms LRH and ANBFD
were coded in C++. Next, we run a number of tests to evaluate effectiveness of this
algorithm for various simulation scenarios. The network on which we conduct our
experiment consists of 36 nodes and 144 directed links [9]. We run experiments for
various scenarios of replica location and number of replicas. According to observations of real networks and user behavior, more data is received by clients then is sent
to replicas Therefore, we assume that upstream bandwidth is 0.1 of the downstream
bandwidth. The total demand is calculated as a sum of all downstream and all upstream bandwidth requirements. We assume that there are 10 anycast demands for
each node in the network. Therefore, the total number of anycast demands is
10n=360. Bandwidth requirements of demands are generated randomly.

632

K. Walkowiak

Percentage Difference

1.40%

(5,9,23,30)
(5,9,23,27)
(5,7,25,30)
(9,14,23,30)
(5,7,23,30)

1.20%
1.00%
0.80%
0.60%
0.40%
0.20%
0.00%
3900

5400

6900

8400
9900
Total Demand

11400

12900

Fig. 1. Percentage difference between LRH and ANBFD for various replica location

In Table 1 we present results of algorithms LRH and ANBFD for the following
four locations of replica servers: (5,23), (5,23,30), and (5,9,23,30). Fig. 1 shows the
percentage difference in results of LRH and ANBFD obtained for various location of
4 replicas. If we compare LRH against ANBFD, we can notice that for relatively low
loads both algorithms perform similarly. However, when the volume of all connections increases, LRH yields better results than ANBFD. This follows from the fact
that LRH can search larger solution space, while ANBFD have a tendency of quick
convergence to local minimum and does not have mechanisms to enlarge the number
of tested combinations. Another, quite obvious, observation is that increasing the
number of replicas decreases the network delay. In addition, if there are more replicas
in the network, demands with higher bandwidth requirements can be satisfied.
Table 1. Performance of LRH and ANBFD for various replica location and demands
Total
Demand
3933
4781
6125
6956
8359
9351
10400
11708
12588
13332

(5,23)
ANBFD
LRH
2.4320
2.4320
2.8480
2.8480
4.1142
4.1033
6.0474
6.0474

(5,23,30)
ANBFD
LRH
1.8383
1.8380
1.9786
1.9775
2.3472
2.3458
2.6890
2.6864
3.3583
3.3503
4.1990
4.1854
6.0389
6.0248
20.9596
20.7720

(5,9,23,30)
ANBFD
LRH
1.3240
1.3240
1.4140
1.4139
1.5582
1.5582
1.6384
1.6384
1.8801
1.8801
2.1807
2.1793
2.5018
2.5013
3.1085
3.0891
3.6577
3.6331
4.2587
4.2319

In Table 2 we report the decision time of both algorithms. Certainly, LRH is much
slower than ANBFD, because in each of 100 iterations LRH must run ANBFD
algorithm. However, execution time of ANBFD is not deterministic – it depends on
situation in the network. Therefore, for (5,23), (5,23,30) and (5,9,23,30) cases, the execution time of LRH is about 94, 85 and 92 times longer than for ANBFD, respectively.

Lagrangean Heuristic for Anycast Flow Assignment in Connection-Oriented Networks

633

Table 2. Average decision time of LRH and ANBFD in seconds
Algorithm
ANBFD
LRH

(5,23)
0.883
83.035

(5,23,30)
1.188
101.369

(5,9,23,30)
0.844
77.680

5 Conclusions
In this paper, we have addressed the anycast flow assignment problem in connectionoriented networks. We have developed a new heuristic algorithm based on the Lagrangean-relaxation method combined with subgradient optimization to iteratively
solve the problem by a heuristic ANBFD proposed in [9]. Based on experimental
results, our conclusion is that LRH outperforms ANBFD, especially for congested
networks. The main overhead of LRH is much higher computational cost. However
the considered problem is offline and consequently the decision time isn’t the most
important criterion in our study.
Acknowledgements. This work was supported by a research project of the Polish
State Committee for Scientific Research carried out in years 2005-2007.

References
1. Awerbuch, B., Brinkmann, A., Scheideler C.: Anycasting in adversarial systems: routing
and admission control. Lecture Notes in Computer Science, LNCS 2719 (2003), 1153-1168
2. Fratta, L., Gerla, M., Kleinrock, L.: The Flow Deviation Method: An Approach to Storeand-Forward Communication Network Design. Networks Vol. 3 (1973), 97–133
3. Gavish, B., Huntler, S.: An Algorithm for Optimal Route Selection in SNA Networks.
IEEE Trans. Commun., Vol. COM-31, 10 (1983), pp. 1154-1160
4. Hao, F., Zegura, E., Ammar, M.: QoS routing for anycast communications: motivation and
an architecture for DiffServ networks. IEEE Communication Magazine, 6 (2002), 48-56
5. Markowski, M., Kasprzak, A.: The web replica allocation and topology assignment problem in wide area networks: algorithms and computational results. Lectures Notes in Computer Science, Vol. 3483 (2005), 772-781
6. Peng, G.: CDN: Content Distribution Network. sunysb.edu/tr/rpe13.ps.gz, (2003)
7. Pióro, M., Medhi, D.: Routing, Flow, and Capacity Design in Communication and Computer Networks. Morgan Kaufman Publishers (2004)
8. Rosen, E., Viswanathan, A., Callon, R.: Multiprotocol Label Switching Architecture. RFC
3031 (2001)
9. Walkowiak, K.: Heuristic Algorithm for Anycast Flow Assignment in Connection-Oriented
Networks. Lectures Notes in Computer Science, Vol. 3516 (2005), 1092-1095

