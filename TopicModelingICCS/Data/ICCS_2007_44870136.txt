Numerical Tests with Gauss-Type Nested
Implicit Runge-Kutta Formulas
Gennady Yu. Kulikov and Sergey K. Shindin
School of Computational and Applied Mathematics, University of the Witwatersrand,
Private Bag 3, Wits 2050, Johannesburg, South Africa
gkulikov@cam.wits.ac.za, sshindin@cam.wits.ac.za

Abstract. In this paper we conduct a detailed numerical analysis of the
Gauss-type Nested Implicit Runge-Kutta formulas of order 4, introduced
by Kulikov and Shindin in [4]. These methods possess many important
practical properties such as high order, good stability, symmetry and so
on. They are also conjugate to a symplectic method of order 6 at least. All
of these make them eﬃcient for solving many nonstiﬀ and stiﬀ ordinary
diﬀerential equations (including Hamiltonian and reversible systems). On
the other hand, Nested Implicit Runge-Kutta formulas have only explicit
internal stages, in the sense that they are easily reduced to a single equation of the same dimension as the source problem. This means that such
Runge-Kutta schemes admit a cheap implementation in practice. Here,
we check the above-mentioned properties numerically. Diﬀerent strategies of error estimation are also examined with the purpose of ﬁnding an
eﬀective one.

1

Introduction

In this paper we deal with numerical solution of ordinary diﬀerential equations
(ODE’s) of the form
x (t) = g t, x(t) ,

t ∈ [t0 , tend ],

x(t0 ) = x0

(1)

where x(t) ∈ Rn and g : D ⊂ Rn+1 → Rn is a suﬃciently smooth function.
Problem (1) is assumed to have a unique solution x(t) on the interval [t0 , tend ].
An l-stage Nested Implicit Runge-Kutta (NIRK) formula applied to ODE (1)
reads
x2kj = a2j1 xk + a2j2 xk+1 + τk d2j1 g(tk , xk ) + d2j2 g(tk+1 , xk+1 ) ,

(2a)

xikj = aij1 xk + aij2 xk+1 + τk dij1 g(tk , xk ) + dij2 g(tk+1 , xk+1 )
(2b)

i−1
i−1
dij,m+2 g(ti−1
km , xkm ),

+ τk

i = 3, 4, . . . , l,

j = 1, 2, . . . , i,

m=1

This work was supported in part by the National Research Foundation of South
Africa under grant No. FA2004033000016.
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 136–143, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Numerical Tests with Gauss-Type Nested Implicit Runge-Kutta Formulas

137

l

bi g(tlki , xlki ).

xk+1 = xk + τk

(2c)

i=1

where x0 = x0 , tikj = tk + τk cij and τk is a step size. It is also required that
i+1
aij1 + aij2 = 1 and cij = aij2 + m=1 dijm . We stress that method (2) is an RK
formula and its Butcher tableau is given by
0
c2
c3
c4
..
.

0
d21
d31
d41
..
.

l

dl1

c
1

where

0
0
D3
0
..
.

0
0
0
D4
..
.

···
···
···
···
..
.

0
0
0
0
..
.

0

0
0

0
0

···
···

D
0

0

0

0

···

0

l

0
a2 b T
a3 b T
a4 b T
..
.

0
d22
d32
d42
..
.

l T

ab
bT

dl2

bT

0

(3)

0

⎞
⎛ i ⎞
⎛ i ⎞
di12 · · · di1,i+1
d11
d12
⎟
⎟
⎜ .. . .
⎜
⎜
.
.
i
i
i
.. ⎠ , d1 = ⎝ .. ⎠ , d2 = ⎝ ... ⎟
D =⎝ .
⎠,
.
i
i
i
i
di2 · · · di,i+1
di1
di2
⎛ ⎞
⎛ i ⎞
⎛ i⎞
b1
a12
c1
⎜ .. ⎟
⎜ .. ⎟
⎜ .. ⎟
i
i
a = ⎝ . ⎠, c = ⎝ . ⎠, b = ⎝ . ⎠.
⎛

aii2

cii

bl

It is quite clear that NIRK method (2) is easily reduced to a single equation
of dimension n. This is of great advantage in practice. We refer the reader to
[4] and [6] for more information about the reason to design NIRK formulas.
Our intention here is to examine numerically the Gauss-type NIRK methods
of order 4 introduced in the cited papers. Especially, we are interested to test
adaptive formulas of this type to ﬁnd a proper computational technique for
practical use.
Finally, we want to point out that the ﬁrst research on the topic under discussion was done by van Bokhoven [1], who introduced cheap RK methods termed
Implicit Endpoint Quadrature (IEQ) formulas. It is obvious that NIRK methods
are a particular case of IEQ formulas. Nevertheless, van Bokhoven made some
mistakes in his paper and failed to ﬁnd good practical methods, in the sense of
the properties mentioned above (see [6] for explanation). Thus, we concentrate
here on the NIRK methods designed by Kulikov and Shindin.

2

Adaptive Gauss-Type NIRK Methods

The Gauss-type NIRK methods of orders 2, 4 and 6 have been developed and
investigated theoretically in [4] and [6]. So we intend to discuss diﬀerent error

138

G.Y. Kulikov and S.K. Shindin

estimations which are suitable for the NIRK methods in Section 2. We do our
analysis for the methods of order 4. However, the results obtained can be extended to the Gauss-type NIRK formulas of order 6. Our research covers both
Embedded Methods Approach (EMA) and Richardson Extrapolation Technique
(RET) as well. We will see below that methods (2) admit one more idea for error
estimation, termed Embedded Stages Approach (ESA).
We emphasize that van Bokhoven [1] failed to construct RK schemes with
built-in error estimation which are eﬀective to treat stiﬀ ODE’s (see [6] for
details). Therefore we apply EMA to solve this problem for Gauss-type NIRK
methods of order 4. In other words, we deal with embedded RK formulas of the
form

1 − c21

0
6(c21 + θ) − 5
12
7 − 6(c21 + θ)
12

1

0

0
c21

0
1
2

0
1−θ
2
θ
2
1
2
1
2
1
−
2

0
1−θ
2
θ
2
1
2
1
2
1
−
2

0
6(c21 + θ) − 7
12
5 − 6(c21 + θ)
12
0

(4)

0
1
2

√
where c21 = (3 − 3)/6 and θ is a real free parameter.
We recall that NIRK
√
method (4) is of stage order 3 when θ = 1/2 + 2 3/9 and of stage order 2 otherwise (see [4]). In this paper we are going to examine numerically the following
ﬁve diﬀerent error estimations introduced in [6]:
Embedded Methods Error Estimation (EMEE) is taken to be
lek+1 =

τk
g(tk , xk ) − g(t2k1 , x2k1 ) − g(t2k2 , x2k2 ) + g(tk+1 , xk+1 ) .
2

(5)

Estimate (5) is cheap and of order 3. It is based on Trapezoidal Rule. Unfortunately, one of the RK schemes in the embedded pair (4) is not A-stable. Hence,
EMEE can be ineﬃcient for some stiﬀ ODE’s. That is why we oﬀer an improved
error estimation based on Shampine’s idea in the above-cited paper.
Modiﬁed Embedded Methods Error Estimation (MEMEE) uses the formula
˜ k+1 = lek+1
Q1 (τk J)le

(6)

where Q1 (z) = (1 − z/4)3 and J means the Jacobi matrix evaluated at the point
(tk , xk ). The last formula implies that the improved error estimate is obtained by
solving linear system (6). We stress that MEMEE is not expensive in practice
because it means three solutions of linear systems with the coeﬃcient matrix
I − τk J/4. Anyway, the latter matrix is computed and decomposed to advance
a step of method (4) (see [4] and [5] for more detail). Eventually, MEMEE is
suitable for integration of stiﬀ problems (see [6]).

Numerical Tests with Gauss-Type Nested Implicit Runge-Kutta Formulas

139

One more idea of error estimation discovered in the above-mentioned paper
and referred to as Embedded Stages Error Estimation (ESEE) uses the fact that
calculation of stage values is explicit and, hence, very cheap in NIRK
methods.
√
We know that method (4) is of stage order 3 when θ = 1/2 + 2 3/9 .√It is of
stage order 2 for other θ’s. Therefore we choose another θˆ = 1/2 + 2 3/9 to
calculate the stage values of the diﬀerent order. When taking the diﬀerence we
come to the error estimate
ˆ k+1 = τk g(tk , xk ) − g(t2 , x2 ) − g(t2 , x2 ) + g(tk+1 , xk+1 ) .
le
k1
k1
k2
k2
8

(7)

ESEE is of order 3 and used in a stepsize selection algorithm in the usual way.
Again, error estimate (7) can be ineﬃcient to treat stiﬀ ODE’s.
Hopefully, a modiﬁcation is possible to make ESEE suitable for stiﬀ problems. For them, it is recommended to apply Modiﬁed Embedded Stages Error
Estimation (MESEE) presented by the formula
¯ k+1 = τk g(tk , xk ) − g(t2 , x2 ) − g(t2 , x2 ) + g(tk+1 , xk+1 )
Q2 (τ J)le
k1
k1
k2
k2
8

(8)

where Q2 (z) = 1 − z/4. It is not diﬃcult to check that error estimate (8) is
limited for any step size. It is also cheap because of the reasons given above. We
point out that the last formula is superior to error estimation (6) in terms of
CPU time since only one extra solution is implemented in MESEE.
For the sake of completeness, we include Richardson Extrapolation Error Estimation (REEE)
applied to the Gauss-type NIRK method of order 4 when
√
θ = 1/2 + 2 3/9 in our testing below. Details of REEE can be found in [3], for
example. We stress that the NIRK method of order 4 and with REEE showed
suﬃciently good numerical results when applied to the two-dimensional Brusselator with diﬀusion and the periodic boundary conditions. We compared it with
the usual Gauss method of order 4 which uses the same error estimation and
stepsize selection strategy (see [4]).

3

Test Problems

In the experiments below we want to check how our NIRK methods perform for
problems of diﬀerent sorts. We cover Hamiltonian systems and the usual nonstiﬀ
and stiﬀ ODE’s. We also include some ODE’s with known exact solutions in order
to check the quality of numerical solutions obtained. This allows us to exhibit
practical properties of the adaptive NIRK methods introduced in [4] and [6].
We are interested to ﬁnd the methods which compute good numerical solutions
for the minimum CPU time. To implement our plan we take the following test
problems:
The Kepler problem is given by
x1 (t) =

−x1 (t)
x21 (t)

+

3/2
x22 (t)

,

x2 (t) =

−x2 (t)
x21 (t)

+ x22 (t)

3/2

(9)

140

G.Y. Kulikov and S.K. Shindin

√
√
where x1 (0) = 1 − e, x1 (0) = 0, x2 (0) = 0, x2 (0) = 1 + e/ 1 − e and e =
0.2. Problem (9) has two ﬁrst integrals: the total energy H x (t), x(t) and the
angular momentum L x (t), x(t) where x(t) = x1 (t), x2 (t) . Its exact solution
is also well-known. Thus, the Kepler problem is considered to be a good example
of Hamiltonian systems and is often used to test numerical methods suitable for
such sort of problems (see, for instance, [2]).
The simple problem is presented by
1/5

x2 (t) = 10t exp 5 x3 (t) − 1

x1 (t) = 2tx2 (t)x4 (t),
x3 (t) = 2tx4 (t),

x4 (t) = −2t ln x1 (t) ,

x4 (t),

t ∈ [0, 5]

(10a)
(10b)

where x(0) = (1, 1, 1, 1)T . It possesses the exact solution
x1 (t) = exp sin t2 ,

x2 (t) = exp 5 sin t2 ,

x3 (t) = sin t2 + 1,

x4 (t) = cos t2 ,

which will be used to check the quality of numerical solutions obtained in our
experiments.
The restricted three body problem is
x1 (t) + μ2
x1 (t) − μ1
− μ2
,
y1 (t)
y2 (t)
x2 (t)
x2 (t)
− μ2
,
x2 (t) = x2 (t) − 2x1 (t) − μ1
y1 (t)
y2 (t)

x1 (t) = x1 (t) + 2x2 (t) − μ1

y1 (t) = (x1 (t) + μ2 )2 + x22 (t)

3/2

, y2 (t) = (x1 (t) − μ1 )2 + x22 (t)

(11a)
(11b)
3/2

(11c)

where t ∈ [0, T ], T = 17.065216560157962558891, μ1 = 1 − μ2 and μ2 =
0.012277471. The initial values of problem (11) are: x1 (0) = 0.994, x1 (0) = 0,
x2 (0) = 0, x2 (0) = −2.00158510637908252240. Problem (11) has no analytic solution, but it is still useful to gain experience concerning the quality of numerical
solutions because its solution-path is periodic. We can monitor the error at the
end point T to verify the quality.
A pattern of stiﬀ ODE’s is presented by Van der Pol’s equation
x1 (t) = x2 (t),

x2 (x) = μ2

1 − x21 (t) x2 (t) − x1 (t) ,

t ∈ [0, 2]

(12)

where x(0) = (2, 0)T and μ = 1000. Problem (12) is considered to be very stiﬀ.

4

Numerical Experiments

We start this section with numerical experiments on the Kepler problem. We
stress that the standard stepsize selection is not suitable for integration of Hamiltonian and reversible problems because it ruins nice properties of specially designed numerical methods (see Section VIII in [2]).
√ So we just apply the ﬁxedstepsize version of method (4) when θ = 1/2 + 2 3/9 to see how it works for
long time integration of problem (9).

Numerical Tests with Gauss-Type Nested Implicit Runge-Kutta Formulas
x2

−1

1

1.2
0.9
0.6
0.3

−0.5 −0.3
−0.6
−0.9
−1.2

141

0.8

L(x , x)

0.6
0.4

0.5

0.2

x1
−0.2
−0.4

5×104

t

H(x , x)

Fig. 1. The numerical solution of the Kepler problem (the left-hand graph) and its
ﬁrst integrals (the right-hand graph) computed by the ﬁxed-stepsize Gauss-type NIRK
method of order 4

Table 1. The global errors of the adaptive Gauss-type NIRK method of order 4 with
diﬀerent error estimation techniques applied to the simple problem
Error
Tolerance
−1

10
5 · 10−2
10−2
5 · 10−3
10−3
5 · 10−4
10−4
5 · 10−5
10−5

EMEE
3.139 · 10
1.876 · 10+1
1.766 · 10+0
7.694 · 10−1
7.740 · 10−2
2.501 · 10−2
2.051 · 10−3
6.609 · 10−4
7.155 · 10−5
+1

Error Estimation Technique
ESEE
MEMEE
MESEE
1.199 · 10
6.355 · 10+1
1.779 · 10+1
4.566 · 10+0
5.502 · 10−1
2.055 · 10−1
1.731 · 10−2
5.961 · 10−3
4.976 · 10−4
+2

3.646 · 10
1.409 · 10+1
1.575 · 10+0
6.969 · 10−1
7.568 · 10−2
2.582 · 10−2
1.839 · 10−3
6.650 · 10−4
6.533 · 10−5
+1

1.479 · 10
1.557 · 10+2
1.720 · 10+1
4.605 · 10+0
5.624 · 10−1
2.096 · 10−1
1.706 · 10−2
5.944 · 10−3
5.005 · 10−4
+2

REEE
2.534 · 10+2
1.750 · 10+2
2.450 · 10+1
1.183 · 10+1
3.207 · 10+0
1.311 · 10+0
1.547 · 10−1
6.716 · 10−2
1.385 · 10−2

Figure 1 shows the behaviour of the numerical solution and the ﬁrst integrals
calculated by our NIRK method with the step size τk = 0.1 on the interval
[0, 10+5 ]. We observe that this result corresponds well to the exact solution and
the ﬁrst integrals of the Kepler problem (see [2, p. 9]). Thus, method (4) is
suitable for the numerical integration of Hamiltonian and reversible problems in
practice. We recall that the method under discussion is conjugate to a symplectic
method of order 6 at least (see [6]).
Now we come to tests with the adaptive Gauss-type NIRK methods. For that,
we perform a number of numerical
√ integrations of problems (10) and (11) by the
method (4) when θ = 1/2 + 2 3/9 and with the error estimation strategies
mentioned in Section 2. To implement the Gauss-type NIRK method, we apply a modiﬁed Newton iteration with nontrivial predictor, as explained in [4] or
[5]. We perform two iteration steps per each grid point and display the global

142

G.Y. Kulikov and S.K. Shindin

Table 2. CPU time (in sec.) of the adaptive Gauss-type NIRK method of order 4 with
diﬀerent error estimation techniques applied to the simple problem
Error
Tolerance
−1

10
5 · 10−2
10−2
5 · 10−3
10−3
5 · 10−4
10−4
5 · 10−5
10−5

EMEE
0.375 · 10
0.328 · 10+0
0.547 · 10+0
0.579 · 10+0
0.938 · 10+0
1.204 · 10+0
1.844 · 10+0
2.391 · 10+0
3.984 · 10+0
+0

Error Estimation Technique
ESEE
MEMEE
MESEE
0.235 · 10
0.266 · 10+0
0.422 · 10+0
0.437 · 10+0
0.625 · 10+0
0.781 · 10+0
1.328 · 10+0
1.500 · 10+0
2.672 · 10+0
+0

0.328 · 10
0.391 · 10+0
0.531 · 10+0
0.657 · 10+0
1.047 · 10+0
1.219 · 10+0
1.875 · 10+0
2.422 · 10+0
3.985 · 10+0
+0

0.141 · 10
0.235 · 10+0
0.391 · 10+0
0.422 · 10+0
0.609 · 10+0
0.828 · 10+0
1.343 · 10+0
1.687 · 10+0
2.656 · 10+0
+0

REEE
0.328 · 10+0
0.391 · 10+0
0.453 · 10+0
0.469 · 10+0
0.500 · 10+0
0.547 · 10+0
0.672 · 10+0
0.719 · 10+0
1.031 · 10+0

Table 3. The errors evaluated at the point T for the adaptive Gauss-type NIRK
method of order 4 with diﬀerent error estimation techniques applied to the restricted
three body problem
Error
Tolerance
10−1
5 · 10−2
10−2
5 · 10−3
10−3
5 · 10−4
10−4
5 · 10−5
10−5

EMEE
1.988 · 10+0
1.900 · 10+0
9.913 · 10−1
4.124 · 10−1
1.485 · 10−1
7.058 · 10−2
1.092 · 10−2
4.336 · 10−3
5.306 · 10−4

Error Estimation Technique
ESEE
MEMEE
MESEE
8.816 · 10+1
2.163 · 10+0
1.945 · 10+0
1.580 · 10+0
4.496 · 10−1
2.721 · 10−1
5.593 · 10−2
2.471 · 10−2
3.224 · 10−3

1.347 · 10+0
1.813 · 10+0
8.998 · 10−1
6.277 · 10−1
1.695 · 10−1
8.218 · 10−2
1.180 · 10−2
4.610 · 10−3
5.530 · 10−4

3.474 · 10+0
1.823 · 10+0
1.898 · 10+0
1.536 · 10+0
4.768 · 10−1
2.955 · 10−1
5.825 · 10−2
2.557 · 10−2
3.282 · 10−3

REEE
1.832 · 10+0
1.915 · 10+0
1.435 · 10+0
1.330 · 10+0
8.324 · 10−1
1.821 · 10−1
3.470 · 10−2
4.986 · 10−3
1.925 · 10−3

errors calculated by the exact solutions of these test problems in the sup-norm in
Tables 1 and 3. The CPU time of these integrations is shown in Tables 2 and 4,
respectively. The CPU time for numerical solutions of Van der Pol’s equation is
presented in Table 5.
Tables 1–5 show clearly that ESEE and MESEE produce numerical solutions
of good quality for less CPU time. Certainly, REEE works faster when applied
to problems of small size because this estimate is of order 5. The remaining
estimates are of order 3. On the other hand, REEE is very expensive for largescale problems (see Table 1 in [6]). In conclusion, we consider that the error
estimation based on ESA is quite promising and deserves further study. We
intend to develop such error estimation techniques for the Gauss-type NIRK
method of order 6. In future it is also planned to supply our NIRK schemes with
a facility to provide Automatic Global Error Control.

Numerical Tests with Gauss-Type Nested Implicit Runge-Kutta Formulas

143

Table 4. CPU time (in sec.) of the adaptive Gauss-type NIRK method of order 4 with
diﬀerent error estimation techniques applied to the restricted three body problem
Error
Tolerance
−1

10
5 · 10−2
10−2
5 · 10−3
10−3
5 · 10−4
10−4
5 · 10−5
10−5

EMEE
0.156 · 10
0.140 · 10+0
0.204 · 10+0
0.266 · 10+0
0.359 · 10+0
0.468 · 10+0
0.672 · 10+0
0.797 · 10+0
1.250 · 10+0
+0

Error Estimation Technique
ESEE
MEMEE
MESEE
0.062 · 10
0.125 · 10+0
0.125 · 10+0
0.156 · 10+0
0.235 · 10+0
0.312 · 10+0
0.484 · 10+0
0.531 · 10+0
0.906 · 10+0
+0

0.094 · 10
0.125 · 10+0
0.203 · 10+0
0.219 · 10+0
0.391 · 10+0
0.453 · 10+0
0.657 · 10+0
0.813 · 10+0
1.266 · 10+0
+0

0.047 · 10
0.078 · 10+0
0.109 · 10+0
0.156 · 10+0
0.250 · 10+0
0.328 · 10+0
0.515 · 10+0
0.625 · 10+0
0.891 · 10+0
+0

REEE
0.187 · 10+0
0.235 · 10+0
0.281 · 10+0
0.281 · 10+0
0.360 · 10+0
0.375 · 10+0
0.438 · 10+0
0.532 · 10+0
0.703 · 10+0

Table 5. CPU time (in sec.) of the adaptive Gauss-type NIRK method of order 4 with
diﬀerent error estimation techniques applied to Van der Pol’s equation
Error
Tolerance
−1

10
5 · 10−2
10−2
5 · 10−3
10−3
5 · 10−4
10−4
5 · 10−5
10−5

EMEE
3.219 · 10
3.703 · 10+0
5.516 · 10+0
6.531 · 10+0
1.053 · 10+1
1.276 · 10+1
2.090 · 10+1
2.646 · 10+1
4.325 · 10+1
+0

Error Estimation Technique
ESEE
MEMEE
MESEE
2.406 · 10
2.859 · 10+0
3.984 · 10+0
4.500 · 10+0
6.922 · 10+0
8.578 · 10+0
1.379 · 10+1
1.736 · 10+1
2.782 · 10+1
+0

3.593 · 10
2.687 · 10+0
6.234 · 10+0
5.250 · 10+0
8.563 · 10+0
1.053 · 10+1
1.806 · 10+1
2.285 · 10+1
3.731 · 10+1
+0

1.734 · 10
2.047 · 10+0
2.937 · 10+0
3.516 · 10+0
5.562 · 10+0
6.985 · 10+0
1.168 · 10+1
1.479 · 10+1
2.457 · 10+1
+0

REEE
1.796 · 10+0
1.547 · 10+0
1.641 · 10+0
2.625 · 10+0
2.828 · 10+0
2.937 · 10+0
3.797 · 10+0
4.422 · 10+0
6.000 · 10+0

References
1. Van Bokhoven, W.M.G.: Eﬃcient higher order implicit one-step methods for integration of stiﬀ diﬀerential equations. BIT. 20 (1980) 34–43
2. Hairer, E., Lubich, C., Wanner, G.: Geometric numerical integration: Structure preserving algorithms for ordinary diﬀerential equations, Springer-Verlag, Berlin, 2002
3. Hairer, E., Nørsett, S.P., Wanner, G.: Solving ordinary diﬀerential equations I: Nonstiﬀ problems. Springer-Verlag, Berlin, 1993
4. Kulikov, G.Yu., Shindin, S.K.: On a family of cheap symmetric one-step methods of order four. In: Vassil N. Alexandrov et al (eds.): Computational Science —
ICCS 2006. 6th International Conference, Reading, UK, May 28–31, 2006. Proceedings, Part I. Lecture Notes in Computer Science. 3991 (2006) 781–785
5. Kulikov, G.Yu., Merkulov, A.I., Shindin, S.K.: Asymptotic error estimate for general
Newton-type methods and its application to diﬀerential equations. Russ. J. Numer.
Anal. Math. Model. 22 (2007) (to appear)
6. Kulikov, G.Yu., Shindin, S.K.: Adaptive nested implicit Runge-Kutta formulas of
the Gauss type (in preparation)

