Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1272–1277

International Conference on Computational Science, ICCS 2011

Sequential Optimization of Paths in Directed Graphs Relative to
Diﬀerent Cost Functions
Jewahir AbuBekr, Igor Chikalov, Shahid Hussain, Mikhail Moshkov
Mathematical and Computer Sciences & Engineering Division,
King Abdullah University of Science and Technology,
Thuwal 23955-6900, Saudi Arabia
{jawaher.burhan, igor.chikalov, shahid.hussain, mikhail.moshkov}@kaust.edu.sa

Abstract
This paper is devoted to the consideration of an algorithm for sequential optimization of paths in directed graphs
relative to diﬀerent cost functions. The considered algorithm is based on an extension of dynamic programming which
allows to represent the initial set of paths and the set of optimal paths after each application of optimization procedure
in the form of a directed acyclic graph.
Keywords: optimal path, dynamic programming, cost function, sequential optimization

1. Introduction
In this paper, we present an algorithm for sequential optimization of paths in a directed graph G relative to diﬀerent
cost functions. Let w1 , w2 be weight functions which correspond to each edge nonnegative real weights, and p be a
directed path in G. We consider two types of cost functions: ψw1 where ψw1 (p) is equal to the sum of weights of edges
in p, and ϕw2 where ϕw1 (p) is equal to the minimum weight of some edge in p. We study the problem of minimization
for ψw1 and the problem of maximization for ϕw2 .
Let us consider an interpretation of G as a network of roads. In this case, each vertex can be interpreted as an
intersection point, and each edge as a road connecting two intersection points. If weight (the value of weight function
w) is the length of a road, then ψw (p) is the length of the path p. If weight is the fee we need to pay for using the
road, then ψw (p) is the total fee of the path. In such a way, we can also consider the minimization of the risk, or the
expected time. Furthermore, if weight is the constraint on the height, width or weight of a vehicle, then ϕw (p) is the
strongest constraint on the height, width or weight of vehicle in the path p.
Note that we can consider another interpretation of G as a computer network. The ﬁrst type of the cost functions
ψw can be used for minimization of delay or packet loss rate, and the second type of the cost functions ϕw can be used
for maximization of bit rate, for example.
The problem of optimization of paths in G relative to ψw is very well known. There are algorithms based on
greedy approach such as Dijkstra’s algorithm [1], algorithms based on dynamic programming such as Bellman-Ford
algorithm [2, 3], and Floyd-Warshal algorithm [4, 5]. Cherkassky et al. discuss these and many other algorithms in
[6].
The novelty of this work is connected with the following: we represent all initial paths from G (satisfying conditions (a) and (b) from Sect. 2) by a directed acyclic graph (DAG) Γ0 and apply to this graph a procedure of
1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.137

Jewahir AbuBekr et al. / Procedia Computer Science 4 (2011) 1272–1277

1273

optimization relative to a cost function. As a result we have a subgraph Γ1 of Γ0 , which represents all optimal paths
from Γ0 . We can apply to Γ1 the procedure of optimization relative to another cost function, etc.
The considered approach is an extension of dynamic programming. Similar techniques have been used exclusively
for optimization of decision trees relative to diﬀerent cost functions [7, 8]. Similar work on other combinatorial
optimization problem with respect to sequential optimization can be found in [9, 10, 11].
This paper consists of nine sections. In Section 2, we provide preliminary concepts. In Section 3, we give a
description of the set of initial paths. We present the procedures of optimization relative to two cost functions in
Section 4. In Section 5, we extend the optimization procedures for application of diﬀerent cost functions sequentially.
We provide an example in Section 6. In Section 7, we discuss the computational complexity of our procedures and
we conclude the paper in Section 8. The last section, Section 9 is devoted for reference.
2. Preliminaries
Let G = (V, E) be a directed graph without loops and multiple edges. Let s, t be two vertices in G such that there
exists a directed path from s to t. We call s the source vertex, and t the target vertex.
We consider the problem of ﬁnding optimal paths in the graph from s to t. The optimization criteria are deﬁned
by means of cost functions.
We consider two types of cost functions. Each cost function assigns a cost to each directed path in G. Let w be a
weight function that assigns to each edge (vi , v j ) of G a weight w(vi , v j ), which is a nonnegative real number.
We consider a directed path p = v1 , v2 , . . . , vm , vm+1 in G. A cost function of the ﬁrst type ψw is deﬁned as follows:
ψw (p) = m
i=1 w(vi , vi+1 ). If m = 0 then ψw (p) = 0. We aim to minimize the value of this function. A cost function of
the second type ϕw is deﬁned as follows: ϕw (p) = min{w(v1 , v2 ), ..., w(vm , vm+1 )}. If m = 0 then ϕw (p) = +∞. We aim
to maximize the value of this function.
Let p be a directed path in G from s to t. One can show that there exists a directed path p from s to t in G, which
can be obtained from p by removal of some vertices and edges such that it satisﬁes the following conditions:
(a)
(b)
(c)
(d)

The length of p is at most |V| − 1,
Both s and t appear exactly once in p ,
ψw (p ) ≤ ψw (p),
ϕw (p ) ≥ ϕw (p).

Therefore, later on we will focus on the study of paths in G from s to t satisfying the conditions (a) and (b).
Furthermore, We denote by P(G) the set of all such paths.
3. Description of Paths
In this section, we introduce a directed acyclic graph Γ0 = Γ0 (G), which represents the set of directed paths P(G)
from s to t satisfying conditions (a) and (b).
Let V = {v1 , . . . , vn }, where v1 = s and vn = t. The set of vertices of Γ0 is divided into n layers. The ﬁrst layer
contains the only vertex v11 . The last layer contains the only vertex vnn . For k = 2, . . . , n − 1 the k-th layer contains n − 2
vertices vk2 , . . . , vkn−1 .
Let i, j ∈ {2, . . . , n − 1}, we have an edge from v11 to v2j if and only if (v1 , v j ) ∈ E. For k = 2, . . . , n − 2, we have an
edge from vki to vk+1
if and only if (vi , v j ) ∈ E.
j
Let 2 ≤ j ≤ n − 1 and 2 ≤ k ≤ n − 1. Then, we have an edge from vkj to vnn if and only if (v j , vn ) ∈ E. We have an
edge from v11 to vnn if and only if (v1 , vn ) ∈ E. There are no other edges in Γ0 .
A weight function w on G can be extended to Γ0 in a natural way: w(vki 1 , vkj2 ) = w(vi , v j ) if (vki 1 , vkj2 ) is an edge in
Γ0 .
We denote by P(Γ0 ) the set of all directed paths in Γ0 from v11 to vnn . It is clear that there is one-to-one mapping
from the set P(G) to the set P(Γ0 ). The path v1 , v j2 , . . . , v jt , vn from P(G) corresponds to the path v11 , v2j2 , . . . , vtjt , vnn
from P(Γ0 ).

1274

Jewahir AbuBekr et al. / Procedia Computer Science 4 (2011) 1272–1277

4. Procedures of Optimization
Let Γ be a subgraph of Γ0 which can be obtained from Γ0 by removal of some vertices and edges such that there
is at least one directed path from v11 to vnn . We denote by P(Γ) the set of all such paths. We consider procedures of
optimization of paths in P(Γ) relative to ψw and ϕw .
4.1. Optimization Relative to ψw
We remove from Γ all vertices (and their incident edges) such that there is no directed paths from v11 to the
considered vertex. We denote by Γ the obtained subgraph of Γ.
For each vertex vkj of Γ we label it with Ψw (vkj ) which is the minimum cost of a directed path in Γ from v11 to vkj
relative to ψw and remove some edges incoming to vkj . We label v11 with Ψ(v11 ) = 0. Let vkj v11 and vki11 , . . . , vkirr be all
vertices in Γ such that from each of which there is an edge to vkj . Then,
Ψw (vkj ) = min w(vkitt , vkj ) + Ψw (vkitt ) .
1≤t≤r

(1)

We remove from Γ all edges (vkitt , vkj ) incoming to vkj such that
w(vkitt , vkj ) + Ψw (vkitt ) > Ψw (vkj ).
We denote the obtained subgraph of Γ0 by Γψw . It is clear that there is at least one path in Γψw from v11 to vnn . We denote
by P(Γψw ) all such paths.
Theorem 1. The set of paths P(Γψw ) coincides with the set of paths from P(Γ) that have minimum cost relative to ψw .
Proof. We denote by P(Γ ) the set of all directed paths in Γ from v11 to vnn . It is clear that P(Γ ) = P(Γ). Let us prove
by induction on vertices in Γ that for each vertex vkj of Γ the number Ψw (vkj ) is the minimum cost of a directed path in
Γ from v11 to vkj relative to ψw and the set of directed paths from v11 to vkj in Γψw coincides with the set of directed paths
from v11 to vkj in Γ that have minimum cost relative to ψw . If vkj = v11 we have Ψw (v11 ) = 0. We have exactly one path
from v11 to v11 both in Γ and Γψw . The length and the cost of this path are equal to zero. So the considered statement
holds for v11 . For vkj v11 , let vki11 , . . . , vkirr be all vertices in Γ such that from each of which there is an edge to vkj . Let us
assume that the considered statement holds for vki11 , . . . , vkirr . Since Γ is a directed acyclic graph, each path from v11 to
vkj has no vkj as an intermediate vertex. From here, (1) and inductive hypothesis it follows that Ψw (vkj ) is the minimum
cost of a directed path in Γ from v11 to vkj .
Using (1), inductive hypothesis, and description of optimization procedure we have that each path in Γψw from v11
k
to v j has the cost Ψw (vkj ). So the set of directed paths from v11 to vkj in Γψw is a subset of the set of directed paths from
v11 to vkj in Γ that have minimum cost relative to ψw .
Let p be a path from v11 to vkj in Γ with minimum cost relative to ψw . Then for some t ∈ {1, . . . , r} the path p passes
through the vertex vkitt . Therefore, ψw (p) = Ψ( vkj ) = ψw (p ) + w(vkitt , vkj ) where p is the ﬁrst part of p from v11 to vkitt . It is

clear that ψw (p ) ≥ Ψw (vkitt ). From here and the description of optimization procedure it follows that the edge (vkitt , vkj )
belongs to ΓΨw . Let us assume that ψw (p ) > Ψw (vkitt ). Then Ψw (vkj ) > Ψw (vkitt ) + w(vkitt , vkj ) but this is impossible (see

(1)), so ψw (p ) = Ψw (vkitt ). According to inductive hypothesis, p belongs to the set of paths in Γψw from v11 to vkitt and
therefore p belongs to the set of paths in Γψw from v11 to vkj . Thus the considered statement holds. From this statement
(if we set vkj = vnn ) it follows the statement of the theorem.
4.2. Optimization Relative to ϕw
We remove from Γ all vertices (and their incident edges) such that there is no directed path from v11 to the considered vertex. We denote by Γ the obtained subgraph of Γ.

Jewahir AbuBekr et al. / Procedia Computer Science 4 (2011) 1272–1277

1275

For each vertex vkj of Γ we label it with Φw (vkj ) which is the maximum cost of a directed path in Γ from v11 to vkj
relative to ϕw . We label v11 with Φw (v11 ) = +∞. Let vkj v11 and vki11 , . . . , vkirr be all vertices in Γ such that from each of
which there is an edge to vkj . Then
Φw (vkj ) = max min w(vkitt , vkj ), Φw (vkitt ) .
1≤t≤r

(2)

Let c = Φw (vnn ). We denote by Γϕw the graph obtained from Γ by removal of all edges (vkj11 , vkj22 ) for which w(vkj11 , vkj22 ) <
c. It is clear that there is at least one path in Γϕw from v11 to vnn . We denote by P(Γϕw ) all such paths.
Theorem 2. The set of paths P(Γϕw ) coincides with the set of paths from P(Γ) that have maximum cost relative to ϕw .
Proof. We denote by P(Γ ) the set of all directed paths in Γ from v11 to vnn . It is clear that P(Γ ) = P(Γ). Let us prove
by induction on vertices in Γ that for each vertex vkj of Γ the number Φw (vkj ) is the maximum cost of a directed path
in Γ from v11 to vkj relative to ϕw . If vkj = v11 we have Φw (v11 ) = +∞, and the considered statement holds for v11 since
there exists a path p from v11 to v11 with length equal to zero and cost ϕw (p) equal to +∞. For vkj v11 , let vki11 , . . . , vkirr
be all vertices in Γ such that from each of which there is an edge to vkj . Let us assume that the considered statement
holds for vki11 , . . . , vkirr .
Since Γ is a directed acyclic graph, each path from v11 to vkj has no vkj as an intermediate vertex. From here, (2),
and inductive hypothesis it follows that Φw (vkj ) is the maximum cost of a directed path in Γ from v11 to vkj .
Let c = Φw (vnn ) then we know that c is the maximum cost of a path in Γ from v11 to vnn . So each path in Γ from
1
v1 to vnn , that does contain edges with weight less than c, is an optimal path (a path with maximum cost). Also each
optimal path in Γ from v11 to vnn does not contain edges whose weight is less than c. From here it follows that the set
P(Γϕw ) coincides with the set of paths from P(Γ) that have maximum cost relative to ϕw .
5. Sequential Optimization
The optimization procedures presented in this paper allow sequential optimization relative to diﬀerent cost functions. Let us consider one of the possible scenarios.
Let w1 and w2 be two weight functions for G. Initially, we get the DAG Γ0 = Γ0 (G). We apply the procedure
of optimization relative to ψw1 to the graph Γ0 . As a result we obtain the subgraph Γ = (Γ0 )ψw1 of the graph Γ0 . By
Theorem 1, the set of directed paths in Γ from v11 to vnn coincides with the set of directed paths D in Γ0 from v11 to vnn
that have the minimum cost relative to ψw1 .
We can apply the procedure of optimization relative to ϕw2 to the graph Γ. As a result we obtain the subgraph Γϕw2
of the graph Γ0 . By Theorem 2, the set of directed paths P(Γϕw2 ) in Γϕw2 from v11 to vnn coincides with the set of directed
paths from D that have the maximum cost relative to ϕw2 .
We can continue the procedure of optimization relative to diﬀerent cost functions.
6. Example
We consider a directed graph G = (V, E) (as depicted in Figure 1) and two weight functions w1 and w2 for this
graph as
w1 (e) = 1 for all e ∈ E,
and

w2 (s, a) = 1,
w2 (b, t) = 2,

w2 (a, t) = 1,
w2 (a, b) = 2,

w2 (s, b) = 2,
w2 (b, a) = 2.

Initially, we get a DAG Γ0 = Γ0 (G) (as depicted in Figure 2). Here we keep the original vertex labels from G and
put and to represent the layer index.
We apply the procedure of optimization relative to ψw1 to the graph Γ0 and obtain the graph Γ = (Γ0 )ψw1 as shown
in Figure 3. The set P(Γ) contains exactly two paths.
We apply the procedure of optimization to the graph Γ relative to ϕw2 . As a result we obtain the subgraph Γϕw2 of
Γ0 , see Figure 4. The set P(Γϕw2 ) contains exactly one path.

1276

Jewahir AbuBekr et al. / Procedia Computer Science 4 (2011) 1272–1277

a
a
s

t

a

s

t
b

b

b
Figure 2: The initial DAG Γ0 .

Figure 1: The directed graph G.

a

a

s

a
t

b

b

Figure 3: The subgraph Γ = (Γ0 )ψw1 .

a

s

t
b

b

Figure 4: The subgraph Γϕw2 .

7. Computational Complexity
Let G = (V, E) be a directed graph with |V| = n and |E| = m, and let Γ0 = Γ0 (G) = (V0 , E0 ) be the directed acyclic
graph corresponding to G. It is clear that |V0 | = O(n2 ) and |E0 | = O(mn). Let Γ = (V1 , E1 ) be a subgraph of the
graph Γ0 obtained from Γ0 after some number of applications of the optimization procedures. Let us evaluate the time
complexity of optimization procedure applied to Γ relative to ψw (to ϕw ).
We can ﬁnd all vertices in Γ such that there is a directed path from v11 to the considered vertex using breadth-ﬁrst
search algorithm with the running time O(|V1 | + |E1 |) [12]. It is clear that |V1 | ≤ |V0 | and |E1 | ≤ |E0 |. Therefore, the
running time is O(n2 + mn).
After removal from Γ all vertices (and their incident edges), which are not reachable from v11 , we obtain a subgraph
Γ of Γ. According to the description of optimization procedure relative to ψw we need to make at most two comparisons and one addition per each edge to obtain the graph Γψw from Γ . So we need O(mn) operations of comparison
and addition to construct the graph Γψw from Γ . Similarly, according to the description of optimization procedure
relative to ϕw we need to make at most three comparisons per each edge of Γ to obtain the graph Γϕw from Γ . So we
need O(mn) operations of comparison to construct the graph Γϕw from Γ .
8. Conclusions
In this paper, we study an algorithm for optimization of paths in directed graphs which allows sequential optimization relative to diﬀerent cost functions. The sets of initial paths and optimal paths are presented in a natural way
by acyclic directed graphs. The results about structure of the set of optimal paths and bounds on the time complexity
of considered algorithm show that this algorithm can be a useful tool for multicriteria optimization of paths.
9. References
[1] E. W. Dijkstra, A note on two problems in connexion with graphs, Numerische Mathematik 1 (1959) 269–271.
URL http://jmvidal.cse.sc.edu/library/dijkstra59a.pdf
[2] R. Bellman, On a routing problem, Quarterly of Applied Mathematics 16 (1) (1958) 87–90.
[3] L. R. Ford, Network ﬂow theory, Tech. Rep. P-923, RAND, Santa Monica, CA (1956).
[4] R. W. Floyd, Algorithm 97: Shortest path, Commun. ACM 5 (6) (1962) 345.
[5] S. Warshall, A theorem on boolean matrices, J. ACM 9 (1) (1962) 11–12.

Jewahir AbuBekr et al. / Procedia Computer Science 4 (2011) 1272–1277

1277

[6] B. Cherkassky, A. V. Goldberg, T. Radzik, Shortest paths algorithms: Theory and experimental evaluation, Mathematical Programming 73
(1993) 129–174.
[7] I. Chikalov, M. Moshkov, M. Zelentsova, On optimization of decision trees, in: Transactions on Rough Sets IV, Lecture Notes in Computer
Science 3700, Springer, Heidelberg, 2005, pp. 18–36.
[8] A. Alkhalid, I. Chikalov, M. Moshkov, On algorithm for building of optimal α-decision trees, in: M. Szczuka et al. (Ed.), RSCTS 2010, LNAI
6086, Springer, Heidelberg, 2010, pp. 438–445.
[9] I. Chikalov, S. Hussain, M. Moshkov, E. Odat, Sequential optimization of global sequence alignments relative to diﬀerent cost functions, in:
In Proceedings of ACM-ICHIT 2010 conference, 2010.
[10] M. Alnaﬁe, I. Chikalov, S. Hussain, M. Moshkov, Sequential optimization of binary search trees fro multiple cost functions, in: 17th Computing: The Australian Theory Symposium (CATS 2011), Vol. 119, 2011.
[11] I. Chikalov, S. Hussain, M. Moshkov, Sequential optimization of matrix chain multiplication relative to diﬀerent cost functions, in: SOFSEM,
LNCS, 2011, pp. 157–165.
[12] J. Kleinberg, E. Tardos, Algorithm Design, Addison-Wesley, 2006.

