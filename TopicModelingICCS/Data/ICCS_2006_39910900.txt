A Comparative Study of Memory Structures for DSM
Systems on Wireless Environments*
Hsiao-Hsi Wang, Kuang-Jui Wang, Chien-Lung Chou,
Ssu-Hsuan Lu, and Kuan-Ching Li
Parallel and Distributed Processing Center
Dept. of Computer Science and Information Management
Providence University Shalu, Taichung 43301 Taiwan
{hhwang, g9371014, g9371001, g9234024, kuancli}@pu.edu.tw

Abstract. In recent years, wireless networking has become more popular than
ever. Distributed shared memory (DSM) combines computer hardware resources in order to achieve the efficiency and high performance provided by
parallel computing. Unfortunately, the major overhead of DSM software is the
communication time, especially in wireless network environments. In this paper, we have implemented three memory structures over JIAJIA DSM system
on wireless network, and then analyzed their performance. From experimental
results, we could find out the relation between communication time and memory layouts. In addition, we have also discovered relationship between characteristics of application programs and memory structures. Experimental results
of five well-known benchmark applications show that a suitable memory layout
can effectively reduce communication overhead in wireless network. We have
analyzed advantages and disadvantages of these memory structures, to improve
future designs of wireless DSM systems.

1 Introduction
Distributed Shared Memory (DSM) software system is an excellent technique and
easy alternative for concurrent computing, since computers can exchange data via
high speed network to achieve higher performance. In original DSM system architectures, the common shared memory is made by combining all computing nodes’ local
memories. The home pages are located on all nodes, so nodes often need to access
data in remote nodes. This induces remote access latencies, especially when using
wireless networking technologies. Due to a number of limitations present in wireless
computing environments, such as narrow bandwidth in wireless communication, unstable connectivity and data synchronization in mobile terminals are present.
S. Yokoyama et al. proposed a memory management architecture named Memory
Management Architecture for Mobile Computing Environment (MMM) [1]. From
initial concepts present in MMM, we have some ideas. We built a wireless DSM
system over JIAJIA DSM software [2] and compare three different layouts of home
*

This research is supported by National Science Council (NSC), Taiwan, under grant no. NSC
94-2745-E-126-002-URD.

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 900 – 903, 2006.
© Springer-Verlag Berlin Heidelberg 2006

A Comparative Study of Memory Structures for DSM Systems

901

pages, which are Hybrid Memory Structure (HMS), Centralized Memory Structure
(CMS) and Distributed Memory Structure (DMS). We expect to find out main drawbacks when using wireless network and to improve these problems. In addition, we
also expect to find out some relation between the characteristics of application programs and memory structures, such as the bandwidth, packet losing rate, and disconnection.
The remaining of this paper is organized as follows. In section 2, we compare the
difference among three memory layouts. In section 3, we bring up experimental performance evaluation and finally, some conclusions and future works in section 4.

2 Memory Structures
In this section, we will describe three memory structures and compare differences
between them, as show in Figure 1.
(A). Distributed Memory Structure (DMS): In JIAJIA, the pages are initially distributed among all nodes in the original memory layout. If any of nodes occurs page
faults and needs to get pages from remote nodes, nodes will communicate with each
other. If there are many nodes that need to send data at the same time, it maybe occur
competition for network bandwidth or data retransmission. Due to the fact that bandwidth of wireless network is limited, it may not be suitable for wireless DSM system.
cached

Home

cached

cached

Home

cached

cached

Home

cached

Home

cached

cached

Home

Home

Home

cached
cached

cached
cached

cached
cached
cached

(A)

(B)

Server node

cached

Home
cached

Home

cached

cached

cached

cached

cached

cached
cached

(C)

Fig. 1. (A). Distributed Memory Structure. (B). Centralized Memory Structure. (C). Hybrid
Memory Structure.

(B). Centralized Memory Structure (CMS): We changed the original memory layout in JIAJIA software system, according to the design of MMM. If some node needs
to access data, it will request to server. The server node maintains the consistency of
the common memory areas and provides pages for client. Other nodes only have
cache pages. In other words, when the page fault occurs on server node it only takes
pages from itself, as also the times of communication will reduce, since the communication is simpler than DMS.
(C). Hybrid Memory Structure (HMS): In Hybrid Memory Structure (HMS), half of
nodes have home pages and caches and the other nodes just have caches. In order to

902

H.-H. Wang et al.

reduce communication overhead on server node, but still can reduce the times of communication, so we have an idea that located home pages on half of nodes. It can have
better load balancing between communication and the percentage of data access hits.

3 Performance Evaluation
We have built a wireless DSM system platform for our experiments, and the hardware
computing platform we used for our investigation is constructed using 4 PCs, each
containing one Intel P4 3GHz CPU, 256 MB DDR memory, ASUS USB wireless
network adapter 54MB/s and Fedora Core 3 OS with kernel version 2.6.9. We evaluate the performance of DMS, CMS, and HMS structures running five different parallel applications: IS from NAS [3], LU from SPLASH2 [4], Merge, SOR, and TSP.
Table 1 shows the problem size and characteristics of these applications.
Table 1. Characteristics of Benchmark Applications
Application
IS
LU
Merge
SOR
TSP

Size
224, 210, 10
1024*1024, 32
200*7500
512, 256, 50
19 (cities)

DMS

Memory (MB)
0.32
10.28
7.36
10.24
0.99

Barriers
32
68
5
101
2

DMS

CMS

Locks
40
0
0
0
687

CMS

HMS

)s 140
dn
oc 120
e 100
(S
e 80
im 60
T
et 40
cue 20
x
E 0

)s 200
ndo
ce 150
S(
e 100
m
iT
et
uc 50
ex
E 0
IS

LU

(A)

Merge

SOR

TSP

IS

LU

Merge

SOR

TSP

(B)

Fig. 2. Execution Time of Parallel Applications over Wireless DSM Platform. (A). Using 2
Wireless Computing Nodes (B). Using 4 Wireless Computing Nodes.

Figure 2(A) shows the execution time of original JIAJIA and CMS on two wireless
nodes. We can see that some applications like IS and Merge on CMS can have better
performance than that on DMS. If page faults happen, it will need to transmit the data
among every node on DMS, since the bandwidth is limited in the wireless environment. If there are too many nodes transmitting data at the same time, it will cause
bandwidth competition, data loss and data retransmission. Therefore, the performance
will degrade rapidly, and this phenomenon can be seen obviously under four nodes
DSM environment.

A Comparative Study of Memory Structures for DSM Systems

903

Additionally, we find that the characteristics of the application programs are
important factors, such as Merge and SOR. In SOR, the original structure initially
distributes red and block arrays across all nodes, but CMS allocates all shared data in
one node. CMS opposites to the characteristic of SOR itself and causes the hits rate
dropping and the communication time raising a lot. The characteristic of Merge is
completely opposite to SOR. The best performance of Merge is in CMS and the worst
performance of SOR is also in CMS, as in Figure 2(B).

4 Conclusions and Future Work
According to experimental results, we believe that is very sensitive the relation between the home location and performance. It is essential to locate the home pages
correctly and the CMS can reduce the cost of communication. Under the wireless
network environment, it is not reliable as in wired network, as it has narrow bandwidth. As large amount of data need to be transmitted, packets easy to collide as also
to lose in wireless network. If we can improve the problems in this respect, it will
improve global DSM system efficiency.
In addition, there exist close relation between the characteristics of applications
and the percentage of access hit rates. It may cause performance come down fast if
the location of home pages and the access pattern of application program are not suitable. The percentage of hits and increase efficiency can be improved if we can offer a
suitable structure for home pages layout.
As future work, we will continue to probe the DSM software system in wireless
environment and find out a number of main factors for improvement. We are looking
for more effective methods to reduce the amount of message passing, to increase the
percentage of hit rates for reducing the burden of the network, and to improve the
efficiency of the wireless DSM environment.

References
[1] S. Yokoyama, T. Mizuno, and T. Watanabe, “A Proposal of a Memory Management
Architecture for Mobile Computing Environments,” in the Proceedings of Database and
Expert Systems Applications, 2000, pp. 28-32.
[2] W. Hu, W. Shi, and Z. Tang, “Reducing System Overheads in Home-Based Software
DSMs,” in the Proceedings of 13th International and 10th Symposium on Parallel and
Distributed Processing, 1999, pp. 167-173.
[3] D. Bailey, J. Barton, T. Lasinski, and H. Simon, “The NAS Parallel Benchmarks,”
Technical Report 103863, NASA, 1993.
[4] S. Woo, M. Ohara, E. Torrie, J. Singh, and A. Gupta, “The SPLASH-2 Programs:
Characterization and Methodological Considerations,” in the Proceedings of 22nd Annual
International Symposium on Computer Architecture, 1995, pp.24-36.

