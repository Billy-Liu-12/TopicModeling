Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 2167 – 2176

International Conference on Computational Science, ICCS 2013

Numerical analysis of ﬁnite element method for a transient
two-phase transport model of polymer electrolyte fuel cell
Yuzhou Suna , Mingyan Heb , Pengtao Suna,∗
a Department

of Mathematical Sciences, University of Nevada Las Vegas, 4505 Maryland Parkway, Las Vegas, NV 89154, USA
b Department of Mathematics, Tongji University, Shanghai, 200092, P.R. China

Abstract
In this paper, we study a 2D transient two-phase transport model for water species in the cathode gas diﬀusion layer of hydrogen polymer electrolyte fuel cell (PEFC), the reformulation of water concentration equation is described by using Kirchhoﬀ
transformation, and its numerical eﬃciency is demonstrated by successfully dealing with the discontinuous and degenerate water
diﬀusivity. The semi-discrete and fully discrete ﬁnite element approximations with Crank-Nicolson scheme are developed for the
present model and the optimal error estimate in H 1 norm and the sub-optimal error estimate in L2 norm are established for both
ﬁnite element schemes.
Keywords: Transient two-phase transport model, polymer electrolyte fuel cell (PEFC), Kirchhoﬀ transformation, ﬁnite element
method, the optimal error estimate, Crank-Nicolson scheme.

1. Introduction
Fuel cells have been used in a large number of industries worldwide because of their advantages such as low
environmental impact, rapid start-up and high power density. Polymer electrolyte fuel cells (PEFCs) is presently
considered as a potential type of fuel cells for such application. Since PEFCs simultaneously involve electrochemical
reactions, current distribution, two-phase ﬂow transport and heat transfer, an extensive mathematical modeling of
multi-physics system combined with the advanced numerical techniques shall make a signiﬁcant impact in gaining
a fundamental understanding of the interacting electrochemical and transport phenomena and providing a computeraided tool for the design and optimization of future fuel cell engines.
Figure 1 schematically shows a single PEFC. A typical PEFC consists of several distinct components [1]: the
membrane electrode assembly (MEA) comprised of a proton conducting electrolyte membrane sandwiched between
two catalyst layers (CL), the porous gas diﬀusion layers (GDL), and the bipolar plates with embedded gas channels.
In the anode CL, the hydrogen oxidation reaction (HOR) splits the hydrogen into electrons, which are transmitted
via the external circuit, and protons, which migrate through the membrane and participate in the oxygen reduction
reaction (ORR) in the cathode CL to recombine with oxygen and produce water and waste heat. Inside the PEFCs,
water management is a key issue, and is a signiﬁcant technical challenge. Suﬃcient amount of water is needed in the
∗ Corresponding

author
Email addresses: suny5@unlv.nevada.edu (Yuzhou Sun), hemingyan1985@yahoo.com.cn (Mingyan He), pengtao.sun@unlv.edu
(Pengtao Sun)

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.387

2168

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

membrane to maintain high proton conductivity, however, excess liquid water in the electrode can cause water ﬂooding, and hinder the transport of the reactant from the gas channels to the catalyst layers. It is referred to as balancing
membrane hydration with ﬂooding avoidance. Due to such complicated electrochemical reaction and multicomponent
and multiphase transport process, mathematical modeling and numerical simulation have become an important tool
for the design and optimization of PEFCs [2, 3, 4, 5, 6, 7, 8]. Since there are two important and also conﬂicting needs
in PEFCs: to hydrate the polymer electrolyte and to avoid ﬂooding in porous electrodes and GDL for reactant/product
transport, in order to focus on the most important issue in PEFCs - water management, we only consider water transport phenomenon in this paper, model its two-phase transport equation and analyze its ﬁnite element approximation.
Other species transport phenomena in PEFCs will be studied in a future paper.

Figure 1: Schematic diagram of a polymer exchange membrane fuel cell
Comparing to the plentiful literature on modeling and experimental study of fuel cells, less works are contributed
to the eﬃcient numerical methodology of two-phase transport PEFC model. P. Sun et al [9, 10, 11, 12, 13] lead the
ﬁeld in numerical studies for PEFC due to the cutting edge work on the eﬃcient numerical techniques for the multiphase mixture (M2 ) model of PEFC, where, ﬁnite element method is adopted to discretize the governing equations of
PEFC model, and Kirchhoﬀ transformation [14, 15, 16, 11, 12] is employed to speciﬁcally handle the derived discontinuous and degenerate water diﬀusivity arising in the two-phase water transport model of PEFC with the intention
to accelerate the nonlinear iteration and obtain an accurate solution. However, the error estimates of ﬁnite element
method with Kirchhoﬀ transformation have not been discussed yet for either steady state or transient PEFC model in
these papers. The goal of this paper is to accurately analyze the error estimates of the semi-discrete ﬁnite element
scheme and fully discrete ﬁnite element method with Crank-Nicolson scheme for a simpliﬁed transient two-phase
transport model in the cathode gas diﬀusion layer (GDL) of PEFC. We ﬁnally obtain the optimal error estimate in
H 1 norm and the sub-optimal error estimate in L2 norm for both ﬁnite element schemes in spatial discretization, and
second order approximation in temporal discretization for the fully discrete scheme.
The rest of this paper is organized as follows. In Section 2, a simpliﬁed 2D two-phase transport model in the
cathode GDL of PEFC is studied. Then Kirchhoﬀ transformation is introduced to describe the reformulated water
concentration equation, and its eﬃciency is demonstrated on dealing with the discontinuous and degenerate diﬀusivity.
The semi-discrete ﬁnite element scheme is presented and its error estimate is given in Section 3. A fully discrete ﬁnite
element method with Crank-Nicolson scheme is designed and analyzed correspondingly in Section 4.
2. A Simpliﬁed 2D Transient Two-phase Transport Model in the Cathode GDL of PEFC
2.1. Model Descriptions
In this section, the governing equations for a simpliﬁed 2D transient two-phase transport problem in the cathode
GDL of PEFC are described, together with the computational domain and the corresponding boundary conditions.
2.1.1. Governing Equations
To deﬁne a simpliﬁed 2D transient isothermal two-phase transport model in the cathode GDL, we only need to
address a pressure equation using Darcy’s law, and water concentration equation in which Darcy’s velocity is used. As
mentioned in the introduction, water management is the most important and challenging problem in PEFC model. The

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

2169

physical feature of water determines that the two-phase zone and the single-phase zone are co-existing. Nevertheless,
GDL is the major component in PEFC that contains both liquid water and gaseous water vapor, while gas channel
only contains water vapor. Therefore, in this paper the attention is put on the water species only in GDL instead of
all species spreading everywhere. Based on the M2 model, the two-phase transport model is deﬁned as follows with
respect to water’s molar concentration C and pressure p [11, 17]:
⎧ ∂C
⎪
⎨ ∂t − ∇ · (D(C)∇C) + ∇ · (γc uC) = 0,
(1)
⎪
⎩
∇ · Kν ∇p = 0,
where is the porosity of GDL, the Darcy’s velocity u is deﬁned as u = − Kρν ∇p. We assume ∇ · u = 0, thus the
pressure equation in (1) is introduced. The diﬀusivity D(C) in GDL is deﬁned as
⎧
⎪
if C < C sat ,
⎪
⎨ Dg f ( ),
D(C) = ⎪
(2)
C sat
1
⎪
⎩ ρg − M Γcapdi f f , if C ≥ C sat ,
where Dg is the eﬀective water vapor diﬀusivity given as a constant for isothermal model, and f ( ) = 1.5 . The
1
λλ
capillary diﬀusion coeﬃcient Γcapdi f f = ρl −CMsat M lν g σ cos θc ( K) 2 dJ(s)
ds . γc is the advection correction factor, given as
⎧
⎪
if C < C sat ,
⎪
⎨ 1,
(3)
γc = ⎪
λ
ρ
λ
g
l
⎪
⎩ C M + ρg C sat , if C ≥ C sat ,
where λg and λl are the relative mobilities of liquid and gaseous phases deﬁned in Table 1. C sat is the saturated water
concentration which is a constant in isothermal case. J(s) is the Leverett function deﬁned as
J(s) =

1.417(1 − s) − 2.120(1 − s)2 + 1.263(1 − s)3 ,
1.417s − 2.120s2 + 1.263s3 ,

if θc < 90◦ ,
if θc > 90◦ ,

(4)

. It
here s ∈ [0, 1] denotes the liquid saturation, which has coequality with water concentration, shown as s = C−Csat
ρl
M −Csat
is not diﬃcult to see Γcapdi f f = 0 when C = C sat . Therefore D(C) degenerates at C sat . We deﬁne a new advection
correction factor γ¯ c = − Kγρνc , then the water concentration equation in (1) can be written as
∂C
− ∇ · (D(C)∇C) + ∇ · (¯γc ∇pC) = 0,
∂t

(5)

Table 1: Parameters and their physical relations [1]
Density
ρ = ρl s + ρg (1 − s)
Molar concentration
C = Cl s + Cg (1 − s)
Kinematic viscosity
Relative mobilities
Relative permeabilities

ν=

krl
νl

+

krg
νg

−1

λl (s) = krl /νklrl+k/νrgl /νg , λg (s) = 1 − λl (s)
krl = s3 , krg = (1 − s)3

2.1.2. Computational Domain and Boundary Conditions
The governing equations (1) take place in the cathode GDL of PEFC, as shown in Fig. 2. The x-axis represents
the ﬂow direction and the y-axis points in the through-plane direction. The dimension sizes of this computational
∂p
domain are marked in Fig. 2 as well. ∂C
∂n = 0 and ∂n = 0 on the left and right walls (∂Ω2 and ∂Ω3 ). On the bottom
x
wall connecting with gas channel (∂Ω1 ), C is given as constant Cb and p(x) = p1 − (p1 − p2 ) lPEFC
. On the top wall

γc ∇pC) · n = I(x)
connecting with catalyst layer (∂Ω4 ), ∂p
∂n = 0 and D(C)∇C · n − (¯
2F , where F is the Faraday constant
x
. Here p1 , p2 , I1
and I(x) the volumetric transfer current density of reaction, given as [11] I(x) = I1 − (I1 − I2 ) lPEFC
and I2 are predetermined constants. In fact, I(x) is the linear reduction of Butler-Volmer equation, indicating that the
transfer current density linearly decreases from the inlet to the outlet.

2170

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

Figure 2: Computational Domain

2.2. Reformulation of Water Equation by Kirchhoﬀ Transformation
2.2.1. Kirchhoﬀ Transformation
As discussed in section 2.1.1, D(C) is degenerate and also discontinuous at C sat , which causes the numerical
simulation to be ineﬃcient and unstable. In order to resolve such computational diﬃculties, we introduce the Kirchhoﬀ
C
transformation [11] as W(C) = 0 D(w)dw. Then
⎧
⎪
if C < C sat ,
⎪
⎨ Dg f ( )C,
C
W(C) = ⎪
(6)
C sat
1
⎪
⎩ Dg f ( )C sat + C
ρg − M Γcapdi f f dw, if C ≥ C sat .
sat

Furthermore,

⎧
⎪
if C < C sat ,
⎪
⎨ ∇ · (Dg f ( )∇C),
ΔW(C) = ∇ · (D(C)∇C) = ⎪
⎪
⎩ ∇ · Cρsatg − M1 Γcapdi f f ∇C , if C ≥ C sat .

Thus we are able to reformulate the water concentration equation (5) with Kirchhoﬀ transformation as follows
⎧
∂W
⎪
γc ∇pC) in GDL,
⎪
⎪
D(C)+δ ∂t − ΔW = −∇ · (¯
⎪
⎪
Cb
⎪
⎪
⎨
W = 0 D(w)dw on ∂Ω1 ,
⎪
⎪
∂W
⎪
⎪
⎪
∂n = 0 on ∂Ω2 , ∂Ω3 ,
⎪
⎪
⎩
on ∂Ω4 .
∇W · n − γ¯ c ∇pC(W) · n = I(x)
2F

(7)

(8)

Here δ is a suﬃciently small positive number for the sake of avoidance of possible zero denominator at C = Csat .
It may be improper if one insists on applying Kirchhoﬀ transformation to ∇ · (¯γc ∇pC), a new convection term that
explicitly depends on W will be obtained as
∇ · (¯γc ∇pC) = γ¯ c ∇p · ∇C + ∇ · (¯γc ∇p)C = γ¯ c ∇p ·

∇W
+ ∇ · (¯γc ∇p)C(W),
D(C)

(9)

then the corresponding reformulated water concentration equation becomes
∂W
γ¯ c ∇p
− ΔW +
· ∇W = −∇ · (¯γc ∇p)C(W),
D(C) + δ ∂t
D(C) + δ

(10)

where, a huge convection term may be produced when the water concentration C is close to the degenerate point
C sat . Therefore, for the interest of numerical stability, it is better to avoid applying Kirchhoﬀ transformation to the
convection term in (8), and leave it to the right hand side as an equivalent force term in order to achieve a stable
numerical simulation.
2.2.2. Model Generalization
In order to extend the numerical analysis on error estimates of ﬁnite element method, which will be given in
Section 3, to a more general case, the reformulated water concentration equation can be generalized to the following
form of convection-diﬀusion-reaction equation
r(C)

∂W
− ΔW + b(C, ∇p) · ∇W = f (C, ∇p, Δp),
∂t
4

(11)

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

2171

γ¯ c ∇p
where r(C) = D(C)+δ , b(C, ∇p) = D(C)+δ
, f (C, ∇p, Δp) = −∇ · (γ¯ c ∇p) C(W). Obviously, (8) and (10) are just special
cases of (11). Without loss of generality, in what follows, we will carry out the error estimates of ﬁnite element
method for (11) instead of (8) or (10).
All the necessary coeﬃcient functions and their proper derivatives are Lipschitz continuous, and their upper and
lower bounds satisfy the following conditions for C ≥ 0,

d ≤ D(C) ≤ D, 0 < r ≤ r(C) ≤ R, b < b(C, ∇p) < B, |γ(C)| < Γ, b p < b p (C, ∇p) < B p , b pp < b pp (C, ∇p) < B pp . (12)
However, since D(C) is discontinuous at C sat , r(C) and b(C, ∇p) are also discontinuous at C sat for (8). Therefore the
following conditions are to be satisﬁed when C is on either side of Csat ,
r (C) ≤ R , r (C) ≤ R , bc < bc (C, ∇p) < Bc , bcc < bcc (C, ∇p) < Bcc , bcp < bcp (C, ∇p) < Bcp .

(13)

2.2.3. Kirchhoﬀ Inverse Transformation
According to the deﬁnition of Kirchhoﬀ transformation in (6), the expression for C is not explicit. For the case
C < C sat , since the Kirchhoﬀ transformation is linear, it is not hard to calculate C directly from W using
C = Dg f ( )

−1

W.

(14)

However, if C ≥ C sat , it is necessary to adopt Newton’s method to ﬁnd a proper C, given by the following iterative
solution [11](k = 0, 1, 2, . . .):
Ck
W − Dg f ( )C sat − C D(w)dw
sat
Ck+1 = Ck +
.
(15)
D(Ck ) + δ
3. Semi-discrete Scheme and Its Error Estimate
3.1. Semi-discrete FEM
After applying Kirchhoﬀ transformation, the governing equations (5) now become:
⎧
∂W
⎪
⎪
⎨ D(C)+δ ∂t − ΔW = −∇ · (¯γc ∇pC),
⎪
⎪
⎩
∇ · Kν ∇p = 0.

(16)

Deﬁne Hw = W ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) ; W|∂Ω1 = Cb , H¯w = {W ∈ Hw ; W|∂Ω = 0},
x
and H¯ p = p ∈ H p ; p|∂Ω = 0 and apply standard ﬁnite
H p = p ∈ H k+1 (Ω) ∩ W 1,∞ (Ω); p|∂Ω1 = p1 − (p1 − p2 ) lPEFC
element method to (16).
The weak form of (16) is given as: ﬁnd (W, p) ∈ Hw × H p , such that for any (v, q) ∈ Hw × H p :
⎧
I(x)
∂W
⎪
⎪
⎨ D(C)+δ ∂t , v + (∇W, ∇v) = (¯γc ∇pC, ∇v) + Ω4 2F vds,
(17)
⎪
⎪
⎩ K ∇p, ∇q = 0.
ν
Chn

Deﬁne piecewise linear polynomial ﬁnite element spaces, S h ⊆ Hw , T h ⊆ H p , S¯ h ⊆ H¯ w and T¯ h ⊆ H¯ p . Given
¯
¯
∈ S h , ﬁnd (Whn+1 , pn+1
h ) ∈ S h × T h such that for any (vh , qh ) ∈ S h × T h ,
⎧
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎩

∂Whn+1
D(Chn )+δ ∂t , vh +
K
n+1
ν ∇ph , ∇qh = 0.

∇Whn+1 , ∇vh = γ¯ c ∇pChn , ∇vh +

I(x)
v ds,
Ω4 2F h

(18)

2172

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

3.2. FEM Approximation Analysis
Lemma 3.1. [18] Suppose p ∈ H k+1 (Ω), then
p − ph

L∞ (L2 )

+ h p − ph

L∞ (H 1 )

≤ Khk+1 p

L∞ (H k+1 )

.

(19)

C

Lemma 3.2. Suppose C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and W = 0 D(w)dw. The norms of C and W have the
relation
d C H k+1 ∩W 1,∞ ≤ W H k+1 ∩W 1,∞ ≤ D C H k+1 ∩W 1,∞ .
(20)
C

Proof. Since W = 0 D(w)dw, by taking derivatives with respect to time and space respectively, one has Wt = D(C)Ct
and ∇W = D(C)∇C. Because d ≤ D(C) ≤ D, (20) can be obtained easily.
Apply the standard ﬁnite element method to (11) for the purpose of error estimate, its weak form is given as: ﬁnd
C, W ∈ Hw , such that
r(C)

∂W
, v + (∇W, ∇v) + (b(C, ∇p) · ∇W, v) = ( f (C, ∇p, Δp), v), ∀v ∈ H¯ w .
∂t

(21)

The semi-discretization form of (11) is given as follows: Find Ch , Wh ∈ S h , such that
r(Ch )

∂Wh
, vh + (∇Wh , ∇vh ) + (b(Ch , ∇ph ) · ∇Wh , vh ) = ( f (Ch , ∇ph , Δph ), vh ), ∀vh ∈ S¯ h .
∂t

(22)

˜ ∈ S h to satisfy
Deﬁne a projection W
˜ vh ) = 0, ∀vh ∈ S¯ h ,
˜ ∇vh ) + (b(C, ∇p) · ∇(W − W),
(∇(W − W),

(23)

then (21) becomes: Find C, W ∈ Hw , such that
r(C)

∂W
˜ ∇v) + (b(C, ∇p) · ∇W,
˜ v) = ( f (C, ∇p, Δp), v), ∀v ∈ H¯ w .
, v + (∇W,
∂t

Lemma 3.3. Suppose C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and W =
(23), then the error estimates for projections are given as
˜
W −W
˜ t
(W − W)

0

0

˜
+h W −W

˜ t
+ h (W − W)

1

1

C
0

(24)

˜ be the projection deﬁned in
D(w)dw. Let W

≤ Khk+1 C

≤ Khk+1 ( C

k+1

k+1

,

+ Ct

(25)
k+1 ).

(26)

˜ = W − Πh W + Πh W − W.
˜ Since Πh W − W
˜ ∈ S¯ h , by (23),
Proof. Let Πh W ∈ S¯ h be the interpolation of W and W − W
˜ ,∇ W − W
˜
∇ W −W

˜ ,W − W
˜
+ b(C, ∇p) · ∇ W − W

˜ , ∇ (W − Πh W) + b(C, ∇p) · ∇ W − W
˜ , W − Πh W .
= ∇ W −W
˜
By (12), ∇ W − W
implies

0

˜
+ W −W
˜
W −W

1

0

≤ K ( ∇ (W − Πh W)

≤ K inf

Πh W∈S¯ h

W − Πh W

(27)

0

+ W − Πh W 0 ), where K is a proper constant. This

1

≤ Khk W

k+1

≤ Khk C

k+1

.

(28)

˜ e ∈ S¯ h , deﬁne w ∈ H 2 (Ω) ∩ H 1 (Ω) to satisfy the adjoint problem of (23):
Let e = W − W,
0
−Δw − ∇(b(C, ∇p) · w) = e,
w = 0.

(29)

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

2173

Then
e

2
0

= − (e, Δw) − e, ∇(b(C, ∇p) · w) = (∇e, ∇ (w − Πh w + Πh w)) + ∇e, b(C, ∇p) · (w − Πh w + Πh w)

= (∇e, ∇ (w − Πh w)) − ∇e, b(C, ∇p) · (w − Πh w) ≤ K e

1

w − Πh w 1 ,

(30)

where Πh w is the interpolation of w with Πh w ∈ S¯ h , and K is a constant. Since w − Πh w
it is easy to see that e 20 ≤ Kh e 1 e 0 . Therefore by (28) and Lemma 3.2,
˜
W −W

0

˜
≤ Kh W − W

1

≤ Khk+1 W

k+1

≤ Khk+1 C

1

k+1

≤ Kh w 2 and w

2

≤ e 0,

.

(31)

Take the derivative with respect to t in (23),
˜ t , ∇vh + bt (C, ∇p) · ∇(W − W),
˜ vh + b(C, ∇p) · ∇(W − W)
˜ t , vh = 0,
∇(W − W)

(32)

(26) can be obtained similarly.
Lemma 3.4. Suppose C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and W =
(23). Then W has the following error estimate result:
3

˜
W −W

C
0

˜ be the projection deﬁned in
D(w)dw. Let W

n

≤ K 1 + |ln h| 2 hk− 2 C

1,∞

k+1

.

(33)

˜ = Ph W ∈ S¯ h , then by (23), W − W
˜ = W − Ph W = (I − Ph )W =
Proof. Deﬁne a projection operator Ph to satisfy W
1
(I − Ph ) (W − Πh W), where I is the identity operator and Ph Πh W = Πh W. Since |ln h|− 2 Ph W 0,∞ + h |Ph W|1,∞ ≤
K W 0,∞ + h |ln h| |W|1,∞ (see [18]), one can obtain
˜
W −W

1

0,∞

≤ K |ln h| 2 + 1 W − Πh W

˜
h W −W

1,∞

≤ K W − Πh W

therefore
˜
W −W

3

0,∞

k+1

n

0,∞

+ h (1 + K |ln h|) |W − Πh W|1,∞ ≤ (K |ln h| + 1) hk+1− 2 W
n

3

1,∞

n

3

+ Kh |ln h| 2 |W − Πh W|1,∞ ≤ K |ln h| 2 + 1 hk+1− 2 W

≤ K |ln h| 2 + 1 hk− 2 W

n

3

k+1

≤ K |ln h| 2 + 1 hk− 2 C

k+1

k+1

,

,

.

(34)
(35)
(36)

In order to carry out the optimal approximation order, k is required to be greater than n − 1 for n ≥ 2. Especially
for the model in this paper, because n = 2, it is required for k to be greater than 1, which implies that a second order
interpolation should be used.
˜ be the projection deﬁned in (23) and
Corollary 3.1. Suppose C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and k > 1. Let W
W=

C
0

D(w)dw. Then one has the following error estimate:
˜
W

∞

˜
+ ∇W

∞

+ Wt

3

1,∞

n

≤ K 1 + |ln h| 2 hk− 2 .

˜
Proof. For C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and k > 1, since n = dim(GDL) = 2, W
3
n
k−
˜
W −W
+ W 1,∞ + Wt 1,∞ ≤ K 1 + |ln h| 2 h 2 .

(37)
∞

˜
+ ∇W

∞

+ Wt

1,∞

≤

1,∞

˜ + (W
˜ − Wh ) = η + ξ and vh = ξ, the error equation of (11) can be achieved by (24)−(22),
Let W − Wh = (W − W)
∂ξ
∂η
∂W
, ξ + r(Ch ) , ξ + r(C) − r(Ch ))
, ξ + (∇ξ, ∇ξ)
∂t
∂t
∂t
˜ ξ + b(Ch , ∇ph ) · ∇ξ, ξ = ( f (C, ∇p, Δp) − f (Ch , ∇ph , Δph ), ξ).
+ b(C, ∇p) − b(Ch , ∇ph ) · ∇W,
r(Ch )

(38)

2174

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

Use (12), (13), when C and Ch are both greater than or both less than C sat , b(C, ∇p) − b(Ch , ∇ph ) ≤ bc ||C − Ch ||0 +
b p ∇ (p − ph )

0

≤ K1 C − C h

0

+ K2 hk ||p||k+1 , where K1 and K2 are constants. When C sat is between C and Ch ,

b(C, ∇p) − b(Ch , ∇ph ) ≤ b(C, ∇p) − b(C sat , ∇ph ) + b(C sat , ∇p) − b(Ch , ∇ph ) ≤ bc ||C − C sat ||0 + bc ||C sat − Ch ||0 +
b p ∇ ||p − ph ||0 ≤ K1 ||C − Ch ||0 + K2 hk ||p||k+1 . Without loss of generality, this technique can be applied to r and f as
well. Use H¨older’s inequality and -inequality,
|( f (C, ∇p, Δp) − f (Ch , ∇ph , Δph ), ξ)| = |− (∇ · (γ(C)∇p) C − ∇ · (γ(Ch )∇ph ) Ch , ξ)|
≤ |(γ(C)∇p, ∇(Cξ)) − (γ(Ch )∇(p − ph ), ∇((C − Ch )ξ))| + |(γ(Ch )∇(p − ph ), ∇(Cξ))|
+ |(γ(Ch )∇p, ∇((C − Ch )ξ)) − (γ(Ch )∇p, ∇(Cξ))|
≤ K h2k + ξ

2
0

+

∇ξ

2
0

+ η

2
0

+ ∇η

2
0

,

(39)

where C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and p ∈ H k+1 (Ω) ∩ W 1,∞ (Ω). Since the ﬁrst term on the left hand side in
(38) can be written as Ω r(Ch ) ∂ξ
∂t ξdx =
both sides of (38) with respect to t,
ξ

2
0

t

+

∇ξ

2
0

0

Ω
t

≤K

r(Ch ) ∂t∂

η

0

2
0

t

+

ηt

0

∂
Ω ∂t

dx =

1 2
2ξ

2
0

t

+

∇η

1
2
2 r(C h )ξ

2
0

0

t

+

dx −

∇ξ

0

2
0

Ω

h
r (Ch ) ∂C
∂t

t

+

ξ

2
0

0

1 2
2ξ

dx, integrate

+ h2k .

(40)

The choice of constant K is made possible by Corollary 3.1. Apply Gronwall’s inequality to (40), thus,
ξ

L∞ (0,T ;L2 )

+ ∇ξ

L2 (0,T ;L2 )

≤K η

L2 (0,T ;L2 )

+ ηt

L2 (0,T ;L2 )

+ ∇η

L2 (0,T ;L2 )

+ hk ,

(41)

and therefore,
C − Ch

L∞ (L2 )

+ C − Ch

L2 (H 1 )

L∞ (L2 )

+ W − Wh

L2 (H 1 )

≤ Khk C

L2 (H k+1 )

+ Ct

L2 (H k+1 )

. (42)

L∞ (L2 ) +

(W − Wh )t

L2 (H 1 )

≤ Khk C

L2 (H k+1 )

+ Ct

L2 (H k+1 )

. (43)

≤ W − Wh

Let vh = ξt in (38), similarly,
(C − Ch )t

L∞ (L2 ) +

(C − Ch )t

L2 (H 1 )

≤ (W − Wh )t

C
0

Theorem 3.1. Suppose C ∈ H 1 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) , p ∈ H k+1 (Ω) ∩ W 1,∞ (Ω), W =
With (12) and (13), the numerical solution of (11) has error estimates as follows:
p − ph

L∞ (L2 )

+ h p − ph

L∞ (H 1 )

≤ Khk+1 p

L∞ (H k+1 )

D(ω)dω and k > 1.

,

(44)

and
C − Ch

L∞ (L2 )

+ C − Ch

L2 (H 1 )

+ (C − Ch )t

L∞ (L2 )

+ (C − Ch )t

L2 (H 1 )

≤ Khk C

L2 (H k+1 )

+ Ct

L2 (H k+1 )

.

(45)

4. Fully Discrete Scheme and Its Error Estimate
4.1. Fully Discretization
In this section, a fully discrete scheme is designed for the model using Crank-Nicolson Scheme and also its error
estimate is given.
1
1
Deﬁne ϕi = ϕ(ti ), ϕi+ 1 = ϕ(ti+ 1 ), ∂t ϕn+ 2 = ϕn+1Δt−ϕn and ϕn+ 2 = ϕn+12+ϕn , where 0 = t0 < t1 < · · · < tN = T , Δt = NT ,
2
2
ti = iΔt and ti+ 12 = i + 12 Δt. (i = 0, 1, · · · , N.) Let (21) take value at tn+ 12 , and the projection deﬁned as (23),
⎞
⎛
⎟⎟
⎜⎜⎜
∂W
˜ n+ 1 , v = f Cn+ 1 , ∇pn+ 1 , Δpn+ 1 , v .
˜ n+ 1 , ∇v + b Cn+ 1 , ∇pn+ 1 · ∇W
⎜⎜⎝r Cn+ 1
, v⎟⎟⎟⎠ + ∇W
2
2
2
2
2
2
2
2
∂t n+ 1

(46)

2

Apply Crank-Nicolson Scheme to (11),
n+ 12

r Ch

n+ 12

∂t Wh

n+ 12

, vh + ∇Wh

n+ 12

, ∇vh + b Ch

n+ 12

, ∇ph

8

n+ 12

· ∇Wh

n+ 12

, vh = f C h

n+ 1

n+ 12

, ∇ph 2 , Δph

, vh .

(47)

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

2175

4.2. Error Estimates
The error equation of the discrete scheme described in section 4.1 is achieved by (46)−(47):
⎞
⎛
⎟⎟
⎜⎜⎜
1
1
1
∂W
n+ 12
n+ 12
˜ n+ 1 − b C n+ 2 , ∇pn+ 2 · ∇W n+ 2 , vh
∂t Wh , vh ⎟⎟⎟⎠ + b Cn+ 12 , ∇pn+ 12 · ∇W
− r Ch
⎜⎜⎝r Cn+ 12
h
h
h
2
∂t n+ 1
2

˜ n+ 1 −
+ ∇W
2

n+ 1
∇Wh 2 , ∇vh

n+ 12

= f Cn+ 12 , ∇pn+ 12 , Δpn+ 12 − f Ch

n+ 1

n+ 12

, vh .

, ∇ph 2 , Δph

(48)

˜ +W
˜ − Wh = η + ξ, (48) becomes:
Use the fact that W − Wh = W − W
⎛
⎞ ⎛
⎞ ⎞
⎛
11
⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟ ⎟⎟
∂W
⎜⎜⎜ ∂W
n+ 12
n+ 12 ⎜
n+ 12 ⎟
⎜
⎟
⎜
1
Gi = ⎜⎝ r Cn+ 2 − r Ch
, vh ⎟⎠ + ⎜⎝r Ch
− ∂t W ⎟⎟⎟⎠ , vh ⎟⎟⎟⎠
⎜⎝
∂t n+ 1
∂t n+ 1
1
2
⎞2 ⎞ ⎛
⎞
⎛
⎛
⎟
⎟
⎟⎟⎟
⎜⎜⎜
⎜
1 ⎜
1
1
1
∂η
∂η
⎟⎟⎟ ⎟⎟⎟ ⎜⎜⎜
⎜
n+
n+ 2
n+ 1
,
v
+ ⎜⎜⎝r Ch 2 ⎜⎜⎜⎝∂t ηn+ 2 −
,
v
+
r
C
⎟⎠ h ⎟⎠ ⎜⎝
⎟⎠ + r Ch 2 ∂t ξn+ 2 , vh
h⎟
h
∂t n+ 1
∂t n+ 1
2

˜
˜ n+ 1 − ∇W
+ ∇W
2
n+ 12

+ b Ch

n+ 12

n+ 12

2

, ∇vh + ∇ξ

n+ 12

n+ 12

, ∇vh + b Cn+ 12 , ∇pn+ 12 − b Ch
1

n+ 12

˜ n+ 1 , vh
· ∇W
2

, ∇ph

1

˜ n+ 12 , vh + b C n+ 2 , ∇pn+ 2 · ∇ξn+ 12 , vh
˜ n+ 1 − W
·∇ W
h
h
2

, ∇ph

n+ 12

− f Cn+ 12 , ∇pn+ 12 , Δpn+ 12 − f Ch

n+ 1

n+ 12

, vh = 0,

, ∇ph 2 , Δph

(49)

where Gi is the ith term in (49).
1
1
n+ 1
n+ 1
Without loss of generality, let ζc be between C n+ 2 and Ch 2 and ζ p be between pn+ 2 and ph 2 . By Taylor’s
1
n+ 12
expansion ∂ϕ
= O(Δt)2 |ϕttt | and ϕn+ 12 − ϕn+ 2 = O(Δt)2 |ϕtt |, the following technique is used to G7 :
1 − ∂t ϕ
∂t
n+ 2

n+ 12

b Cn+ 1 , ∇pn+ 1 − b Ch
2

2

n+ 12

, ∇ph

1

2

≤ K O (Δt)2 + ξ

+η

n+ 12
0

1

n+ 12

1

2

≤ O (Δt)2 bccCt2 + 2bcpCt ∇pt + b pp ∇p2t + bcCtt + b p ∇ptt + bc
n+ 12

1

≤ b Cn+ 1 , ∇pn+ 1 − b C n+ 2 , ∇pn+ 2 + b C n+ 2 , ∇pn+ 2 − b Ch
∂ζ p
∂ζc
+ bp
∂C
∂p

1

1

n+ 12

, ∇ph

n+ 12

1

ξn+ 2 + ηn+ 2

+ ∇ pn+ 2 − ph

0

+ hk .

0

(50)

When C ∈ H 3 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) and p ∈ H k+1 (Ω) ∩ W 1,∞ (Ω), by (12), (13) and corollary 3.1, the choice of
1

1

2

1

2

2

1

2

1

constant K in (50) is possible. Let vh = ξn+ 2 , G11 ≤ K ξn+ 2 + ∇ξn+ 2 + ηn+ 2 + ∇ηn+ 2 + h2k + O(Δt)4 .
0
0
0
0
Apply Taylor’s expansion to G2 , G3 , G6 and G9 ; and apply (50) similarly to G1 and G8 . Keep only G5 and G7 on the
left hand side and neglect all the constants. Now (48) can be written as the following inequality:
1

1

∂t ξn+ 2

ξn+ 2

0

1

0

+ ∇ξn+ 2

2
0

1

≤ ξn+ 2

2
0

2

1

∇ξ n+ 2

+

0

1

+ ηn+ 2

2
0

1

+ ∇ηn+ 2

2
0

+ h2k + O(Δt)4 .

(51)

Take the sum from 0 to M on both side, 0 ≤ M ≤ N − 1. By using the telescoping skill and -inequality, (51) becomes:
1
2Δt

ξ M+1

2
0

− ξ0

2
0

M
1

∇ξn+ 2

+
n=0

M

Since
n=0

1

ξn+ 2

2
0

=

M+1
n=0

2
0

M
1

ξn+ 2

≤K
n=0

2
0

1

+ ηn+ 2

2
0

1

+ ∇ηn+ 2

2
0

M
1

∇ξn+ 2

+ (Δt)4 + h2k +
n=0

2
0

. (52)

ξn 20 , use Gronwall’s inequality,

⎛
⎜⎜⎜
⎜⎜⎜ M+1
⎜⎜⎜ ξ
⎝

M+1

+
0
n=0

⎞2
⎟⎟⎟
⎟
∇ξn 20 ⎟⎟⎟⎟⎟ ≤ ξ M+1
⎠

2
0

M+1

+

∇ξ n
n=0

2
0

≤ K h2k + (Δt)4 + ξ0

2
0

.

(53)

2176

Yuzhou Sun et al. / Procedia Computer Science 18 (2013) 2167 – 2176

Because u0 is given, one can pick uh,0 to approximate u0 such that u0 − uh,0

0

≤ Chk+1 , thus ξ0

example is to let uh,0 be the interpolation of u0 . Furthermore, let J = M + 1, ξ J 0 + K
Therefore,
⎛ J
⎞ 12
⎟
⎜⎜⎜⎜
2 ⎟
(W − Wh ) J L2 + ⎜⎝
(W − Wh )n H 1 ⎟⎟⎟⎠ ≤ K hk + (Δt)2 .

J
n=0

∇ξn

2
0

0

≤ Chk+1 . One

≤ K hk + (Δt)2 .

(54)

n=0

Lemma 4.1. [18] Suppose p ∈ H k+1 (Ω), and 1 ≤ J ≤ N, then
(p − ph ) J

L2

+ h (p − ph ) J

H1

≤ Khk+1 .

(55)
C

Theorem 4.1. Suppose p ∈ H k+1 (Ω) ∩ W 1,∞ (Ω), C ∈ H 3 0, T ; H k+1 (Ω) ∩ W 1,∞ (Ω) , W = 0 D(ω)dω, k > 1 and
1 ≤ J ≤ N. With (12) and (13), the numerical solution of (11) generated by (47) has error estimates as follows:
(p − ph ) J
and
(C − Ch ) J

L2

⎛
⎜⎜
+ ⎜⎜⎜⎝

L2

J

+ h (p − ph ) J

H1

≤ Khk+1 ,

⎞ 12
⎟⎟
(C − Ch )n 2H 1 ⎟⎟⎟⎠ ≤ K hk + (Δt)2 .

(56)

(57)

n=0

Acknowledgments
M. He was supported by NSFC (Grants No.11101311), P. Sun was supported by NSF DMS-0913757.
References
[1] C. Wang, Fundamental models for fuel cell engineering, Journal of the Electrochemical Society 104 (2004) 4727–4766.
[2] Y. Wang, C. Wang, Transient analysis of polymer electrolyte fuel cells, Electrochimica Acta 50 (2005) 1307–1315.
[3] S. Um, C. Wang, Three-dimensional analysis of transport and electrochemical reaction in polymer electrolyte fuel cells, Journal of Power
Sources 124 (2004) 40–51.
[4] Z. Wang, C. Wang, K. Chen, Two-phase ﬂow and transport in the air cathode of proton exchange membrane fuel cells, Journal of Power
Sources 94 (2001) 40–50.
[5] Y. wang, S. Basu, C. Wang, Modeling two-phase ﬂow in PEM fuel cell channels, Journal of Power Sources 179 (2008) 603–617.
[6] T. V. Nguyen, R. E. White, A water and heat management model for proton-exchange-membrane fuel cells, Electrochem Soc 140 (1993)
2178–2186.
[7] S. Um, C. Wang, Computational study of water transport in proton exchange membrane fuel cells, Journal of Power Sources 156 (2006)
211–223.
[8] J. H. Nam, M. Kaviany, Eﬀective diﬀusivity and water-saturation distribution in single-and two-layer pemfc diﬀusion medium, International
Journal of Heat and Mass Transfer 46 (2003) 4595–4611.
[9] P. Sun, S. Zhou, Q. Hu, G. Liang, Numerical study of a 3D two-phase pem fuel cell odel via a novel automated ﬁnite element/ﬁnite volume
program generator, Communications in Computational Physics 11 (2012) 65–98.
[10] P. Sun, G. Xue, C. Wang, J. Xu, A domain decomposition method for two-phase transport model in the cathode of a polymer electrolyte fuel
cell, Journal of Computational Physics 228 (2009) 6016–6036.
[11] P. Sun, G. Xue, C. Wang, J. Xu, Fast numerical simulation of two-phase transport model in the cathode of a polymer electrolyte fuel cell,
Communications in Computational Physics 6 (2009) 49–71.
[12] P. Sun, G. Xue, C. Wang, J. Xu, A combined ﬁnite element-upwind ﬁnite volume-newton’s method for liquid feed direct methanol fuel cell
simulations, in: Engineering, T. Conference (Eds.), Proceeding of Sixth International Fuel Cell Science, 2008, pp. 851–864.
[13] P. Sun, Modeling studies and eﬃcient numerical methods for proton exchange membrane fuel cell, Computer Methods in Applied Mechanics
and Engineering 200 (2011) 3324–3340.
[14] T. Arbogast, M. Wheeler, N. Zhang, A nonlinear mixed ﬁnite element method for a degenerate parabolic equation arising in ﬂow in porous
media, SIAM Society for Industrial and Applied Mathematics 33 (1996) 1669–1687.
[15] N. Eyres, D. Hartree, J. Ingham, R. Jackson, The calculation of variable heat ﬂow in solids, Philosophical Transactions of the Royal Society
A240 (1946) 1–57.
[16] M. Rose, Numerical methods for ﬂows through porous media, Mathematics of Computation 40 (1983) 435–467.
[17] C. Wang, P. Cheng, A multiphase mixture model for multiphase, multicomponent transport in capillary porous media I. Model development,
International Journal of Heat and Mass Transfer 39 (1996) 3607–3618.
[18] P. G. Ciarlet, The Finite Element Method for Elliptic Problems, North-holland, New York, 2002.

