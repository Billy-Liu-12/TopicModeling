Dynamic Dominant Index Set for Mobile
Peer-to-Peer Networks
Wei Shi, Shanping Li, Gang Peng, and Xin Lin
College of Computer Science, Zhejiang University,
Hangzhou, P.R. China 310027
shiwei@zj165.com
shan@cs.zju.edu.cn
{e pglmary, alexlinxin}@hotmail.com

Abstract. Eﬃcient locating mechanism is the key issue of establishing peer-to-peer (P2P) resource sharing for mobile Ad Hoc networks
(MANET). In this paper, a simple concept of Dynamic Dominant Indexing Set (DDIS) is proposed. By periodically advertising information
of shared resources on the backbone of current network topology in a distributed fashion, DDIS gains great improvement on user response time,
fault tolerance and scalability. Simulations indicate that DDIS simpliﬁes
the searching process and greatly reduces the response delay and thus,
it is more appropriate for mobile peer-to-peer source sharing especially
in emergent situations.

1

Introduction

Inviting P2P model into mobile ad hoc networks (MP2P) to address problems
encountered during the development of mobile ad hoc networks (MANETs) is
proved to be a promising method. Like P2P computing, one of the major challenges of MP2P computing is resource locating and routing. In order to improve
users’ experience, mechanisms are seriously required to quickly locate the desired
information.
To address resources locating problem in MP2P, we should take following
factors into account: 1) in order to lookup the resources more accurately, locating
mechanism should guarantee the freshness of search results; 2) many scenarios in
MP2P environment, for example emergency rescue and combat, require searching
response time as short as possible; 3) being aware of the entire network topology
is a mission impossible for mobile devices; and 4) individual peer’s fault will not
cause the crash of the whole system.
Establishing a dynamic lookup set should be an eﬃcient and feasible approach
in MP2P networks. In this paper, we propose a locating mechanism in MP2P
This paper is supported by National Natural Science Foundation of China
(No. 60473052) and Zhejiang Provincial Natural Science Foundation of China
(No.602032).
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3516, pp. 995–999, 2005.
c Springer-Verlag Berlin Heidelberg 2005

996

W. Shi et al.

environment called Dynamic Dominant Index Set (DDIS). DDIS dynamically
constructs the index set which is based on the Minimum Connected Dominating
Set (MCDS). MCDS is the minimum set of nodes such that every node in the
network is either in the set or is a neighbor of a node in the set. According to
the information of shared resources periodically published on MCDS, peers can
locate the resources quickly by consulting a limited number of peers rather than
bothering more other peers. However, ﬁnding the MCDS of a speciﬁc network
has been proved to be a NP-complete problem [1]. We improved the Dominating
Pruning (DP) algorithm that proximately solves the MCDS problem in a distributed fashion. With the help of the improved DP algorithm, the DDIS mechanism can build the MCDS-based index set of current MP2P network topology
in a more eﬃcient way.
The paper is organized as follows. In the next section, the related work is
discussed. Section 3 introduces our searching mechanism. Simulation results and
analyzes are presented in section 4. Finally we conclude our study in section 5.

2

Related Work

In [2] the author put forward a locating mechanism in MP2P network, named
PDI. PDI gains considerably good performance. The Dominating Pruning (DP)
algorithm [1], computes the approximation of MDCS in a distributed manner
according to 2-hop neighborhood information. But DP algorithm only concentrates on constructing an eﬃcient routing algorithm by reducing the broadcast
redundancy in MANET and does not take into account the MP2P-speciﬁc factors. DDIS improves DP to make it more suitable for building an eﬀective search
index in MP2P environment.

3

The DDIS Mechanism

Here, the unit disk graph [3],G=(V,E ), is introduced to represent a MP2P
network, where V represents a set of mobile peers and E represents a set of
edges. We use N (u) to represent the neighbor set of u. N (N (u)) represents
the neighbor set of N (u). And we assume that u (sender) and v (receiver) are
neighbors.
In our scenario, when a peer launches or forwards an advertising packet, it
would decide the forward list around itself. The forward list in the advertising
packet would notify his neighbors who belong to the index set and should take
the responsibility to cache the metadata in the advertising packet. Meanwhile,
by analyzing the forward list in the advertising packet, the receivers can calculate their own forward lists in a more accurate fashion, which will reduce the
broadcast redundancy.
Peer willing to share his resources periodically launches a “ADV” broadcast
containing the peer’s id, the information of his shared resource, the expiring
time of shared resource, and the forward list of that packet. Due to the nature

Dynamic Dominant Index Set for Mobile Peer-to-Peer Networks

997

of broadcasting in MANET, all neighbors around the source peer will get the
packet and only the peers in the forward list of that packet are suggested to cache
and forward the packet. Others can just simply discard it. Then the receivers
calculate their own forward lists and rebroadcast the packet from the source
peer. This process continues until the whole network is covered. The forward list
of v in DDIS can be computed in the following way, note that F (u) here denotes
as the forward list of u passed to v:
1. Let F (u, v) = [] (empty list), Z = φ (empty set) and K = ∪Si where
Si = N (vi )∩(U (u, v)−N (N (v)∩F (u))), Si = N (vi ∩P (u, v)) for vi ∈ B(u, v).
2. If there exists any peer w in P that v can notify only through vn , F (u, v) =
F (u, v) vn , Z = Z ∪ Sn , K = K − Sn , and Sj = Sj − Sn for all Sj ∈ K. This
step repeats until no peer in P that v can notify only through vn .
3. Find set Sk with the maximum size in K. (In case of a tie, the one with the
smallest identiﬁcation k is selected.)
4. F (u) = F (u, v) vk , Z = Z ∪ Sk , K = K − Sk , and Sj = Sj − Sk for all
Sj ∈ K.
5. If no new node is added to Z, exit; otherwise, goto step 3.
Here B(u, v) = N (v) − N (u). DP algorithm evaluates the number of peers
in U (u, v) = N (N (v)) − (N (u) ∪ N (v)), so called “evaluating peers”, which can
be covered by vi in decision of including/excluding vi in/from F (u, v). However,
the evaluating peers can be even fewer because the peers in the forward list of
u will notify the ones in N (N (v) ∩ F (u)). So these peers can be safely excluded
from U (u, v) in DDIS and the evaluating peers can be denoted as P (u, v) =
U (u, v) − N (N (v) ∩ F (u)), recall that U (u, v) represents the uncovered peers 2
hops away from v in DP algorithm.
In selection process of building forward list, DDIS ﬁrstly picks up the neighbors that will consequentially be included in v’s forward list because without
them v can not inform all the peers in P (u, v). In DP algorithm, these peers,
what we call “key neighbors” in this paper, will also be inevitably included in
forward list. But since DP algorithm is a kind of greedy algorithm and the selection sequence is random, there may exist unnecessary peers in resulting forward
list whose coverage is a part of union of key peers’ neighbors. By choosing key
neighbors ﬁrstly, the forward list of DDIS can be smaller than the one that DP
algorithm builds.
With the help of the improved DP algorithm, DDIS can deliver the metadata of shared resources on the dominant index set of current network topology
more eﬃciently. Peers in DDIS frequently check whether the cached metadata
is expired. Querying peer ﬁrstly checks his cached data to see whether there is
information of the required resources or, otherwise, just asks his neighbors to
ﬁnd where the required resources are.

4

Performance Results

In this section, we present the simulation results of our DDIS mechanism. We
used an IEEE 802.11 standard MAC layer and a standard physical layer de-

998

W. Shi et al.
100%

DDIS

400

Flooding Search

60%
40%

5sec
10sec
15sec
20sec

20%

Response Time (unit)

Hit Rate

80%
300

200

100

0%

0

10

20

40

60

80

100

120

10

Number of Peers

Fig. 1. Hit rate of DDIS with diﬀerent advertising intervals

20

40

60

80

100

120

Number of Peers

Fig. 2. Response time of the two mechanisms

ploying two-ray ground propagation as radio propagation model. NP eers peers
roaming in an area of 1000m × 1000m. Fig. 1 illustrates the hit rate of DDIS
with diﬀerent advertising intervals. As we can see, the shorter advertising interval we set, the higher hit rate we get. However, the performance improvement is
achieved at the expense of heavier overhead. Balancing the accuracy of queries
and the overhead DDIS must pay needs more eﬀorts of study. From Fig. 2, the
main advantage of DDIS can be learned. By dynamically caching the metadata
of the peers on the backbone of current network, DDIS gains great improvement
on user response time compared with ﬂooding search mechanism. Our goal is
to build a small index set to aﬀect all the peers in the network. By putting
the metadata around the participants, they can quickly locate their favorable
resources without more eﬀorts. Since the required information is put closely to
the requiring peers, the response time of DDIS changes little when the number of participants grows. The ﬂooding search mechanism, on the contrary, by
broadcasting in the network to locate the target peer which may be far away
from the querying peer takes about average 2 to 3 times longer than DDIS to
response the users’ queries.

5

Conclusions and Future Work

In this paper, we put forward a novel concept of DDIS. In fact, DDIS is a kind of
replication of index center. By selecting peers in MDCS, the advertisements are
delivered close to every peer, which is especially valuable in emergent situations
where response time is much more the key issue.

References
1. H. Lim and C. Kim: Flooding in wireless ad hoc networks. Computer Communications Journal, 24(3-4): 353-363, 2001.

Dynamic Dominant Index Set for Mobile Peer-to-Peer Networks

999

2. C. Lindemann and O. Waldhorst: A Distributed Search Service for Peer-to-Peer
File Sharing in Mobile Applications. Proc. The 2nd International Conference on
Peer-to-Peer Computing, September 2002.
3. B.N. Clark, C.J. Colbourn, and D.S. Johnson: Unit Disk Graphs. Discrete Math,
vol. 86, pp. 165-177, 1990.

