Application of the Pseudo-Transient Technique
to a Real-World Unsaturated Flow Groundwater
Problem
Fred T. Tracy1 , Barbara P. Donnell2 , Stacy E. Howington2 ,
and Jeﬀrey L. Hensley1
1
Information Technology Laboratory,
Major Shared Resource Center (MSRC)
2
Coastal and Hydraulics Laboratory,
Engineer Research and Development Center (ERDC),
Vicksburg, MS, USA 39180

Abstract. Modeling unsaturated ﬂow using numerical techniques such
as the ﬁnite element method can be especially diﬃcult because of the
highly nonlinear nature of the governing equations. This problem is even
more challenging when a steady-state solution is needed. This paper
describes the implementation of a pseudo-transient technique to drive the
solution to steady-state and gives results for a real-world problem. The
application discussed in this paper does not converge using a traditional
Picard nonlinear iteration type ﬁnite element solution. Therefore, an
alternate technique needed to be developed and tested.

1

Introduction

Modeling unsaturated ﬂow using numerical techniques such as the ﬁnite element method can be especially diﬃcult because of the highly nonlinear nature
of the governing equations. This challenge is even more exacerbated when (1)
a steady-state solution is needed, (2) soil properties such as relative hydraulic
conductivity go from almost horizontal to almost vertical (see Fig. 1), (3) an
inﬂux of water from rainfall occurs at the top of very dry, low hydraulic conductivity unsaturated soil, (4) injection wells are in the unsaturated zone (see
IG-1 in Fig. 2), and (5) some pumped wells become totally above the water table
or in the unsaturated zone. An early version of the data set for the application
discussed in this paper has all of these traits, and the steady-state solution does
not converge using a traditional Picard nonlinear iteration ﬁnite element solution. The data set needed to be modiﬁed to relieve some of the above problems,
but a converged solution was needed to know what changes to make. Therefore,
an alternate solution was developed and tested. This paper describes the implementation of a modiﬁed version of a pseudo-transient technique described in
[3] to drive the solution to steady-state and gives computational results for this
real-world application.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 66–73, 2005.
c Springer-Verlag Berlin Heidelberg 2005

Application of the Pseudo-Transient Technique

67

Fig. 1. This ﬁgure illustrates the relative hydraulic conductivity versus pressure head
curve for soils such as sand where the curve goes from almost horizontal to near vertical
rather quickly

Fig. 2. This ﬁgure shows the top twenty layers of the mesh. There are 18 diﬀerent
material types. A large injection well, IG-1, in the unsaturated zone is also shown

The computer model used in this study is the parallel version [7] of FEMWATER [5], which is a groundwater ﬂow and transport code. The ﬁnite element
mesh is partitioned using METIS [2].

68

2

F. T. Tracy et al.

Description of the Application

The problem consists of modeling the remediation of a military site using a
pump-and-treat system. The ﬁnite element mesh uses 402,628 nodes and 779,328
three-dimensional prism ﬁnite elements. There are 18 diﬀerent soil types, 9 injection wells, 1 chimney drain which also injects water, and 38 extraction wells.
Once the model is properly calibrated with observed data, it is then used to
predict the eﬃciency of a proposed pump-and-treat system. Table 1 shows the
saturated hydraulic conductivities for the three material types at the top of the
ground (16-18 in Fig.2). The incredibly small kz = 0.0001 ft/hour where the
ground is very dry and water from precipitation is coming into the system adds
signiﬁcantly to the diﬃculty of convergence.
Table 1. Saturated hydraulic conductivities (ft/hour)
Material Number

3

kx

ky

kz

16

1.042 1.042 0.008

17

0.08

0.08

18

0.01

0.01 0.0001

0.008

Flow Equations

Pressure head for steady-state conditions in FEMWATER is modeled by applying conservation of mass to obtain,
∇ · kr (h) ks · ∇h +

ρ
∇z
ρ0

Nss

+

ρ∗m
Qm δ (r − rm ) = 0 ,
ρ
m=1 0

(1)

p
.
(2)
ρ0 g
where δ is the Dirac delta function, g is the acceleration due to gravity, h is the
pressure head, kr (h) is the highly nonlinear relative hydraulic conductivity, ks
is the saturated hydraulic conductivity tensor, Nss is the number of source/sink
nodes for ﬂow, Qm is the quantity of ﬂow at the mth source/sink node, p is the
pressure, ρ is the density with contaminant, ρ0 is the density without contaminant, ρ∗m is the density of the mth source/sink ﬂuid, r is a vector from the origin
to an (x, y, z) point in space, and rm is the location of the mth source/sink node.
The Galerkin ﬁnite element method is then applied to obtain
h=

K (h) h = Q (h) .

(3)

Here K (h) is the stiﬀness matrix, h is a vector of pressure heads at the ﬁnite
element nodes, and Q (h) is a collection of ﬂow type terms for the right-hand
side. Eq. 3 is the resulting system of nonlinear equations to be solved.

Application of the Pseudo-Transient Technique

4

69

Solution of the System of Nonlinear Equations

A Newton iteration [4] to reduce the nonlinear residual,
F (h) = Q (h) − K (h) h .
is given by

−1

hn+1 = hn − F (hn )
F (h)ij =

(4)

F (hn ) ,

(5)

∂ (F)i
(h) .
∂ (h)j

(6)

where F (h) is the Jacobian matrix. FEMWATER uses a Picard iteration, which
is equivalent to approximating the Jacobian matrix by −K. This produces
Qn − Kn hn = K−1
hn+1 = hn + K−1
n
n Qn .

(7)

The disadvantage of the Picard approximation is the loss of potentially important terms, but the advantage is that the system of simultaneous, linear
equations to be solved (Eq. 7) remains symmetric and positive-deﬁnite. Thus, a
parallel preconditioned conjugate gradient solver works quite well.
4.1

Convergence of the Steady-State Problem

Because of factors such as the severe relative hydraulic conductivity curve shown
in Fig. 1, the steady-state solution for this data set did not converge. Convergence
is helped somewhat by adding a dynamic type relaxation to the Picard iteration
as follows:
¯ n+1
hn+1 = (1 − αn+1 ) hn + αn+1 h

0 < αn+1 ≤ 1 ,

¯ n+1 = K−1 Q .
h
n
n

(8)
(9)

where the relaxation factor αn+1 is adjusted based on whether the maximum
max
¯ n+1 for
absolute value of the pressure head change | h|n+1 between hn and h
all the N ﬁnite element nodes,
N
max
¯ n+1
| h|n+1 = max h
i=1

max

decreased or increased from | h|n
αn+1 = min (αn +

αn+1 = max (fα αn , αmin )

α,

i

− (hn )i .

(10)

. The adjustment used is

αmax )
max

max

max

| h|n+1 ≤ | h|n
max

| h|n+1 > | h|n

,

, 0 < fα < 1 .

(11)

(12)

where α , fα , αmin , and αmax are input variables. Values that worked well for
this application are α = 0.005, fα = 0.667, αmin = 0.01, and αmax = 0.5.

70

F. T. Tracy et al.

4.2

Pseudo Time-Step Implementation

For those problems such as the initial data set used in this study where the
steady-state Picard iteration would not converge, an additional term is added
to Eq. 3 to produce
f m+1 M hm+1

hm+1 − hm + K hm+1 hm+1 = Q hm+1

.

(13)

where f m+1 is a multiplication factor equivalent to the reciprocal of a time
increment for pseudo time-step m + 1, hm is pressure head for pseudo time-step
m, and after some experimentation, M was chosen to be the diagonal of K.
Adding this term is acceptable because eventually steady-state will be achieved,
and thus hm+1 ≈ hm , causing the additional term to vanish. The Picard iteration
for this implicit Euler approximation now becomes,
m+1
Mm+1
+ Km+1
hm+1
n
n
n+1 = f

−1

Qnm+1 + f m+1 Mm+1
hm
n

.

(14)

To compute f m+1 , the norm of the residual must ﬁrst be computed. The
residual is computed from
Fm+1
hm+1
= Q1m+1 + f m+1 Mm+1
hm − f m+1 Mm+1
+ Km+1
.
1
1
1
1
1

(15)

But since the pressure head at time-step m is the same as that of the ﬁrst
nonlinear iteration of time-step m + 1,
= hm ,
hm+1
1

(16)

Fm = Q m − Km hm .

(17)

Eq. 15 becomes
Using the discrete l2 norm on RN ,
Fm =

1
N

N
2

i=1

(Fm )i ,

(18)

f m+1 is computed by using a version of the switched evolution relaxation (SER)
algorithm [6] as follows:
Fm
f m+1 = f m m−1 .
(19)
F
In most cases, the nonlinear iteration for a pseudo time-step converged in
a few Picard iterations. However, occasionally the same instability that caused
the need for the pseudo time-step algorithm in the ﬁrst place generated a lack
of convergence after 50 iterations. If that happened, f m+1 was modiﬁed by
1
f m+1 = f m+1 + f 0 .
2

(20)

Application of the Pseudo-Transient Technique

71

every 50 iterations until convergence occurred. f 0 is computed from the input
value of t by
1
.
(21)
f0 =
t
Also,
f1 = f0 .

(22)

The advantage of this approach is that each new pseudo time-step brings the
solution closer to steady-state, and the added term in Eq. 13 is simpler than
the real transient term that could be used. Doing only one nonlinear iteration
per pseudo time-step was also tried, but for this application, the instability so
dominated that a full convergence of each pseudo time-step seemed best. For this
data set, f m+1 always became so small that the inherent instability reemerged
such that f m+1 would become bigger. However, the residual gradually became
smaller for most pseudo time-steps. Initially, a number of traditional Picard
nonlinear iterations (f m+1 = 0) are done, and only if convergence is not achieved
the traditional way is the pseudo time-stepping started. This way, only isolated
areas in the unsaturated zone need further adjustment.

5

Results

The application data set was run on the ERDC MSRC SGI 3900 with 32 processors using the material properties given in Table 1 with additional data described in Table 2. Time required to do the computation was 19,593 seconds
(5.4425 hour). It was not practical to do a true transient solution with the material properties given in Table 1, as convergence was so diﬃcult, even when
increasing the pumping rates and precipitation ﬂux gradually. Thus the material properties were modiﬁed as shown in Table 3 to an easier problem. The
consequence of changing the material data is that a diﬀerent problem is solved.
It will, however, allow the comparison of errors between a true transient solution
and a more diﬃcult problem solved by the pseudo time-stepping technique.
To determine accuracy, six wells in the unsaturated zone are examined for
error between the input pumping rates and those produced after the solution
process. The true transient solution was run for a simulation time of 288 hours

Table 2. Computational data
Number of traditional Picard iterations

1,000

Tolerance for convergence of Picard iterations 0.0005
Number of pseudo time-steps
t for computing f

0

1,000
0.05

72

F. T. Tracy et al.
Table 3. Modiﬁed saturated hydraulic conductivities (ft/hour)
Material Number

kx

ky

kz

16

1.042 1.042 0.1042

17

0.04

0.04

0.004

18

0.02

0.02

0.002

Table 4. Errors in well pumping rates
Well Number Pseudo time-stepping True transient
1

3.12E-09

1.52E-05

2

-3.22E-07

1.20E-05

3

-4.67E-05

7.39E-06

4

4.15E-09

4.64E-06

5

2.31E-09

-1.86E-04

6

-6.67E-07

2.63E-05

using the relaxed soil properties. Table 4 shows a comparison of the error in the
well pumping rates for the two diﬀerent techniques.

6

Conclusions

The pseudo time-stepping algorithm gives an acceptable alternative to achieving a steady-state solution to the highly nonlinear unsaturated ﬂow groundwater
problem when convergence is not obtained by traditional methods. Further, automatic determination of the pseudo time-step size is easily found. Results also
show that accuracy can be achieved easier than doing a true transient computation. For this application, the pseudo time-stepping algorithm is currently the
only way found thus far to achieve a solution because of the complexities of the
true transient term which is also highly nonlinear.

7

Future Work

As described in [1], alternate approaches will next be investigated. One example
is to use Newton iterations with line search after a given number of Picard iterations have been completed. Also, the nonlinear Newton-Krylov solvers described
in [8] will be investigated.

Application of the Pseudo-Transient Technique

73

Acknowledgment
This work was supported in part by a grant of computer time from the Department of Defense High Performance Computing Modernization Program at the
ERDC MSRC.

References
1. Farthing, M.W., Kees, C.E., Coﬀet, T.S., Kelley, C.T., and Miller, C.T.: Eﬃcient
Steady-State Solution Techniques for Variably Saturated Groundwater Flow. Adv.
in Water Res., 26(2003), 833-849
2. Karypis, G.: METIS (computer program). http://www.users.cs.umn.edu/∼karypis/
metis/, University of Minnesota, Minneapolis, MN (2004)
3. Kawanagh, K.R. and Kelley, C.T.: Pseudo Transient Continuation for Nonsmooth
Nonlinear Equations. Draft paper, North Carolina State University, Raleigh, NC
(2003)
4. Kelley, C.T.: Solving Nonlinear Equations with Newton’s Method, SIAM, Philadelphia (2003), 2
5. Lin, H.J., Richards, D.R., Talbot, C.A., Yeh, G.T., Cheng, J.R., Cheng, H.P., and
Jones, N.L.: FEMWATER: A Three-Dimensional Finite Element Computer Model
for Simulating Density-Dependent Flow and Transport in Variably Saturated Media. Technical Report CHL-97-12, U.S. Army Engineer Research and Development
Center (ERDC), Vicksburg, MS (1997)
6. Mulder, W. and Lebr, B.V.: Experiments with Typical Upwind Methods for the
Euler Equations. J. Comp. Phys., 59(1985), 232-246
7. Tracy, F.T., Talbot, C.A., Holland, J.P., Turnbull, S.J., McGehee, T.L., and Donnell,
B.P.: The Application of the Parallelized Groundwater Model FEMWATER to a
Deep Mine Project and the Remediation of a Large Military Site. DoD HPC Users
Group Conference Proceedings, Monterey, CA (1999)
8. Wheeler, M.F., Kle, H., Aksoylu, B., and Eslinger, O.: Nonlinear Krylov Based
Solvers. PET Report, University of Texas at Austin, Austin, TX (2005)

