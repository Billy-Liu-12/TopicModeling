Procedia Computer
Science
Procedia
Computer Science
Science 001 (2010)
Procedia
Computer
(2012)1–9
1921–1929

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

A mimetic tensor artiﬁcial viscosity method for arbitrary
polyhedral meshes✩
Konstantin Lipnikov1,∗, Mikhail Shashkov1
a Applied

Mathematics and Plasma Physics Group, Los Alamos National Laboratory, MS B284, Los Alamos, NM 87545, USA

Abstract
We construct a new mimetic tensor artiﬁcial viscosity on general polyhedral meshes. The tensor viscosity is
designed as a discretization of the diﬀerential operator div (μ∇u) with the full fourth-order tensor μ. We demonstrate
performance of the new artiﬁcial viscosity on a set of test problems.
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝
Keywords: mimetic ﬁnite diﬀerences, Lagrangian hydrodynamics, artiﬁcial viscosity

1. Introduction
We consider a system of hydrodynamic equations in Lagrangian coordinates describing motion of a compressible
gas [1]:
1 Dρ
= −div u,
ρ Dt
Du
(1)
= −∇p,
ρ
Dt
Dε
= −p div u,
ρ
Dt
where ρ, p, u and ε are the gas density, pressure, velocity and internal energy, respectively, and D/Dt denotes the
material derivative. The system of three equations has four unknowns; therefore, it is closed by an equation of state.
These equations come from three fundamental conservations laws for the mass, momentum, and energy. The aim
of any compatible (mimetic) discretization method is to develop a system of discrete equations that has three discrete
conservations laws. For a staggered discretization [2] considered here, the discrete velocity unknowns are deﬁned at
mesh points (three numbers per point), while the discrete pressure, density and internal energy are deﬁned on mesh
elements (one number per element).
✩ This work was carried out under the auspices of the National Nuclear Security Administration of the U.S. Department of Energy at Los Alamos
National Laboratory under Contract No. DE-AC52-06NA25396 and the DOE Oﬃce of Science Advanced Scientiﬁc Computing Research (ASCR)
Program in Applied Mathematics Research.
∗ The corresponding author
Email addresses: lipnikov@lanl.gov (Konstantin Lipnikov), shashkov@lanl.gov (Mikhail Shashkov)
URL: math.lanl.gov/~lipnikov (Konstantin Lipnikov), cnls.lanl.gov/~shashkov (Mikhail Shashkov)

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.215

1922

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

2

Modeling of high-speed ﬂows with shocks using the staggered discretization requires introduction of an artiﬁcial
numerical viscosity [3, 4, 5]. This viscosity stabilizes the simulation by spreading the shock across a few mesh
elements. The basic requirements for design of the artiﬁcial viscosity, as well as overview of existing methods, can
be found in [6, 4]. In this paper, we extend the Tensor Artiﬁcial Viscosity (TAV) method developed in [7] for twodimensional problems to three dimensions.
The TAV proposed originally in [8] is designed as a discretization of the diﬀerential operator div (μ∇u). The
method in [8] is limited to the case of a scalar coeﬃcient μ and polygonal meshes with convex elements. In the recent
paper [9], the authors derived a high-order discretization for the tensor viscosity using the ﬁnite-element technique.
For quadrilateral meshes, they showed that the ﬁnite element method with the reduced quadrature rule reproduces the
mimetic formulation. A connection between two methods has been also proved in [10] for diﬀusion problems. To
some extend, the mimetic method can be considered as a natural extension of the ﬁnite element technique to general
meshes. In [9], the authors considered only non-degenerate quadrilateral and non-degenerate hexahedral meshes and
again only a scalar μ. The aforementioned limitations were removed in [7] for two-dimensional problems in both the
Cartesian (x-y) and axisymmetric (r-z) coordinate systems.
One of the important features of the TAV is its ability to act only in the direction of a shock by exploiting the
ﬂexibility provided by the full tensor μ. Design of the appropriate fourth-order tensor μ is the active research area.
Derivation of the mimetic discretization of the three-dimensional operator div (μ∇u) with the full tensor coeﬃcient
μ on a general polyhedral mesh, which is developed in this paper, is the foundation for future developments. This
discretization follows the new mimetic technology developed in [11, 12] for diﬀusion problems.
The paper outline is as follows. In Section 2, we describe a continuous analog of the TAV and recall how it enters
the equations of Lagrangian hydrodynamics. In Section 3, we develop the three-dimensional TAV method. A few
two-dimensional and three-dimensional experiments are presented in Section 4.
2. Artiﬁcial viscosity
For shock calculations, an artiﬁcial numerical viscosity has to be added to the discrete momentum equation. Being
artiﬁcial, the viscosity stress tensor does not need to be symmetric. Following [8, 9], we deﬁne the artiﬁcial viscosity
as an approximation of the elliptic operator:
(2)
f vis = div (μ∇u).
where, contrary to [8, 9], we allow μ be a full fourth-order tensor. The continuous forms of the modiﬁed momentum
and internal energy equations are
ρ

Du
= −∇p + div (μ∇u),
Dt

ρ

Dε
= −p div u + (μ ∇ u) : ∇ u.
Dt

The symbol ’:’ means the dot product of two tensors.
3. Mimetic tensor artiﬁcial viscosity method
We refer to [7] for a detailed derivation of semi-discrete equations and focus our attention on an approximation of
the last term in the modiﬁed momentum equation. Contrary to [7], the current derivation follows the ﬁnite element
framework to illustrate a close connection between the mimetic ﬁnite diﬀerence and ﬁnite element methods.
Let Th be a partition of the computation domain into non-overlapping polyhedral elements E. This partition may
contain non-convex and degenerate (two adjoin faces are parallel) elements. We denote the volume of E by |E|, the
area of its face f by | f |, the position vector of its vertex v by xv . Let h be the characteristic mesh size, the diameter of
the largest polyhedron.
We consider a staggered discretization. The degrees of freedom for the velocity are deﬁned at mesh points. For a
smooth function v, we deﬁne the global vector V of degrees of freedom. The size of V is triple the number of mesh
points. We also need the restriction of this vector to element E that we denote by VE . Similarly, VE,v denotes the
restriction of VE to vertex v of E. This is a three-dimensional vector. Finally, let nE,v be the size of vector VE , i.e.
triple the number of vertices in E.

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

1923
3

Multiplying both sides of (2) by a test function v and integrating by parts, we get

Ω

f vis · v dV = −

Ω

(μ∇ u) : ∇ v dV +

∂Ω

((μ∇ u) · n) · v dS ,

where n is the exterior normal vector. For clarity, we assume that the boundary conditions are such that the last
integral is zero. We apply accurate quadrature rules to the other integrals. Each rule is written as a vector-matrixvector multiplication with vectors of degrees of freedom and an appropriate matrix, for instance:

Ω

f vis · v dV = (Fvis )T M V + O(h),

where the Fvis is the global vector of point-based degrees of freedom of the vector function f vis . The O(h) term must
be small for suﬃciently smooth functions f vis and v. Similarly, the other quadrature gives

Ω

(μ∇ u) : ∇ v dV = UT A V + O(h).

(3)

Given matrices M and A, we obtain the desired viscous forces at mesh points:
Fvis = −M−1 A U.
Note that the actual computations require only the vector M Fvis . As in the ﬁnite element framework, both matrices
are assembled from local elemental matrices:
NE ME NTE ,

M=

NE AE NTE ,

A=

E∈Th

E∈Th

where NE is the assembling matrix with only zero and one entries. Clearly to guarantee (3), the elemental matrices
must also provide accurate quadrature rules:

E

T
f vis · v dV = (Fvis
E ) ME VE + |E| O(h),

E

(μ∇ u) : ∇ v dV = UTE AE VE + |E| O(h).

(4)

The ﬁrst quadrature in (4) is trivial: the matrix ME is diagonal with equal entries |E|/nE,v . This quadrature rule is
exact for constant functions. To derive the second quadrature, we recall a few facts from linear algebra.
Let BE be a full rank nE,v × nE,v matrix, representing a change of the basis in the linear space nE,v . The columns
of BE are the new basis vectors. Change of the basis induces the following congruent transformation of the matrix
AE :
ˆ E = BTE AE BE .
(5)
A
ˆ E , we calculate immediately the matrix AE using (5). UnforIf somebody gives us the basis vectors and the matrix A
ˆ E is available a priory. Assume
tunately, the reality is that only a partial information about the basis and the matrix A
that (a) we know m basis vectors Bi , i = 1, . . . , m and (b) we can calculate somehow m vectors Ri = AE Bi without
ˆ E is block-diagonal.
using the matrix AE . Then, it is possible to complete the basis in such a way that the matrix A
Lemma 3.1. Let m basis vectors Bi be given. Furthermore, let the vectors Ri = AE Bi , i = 1, . . . , m, be given. Let us
complete the basis by vectors B j , j = m + 1, . . . , nE,v , such that
BTj Ri = 0,
Then, we have the following identity:
BTE

1 ≤ i ≤ m < j ≤ nE,v .

⎡ 1
ˆ
⎢⎢⎢ A
E
AE BE = ⎢⎢⎢⎢⎣
0

⎤
0 ⎥⎥⎥
⎥⎥⎥ .
⎥
2 ⎦
ˆ
AE

Proof. The proof is straightforward. By assumption, BTj AE Bi = BTj Ri = 0.

(6)

1924

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

4

ˆ 1 is the dot-product BT Rk ; therefore, this matrix can be
The lemma implies that the (i, k)-entry of matrix A
E
i
calculated easily.
Remark 3.1. Analysis of diﬀusion equations [11] reveals that the accuracy requirement (the right formula in (4))
alone is not suﬃcient to build a convergent numerical scheme for operator (2). What is needed are the orthogonality
conditions (6) and the relations between vectors Ri and Bi . The latter are related to existence of special discrete
Gauss-Green relations on element E.
We deﬁne m basis vectors Bi using the degrees of freedom of linear vector-functions ψi . Recall that the entries of
Bi are the values of ψi at vertices of polyhedron E. In three-dimensions, there are twelve linearly independent linear
vector-functions, which gives m = 12. In two-dimensions, m = 6. To deﬁne the vectors Ri corresponding to the
selected basis vectors, we take the second formula in (4) and replace the tensor μ by a constant tensor μE . This is the
order of h approximation. Then, replacing u by ψi and integrating by parts, we get
|E| O(h) + BTi AE VE

=
E

=

−

(μE ∇ ψi ) : ∇ v dV
E

=
f ∈∂E

div (μE ∇ ψi ) · v dV +

((μE ∇ ψi ) · nE ) ·

∂E

((μE ∇ ψi ) · nE ) · v dS

(7)

v dS .
f

The last integral over face f can be approximated using the degrees of freedom of v at vertices of f . Let x f be the
center of gravity of face f . There exist positive coeﬃcients ω f,v such that
ω f,v xv .

xf =
v∈ f

Using this formula in (7), we get
|E| O(h) + BTi AE VE =

f ∈∂E

((μE ∇ ψi ) · nE ) ·

v∈ f

ω f,v VE,v + |E| O(h).

Finally, neglecting the O(h) terms and re-arranging the terms in the right-hand side, we obtain the following discrete
Gauss-Green relations:
ω f,v VE,v ≡ RTi VE .
(8)
BTi AE VE = ((μE ∇ ψi ) · nE ) ·
v∈ f

Due to arbitrariness of VE , we derive the desired relations AE Bi = Ri without knowledge of the matrix AE . It is
pertinent to note that the above derivations hold for arbitrary polyhedron E. This polyhedron may be non-convex and
degenerate.
ˆ 2 ; thus, it remains arbitrary. For a hexahedral element, this is
No information is available to specify the matrix A
E
the matrix of size six. At the moment it is not clear how to use this ﬂexibility to obtain additional properties from the
ˆ 2 = αE IE . A reasonable choice for the scaling parameter αE is
ﬁnal scheme. In practice, we use a diagonal matrix, A
E
ˆ 1 )/m.
the mean trace of the ﬁrst diagonal block, αE = trace(A
E
Lemma 3.2. Let E be a tetrahedron and μ be a constant tensor. Then, the matrix AE coincides with the ﬁnite element
matrix for linear ﬁnite elements.
ˆ 2 . Note that the ﬁnite element
Proof. For a tetrahedron, m = nE,v = 12. Thus, no room is left for the matrix A
E
functions on E are linearly independent functions. Selecting ψi as the ﬁnite element functions, we get that BE is the
1
ˆ is
identity matrix and the (i, k)-th entry of A
E
ˆ 1E )i,k = BTi Rk =
(A

E

(μE ∇ ψi ) : ∇ ψk dV.

ˆ 1 is the ﬁnite element stiﬀness matrix. The proof is completed by noting that this matrix coincides with
Thus, A
E
ˆ
AE .

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

1925
5

4. Numerical experiments
The method derived above allows μE to be the fourth-order tensor. This ﬂexibility is not yet used in the presented
numerical experiments. More precisely, we use the following expression for the scalar viscosity coeﬃcient μE [13]:
⎛
⎜⎜⎜ γ + 1
|Δu| +
μE = χE ρE LE ⎜⎜⎜⎜⎝cQ
4

c2Q

γ+1
4

2

|Δu|2

+

c2L s2E

⎞
⎟⎟⎟
⎟⎟⎟ ,
⎟⎠

where sE is the sound speed, cL and cQ are positive non-dimensional constants, LE is the characteristic length, Δu is
the measure of compressibility (a scalar, for instance, the velocity jump across the shock), and χE is a binary switch.
The binary switch ensures that the heating due to artiﬁcial viscosity occurs only for elements under compression.
We set χE = 0 when Δu > 0 and χE = 1 otherwise. The measure of compression is deﬁned as the mean divergence of
the velocity multiplied by the characteristic length.
In √the numerical experiments, we set cL = cQ = 1. We use a simple estimates for the characteristic length LE ,
LE = 3 |E|. This estimate is appropriate for meshes with mild variation of volumes of neighboring elements.
The TAV does not control hourglass distortion of the mesh. Therefore, additional numerical viscosity is added
to the discrete momentum equation using the temporal triangular subzoning (TTS) method [14]. We veriﬁed with
numerical experiments that both viscosities are required in the simulations described below.

Figure 1: The three-dimensional Noh implosion problem in the r − z coordinate system. Left picture shows the logically square mesh at time
t = 0.6. Part of the mesh ahead of the shock has been removed for visualization clarity. Right picture shows density isolines.

The simulations were done using the code [2]. In the ﬁrst experiment, we consider the three-dimensional Noh
implosion problem [15], where the ideal gas with γ = 5/3, density ρ = 1.0, and pressure p = 0 is given an initial unit
inwards radial velocity. A spherical shock wave is generated at the origin and moves with constant speed 1/3. At time
t = 0.6, the shock wave has radial coordinate 0.2. The density behind shock is 64.
Using symmetry of the problem, we may solve it in two-dimensions. Results of the two-dimensional experiment
are shown in Fig. 1. The initial computational mesh is the 50 × 50 square mesh occupying the unit square. The ﬁnal
mesh at time t = 0.6 has high-quality quadrilateral elements. The gas heating near the origin is the well known intrinsic
feature of Lagrangian simulations. The density isolines indicates acceptable preservation of cylindrical symmetry. On
the top-left picture in Fig. 2, we plot density at centroids xE , E ∈ Th , versus the distance to the origin. Around the
shock, we observe approximately 5% variation of density in the angular direction.

1926

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

6

Figure 2: The density at centroids of mesh elements (stars) versus the distance to the origin for the Noh (left column) and Sedov (right column)
problems. The top row shows results of two-dimensional simulations that exploit spherical symmetry of the problems. The bottom row shows
results of three-dimensional simulations.

Now, the same problem is solved in three-dimensions. The initial mesh is the 40 × 50 × 60 orthogonal mesh. The
trace of the ﬁnal mesh at time t = 0.6 is shown in Fig. 3. We observe a high quality logically cubic mesh. We also
observe that the density behind the shock is smaller than the theoretical value of 64 but is approximately the same as
in the two-dimensional simulation. This may be related to the isotropic nature of the scalar viscosity coeﬃcient μ.
Finally, we note that violation of spherical symmetry is bounded again by 5%.
In the second experiment, we consider the Sedov explosion problem. The problem generates a strong diverging
shock wave [16, 17]. The initial density of the ideal gas with γ = 1.4 is unity and the initial velocity is zero. At t = 0 ,
the total energy E0 is all internal and concentrated at the origin. The analytical solution gives the expanding shock of
radius r s with peak density of 6,
0.2
E 0 t2
,
rs =
α s ρ0
where α3 = 0.850937. The total energy E0 is deﬁned such that r s = 0.9 at time t = 1.
We consider a 50 × 50 square mesh occupying initially the unit square. Only one element near the origin (the
biggest element in Fig. 4) is given a non-zero speciﬁc internal energy. The mesh elements are compressed in the
radial direction and have large obtuse angles. Note that only small angles (close to 0◦ ) may reduce (theoretically)
the accuracy of the mimetic discretization. The right picture in Fig. 4 and the top-right picture in Fig. 2 show small
variation of density in the angular direction.
The same problem is solved in three-dimensions. The initial mesh is the 48 × 48 × 48 orthogonal mesh. The trace
of the ﬁnal mesh at t = 1 is shown in Fig. 5. All hexahedra have high quality according to the mesh criteria formulated

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

1927
7

Figure 3: The three-dimensional Noh implosion problem on a logically cubic mesh. The mesh trace is shown on three sides of the computational
domain that are attached to the origin. Part of the mesh ahead of the shock has been removed for visualization clarity. The colors show density
distribution.

in [11] for polyhedral meshes. We recall that presence of large obtuse dihedral angles does not necessary aﬀect the
mesh quality. In the bottom-right picture in Fig. 2, we observe slight reduction of the pike density compared to the
two-dimensional simulation (the top-right picture). On the other hand, position of the shock is more accurate in the
three-dimensional simulation.
5. Conclusion and future work
We derived a new mimetic tensor artiﬁcial viscosity on general polyhedral meshes. The tensor viscosity is designed as the mimetic discretization of the diﬀerential operator div (μ∇ u), where μ is the full fourth-order tensor.
We demonstrated performance of the new viscosity with a few two-dimensional and three-dimensional Lagrangian
simulations.
In the future, we plan to develop and analyze tensorial viscosity coeﬃcients μ. This will help to reduce dissipation
in directions transverse to the shock direction.

1928

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

8

Figure 4: The three-dimensional Sedov explosion problem in the r-z coordinate system. Left picture shows the logically square mesh a time t = 1.
Right picture shows density isolines.

Figure 5: The three-dimensional Sedov explosion problem on a logically cubic mesh. The mesh trace is shown on three sides of the computational
domain that are attached to the origin (the vertex of the biggest element). The colors show density distribution.

K. Lipnikov, M. Shashkov / Procedia Computer Science 1 (2012) 1921–1929
K.Lipnikov and M.Shashkov / Procedia Computer Science 00 (2010) 1–9

1929
9

References
[1] Z. Warsi. Fluid Dynamics. Theoretical and Computational Approaches. CRC Press, Boca Raton, 1993.
[2] D. E. Burton. Consistent ﬁnite-volume discretization of hydrodynamics conservation laws for unstructured grids. Technical report UCRL-JC118788, Lawrence Livermore National Laboratory, 1994.
[3] J. von Neumann, and R.D. Richtmyer. A method for calculation of hydrodynamic shocks. J. Appl. Phys. (1950) 21, 232-237.
[4] W.D. Schulz. Tensor artiﬁcial viscosity for numerical hydrodynamics. J. Math. Phys. (1964) 5, 133-138.
[5] R. Landshoﬀ. A numerical method for treating ﬂuid ﬂow in the presence of shocks. Technical report LA-1930, Los Alamos National Laboratory, 1955.
[6] E. Caramana, M. Shashkov, and P. Whalen. Formulation of artiﬁcial viscosity for multi-dimensional shock wave calculations. J. Comput.
Phys. (1998) 144, 70–97.
[7] K. Lipnikov, and M. Shashkov. A mimetic tensor artiﬁcial viscosity on arbitrary polygonal meshes. Technical report LA-UR-10-00006, Los
Alamos National Laboratory, 2010.
[8] J. Campbell and M. Shashkov. A tensor artiﬁcial viscosity using a mimetic ﬁnite diﬀerence algorithm. J. Comput. Phys. (2001) 172, 739–765.
[9] T. Kolev and R. Rieben. A tensor artiﬁcial viscosity using a ﬁnite element approach. J. Comput. Phys. (2009) 228:22, 8336–8366.
[10] M. Berndt, and K. Lipnikov, and J.D. Moulton, and M. Shashkov. Convergence of mimetic ﬁnite diﬀerence discretizations of the diﬀusion
equation. East-West J. Numer. Math. (2001) 9, 253–284.
[11] F. Brezzi, K. Lipnikov, and V. Simoncini. A family of mimetic ﬁnite diﬀerence methods on polygonal and polyhedral meshes. Math. Models
Methods Appl. Sci. (2005) 15:10, 1533–1551.
[12] F. Brezzi, A. Buﬀa, and K. Lipnikov. Mimetic ﬁnite diﬀerences for elliptic problems. M2AN Math. Model. Numer. Anal. (2009) 43, 277–295.
[13] M. Wilkins. Use of artiﬁcial viscosity in multidimensional shock wave problems. J. Comput. Phys. (1980) 36, 281–303.
[14] P. Browne and K. Wallick. The reduction of mesh tangling in two-dimensional Lagrangian hydrodynamics codes by the use of viscosity,
artiﬁcial viscosity, and TTS (temporary triangular subzoning for long, thin zones). Technical report LA-470-MS, Los Alamos National
Laboratory, 1971.
[15] W. Noh. Errors for calculations of strong shocks using an artiﬁcial viscosity and an artiﬁcial heat ﬂux. J. Comput. Phys. (1987) 72, 78–120.
[16] L. Sedov. Similarity and Dimensional methods in mechanics. Academic Press, New York, 1959.
[17] A. Shestakov. Time-dependent simulations of point explosion with heat conduction. Physics of Fluids (1999), 11, 1091–1095.

