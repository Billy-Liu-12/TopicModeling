Available online at www.sciencedirect.com

ScienceDirect

This space is reserved for the Procedia header, do not use it
ProcediaisComputer
Science
108CProcedia
(2017) 1712–1721
This space
reserved
for the
header, do not use it
This space is reserved for the Procedia header, do not use it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

A High Performance Computing Framework for
A High Performance Computing Framework for
Continental-Scale
Forest
Fire Spread
Prediction
A High Performance
Computing
Framework
for
Continental-Scale
Forest
Fire Spread
Prediction
C. Brun, T. Artes, A. Cencerrado,
T. Margalef,
A. Cortés
Continental-Scale
Forest Fire
Spreadand
Prediction
C. Brun, T. Artes, A. Cencerrado, T. Margalef, and A. Cortés
HPCA4SE research group, Universitat Autònoma de Barcelona, Spain
C. Brun,
T. research
Artes, A.
Cencerrado,
T. Margalef,
and A.Spain
Cortés
HPCA4SE
group,
Universitat Autònoma
de Barcelona,
carlosbrun@gmail.com,
artes.tomas@gmail.com,
acencerrado@caos.uab.es,
carlosbrun@gmail.com,
artes.tomas@gmail.com,
acencerrado@caos.uab.es,
tomas.margalef@uab.es, ana.cortes@uab.es
HPCA4SE research
group, Universitat ana.cortes@uab.es
Autònoma de Barcelona, Spain
tomas.margalef@uab.es,
carlosbrun@gmail.com, artes.tomas@gmail.com, acencerrado@caos.uab.es,
tomas.margalef@uab.es, ana.cortes@uab.es

Abstract
Abstract
Many scientific works have focused on developing propagation models that predict forest
Many
scientific
have
focused
on developing
propagation
models that
predict
forest
fire
behavior.
Theseworks
models
require
a precise
knowledge
of the environment
where
the fire
is
Abstract
fire
behavior.
These modelsInformation
require a precise
knowledge
of the environment
where
the
fire is
taking
place.
Geographical
Systems
allow
us
determining
and
building
the
different
Many
scientific
works have
focused Systems
on developing
propagation
models
that predict
forest
taking
place.
Geographical
Information
allow
determining
and building
the different
information
layers
that
define
the terrain
and knowledge
the
fire.usThese
data,
along
with
meteorological
fire
behavior.
These
models
require
a
precise
of
the
environment
where
the
fire
is
information
layersweather
that define
the terrain
and
fire. These
data,
with meteorological
information
from
services,
enables
thethe
simulation
based
on along
real
conditions.
However,
taking
place.
Geographical
Information
Systems
allow
us
determining
and
building
the
different
information
from weather
services, enables
simulation
based
on in
real
conditions.
fire
spread prediction
models
a set and
ofthe
input
parameters
that,
some
cases,
areHowever,
difficult
information
layers that
definerequire
the terrain
the fire.
These data,
along
with
meteorological
fire
spreadorprediction
models
require
a Therefore,
set of input
parameters
that,
in
some
cases,
are
difficult
to
know
even
estimate
precisely.
a
framework,
based
on
a
genetic
algorithm
information
from
weather
services,
enables
the simulation
basedbased
on real
However,
to
know orstage,
even was
estimate
precisely.
Therefore,
a framework,
onconditions.
a genetic
algorithm
calibration
introduced
to
reduce
the
uncertainty
in
the
input
parameters
and
improve
fire
spread prediction
models require
a set of
input
parameters
that,
in some cases,and
are improve
difficult
calibration
stage,
was
introduced
to reduce
the
uncertainty
in
the
input
the
accuracy
of the
predictions.
This
stage
is implemented
using
a MPIparameters
master/worker
scheme
to
know
or
even
estimate
precisely.
Therefore,
a
framework,
based
on
a
genetic
algorithm
the
accuracy
of the
predictions.
This
stage
isspread
implemented
usingAdditionally,
a MPI master/worker
scheme
and
an
OpenMP
parallel
version
of
the
fire
simulator.
the
whole
system
calibration
stage, was
introduced
to
reduce
the
uncertainty
in theAdditionally,
input parameters
and improve
and
an
OpenMP
parallel
version
of
the
fire
spread
simulator.
the
whole
system
is
run
using
suitable
automatic
worker-assignment
and
core-allocation
policies
to
respect
the
the
accuracy
of the predictions.
This
stage is implemented
using a MPI master/worker
scheme
is
run
using
suitable
automatic
worker-assignment
and
core-allocation
policies
to
respect
the
existing
time
restrictions,
inherent
to
this
real-world
problem.
This
paper
details
the
process
of
and
an OpenMP
parallel inherent
version oftothe
fire
spread simulator.
Additionally,
the the
whole
system
existing
time
restrictions,
this
real-world
problem.
This
paper
details
process
of
obtaining
the
necessary
input
data
as
well
as
the
parallel
evolutionary
framework
that
delivers
is
run using
suitable
automatic
worker-assignment
and core-allocation
policies tothat
respect
the
obtaining
the
necessary
input
data
as
well
as
the
parallel
evolutionary
framework
delivers
the
final prediction.
A realinherent
case study
is presented
illustrateThis
the way this
framework
works.
existing
restrictions,
to this
real-worldto
details
the process
of
the final time
prediction.
A real case study
is presented
toproblem.
illustrate the paper
way this
framework
works.
obtaining
the
necessary
input
data
as
well
as
the
parallel
evolutionary
framework
that
delivers
Keywords:
Forest
fire
propagation,
Simulation,
HPC,
Genetic
algorithm
© 2017 The Authors. Published by Elsevier B.V.
Keywords:
Forest
fire propagation,
Simulation,
HPC,
algorithm
Peer-review
under
responsibility
the scientific
of Genetic
the
Conference
on Computational
Science
the final prediction.
A realofcase
study
iscommittee
presented
toInternational
illustrate
the
way this
framework works.
Keywords: Forest fire propagation, Simulation, HPC, Genetic algorithm

1 Introduction
1 Introduction
Every year forest fires burn thousands of hectares around the world and cause serious damages.
1
Introduction
Every
year
forest fires
thousands
of decisions
hectares around
the world
and
causetake
serious
damages.
Wildfire
analysts
are inburn
charge
of taking
when those
critical
events
place.
Forest
Wildfire
analysts
are incan
charge
of takingtools
decisions
when those the
critical
events take
place. Forest
fire
spread
simulators
be
relevant
to complement
fire
experience.
For
Every
year forest
fires burn
thousands
oftools
hectares
around the world
andfighter
cause serious
damages.
fire
spread
simulators
can
be
relevant
to
complement
the
fire
fighter
experience.
For
this
reason,
the
scientific
community
has
done
a
huge
effort
in
developing
forest
fire
behavior
Wildfire
analysts
are in charge
of taking
decisions
wheneffort
thoseincritical
eventsforest
take place.
Forest
this
reason,
the
scientific
community
has
done
a
huge
developing
fire
behavior
simulators
as BehavePlus,
fireLib, FARSITE
[1, 2, 3] among
others.
All experience.
these simulators
fire
spread such
simulators
can be relevant
tools to complement
the fire
fighter
For
simulators
such
as
BehavePlus,
fireLib,
FARSITE
[1,consists
2, 3] among
others.
All these
simulators
are
based
on
the
Rothermel’s
spread
model
[4],
which
of
a
semi-empirical
approach
that
this
reason,
the
scientific
community
has
done
a
huge
effort
in
developing
forest
fire
behavior
are
based
oninput
the Rothermel’s
spread
[4], which
consists of input
a semi-empirical
approach
that
balance
the
complexity
vs.model
theFARSITE
output
accuracy.
data All
is typically
obtained
simulators
such
asdata
BehavePlus,
fireLib,
[1, 2, 3] The
among
others.
these simulators
balance
the
input
data
complexity
vs.
the
output
accuracy.
The
input
data
is
typically
obtained
from
a large
number
of GIS (Geographical
Information
System)
files, which
must bethat
coare
based
on the
Rothermel’s
spread model [4],
which consists
of ainput
semi-empirical
approach
from
a large
number
of GIS
(Geographical
Information
System)
input
files,
which
must
be
coregistered,
with
identical
resolution,
extent,
projection
and
datum.
It
is
important
to
define
balance
thewith
inputidentical
data complexity
vs. extent,
the output
accuracy.
input data
typically to
obtained
registered,
resolution,
projection
andThe
datum.
It is is
important
define
from a large number of GIS (Geographical Information System) input files, which must be coregistered, with identical resolution, extent, projection and datum. It is important to define1
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.258

1

	

Framework for Continental-ScaleC.
Forest
Fire
Brun et
al. /Spread
ProcediaPrediction
Computer Science 108C (2017) 1712–1721

C. Brun et al.

precisely terrain features like elevation, aspect or slope among others, but also dynamic data
such as meteorological parameters. These data are often provided by agencies or institutions
that use information coming from satellites, weather stations, aerial images or others, and use
GIS techniques and tools to understand and process them.
However, forest fire spread prediction is a major scientific problem mainly because of two
crucial facts: a) many of these data are subject to important levels of uncertainty, and b) any
forecast must be delivered under strict real time constraints, otherwise, it is useless.
The framework presented is able to cope with this difficult combination of circumstances.
In the one hand, a preprocessing protocol is established in order to have the data that is both
static and accurate (topographic and land-use data) ready to be used by the simulator before
the fire occurrence. On the other hand, a calibration technique based on genetic algorithms
(GA) is used to reduce the uncertainty in input parameters values and improve the accuracy
of the predictions. This approach allows us to adjust those uncertain parameters according to
the actual observed behavior of the fire. Since GAs are computationally demanding technique,
the framework presented in this work relies on a HPC foundation, operating on the basis of
respecting the imposed deadlines. So, this work presents the processes that constitute the
foundation of a continental-scale framework for a real-time fire spread prediction system.
The rest of this paper is organized as follows. Firstly, a detailed overview of the aspects
related to the necessary input data involved in a forest fire simulation are reported in Section
2. Next, Section 3 discusses a time-aware genetic algorithm framework for the optimization
of the uncertainty in input data. Subsequently, the danger area characterization procedure is
given in Section 4, emphasizing the details of the territorial division scheme taken into account.
In Section 5, the results of applying the whole process in the context of a real case study are
reported and, finally, the main conclusions are included in Section 6.

2

Fire Spread Simulation: Input Data Layers

Fire spread models require different data that can be divided into two main groups: static
and dynamic data. Static input data keeps constant during the whole prediction interval, and
dynamic data changes during the fire spread. In the case of static data, the preprocessing and
organization of the required layers in a proper format can be done prior to the fire occurrence.
Thus, the process of homogenizing the precision, projection and datum could be done beforehand. In the case of dynamic data, it is necessary to gather them in real-time, taking advantage
of the different data sources and services that can provide this information. This is critical,
since we depend on frequencies of data arrival, and data format from third-parties, beyond our
control [5]. Therefore, the conversions and the simulation must be done concurrently.

2.1

Static Input Data

Static data does not vary during the simulation, so it can be collected and processed once, being
available for all the forest fires that take place in the same geographic area. Those features that
can be considered fixed on a given area are topographic information and vegetation maps.
2.1.1

Topographic Information

The three input layers required to properly describe the topographic area where the fire occurs,
are the so called elevation, aspect and slope maps. The elevation map or DEM (Digital Elevation
Map) is a simple, regularly spaced grid of elevation points, which provides a discretization of a
2

1713

1714	

Framework for Continental-ScaleC.
Forest
Fire
Brun et
al. /Spread
ProcediaPrediction
Computer Science 108C (2017) 1712–1721

C. Brun et al.

continuous surface, taking into account measures in certain points of the terrain. The maximum
resolution of the imaging resources define how many measures we can achieve in a certain area.
Slope and aspect can be calculated using the elevation and applying some known equations.
2.1.2

Vegetation Maps

The vegetation map, also known as fuel map, shows the vegetation diversity of the area. Each
vegetation type has its own parameters such as moisture content, flammability, fuelbed load
and density, etc. These kinds of maps consider a limited group of standard fuels that represent
the great diversity of possible fuels and parameters.
Fuel moistures are those parameters that define the content of water of live and dead fuel.
Since these values depends on recent weather variations, somehow they could not be considered
as really static data. However, the values used for fire spread simulation purposes are fitted in
the system just once at the beginning of the simulation process and they do not vary during
the fire propagation simulation. In this sense, we can consider them as quasi static parameters.
Estimating fuel moistures values is not an easy task and the most accurate way to perform
this task is to directly take measures over the whole area to study. This is extremely demanding
in terms of economical costs and time required. Other approaches try to achieve them using
remote sensing and satellite imagery [6, 7], however, these works only study live fuel moisture
contents because it is much more variable.

2.2

Dynamic Input Data

The simulated fire spread depends mostly on dynamic input data rather than static one. Dynamic data defines the fire behavior for a given time window. We define two main groups: GIS
fire perimeters and meteorological data.
2.2.1

GIS Fire Perimeters

The representation of fire perimeters allows us to define the initial state of the fire, as well as
to compare the predictions with the real fire behavior. These perimeters are really difficult
to obtain and their precision depends on satellite or aerial image quality, which is affected by
fire and weather conditions. The fire perimeters can be obtained from the Terra and Aqua
satellites, which have an instrument aboard called MODIS (Moderate Resolution Imaging Spectroradiometer ) that takes images at a resolution from 250m to 1Km. Terra and Aqua pass
through a particular area twice a day.
2.2.2

Meteorological Variables

Meteorological variables are a key factor in a real-time forest fire spread forecast. These parameters have a direct impact in fire spread direction and intensity. Meteorological information
is, by far, the most variable data during the forest fire spread prediction process, and has a
great impact in the wildfire behavior. For forest fire spread prediction purposes, meteorological
services such as the European Centre for Medium-Range Weather Forecasts (ECMWF) [8] can
provide the required data. Temperature and humidity have an influence on fire intensity but
the most important variable is wind.
In general, all the parameters involved in forest fire propagation prediction have a certain
degree of uncertainty that imply a certain degree of uncertainty in the prediction results.
3

	

Framework for Continental-ScaleC.
Forest
Fire
Brun et
al. /Spread
ProcediaPrediction
Computer Science 108C (2017) 1712–1721

3

C. Brun et al.

Dynamic Data Calibration Using a Time Aware Genetic
Algorithm Adjustment Strategy

The prediction framework presented in this work deals with uncertainty and lack of precision
in the simulator input parameters by introducing a calibration stage before carrying out the
simulation that will provide the spread prediction. This calibration stage takes into account
the actual propagation of the fire and adjusts the simulator input parameters so that it would
have produced the best possible prediction (i.e., the result fits the actual spread as much as
possible). The key element in this strategy is the use of genetic algorithm (GA) [9].
The GA involves multiple executions of the underlying forest fire simulator, each one using
a different input parameter configuration (different individuals of a given population). Once
all of the simulations have finished, the obtained spreads are compared to the real observed
past evolution (optimization objective) using a preset objective function. According to those
evaluated values, the genetic operators are applied to obtain the evolved population and the
process is repeated. The system iterates a predetermined number of times, and the best individual of the last generation/iteration is selected as the one to be used for prediction purposes
(prediction stage).
GAs have specific features that make them very suitable for dealing with the problem we
are tackling. Specifically, GAs are able to avoid local minimums, and the convergence of the
algorithm is quite independent of the initial solution [10]. In addition, it is a fully parallelizable
method, which allows us to exploit the available computational resources. Actually, it can be
implemented in parallel using a Master/Worker programming paradigm with Message Passing
Interface (MPI). The master/worker implementation is carried out with non-blocking MPI
communication, where the worker processes receive individuals to be simulated on demand. This
fact allows the master to keep all workers busy if there are enough individuals to distribute.
Consequently, the computational efficiency is increased and the genetic algorithm is able to
evaluate more individuals per generation.
Nevertheless, since different initial scenarios (different input settings) may result in noticeable variations as regards the simulator execution time, an important problem to tackle when
using a MPI-GA approach is the workload imbalance, where many computing units may remain
idle once their simulations have finished and the slowest simulation of the current generation
has to end in order to apply the GA operators to generate a new evolved population. These
idle gaps could be used to enrich the GA populations to enhance the calibration performance,
improving both the quality of the results and the computational efficiency. However, to take
advantage of these idle cores, it would be necessary to have certain knowledge about individual
execution time in order to avoid including new long execution time individuals that could delay
the completion of the GA iteration. The goal is to devote more cores to those longer execution
time individuals in such a way that their execution times are reduced and the generation time
is balanced.
For this reason, our prediction framework also includes a module directed towards the
classification of each individual in terms of its presumable execution time. This module is
based on a Decision Tree that has been trained with approximately 10,000 scenarios, where
each scenario is defined by different combinations of input parameters, and the corresponding
elapsed times are recorded [10]. This way, all individuals are classified before its execution,
and the system is able to allocate more computational resources to those individuals that will
involve lengthy executions. Currently, we work with a 5-class classification scheme, and the
implementation of this module relies on the C4.5 algorithm, specifically, the J48 open source
Java implemented in the Weka data-mining tool [11]. In the end, this strategy allows us to
4

1715

1716	

Framework for Continental-ScaleC.
Forest
Fire
Brun et
al. /Spread
ProcediaPrediction
Computer Science 108C (2017) 1712–1721

C. Brun et al.

classify a certain individual by its execution time in a few seconds with a confidence ratio over
85%.
These features compose a time aware genetic algorithm adjustment strategy [12] that, combined with suitable core-allocation policies, allows us to make an efficient use of the available
computational resources to optimize the final prediction, being aware and respecting the existing
time restrictions.
This method requires to characterize the execution time of the different individuals beforehand to classify them according to their execution time, and this characterization depends on
the particular terrain where the fire is taking place. Therefore, it is necessary to characterize
each potential area and prepare the individuals classification for each area before the fire is
taking place. Consequently, it is necessary to carry out an area characterization beforehand.
This area characterization is described in next section.

4

Fine-grain Tile Area Characterization

In the case of large topographic areas, it is necessary to reduce the complexity of the problem
making partitions of the area. These partitions should cover the region under study, and must
have a computationally treatable size. The area has to be big enough to be able to simulate
a large fire, critical zones must have overlapped partitions, and non-burnable areas must be
discarded. For this purpose, we rely on hazard risk maps, historical fire occurrences, and forest
fire risk trends over Europe, to decide those areas that must be fully characterized.
The proposed characterization methodology is based on the concept of fgtile. A fgtile is a
topographic square area with a maximum dimension of around 2.5 thousand square kilometers
(50 km x 50 km). Then, for each fgtile the static data needed for forest fire simulation purposes
is gathered and co-registered to the same resolution, projection, extension, and datum, and
store in an standard repository database. However, in order to be efficient when gathering the
data of all defined fgtiles, we propose a non-uniform fgtiles distribution across a certain region.
For this reason, we rely on forest fire occurrence maps, to determine the area with a higher rate
of occurrences being those the so called Areas of Interest (AI) where the fgtiles will have higher
density. This fact allows to select the fgtile which best fits the fire occurrence under simulation.
Therefore, the proposed fine-grain tile area characterization relies on the following topographic area partitioning scheme:
• Step 1: Selecting a region.
• Step 2: Analyzing the forest fire map occurrence.
• Step 3: Determining the Areas of Interest (AI) according to their rate of fire occurrence.
• Step 4: Create and distribute the fgtiles within the region, increasing the density on the
AI obtained in Step 3.
Once this methodology has been applied for the area of interest, all co-registered GIS files
for all fgtiles are generated and aggregated to a centralized database. The complete process is
a very time consuming process in terms of the number of regions to be characterized. For this
reason, this methodology must be carried out prior to the fire season in order to have all data
ready and properly organized during high risk seasons.
The application of this methodology results in a large set of fgtiles that covers all the
topographic area to be characterized. At that point, for each fgtile, we generate and store
5

	

Framework for Continental-Scale C.
Forest
Fire
Prediction
Brun et
al. /Spread
Procedia
Computer Science 108C (2017) 1712–1721

C. Brun et al.

the corresponding GIS files associated to the static input data (elevation and vegetaion maps)
required for any forest fire spread simulator. By means of this process, we have the data
available and ready to use on the characterization process that will run thousands of forest fire
simulations considering different input parameters to carry out the execution time classification.

5

Framework Application Case: La Jonquera 2012

The Mediterranean area is one of the European regions most affected for forest fires during
high risk seasons. As a real study case, we subsequently present the performance of the whole
prediction framework within the context of a fire that took place in La Jonquera (North-East
of Catalonia, Spain) in July 2012. This hazard devastated near 13,000 ha and two people died.
The main concern of this particular forest fire was its faster propagation due, basically, to the
high wind speed reaching wind gusts of up to 90 km/h. In these cases, a fast response is critical
to reduce the fire consequences. Therefore, characterizing the terrain before hazard occurs may
help to improve the response time, and thus provide extra knowledge to the emergency staff
(firefighters, forest agents, etc.).
The purpose of this section is to show the applicability of the fgtile-based danger area
characterization methodology and how the time-aware calibration stage helps us improving the
quality of the final prediction by a proper adjustment of the input parameters.

5.1

Retrieving Data from the Danger Area Characterization

As it has been mentioned, the selected study case belongs to Catalonia region. In order to apply
the proposed topographic area partitioning scheme, we rely on the forest fire map occurrences
available. In this case, we have access to the fire occurrences map in Catalonia from 1986 to
2012. This map is shown in Figure 1a. This topographic area is too large to be used in a single
forest fire spread simulation. This is the reason why we must apply the proposed topographic
area partitioning scheme. Using this historical information, we can define areas of interest with
high fire risk. Those areas clearly correspond to the map zones depicted with darker colours.
Therefore, the 50 km x 50 km fgtiles distribution will be more dense in those areas than in
the rest of the map. The resulting map partitioning is shown in Figure 1b. These partitions
are overlapped to enable simulations of forest fires that take place near partition borders.
Eventually, the map of Catalonia is split into 24 fgtiles of 1667 rows and 1667 columns, with a
resolution of 30m each.
Taking into account this division, La Jonquera fire can be simulated using fgtile 5. The
coordinates of the area are:
xmin , ymin (479506.0, 4654939.7)

and

xmax , ymax (529506.0, 4704939.7)

using WGS84 UTM zone 31 (EPSG code 32631).
In order to obtain elevation, slope, aspect and fuel maps of this fgtile, we first have acquired
from ASTER [13] 13 tiles that cover all Catalonia, with a resolution of 30m. These maps have
been joined and we have built our 24 divisions on top. After this, we have generated the slope
and the aspect map of each fgtile. A similar process has been carried out with the fuel map.
In this case, we start from the European land cover use map, provided by the Corinne Land
Cover Project. We extract the 24 partitions, and each one has been processed to convert the
land cover use codes to the 13 standard fuel models used by the fire simulator. The resolution
of the simulation is done at 30m, and the scenario map contains 1813500 cells of 30m2 .
6

1717

1718	

Framework for Continental-Scale C.
Forest
Fire
Prediction
Brun et
al. /Spread
Procedia
Computer Science 108C (2017) 1712–1721

(a) Number of fire occurrences

C. Brun et al.

(b) Topographic Area Partitioning Scheme

Figure 1: Maps corresponding to Catalonia region

Figure 2: Fire perimeters from La Jonquera forest fire
The perimeters from La Jonquera forest fire were provided by both the Government of
Catalonia and EFFIS (European Forest Fire Information System). Figure 2 shows the fire
ignition point and 2 perimeters, one after 8.5 hours of fire evolution and a second perimeter
after 25 hours.

5.2

Simulating forest fire spread: La Jonquera 2012

In order to reproduce the real situation during the studied event, the meteorological data was
retrieved from the weather station located in La Jonquera (UTM 489750, 4696375), which is
the closer one to the place where the hazard took place. More precisely, we retrieved the wind
direction, wind speed, temperature and humidity measured at the exact time of the disaster.
This collected dynamic data jointly with the GIS input files obtained from fgtile 5 were used
as inputs for the FARSITE fire spread simulator [3], specifically, an OpenMP parallel version
of the software whose goodness and scalability have been validated in different works [14, 15].
The simulated time period was set to exactly match the real observed evolution that goes from
22/07/2012 at 12:00 am to 23/07/2012 at 1:00 pm.
7

	

Framework for Continental-Scale C.
Forest
Fire
Prediction
Brun et
al. /Spread
Procedia
Computer Science 108C (2017) 1712–1721

C. Brun et al.

Regarding the computational setting, the calibration stage and the final prediction were
carried out within the following scenario:
• Computing environment: the computing platform used to carry out this test consists
of two PowerEdge C6145 nodes. Each node has 4 AMD OpteronTM6376 of 16 cores
with 128GB of DDR3 1600 MHz. The calibration stage was carried out using a hybrid
MPI-OpenMP implementation, using 16 worker units, each of them being able to use a
maximum of 8 cores per process (8 cores per individual).
• Time restrictions: a time lapse of 4 hours is considered to carry out the calibration
stage and the final prediction. This lapse is splitted into two intervals; 3 hours for the
calibration, and 1 hour for the simulation that will result in the final prediction.
• GA settings: the GA is set to loop over 10 generations, and the probability of crossover and
mutation used in the executions is 0.7 and 0.3, respectively. The size of the populations
at each generation was dynamically determined according to the classification of the
composing individuals. The time intervals to define this aspect are listed in Table 1,
where ts stands for the estimated execution time of the serial version of the simulator.
Each individual is simulated and the forecasted fire perimeter is compared to the current
fire situation by estimating the normalized symmetric difference between the real burnt
area and the predicted one. This corresponds to the objective function of the GA and is
represented in Equation 1
Symmetric difference =

∪(Real,Pred) − ∩(Real,Pred)
,
Real

(1)

where Real are the cells burnt by the real fire at a certain time and P red are the cells
burnt by the predicted fire at the same time instant.
• Computing units allocation and execution continuity policies: the amount of cores allocated to each individual is also detailed in Table 1, where the classes assigned to each
individual are the result of the execution time estimation module described in Section
3. In this experimental study, we chose a continuity policy that consists of establishing
a reference time limit per generation of 1080 s. This reference time is used to start the
execution of the new available individuals, produced in the previous generation. However,
if there are some individuals that have not finished yet, they are not killed, but their results are introduced in the next new-generation production operations (crossover, elitism,
etc.). One of the main reasons for this is to avoid falling in a local minimums defined
by non-lengthy individuals. Obviously, the overall existing time restriction of 10800 s is
respected, so the selection of the best individual is done at that moment, killing all the
pending processes.
Table 1: Class time limits.
Class
A
B
C
D
8

Time limits (sec.)
0 < ts ≤ 1080
1080 < ts ≤ 1533
1533 < ts ≤ 1954
1954 < ts ≤ 2268

Cores
1
2
4
8

1719

1720	

Framework for Continental-Scale C.
Forest
Fire
Prediction
Brun et
al. /Spread
Procedia
Computer Science 108C (2017) 1712–1721

C. Brun et al.

The experiment provided quite good results, regarding both the quality of the prediction
and the computational efficiency.
Figure 3a depicts the execution trace of the evolution of the GA for a given initial population.
In this figure, the number of cores assigned to each individual is represented by colors. The
red color means that the corresponding simulation was killed. This happens at the end of the
last generation of the GA because the system must finish within the superimposed time limit
(10800 seconds in this case). As it can be observed, class E individuals are executed normally,
and, when the iteration time is reached, the GA is applied considering the number of completed
individuals keeping running those ones that have not finished yet. This results in the fact that
there are almost no idle cores and the system could avoid be stack in a local minimum. In this
case, the calibration reached is very good, obtaining a symmetric difference value of 0.38.
Figure 3b shows the simulated perimeter using the best individual obtained at the end of
the calibration stage (brown shape), compared with the real one (red perimeter). The result
is quite good taking into account the lack of information and the uncertainty that we have in
many parameters, the imprecision of the real perimeter, and the fact that the simulator does
not take into account the human intervention during the fire propagation.
Cores

1

2

Killed

8

4

Worke r1
Worke r2
Worke r3
Worke r4
Worke r5
Worke r6
Worke r7
Worke r8
Worke r9
Worke r10
Worke r11
Worke r12
Worke r13
Worke r14
Worke r15
Worke r16

0

2000

4000

6000

time(s)

8000

10000

(a) Execution trace of the Calibration stage.

(b) Predicted forest fire spread.

Figure 3: La jonquera forest fire propagation prediction: Execution and result

6

Conclusions

Forecasting forest fire spread is a complex problem. This complexity stems mainly from input
data uncertainty. There is also an extra key factor that complicates the forecast process, the
response time. For this reason, any approach that focuses on accelerating forest fire spread
prediction without losing accuracy is welcome. In this work, a High Performance Computing
framework to deal with this problem is described. The proposed framework has been designed
to tackle large forest fires with in the European continent. The framework includes a detailed
methodology to preprocess all static data required for simulation purposes. The prediction
system is divided into two stages, being the calibration stage the most time consuming. In this
stage, a GA is carried out to calibrate unknown parameters such as fuel humidity and certain
meteorological data. This strategy requires to exploit HPC environments to be able to deliver
the result under strict time constraints. To accelerate the calibration stage without loosing
9

	

Brun Fire
et al. Spread
/ Procedia
Computer Science 108C (2017) 1712–1721
Framework for Continental-Scale C.
Forest
Prediction

C. Brun et al.

accuracy in the final results, a time-aware approach of the GA has been implemented to be able
to detect in advance those individuals that will last longer and allocate more cores to them. In
order to validate the proposed HPC framework, we analyze a real forest fire that took place
in La Jonquera (Catalonia, Spain) in 2012. Results show that, the framework achieves more
reliable predictions even in such cases with high uncertainty.

Acknowledgements
This research has been supported by MINECO-Spain under contract TIN2014-53234-C2-1-R.

References
[1] P. L. Andrews, C. D. Bevins, R. C. Seli, et al., BehavePlus Fire Modeling System: Version 2.0:
User’s Guide, US Department of Agriculture, Forest Service, Rocky Mountain Research Station
Fort Collins, CO, 2003.
[2] C.
D.
Bevins,
Firelib
user
manual
and
technical
referenceHttp://www.fire.org/downloads/fireLib/1.0.4/doc.html.
[3] M. A. Finney, et al., Farsite, fire area simulator–model development and evaluation.
[4] R. C. Rothermel, A mathematical model for predicting fire spread in wildland fuels, INT-115 Tech
report (1972) 40.
[5] C.
Brun,
Phd
thesis:
A
comprehensive
methodology
to
predict
forest
res
behavior
using
complementary
models,
available
from:
http://www.tdx.cat/bitstream/handle/10803/283359/cbs1de1.pdf (2014).
[6] E. Chuvieco, D. Riaño, I. Aguado, D. Cocero, Estimation of fuel moisture content from multitemporal analysis of landsat thematic mapper reflectance data: Applications in fire danger assessment,
International Journal of Remote Sensing 23 (11) (2002) 2145–2162.
[7] F. Danson, P. Bowyer, Estimating live fuel moisture content from remotely sensed reflectance,
Remote Sensing of Environment 92 (3) (2004) 309 – 321.
[8] ECMWF: European center for medium range weather forecast, http://www.ecmwf.int, accessed
April 2016.
[9] B. Abdalhaq, A. Cortés, T. Margalef, E. Luque, Enhancing wildland fire prediction on cluster
systems applying evolutionary optimization techniques, Future Generation Computer Systems
21 (1) (2005) 61–67.
[10] A. Cencerrado, A. Cortés, T. Margalef, Response time assessment in forest fire spread simulation:
An integrated methodology for efficient exploitation of available prediction time, Environmental
Modelling and Software 54 (2014) 153–164.
[11] M. Hall, E. Frank, G. Holmes, B. Pfahringer, P. Reutemann, I. H. Witten, The weka data mining
software: An update, SIGKDD Explorations 11 (1).
[12] T. Artés, A. Cencerrado, A. Cortés, T. Margalef, Time aware genetic algorithm for forest fire
propagation prediction: Exploiting multi-core platforms, Concurrency Computationdoi:10.1002/
cpe.3837.
[13] NASA, Aster: Advanced spaceborne thermal emission and reflection radiometer, available from:
http://asterweb.jpl.nasa.gov (2014).
[14] T. Artes, A. Cencerrado, A. Cortes, T. Margalef, Core allocation policies on multicore patforms
to accelerate forest fire spread prediction, in: Parallel Processing and Applied Mathematics, 2013,
pp. 151–160.
[15] A. Cencerrado, T. Artés, A. Cortés, T. Margalef, Relieving uncertainty in forest fire spread prediction by exploiting multicore architectures, Procedia Computer Science 51 (2015) 1752 – 1761.

10

1721

