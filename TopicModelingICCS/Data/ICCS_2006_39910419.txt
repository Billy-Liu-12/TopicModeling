A Novel Network Intrusion Attempts Prediction Model
Based on Fuzzy Neural Network*
FT

Guiling Zhang and Jizhou Sun
Department of Electronic Information Engineering, Tianjin University, 300072, China
glzhang808@sohu.com, jzsun@tju.edu.cn

Abstract. Identifying the intrusion attempts of the monitored systems is
extremely vital for the next generation intrusion detection system. In this paper,
a novel network intrusion attempts prediction model (FNNIP) is developed,
which is based on the observation of network packet sequences. A new fuzzy
neural network based on a novel BP learning algorithm is designed and then
applied to the network intrusion attempts predicting scheme. After given the
analysis of the features of the experimental data sets, the experiment process is
detailed. The experimental results show that the proposed Scheme has good
accuracy of predicting the network intrusion attempts by observing the network
packet sequences.
Keywords: Intrusion Attempt Prediction, Intrusion Detection, Fuzzy Neural
Network.

1 Introduction
Intrusion detection techniques have become an important research area in modern
information security system. Denning first proposes a model for building a real time
intrusion detection expert system by analyzing the profiles representing the system
behavior from audit records [1]. S. Forrest and others propose an intrusion detection
model based on short sequences of system calls [2]. W. Lee and others build a datamining framework for intrusion detection system [4, 5]. H. Jin and coworkers extends
the W. Lee’s work by applying fuzzy data mining algorithm to intrusion detection [3].
Paper [6] and paper [7] apply neural networks to building intrusion detection models.
The above methods are only able to detect intrusions after the attacks have occurred,
either partially or fully, which makes it difficult to contain or stop the attack in real
time [9]. So it is necessary to tap intrusion attempts prediction techniques into IDS.
N. Ye and others proposed two methods of forecasting normal activities in
computer systems for intrusion detection. Their method provides performance
improvement on intrusion detection [8]. L. Feng and coworkers apply a plan
recognition method for predicting the anomaly events and the intensions of possible
intruders to a computer system based on the observation of system call sequences [9].
This paper extends their works by observing network packet sequences to predict
intrusion attempts. We develop a new intrusion attempts prediction model based on
*

This research was supported by the National High Technology Development 863 program of
China under Grant No. 2002AA142010.

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 419 – 426, 2006.
© Springer-Verlag Berlin Heidelberg 2006

420

G. Zhang and J. Sun

fuzzy neural network (FNNIP) for network intrusion detection system. Only the
critical features in the network connection records are employed to describe the
actions of the normal or attacks. The experimental results show that the proposed
Scheme has good accuracy of predicting the network intrusion attempts by observing
the network packet sequences.
The rest of this paper is organized as follows: How to construct the structure of the
proposed FNNIP is discussed in section 2. In this section, a new BP learning
algorithm is also designed for the proposed scheme. Section 3 details the description
of the network traffic behaviors. Some experiments are described in section 4. In
section 5, some conclusions and future works are given.

2 The Structure of Fuzzy Neural Network for Network Intrusion
Attempts Prediction
The structure of the proposed fuzzy neural network based network intrusion attempts
prediction (FNNIP) system is designed in Fig.1 [12].
w ijk

X ij

v kl

z lm

w i2k

X i2
x i1

w i1k

X 1j

om

z 2m

v 1l

w 1j1

z 21

v 12

w 121
X 12

z l1

v k2

v k1

z 1m

v 11

o1

z 11

w 111

X 11
Input Layer

Fuzzification
Layer

Output
Layer

Hidden
Layer

Fig. 1. The Structure of The Proposed FNNIP

The input layer consists of N input vectors x i , i = 1, 2,

, N − 1, N ; each vector x i

has t j elements. The total of the input nodes are N × t j .
The fuzzification layer has t f

= N nodes. Each node in the fuzzification layer

represents a fuzzy membership function for the t j input variable in vector x i . The
fuzzy membership function used is described in equation (1).
tj

μ ij k ( xi j ) = e

−(

∑ wijk xij ) 2
j =1

(1)

A Novel Network Intrusion Attempts Prediction Model

Where

μijk

is the k

th

421
421

output of the fuzzification layer, wijk is the weight between

input nodes xi j and the k

th

fuzzification nodes.

For each node in the hidden layer, the inputs are

μijk

and the outputs hl are as

follows [13]:
tf

net l = ∑ v kl μ ij k ( xi j )

hl = f (net l )

(2)

k =1

Where vkl are the weights between the fuzzification layer and the hidden layer.
In the output layer, each output om is as follows:
th

om = f (netm ) netm = ∑ zlm hl

(3)

l =0

Where t h is the number of nodes in the hidden layer, zlm are the weights between the
hidden layer and the output layer and f ( net ) = 1

1 + e− x

.

The error function of the FNNIP is:

E=

1
2

∑ (t

m

− om ) 2

(4)

m

th

Where t m is the expected output for the m output node om . The weights between
hidden layer and output layer are adjusted by BP algorithm as follows [12]:

zlm (n) = zlm (n − 1) + Δzlm (n)
Δz ilm (n) = ηδ m hl + αΔz lm (n − 1)

Where

(5)
(6)

Where n is the iteration count, δ m = tm − om . The weights between fuzzification
layer and hidden layer are adjusted by the following equations [12]:

vkl (n) = vkl (n − 1) + Δvkl (n)
Where

Δv kl (n) = ηδ kl μ ijk + αΔvkl (n − 1)
tf

to

k =1

m =1

δ kl = (∏ μijk )(∑ δ m zlm / μijk )

(7)
(8)
(9)

Where to is the total number of the output nodes. Similarly, the weights between
input layer and fuzzification layer are adjusted as follows [12, 13]:

wijk (n) = wijk (n − 1) + Δwijk (n)

(10)

422

G. Zhang and J. Sun

Δwijk (n) = ηδ kl μ 0 + αΔwijk (n − 1)

Where

(11)

t

1 j
μ 0 = ∑ exp(−( wijk xijk ) 2
t j j =1

(12)

In the formula above, “ η ” is a learning rate, which controls the rate of convergence,
in the beginning of training it has the larger value, then decrease quickly [13]. We set
η = b2 (1 − t / tm ) , b2 is a constant value and in the range of [0,1] (it is set to 0.3 in
this paper),

tm is the maximal training number in advance, t is the t th training. The

momentum constant “ α ” (kept at 0.6 throughout) is able to add to speed up the
training process and avoid local minima. The initial weights are randomly selected in
the interval [-1, +1]. The training process is continued till E ( n) < ε at all points or
the number of iteration reaches its maximum (e.g., 5000). The value of ε is taken to
be 1 × e

−4

during training.

3 The Description of the Network Traffic Behaviors
In this paper, we assume that the current state of network connection record
dependents on the latest tj continuous network connection records sequences. So, the
network intrusion prediction method is defined as:
B

B

Definition 1. Given the latest tj continuous network connection records sequences
X , each record xi in X has N-1 connection features and 1 label feature (normal or
abnormal). The next network connection record xnext is predicted by the given latest tj
serial network connection records, and the label feature (normal or abnormal) may
also be predicted:
B

B

B

B

B

X = (x1 , x 2 ,

B

, xt j ) ⇒ x next

B

B

(13)

According to definition 1, it is assumed that the next network action can be correctly
predicted by the latest continuous network actions.
To improve the performance of the FNNIP, we should reduce the dimensions of
the input vector. Some important features for intrusion prediction system are
employed. Before we analyze the data set, data standardization must be performed.
The data standardization process is described as follows [3]:

xik' =

xik − xk
, (i = 1,2,…, n, k = 1,2,…, m)
sk

(14)

Where x k and sk is the mean value and standard deviation of one feature or the kth
dimension of data set [3].

A Novel Network Intrusion Attempts Prediction Model

xk =

sk =

1 n
∑ xik
n i =1

423
423

(15)

1 n
( xik − xk ) 2
∑
i =1
n

(16)

This procedure transforms the mean of the set of feature values to zero and the
'

standard deviation to one. But the xik may not be in the interval [0,1] and it is
processed as follows [3]:

xik' − min1≤i≤ n {xik' }
x =
, (k = 1,2,…, m)
max1≤i≤n {xik' } − min1≤i≤ n {xik' }
''
ik

(17)

To select the important features, we calculate the correlation coefficient between xi
and x j as follows [3]:

rij =

∑
∑

m
k =1

xik − xi x jk − x j

m

( xik − xi ) 2 ⋅
k =1

∑

m

( x jk − x j ) 2
k =1

(18)

It is strong negative correlation between xi and x j when rij = −1 and it is strong
positive correlation between xi and x j when rij = 1 .
In this paper, we compute the correlation coefficients between two features by the
soft ware SPSS [3]. If the rij ≥ 0.7 , we select only one of them to represent these
two fields. The selected features are describe as follows:

x = ( x1 , x 2 ,

, x N ) = ( duration, service, flag , src _ bytes, dst _ bytes, wrong _

fragment , urgent , hot , num _ failed _ log ins , su _ attempted , num _ root , num _
file _ creations, num _ access _ files , count , srv _ count , serror _ rate, srv _ serror

(19)

_ rate, rerror _ rate, srv _ rerror _ rate, same _ srv _ rate, srv _ diff _ host _ rate,
dst _ host _ count , dst _ host _ srv _ count , dst _ host _ same _ src _ port _ rate,
dst _ host _ srv _ diff _ host _ rate, label )

4 Experiments
4.1 Training the FNNIP

The proposed FNNIP are evaluated by the famous KDD’99 data sets [10]. There are
four main categories attacks in the KDD’99 data sets: DoS, R2L, U2R and Probing.
The training data is randomly collected from the original raw KDD’99 data sets,
which contains all of four categories attacks (20%) and normal records (80%).

424

G. Zhang and J. Sun

We select only 17 features from the total 41 features of each connection record and
an additional label feature as the inputs of the FNNIP (N=18). The latest 5 ( t j =5 for the
FNNIP) continuous connection records are employed to predict the next connection
records. So, the total input nodes of the FNNIP are 90. A slide window (window size is
5 records and the step is 1) employed covers the training data and its outputs are passed
to the FNNIP. The total nodes of fuzzification and the total nodes of output layer are 18,
respectively. The total nodes of hidden layer are selected as H=30,40,50, respectively.
During training process, the training data set is exposed to the proposed FNNIP
and the weights of the FNNIP are initialized randomly. To adjust the weights, the
actual outputs are compared with desired targets, respectively. If the output and target
match (in the same range), no change is made to the weights. However, if the output
differs from the target (in the different range) a change must be made to the specific
weight. The training process is continued till E (n) < ε at all points or the number of
iteration reaches its maximum (e.g., 10000).
4.2 Testing the FNNIP

Four groups test data sets are generated from the KDD’99 test data set. It contains a
total of 24 attacks in training data and additional 14 types attacks in the test data only.
The extracted test data sets contain 80% normal connection records and 20% attacks
records but not including the training data set. The testing data is also normalized as
described in section 3.2. We use the Euclidean distance to measure the similarity
between the active output o o = {oo1 , oo 2 , , oon −1} and the corresponding records

ot = {ot1 , ot 2 ,

, otn −1} in the test data (except the label feature):

d=

n −1

∑ (o

oi

− oti ) 2

(20)

i =1

If d is little than a specific value (e.g. 0.3) then the result of prediction of
connection record is right, otherwise, the result of prediction is wrong.
For the label feature, if its value of the prediction is larger than 0.5, the prediction
record is abnormal; otherwise, the prediction record is normal.
The hit occurs only when the connection record is correctly predicted and its
corresponding label is rightly predicted.
The FNNIP presented in this paper is evaluated using ROC charts. The
experimental results are showed in Fig.2 to Fig.5, which are the average results for the
four groups testing data set and when the Euclidean distance satisfies d<0.3.
Given a specific number of hidden nodes for the FNNIP, we can obtain a pair of hit
rate and false alarm for specific type of attacks. Fig.2 to Fig.5 show that the
performance of the FNNIP increases with different numbers of hidden nodes, but the
hit rate can only improve slightly after the number of hidden node is greater than 40.
Fig.2 is the ROC of prediction of the DoS attacks. The hit-rate is greater than 80%
when false alarm rate is 10% and the number of hidden nodes of FNNIP is greater
than 40. If we allow the false alarm greater than 17%, the hit-rate is greater than 90%.
Fig.3 is the ROC of prediction of the Probing attacks. The hit-rate is greater than
80% when false alarm rate is 5% and the number of hidden nodes of FNNIP is

A Novel Network Intrusion Attempts Prediction Model

425
425

greater than 40. If we agree that the false alarm greater than 15%, the hit-rate is
greater than 90%.
Fig.4 is the ROC of prediction of the U2R attacks. The hit-rate is greater than 80%
when false alarm rate is 5% and the number of hidden nodes of the FNNIP is greater than
50%. If we permit the false alarm greater than 20%, the hit-rate is greater than 90%.
Fig.5 is the ROC of predicting the R2L attacks. From Fig.5, The hit-rate is between
70% and 75% when false alarm rate is 10% and the number of hidden nodes of the
FNNIP is greater than 40. If we allow the false alarm greater than 30%, the hit-rate
may be greater than 90%.

H=30

H=40

H=50

0. 95
0. 9

Hit Rate

0. 85
0. 8
0. 75
0. 7
0. 65
0. 6
0. 55
0. 5
0. 01 0. 02 0. 05 0. 07 0. 1 0. 15 0. 2

0.05 0.07 0.1 0.12 0.15 0.17 0.2 0.3 0.4 0.5
False Alarm Rate

Fig. 2. The ROC for the DoS attacks
H=30

H=40

1

0.95

0.95

0.9

0.9

0.85

0.85

Hit Rate

0.8

0.7

0. 4

0. 5

Fig. 3. The ROC for the Probing attacks

H=50

0.75

0. 3

False Alarm Rate

1

Hit Rate

H=40

1

1
0. 95
0. 9
0. 85
0. 8
0. 75
0. 7
0. 65
0. 6
0. 55
0. 5

Hit Rate

H=30

H=50

H=30

H=40

H=50

0.8
0.75
0.7
0.65

0.65

0.6

0.6

0.55

0.55

0.5

0.5
0.01 0.02 0.05 0.07

0.1

0.15

0.2

0.3

0.4

0.5

0.05 0.07

0.1

0.12 0.15

0.17

0.2

0.3

0.4

False Alarm Rate

False Alarm Rate

Fig. 4. The ROC for the U2R attacks

Fig. 5. The ROC for the R2L attacks

0.5

From Fig.2 to Fig.5, we can conclude that the DoS and R2L attacks are more
flexible than the other two type attacks during their intrusion procedure. It is more
difficult to predict the Probing and U2R attacks correctly.

5 Conclusions and Future Work
A novel method of predicting intrusion intentions based on fuzzy neural network has
been investigated in this paper. The proposed FNNIP use the latest continuous

426

G. Zhang and J. Sun

connection records and their labels (“normal” or “intrusion”) to predict the next record
and the corresponding label (“normal” or “intrusion”). It is evaluated by the famous
KDD’99 dataset and the experiment results demonstrate that the proposed FNNIP has
acceptable ability of predicting different type of attacks in network connection records.
However there are some issues to be studied in the future. First, how much is the
optimal number of the latest continuous records to predict the next records? Second,
what features are more important to the FNNIP prediction scheme? Final, how much is
optimal number of hidden nodes for FNNIP corresponding to the different parameters?

References
1. Warrender, C., Forrest, S., and Pearlmutter, B.: Detecting Intrusions Using System Calls:
Alternative Data Models. Proceedings of the 1999 IEEE Symposium on Security and
Privacy May 1999 Page(s) 133 - 145.
2. Forrest, S., Hofmeyr, S.A.; Somayaji, A., Longstaff, T.A.: A Sense of Self for UNIX
Processes. Proceedings of the 1996 IEEE Symposium on Security and Privacy May 1996
Page(s) 120 - 128.
3. Hai J., Jianhua S., Hao C., Zongfen H.: A Fuzzy Data Mining Based Intrusion Detection
Model. Distributed Computing Systems, 2004. FTDCS 2004. Proceedings. 10th IEEE
International Workshop on Future Trends of 26-28 May 2004 Page(s) 191 - 197.
4. HLee, W.H, HStolfo, S.J.H: Data Mining Approaches for Intrusion Detection. Proceedings of the
Seventh USENIX Security Symposium, January 1998 Page(s) 79-93.
5. Wenke L., Stolfo, S.J.; Mok, K.W.: A Data Mining Framework for Building Intrusion
Detection Models. Proceedings of the 1999 IEEE Symposium on Security and Privacy
May 1999 Page(s) 120 - 132.
6. HGhosh, A.K.H, HSchwartzbard, A.H: A Study in Using Neural Networks for Anomaly and
Misuse Detection. Proceedings of the Eighth USENIX Security Symposium (Security'99),
Aug. 1999 Page(s) 141-151.
7. Amini M., Jalili R.: Network-Based Intrusion Detection Using Unsupervised Adaptive
Resonance Theory (ART). Advances in Neural Information Processing Systems 10,
Cambridge, MA: MIT Press, 1998.
8. Nong, Y., Qiang, C., Borror, C.M.: EWMA Forecast of Normal System Activity for
Computer Intrusion Detection. IEEE Transactions on Reliability Volume 53, Issue 4, Dec.
2004 Page(s) 557 - 566.
9. Feng, L., Xiaohong G., Sangang G., Yan G., Peini L.: Predicting the Intrusion Intentions
by Observing System Call Sequences. Computers and Security, Elsevier Science, Volume
23, Issue 3, May, 2004 Page(s) 241-252.
10. KDD Cup 1999 data. Hhttp://kdd.ics.uci.edu/databases/kddcup99/kddcup99.htmH.
11. Mukkamala S., Sung A. H.: Feature Selection for Intrusion Detection Using Neural
Networks and Support Vector Machines. Journal of the Transportation Research Board,
Transportation Research Record No 1822, 2003 Page(s) 33-39.
12. Dash, P.K., Pradhan, A.K., Panda, G.: A Novel Fuzzy Neural Network Based Distance
Relaying Scheme. IEEE Transactions On Power Delivery, VOL. 15, NO. 3, July 2000
Page(s) 902 - 907.
13. Yuan, F., Wu, H., and Yu, G.: Web Users’ Classification Using Fuzzy Neural Network.
Knowledge-Based Intelligent Information and Engineering Systems: 8th International
Conference, Kes 2004, Wellington, New Zealand, September, 2004.

