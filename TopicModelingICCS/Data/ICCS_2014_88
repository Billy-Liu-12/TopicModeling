Procedia Computer Science
Volume 29, 2014, Pages 1002–1013
ICCS 2014. 14th International Conference on Computational Science

Hypergraph grammar based adaptive linear computational
cost projection solvers
for two and three dimensional modeling of brain
Damian Goik2 , Marcin Sieniek2 , Maciej Wo´zniak2 , Anna Paszy´
nska1 , and
2
Maciej Paszy´
nski
1

Jagiellonian University, Krakow, Poland
AGH University of Science and Technology, Krakow, Poland
http://home.agh.edu.pl/~paszynsk , paszynsk@agh.edu.pl

2

Abstract
In this paper we present a hypergraph grammar model for transformation of two and three
dimensional grids. The hypergraph grammar concerns the proces of generation of uniform grids
with two or three dimensional rectangular or hexahedral elements, followed by the proces of h
reﬁnements, namely breaking selected elements into four or eight son elements, in two or three
dimensions, respectively. The hypergraph grammar presented in this paper expresses also the
two solver algorithms. The ﬁrst one is the projection based interpolation solver algorithm used
for computing H 1 or L2 projections of MRI scan of human head, in two and three dimensions.
The second one is the multi-frontal direct solver utilized in the loop of the Euler scheme for
solving the non-stationary problem modeling the three dimensional heat transport in the human
head generated by the cellphone usage.
Keywords: hypergraph grammar, projection solver, MRI scan, non-stationary heat transfer, brain
heating by cellphone

1

Introduction

The two and three dimensional h adaptive ﬁnite element method (FEM) [12, 4] is the sophisticated tool for performing numerical simulations [2, 1, 19, 7]. In this paper we present a
hypergraph grammar model expressing the h adaptive mesh transformations of two and three
dimensional grids with rectangular and hexahedral elements.
In our previous work we modeled the two dimensional triangular and rectangular grids
[16, 15, 14, 13] as well as three dimensional hexahedral grids [17, 18] by CP-graph grammars.
Hypergraphs and hypergraph grammar were originally introduced by [9, 10] as Hyperedge
Replacement Grammar . The hypergraph grammars were introduced as their extension by
[20] for modeling transformations of two dimensional adaptive grids with rectangular elements.
1002

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.090

Hypergraph grammar based adaptive projection solvers

Goik et. al.

The hypergraph grammars have been also recently used for modeling of the multi-frontal direct
solver algorithm executed over two dimensional rectangular elements grids [8]. In this paper
we present an extension of [20] for modeling of transformations of three dimensional adaptive
grids composed with hexahedral elements.
The projection-based interpolation (PBI) [3] is a linear computational cost algorithm for
solving the projection problem over the reﬁned grids. It has been already tested on two and
three dimensional examples [19, 7] In this paper we model the projection solver implementing
the projection based interpolation algorithm. The projection solver is used for computing the
H 1 projection of the MRI scan data of the human head.
The second solver modeled by hypergraph grammar is the multi-frontal direct solver algorithm [5, 6] solving the non-stationary heat transfer problem over the human head, the heating
induced by the cellphone usage. The solver is executed in a loop, for each time step, utilized in
the Euler scheme. It should be emphesized that the multi-frontal solver for such adaptive grid
usually has computational cost varying between O(N ) and O(N 2 ) depending on the topology of
the mesh. We also discuss the advantages and disadvantages of using the hypergraphs instead
of CP-graphs.
We conclude the paper with the application of the hypergraph grammar based projection
solver for modeling of heating of the human head enforced by electromagnetic waves generated
by the cellphone.

2

Hypergraph grammar for modeling two dimensional
adaptive mesh transformations

In this section we present the hypergraph grammar productions for generation and adaptation
of two dimensional meshes with rectangular elements. The productions are summarized in
Figure 1, and they have been obtained by modiﬁcation of the productions presented in [20]. We
start with the graph grammar productions that can be used for both sequential and parallel
generation of the initial mesh with point singularity located at the center of the bottom of the
mesh. We start with executing production (P init) that transforms the initial state (S) into
the initial mesh. Next, we proceed with reﬁnements of the left and right element, by executing
the productions (P init left) and (P init right), followed by the execution of the production
(P irregularity). In order to generate further local reﬁnements of the mesh, we proceed with
productions (P break interior) and (P enforce regularity), executed one after another, as
many times as we need to have levels of reﬁnement.

3

Hypergraph grammar for modeling three dimensional
adaptive mesh transformations

The process of generation of the three dimensional computational mesh with hexahedral elements starts with execution of the (P init production, presenting in Figure 2, generating the
hypergraph representing a single ﬁnite element. In case of uniform mesh adaptations, we can
prepare a sequence of graph grammar productions replacing the single element by a uniform
cluster of elements. The exemplary production (P init break) presented in Figure 3 generates
the uniform mesh of 2 × 2 × 2 elements. In order to get non-uniform mesh reﬁnements, we need
to enforce the so-called 1 irregularity rule. The rule doesn’t allow for breaking a single element
for the second time without breaking adjacent elements ﬁrst. This is because we do not want
1003

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 1: Hypergraph grammar productions for generation and adaptation of two dimensional
grids

to have problems with ﬁnite element approximation over element faces, when one neighbour
of the face is not broken, and the other neighbor of the face is breaken many times. In order
to enforce the 1 irregularity rule, we must break element interiors ﬁrst, as it is expressed by
production (P break int) presented in Figure 4. The exemplary execution of the production
over the eight ﬁnite element mesh is presented in Figure 5.

4

Hypergraph grammar for modeling the projection based
interpolation algorithm

The PBI algorithm ﬁnds the continuous approximation of MRI scan data [19, 7]. The aim of
n
PBI is to ﬁnd coeﬃcients ai , i = 1, ..., n such that u = i=1 ai φi and ||U − u||H01 (Ω) → min.
The projection problem can be solved locally, over ﬁnite element vertices, edges and interiors
in 2D, or faces and interiors in 3D, respectively, by using the PBI algorithm.
The procedure is illustrated in Figure 6 for 2D case and in Figure 7 for 3D case.
The PBI algorithm starts with the execution of production (P project vertex) executed
over each vertex of the mesh. Namely, for each vertex vi we compute the projection coeﬃcient
1004

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 2: The initial production generating a single cubic element

Figure 3: The second production breaking the single element into eight elements
just by taking the value of the projected function at that point
a vi =

U (vi )
φi (vi )

(1)
1005

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 4: The production breaking an interior of a single element
In the next step, expressed by production (P project edge), we compute the local projection
contribution related to an edge ei
a ei =

ei
ei

dU dφei
d
k=1 dxk dxk
dφei dφei
d
k=1 dxk dxk

(2)

where φei is the second order polynomial basis function deﬁned over the edge ei , and d = 2 in
2D and d = 3 in 3D case. The next step, expressed by production (P project face) consists
in an optimization on faces fi :
a fi =

fi
fi

dU dφfi
d
k=1 dxk dxk
dφfi dφfi
d
k=1 dxk dxk

(3)

where φfi is the second order in both directions polynomial basis function deﬁned over the face
fi . Finally, for 3D case only, an analogical optimization is performed iver the interiors, as it is
expressed by production (P project int)
aI =

I
I

3
k=1
3
k=1

dU dφI
dxk dxk
dφI dφI
dxk dxk

(4)

where φI is the second order in three directions polynomial basis function deﬁned over the
interior I. For more technical details on the PBI algorithm we refero to [19, 7].
This PBI procedure is repeated several times for a series of subsequently more adapted
meshes until the stop condition is met i.e. as long as the max approximation error in terms of
H 1 norm remains above a threshold. Since only elements in size (h-adaptation) are reﬁned and
the polynomial order p remains ﬁxed to 2, the method can be referred to as h-adaptive PBI or
h-PBI. The computational cost of the PBI algorithm is linear O (N ), since it visits all vertices,
edges, faces and interior just once, to compute the PBI coeﬃcients.
1006

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 5: The eight elements mesh after breaking the interior of the front element

5

Hypergraph grammar for modeling the multi-frontal direct solver algorithm

The multi-frontal solver algorithm constructs element frontal matrices for all ﬁnite elements of
the mesh. The rows and columns in the element frontal matrices corresponds to element nodes,
namely interior, faces, edges and vertices. The contributions associated to element faces, edges
and vertices are shared between frontal matrices associated to adjacent elements. In particular,
in case of face nodes, the entry is shared between two adjacent elements. In case of edge nodes,
the entry can be shared between up to four matrices (under the assumption of regular grids).
In case of vertices, the entry can be shared between up to eight matrices.
The ﬁrst graph grammar productions are responsible for generation of the element frontal
1007

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 6: The productions for computing the projections over two dimensional element vertices,
edges, and interior

Figure 7: The productions for computing the projections over three dimensional element vertices, edges, faces and interior

matrices, as presented in Figure 8. This is done by productions (P agreg init) generating
matrix entries associated with interior node, (P agreg boundary) and (P agreg face) gen1008

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 8: The productions for assembly of element frontal matrix, and for elimination of interior
and boundary nodes.

Figure 9: The productions for merging two frontal matrices and elimination of fully assembled
nodes from common face

erating matrix entries associated with boundary and interior faces, (P agreg edge) and (P
agreg vertex) generating matrix entries associated with element edges and vertices.
For a single frontal matrix, we can only eliminate nodes associated with its interior or
located on the boundary. Interior node is eliminated by production (P elim int) boundary
nodes are eliminated by productions (P elim face), (P elim edge) and (P elim vertex).
These productions are also presented in in Figure 8.
Having the to adjacent elements with frontal matrices with eliminated interior and boundary
nodes, we can now merge the frontal matrices into one frontal matrix in order to get full
assembled nodes for the common face. It is expressed by productions (P merge eliminate)
and illustrated in Figure 9. This procedure of merging of frontal matrices, assembling shared
nodes and eliminating fully assembled nodes is repeated until all the nodes are eliminated in the
mesh. For uniform three dimensional grids the multi-frontal solver algorithm has computational
cost of the order of O(N 2 ).
1009

Hypergraph grammar based adaptive projection solvers

6

Goik et. al.

Numerical examples

In this section we present the numerical results concerning
• two dimensional adaptive PBI approximations of the MRI scans of the human head,
presented in Figure 10
• three dimensional adaptive PBI approximation of the MRI scans of the human head,
where the PBI approximation is based on the 3D bitmap obtained by collecting of all the
MRI scan slices together
• three dimensional solution of the Pennes bioheat transfer equations

Figure 10: The exemplary three MRI scans of the cross-sections of the human brain

6.1

Two dimensional PBI approximations of the MRI scans of the
human head

We have executed the 2D PBI algorithm over the MRI scans for a particular cross-sections of
the human head. The exemplary three results are presented in Figure 11.

Figure 11: The exemplary three PBI approximations of the cross-sections of the human brain

6.2

Three dimensional MRI scans of the human head

Next, we have collected all the MRI scans into a single 3D bitmap, and executed the PBI
algorithm to get the 3D approximation. The cross section of the resulting mesh is presented in
Figure 12.
1010

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 12: The steps of the 3D PBI adaptive approximations of the human brain

6.3

Three dimensional multi-frontal direct solver solution of the
Pennes equation

Finally, we have solved the Pennes equation modeling the bioheat of the human head with the
energy of heating obtained from the solution of the Maxwell equations, as described in [11].
The resulting heating of the humean head in particular time steps is presented in Figure 13. In
particular we solved:
(ut+1 , v)H 1 (Ω) − δ (∇ · K∇ut+1 , v)H 1 (Ω) − Wb cb (ua0 − ut+1 , v)H 1 (Ω) =
(ut , v)H 1 (Ω) + δ (qm + qSAR , v)H 1 (Ω)

(5)

where the ﬁnite diﬀerence for Euler scheme in time is mixed with variational formulation in
spatial domain. In particular, the deposited energy by electromagnetic waves transmitted in
the tissue has been included as qSAR based on the solution obtained by [11] on page125 (the
energy varies between the two lines presented there for diﬀerent locations of the cellphone between 2 to 8 cm from the human head). The numerical results presented in this paper have
quantitative character only, in other words we selected simpliﬁed material data, in order to
test the hypergraph grammar model. For detailed model analysis we refer to [11], where the
numerical results show that the 15 minutes exposer to the cellphone generated electromagnetic
waves increases the brain temperature up to 0.25 Celsjus.
1011

Hypergraph grammar based adaptive projection solvers

Goik et. al.

Figure 13: The PBI solver solutions of the Pennes equations modeling the heating of the human
head by electromagnetic waves generated by cell phone, in several time steps

7

Conclusions

In this paper we presented a hypergraph grammar model for generation and adaptation of two
and three dimensional grids with rectangular and hexahedral elements. We showed that the
hypergraphs generated by the grammar can be easily used for modeling of the projection based
interpolation solver algorithm, as well as multi-frontal direct solver algorithm. In comparison to
the CP-graph grammars, the hypergraph grammars does not store the history of reﬁnements,
the resulting hypergrahs are ﬂat. On the contrary, the CP-graphs stored the history of reﬁnements, which could be useful for unreﬁnements or for construction of the elimination trees for
multi-frontal direct solver algorithm. However, the ﬂat structure of hypergraphs made it simple to express the algorithms like projection based interpolation solver. The presentation was
concluded with the application of the PBI algorithm for generation of approximation of MRI
scan of the human head as well as with application of the multi-frontal direct solver algorithm
computing the heat transfer of the human brain exposed to cellphone electromagnetic waves.
In the future work we plan to implement the solver that strictly follows the graph grammar
productions.
Acknowledgments The work of DG, MW, AP and MP presented in this paper has been
supported by Polish MNiSW grant no. 2012/06/M/ST1/00363. The work of MS has been
supported by Polish MNiSW grant no. 2011/03/N/ST6/01397.
1012

Hypergraph grammar based adaptive projection solvers

Goik et. al.

References
[1] Liu D. Bao G., Hu G. An h-adaptive ﬁnite element solver for the calculations of the electronic
structures. Journal of Computational Physics, 231(14):4967–4979, 2012.
[2] Tabbar M. Belytschko T. h-adaptive ﬁnite element methods for dynamic problems, with emphasis
on localization. International Journal for Numerical Methods in Engineering, 36(24):4245–4625,
1993.
[3] Buﬀa A. Demkowicz L. h1, h(curl), and h(div)-conforming projection-based interpolation in three
dimensions quasi-optimal p-interpolation estimates. Compuer Methods in Applied Mechanics and
Engineering.
[4] Pardo D. Paszy´
nski M. Rachowicz W. Zdunek A. Demkowicz L., Kurtz J. Computing with hpAdaptive Finite Elements, Vol. II. Frontiers: Three Dimensional Elliptic and Maxwell Problems
with Applications. Chapman & Hall / CRC Applied Mathematics & Nonlinear Science, 2007.
[5] Reid K. Duﬀ I.S. The multifrontal solution of indeﬁnite sparse symmetric linear systems. ACM
Transactions on Mathematical Software.
[6] Reid K. Duﬀ I.S. The multifrontal solution of unsymmetric sets of linear systems. SIAM Journal
on Scientiﬁc and Statistical Computing.
[7] Paszy´
nski M. Madej L. Goik D., Sieniek M. Employing an adaptive projection-based interpolation
to prepare discontinuous 3d material data for ﬁnite element analysis. Procedia Computer Science,
18:1535–1544, 2013.
[8] Paszy´
nska A. Paszy´
nski M. Gurgul P., Ku´znik K. Hypergraph grammar based parallel multi-frontal
solver for grids with point singularities. sumbitted to Scientiﬁc Programming, 2013.
[9] A. Habel and H. J. Kreowski. May we introduce to you: Hyperedge replacement. Lecture Notes
in Computer Science, pages 5–26, 1987.
[10] A. Habel and H. J. Kreowski. Some structural aspects of hypergraph languages generated by
hyperedge replacement. Lecture Notes in Computer Science, 247:207–219, 1987.
[11] Kyungjoo K. Finite Element Modeling of Electromagnetic Radiation and Induced Heat Transfer
in the Human Body. PhD thesis, The University of Texas at Austin, 2013.
[12] Demkowicz L. Computing with hp-Adaptive Finite Elements, Vol. I. One and Two Dimensional
Elliptic and Maxwell Problems. Chapman & Hall / CRC Applied Mathematics & Nonlinear
Science, 2007.
[13] Paszynski M. On the parallelization of selfadaptive hp-ﬁnite element methods part ii. partitioning
communication agglomeration mapping (pcam) analysis. Fundamenta Informaticae, 93.
[14] Paszynski M. On the parallelization of selfadaptive hp-ﬁnite element methods part i. composite
programmable graph grammar model. Fundamenta Informaticae, 93(4):411–434, 2009.
[15] Grabska E. Paszy´
nska A., Paszy´
nski M. Graph transformations for modeling hp-adaptive ﬁnite
element method with triangular elements. Lecture Notes in Computer Science, 5103:604–613, 2008.
[16] Grabska E. Paszy´
nska A., Paszy´
nski M. Graph transformations for modeling hp-adaptive ﬁnite
element method with mixed triangular and rectangular elements. Lecture Notes in Computer
Science, 5545:875–884, 2009.
[17] Paszy´
nski M. Paszy´
nska A., Grabska E. A graph grammar model of the hp adaptive three dimensional ﬁnite element method. part i. Fundamenta Informaticae, 114(2):149–182, 2012.
[18] Paszy´
nski M. Paszy´
nska A., Grabska E. A graph grammar model of the hp adaptive three dimensional ﬁnite element method. part ii. Fundamenta Informaticae, 114(2):183–201, 2012.
[19] Skotniczny M. Magiera K. Sieniek M., Gurgul P. Application of multi-agent paradigm to hpadaptive projection-based interpolation operator. Journal of Computational Science, 4(3):164–169,
2013.
´
[20] G. Slusarczyk
and A. Paszy´
nska. Hypergraph grammars in hp-adaptive ﬁnite element method.
Procedia Computer Science, 18:1545–1554, 2013.

1013

