Available online at www.sciencedirect.com

Procedia Computer Science 9 (2012) 661 – 669

International Conference on Computational Science, ICCS 2012

An Equation-Type Approach for the Numerical Solution of the
Partial Differential Equations Governing Transport Phenomena in
Porous Media
Shuyu Suna, Amgad Salamaa,b,*, and M. F. El-Amina,c
a

King Abdullah University of Science and Technology (KAUST), Thuwal 23955-6900, KSA
b
Nuclear Research Center, AEA,Cairo 13759, Egypt
c
Aswan Faculty of Science, South Valley University, Aswan 81528, Egypt

Abstract
A new technique for the numerical solution of the partial differential equations governing transport phenomena in porous media
is introduced. In this technique, the governing equations as depicted from the physics of the problem are used without extra
manipulations. In other words, there is no need to reduce the number of governing equations by some sort of mathematical
manipulations. This technique enables the separation of the physics part of the problem and the solver part, which makes coding
more robust and could be used in several other applications with little or no modifications (e.g., multi-phase flow in porous
media). In this method, one abandons the need to construct the coefficient matrix for the pressure equation. Alternatively, the
coefficients are automatically generated within the solver routine. We show examples of using this technique to solving several
flow problems in porous media.
Keywords: Transport in porous media, Numerical Methods, Finite difference, Equation Approach

1. Introduction
Within the framework of the continuum hypothesis, the governing conservation laws describing transport
phenomena in porous media are given in the form of partial differential equations. Certain restrictions and length
scale constraints need to be satisfied to correctly adopt the continuum hypothesis to transport phenomena in porous
media, Salama and Van-Geel, [1] & [2]. Solutions of these equations are usually given numerically, particularly for
complex geometries and boundary conditions. Several numerical schemes have been applied to solving the
governing conservation laws in porous media including, the finite difference method, the finite element method,
boundary element method, etc. (Das et.al. [3, ], Moortgat et.al., [4], Dong et.al. [5], Sun and Wheeler [6], Dawson
et.al. [7], Sun et.al. [8], Natarajanl and Kumar [9], Leo and Booker [10] to list but a few).). Two approaches may be
used to solving flow equations in porous media. In the first approach, a coupled system of equations is constructed
by discretizing both the conservation of mass law and Dar
In this approach, both the pressure and velocity fields are obtained simultaneously. This approach is preferable for
* Corresponding Author. Tel: +966-2-8080-423
E-mail address: amgad.salama@kaust.edu.sa

1877-0509 © 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
doi:10.1016/j.procs.2012.04.071

662

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669

large systems for which direct methods are expensive. However, it depends on our choice of the initial guess which,
if not chosen properly, can lead the solution to diverge. In the second approach, which is the most widely utilized for
relatively smaller
n an equation in the
pressure only, which is subsequently discretized for numerical solution. The discretized, algebraic pressure
equations are then written in matrix form in which the matrix of coefficients contains information about the grid and
the coefficients characteristics to porous media like permeability, etc. Solving this set of algebraic equations
determines the pressure field everywhere in the solution domain from which the velocity field may be obtained. In
both approaches, information at the boundaries are transformed to the known, right hand side vector. It is believed
that the extra manipulation of the governing laws (based on the second approach), restricts the robustness of this
technique in the sense that it is case dependent. In other words, each problem is, generally, manipulated differently
and, therefore, different adaptation may be required (e.g., multi-phase flow system). Furthermore, the extra
manipulations of the governing equations results in equations which requires, usually, larger expression when
discretized. On the other hand the first approach, which apparently is very well suited to the physics of the problem,
requires initial guess which may result in the need for several iterations or even the solution to diverge if the initial
guess was not successful.
It is our belief that a robust numerical algorithm is the one in which physics are separated from the solver as
suggested by the second approach and direct solution is obtained without iterations as suggested by the first
approach.
In this work, we introduce a third approach which is somehow fall in between these two approaches but is far
mass laws are discretized and also resembles the second approach in the sense that the coefficient matrix of the
pressure equation is obtained automatically without the need for iterations. We call this technique equation-type
method (or the experimenting pressure method) in which we formulate the solution based on the physics of the
problem with no extra manipulations of the governing laws. Furthermore, the boundary conditions are very easily
implemented.
2. Governing equations and its finite difference formulation
In order to highlight the features of our scheme, we consider a simple 2D flow problem in a homogeneous,
porous medium, rectangular domain. Later on we consider multi-phase flow as well. The governing equations may
be given as,

v

K p

in

(1)

q

in

(2)

v
p

in

pB

in

v n vB

(3)

D

(4)

N

Using the cell-center finite difference scheme (CCFD) over a generic cell (Fig.1), Eq. (1) may be discretized as,

u x (i, j

1
)
2

u x (i 1, j

K xx (i, j

1
)
2

1
)
2

1
1
) p(i
,j
2
2
1
1
x(i
) x(i
)
2
2
3
1
p(i
,j
) p(i
1
2
2
)
3
2
x(i
) x(i
2

p(i

K xx (i 1, j

1
,j
2

1
)
2

1
,j
2
1
)
2

(5)

1
)
2

(6)

663

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669

u y (i

1
, j)
2

u y (i

1
, j 1)
2

K yy (i

1
) p(i
2
1
y( j
) y( j
2
1
3
p(i
,j
)
1
2
2
, j 1)
3
2
y( j
)
2

1
, j)
2

K yy (i

1
,j
2

p(i

1
,j
2
1
)
2

1
)
2

(7)

1
,j
2
1
y( j
)
2

1
)
2

p(i

(8)

and for Eq. (2),

1
) u x (i, j
2
x(i 1) x(i)

u x (i 1, j

1
)
2

u y (i

1
1
, j 1) u y (i
, j)
2
2
y( j 1) y( j )

q(i

1
,j
2

1
)
2

(9)

i,j+1

i,j

i+1,j

Fig. 1: A generic cell
As explained earlier, two approaches may be used to solving this system of equations together with the imposed
boundary conditions. We highlight these two approaches in this section as a prelude to introducing our approach.
In the first approach Eqs. (5)-(9) subjected to the given boundary conditions are solved by trial and error to obtain
both the pressure and velocity fields simultaneously. An initial guess of the pressure field is introduced from which
the velocity field is obtained by solving Eqs. (5)-(8). This velocity field is then substituted into Eq. (9) to check
whether the divergence vanishes (in case of no source/sink term) or matches the source-sink term. As indicated
earlier this approach can be quiet expensive and may not even converge to the correct solutions for complex
systems.
In the second approach Eq. (1) is substituted into Eq. (2) to obtain an equation in the pressure only, which takes
the form,
K p

q

in

(10)

664

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669

Therefore by substituting Eqs. (5)-(8) into Eq. (9), one obtains a set of linear algebraic equations in the form,
mn

qi ci piB ,

aij p j

j 1

i 1,2,

, mn,

i

1,2,

,2(m n)

(11)

where the index i runs over the boundary. That is when i represents boundary cells the term ci piB is nonzero and is
zero otherwise (this term represents pressure boundary conditions). This system of equations can be written in
matrix for as,

Ap b
where A

(12)

[aij ] is the matrix of coefficients, p is the unknown pressure vector and b is the source/sink term and

boundary terms. The coefficients

aij and ci depend on the mesh and the hydraulic conductivities. This system of

algebraic equations is closed and may, therefore, be solved using any numerical scheme.
3. The Equation-Type Approach
As indicated earlier, this technique falls in between the previous two approaches in the sense that it discretizes the
governing equations as introduced from the physics and in the same time constructs the coefficient matrix of the
pressure equation automatically which allows the use of direct numerical methods.
We define the vector function f (p) :
mn

f (p)

aij p j

ci piB

qi ,

mn

mn

such that,

i 1,2, , mn

(13)

j 1

If p is the true pressure field we have,
f (p)

(0)

(14)

and if p is not the true pressure field we have,
f (p)

R

(15)

where R is the residual vector which may be given as,

R

v-q

(16)

v is the divergence for all the cells given the pressure field, p. In other words for any pressure field, we
where
use Eqs. (5)-(8) to obtain the velocity components at the mid cell faces which may be used to calculate the
divergence for each cell using Eq. (9). The residual is then calculated from Eq. (16). From Eq. 15, we have,
f (p) R (0)
or,

(17)

665

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669
mn

aij p j

j 1

ci piB qi

Ri

0,

i 1,2,

, mn

(18)

Using 16, one obtains
mn

aij p j

j 1

ci piB

(

v )i ,

i 1,2,

, mn

(19)

Eq. (19) is valid for any pressure field. Writing Eq. (19) in the form,
mn

aij p j

(

v)i

j 1

ci piB ,

i 1,2,

, mn

(20)

let
0 , or p0

p0

0 0

0 Tmn

0

(23)

We call this the zeros pressure field which is zero everywhere

ci piB

0

v)pi ,

(

i 1,2,

. Eq. (20) becomes,
(21)

, mn

This produces a vector which is zero except when i represents boundary cells. That is eq 21 determines the
contribution of the Dirichlet boundary conditions to the right hand side of eq. 12. Eq. 20, therefore, becomes
mn

aij p j

(

v)i (

v)pi 0

(22)

j 1

On the other hand, for,

pj

0 0

1

0 Tmn ,

j 1,2,

, mn

where p j is the j pressure field which is zero everywhere
We, therefore, have
ai j

(

v)pi

j

(

v)pi 0 ,

i 1,2,

(23)
except at cell j which is one.

, mn

(24)

This may be viewed as experimenting with pressure fields which are one at cell center of interest and zero
elsewhere as shown in Fig. 2.
p(i,j)=1

Fig. 2: Experimenting pressure field
From this equation one may be able to construct the coefficient matrix, A and to obtain the pressure and velocity

666

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669

fields.
4. Implementation
As indicated in the previous section, in this technique a set of mn+1 experimenting pressure fields are applied
in order to construct the matrix of coefficients of the pressure equation. These experimenting pressure fields are
generated in the solver routine. When the matrix of coefficients is constructed, it is passed to the solver to obtain the
pressure field. Implementing this technique requires constructing the following routines:
1.
2.
3.
4.

A routine that determines the velocity at cell face centers using the given pressure field, i.e., solving Eq.
1 as discretized in Eqs 5-8 (Routine, I).
A routine that determines the divergence at each cell using the calculated velocity, i.e., solving Eq. 2 as
discretized in the left hand side of Eq. 9 (Routine, II).
A routine to calculate the residual based on Eq. 16 which constructs the matrix of coefficients and the
right hand side of Eq. 12 (Routine, III).
Solver routine which has two main functions; (a) generating the experimenting pressure field to
construct the matrix of coefficient, A, and the right hand side (RHS) of Eq. 12, and (b) solve the system
of equations (Routine, IV).

Therefore, an mn+1 call for routines I, II, and III are generated in the solver routine, IV, and the residues
obtained are placed so that the matrix A and the RHS of Eq. 12, (b), are constructed. After constructing these
matrices, they are passed to the solver to obtain the unknown pressure field. In reality, the mn+1 call could be
significantly reduced given the sparsely of the matrix of coefficients. In other words, the experimenting pressure
fields for the interior cells (for example) only affect the divergence calculations of the four neighboring cells. This
property can be used to significantly reduce the number of calculations done for each of the experimenting pressure
fields and make this technique more efficient.
5. Example
For the sake of illustration, we simulate some simple flow problems. Consider water flow in a horizontal layer of
homogeneous porous medium domain of dimensions 50m x 50m x 1m. Flow is perpendicular to the depth direction
leading to only a two-dimensional computation. The boundary conditions and the permeability fields of the medium
have been adopted to simulate several scenarios. The viscosity and density of the flowing water are 1 cP and 1000
kg/m3, respectively. The soil is fully saturated with water. We consider six scenarios; in the first three scenarios we
consider (a) flooding in the interval between 40 m and 50 m on the West boundary, (b) flooding in the interval
between 20 and 30m (c) flooding in the lowest 10m. A velocity boundary condition of 10-5 m/s is assigned in all the
aforementioned scenarios at the west boundary while the entire east boundary is assigned a constant head of 10 mwater. The north and south boundaries are impermeable, Fig.3. Three more scenarios are also considered with
different permeability fields. In (d) we consider a barrier domain closer to the East boundary and in (e) we consider
two barrier domains. In (g) we consider the central part of the domain having a permeability which is one order of
magnitude lower than the surrounding domain. Fig. 4 below shows the numerical solution of this problem using this
technique, which conforms to the expected pressure and velocity fields. It shows that in the area of low permeability
the velocity is smaller and the flow tends to pass over this region (scenarios d,e,f,g,h).

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669

n

u n 0

u=10-5 m/s

h=10 m-water
n

u n 0

n

u n 0

Fig. 3: A schematic of the computational domain and the boundary conditions

(a) pressure contoures and velocity vectore

(b) pressure contours and velocity vectors

667

668

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669


(c) pressure contours and velocity vectors

G pressure contours and velocity vectors


H pressure contours and velocity vectors


I velocitye contours and vectors

669

Shuyu Sun et al. / Procedia Computer Science 9 (2012) 661 – 669




(g) pressure contours and velocity vectors


(h) velocity contours and vectors

Fig. 4: The simulated pressure and velocity fields for the six cases

6. Conclusions
A new numerical technique is proposed to solve the set of equations governing transport phenomena in porous
media. Unlike traditional techniques, this technique has the advantages that it is easy to implement, code, and
update. Moreover, it follows the physics of the problem and requires minimal manipulations in the governing
equations. In this technique a number of experimenting pressure fields equal to the number of cells of the computing
domain plus one are used to construct the matrix of coefficients. This technique has been successfully implemented
on a number of examples of different configurations and boundary conditions.
7. References
1. A. Salama and P. J. Van-Geel, J. Porous Media 11,4 (2008) 403.
2. A. Salama and P. J. Van-Geel, J. Porous Media 11,5 (2008) 421.
3. B. Das, S. Steinberg, S. Weber, and S. Schaffer, Transport in Porous Media, 17, (1994), 171-200.
4. J. Moortgat, S. Sun, and A. Firoozabadi, Water Resources Research, 47, (2011), W05511.
5. C. Dong, S. Sun, and G. Taylor, Journal of Porous Media, 14(3), (2011), 219-242.
6. S. Sun, and M.F. Wheeler, Computer Methods in Applied Mechanics and Engineering, 195, (2006), 653-673.
7. C. Dawson, S. Sun, and M. F. Wheeler, Computer Methods in Applied Mechanics and Engineering,193, (2004), 2565-2580.
8. S. Sun, and J. Geiser, International Journal for Multiscale Computational Engineering, 6(1), (2008), 87-101.
9. N. Natarajanl, and G. S. Kumar, International Journal of Engineering Science and Technology, 2(8), (2010), 3344-3350.
10. C.J. Leo, and J.R. Booker, International J. for Numerical and Analytical Methods in Geomechanics, 17, (1993), 47 1-492.

