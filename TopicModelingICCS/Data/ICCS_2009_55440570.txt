Finite-Element Non-conforming h-Adaptive
Strategy Based on Autonomous Leaves Graph
Diego Brand˜
ao, Sanderson L. Gonzaga de Oliveira, and Mauricio Kischinhevsky
Instituto de Computa¸ca
˜o, Universidade Federal Fluminense
Rua Passo da P´
atria, 156, Bloco E, S˜
ao Domingos, 24210-240, Niter´
oi - RJ - Brazil
http://www.ic.uff.br

Abstract. Adaptive mesh reﬁnement techniques are used in order to
decrease the computational cost associated with the numerical solution
of Partial Diﬀerential Equations. In this work, the reﬁned mesh is represented by a graph data structure. More precisely. this scheme follows
the Autonomous Leaves Graph concepts. The objective is to construct
an adaptive mesh reﬁnement with lower cost than tree-based schemes.
Moreover, the Autonomous Leaves Graph was initially proposed with the
Finite Volume Method and a Modiﬁed Hilbert Curve was used for the
total-ordering of the control volumes. This work proposes to integrate
the Autonomous Leaves Graph and the Finite Element Method as well
as to adapt the Modiﬁed Hilbert Curve for this scheme. Furthermore,
a non-conforming h-adaptive strategy is implemented. This approach is
applied in the solution of the Poisson equation problem and the experimental results are discussed.
Keywords: Finite Element Method, h-adaptativity, Autonomous
Leaves Graph, Space-ﬁlling curves, Numerical Methods, Hilbert Curve,
Non-conforming meshes.

1

Introduction

Adaptive mesh reﬁnement (AMR) strategies are important in several areas of engineering and uniform meshes have been widely used in order to solve such problems.
However, uniform meshes are not a computationally viable choice for solving a system of Partial Diﬀerential Equation (PDEs) in which steep gradients, singularities,
or discontinuities need to be captured. Thus, since a tree-based structure provides
a simple scheme for h and p-reﬁnement, it has been broadly used. In this structure, the parents and the reﬁned children elements are represented in the same
computational data structure, generating an overhead when scanning the neighbors elements in order to assemble the resulting linear system.
The research in this ﬁeld had a relevant advance when the Autonomous Leaves
Graph (ALG) was proposed for the Finite Volume Method and a space-ﬁlling
curve, named Modiﬁed Hilbert Curve (MHC), was proposed in order to number
the control volumes [1]. This present work proposes the ALG technique for the
Finite Element Method (FEM) and an adaptation of the MHC for this scheme
as well.
G. Allen et al. (Eds.): ICCS 2009, Part I, LNCS 5544, pp. 570–579, 2009.
c Springer-Verlag Berlin Heidelberg 2009

Finite-Element Non-conforming h-Adaptive Strategy

571

In the following section, the ALG is brieﬂy presented. Next, Section 3 describes
the MHC adaptation to FEM-ALG. Afterwards, Section 4 shows the numerical
results. Finally, Section 5 draws some concluding remarks.

2

Data Structure

Consider a bidimensional domain in a unit square Ω = [0, 1]2 . This square is
discretized into four new equal ones, obtaining four square discrete places. The
discretized domain is represented in Fig. 1.
The graph of Fig. 1 shows black circles, which are called here as black nodes.
Black nodes represent the discrete places of the discretized domain in Fig 1. In

Fig. 1. An initial discretized domain and a graph that represents it

Fig. 2. Reﬁnement process

572

D. Brand˜
ao, S.L. Gonzaga de Oliveira, and M. Kischinhevsky

addition, the gray circles of the graph represent transition nodes. They furnish
connectivity information between nodes with diﬀerent level of reﬁnements. The
ones in Fig. 1 represent connectivity information within the boundary of the
domain.
In the reﬁnement process, an element in a level n is replaced by four black nodes
and four transition nodes in a level n + 1. This process is sketched in Fig. 2.

3

MHC Adaptation

The ALG was proposed as a graph data structure in which each node represents
a control volume. Similarly, this present work proposes a graph data structure
in which each node represents a ﬁnite element.
Since non-conforming meshes are not represented by the Hilbert Curve, the
original ALG proposed the MHC in order to number the barycenter of the control
volumes. The MHC was implemented by a linked list. Likewise, this present work
implements two linked lists in order to number: i) the barycenter of the ﬁnite
elements (likewise the original ALG)), i.e. a linked list to number the ﬁnite
elements and ii) the vertices of the non-conforming ﬁnite elements. Moreover,
since in the FEM the values are evaluated in the element vertices, the second
linked list is an adaptation of the MHC algorithm in order to number the vertices
of the ﬁnite elements. Figure 3 depicts an example of the vertice numbering by
the adaptation of the MHC.
Each node of the second linked list represents a mesh vertex as well as retains
relevant information about which ﬁnite element it belongs to. Furthermore, each

Fig. 3. Example of the vertice numbering by the adaptation of the MHC

Finite-Element Non-conforming h-Adaptive Strategy

573

node of the second linked list is allocated for this purpose whereas the pointers
of the ﬁrst linked list (which numbers the proper ﬁnite elements) are included in
the proper graph nodes. In other words, there is a pointer in each graph node and
these pointers implement the (ﬁrst one) linked list to number the ﬁnite elements.
3.1

Assembling the Resulting Stiﬀness Matrix

The goal of those structures is to assemble the resulting stiﬀness matrix with the
adequate connectivity information among neighbor elements. Furthermore, each
line of the stiﬀness matrix is associated with a mesh vertice and is represented
by a diﬀerent simple linked list. In addition, since this scheme produces a sparse
stiﬀness matrix, only non-zero values as well as their position are saved into the
linked lists that represent the stiﬀness-matrix lines.
Notice that there are a linked list to number the ﬁnite elements, a linked list
to number the vertices and each line of the resulting stiﬀness matrix is also a
linked list.
Those linked lists that represent the stiﬀness-matrix lines are updated by
a computational procedure that scans the vertex-linked list. It applies a linear
interpolation of the associated corner-element values in order to solve the hanging
nodes.
Numerical results show that this numbering scheme produces a sparse symmetric positive-deﬁnite matrix [2]. Moreover, the Conjugate Gradient Method
was used in order to solve the resulting stiﬀness matrix.

4

Numerical Results

Firstly, results of two patch tests of the Laplace Problem is presented. Besides,
the rule 2:1 was used in order to control the number of reﬁnements. Secondly, a
Poisson equation problem that involves steep gradients is solved. A 4 × 4 GaussLegendre Quadrature on four-node bilinear quadrilateral elements was applied.
In the numerical tests, the maximum permissible error in the energy norm was
set to ﬁve percent (ηmax = 0.05).
4.1

AMR Strategy

Consider the elliptic boundary-value problem
− ∇2 u(x) = f (x) in Ω,

(1)

subject to the boundary conditions
u = 0 on ∂Ω .

(2)

574

D. Brand˜
ao, S.L. Gonzaga de Oliveira, and M. Kischinhevsky

The variational form of these equations can be written in the bilinear form
B(u, v) =

∇u∇vdΩ,

(3)

where v ∈ H01 (Ω).
Observe that H01 (Ω) is the Sobolev Space of functions with square-integrable
derivatives and the values on ∂Ω vanish.
One can deﬁne the error as
error = u − uh ,

(4)

where u is the real solution and uh is the numerical approximation. However,
since this local measure is not computationally convenient, mathematical norms
are introduced in order to measure the error. The energy error norm is related
to the weak form in Eq. (3), thus,
||e||2 = B(e, e) =

∇e∇edΩ .

(5)

Since the exact solution ﬁeld is generally unknown, the approximate solution is
post-processed in order to obtain a more accurate measure for the gradient of
uh [3]. The relative percentage error in the energy norm is
η=

||e||
,
||u||

(6)

where ||u|| is the exact energy norm.
A simple criterion in order to achieve a solution with an acceptable error is
ηmax ≤ η,

(7)

where ηmax is the maximum permissible error percentage in the whole domain
and
||e||
η=
(8)
1 .
h
2
(||u || + ||e||2 ) 2
The error should be equally distributed among the elements in order to obtain
an optimal mesh
√
(9)
||e|| = m||e||i ,
where m is the number of elements.
The error can be expressed for the entire domain using the admissible elementar error [4]

Finite-Element Non-conforming h-Adaptive Strategy

||e||i ≤ ηmax

(||uh ||2 + ||e||2 )
m

1
2

≡ e−
m .

575

(10)

Furthermore, if the error in an element is
ξi =

||e||i
> 1,
e−
m

(11)

the error in the element i is larger then the criterion and, therefore, it needs to
be reﬁned.
4.2

Validation

The Laplace problem

∇2 u = 0, Ω = [0, 1]2 ,

(12)

with u = g(x) = x1 + x2 over ∂Ω is solved.
The analyical solution is u(x) = x1 + x2 . In this test, ηmax = 0.0 was adopted
in order to reﬁne the elements. Figure 4 depicts an example of the accuracy of
this test.

Fig. 4. Uniform reﬁnement of the Laplace Problem comprising 1089 vertices

576

D. Brand˜
ao, S.L. Gonzaga de Oliveira, and M. Kischinhevsky
Table 1. Table 1: Laplace Problem results
Mesh Number of elements Number of vertices Energy norm error
a
16
25
1.7X10−17
b
256
289
4.4X10−18
c
1024
1089
2.2X10−18

Fig. 5. Mesh of the Laplace Problem with 41 vertices and the associated MHC

Table 1 shows a comparison of the energy norm error among diﬀerent meshes.
A better numerical approximation when more elements are in the mesh is
obtained.
Another test admitted 0.05 as the maximum error (ηmax ). Figure 5 shows an
example mesh for this test. Fig. 6 presents a graphic of the vertice quantity by
the error of the energy semi-norm H1 , showing the convergence of the solution.
4.3

Test in the Poisson Equation Problem

Consider the Poisson equation problem in Ω = [0, 1]2 with Dirichlet boundary
conditions
− ∇2 u = f (x, y) .

(13)

Finite-Element Non-conforming h-Adaptive Strategy

Fig. 6. Reﬁnament convergence rate where n is the number of equations

Fig. 7. Mesh of the Poisson equation problem with 248 elements

577

578

D. Brand˜
ao, S.L. Gonzaga de Oliveira, and M. Kischinhevsky

Fig. 8. Behavior of the solution uh for the Poisson equation problem

with condition u = 0 over ∂Ω.
The source term is given by
f (x, y) = −90x8 y 10 (1 − x)(1 − y) + 20x9 y 10 (1 − y) −
90x10 y 8 (1 − x)(1 − y) + 20y 9 x10 (1 − x) .

(14)

The analitical solution is u(x) = x10 y 10 (1 − x)(1 − y). Figure 7 shows a mesh
for this test. Figure 8 shows that FEM-ALG represents the gradient close to the
point (1, 1).

5

Concluding Remarks

FEM-ALG is a novel technique for the adaptive mesh reﬁnement that integrates
the FEM and the ALG. This scheme intends to be more computationally eﬃcient
than other AMR schemes when searching for connectivity information among
elements with diﬀerent levels of reﬁnement since the reﬁnement process is merely
local when updating all the involved structures.
This work shows experimental results of this scheme in the Poisson equation problem. More experiments shall be performed in the heating conduction
equation and in the wave equation in future works. Moreover, future works
will describe the unreﬁnement process. Besides, future works will describe the
integration of new techniques in order to treat hanging nodes as well as the
integration of mesh-free methods in order to apply the shape functions on nonconforming meshes.

Finite-Element Non-conforming h-Adaptive Strategy

579

Acknowledgements
The authors gratefully acknowledge CNPq, CAPES and FAPERJ for the
ﬁnancial support.

References
1. Burgarelli, D., Kischinhevsky, M., Biezuner, R.: A new adaptive mesh reﬁnement
strategy for numerically solving evolutionary PDE’s. J. of Computational and Applied Mathematics. 196, 115–131 (2006)
2. Brandao, D.: A h-adaptative mesh reﬁnement for the Finite Element Method using a
graph structure (in Portuguese). Instituto de Computa¸ca
˜o da Universidade Federal
Fluminense (2008)
3. Tabarraei, A., Sukumar, N.: Adaptive computations on conforming quadtree meshes.
Finite Elements in Analysis and Design 41, 686–702 (2005)
4. Hughes, T.: The Finite Element Method. Englewood Cliﬀs (1987)

