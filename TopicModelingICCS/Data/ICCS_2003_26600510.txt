Performance Evaluation of a Relocation Method for
Mobile Computing Maintaining Data Consistency
1

Byung-Kwan Lee and Am-Suk Oh

2

1 Dept. of Computer Engineering, Kwandong Univ.
San-7, YangYangyup, YangYanggun, KwangwonDo, Korea,
bklee@kwandong.ac.kr
2 Dept. of Multimedia Engineering, TongMyong University
of Information Technology. Yongdang-dong, Nam-gu, Busan, Korea
asoh@tmic.tit.ac.kr

Abstract. Recently, a method to use replicated data on a server in order to get
new data without missing any information has been studied on wireless telecommunication networks and satellite services. Static Replica Allocation (SRA)
that traditional scheme has been used for the replication method on the server.
This replicates the data on the replica server after a moving host has been
transferred to another cell. In case the number of users is smaller than that of
cells, the network of the SRA is an efficient scheme in the standpoint of access
cost, and if there are few moving users, no trouble will happen. But if there are
no moving users in a cell, the data will not be shared. This paper proposes new
method of relocation, that is, USRA (User Select Replica Allocation) based on
data consistency scheme (called USRAC) after replicating the data to the cells
for the users, and also analyzes access cost according to the moving rate of mobile users, according to the access rate of mobile hosts, and according to the
number of cells of mobile users and mobile hosts.

1 Introduction
Mobile computers and wireless communication networks have made it possible to
open up a new field in mobile computing. Mobile computing provides mobile users
with the ability to access information regardless of the location of the user or the information. In traditional distributed database systems, various strategies have been
suggested in order to process transaction and maintain consistency. But most solutions
are restricted to mobile computing because of mobility, network failure and lower
bandwidth. The replication of data allows mobile computers to quickly access data.
But consistency among duplicated data should be maintained. The distributed database
in the mobile computer environment for replicating data has used SRA(Static Replica
Allocation). SRA is a scheme that when a mobile host moves to a cell, replicates data
to the replica server within the cell. In case the network is stable and a number of
mobile users smaller than cells, this scheme does not cause any problem with using
data. However, after the mobile host moved to a cell, if no mobile user existed in the
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2660, pp. 510–517, 2003.
© Springer-Verlag Berlin Heidelberg 2003

Performance Evaluation of a Relocation Method

511

replicated cell, replicated data become useless. And this scheme is not suitable for the
mobile computing environment because of frequent disconnection, lower bandwidth,
etc.
In this paper, we present our replica allocation called USRAC (User Selection Replica Allocation based on Consistency scheme) which makes up for defects of SRA
scheme and is appropriate to the mobile computer environment. This scheme replicates data and then allocates it to the cell in which mobile users are numerous. We
have conducted a detailed performance evaluation of SRA, USRA and USRAC
scheme proposed in terms of access cost and communication cost based on access
ratio of mobile user, access ratio of mobile host and variation of number of cells.

2 SRA (Static Replica Allocation)
Replication is the process that automatically updates data involved in a replica server
maintains the same object and data. Whenever mobile users need to replicate data,
they can do it. The replication is used to increase the speed of the query and information retrieval. SRA(Static Replica Allocation) is a strategy that has been currently
researched. SRA is a method that replicates data to the replica server of moved cell if
a mobile user requires data. The advantage of this method is that data replication is
simple and easily relocates data. However, because mobile host replicates data to
moved cell, in case mobile user does not exist in the moved cell, the replicated data
can be deleted for consistency maintenance. And if mobile host leaves replicated cell,
the access of data through route becomes difficult because of the frequent disconnection of mobile computing environment
The advantage of SRA strategy is to easily replicate transacted data and replication
is simple. Therefore, this scheme is suitable when the network is stable and mobile
users in the cell are smaller than mobile support stations. However, the first disadvantage of this scheme is that searching the route of the cell in which data transacted is
replicated is difficult. Second, although location replicated is known, it is not easy to
access a data through route since a frequent disconnections is occurred. Third, in case
mobile user does not exist in the replicated cell, data transacted cannot be used.
Fourth, if a mobile host moves, the data of replica server is deleted since the data of
replica server cannot maintain consistency.

3 USRAC (User Selection Replica Allocation Based on
Consistency Scheme)
3.1 USRA Process
Because SRA strategy is difficult to trace the location of a replicated data and use a
data and maintain consistency, we propose a new replication scheme called USRA
(user selection replica allocation). USRA strategy is a scheme that a replica server is

512

B.-K. Lee and A.-S. Oh

assigned to a cell in which mobile users are numerous and then relocates a data to the
replica server. However, when access cost is computed to this scheme, cost to relocate
replication is also added since this strategy additionally should relocate to the cell in
which mobile users are more numerous.
USRA is strategy that determines the location relocated of replication at location
server and assigns replica server. Replica server takes data information and location
information and then provides the data which mobile user requires. This scheme resolves disadvantage that data is not used or the location route of a data has to be
searched since selects cell which the user of a data is more numerous and replicates
the data. If the relocation of replication is not determined, the loading of data replicated may increase.
3.2 Data Consistency Scheme
The data consistency among duplicated data in the mobile computing environment
should be maintained. Thus, we present a data consistency scheme for USRA.
A public database
M1
decomposed

decomposed

M2

M3

decomposed

M5

decomposed

uses

M4

workspace A
transaction T1:

workspace B
transaction T2:

M2

M3

decomposed

uses

M4

M4

editing

debugging
editing
workspace A

workspace B

workspace transactions

Fig. 1. A Transaction Model

Performance Evaluation of a Relocation Method

513

3.2.1 Transaction Model

Fig. 1 shows a transaction model for data consistency. A transaction T1 develops two
programs, M2 and M4, at workspace A. The other transaction T2 edits M3 and M4 at
workspace B. Here we assume that M2 is decomposed into M4 and M5, where M4 is
also used by M3. If M3 uses M4, we also say that M3 is a client of M4, since M3
requires the interfaces that M4 provides. The solid arrow denotes the relationship
’decomposed’. The dashed arrow denotes the relationship ’uses’.

Dependency Dictionary
static relationship
decomposed(M1,M2)
decomposed(M1,M3)
decomposed(M2,M4)
decomposed(M2,M5)
derived

uses(M3,M4)

nil

checkout relationship
checkout(A,M1)
checkout(B,M1)
checkout(B,M2)

nil

dynamic dependency
duplicated(A.M1,B.M1)
logical decomposed(A.M1,B.M2)

decomposed(B.M1,B.M2)

nil

Fig. 2. Consistency Table

3.2.2 Consistency Table
To represent the consistency scheme, we use the structure of linked lists, because the
dynamic dependency grows and shrinks according to check-in/check-out operations
performed. The consistency table shown in Fig. 2, consists of three lists: a list of static
relationships, a list of checkout relationships, and a list of dynamic relationships. In
Fig. 2, the static relationships represent those relationships among all objects in the
public database. For instance, the relationship ’decomposed(M1,M2)’ means that M1 is
decomposed into M2. The list of static relationships is not influenced by any checkout
operation. However, a new static relationship may be added to the list of static relationships by means of checkin operations.

514

B.-K. Lee and A.-S. Oh

3.2.3 Consistency Scheme

Fig. 3 is a scheme for data consistency. Fig. 3(a) represents the state before M2 is
checked out to workspace C. Fig. 3(b) represents the state where M2 has been newly
checked out to workspace C. The dashed rectangle within the consistency table in Fig.
3 (b) shows the new relationships generated after M2 is checked out into workspace C.
Dependency Dictionary

A public database

static relationship

M1
decomposed
M2
decomposed

decomposed(M1,M2)
decomposed(M1,M3)

decomposed

decomposed(M2,M4)

M3

uses(M3,M4)

uses

checkout relationship

M4

checkout(A,M1)
checkout(B,M1)
checkout(B,M2)
dynamic dependency
duplicated(A.M1,B.M1)
logical decomposed(A.M1,B.M2)
decomposed(B.M1,B.M2)
M1
decomposed

M1

M2
workspace B

workspace A

(a) before M2 is checked out
Dependency Dictionary

A public database

static relationship

M1
decomposed
M2
decomposed

decomposed

decomposed(M1,M2)
decomposed(M1,M3)
decomposed(M2,M4)

M3

uses(M3,M4)

uses

checkout relationship

M4

checkout(A,M1)
checkout(B,M1)
checkout(B,M2)
checkout(C,M2)
checkout

M1

M1
decomposed

M2

M2

dynamic dependency
duplicated(A.M1,B.M1)
logical decomposed(A.M1,B.M2
decomposed(B.M1,B.M2)
logical decomposed(A.M1,C.M2
logical decomposed(B.M1,C.M2
duplicated(B.M2,C.M2)

workspace A workspace B workspace C

(b) after M2 is checked out
Fig. 3. Scheme for data consistency

Performance Evaluation of a Relocation Method

515

4 Experiments and Performance Evaluation
We evaluated performance among SRA, USRA and USRAC strategy in the mobile
computing environment by computing access cost and communication cost.
4.1 The Access Cost for Move Ratio of Mobile User

Fig. 4 illustrates the access cost of SRA, USRA and USRAC for the variation of access ratio( ) of mobile host. The move ratio of mobile user is generated from 0 to 1 .
We found out that if is over 0.8, access cost maintains as fig. 4 regardless of variation of value.

1
0.8
SR A

0.6

U SR AC
0.4

U SR A

0.2
0
1

2

3

4

5

6

7

8

9 10

Fig. 4. The access cost of mobile user for

=0.8

1
0.8
SR A

0.6

U SR AC
0.4

U SR A

0.2
0
1

2

3

4

5

Fig. 5. The access cost of mobile user for

=0.8

516

B.-K. Lee and A.-S. Oh

4.2 The Access Cost for Access Ratio of Mobile Host
Fig. 5 illustrates the access cost of mobile host as the access ratio( ) of mobile user
and the access ratio of mobile host varies from 0 to 1. When the access ratio( ) of
mobile user is over 0.8, the result is as fig. 5.
4.3 The Access Cost for The Number of Cells
Fig. 6 illustrates the access cost of SRA, USRA and USRAC for variation of the number of cells. We found out that the access cost of USRA and USRAC is more sensitive
than SRA to the variation of the number of cells. Because the replicated cell also increases when the number of cells increases.

S
RP[
RPZ
RPY
RPX
RPW
RPV
RPU
RPT
RPS
R

utc
w utce
w utc

S

T

U

V

W

X

Y

Z

[

SR

Fig. 6. The access cost for the number of cell to =0.8, =0.8

5 Conclusions
In this paper we have considered USRAC scheme that relocates a replication for mobile computers. SRA(Static Replica Allocation) is a method that replicates a data to
the replica server of moved cell if a mobile user requires a data. SRA takes the advantage that data replication is simple and can easily relocate data. However, if mobile
user or mobile host is not existed in the moved cell then the replication data becomes
useless and it makes move ratio is high. Because USRA selects and replicates the cell
that the number of mobile user is most numerous, the move ratio of mobile user can be
reduced. However, USRA scheme was not considered serious problem of data consistency in the mobile computing environments. In this paper we have investigated
three schemes – SRA, USRA and USRC scheme and have evaluated performance in
terms of cost based on schemes. Conclusively, though the USRAC scheme that we
have proposed is medium cost, it makes maintain data consistency in the mobile computing.

Performance Evaluation of a Relocation Method

517

References
1.

A. Chandrasekaran and R. W. Broderson, "A portable multimedia terminal for personal
communications," IEEE Communications Magazine, pp. 64–75, December 1992.
2. A. V. Bakre and B. R. Badrinath, "Implementation and performance evaluation of indirect
TCP," IEEE Trans. on Computer, vol. 46, no. 3, pp. 260–278, March 1997.
3. D. Duchamp, S. K. Feiner, and G. Q. Maguire, Jr., "Software technology for wireless
mobile computing," IEEE Nerwork Magazine, pp. 12–18, November, 1991.
4. D. J. Goodman, G. P. Pollini, and K. S. Meier-Hellstern, "Network control for wireless
communications," IEEE Communications," IEEE Communications Magazine, pp. 116–
124, 1992.
5. P. Evaggelia et al., "Revising Transaction Concepts for Mobile Computing", proc. IEEE
Workshop on Mobile Systems and Applications, Dec 1994.
6. F. Teraoka, K. Claffy, and M. Tokoro, "Design, implementation, and evaluation of virtual
internet protocol," IEEE Distributed Computing Systems DCS'92, pp. 170–177, 1992.
7. G. H. Forman and J. Zahorjan, "The challenges of mobile computing," IEEE Computer, pp.
38–47, April 1994.
8. K. Lim and Y. H. Lee, "Optimal partitioning of heterogeneous traffic sources in mobile
communications networks," IEEE Trans. on Computer, vol. 46, no. 3, pp. 312–325, March
1997.
9. K. H. Choi, "Data Relocation Using User Selecting Replica Allocation in Mobile Computing Environment," Phd Thesis, University of Kwandong, 1999.
10. T. Imielinski and B. R. Badrinath, "Mobile wireless computing," Communications of the
ACM, vol. 37, no. 10, pp. 18–28, October 1994.
11. T. Imielinski and B. R. Badrinath, "Data Management for mobile computing," the ACM
SIGMOD RECORD. vol. 22, no.1, pp. 34–39, 1993.
12. Y. Huang, P. Sistla, and O. Wolfson, "Data replication for mobile computers" Proc. of the
1994 ACM SIGMOD Intl. Conf. on Management of Data, pp. 13–24, 1994.

