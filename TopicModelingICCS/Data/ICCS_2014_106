Procedia Computer Science
Volume 29, 2014, Pages 422–431
ICCS 2014. 14th International Conference on Computational Science

Maximizing the Cumulative Inﬂuence through a Social
Network when Repeat Activation Exists
Chuan Zhou1 , Peng Zhang1 , Wenyu Zang2 , and Li Guo1
1

Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China
{zhouchuan,zhangpeng,guoli}@iie.ac.cn
2
Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China
zangwenyu@software.ict.ac.cn

Abstract
We study the problem of employing social networks for propagate inﬂuence when repeated
activations are involved. While inﬂuence maximization has been extensively studied as the
fundamental solution, it neglects the reality that a user may purchase a product/service repeatedly, incurring cumulative sales of the product/service. In this paper, we explore a new
problem of cumulative inﬂuence maximization that brings the inﬂuence maximization a step
closer to real-world viral marketing applications. In our problem setting, repeated activation
exists and we aim to ﬁnd a set of initial users, through which the maximal cumulative inﬂuence
can be stimulated in a given time period. To describe the repeated activation behavior, we adopt
the voter model to reﬂect the variation of activations over time. Under the voter model, we formulate the maximization problem and present an eﬀective algorithm. We test and compare our
method with heuristic algorithms on real-world data sets. Experimental results demonstrate
the utility of the proposed method.
Keywords: Social Networks, Repeated Activations, Voter Model, Cumulative Inﬂuence Maximization

1

Introduction

The rapidly increasing popularity of online social networks has created immense opportunities
for social network marketing, where the key issue is how to maximize the total sales proﬁt (i.e.,
maximize the cumulate sales). Viral marketing, among existing solutions, represents one of the
most eﬀective ways to promote products and generate more proﬁt on social networks. Viral
marketing was ﬁrst introduced to the data mining community by Domingos and Richardson
[10, 22], where cost-eﬀective methods are proposed to promote a new product or technology by
giving free or discounted samples to a select group of inﬂuential individuals, in the hope that
through the word-of-mouth eﬀects over the social network, a large number of product adoptions
will occur. Motivated by viral marketing, inﬂuence maximization has emerged as a fundamental
research problem concerning the propagation of innovations through social networks [6, 7, 8,
13, 16, 17, 18].
422

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.038

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

However, existing inﬂuence maximization formulation, without considering the reality that
a product can be purchased many times in a given time period, cannot precisely describe the
cumulative sales (i.e., cumulative inﬂuence) maximization problem. Actually, in the literature
of inﬂuence maximization, it is often assumed that once a user is active, the user will keep
the active state forever and cannot be activated again. But the reality is that a user may
purchase a product or service repeatedly under social inﬂuence. For example, daily necessities,
such as toothpastes, makeups and cigarettes, are generally purchased continually by users.
Therefore, how to maximize the cumulative sales cannot be simply narrowed down to the
inﬂuence maximization problem in these scenarios, but demands a new solution framework.
We discuss the problem of maximizing the cumulative inﬂuence under repeated activations
in this paper. Consider a social network as a graph G = (V, E), where V represent users and
E represent relationships. Let St ⊆ V be the set of nodes who get activated at time t and |St |
be the size of set St . The problem can be described as how to maximize the cumulative
T
inﬂuence t=0 |St |, when repeated activation exists? Here, T denotes the time interval
that we observe, and similar time constrain can also be found in [5, 20].
The above problem, inspired by inﬂuence maximization, can be converted to target an
initial subset nodes in the network, such that cumulative inﬂuence through the eﬀect of social
inﬂuence can be maximized. Formally, given a positive integer k, we aim to solve the discrete
optimization problem in Eq. (1), where ES is the expectation operator with the initial set S.
S ∗ = arg

max

|S|=k,S⊆V

ES

T

|St |

(1)

t=0

To solve Eq. (1), the ﬁrst challenge is how to model the variation of St when repeated activations happen. Obviously, existing popular propagation models such as Independent Cascade
(IC) and Linear Threshold (LT) models [16] are incapable of describing the repeated activation phenomenon, as they mainly describe the range of inﬂuence without considering repeated
activations.
The second challenge is how to develop an eﬃcient algorithm for the optimization problem in
Eq. (1). We all know that the inﬂuence maximization problem is NP-hard [16] under both IC and
LT models, where a line of greedy or heuristic algorithms are proposed. In the same token, we
need to answer the question whether the cumulative inﬂuence maximization is computationally
tractable or an NP-hard problem?
To overcome these challenges, we ﬁrst adopt the framework of the voter model to simulate
the diﬀusions with repeated activation involved in social networks. The voter model, which
was ﬁrst proposed in [9], is probably one of the most basic and natural probability models to
represent opinion diﬀusions in which people may switch opinions back and forth from time to
time due to the interactions with other people in the network. The voter model assumes that a
node can be activated repeatedly by its newly activated parents and the propagation probability depends on its newly active parents. Second, we explore cumulative inﬂuence maximization
problem from the perspective of stochastic processes and present a simpliﬁed calculation procedure for the cumulative inﬂuence under the voter model. Furthermore, based on the analysis
we propose an ExactSolution algorithm for the cumulative inﬂuence maximization problem (1),
which seeks initial potential nodes with acceptable time cost by experimental results.
The contribution of the paper are summarized as follows:
1. We present the cumulative inﬂuence maximization problem in social networks, which aims
to ﬁnd the most potential nodes in case of repeated purchase behavior exists. (Section 2)
2. We theoretically analyze the cumulative inﬂuence maximization problem and present an
eﬃcient solution under the voter model. (Section 3,4)

423

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

3. We conduct experiments on real-world data sets to demonstrate the superiority of our
new algorithm to other heuristic algorithms. (Section 5)

2

Problem Formulation

We ﬁrst introduce a variant of the common voter model from the single-item-based view, which
is slightly diﬀerent from these in the work [11, 19].
Consider a directed graph G = (V, E) with self-loop and edge label weight w : E → [0, 1].
/ E. For v ∈ V , the set of parents of v is denoted as
For convenience, let w(u, v) = 0 if (u, v) ∈
P ar(v) := u ∈ V, (u, v) ∈ E . For weight w, we assume that for each v ∈ V ,
w(u, v) ≤ 1.

(2)

u∈P ar(v)

Given a seed set S ⊆ V , the voter model works as follows. Let St ⊆ V be the set of nodes that
are activated at step t ≥ 0 with S0 = S. At step t + 1, every node v ∈ V can be activated by its
newly activated neighbors with probability u∈P ar(v)∩St w(u, v). If v is activated successfully,
then it is put into the set St+1 . The process ends at a step τ with Sτ = ∅. For mathematical
tractability, we still denote St = ∅ for t > τ . Obviously the process (St )t≥0 is Markovian
because it has no memory.
Given a nonnegative integer T and the initial seed set S, the T -steps cumulative inﬂuence
triggered by S, which is the expected value of total activation numbers from all individuals at
time stamps 0, 1, · · · , T , is denoted as σVT (S), i.e.
T

σVT (S) := ES

St

(3)

t=0

where the subscript V denotes the voter model used to govern the dynamics of St , the superscript T denotes the time span {0, 1, · · · , T }, and ES is the expectation operator with initial
set S. Note that the introduction of time constraint T is due to two reasons. First, the in∞
ﬁnite series t=0 St may be divergent and complicate the solution. Second, many network
marketings tend to maximize the cumulative sales in a short amount of time. For example, to
advertise icecreams, the marketing time would be mainly restricted in summer.
Let’s consider an extreme case where T = ∞ in the above deﬁnition, then the long-term
cumulative inﬂuence triggered by S, i.e., the expected value of the total activation without time
constraint, can be denoted as σV (S),
σV (S) := ES

∞

St

= σV∞ (S).

t=0

∞

Based on the above equation, an following question arise: under which condition, t=0 St is
convergent or σV (S) is a ﬁnite value? We will answer this question in the next section.
For a ﬁxed nonnegative integer T (including T = ∞), the cumulative inﬂuence maximization
problem under the voter model is to ﬁnd a subset S ∗ ⊆ V such that |S ∗ | = k and σVT (S ∗ ) =
max σVT (S) |S| = k, S ⊆ V , i.e.,
S ∗ = arg

max

|S|=k,S⊆V

σVT (S)

(4)

where k is a given parameter.

3

Analysis

In this part we analyze the cumulative inﬂuence maximization problem under the voter model.
We aim to prove that the calculation of cumulative inﬂuence σVT (S) or σV (S) under the voter
424

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

model is tractable, with explicit solutions given in Eqs. (9) and (11). This is very diﬀerent
from the calculation of spread σI (S) (or σL (S)) under the IC model (or LT model), where the
problem is #P -hard [6, 8].
We ﬁrst introduce two propositions, and then derive the ultimate results in Theorem 1 and
Corollary 1. Let PS (v ∈ St ) denote the probability that a node v gets activated at step t under
the seed set S in the voter model, then we have the ﬁrst proposition as follows,
Proposition 1. For S ⊆ V and T ≥ 0, the cumulative inﬂuence σVT (S) under the voter model
can be resolved as
T
σVT (S) =

PS (v ∈ St ).

(5)

t=0 v∈V

Proof: From the deﬁnition of cumulative inﬂuence in Eq. (3), we have
σVT (S)

T

=

T

ES S t

ES

=

t=0

ISt (v)

t=0

T

ES ISt (v) =

=
t=0 v∈V

v∈V
T

PS (v ∈ St )

t=0 v∈V

where ISt (v) is an indicative function, if v ∈ St , then ISt (v) = 1; otherwise, ISt (v) = 0.

✷

σVT (S)

as a sumProposition 1 reveals that we can treat the cumulative inﬂuence measure
mation of all T propagation steps of local probabilities PS (v ∈ St ) : t ≥ 0, v ∈ V . Based
on Proposition 1, a following question is, what is the relationship between two adjacent sets
PS (v ∈ St ) : v ∈ V and PS (v ∈ St−1 ) : v ∈ V ?
Proposition 2. For each t ≥ 1, we have the following equation
PS (v ∈ St ) =

PS u ∈ St−1 w(u, v).

(6)

u∈V

Proof: For t ≥ 1, by the deﬁnition of conditional expectation and the voter model,
PS (v ∈ St ) = ES PS (v ∈ St |S0 , · · · , St−1 ) = ES

w(u, v)
u∈St−1

=

ES

I{u∈St−1 } w(u, v)

PS u ∈ St−1 w(u, v).

=

u∈V

u∈V

In the above derivation, the ﬁrst ’=’ stems from the conditional expectation, the second one is
from the deﬁnition of the voter model.
✷
Proposition 2 implies that the activated probabilities at diﬀerent time steps share some iterative relationship, which provides a tractable basis for further investigation. For simplicity,
we rewrite the results in Propositions 1 and 2 using matrix notations. For t ≥ 0, denote
the row vector ΠSt = πtS (v) as the probabilities of nodes being activated at step t, i.e.,
πtS (v) := PS (v ∈ St ). Then, Proposition 1 can be rewritten as
σVT (S) =

T

ΠSt · 1

(7)

t=0

where 1 is a column vector with all elements being 1, and Proposition 2 can be rewritten as
ΠSt = ΠSt−1 · W
(8)
where W is the weight matrix with the (u, v) position’s element being w(u, v). Then we have
Theorem 1 as below,
425

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

Theorem 1. The cumulative inﬂuence function σVT (S) can be represented as a summation of
inﬂuence at diﬀerent time stamps, i.e.,
T

σVT (S) =

ΠS0 · W t · 1.

(9)

t=0

Proof: By the iteration in Eq.(8), we can easily get that ΠSt = ΠS0 · W t , where ΠS0 = π0S (v) =
IS (v) . Incorporating this result into Eq. (7), we can obtain Eq. (9). Note that ΠS0 · W t · 1 is
a real number after matrix calculation.
✷
Based on Eq.(9) in Theorem 1, one may easily raise two questions,
T

• The function σVT (S) is resolved into a summation of series t=0 ΠS0 · W t · 1, if we let
∞
S
t
T = ∞ to get σV (S) =
t=0 Π0 · W · 1, then in what condition the series will be
convergent?
• If the relaxed series is convergent, what’s the convergence limit, i.e., limn→∞
W t · 1 =?.

∞
t=0

ΠS0 ·

In the sequel, we derive Corollary 1 to answer above two questions.
Corollary 1. If the weight satisﬁes the condition (which is a further requirement to Eq. (2))
w(u, v) < 1,

max
v

then the series

∞
t=0

(10)

u∈V

ΠS0 · W t · 1 is convergent, and the limit of convergence exists as,
σV (S) = lim σVT (S) = ΠS0 · (E − W )−1 · 1
T →∞

(11)

where E is a unit matrix and (E − W )−1 is the inverse of (E − W ). Besides, we also have
σV (S) − σVT (S) ≤
where the 1-norm of matrix W is deﬁned as
the graph.

W

N · W T1 +1
1− W 1
1 :=

maxv

(12)

u∈V

w(u, v) and N is the size of

Proof: By matrix analysis [15], condition (10) implies W 1 < 1, which ensures the con∞
t
−1
. Hence we have σV (S) =
vergence of matrix series
t=0 W with the limit (E − W )
∞

t
· 1 = ΠS0 · (E − W )−1 · 1, where the ﬁrst ’=’ is from Theorem 1. As to
ΠS0 ·
t=0 W
Eq. (12), it is derived like this

σV (S) − σVT (S) = ΠS0 · (E − W )−1 −

T

Wt · 1

t=0

≤

ΠS0

1

·

(E − W )−1 −

T
t=0

Wt

1

·

1

1≤

N · W T1 +1
1− W 1

In the above derivation, the ﬁrst ’≤’ is from the submultiplicative of matrix norm (i.e.,
A · B ≤ A · B ). The second ’≤’ is due to ΠS0 1 =1, 1 1 =N, and (E − W )−1 −
T
t=0

426

Wt

+1
W T
1
1 ≤ 1− W 1

in matrix norm theory.

✷

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

Algorithm 1: ExactSolution
1: Input: weight matrix W of a graph G = (V, E), budget k, and time constraint T
2: Output: k nodes set S ∗ with the maximum T -steps cumulative inﬂunece
T
3: Score ← t=0 W t · 1 or (E − W )−1 · 1 if T = ∞
4: Select the biggest k nodes in Score as the output S ∗

4

Solution

Based on the analysis above, we provide an eﬃcient algorithm to the cumulative inﬂuence
maximization problem. Inspired by Eqs. (9) and (11), in order to maximize the T -steps cumulative inﬂuence or the long-term cumulative inﬂuence, we need to choose an initial seed set
T
S ∗ with the highest values in the column vector t=0 W t · 1 or (E − W )−1 · 1. We call it the
ExactSolution and summarize below.
Although ExactSolution algorithm presents an optimal solution, the matrix operations involved will get expensive in the respect of running time and memory, especially the inverse
(E − W )−1 will become intractable, when the size of network is enormous. To overcome this
T
diﬃculty, we adopt the following method to calculate t=0 W t · 1 and (E − W )−1 · 1. For t ≥ 0,
we denote the column vector at := W t · 1, so we obtain
T

Wt · 1 =

t=0

and
(E − W )−1 · 1 =

T

at ,

(13)

t=0
∞
t=0

Wt · 1 =

∞

at ,

(14)

t=0

where at+1 = W · at . By using the iteration, to acquire (E − W )−1 · 1, we only need to sum up
a0 , a1 , · · · until some an with L1 -norm less than 10−3 . This transformation saves memory space
during calculation, as it stores vectors instead of matrices. Besides, an alternative method to
derive (E − W )−1 · 1 is to solve the linear equations (E − W ) · Score = 1. Nevertheless, it is
still necessary to take heuristic algorithms into comparison in experiments.

5

Experiments

We conduct experiments on four real-world data sets to evaluate the cumulative inﬂuence and
the ExactSolution algorithm. We implement the algorithm in C++ with the Standard Template
Library (STL). All experiments are run on a Linux (Ubuntu 11.10) machine with six-core 1400
MHz AMD CPU and 32 GB memory.
Table 1: Four real-world networks.
Dataset
Facebook Digger Twitter Epinions
#Node
4093
8,193
32985
51782
#Edge
176468
56,440 763713
476491
Average Degree
21.6
6.9
23.2
9.2
Maximal Degree
1045
850
674
190
We use four real-world data sets, summarized in Table 1, for testing and comparisons. The
Facebook and Twitter data are obtained from http://snap.stanford.edu/data/. The Digger data
is available at http://arnetminer.org/heterinf. The Epinions data, a who-trust-whom online
social network, can be obtained from http://snap.stanford.edu/data/. The details of the data
sets are listed in Table 1, where degree means out-degree.
427

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

We implement four benchmark algorithms, DEGREE [16], PAGERANK [4], DEGREEDISCOUNT [7], and RANDOM for comparisons.
• DEGREE[16]. A heuristic algorithm based on ”degree centrality”, with high-degree nodes
as inﬂuential ones. The seeds are the nodes with the k highest out-degrees.
• PAGERANK [4]. A link analysis algorithm which ranks the importance of pages in a
Web graph. We implement with a damping factor of 0.85 and pick the k highest-ranked
nodes as seeds.
• DEGREEDISCOUNT [7]. A degree discount heuristic algorithm which deducts the overlap eﬀect in DEGREE algorithm.
• RANDOM. It simply selects k random vertices in the graph as the seed set, which is also
evaluated in [16].
We measure the comparisons in two aspects: quality of the seed set (i.e. cumulative inﬂuence) and eﬃciency of the algorithm (i.e. running time). Moreover, to obtain the cumulative
inﬂunece of benchmark methods for each seed set, we substitute them into Eq. (9) or Eq. (11).
For ease of comparisons, we ignore other centrality measures, such as the distance centrality
and betweenness centrality as heuristics, due to their ineﬃciency in the running time [7].
We assign the propagation probability of each directed link (u, v) ∈ E in the network for
the voter model as follows,
w(u, v) =

α
1−α
|P ar(v)|

if u = v
if u ∈ P ar(v) {v}

where |P ar(v)| denotes the number of parents of a node v. We set α = 0.5. In our experiments,
an undirected graph can be also regarded as a bidirectional graph.
Cumulative Inﬂuence σVT (S) is an important measure for comparisons. In this part, we run
tests on the four data sets to obtain cumulative inﬂuence results w.r.t. parameter k (the seed
set size), where k increases from 1 to 50. We list the results in Fig. 1 and Fig. 2 with T = 5
and T = ∞ respectively. For easy reading, in the ﬁgures, the legend ranks the algorithms
top-down based on their average cumulative sales values. From the results, we can observe that
no benchmark algorithms can match with the ExactSolution algorithm on the four data sets.
In contrast, the PageRank algorithm provides the nearest approximation in most cases, except
on Twitter data. The results from Random show that maximizing the cumulative inﬂuence is
far from trivial.

(a) Facebook

(b) Digger

(c) Twitter

(d) Epinions

Figure 1: Cumulative inﬂuence w.r.t. seed size k on the four data sets, T = 5.
Time Cost of selecting 50 seeds is shown in Figure 3, where ExactSolution 5 means T = 5
and ExactSolution ∞ means T = ∞. From the results, we can observe that the heuristic
algorithms, Random, Degree and DegreeDiscount, are very fast in selecting candidate nodes
(which takes less than 1 second). The PageRank algorithm is slightly slower than the above
428

Cumulative Inﬂuence Maximization

(a) Facebook

C. Zhou, P. Zhang, W. Zang, and L. Guo

(b) Digger

(c) Twitter

(d) Epinions

Figure 2: Cumulative inﬂuence w.r.t. seed size k on the four data sets, T = ∞.
three algorithms due to heavy iterations. The ExactSolution algorithm takes the longest time,
but still acceptable (in a minute level). By comparing the runtime of ExactSolution 5 and
ExactSolution ∞, we observe that the latter is about 4 − 6 times slower than the former one.
Runing time (in msec)

1000000

100000

Random

10000

Degree
1000

DegreeDiscount
PageRank

100

ExactSolution_5
10

ExactSolution_∞

1

Facebook

Digger

Twitter

Epinions

Figure 3: Runtime comparison.

6

Related Work

Inﬂuence maximization. Inﬂuence maximization is deﬁned as ﬁnding a small subset of k
nodes that maximizes spread of inﬂuence σM (S) in social networks, based on a given stochastic
inﬂuence propagation model M . In this context, the Independent Cascade (IC) and Linear
Threshold (LT) models [16] are two popularly used models. Inﬂuence maximization under both
IC and LT models is NP-hard, and the spread function is monotone and submodular [16]. A
set function f : 2V → R+ is monotone, if f (S) ≤ f (T ) whenever S ⊆ T ⊆ V . The set function
is submodular, if f (S ∪ {w}) − f (S) ≥ f (T ∪ {w}) − f (T ) for all S ⊆ T and w ∈ V \T .
Exploiting these two properties, Kempe et al. [16] presented a simple greedy algorithm
which repeatedly chooses the node with the maximum marginal gain and adds it to the seed
set, until the budget k is reached. The simple greedy algorithm can approximate the solution
within a factor of (1 − 1/e − ) for any > 0.
Unfortunately, the simple greedy algorithm suﬀers from great ineﬃciency. Hence considerable work has been conducted to tackle this limitation. One direction is to propose heuristic
solutions, e.g., DegreeDiscount [7] and ShortestPath [17]. These heuristic algorithms can reduce computational cost in orders of magnitude, with competitive results of the inﬂuence spread
level. However, none of them has a theoretical guarantee on the reliability of the results. The
other direction is to improve the original greedy algorithm. A representative work, by Leskovec
et al. [18], exploited the submodular property of the objective function, and proposed a CostEﬀective Lazy Forward selection (CELF) algorithm, which improves the running time of the
simple greedy algorithm by up to 700 times. Following the same logic, Goyal et al. proposed
CELF++ [12], an extension of CELF, that further reduces the number of spread estimation
429

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

calls, leading to 35% − 55% faster than CELF. Recently, Zhou et al. in [23, 24] further enhance
the CELF by the upper bound based approach UBLF, in their method the Monte-Carlo calls
in the ﬁrst round are drastically reduced comparing with the CELF.
Viral marketing on social networks. There have been several eﬀorts to monetize social
networks recently, and maximizing product adoption or proﬁt is a promising attempt along
this line. Bhagat et al. [2] addressed the product adoption maximization by diﬀerentiating
between product adoption and inﬂuence in their LT-C model. In [21], the authors extended
the classical Linear Threshold (LT) model to incorporate prices and valuations, and factor
them into users’ decision-making process of adopting a product. Considerable work has also
been done on pricing in social networks. One related problem is that of revenue maximization,
introduced by Hartline et al. [14]. They studied optimal marketing for digital goods in social
networks and proposed the inﬂuence-and-exploit (IE) framework. In IE, seeds are oﬀered free
samples, and the seller can approach other users in a random sequence, bypassing the network
structure. Arthur et al. [1] adopted IE to study a similar problem in which users arrive in a
sequence decided by a cascade model (IC). Bloch et al. [3] formulated pricing in social networks
as simultaneous-move games and studied equilibria of the games. However, none of above works
take the repeated purchase behavior into account to increase the gain.

7

Conclusions

In this paper we propose the cumulative inﬂuence maximization problem by considering the
scenario of repeated activations in social networks. We present its motivations, discuss its
diﬀerence from the classical inﬂuence maximization problem, explore its unique properties by
stochastic analysis, and present an exact algorithm as the solution under the voter model. Also
we show the utility of the proposed ExactSolution algorithm by experiments.
There are several interesting future directions. First, the discrete formulation of propagation
time can be further modiﬁed to a tractable continuous-time version; second, we regard the
network weight as predeﬁned in the voter model, actually how to infer these parameters from
real-world data is also challenging.

Acknowledgments
This work was supported by the NSFC (No. 61370025), 863 projects (No. 2011AA010703
and 2012AA012502), 973 project (No. 2013CB329605 and 2013CB329606), and the Strategic
Leading Science and Technology Projects of Chinese Academy of Sciences(No.XDA06030200).

References
[1] David Arthur, Rajeev Motwani, Aneesh Sharma, and Ying Xu. Pricing strategies for viral marketing on social networks. In Internet and Network Economics, pages 101–112. Springer, 2009.
[2] Smriti Bhagat, Amit Goyal, and Laks VS Lakshmanan. Maximizing product adoption in social
networks. In Proceedings of the ﬁfth ACM international conference on Web search and data mining,
pages 603–612. ACM, 2012.
[3] Francis Bloch, Nicolas Qu´erou, et al. Pricing in networks. 2008.
[4] Sergey Brin and Lawrence Page. The anatomy of a large-scale hypertextual web search engine.
Computer networks and ISDN systems, 30(1):107–117, 1998.
[5] Wei Chen, Wei Lu, and Ning Zhang. Time-critical inﬂuence maximization in social networks with
time-delayed diﬀusion process. In AAAI, 2012.
[6] Wei Chen, Chi Wang, and Yajun Wang. Scalable inﬂuence maximization for prevalent viral
marketing in large-scale social networks. In Proceedings of the 16th ACM SIGKDD international
conference on Knowledge discovery and data mining, pages 1029–1038. ACM, 2010.

430

Cumulative Inﬂuence Maximization

C. Zhou, P. Zhang, W. Zang, and L. Guo

[7] Wei Chen, Yajun Wang, and Siyu Yang. Eﬃcient inﬂuence maximization in social networks. In
Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data
mining, pages 199–208. ACM, 2009.
[8] Wei Chen, Yifei Yuan, and Li Zhang. Scalable inﬂuence maximization in social networks under the
linear threshold model. In IEEE 10th International Conference on Data Mining (ICDM), pages
88–97. IEEE, 2010.
[9] Peter Cliﬀord and Aidan Sudbury. A model for spatial conﬂict. Biometrika, 60(3):581–588, 1973.
[10] Pedro Domingos and Matt Richardson. Mining the network value of customers. In Proceedings
of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining,
pages 57–66. ACM, 2001.
[11] Eyal Even-Dar and Asaf Shapira. A note on maximizing the spread of inﬂuence in social networks.
In Internet and Network Economics, pages 281–286. Springer, 2007.
[12] Amit Goyal, Wei Lu, and Laks VS Lakshmanan. Celf++: optimizing the greedy algorithm for
inﬂuence maximization in social networks. In Proceedings of the 20th international conference
companion on World wide web, pages 47–48. ACM, 2011.
[13] Jing Guo, Peng Zhang, Chuan Zhou, Yanan Cao, and Li Guo. Personalized inﬂuence maximization
on social networks. In Proceedings of the 22nd ACM international conference on Conference on
information & knowledge management, pages 199–208. ACM, 2013.
[14] Jason Hartline, Vahab Mirrokni, and Mukund Sundararajan. Optimal marketing strategies over
social networks. In Proceedings of the 17th international conference on World Wide Web, pages
189–198. ACM, 2008.
[15] Roger A Horn and Charles R Johnson. Matrix analysis. Cambridge university press, 2012.
´
[16] David Kempe, Jon Kleinberg, and Eva
Tardos. Maximizing the spread of inﬂuence through a
social network. In Proceedings of the ninth ACM SIGKDD international conference on Knowledge
discovery and data mining, pages 137–146. ACM, 2003.
[17] Masahiro Kimura and Kazumi Saito. Tractable models for information diﬀusion in social networks.
In Knowledge Discovery in Databases: PKDD 2006, pages 259–271. Springer, 2006.
[18] Jure Leskovec, Andreas Krause, Carlos Guestrin, Christos Faloutsos, Jeanne VanBriesen, and
Natalie Glance. Cost-eﬀective outbreak detection in networks. In Proceedings of the 13th ACM
SIGKDD international conference on Knowledge discovery and data mining, pages 420–429. ACM,
2007.
[19] Yanhua Li, Wei Chen, Yajun Wang, and Zhi-Li Zhang. Inﬂuence diﬀusion dynamics and inﬂuence
maximization in social networks with friend and foe relationships. In WSDM, 2013.
[20] Bo Liu, Gao Cong, Yifeng Zeng, Dong Xu, and Y Chee. Inﬂuence spreading path and its application
to the time constrained social inﬂuence maximization problem and beyond. IEEE Transactions
on Knowledge and Data Engineering, 2013.
[21] Wei Lu and Laks VS Lakshmanan. Proﬁt maximization over social networks. In IEEE 12th
International Conference on Data Mining (ICDM), pages 479–488. IEEE, 2012.
[22] Matthew Richardson and Pedro Domingos. Mining knowledge-sharing sites for viral marketing.
In Proceedings of the eighth ACM SIGKDD international conference on Knowledge discovery and
data mining, pages 61–70. ACM, 2002.
[23] Chuan Zhou, Peng Zhang, Jing Guo, and Li Guo. An upper bound based greedy algorithm
for mining top-k inﬂuential nodes in social networks. In Proceedings of the 23th international
conference companion on World wide web. ACM, 2014.
[24] Chuan Zhou, Peng Zhang, Jing Guo, Xingquan Zhu, and Li Guo. Ublf: An upper bound based
approach to discover inﬂuential nodes in social networks. In IEEE 13th International Conference
on Data Mining (ICDM), pages 907–916. IEEE, 2013.

431

