S 2 F 2 M - Statistical System for Forest Fire
Management
Germ´an Bianchini, Ana Cort´es, Tom`as Margalef, and Emilio Luque
Departament d’Inform`
atica, E.T.S.E,
Universitat Aut`
onoma de Barcelona,
08193-Bellaterra (Barcelona), Spain

Abstract. One of the most serious problems in wildland ﬁre simulators
is the lack of precision for input parameters (moisture content, wind
speed, wind direction, etc.). In this paper, a statistical method based on
a factorial experiment is presented. This method evaluates a high number
of parameter combinations instead of considering a single value for each
parameter, in order to obtain a prediction which is closer to reality. The
proposed methodology has been implemented in a parallel scheme and
tested in a Linux cluster using MPI.

1

Introduction

The main goal of forest ﬁre model developers is to provide models that explain
and predict ﬁre behavior. These models can be used to develop simulators and
tools for preventing and ﬁghting forest ﬁres [1, 2, 7, 8]. These simulators and
tools are integrated into a Decision Support System (DSS). It is possible to
deﬁne a DSS as “a computer system that helps in the process of making a decision, helping users to form and explore the implications of their judgments,
and, therefore to make decisions based on understanding” [14]. Therefore, this
type of system should help to form judgments instead of giving general advise as, for example, an information digest does in a database. Nowadays, a
DSS has the more ambitious objective of trying to supply accurate information
(sometimes in real time) to achieve terrain planning, implementation of preventive rules, eﬃcient monitoring and giving online help while the forest ﬁre is
happening.
However, most models are unable to accurately predict the forest ﬁre’s behavior. This is due to several reasons but one of the most signiﬁcant ones is that
there are several parameters (i.e. moisture content, wind conditions, etc.) that
are diﬃcult to estimate precisely.
It is possible to minimize this input parameter problem by using techniques
such as parameter optimization [3], with the aim of determining as precisely
This work has been supported by the Comisi´
on Interministerial de Ciencia y Tecnolog´ıa (CICYT) under contract TIC2001-2592 and by the European Commission
under contract EVG1-CT-2001-00043 SPREAD.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 427–434, 2005.
c Springer-Verlag Berlin Heidelberg 2005

428

G. Bianchini et al.

as possible the parameter values that provide the closest prediction of real
behavior.
In this paper, although we also focus on processing the parameters, our goal
is to develop a methodology based on statistical analysis to determine the most
probable behavior of a forest ﬁre and apply this methodology to implement a
DSS.
S 2 F 2 M (Statistical System for Forest Fire Management) does not feed the
simulation core with “known” single values, but rather carries out a set of simulations considering a range of possible values for the input parameters that are
more uncertain.
This method requires a lot of computations to reach a conclusion because it
is necessary to run a large number of simulations. To tackle this problem we have
used a parallel scheme (master-worker), applied in a PC cluster. The method
has been implemented using MPI as a message pass library and is executed in a
Linux cluster. In this paper we analyze the improvements obtained by using the
proposed scheme in terms of quality of the prediction and simulation speed-up
for burns on experimental ﬁelds.
This paper is organized as follows: The factorial experimentation and basic
concepts of the system are explained in section 2. The system’s implementation is
described in section 3. Section 4 includes the results obtained when the method
was applied to two forest ﬁres. Finally, the main conclusions are reported in
section 5.

2

Factorial Experimentation

The methodology of this work is based on statistics. Statistics deal with collection, presentation, analysis and use of data to make, for example, decisions. There
are two possible ways of collecting data about an event. In an observational
study the researcher only takes notes without interacting in the situation. Data
are obtained as they appear.
Another way is through designed experiments. In these kinds of experiments it is possible to make deliberate changes in the controlled variables of a
system or process. Results are observed and then it is possible to either make
an inference or make a decision about variables that are responsible for changes.
When there are a lot of signiﬁcant factors involved (i.e. weather, wind speed,
slope, etc.), the best strategy is to use some kind of factorial experiment. A
factorial experiment is one in which the factors vary at the same time [16](for
example, wind conditions, moisture content and vegetation parameters). A scenario represents each particular situation that results from a set of values.
For a given time interval, we want to know whether a portion of the terrain
(called a cell) will be burnt or not. If n is the total number of scenarios and nA
is the number of scenarios in which the cell was burned, we can calculate the
ignition probability as:
Pign (A) = nA /n

S 2 F 2 M - Statistical System for Forest Fire Management

429

P ign()=1.0
P ign()=0.7
P ign()=0.1

Fig. 1. Generalizing the cells analysis

The next step is to generalize this reasoning and apply it to some cell sets.
In this manner we obtain a matrix with values representing the probability of
each cell catching ﬁre (Fig. 1).
Hence, we can focus our analysis on the procedure of generating possible
scenarios.
2.1

Scenarios Generation

Our system uses a forest ﬁre simulator as a black box which needs to be fed
with diﬀerent parameters in order to work. A particular setting of the set of
parameters deﬁnes an individual scenario. These parameters correspond to the
parameters proposed in the Rothermel [9] model.
For each parameter we deﬁne a rank and an increment value, which are used
to move throughout the interval. For a given parameter i (which we will refer to
as Parameter i ) the associated interval and increment is expressed as:
[Inferior threshold i, Superior threshold i], Increment i
Then, for each parameter i, it is possible to obtain a number Ci (parameter
domain cardinality), which is calculated as follows:
Ci = ((Superior threshold i−Inf erior threshold i)+Increment i)/Increment i
Finally, from each parameter’s cardinality it is possible to calculate the total
number of scenarios obtained from variations of all possible combinations.
n

#Scenarios =

Ci
i=1

where n is the number of parameters.

3

S 2 F 2 M Implementation

The concepts described above has been implemented in an operational system
that incorporates a simulation kernel and applies the methodology to evaluate
the ﬁtness function. This system has been developed on a PC LINUX cluster
using MPI as message passing library.

430

G. Bianchini et al.

3.1

The Simulator

S 2 F 2 M uses as a simulation core the wildland simulator proposed by Collin D.
Bevins, which is based on the ﬁreLib library [4]. fireLib is a library that encapsulates the BEHAVE ﬁre behavior algorithm [1]. In particular, this simulator
uses a cell automata approach to evaluate ﬁre spread. The terrain is divided into
square cells and a neighborhood relationship is used to evaluate whether a cell
will be burnt and at what time the ﬁre will reach the burnt cells.
As inputs, this simulator accepts maps of the terrain, vegetation characteristics, wind and the initial ignition map.
The output generated by the simulator consists of a map of the terrain in
which each cell is labeled with its ignition time.
3.2

The Fitness Function

To evaluate the system’s response we deﬁned a ﬁtness function. Since S 2 F 2 M
uses an approximation based on cells, the ﬁtness function is deﬁned as the quotient between the number of cells in the intersection between the simulation
results and the real map, and the union of the simulation results and the real
situation ( Fitness = (cells in the intersection) / (cells in the union)).
Figure 2 shows an example of how to calculate this function for a terrain
made up of 5x5 cells. In this case, the ﬁtness function is 7/10 = 0.7.
A ﬁtness value equal to one corresponds to the perfect prediction because it
means that the predicted area is equal to the real burned area. On the other
hand, a ﬁtness equal to zero indicates the maximum error, because in this case
our experiment did not coincide with reality at all.
3.3
2

Parallelisation
2

S F M has to make a large quantity of calculations because it uses a sequential
simulator as a kernel [4], and for this reason it needs to make a simulation for
each resulting combination of parameters (#Scenarios). This high number of
simulations requires a lot of time.
To reduce the execution time we used multiple computational resources working in parallel to obtain the desired eﬃciency. Keeping in mind the nature of the
problem that S 2 F 2 M tries to solve, we believe a master-worker architecture is
Real burned area

burned cells

Simulated burned area

cells in the union

in the union

cells in the intersection

in the interseccion

Fig. 2. Calculating the ﬁtness for a 5 x 5 cell terrain

S 2 F 2 M - Statistical System for Forest Fire Management

431

suitable to achieve this aim, because a main processor can calculate each combination of parameters and send them to a set of workers. These workers carry out
the simulation and return the map to the master. This resulting map indicates
which cells are burned and which are not.
Our system has a well deﬁned structure. The Master process has a data
reception stage (parameter ﬁles, terrain ﬁles, simulation time, etc.). After this
there is an initialization stage for data structures. In the main loop, the Master
process distributes scenarios to the workers, waits for results, receives results and
distributes more data to idle workers (if there are more scenarios to simulate).
Finally, it gives a graphical output.
The Worker structure is complementary. Each one has a data reception stage
(to initialize terrain size, slope). Following this, it enters a loop to receive scenarios from the Master process to activate the simulation function for calculating
ﬁre spread.

4

Experimental Results

To test the system we used two experiments in the ﬁeld. Both burns took place in
Serra da Lous˜
a (Gestosa, Portugal (40◦ 15’N, 8◦ 10’O)) , at an altitude of between
800 and 950 m above sea level. The burns were part of the SPREAD project [15].
In the Gestosa ﬁeld experiments [10], terrain was divided into dedicated plots in
order to carry out diﬀerent sorts of tests and measurements. In particular, we
worked with plots 513 and 519, which had the following characteristics:
Experiment 1 (Plot 513): the plot was represented by means of a grid of 58
columns x 50 rows (each cell was 2.989 x 2.989 feet).
Experiment 2 (Plot 519): the plot was represented by means of a grid of 89
columns x 91 rows (each cell was 2.989 x 2.989 feet).
In order to gather as much information as possible about the ﬁre-spread behavior, a camera recorded the complete evolution of the ﬁre. The video obtained
was analyzed and several images were extracted every 2 minutes in the ﬁrst
experiment and every 2.5 minutes in the second. From the images the corresponding ﬁre contours were obtained and converted to cell format in order for
S 2 F 2 M to interpret them.
4.1

Experiment 1

The ﬁrst case is very complicated, because in a ﬁeld experiment it is not possible
to control environmental conditions. Nevertheless, we ﬁxed certain known values
(slope and moisture in 1, 10 and 100 hours) and let the others vary.
To make comparisons we ﬁxed the initial time to 0 and a limit value of 12
minutes.
In table 1, we can see that the ﬁtness for this experiment has values between
0.7 and 0.91. This indicates that our statistic output is very close to reality. It is
important to note that in the Fitness table only those cells with 100% ignition
probability (i.e. cells burned in 100% of the scenarios) are considered.

432

G. Bianchini et al.
Table 1. Fitness of experiment 1 in each interval
Initial time Final time
0:00
2:00
2:00
4:00
4:00
6:00
6:00
8:00
8:00
10:00
10:00
12:00

Fitness
0,749420
0,690152
0,864360
0,953166
0,826158
0,915669

Exp. 1: Final area proposed by S2F2M

Real area

Fig. 3. S 2 F 2 M output for minute 12 of Experiment 1

In the ﬁgure 3 we can see that the S 2 F 2 M result is always inside reality, that
is, the result does not exceed the real propagation. We only include the last step
of the simulation (in this case at minute 12), as the previous steps are included
in the real perimeter.
4.2

Experiment 2

The second experiment has a rank ﬁle equal to plot 513. This is because the
plots are located very near each other, and therefore the terrain features can be
taken to be equivalent. Table 2 shows the resulting ﬁtness.
Finally, using the same criterion, we show the state proposed by S 2 F 2 M at
minute 12.5 in ﬁgure 4. It is possible to identify clearly that the S 2 F 2 M area is
inside the real perimeter.
4.3

Speed-Up Improvement

In a real case the system works under real time constraints and, therefore, it
is necessary to analyze the speed-up obtained by using diﬀerent numbers of
Table 2. Fitness of experiment 2 in each interval
Initial time Final time
2:30
5:00
5:00
7:30
7:30
10:00
10:00
12:30

Fitness
0,451988
0,486521
0,425703
0,774615

S 2 F 2 M - Statistical System for Forest Fire Management

433

Exp.2: Final area proposed by S 2F2M
Real area

Fig. 4. S 2 F 2 M output for minute 12.5 of Experiment 2
Speed Up

speed up

32
24

Linear

16
Speed Up

8
0
0

8
16
24
number of processors

32

Fig. 5. Speed-up curve for experiment 1

processors. The number of processors used in the successive experiments were 1,
2, 4, 8, 12, 16, 20, 24, 28 and 32. Figure 5 shows the speed-up for a particular
example compared with a linear speed-up (the ideal case).
It can be observed that the speed-up is close to being linear until 16 processors
are used. From this point, an increase in the number of processors continues being
proﬁtable, but it can be observed that the speed-up is not so linear.

5

Conclusions

In this paper we have described a tool with the objective of oﬀering an alternative
to the normal use of a forest ﬁre simulator. With this methodology we can obtain
a prediction of the ignition probability of a terrain without knowing exact data
about climatic factors, and without waiting for the ﬁre to start.
From the experimental studies we can conclude that the area that S 2 F 2 M
indicates with 100% probability of being reached by ﬁre in a time interval is always included in the real burned area. Furthermore, since each output proposed by
S 2 F 2 M needs a lot of calculations, we have used the parallel scheme of a masterworker programming paradigm in order to speed-up the whole process.

References
1. Andrews P. L. “BEHAVE: Fire Behavior prediction and modeling systems - Burn
subsystem, part 1”. General Technical Report INT-194. Odgen, UT, US Department of Agriculture, Forest Service, Intermountain Research Station; 1986.

434

G. Bianchini et al.

2. Andrews, Patricia L.; Bevins, Collin D.; Seli, Robert C. “BehavePlus ﬁre modeling system, version 2.0: User’s Guide”. Gen. Tech. Rep. RMRS-GTR-106WWW.
Ogden, UT: Department of Agriculture, Forest Service, Rocky Mountain Research
Station. 2003.
3. Baker Abdalhaq, G. Bianchini, Ana Cort´es, Tom`
as Margalef, Emilio Luque: “Improving Wildland Fire Prediction on MPI Clusters”. LNCS 2840, pp. 520-528,
2003.
4. Collins D. Bevins, “FireLib User Manual & Technical Reference”, 1996. http://
www.ﬁre.org.
5. E-FIS A ten telecom project. http://www.e-ﬁs.org/
6. Eftichidi G., Varela V. 1999. SAFES: Safe Fire Expert System. Presentation in the
International Scientiﬁc Conference “Fires in the Mediterranean forests: Prevention
-Suppression - Soil Erosion - Reforestation” organised by UNESCO in Athens, 3-6
February 1999.
7. Finney, Mark A.. “FARSITE: Fire Area Simulator-model development and evaluation”. Res. Pap. RMRS-RP-4, Ogden, UT: U.S. Department of Agriculture, Forest
Service, Rocky Mountain Research Station. 47 p. 1998
8. ADAI Products: FIRESTATION http://www.adai.pt/products/ﬁrestation/
9. Rothermel, R. C., “A mathematical model for predecting ﬁre spread in wildland
fuels”, USDA FS, Ogden TU, Res. Pap. INT-115, 1972.
10. ADAI - CEIF (Center of Forest Fire Studies) http://www.adai.pt/ceif/Gestosa/
11. MPI: The Message Passing Interface Standard http://www-unix.mcs.anl.gov/mpi/
12. Prometheus. http://kentauros.rtd.algo.com.gr/promet/schedule.htm
13. Reinhardt, E.D.; Keane, R.E.; Brown, J.K. “First Order Fire Eﬀects Model:
FOFEM 4.0, User’s Guide”. General Technical Report INT- GTR- 344. 1997.
14. Sixto R´ıos Insua, Concepci´
on Bielza Lozoya, Alfonso Mateos Caballero, “Fundamento de los Sistemas de Ayuda a la decisi´
on”, RaMa 2002 ISBN 84-7897-494-6
15. Project Spread, Forest Fire Spread Prevention and Mitigation http://
www.adai.pt/spread/
16. Douglas C. Montgomery, George C. Runger, “Probabilidad y Estad´ıstica aplicada
a la Ingenier´ıa”, Limusa Wiley 2002 ISBN: 968-18-5914-6

