Multilevel System as Multigraph
Waldemar Korczy´
nski1 , Jos´e de Jes´
us Cruz Guzm´an2 , and
Zbigniew Oziewicz2
1

University of Arts and Science, ulica Wesola 52 PL - 25353 Kielce, Poland
korwald@wsu.kielce.pl
2
Universidad Nacional Aut´
onoma de M´exico,
Facultad de Estudios Superiores Cuautitl´
an, Apartado Postal 25, 54700 Cuautitl´
an
Izcalli, Estado de M´exico {cruz,oziewicz}@servidor.unam.mx
oziewicz@ift.wni.wroc.pl

Abstract. Graph based models of hierarchical systems are usually seen
as ”graphs equipped with some reﬁnements”, understood as the homomorphisms or (bi)simulations. In such a model it is not possible to consider phenomena happened on diﬀerent levels of the system. We propose
a new formalism of multi-graphs allowing to see a hierarchical system
similar as a formula of second order logic, i.e. to consider all levels ”at
the same time”. The concurrency in hierarchical system is modelled in
terms of multi-graphs.

1

Introduction

Hierarchical systems are usually described by reﬁnement of some of its elements
namely modules.(W. Korczy´
nski 2000, [6]) This way of thinking about hierarchical systems as a sum of its modules leads to consideration of any part of the
system on another abstraction level which make impossible to consider at the
same time properties of parts of systems being of diﬀerent levels of abstraction
(that could be comparable by means of the hierarchical order).
In the paper we propose a way of seeing hierarchical systems, which allow
to consider the elements of all levels of abstractions in exactly the same way.
The ideology can be seen as a generalization of the notions of the graph (≡
one-graph). Instead of considering two levels of abstraction, namely vertices and
edges, we can treat a hierarchical system as a sequence of elements, called in these
context cells, connected by operations having exactly the same properties as the
well known operations of source and target in a one-graph. The structure thus
obtained is called multi-graph or more precisely an n-graph. The aim of the paper
is to describe the construction of n-graph based on some typical presentations
of graphs.
Supported by el Consejo Nacional de Ciencia y Tecnolog´ıa (CONACyT) de M´exico,
proyecto # U41214-F, and by UNAM, DGAPA, Programa de Apoyo a Proyectos de
Investigacion e Innovacion Tecnologica, proyecto # IN 105402.
Zbigniew Oziewicz is a member of Sistema Nacional de Investigadores, M´exico, No
de expediente 15337.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2658, pp. 832–840, 2003.
c Springer-Verlag Berlin Heidelberg 2003

Multilevel System as Multigraph

833

The paper is organized as follows: Section 1 are presented the principal aims
of these work. Section 2 recall some well known deﬁnitions of graphs. Section 3
are proposed some interpretations on n-graphs as models of hierarchical systems.
Section 4 a extension of n-graphs into n-category as been described. Section 5
category structure is presented for reﬁning concurrency of processes in multi level
systems. Section 6 some historical remarks are presented. The paper is written
in the language of category theory. We do not assume the reader is familiar with
the category theory because the paper is in essence self-container; we explain all
the notions at the very beginning level.

2

Some Presentations of Graphs

A directed graph can be seen as a sequence s, t : V −→ E being the source and
the target,
V

✮
✐

source
E
target

Fig. 1. A directed graph.

The elements of the set V are called vertices of the graph and are illustrated
as the zero-dimensional points. The elements of E are called arrows or edges of
the graph and are illustrated as one-dimensional directed segments of some lines.
However more adequate terminology is 0-cell ∈ V and 1-cell ∈ E (A. Burroni
1981, [3]). A graph (Figure 1) is said to be a 1-graph. In the theory of automata
there is also alternative terminology: a state or 0-transition ∈ V and 1-transition
∈ E. (A. Obtulowicz 2001, [12])
In some situations it is suitable to consider a graph consisting of ‘arrows’
only (a ‘globular’ graph).
Deﬁnition 1 (One-sorted graph). Let id, s, t : X −→ X be an alphabet of a
monoid, w be the homogeneous word in this alphabet and |w| ∈ N be a length of
w. A graph (a 1-graph) is deﬁned by (globular) relations
∀ |w| = 1,

s · w = w,

&

t · w = w.

This presentation of a graph was originated from Hasse & Michler (M. Hasse &
Michler L. 1966, [5]). We call it one sorted presentation of a graph, or a globular
graph.
Let X = E ∪ V. One can extend domain of s and t on Figure 1, from E to
X by s|V = id and t|V = id. Then s, t : X −→ X is a one sorted graph.
Deﬁnition 2 (Reﬂexive graph). A graph (V, E, s, t) is said to be reﬂexive if
there is an injective section i : V −→ E, s ◦ i = t ◦ i = idV . A reﬂexive graph is
an algebra (V, E, s, t, i).

834

W. Korczy´
nski, J. de Jes´
us Cruz Guzm´
an, and Z. Oziewicz

Another presentation of graphs deﬁnes them as (indexed) families of sets.
Deﬁnition 3 (Graph as a family of sets). A graph is a map G : V × V −→
2E . The elements of V are called the vertices and those of the disjoint union
arrows(G) =

G(u, v)
(u,v)∈V ×V

the arrows of G. For any u, v ∈ V the elements of the set G(u, v) are called
arrows from u to v and for any α ∈ G(u, v) the vertex u is called the source and
v the target of α.
The sets of the family (G(x, y))x,y∈V are pointwise disjoint and we use the
standard set-theoretical union instead of the direct sum of sets.
Example 1. Consider the following graph with two vertices: In the following
picture (ﬁgure 2) the sets G(x, y) are illustrated. We have here G(u, u) = {δ},
G(u, v) = {α, β, γ}, G(v, u) = {ε, ϕ}, G(v, v) = ∅. The set of vertices of this
graph is V = {u, v} and the set of arrows
G(x, y) = G(u, u) + G(u, v) + G(v, u) + G(v, v) =
(x,y)∈V ×V

{δ} + {α, β, γ} + {ε, ϕ} + ∅ = {α, β, γ, δ, ε, ϕ}.

Fig. 2. A graph pictured ”traditionally”

The above deﬁnitions allow to see a graph as a presheave. The corresponding
categories are closed under the formations of product, homomorphic image and
taking subalgebras.

Multilevel System as Multigraph

835

Graphs are tools for describing various phenomena. Let us list some of them:
- the arrows of a graph are processes and vertices are situations being their
initializations (births) and deads.
- schemes of connections, schemes of electrical or telephonic networks, ﬂowcharts (ﬂow diagrams in computer sciences) or (dependence) relations in sets
of institutions or persons.
- schemes of dynamical systems. The vertices G0 of a graph G ≡ G0 ⇔ G1 are
resources, and the arrows G1 are interpreted as activities (events) consuming
these resources.

3

Multi-graphs

Graphs are a good description tool for dynamical systems with processes running
on one level only. The systems, one meets in many branches of every day life,
do not have this property. Typical examples are systems of management where
one has to consider the control on the fundamental (lowest) level, the control of
processes running on this fundamental level, the control of control processes and
so on.
Example 2 (Medical). An example in medicine: process running in a biological
cell, processes running in an organ, in a group of organs and at the level of the
whole organism. A biological cell c ∈ G1 in an organ O : the situation sc ∈ G0 is
its birth and tc ∈ G0 its death. The process α ∈ G2 in the organ O is an arrow
of a graph having situations being cells,
G1

α

c1 −→ c2 ∈ G1 .

In a new 1-graph G1 ⇔ G2 vertices G1 are arrows of a 1-graph G0 ⇔ G1
illustrating processes in the biological cells,
←
−
←
−
0
1
vertices(G0 ) = V0 d00 d1 A0 = arrows(G0 ) = vertices(G1 )d10 d1 A2 = arrows(G1 )
←
−
←
−
Continuing this reasoning we obtain a sequence of directed 1-graphs Gi ⇔ Gi+1 ,
0 ≥ i ≤ n−1, called a directed n-graph, describing diﬀerent levels of an organism.
We formalize the above considerations as follows.
Deﬁnition 4 (n-graph). A directed n-graph G is a sequence of families of icells {Gi }, 0 ≤ i ≤ n, such that Gi ⇔ Gi+1 is a directed 1-graph with a source
map si : Gi+1 −→ Gi and target map ti : Gi+1 −→ Gi , (Z. Oziewicz 2003, W.
Lawvere 1989, [13], [8])
←
−
←
−
←
−
←
−
0
1
2
n
V0 d00 d1 A0 = V1 d10 d1 A1 = V2 d20 d1 A2 , ..., Vn dn0 d1 An .
←
−
←
−
←
−
←
−
The corresponding deﬁnition in the case of reﬂexive graphs can be the following one.

836

W. Korczy´
nski, J. de Jes´
us Cruz Guzm´
an, and Z. Oziewicz

Deﬁnition 5 (n-graph from reﬂexive graphs). A directed n-graph is said
to be reﬂexive if there are sections {ii : Gi −→ Gi+1 }, satisfying the conditions
si ◦ ii = idGi = ti ◦ ii .

G0

s0
✙ i0
✲

t0

G1

s1
✙ i1
✲

t1

G2

s2
✙ i2
✲

t2

···

Homomorphisms of n-graphs are deﬁned componentwise.
Deﬁnition 6. A homomorphism f ∈ hom(G, H) of an n-graph G into an ngraph H is a sequence f ≡ {fi : Gi −→ Hi },
←−

Gi ←−−−− Gi+1




f
f
i+1

i

←−

Hi ←−−−− Hi+1
such that for any i ∈ N, (fi , fi+1 ) is a homomorphism of 1-graphs.
Let us note a diﬀerence between the approach used in the above example
and the standard modular modelling of multilevel systems. Seeing a system as
an n-graph we can consider it on all levels at the same time (A. Obtulowicz
2001, [11], [12]). This point of view is similar to that known from the high order
logic when one has to consider variables being individuals, sets of individuals,
sets of sets of individuals, etc. Seeing a system as an object consisting of some
other objects called in this context modulus we are always at the same level.
Reﬁning of a model doesn’t lead to a new situation; we are still at the same level
because one hasn’t to consider any relation between objects of diﬀerent levels.
The last is characteristic for n-graphs and higher order logic. Let us consider an
analogous construction for graphs seeing as families of sets. Having a graph one
can consider the family Γ (G), of all graphs with vertices being arrows in G, i.e.
graphs of the form
(G(α, β))(α,β)∈arrows(G)×arrows(G)
This construction can be repeated several times and one can for a given graph
G0 obtain a sequence of families of graphs
G0 , Γ (G0 ), Γ 2 (G0 ) = Γ (Γ (G0 )), ..., Γ n (G0 )
where Γ (Γ (G)) is the family of all graphs obtained by the operation Γ from
the elements of the family Γ (G0 ), Γ (Γ (Γ (G0 ))) denotes the family of graphs
obtained in the same way from the elements of the family Γ (Γ (G0 )) and so on.
Fact 1. For any sequence
G = G0 , G1, G2 , ... , Gn

Multilevel System as Multigraph

of graphs such that for i
arrows(Gi ) =vertices(Gi+1 ).

< n it holds Gi

∈

837

Γ i (G0 ) we have

Deﬁnition 7. By an n-graph we mean any sequence
G0 , G1, G2 , ... , Gn
of graphs satisfying the condition Gi+1 ∈ Γ i (Gi ) for any i. The elements of the
sets
V0 , V1 , V2 , ..., Vn , En (= Vn+1 )
will be called cells, more precisely 0-cells (those from V0 ), 1-cells (those belonging
to V2 ), ..., n-cells (the elements of Vn+1 ).
Remark 1 (Normal graph). For a reﬂexive graph G we have
vertices(G) ⊆ arrows(G)
In other words in the above deﬁnition we make no constraints on the function
G : V × V → Set. Particularly we do not exclude the case when for some arrow
α and vertex u of a graph G ∈ Γ i (G0 ) the set G(α, u) is not empty. n-graphs
in which for any arrow α and vertex u it holds G(α, u) = ∅ for any i ≤ n and
G ∈ Γ i (G0 ) will be called normal.
Example 3. In the following picture a 2-graph is illustrated. In this case G0 is
the graph pictured in Figure 3. The operation Γ adds 4 sets of arrows: G(u, δ),
G(u, α), G(α, ε), G(ϕ, γ). In the picture only nonempty sets of arrows has been
illustrated. So the considered graph is not normal.

4

Multi-category

An n-graph is a carrier for an n-category by adding of compositions (W. Marcinek
& Oziewicz Z. 2001, [10]) as a partial functions ◦i , of the form
◦i : arrows(Gi ) × arrows(Gi ) → arrows(Gi )
being the set theoretical union of total functions of the form
Gi (u, v) × Gi (v, w) → Gi (u, w)
for u, v, w ∈ vertices(Gi ).(that means u, v, w ∈ Gi−1 . Such a composition is
assumed to be associative and having two sided identities idu and idv such that
for any arrow α ∈ Gi (u, v) it holds
idu ◦i α = α ◦i idv = α
In other words we make any of graphs
G0 , G1, G2 , ... , Gn
a multiplicative graph with associativity and having two sided identities multiplication, i.e. a category. For any i ≤ n the category thus obtained will be
denoted by C(Gi ).

838

W. Korczy´
nski, J. de Jes´
us Cruz Guzm´
an, and Z. Oziewicz

Fig. 3. A 2-graph on the graph picture

Deﬁnition 8 (n-category (W. Marcinek & Oziewicz Z. 2001, [10])). An
n-graph G
V0 ⇔ E0 = V1 ⇔ E1 = V2 ⇔ E2 = V ⇔, ..., Vn ⇔ En
is said to be an n-category we mean any sequence
C(V0 ⇔ E0 ), C(V1 ⇔ E1 ), ..., C(Vn ⇔ En ).
n-categories and some of them applications have been described in Hasse &
Michler (M. Hasse & Michler L. 1966, [5])

5

Reﬁning and Concurrency

Reﬁning is a method for system describing and analysis. An advantage of this
way of treating complicated composed systems is that we are always on the
same level of description. We use in any moment the ﬁrst order logic. Sometimes
this approach to systems is not suitable. Typical example of such situations
can be found while considering concurrency of processes running in diﬀerent
levels of a hierarchical system. This kind of concurrency can not be described by
the modular hierarchical modelling point. One of the examples of such systems
can be the biological system mentioned early. Other example can be found in
hierarchical management system. Let us consider such a system consisting of two
levels. The ﬁrst one, let us call it production, can be seen as a really production
system in a factory, in an oﬃce or in economical organization. The second level
manage the processes in the ﬁrst one. So the way of working of such a system

Multilevel System as Multigraph

839

can be seen as follows. Firstly, an object, let us call it m, performs a planning
action A. As a result one obtains a project, say p, which will be realized by an
object w on the level 1. Now, one can consider a concurrent activities A and p.
Next another project, say p being the result of the activity A , can be realized
concurrently with another designing activity A , and so on. The generalization
of this concurrency to multilevel systems is evident.
This kind of concurrency is diﬀerent from the concurrency from Petri nets
where one considers concurrency in the set of elements of the same level (B.
Baumgarten 1990, M. Leszak and H. Eggert 1988, M. van Sinderen, L. Ferreira,
C. A. Vissers and J. Katoen 1995, [1], [9], [14]). The category structure (given
by the multiplication of arrows)allows for considering a hierarchy of sequential
systems. In this case the only concurrency is the concurrency described above.
But one can also consider another kind of concurrency - the concurrency of
the same level of the system. This concurrency can be modelled by introducing
in the categories corresponding to the levels of the system a new operations
expressing the parallel composition of the elements (arrows and vertices) of the
system. It can be done in the same way as it has be done in Korczy´
nski 2001 (W.
Korczy´
nski 2001, [7]). This leads to the notion of (partial) monoidal n-category.
We do not consider here these methods.

6

Historical Remark

Some notions used in the paper are not very popular and frequently used. Let
us recall the origin of them. The one sorted presentation of graphs has been
introduced by Maria Hasse & L. Michler in 1966 (M. Haese & Michler L. 1966,
[5]). One can say it belongs to the language of the so called ”French school
of category theory” originated by Schuetzenberger and Ehresmann (Ehresmann
1950, [4]) Such an approach allows to consider categories as a kind of ”partial
semigroups” and leads to interesting applications of(semi)group theory seeing
as a (meta)language for such branches of mathematics as for example topology.
Reﬂexive graphs have been considered ﬁrstly by Burroni (A. Burroni 1981 [3])
Gray and Lavwere (F. W. Lawvere 1989, [8]). The idea was similar to that of
introducing one-sorted graphs; one wants to consider categories as a kind of of
monoids. The embedding of vertices into arrows shows how an ”identity” can
be introduced into the classical graphs. This identity assigns to every vertex of
a graph a ”loop” being an arrow having its beginning and end - point in these
vertex. Burroni (A. Burroni 1981, [3]) also introduces n-graphs as a tool for
describing of some notions in ”pure mathematics”, more precisely in category
theory seeing as a kind of mathematical language. Another interesting papers
exploring n - graphs and very interesting applications of n-graphs to some problems in computer sciences have been described by Obtulowicz (A. Obtulowicz
2001, [11], [12]).

840

W. Korczy´
nski, J. de Jes´
us Cruz Guzm´
an, and Z. Oziewicz

References
1. Baumgarten B., Petri-Netze, Grundlagen und Anwerdungen, Wissenschaftesverlag,
Mannheim, 1990
2. Brown R. and P. J. Higgins, On the algebra of cubes, Journal of Pure and Applied
Algebra 21 (3) (1981) 233–260
3. Burroni Albert, Alg`ebres graphiques, Cahier (1981)
4. Ehresmann, Les Connections inﬁnitesimales dans un espace ﬁbre diﬀerentiable,
Coloque de Topologie, Bruxelles (1950).
5. Hasse Maria and L. Michler, Theorie der Kategorien, VEB Deutscher Verlag der
Wissenschaften, Berlin 1966
6. Korczy´
nski Waldemar , Motody Sieciowe - Elementy Filozoﬁi Podej´scia, Kielce
2000
7. Korczy´
nski Waldemar, On some presentations of graphs and hypergraphs, Instytut
Matematyki PAN, preprint 2001
8. F. William Lawvere, Display of Graphics and their applications, as exempliﬁed
by 2-categories and the Hegelian ”taco”, State University New York at Buﬀalo,
typescript, April 1989.
9. Leszak M., Eggert H., Petri Netz Methoden und Werkezeuge, Springer Informatik
Fachberichte, 197, Berlin, 1988
10. Marcinek Wladyslaw and Zbigniew Oziewicz, Miscellanea Algebraicae (Kielce),
Rok 5, No 2/2001, ISBN 83-87798-23-1; math.CT/0104136
11. Obtulowicz Adam, On n-dimensional graphs and n-graphs, Miscellanea Algebraicae
(Kielce), Rok 5, No 1/2001, pp. 87–96, ISBN 83-87798-22-3
12. Obtulowicz Adam, A note on the connections of automata and weak double categories, Miscellanea Algebraicae (Kielce), Rok 5, No 1/2001, pp. 75–86, ISBN 8387798-22-3
13. Oziewicz Zbigniew, Operad of graphs, convolution and quasi-Hopf algebra, Contemporary Mathematics 2003, in press
14. Marten van Sinderen, Lu´ıs Ferreira Pires, Chris A. Vissers, Joost-Pieter Katoen,
A design model for open distributed processing systems, Computer Networks and
ISDN Systems, 27 (1995) 1263–1285

