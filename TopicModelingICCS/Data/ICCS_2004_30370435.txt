Design and Implementation of Integrated Assembly
Object Model for Intelligent Virtual Assembly Planning*
Jing Fan, Yang Ye, and Jia-Mei Cai
College of Information Engineering, Zhejiang University of Technology
Zhaohui Liuqu, Hangzhou, 310014, P.R. China
fanjing@zjut.edu.cn

Abstract. Based on the analysis of the virtual assembly planning, this paper
presents a new assembly planning method, which is named Intelligent Virtual
Assembly Planning. The architecture of the IVAP system consists of four main
components: Intelligent Assembly Planning Environment, Virtual Assembly
Planning Environment, Data/Knowledge Acquisition Interface, and Inner Interactive Interface. The integrated assembly object model used in the system is described in detail in the paper.

1 Introduction
The rapid development of Virtual Environment provides a new tool to assembly
planning of products. After getting data of the virtual components, and applying Virtual Environment as interactive interface to help to complete the task of assembly
planning, virtual prototype of the product can be obtained. With the support of Virtual
Environment and computer system, the engineer can manipulate the virtual components effectively and easily to create, simulate and evaluate assembly sequence. The
way working in Virtual Environment is similar to the way of working in the real environment, and is easily accepted by the user.
The research on virtual assembly has developed quickly in the world. But it still
has many limitations. For example, the user in Virtual Environment can not work for
a long time, because his eyes wearing HMD easily feel tired; the delay between assembly operation and display result affects the precision of assembly; and the technique of collision detection on line still need to be improved. On the analysis of the
technology of Computer Aided Assembly Planning, a new method of virtual assembly planning is proposed, which applies the formalized assembly knowledge of expert
that is obtained using the technology of artificial intelligence in the virtual assembly,
and creates Integrated Assembly Model to represent different kinds of assembly data
and knowledge, together with reasoning strategy, to implement the intelligent virtual
assembly planning.
*

The research work in this paper is supported by the project of Zhejiang Natural Science
Foundation of China (No. 602092).

M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 435–442, 2004.
© Springer-Verlag Berlin Heidelberg 2004

436

J. Fan, Y. Ye, and J.-M. Cai

This paper introduces the main idea of intelligent virtual assembly planning, and
focuses on the Integrated Assembly Object Model used in intelligent virtual assembly
planning.

2 Related Research
The first research of assembly model was done by Lieberman and Welsey in 1977.
They have used graph structure to describe the information of assembly, in which
node represents the part, and arc represents the relation between parts [1]. After that
there are a lot of research work have been done in this area, such as the liaison graph
proposed by Bourjault [2], the AND/OR graph used by Homem De Mello and
Sanderson [3], the assembly constraints graph described by J. Wolter [4], and the
virtual link designed by Lee and Gossard [5], etc. These assembly models are used to
generate the assembly sequence automatically. But the common limitation of these
models is that they can not express the assembly knowledge efficiently.
The assembly models used in virtual environment are usually based on the geometry model. They can express the geometry features of the parts effectively, but ignore
other important non-geometry information like the physical properties and assembly
semantics [6],[7]. Using this kind of assembly models, the assembly knowledge and
experiences from the planning experts is difficult to be represented and utilized in a
formalized way.

3 Intelligent Virtual Assembly Planning
The main idea of the intelligent virtual assembly planning is as follows: using the new
interactive tool provided by virtual environment in the assembly planning, and applying the techniques of AI to support the virtual assembly planning, to improve the
suitability and efficiency of the assembly planning to the complex assembly objects.
The architecture of intelligent virtual assembly planning system is shown in Fig. 1.
There are four main parts in the system:
− Intelligent Assembly Planning Environment. It contains the Integrated Data/
Knowledge Model, Intelligent Planner and Evaluator. Integrated Data/Knowledge
Model consists of integrated assembly object model, scene model and interaction
model. The integrated assembly object model is the emphasis of this paper, which
is used to express the assembly objects.
− Virtual Assembly Planning Environment. It contains Simulation Module, State
Control Module, and Input/Output Module, etc.
− Data and Knowledge Acquisition Interface. It provides the interface to input data
from other systems and get assembly knowledge from the assembly planning experts. The assembly data and knowledge are transformed to construct the Integrated Assembly Model, and define assembly rules.

Design and Implementation of Integrated Assembly Object Model

437

− Inner Interactive Interface. It is used to implement the communication and coordination between Intelligent Assembly Planning Environment and Virtual Assembly
Planning Environment. The assembly data and knowledge are exchanged and
shared through the Inner Interactive Interface.

In te llig en t A sse m b ly p la n n in g
e n v ir o n m e n t
In te llige n t
P lan
P lan n e r
Search
E n gin e

S tate C on tro l
M o d u le

S c en e M od e l

R u le B a se
R ea son in g
M ac h in e

V irtu al A sse m b ly
p la n n in g
e n v ir o n m e n t

In teg r ate d
A sse m b ly
O b je c t
M od e l
In ter a ctio n
M o d el
In teg r ate d D ata/
K n o w le d g e M od e l

E v alu ato r

In n e r
In te r a c tive
In ter fa c e

S im u latio n
M o d u le

In p u t/O u tp u t
M o d u le

U ser
D a ta a n d K n o w led g e A cq u isitio n
In te rfac e
E xp e r ts

O th er
S yste m s

Fig. 1. Architecture of Intelligent Virtual Assembly Planning System

4 Integrated Assembly Object Model
Since the assembly models that have been proposed in the past time can not efficiently express the complex assembly objects, especially in the virtual assembly environment for the virtual assembly planning, we present the integrated assembly object
model to express the assembly data and knowledge of the virtual components.
The integrated assembly object model contains data model, constraint model, and
semantic model.
− Data model expresses the basic information of virtual assembly objects such as
geometry features and physical properties in a unique form.
− Constraint model describes the constraints of virtual assembly objects, which mean
the relations between the objects that cannot be expressed in the data model. All
the assembly constraints are expressed by predicate.
− Semantic model describes the semantic of a group of assembly objects, including
the information of assembly process and the operations of the assembly objects.

438

J. Fan, Y. Ye, and J.-M. Cai

4.1 Data Model
Virtual assembly objects is clustered and described in a unique form, which is called
Virtual Assembly Concept (VAC). Formalized expression of VAC is as the follows:
<VAC>::=
(<Name><Superclass><Subclass><Components><Attributes>
<Geometry-Features><Physical-Features><Join-Methods>
<Mating-Parts><Tools>)
<Name>::=<string>
<Superclass>::=<VAC>|NULL
<Subclass>::=<VAC>|NULL
<Components>::=<VAC>|NULL
<Attributes>::=(<Material><Color><Function><Motion>)
<Geometry-Features>::=
(<Shape><Size><Position><Orientation>)
<Physical-Features>::=
(<Weight><Gravity-Center><Stiffness><Sticky>
<Asperity><Vulnerability>)
<Join-Methods>::=
(<Snap><Screwing><Peg-hole><Pinning><Riveting>)
<Mating-Parts>::=<VAC>
<Tools>::=<string>

4.2 Constraint Model
The constraints in the constraint model are classified as two kinds, Low-level constraints and High-level constraints. Low-level constraints are established on the basis
of data model while High-level constraints are based on the Low-level constraints.
Low-level constraints are composed of Low-level geometry constraints and Lowlevel physical constraints. Low-level geometry constraints represent geometry of the
assembly objects, such as position, orientation, mate, co-axis, insertion, etc. Lowlevel physical constraints represent the force effects between the objects.
High-level constraints represent the abstract information of the relations between
the objects. It includes: High-level geometry constraints, High-level physical constraints, topology constraints, and precedence constraints, etc. User defined constraints, like cost constraint and time constraint, which are named soft constraints, are
also included in the High-level constraints.
4.3 Integrated Semantic Model
The assembly semantic of the virtual assembly objects is expressed by the integrated
semantic model (ISM), which is established in a higher level to describe the dynamic
information between objects, such as assembly operations, sequence and process.
Assembly process information describes the assembly process of the group of virtual object according to the semantic. It includes transformation from initial state to

Design and Implementation of Integrated Assembly Object Model

439

final state. The changes of the states are made by the operation steps. Each step is
corresponding to a list of assembly operations.
Assembly sequence information describes the precedence of the assembly operations to the objects.
Assembly operation describes the assembly operations on the objects, which consists of basic meta operations, as translation and rotation.
Formalized expression of the ISM is a quintuple.
ISM = <E, O, Pinfo, Sinfo, Oinfo>
Where E is the set of the assembly objects, O is the set of the assembly operations,
Pinfo stores the process information, Sinfo presents the assembly sequence information
and Oinfo represents the information of assembly operation.
E= { Pi|i = 1,

…,n}

There are n assembly objects Pi.

（ ）

O= { Oj Pi |i= 1,

…n;j

= 1,2}

There are n assembly objects, each have two meta-operations, translation O1 and
rotation O2. There are 2n operations totally.
Pinfo= {Sp-1,STEPp|p=1,

…,t}

There are t+1 states and t steps. So is the initial state and St is the final state. Sp-1 is
transformed to state Sp with Step STEPp. Each step is composed of a list of assembly
operations.
Sinfo={SE, SA}
SE is the sequence between the assembly objects.
SA is the sequence between the operations.

…
（ ）

Oinfo={Ak|k=1, ,m}
Ak
{Oj Pi |i=1,

∈

…,n;j=1,…,2}

There are m operations used in the assembly process.

5 The Implementation of the Model
5.1 Data Model
The virtual components are described in VRML2.0.
The description of the virtual components is constructed with two parts: nodes and
features. Each node represents one kind of virtual components.
PROTO Name [
Node (){
#<Join_Methods>, <Tool>, Weight, …

440

J. Fan, Y. Ye, and J.-M. Cai

Group {
Children_1 [
Translation Gravity-Center
Shape {
Material {color {}}
Geometry {}…}
…]
Children_2 []
…
Children_n []
}
} ]
Name {};
The features of the virtual component used in the assembly are extracted from
node. Different nodes have different features. The basic geometry feature is represented in the following structure:
Feature parameter(shape,keysize,position,Orientation);
{
ExposedField MFNode shape
ExposedField MFFloat keysize
ExposedField MFVec3f position x,y,z
ExposedField MFRotation Rotation
}
For example, the basic geometry features of the part bolt are showed as follows:
Bolt (Cylinder, <radius, height>, <x, y, z>, rotation)

5.2 Constraint Model
Feature parameter can be transformed to lower geometry constraints automatically.
After all the components are created in the VRML, the data of the components are
transformed to constraints and stored in the Constraint Model.
The following are some Low-level constraints used popularly.
Position (Ni, x, y, z)
Orientation(Ni, , , )
Mate (N1.face, N2.face)
Co-axis (N1, N2.hole)
Insert (N1, N2.hole)
Align (N1.face, N2.face)
Parallel (N1, N2)
Vertical (N1, N2)
Tangent (N1.face, N2.face)
Loose (N1, N2)
Close (N1, N2)

αβφ

High-level constraints are established on the Low-level constraints. Here are some
High-level constraints.

Design and Implementation of Integrated Assembly Object Model

441

Interfering (N1, N2)
Connect (N1, N2)
Proceed (N1, N2)

5.3 Semantic Base
The components that are contributed to one specialized assembly function are collected together to construct the assembly semantic.
The Semantic of “Part1 and part2 are jointed by bolt” is:
E= {part1, part2, Bolt}
O= {T(part1),T(part2),T(Bolt),R(part1),R(part2),R(Bolt)}
Initial state S0 :{part1,part2,Bolt} STEP1=>
State S1 :{[part1,part2],Bolt} STEP2=>
Final state S2: {[part1, part2, Bolt]}
STEP1: {A1, A2}
STEP2: {A3, A4};
Sequence: part1->part2,part2->part1;[part1,part2]->Bolt
A1->A2->A3->A4
A1: Place (part1, part2)
A2: Align (part1, part2)
A3: Align (Bolt, [part1, part2])
A4: Insert (Bolt, [part1, part2])

⊕

⊕

5.4 Example
In the example there are eight kinds of components, Axle, Base, Bolt, Bushing,
L_Bracket, Pulley, Washer and Key (see Figure2), which are expressed by eight
nodes in VRML And their geometry features are gotten by function call through the
VRML In/Out event interface.

Fig. 2. Example

442

J. Fan, Y. Ye, and J.-M. Cai

There are 15 constraints and three semantics totally obtained from the data model.
And here are the three assembly semantics.
1.”Part Base and Part L_Bracket are jointed by Part Bolt”
2.”Part L_Bracket, Part Pulley and Part Axle are jointed”
3.”Part Key is placed in the slot on Part Axle”

6 Summary
Although the mechanical parts can be created in the 3D model easily, the relations
between parts cannot be described effectively. The integrated assembly object model
can be used to express the data and knowledge of the virtual assembly objects in
different level for assembly planning. The establishment of the powerful assembly
model will help to simplify and improve virtual assembly planning.

References
1. Lieberman L. I., Wesley M. A.: AUTOPASS: An Automatic Programming System for
Computer Controlled Mechanical Assembly, IBM Journal of Research and Development,
21(4), (1977) 321-333
2. Bourjault A.: Contributionune approche methodologique de l’assemblage automatise:
elaboration automatique des sequences operatiores, Thesis d’Etat Universite de FrancheComte, Besancon, France (1984)
3. Homem de Mello L., Sanderson A.: And/Or Graph Representation of Assembly Plans,
IEEE Transactions on Robotics and Automation, 6(2), (1990) 188-199
4. Wolter J.: On The Automatic Generation Of Assembly Plans, Computer-Aided Mechanical
Assembly Planning, Kluwer Academic Publishers (1991)
5. Lee K., Gossard D. C.: A Hierarchical Data Structures for Representing Assemblies, part I.,
Computer Aided Design, 17(1), (1985) 15-19
6. Bullinger H.J., Richter M. and Seidel K.A.: Virtual Assembly Planning, Human Factors
and Ergonomics in Manufacturing, 10(3), (2000) 331-341
7. Dewar R., Carpenter I. D., Ritchie J. M., and Simmons J. E. L: Assembly Planning in a
Virtual Environment, Proceedings of PICMET '97 Portland USA (1997) 664-667

