Procedia Computer Science
Volume 51, 2015, Pages 2237–2246
ICCS 2015 International Conference On Computational Science

Fast Multi-Objective Optimisation of a Micro-Fluidic
Device by using Graphics Accelerators
Christos Tsotskas1 , Timoleon Kipouros1 , and A. Mark Savill1
Cranﬁeld University, Bedford, U.K.
{c.tsotskas, t.kipouros, mark.savill}@cranfield.ac.uk

Abstract
The development of technology that uses widely available and inexpensive hardware for realworld cases is presented in this work. This is part of a long-term approach to minimise the
impact of aviation on the environment and aims to enable the users both from industrial and
academic background to design more optimal mixing devices. Here, a Multi-Objective Tabu
Search is combined with a ﬂow solver based on the Lattice Boltzmann Method (LBM) so
as to optimise and simulate the shape and the ﬂow of a micro-reactor, respectively. Several
geometrical arrangements of a micro-reactor are proposed so as to increase the mixing capability
of the device while minimising the pressure losses and to investigate related ﬂow features. The
computational engineering design process is accelerated by harnessing the high computational
power of Graphic Processor Units (GPUs). The ultimate aim is to eﬀectively harvest and
harness computing cycles while performing design optimisation studies that can deliver higher
quality designs of improved performance within shorter time intervals.
Keywords: MOTS2, MOO, MDO, multi-objective optimisation, real-world application, micro reactor,
baﬄe plate, LBM, CFD, GPU

1

Introduction

The development of technology that uses widely available and inexpensive hardware for realworld cases is presented in this work. Among other applications, this can be part of a longterm approach to minimise the impact of aviation on the environment, as suggested by Clarke
in [1]. Although there are numerous approaches to improve the technology of existing gas
turbine engines [2], studies that investigate alternative ways to generate energy and power are
of particular current interest. Among others, generating energy and power by using hydrogen
is a promising alternative that has been studied thoroughly by Murthy et al. [3]. The ability
to resolve the mixing of fuel is fundamental in such studies, which are often more challenging
to carry out because of the shape of the involved devices.

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.502

2237

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

The aim is ﬁrst to demonstrate a computational methodology that will enable users to carry
out research on devices that will minimise gaseous emissions by using the Central Processor
Unit (CPU) and the Graphic Processor Unit (GPU) of commodity machines, as a long-term
technological approach. Secondly, by intelligently harnessing the capacity of High Performance
Computing (HPC), more nature-inspired methods are anticipated to emerge. Here, a natureinspired algorithm, called Multi-Objective Tabu Search (MOTS2), which was introduced and
used in aeronautical applications in [4] by the current authors, is combined with a ﬂow solver
based on the Lattice Boltzmann Method (LBM), which was originally used in the same context
within a CPU environment [5]. This is part of a higher-level strategy to develop more eﬃcient
technology methods by employing alternative computational hardware, where MOTS2 was also
modiﬁed to operate on GPU by the same group [6]. For the time being, the MOTS2 algorithm
will still run on CPU and will administrate the optimisation process. By now deploying the
LBM ﬂow solver on alternative and widely available hardware has two advantages. Firstly,
many geometrical arrangements of a micro-reactor could be rapidly simulated to study the
mixing capability of the device and to investigate related ﬂow features. Secondly, the whole
computational engineering design process is accelerated by harnessing the high computational
power of GPUs, which can speed up a single simulation at lower levels. This is expected to
integrate with computational methods and experimental methods across many development
processes for environmental issues.
The structure of the paper follows. First, a brief introduction in the alternative computational hardware technology and methods is provided. Then, a method is described, where
the aforementioned technology and computational methods are combined so as to simulate and
optimise the ﬂow within a benchmark micro-reactor device within shorter time intervals. The
geometrical arrangement is paratemerised based on the geometrical features of the baﬄe plate
of the device. Thereafter, the parametric version of the simulation is coupled with an optimisation algorithm and the new system is launched for a ﬁnite period of time, whose results are
presented and discussed in the following section.

1.1

Employing Alternative Computing Architecture

The advance of the technology of modern GPU in terms of higher processing throughput,
larger memory bandwidth and their faster in-between inter-communication capabilities greatly
contributes to the evolution of new tools and methods. The hardware includes highly parallel,
many-core and multi-threaded processors and many hierarchical memories. In addition, the
Compute Uniﬁed Device Architecture (CUDA) provides a programming language that can
access GPU’s hardware and has reached a level of maturity, where GPU programming is more
ﬂexible and robust than ever before [7]. Hence, computationally intensive applications can run
more eﬃciently even on very large scale problems [8]. CUDA provides the ﬂexibility required to
directly and easily manipulate various levels and types of ﬁnely grained computational resources
on GPUs. Due to the low overall cost and high computational eﬃciency, GPUs now oﬀer a
decent alternative computational architecture that can suﬃciently cope with the requirements
of scientiﬁc applications, which increasingly require even more computational power [9–11].
Computationally, GPUs also have great cost beneﬁt: their low energy consumption for the
attained computational speed inspired the creation of the performance metric proposed by
Bekas and Curioni in [12], called f(time to solution) energy (FTTSE), where the elapsed time
is combined with the energy required for performing a simulation.
Available computational power and low cost will continue to be a considerable factor in the
evolution of aviation [13]. Employing alternative GPU computational architectures for Compu-

2238

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

tational Fluid Dynamics (CFD)-based applications can also be an intermediate step towards the
next generation of HPC and computational methods [11]. There are several applications where
GPUs have been proven useful in accelerating the execution of sub-system(s) for the purposes
of aviation, such as [14] and many more are expected in the future. However, as pointed out by
G¨oddeke [8], porting and upgrading every possible application to CUDA does not pay oﬀ for
the attained speed-up because of the eﬀort and the resources required to restructure, refactor,
maintain and the original code.

1.2

Lattice Boltzmann Modelling

Over the years CFD has been proven as a tool of paramount importance in aviation [15]. It
has enabled users to design, to analyse and to support high-performing and cost-eﬃcient commercial transports, and it has contributed to changing the process of aerodynamic design as
an accompanying tool to experimental and operational processes. Moreover, it is foreseen that
using CFD will contribute critically to developing a more environmentally-friendly technology
in the next few years [11]. The ability to simulate (both aerodynamic and reactive) ﬂows by
using CFD has progressed considerably and changed the aerospace design process, while reducing testing requirements and physical designs at lower cost and risk. It has also been used to
simulate real-world phenomena [16]. Fortunately, the evolution of computational hardware will
give CFD the opportunity to predict ﬂow (especially turbulent and separated) more reliably in
order to design and develop greener aircraft in the future. When engineering applications require resolving ﬂuid interactions in high accuracy, or involve low Mach number ﬂow, mesoscopic
ﬂows, complex geometrical arrangements and particular boundary conditions, LBM oﬀers an
alternative method for CFD instead of using the Navier-Stokes (NS) equations [17]. In fact,
LBM has been used on a wide range of running applications that cover everything from theoretical physics to real-world problems, and it is expected to provide one of the next evolutions
in computational sciences [18], notably for multi-scale simulation and optimisation.
In addition, LBM is one of the alternative ﬂow solution methods with great potential for the
future of aviation and is a good ﬁt for computational platforms based on GPUs and could also
be considered a nature-inspired method because it is fundamentally based on cellular automata.
By deﬁnition, the concept of LBM is a memory-bound algorithm, which provides a good ﬁt
for the GPU architectures. Given a computational environment with many processors, GPUenabled LBM codes have been used on a very wide span of applications in aerospace [19], while
being competitive in terms of both accuracy and execution speed. T¨
olke and Krafczyk in [20]
illustrated instances of LBM algorithms that were signiﬁcantly accelerated when running on
GPUs. They could potentially perform real-time simulation and assist engineering applications
in critical decision making processes.

2

Methodology to Optimise Flow Mixing

A datum geometry originally presented by Moghataderi et al. in [21] has been used here, too.
It is a micro-reactor that can mix two diﬀerent liquids coming from separate initial chambers
into a common end chamber. A multi-holed baﬄe plate aﬀects the speed of the ﬂuid and
creates turbulence, which increases the mixing capability of the device. The shape of the
holes is extremely important for the mixing, as was experimentally demonstrated in the same
reference. This is a simple application that reﬂects the complexity of real-world applications.
Here, it is used as a well-established benchmark test case.

2239

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

The methodology to optimise the performance of a micro-reactor is brieﬂy described. Firstly,
the ﬂow solver is modiﬁed to automatically simulate the ﬂow ﬁeld of several diﬀerent geometrical conﬁgurations, which will be speciﬁed by external conﬁguration ﬁles. Secondly, MOTS2
is set up by specifying conﬁguration settings and by formulating the optimisation problem.
Thirdly, MOTS2 is linked to GPU-LBM so as to operate as a single system; the former will
suggest diﬀerent design vectors to be simulated by the latter. Fourthly, the optimisation process
starts from the datum design that has been experimentally tested. Fifthly, the Pareto-Front
is obtained by the optimisation process and is further analysed so as to select a set of optimal
compromise designs. Finally, the ﬂow ﬁeld of the selected designs will be visualised and their
performance, in terms of ﬂow features and geometrical shape, is discussed.

2.1

Simulating the Flow within the Micro-Reactor

In order to reduce the elapsed time of optimisation process, the computationally eﬃcient LBM
algorithm is combined with GPUs so as to simulate the ﬂow of a micro-mixing device for
use on environmentally-friendly applicaitons. Originally, the ﬂow solver from [5] was used
to simulate the datum geometry and the simulation required 3000 seconds to complete on a
Intel(R) Core(TM) i7-2720QM CPU @ 2.20GHz by using 4 cores in parallel. This was considered
a too long time interval for the obtained information and had to be accelerated. Now, the speed
of a simulation is aﬀected by the speciﬁed number of threads, which are spawned in the GPUs,
and by the provided hardware. To simplify the case, the number of threads is automatically
calculated by the speciﬁcation of the hardware by using the interfacing features of CUDA to
query the provided GPU. The number of spawned threads per block on the GPU is a very
important factor in order to achieve high computational eﬃciency because of the occupancy of
Symmetric Multiprocessors (SMs) with threads and the available memory to store the results.
Here, the ﬂow solver is instructed to use 512 threads per block/kernel for a single simulation.
This is one of the fastest settings provided by the current GPU, which is the model Tesla
M2070. The 5375 MB of total global memory, the 448 available cores, 1150 MHz of stream
processors rate, and 1566 MHz of memory clock rate contribute to the fast simulation time. It
is also important to mention that this device consumes considerably lesser power compared to
traditional computational clusters of CPUs for the same computational power. Therefore, the
elapsed time reduced to approximately 150 seconds, which is approximately 20 times faster than
before. In terms of FTTSE, considering a simple linear function for time, the following ration
is obtained F T T SEGP U LBM /F T T SELBM = [150(s) · 225(W )]/[3000(s) · 45(W )] = 1/4, which
was expected because GPUs consume more energy. The latter demonstrates that the simulation
package should equally consider energy and computational speed, simply because in most of
the projects the computational budget is a combination of these two factors. In general, a more
eﬃcient simulation package that serves as an objective function-evaluation for an optimisation
process will give rise to the development of algorithms that could aﬀord to perform redundant
evaluations so as to gather more data and turn them into algorithmic knowledge, similar to
human intelligence.
The initial and boundary conditions attempt to replicate the experimental conditions of [21],
as follows. For simplicity, all conditions are integrated into the ﬂow solver. Before the baﬄe
plate, all the unoccupied nodes of the computational domain of the separate chambers are
initialised to constant and diﬀerent density values, which are expressed as a function of Reynolds
number (Re). The walls of the domain are treated as solid obstacles and implement the bounceback operator. At the end of the computational domain, the outlet boundary implements nonconvective boundary conditions. In LBM, the complexity of boundary conditions might aﬀect

2240

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

the execution time because of the data access pattern.

2.2

Geometry Parameterisation

A variety of geometrical arrangements of the device and the ﬂow can be easily modiﬁed before
the simulation begins. The target geometry is simply represented within an assembly of points
in a 3D coordinate system. Therefore, it is very easy to change the shape of the geometry. The
geometry of interest is a baﬄed micro-reactor, as depicted in Fig. 1, and is modelled within the
ﬂow solver for interfacing purposes. Here, the dimensions are expressed in LBM nodes. The
dimensions of the lattice are 680 lattice units(lu), 73 lu, 73 lu (additional nodes are used for
the wall) on x, y and z direction, respectively.

Figure 2: Design Parameters of Problem
(on the Baﬄe Plate) [5]
Figure 1: Perspective(a) and proﬁle view(b)
of the micro-reactor model(not to scale) [22]

The case is modelled based on the geometry shape and the ﬂow characteristics. The geometry of the baﬄe plate, which is the most important part of the reactor is modelled as shown
in Fig. 2. An additional module was implemented in the LBM code to care for the shape of
the baﬄe plate. During the optimisation process, for a single simulation, the size of the outer
holes of the baﬄe plate and their distance from the centre of the whole device are speciﬁed in
advance. Also, the speed of the ﬂow in the two separate chambers is modelled by specifying
Re, as discussed above, and is set to be always in the laminar region. All these parameters are
user deﬁned and are speciﬁed in an external ﬁle.

2.3

Optimising the Shape of the Micro-Reactor

The Multi-Objective Optimisation (MOO) problem considered has two objectives, two structural constraints and one operational constraint. Both objectives are computed separately
by using the GPU-LBM ﬂow solver after the ﬂow has been resolved. They determine the
performance of the micro-device and reﬂect the conﬂict between environmental targets and
operational targets. The structural constraints exist to instruct the optimiser to search for
sensible arrangements that adhere to the concept of the micro-reactor. The whole optimisation
process is depicted in Fig. 3.

2241

Fast Optimisation of Micro-Fluidic Devices on GPUs

	




	


	



		


 

	

!


	!
	!



"#

	


		


$%&
	
"#

	

&

	
	!







		



Figure 3: Layout of Optimisation Process on
Micro-Reactor Mixing

Tsotskas, Kipouros and Savill

Table 1: MOTS2 Conﬁguration Settings
for Micro-Reactor Optimisation
Parameter Description
Call diversiﬁcation move
after # non-improvements
Call intensiﬁcation move
after # non-improvements
Reduce the search step size
after # non-improvements
Initial step sizes
(as % of variable range)
Step sizes are multiplied
by this factor at restart
Random samples
# of variables
#of objectives
# of objective
function evaluations
Divide search space into
# regions
Size of Tabu Memory

Value
10
5
15
r: 0.166
Re: 0.05
s: 0.055
0.5
3
3
2
3000
4
6

The ﬁrst objective function is the Diﬀerence of Total Pressure (ΔP0 ) between the inlet and
the outlet of the domain. This is the diﬀerence between two regions of the geometry, where the
Total Pressure (P0 ) at the downstream end of the device is subtracted from the P0 at the inlet.
The lower the ΔP0 is, the lower the losses of the micro-reactor are. Therefore, this quantity has
to be minimised. The numeric value of ΔP0 is simply obtained by calculating the macroscopic
density from the microscopic densities of the data-structures of LBM.
The second objective function is the magnitude of vorticity (ω), which is a vector ﬁeld that
describes the tendency of a ﬂuid to rotate. In fact, it is a vector whose components are deﬁned
by using the components of the macroscopic velocity. The higher the magnitude of vorticity
is, the better the mixing capability of the micro-device. Therefore, this quantity needs to be
maximised.
The objectives are normalised against the datum design from [5] to more eﬀectively guide the
optimisation search, as the numerical accuracy will be the same for both of them. In addition, it
is easier for the user to appreciate any improvement from the baseline geometry and to maintain
direct comparison between this study and [5], where this concept was originally introduced. The
dual of maximising the normalised vorticity magnitude is minimising the normalised negative
vorticity magnitude.
Regarding the geometrical constraints, the radius of the outer holes of the baﬄe plate
should be kept small in order not to interfere with the middle hole. Designs that violate this
are classiﬁed as infeasible because they could not be supported by manufacturing purposes and
do not adhere to the original concept of six holes on the baﬄe plate for one chamber and one

2242

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

centre hole for the other chamber. Here, the distance from the middle of the device to the
centre of the outer holes should be between 11 and 64 lu, and its diameter should vary between
11 and 29 lu. Also, the diameter of the outer holes should vary between 5 and 11 lu. Regarding
the operational constraints, the range of variability of Re is speciﬁed to search for devices that
operate in the laminar region, i.e. less than 200.
The conﬁguration settings of the optimiser are listed in Table 1. These were set based on the
experience of the authors. A large number of designs are evaluated, because running on GPUs
is computationally aﬀordable, which is not the case in [5], and will increase the conﬁdence in the
ﬁnal trade-oﬀ between the objectives. In general, the exploration and exploitation settings have
been set to a very slow pace (compared to the other optimisation conﬁguration settings in earlier
cases); the MOO problem is expected to be complicated because of the nature of the objective
functions. The optimisation search starts from the geometry of the device whose performance
was experimentally tested in [21]. In fact, this is good practice in design optimisation because
the optimisation process will start from a point of well known performance. The step for each
decision variable has been set following the suggestion of D’Ammaro et al. in [5].

3

Results and Discussion




The ﬁnally obtained Pareto-Front is illustrated in Fig. 4, where the design process should identify as many optimal points as possible at the bottom left corner. More than 3,000 diﬀerent
designs were simulated in a highly complex design space within approximately 36 hours. Relative to the baseline, the normalised vorticity magnitude has seen an improvement by a factor
of up to 2.2, whereas the normalised diﬀerence of total pressure, and consequently losses, were
less than 2%. The range of the discovered normalised vorticity magnitude is less than the range
of the normalised diﬀerence of total pressure and the response of the device in the objective
space is linear when the normalised diﬀerence of total pressure is below datum’s. In practice,
when the vorticity objective drops below 1.8, the trade-oﬀ changes linearly.
$%&'()









	

	

	

	

	




	 !"#
/)#
*+($,.
"0 !"#
#
"

Figure 4: Complete Optimisation Search Pattern, Pareto Front and Three Selected Optimum Designs
The corresponding ﬂow solutions for the three selected designs from Fig. 4 and the datum
2243

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

are shown in Fig. 5 to Fig. 8. Furthermore, the ﬂow speed in Fig. 8 is so low that it is impossible
to distinguish any ﬂow pattern(s). A selected compromise design, which stands between the
extrema, achieved more than 30% improvement on both objectives. When the normalised
diﬀerence of total pressure increases more than the datum one, the Pareto-Front seems to have
an exponential shape, before that it follows a linear trend.
It was also found that varying the ﬂow speed for ﬁxed geometrical arrangements produces a
linear response in the performance of the device. For all the selected designs, the lower the ﬂow
speed is, the lower the normalised diﬀerence of total pressure. Compared to the datum design,
maximum normalised vorticity magnitude is achieved with small outer holes in the arrangement
of the device, relatively closer to the tube center and at higher speed ﬂow; on the contrary,
bigger holes at the same distance from the center tube (as the datum design) and a very low
ﬂow speed are required to operate the device at the minimum normalised diﬀerence of total
pressure.

[m/s]

Figure 5: Baﬄe Plate and Flow Visualisation for the Datum Design. Re = 100, r =
7lu, s = 24.5lu, ωnormalised = −1, ΔP0,normalised = 1

[m/s]

Figure 6: Baﬄe Plate and Flow Visualisation for the Design with Maximum Vorticity
Magnitude. Re = 200, r = 6lu, s = 23.5lu, ωnormalised −2.27, ΔP0,normalised 3.62

[m/s]

Figure 7: Baﬄe Plate and Flow Visualisation for the Compromise Design. Re = 150, r =
11lu, s = 23.5lu, ωnormalised −1.36, ΔP0,normalised 0.7

2244

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

[m/s]

Figure 8: Baﬄe Plate and Flow Visualisation for the Design with Minimum Diﬀerence of
Total Pressure. Re = 5, r = 10lu, s = 24.5lu, ωnormalised −0.04, ΔP0,normalised 0.02

4

Conclusion and Future Work

A fast computational engineering design process for environmentally-friendly studies has been
presented, as part of an MOO process. A Multi-Objective Tabu Search (MOTS2) algorithm was
linked to a GPU-enabled LBM ﬂow solver to optimise the geometrical and ﬂow characteristics
of a micro-reactor, which operates under near-laminar conditions so as to maximise the mixing
capability of the device while minimising its pressure losses. The process took advantage of the
high computational eﬃciency of GPU and was signiﬁcantly accelerated by employing the GPU
technology, which carried out the most computationally intensive part of the process, namely,
the simulation of the ﬂow via LBM. By using the local-search features of the MOTS2 algorithm
a wide and rich Pareto-Front has been revealed that improves both of the aforementioned design
parameters of the datum conﬁguration, which was an experimentally tested micro-reactor. The
new system that combined MOTS2 with GPU-LBM delivered results approximately 20 times
faster compared to an earlier system that employed a CPU-based LBM code [5], whereas it was
only 4 times better in terms of FTTSE.
Future work will focus on two diﬀerent stages. First, computational methods will be investigated so as to further accelerate the GPU-LBM and minimise the elapsed time required to
evaluate a single design. Consequently, it will be appropriate to increase the number of optimisation parameters in the problem formulation in order to study many diﬀerent geometrical
concepts by using the GPU version of MOTS2 from [6]. Ultimately, the majority of computationally intensive parts will be performed on the GPU.

References
[1] J. P. Clarke. The role of advanced air traﬃc management in reducing the impact of aircraft noise
and enabling aviation growth. Journal of Air Transport Management, 9(3):161–165, 2003.
[2] W. Horn, S. Ardey, F. Grauer, K.-J. Schmidt, and S. Staudacher. Opportunities and Challenges for
more Intelligent Gas Turbine Engines. In Deutscher Luft- und Raumfahrtkongress, DocumentID:
81265, 2008.
[3] P. Murthy, B. Khandelwal, V. Sethi, and R. Singh. Hydrogen as a Fuel for Gas Turbine Engines with Novel Micromix Type Combustors. 47th AIAA/ASME/SAE/ASEE Joint Propulsion
Conference & Exhibit. AIAA 2011-5806, 2011.
[4] C. Tsotskas, T. Kipouros, and M. Savill. Biobjective optimisation of preliminary aircraft trajectories. In Evolutionary Multi-Criterion Optimization, volume 7811 of Lecture Notes in Computer
Science, pages 741–755. 2013.

2245

Fast Optimisation of Micro-Fluidic Devices on GPUs

Tsotskas, Kipouros and Savill

[5] A. D’ Ammaro, T. Kipouros, S. D. Saddawi, A. M. Savill, and L. Djenidi. Computational Design
for Micro Fluidic Devices Using Lattice Boltzmann and Heuristic Optimisation Algorithms. In
Joint OCCAM/ICFD Lattice Boltzmann Workshop, Oxford UK, 2010.
[6] C. Tsotskas, T. Kipouros, and A. M. Savill. The Design and Implementation of a GPU-enabled
Multi-objective Tabu-search Intended for Real World and High-dimensional Applications. Procedia
Computer Science, 29:2152–2161, 2014.
[7] NVIDIA Corporation. CUDA Toolkit Documentation version 6.5. http://docs.nvidia.com/
cuda/index.html#axzz3QG9ry3J4, 2014. [Online; accessed January-2015].
[8] D. G¨
oddeke. Fast and Accurate Finite-Element Multigrid Solvers for PDE Simulations on GPU
Clusters. Logos Verlag, 2011.
[9] J. Dongarra, G. Peterson, S. Tomov, J. Allred, V. Natoli, and D. Richie. Exploring New Architectures in Accelerating CFD for Air Force Applications. In DoD HPCMP Users Group Conference,
pages 472–478. IEEE, 2008.
[10] S. Tomov, M. Dongarra, and M. Baboulin. Towards dense linear algebra for hybrid GPU accelerated manycore systems. Parallel Computing, 36(56):232–240, 2010.
[11] J. P. Slotnick, A. Khodadoust, J. J. Alonso, D. L. Darmofal, W. D. Gropp, E. A. Lurie, D. J.
Mavriplis, and V. Venkatakrishnan. Enabling the environmentally clean air transportation of the
future: A vision of computational ﬂuid dynamics in 2030. Philosophical Transactions of the Royal
Society A: Mathematical, Physical and Engineering Sciences, 372(2022), 2014.
[12] C. Bekas and A. Curioni. A new energy aware performance metric. Computer Science - Research
and Development, 25(3):187–195, 2010.
[13] A. Jameson and J. C. Vassberg. Computational Fluid Dynamics for Aerodynamic Design: Its
Current and Future Impact. 39th Aerospace Sciences Meeting and Exhibit. AIAA 2001-0538,
2001.
[14] M. Stadler, M. B. Schmitz, and W. Laufer. GPGPU Based Aeroacoustic Optimization of a ContraRotating Fan. In ASME Turbo Expo 2014: Turbine Technical Conference and Exposition, pages
V01AT10A019–V01AT10A019. American Society of Mechanical Engineers, 2014.
[15] F. T. Johnson, E. N. Tinoco, and N. J. Yu. Thirty years of development and application of CFD
at Boeing Commercial Airplanes, Seattle. Computers & Fluids, 34(10):1115–1151, 2005.
[16] Q. Li and K.H. Luo. Thermodynamic consistency of the pseudopotential lattice Boltzmann model
for simulating liquid-vapor ﬂows. Applied Thermal Engineering, 72(1):56 – 61, 2014.
[17] S. Succi. The Lattice Boltzmann Equation for Fluid Dynamics and Beyond. Oxford University
Press, 1st edition, 2001.
[18] C. K. Aidun and J. R. Clausen. Lattice-Boltzmann method for complex ﬂows. Annual Review of
Fluid Mechanics, 42:439–472, 2010.
[19] H. Wang and S. Menon. Fuel-Air Mixing Enhancement by Synthetic Microjets. AIAA journal,
39(12):2308–2319, 2001.
[20] J. T¨
olke and M. Krafczyk. TeraFLOP computing on a desktop PC with GPUs for 3D CFD.
International Journal of Computational Fluid Dynamics, 22(7):443–456, 2008.
[21] B. Moghtaderi, I. Shames, and L. Djenidi. Microﬂuidic characteristics of a multi-holed baﬄe plate
micro-reactor. International Journal of Heat and Fluid Flow, 27(6):1069–1077, 2006.
[22] L. Djenidi and B. Moghtaderi. Numerical investigation of laminar mixing in a coaxial microreactor.
Journal of Fluid Mechanics, 568:223–242, 2006.

2246

