Speedup Requirements for Output Queuing Emulation
with a Sliding-Window Parallel Packet Switch
Chia-Lung Liu1, Woei Lin1, and Chin-Chi Wu2
1

Department of Computer Science, National Chung-Hsing University,
250, Kuo Kuang Road, Taichung, Taiwan
{s9056005, wlin}@cs.nchu.edu.tw
2 Nan Kai Institute of Technology
wcc007@nkc.edu.tw

Abstract. This investigation uses an approximate Markov chain to determine
whether a sliding window (SW) parallel packet switch (PPS), only operating
more slowly than the external line speed, can emulate a first-come first-served
(FCFS) output-queued (OQ) packet switch. A new SW packet switching
scheme for PPS, which is called SW-PPS, was presented in the authors’ earlier
study [1]. The PPS class is characterized by deployment of distributed centerstage switch planes with memory buffers that run slower than the external line
speed. Given identical Bernoulli and Bursty data traffic, the proposed SW-PPS
provided substantially outperformed typical PPS, in which the dispatch algorithm applies a round-robin method (RR) [1]. This study develops a presented
Markov chain model that successfully exhibits throughput, cell delay and cell
drop rate. A simulation reveals that the chains are accurate for reasonable network loads. Major findings concerning the presented model are that: (1) the
throughput and cell drop rates of a SW-PPS can theoretically emulate those of a
FCFS-OQ packet switch when each slower packet switch operates at a rate of
around R/K (Eq. 19); and, (2) this investigation also proves the theoretical possibility that the cell delay of a SW-PPS can emulate that of an FCFS-OQ
packet switch, when each slower packet switch operates at a rate of about
(R/cell delay of FCFS-OQ switch) (Eq. 20).

1 Introduction
For efficient data deliver in high-capacity switching systems, the PPS is a good choice
in a high-speed communication [1]–[3]. However, traditional PPS which uses a
round-robin method cannot effectively use the memory space of center-stage
switches, and so requires much memory [3]. Our previous study describes a novel SW
packet switching method for PPS, called SW-PPS [1]. This novel switching scheme
overcomes the shortcomings of traditional PPS, and uses memory space more effectively than traditional PPS. Accordingly, previous experimental results demonstrate
that SW-PPS outperformed traditional PPS [1].
Work conserving [2] refers to a situation in which a switch’s output port is
working whenever there is a cell in the switch for it. FCFS-OQ switches are work
conserving. However, FCFS-OQ switches require buffer memories running at N times
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part IV, LNCS 3994, pp. 49 – 56, 2006.
© Springer-Verlag Berlin Heidelberg 2006

50

C.-L. Liu, W. Lin, and C.-C. Wu

external line rates. A necessary condition for a switch to emulate the performance of
FCFS-OQ switch is that it be work conserving. Under identical inputs, if switch A
emulates switch B, the performance of switch A equals or transcends that of the
switch B. Therefore, this study reveals that the throughput and drop rate of the SWPPS can emulate those of a FCFS-OQ switch with S ≥ 1 (Eq. 19), and that cell delay
of the SW-PPS can emulate that of a FCFS-OQ switch with S ≥ K/delay of FCFS-OQ
switch (Eq. 20), where S is the speedup of the internal line speed (R/K).

2 SW-PPS Architecture
The SW-PPS is divided into the following independent stages: 1) the self-routing
parameter assignment circuit; 2) the demultiplexers; 3) the slower speed center-stage
packet switches; and, 4) the multiplexers (shown in figure 1). The destined output port
of the incoming cell, extracted by applying header processing circuits, is indicated by
d. The incoming cell’s destination address d is delivered to a self-routing parameter
assignment circuit. In processing incoming cells, the self-routing parameter assignment circuit employs the output port d and a parameter assignment algorithm to create
an additional group of self-routing parameters (i, j, and d). These self-routing parameters (i, j, and d) are attached to incoming cells as a self-routing tags. Incoming cells
then use the attached tags to navigate through the demultiplexers and center-stage
switches. Parameters (i, j, and d) are defined as follows: the variable i in parameters
informs the center-stage switch where the cell will be stored; variable d indicates
which memory module in the ith center-stage switch the cell will be stored in; and,
variable j designates the memory location in the dth memory module where the cell
will be stored. During the cell WRITE cycle for an incoming cell, the cell is written to
jth memory location in a given memory module d and a given center-stage switch i.
During the cell READ cycle, cells are sent to multiplexers according to the location of
the SW. The number of center-stage switches refers to the reference [2].
Sliding Window
i

switch[k]

1
2
N

1

2

switch[2]

L

switch[1]

j
d

Fig. 1. Architecture of the SW-PPS

Fig. 2. A 3-D representation of memory space

Speedup Requirements for Output Queuing Emulation

51

3 SW Switching Scheme
According to the SW-PPS switching schedule, the overall memory space, including
all cell memory locations in all of the center-stage switches, is represented as a threedimensional (3-D) memory space (i, j, and d) (shown in figure 2). The memory locations in the global memory space are represented by a 3-D coordinate system (i, j, and
d), where the ith coordinate represents the center-stage switch; i= [1…K], where K is
the number of center-stage switches. The dth coordinate indicates the memory module; d= [1…N], where N is the size of PPS (or the size of the center-stage switch); jth
coordinate designates the memory location in the memory module; j= [1…L], where
L is queue size. In other words, L represents the number of memory locations in each
memory module. The SW is regarded as a pointer to a group of cells in the 3-D memory space (shown in figure 2). The SW advances one step during each switch cycle.
The location of the SW in the global memory space is recorded by one variable: SW.j.

Fig. 3. Flowchart depicting traversal of SW

Fig. 4. Assignment process for self-routing
parameters (i, j, and d)

The flowchart in figure 3 shows SW traversal across the entire 3-D memory space
and its connection to the switch cycle and switching operation. After switching functions in step 606, counters and variables are updated in 608 to account for changes.
The SW is then advanced to next location in step 610.
Assigning self-routing parameters (i, j, and d) to incoming cells is computed by
the parameter assignment circuit. An additional routing tag carrying the self-routing
parameters (i, j, and d) is attached to incoming cells. Before exploring the process the

52

C.-L. Liu, W. Lin, and C.-C. Wu

self-routing parameters (i, j, and d), the PPS’s restrictions first be understood [1][2].
Determination of self-routing parameters (i, j, and d) by the assignment circuit to an
incoming cell is shown by the flowchart in figure 4. The symbols used therein are
described as follows, (1) d is the cell’s output-port destination (2) (id, and jd) are the
parameters (i, and j) of the incoming cell sent to output port d (3) m is the number of
the fanout, when it is in the multicast traffic (4) Switch[i].Qd is the memory location
that is written next time inside the dth memory module and ith center-stage switch for
the cells destined to output port d. (5) X is a set of cells input during a given external
cycle, 0 ≤│X│≤ N, where N is the number of input ports. According to step 808
(shown in Fig. 4), if the number of cells in the dth queue of the switch[i] is greater
than L, the cell destined to d is dropped.

4 Analysis for FCFS-OQ Switch
The performance of a FCFS-OQ switch is first analyzed. The following assumptions
are made: (1) Cells arrive according to a Bernoulli process. (2)Traffic load is uniformly distributed. (3) The length of the cell is constant. (4) Each queue has a finite
capacity.
The following is a list of notations which are used in the development of the performance model and its subsequent analysis. (1) N: Size of the FCFS-OQ switch. (2)
ρ: Input load. (3) L: Length of buffer. (4) Pj (t): Probability that j cells are stored in a
buffer at network cycle t. (5) Pdrop (t): Probability that the buffer overflows at network
cycle t. (6) gi: Probability that i cells arrive at same output queue. (7) r: Probability
that a cell in a queue successfully moves to the output port. (8) r : r = 1 − r .
So we assume the probability r = 1, there is no head-of-line blocking (HOL) problem in FCFS-OQ switch [5]. The FCFS-OQ switch load= ρ and r= 1 obtains gi and
following equations.
ρ

ρ

0≤i≤ N .

g i = C iN * ( ) i * (1 − ) N −i ,
N
N

(1)

P0 (t + 1) = P0 (t ) * ( g 0 + g1 * (r )) + P1 (t ) * ( g 0 ) * (r ) .
j

j +1

n =0

n =0

Pj (t + 1) = ∑ Pn (t ) * ( g j − n ) * (r ) + ∑ Pn (t ) * ( g j +1− n ) * (r ), 1 ≤ j ≤ L − 1
L

L

n =0

n =0

PL (t + 1) = ∑ Pn (t ) * ( g L − n ) *( r ) + ∑ Pn (t ) * ( g L +1− n ) * ( r ) + Pdrop (t )
L

Pdrop (t + 1) = ∑

L

N

(2)
.
.

n = 0 i = L +1− n

i

(4)

N

∑ P (t ) * ( g ) * (r ) + ∑ ∑ P (t ) * ( g ) *(r ) .
n

(3)

n=0 i = L+ 2−n

n

i

(5)

The three primary performance measures are given as follows.
FCFS _ OQ _ Switch _ Drop Rate( ρ , S , t , N , K , L) = Pdrop (t ) .

(6)

FCFS _ OQ _ Switch _ Throughput ( ρ , S , t , N , K , L) = ( ρ − Pdrop (t )) .

(7)

Speedup Requirements for Output Queuing Emulation

53

L

FCFS _ OQ _ Switch _ Delay ( ρ , S , t , N , K , L) =

[∑ (i ) * ( Pi (t ))] + L ∗ ( Pdrop (t ))

.

i =1

(8)

1 − P0 (t )

5 SW-PPS Analysis
The SW-PPS was further simplified to an output buffer that is described by a Markov
chain model. Finally, four equations of performance evaluations are derived. The
assumptions made herein are the same as those in section 4 with one additional assumption: Low speed center-stage switches are OQ switches.
For clarity, we list notations that are employed in the development of the performance model and analysis. (1) N: Size of the SW-PPS. (2) K: Number of center-stage
switches. (3) ρ: Input load. (4) Lsw: Size of buffer. (5) Psw_j (t): Probability that j cells
are stored in a buffer at network cycle t. (6) Psw_drop (t): Probability that buffer overflows at network cycle t. (7) gsw_i: Probability that i cells arrive at the same output
buffer. (8) rsw: Probability that a cell in a buffer successfully moves to the multiplexer.
(9) r sw : rsw = 1 − rsw . (10) S: The speedup of the internal link.
Because (1) External load= ρ, (2) number of center-stage switches= K, (3) SW
scheme will choose one of the switches that Qd is minimum (shown in steps 804 and
806 in the figure 4), we obtained internal load of the SW-PPS (ρ’), gsw_i and rsw.
ρ'=

g sw _ i = CiN * (

ρ
C1K (1− ρ ) +1

.

(9)

ρ' 1
N

ρ' 1
* ) i * (1 − * ) N −i ,
S
N S

0≤i≤ N .

(10)

We assume the probability rsw = 1, because there is no head-of-line blocking
(HOL) problem in center-stage switches that are OQ switches.
The resulting equations are similar to those for a Markov chain of the FCFS-OQ
switch (section 4), because the center-stage switches use FCFS-OQ switches. We
have following equations.
Psw _ 0 (t + 1) = Psw _ 0 (t ) * ( g sw _ 0 + g sw _ 1 * rsw ) + Psw _ 1 (t ) * ( g sw _ 0 ) * ( rsw ) .
j

j +1

n=0

n=0

(11)

Psw_ j (t +1) = ∑Psw_ n (t) *(gsw_ j −n ) *(r sw ) + ∑Psw_ n (t) *(gsw_ j+1−n ) *(rsw ), 1≤ j ≤ Lsw −1 .
Lsw

Lsw

n=0

n =0

(12)

Psw _ L sw (t + 1) = ∑ Psw _ n (t ) * ( g sw _ Lsw −n ) * (rsw ) + ∑ Psw _ n (t ) * ( g sw _ Lsw +1−n ) * (rsw ) + Psw _ drop (t )
Lsw

Psw _ drop (t + 1) = ∑

N

∑P

sw _ n
n = 0 i = Lsw +1− n

Lsw

(t ) * ( g sw _ i ) * (rsw ) + ∑

N

∑P

sw _ n
n = 0 i = Lsw + 2 − n

(t ) * ( g sw _ i ) *( rsw )

.

(13)

(14)

The four performance measures are as follows.
SW _ PPS _ Drop Rate( ρ , S , t , N , K , L sw ) = Psw _ drop (t ) .

(15)

54

C.-L. Liu, W. Lin, and C.-C. Wu
SW _ PPS _ Throughput( ρ , S , t , N , K , Lsw ) = ρ − Psw _ drop (t ) .

(16)

L sw

SW _ PPS _ Internal Delay ( ρ , S , t , N , K , Lsw ) =

[∑ (i ) * ( Psw _ i (t ))] + Lsw ∗ Psw _ drop (t )
i =1

.

(17)

1 − Psw _ 0 (t )

Lsw

SW _ PPS _ External Delay( ρ , S , t , N , K , Lsw ) =

[∑ (i) * ( Psw _ i (t ))] * K + Lsw ∗ Psw _ drop (t ) * K
i =1

S − Psw _ 0 (t ) * S

(18)

6 Speedup Requirements for FCFS-OQ Switch Emulation
If the FCFS-OQ Switch Drop Rate (Eq. 6), divided by the SW-PPS Drop Rate (Eq.
15) exceeds one, the drop rate of SW-PPS emulates that of FCFS-OQ switch. Based
on the assumption that length of a FCFS-OQ switch queue equals length of centerstage switch queue, L = Lsw. FCFS_OQ_Switch_Drop_Rate/SW_PPS_Drop_Rate≥1.
This means that Pdrop(t)/Psw_drop(t)≥1, so that
S ≥1 .

(19)

Applying S = 1 and L = Lsw yields gi ≥ gsw_i and, Pj ≥ Psw_j, where 0 ≤ i ≤ N and 0 ≤
j ≤ L. Since S ≥ 1, Pdrop ≥ Psw_drop. Throughput is determined by subtracting drop rate
from arrival rate. With a speedup of S ≥ 1 and internal link rate ≥ R/K, the SW-PPS
can emulate FCFS-OQ switch throughput and drop rate.
A same procedure demonstrates that SW-PPS can match the cell delay of FCFSOQ switch, if the following inequality is satisfied. If FCFS_OQ_Switch_Delay
/SW_PPS_External_Delay≥1, we have FCFS_OQ_Switch_Delay/SW_PPS_Internal_
Delay*(K/S)≥1. By increasing speedup S, the SW-PPS Internal Delay (Eq. 17) can be
effectively reduced. We also obtain
S≥

SW _ PPS _ Internal _ Delay * K
≅
FCFS _ OQ _ Switch _ Delay

K * (1 − P0 (t ))
L

[∑ (i ) * ( Pi (t ))] + L ∗ ( Pdrop (t ))

.
(20)

i =1

7 Comparison and Simulation
The evaluations used to measure performance are mean throughput, cell loss ratio,
and mean cell delay. A 32*32 FCFS-OQ switch and SW-PPS are established; the
number of center-stage FCFS-OQ switches is K= 64; the queue size (L) is 16 and 4.
Figures 5 to 10 show a mathematical analysis and simulation results for the OQ (L, x)
and SW-PPS (L, x, speedup). If x= S represents the simulation result, then x= M
yields the results of the Markov chains analysis (whose results are plotted as hollow
points in figures 5 to 10). When the speedup satisfies Eq. 19, figures 5 to 8 compare
the throughput and drop rate for OQ (L, x) and SW-PPS (L, x, speedup= Eq. 19). The
SW-PPS accurately emulates the FCFS-OQ switch. The cell delay of SW-PPS (L, x,

Speedup Requirements for Output Queuing Emulation

Fig. 5. Emulation of throughput (L=16)

Fig. 7. Emulation of drop rate (L=16)

Fig. 9. Emulation of delay (L=16)

55

Fig. 6. Emulation of throughput (L=4)

Fig. 8. Emulation of drop rate (L=4)

Fig. 10. Emulation of delay (L=4)

speedup= Eq. 20) is very close to that of OQ (L, x) (figures 9 and 10), when the
speedup of internal link rate is as given by Eq. 20. Figures 5 to 10 reveal that the
FCFS-OQ switch performance is emulated remarkably well closely. The analytical
results agree closely with the simulation results.

56

C.-L. Liu, W. Lin, and C.-C. Wu

8 Conclusion
A novel SW packet switching scheme for PPS, called SW-PPS, was presented [1]. It
retains advantage of traditional PPS, that all memory buffers and internal line rate run
slower than external line rate, and it uses memory space more effectively. This work
develops an analytical model for measuring SW-PPS, and indicates that a SW-PPS,
which operates slower than the external line rate, can emulate a FCFS-OQ switch.
This analytical model exploits approximate Markov chain models. The important
findings of this investigation are: (1) in throughput and cell drop rate, a SW-PPS emulates a FCFS-OQ packet switch, which is work conserving, if each slow speed packet
switch works at a rate of around R/K (shown in Eq. 19); and, (2) in delay of cells, a
SW-PPS can emulate a FCFS-OQ packet switch when each slow speed packet switch
works at a rate of about (R/cell delay of FCFS-OQ switch) (shown in Eq. 20).

References
1. Chia Lung Liu and Woei Lin: Performance Analysis of the Sliding-Window Parallel Packet
Switch. IEEE 40th International Conference on Communications 2005, ICC 2005. vol. 1
(2005). 179–183
2. Sundar Iyer: Analysis of the Parallel Packet Switch Architecture. IEEE Transactions on
Networking, vol. 11, NO. 2. (2003) 314–324
3. A. Aslam, and K. Christensen: Parallel packet switching using multiplexers with virtual input queues. LCN 2002. (2002) 270–277
4. Szymanski, T., Shaikh, S.: Markov chain analysis of packet-switched banyans with arbitrary
switch sizes, queue sizes, link multiplicities and speedups. Infocom 1989. vol. 3. (1989)
960–971.
5. Karol, M., Hluchyj, M., Morgan, S.: Input Versus Output Queueing on a Space-Division
Packet Switch. Communications, IEEE Transactions on vol. 35. Issue 12. (1987) 1347–
1356

