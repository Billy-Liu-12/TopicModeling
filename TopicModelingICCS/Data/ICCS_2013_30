Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 90 – 99

International Conference on Computational Science, ICCS 2013

Non locality, topology, formal languages:
new global tools to handle large data sets
Emanuela Merellia,∗, Mario Rasettib
a

School of Science and Technology, University of Camerino, Via del Bastione,1, Camerino 62032, italy
b
ISI Foundation, Via Alassio 11-C, Torino 10126, Italy

Abstract
The basic idea that stems out of this work is that large sets of data can be handled through an organized set of mathematical and
computational tools rooted in a global geometric vision of data space allowing to explore the structure and hidden information
patterns thereof. Based on this perspective, the objective is naturally that of discovering and letting emerge, directly from
probing the data space, the manifold hidden relations (patterns), e.g. correlations among facts, interactions among entities,
relations among concepts and formally describing, in a semantic mining context, the discovered information. In this note, we
propose an approach that exploits topological methods for classifying global information into equivalence classes and regular
languages for describing the corresponding automaton as element an of hidden complex system.
Keywords: Topology of data; Mapping Class Group; Formal Language; Complex systems.

1. Introduction
Probably the most important fact in modern science is the dramatic change in paradigms that
has seen reductionism challenged by holism. Complex systems can be deﬁned as systems
composed of many non-identical elements, entangled in loops of non-linear interactions. The
challenge is to control the collective emergent properties of these systems, from knowledge of
components to global behavior. A typical feature of complex systems is in fact emergence of
non-trivial superstructures that cannot be reconstructed by applying a reductionist approach.
Not only do higher emergent features of complex systems arise out of the lower level interactions, but the patterns that they create react back on those lower levels. We can consider a
complex system made by two levels of information, the local information - i.e. the network of
∗

Corresponding author: tel.: +39-338-399-0412 ; fax: +39-0737-40-2561
E-mail address: emanuela.merelli@unicam.it.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.172

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

interactive elements - and the global information - the emergence of global properties, possibly
unknown, from the observed phenomenon. To construct a theory that allows to deﬁne and manage complex systems we need to reach forward to a real theory of complex systems, bearing on
complex phenomena and data. We believe that one way to create such models is that of extracting them from the data by which the complex system itself is characterized. Handling large sets
of data, understanding what kind of phenomena are hidden and trying to model the dynamics
of the corresponding complex system, is a very ambitious goal whose output will contribute for
reliable predictions. To this aim, in recent years, an integrated set of methods and concepts has
emerged among which those, topology based, that will be introduce in this note. The seminal
work of a number of authors, such as Carlsson [1], Edelsbrunner and Harer [2] and others introduced the basic idea that large sets of data can be handled only through a global geometric
vision of data: the notion that it should be possible to incorporate data in a global topological
setting, the ‘space of data’ – deﬁned as a suitable collection of ﬁnite samples taken from the
data set – and explore then the structure and hidden information patterns thereof [5]. Based
on this perspective, the ultimate objective is naturally that of discovering and letting emerge,
directly from probing the data space, the manifold hidden relations (patterns) that exist as correlations among events/facts, interactions among actors/agents or even relations among concepts,
and semantically interpreting them as global properties associated to the mining context.
In this note, after reviewing the basic ingredients of topology at the basis of the proposed
approach and pointing out its strengths and weaknesses, we intend to show that the proposed
topological approach leads to the possibility of classifying data – even apparently disordered
and noisy data sets – into equivalence classes with respect to certain global transformations
of the data space, by the equivalent of what in topology is referred to as the mapping class
group. There emerges an unexpected structure of the data set, which has quite a far-reaching
interpretation in terms of formal language theory, and endows the semantics generated by the
mining process with a new, powerful, eﬃcient tool. The latter promises to play a role in the
evolution/elaboration process leading from data to information, from information to knowledge
and eventually from knowledge to wisdom.
2. The Proposed Approach: three main steps
The approach proposed in this note consists of constructing a global object, analysing the behaviour of the object, and describing the global object in a semantic domain.
Construction a global object
Three basic ideas provide the pillars over which the global, topological approach to data space
is based: i) It is convenient to interpret the huge set of ‘points’ that constitute the space of data
resorting to a family of simplicial complexes, parametrized by some suitably chosen ‘proximity parameter’. It is this operation that converts the data set into a global topological object.
In order to fully exploit the advantages of topology, the choice of such parameter should be
metric independent, in general the expression of a “relation”. ii) One can fruitfully deal with
such topological complexes by the tools of algebraic and combinatorial topology. Speciﬁcally,
the most eﬃcient tool is the theory of persistent homology, appropriately adapted to the parameterized families of simplicial complexes characterizing the space of data when explored at

91

92

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

various proximity levels. This allows us to get rid in some way of the noise aﬀecting the data
considered. In our context, the reduction of noise is the result of the parametrized persistent
homology. iii) It is possible and eﬃcient to encode the data set persistent homology in the
form of a parameterized version of topological invariants, in particular Betti numbers, i.e., the
invariants representing the dimensions of the homology groups. These three steps provide an
exhaustive knowledge (possibly approximate, if the cluster of points considered does not coincide with the entire space) of the global features of the space of data, even though such space
is neither a metric space nor a vector space [5].
Given a space of data S, unordered collection of data represented just as a set of points, this
ﬁrst step consists in selecting, by the appropriate notion of proximity, a subgroup of data K ⊆
S. The topological information contained in K is global and is coded in a set of topological
invariants that summarizes the information over domains of parameter values, of the topological
objects constructed in a discrete space from data. What we call topological object is a piece of
information extracted from a set of data to which we aim to associate a meaning as much as
possible coherent, coded in the global features of the space of data considered as topological
space. As an example, suppose to have a space of data regarding some reality whatsoever
(unknown), and suppose having identiﬁed a subset of data whose global information tells you
that the topological object, call it CH4 , can be parameterized by a set of parameter values that
range by [w = 0.2715, w = 0.2453, w = 0.2389, w = 0.1513] and that the object is of genus
g = 3 when w = 0.2453 and genus g = 9 when w = 0.2389.
Analysing the behaviour (properties) of the object
The second step consists of analysing the behavior of the topological object under all possible,
topology preserving, transformations. This leads to classifying the space of data into classes
of equivalence, each of which represents symmetries and regularities hidden within the space
of data itself. They are determined by the cosets of the mapping class group of the topological
space which is our object of analysis. The genus tells us by what kind of manifold such object
is represented. While the group is the mathematical tool for constructing languages. Any
group is presented by the set S of its generators and the set R of its relations. An example
is given by the group G168 , which provides a basis for a surface of genus g = 3. This means
that G168 is the basic ingredient by which to generate the languages suitable to describe any
objects represented by a genus three 2-manifold. Even if elements in diﬀerent classes may
represent the same concept, the conﬁguration with which they are spatially connected must be
diﬀerent; that means the order in the relations is changed. Going back to the above example of
CH4 , if we take the topological object of genus g = 3 and we use G168 we can create by it the
classes of equivalence of all transformations of CH4 , each class representing diﬀerent spatial
conﬁgurations.
Describing the global object
Once we have extracted the global object and generated its classes of behavioral equivalences,
the third step consists of interpreting the object through the generation of formal languages and
mappings into semantic domains. We recall that within the theory of formal languages there
are two very meaningful results, the ﬁrst asserts that for any regular language we can deﬁne
a non-deterministic ﬁnite state automaton and for any non-deterministic ﬁnite state automaton

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

we can deﬁne a determinist ﬁnite state automaton. The second, by Myhill-Nerode1 , states that
a language is regular if the strings of the language can be classiﬁed in a ﬁnite number of classes
of equivalences and the number of equivalence classes is equal to the number of states of the
minimal deterministic ﬁnite automaton accepting the language. Since both groups, the basis
and the mapping class group determine, both in the manifold and over the space of data, a ﬁnite
set of classes of equivalence, we can deﬁne two deterministic automata, one that recognizes
the language of the reference basis and the other that recognizes the language of the space of
data. In such a way we deﬁne two languages; a common language, in the above analogy the
relational algebra, and a speciﬁc language. The idea is to use relational algebra to describe
the relations hidden in the space of data. Referring to the CH4 example, we can say that the
common regular language is the language associated to G168 and the speciﬁc language is the
language that described the relations, e.g. the hidden global properties of CH4 . What happens
if we try to associate to these two language a semantic domain? First we discover that the space
of data contains data possibly similar to those stored from the simulation of methane molecules
(Fig. 1 of the Pascucci ’s et. al. work illustrates methane electron iso-density surfaces [8]),
then we discover that all the CH4 molecules belongs to the structural isomer, because they
are arranged in a unique spatial conﬁguration where each hydrogen bond bonds with a single
location on the carbon atom and there is no way to rearrange the hydrogen atoms.
2.1. Introduction to Topology of Space of Data
In order to better comprehending the scheme, it is necessary to recall that the homology is
a mathematical tool that “measure” the shape of an object. The result of this measure is an
algebraic object, a succession of groups. Informally, these groups encode the number and
the type of “holes" in the manifold. A basic set of invariants of a topological space X is just
its collection of homology groups, Hi (X). Computing such groups is certainly non-trivial,
even though eﬃcient, algorithmic techniques are known to do it systematically. Important
ingredients of such techniques, but also output of the computation, are just Betti numbers; the
i-th Betti number, bi = bi (X), denoting the rank of Hi (X). It is worth remarking that Betti
numbers often have intuitive meaning: for example, b0 is simply the number of connected
components of the space considered, while oriented 2-dimensional manifolds are completely
classiﬁed by b1 = 2g, where g is the genus (i.e., number of “holes”) of the manifold, so as b2
classiﬁes the 3-dimensional and bn the n-dimensional manifolds. What makes them convenient
is the fact that in several cases knowing the Betti numbers is the same as knowing the full space
homology. Sometimes to know the homology groups it is suﬃcient to know the corresponding
Betti numbers, typically much simpler to compute. In the absence of torsion, if one wants to
distinguish two topological objects via their homology, their Betti numbers may already do it.
We already mentioned that data can be represented as unordered sequence of points in a ndimensional space En , the ‘space of data’. Such space is typically not a vector space [indeed,
every point of it is represented as a vector, i.e., a string of numbers in some ﬁeld, but the
‘components’ of such vector have no meaning], and – even more manifestly – there is no reason
to consider it Euclidean, as it is instead often done. All crucial information about the system
1

Nerode, Anil (1958), “Linear Automaton Transformations”, Proceedings of the AMS 9

93

94

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

Fig. 1. Betti numbers and generators of MCG

the data in En refer to cannot be encoded in the global ‘structure’ of the data space, through its
inherent, typically hidden, correlation patterns. The latter is what contains (and may provide)
the relevant knowledge about the underlying phenomena which data represents.
The obvious conventional way to convert a collection of points within a space such as En into
a global object is to use the point cloud as vertex set of a combinatorial graph, G, whose
edges are exclusively determined by a given notion of ‘proximity’, speciﬁed by some weight
parameter δ. This is a delicate point of the theory, because δ should not ﬁx a ‘distance’, that
would imply ﬁxing some sort of metric, but rather provide information about ‘dependence’,
i.e., correlation or, even better, relation. In case such dependence had to do with the distance,
it should be a non-metric notion (for example, chemical distance, ontological distance). A
graph of this sort, while capturing pretty well connectivity data, essentially ignores a wealth
of higher order features beyond clustering. Such features can instead be accurately discerned
by thinking of the graph as the ‘scaﬀold’ of a diﬀerent, higher-dimensional, richer (more complex) discrete object, generated by completing the graph G to a simplicial complex, K. The
latter is a piecewise-linear space built from simple linear constituents (simplices) identiﬁed
combinatorially along their faces. The decisions as how this is done, implies a choice of how
to ﬁll in the higher dimensional simplices of the proximity graph. Such choice is not unique,
and diﬀerent options lead to diﬀerent global representations. Two among the most natural and
common ones, equally eﬀective to our purpose, but with diﬀerent characteristic features, are:
ˇ
i) the Cech
simplicial complex, where k-simplices are all unordered (k + 1)-tuples of points
of the space En , whose closed 12 δ-ball neighborhoods have a non-empty mutual intersection;
ii) the Rips complex, an abstract simplicial complex whose k-simplices are the collection of
unordered (k + 1)-tuples of points pairwise within distance δ. The Rips complex is maximal
among all simplicial complexes with the given 1-skeleton (the graph), and the combinatorics
of the 1-skeleton completely determines the complex. The Rips complex can thus be stored as
ˇ
a graph and reconstructed out of it. For a Cech
complex, on the contrary, one needs to store
the entire boundary operator, and the construction is more complex; however, this complex
contains a larger amount of information about the data space toplogical structure.
Algebraic topology provides a mature set of tools for counting and collating holes and other
topological pattern features, both spaces and maps between spaces, for simplicial complexes. It
is therefore able to reveal patterns and structures not easily identiﬁable otherwise. As persistent
homology is generated recursively, corresponding to an increasing sequence of values of δ.

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

Complexes grow with δ. This leads us to naturally identifying the chain maps with a sequence
of successive inclusions. Persistent homology is nothing but the image of the homomorphism
thus induced. The available algorithms for computatiing persistent homology groups focus
typically on this notion of ﬁltered simplicial complex. Most invariants in algebraic topology are
quite diﬃcult to compute eﬃciently. Fortunately, homology is exceptional under this respect
because the invariants arise as quotients of ﬁnite-dimensional spaces.
3. Transformations of the Space of Data
Turning the space of data into a topological global object, as we do representing/approximating
it by a (parametrized family of) simplicial complexes, allows us to consider its behavior under
global topological transformations. Such transformations classify subspaces of (orbits in) En
into equivalence classes.
The mapping class group, GMC , is one of such sets (indeed a group) of transformations [3].
In order to discuss it, one has to consider two fundamental objects attached to (all) the 2dimensional submanifolds K of S: a group and a space. How these two objects relate to each
other is crucial to understand what happens.
In terms of our problem, the space S can represent the space of data, the topological global
object, while the group K is the tool that allows us to select the classes of equivalence by
classifying the transformations and discoverying relations possibly hidden in the space of data.
In order to make deﬁnitions and properties more clearly understandable, let’s ﬁrst deﬁne things
as if S were continuous. The group GMC is then deﬁned to be the group of isotopy classes of
orientation preserving diﬀeomorphisms of S (that restrict to the identity on the boundary ∂S,
if ∂S is not empty): GMC (S) ≡ Diﬀ(S)/Diﬀ 0 (S) , where Diﬀ(S) is the group of diﬀeomorphisms of S, whereas Diﬀ 0 (S) is the group of diﬀeomorphisms of S isotopic to the identity,
i.e., homotopic to the identity by a homotopy that takes the boundary into itself. GMC (S) is
generated by Dehn’s twists. In the case of a (closed, orientable) Riemann surface S of genus
g ≥ 2, for Γ a simple closed curve in S, and A be an annulus, i.e., a tubular neighborhood of
Γ, the Dehn twist τ is the map from S to itself which is the identity outside of A and inside
corresponds to a full (2π) rotation of the boundaries of A – topologically equivalent to circles –
with respect one to the other. A set of theorems of Dehn, Lickorish and Humpries prove that the
minimal number of curves necessary to generate GMC (S) is 2g + 1 for g > 1. Typically curves
Γ j , j = 1, . . . , 2g + 1, are chosen to be elements of the homology basis, i.e., representative
cycles of the homology, of S.
In general the problem of ﬁnding the presentation of GMC (S) requires the introduction of the
appropriate combinatorial structure, which resides in the Hatcher-Thurston complex [4].
In group theory, one method of deﬁning a group G is by its presentation G ∼ S | R . In
short, the mapping class group of a topological (simplicial complex) space S is the group of
isotopy-classes of automorphisms of S; that is the group of all transformations of the space into
a topologically identical object. Performing these transformations implies imposing an order
on space S and determine a set of equivalence classes that represent a partition of S. The
mapping class group is presented by a set of generators and relations among generators that

95

96

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

characterized the equivalence classes. Such presentation can be straigthforwardly expressed in
the langugae generated by the group that provides the basis to which S can be referred.
3.1. The G MCG based on modular group Mod
As an application, we illustrate here an example in which the ‘surface’ S is represented in a basis derived from the modular group – a feature that is ‘universal’ and can therefore be assumed
with no loss of generality as generic. The modular group Mod is isomorphic to a discrete
group, the projective special linear group PS L(2, Z). Mod is the group of 2×2 matrices with
integer entries and unit determinant, acting as a group of transformations.
a b
a, b, c, d ∈ Z ; ad − bc = 1 .
Mod = M =
c d
Mod has presentation Mod ∼ U, V| V 2 , (UV)3 where the generators are
1 1
0 1
.
, U=
V=
0 1
−1 0
The modular group Mod has a principal congruence of invariant subgroups Mod p ∼ PS L(2, Z p ),
±1 0
(mod p) .
p = odd prime, deﬁned by Mod p = M0 ∈ Mod M0 =
0 ±1
The factor Gω
Mod/Mod p , is a ﬁnite group of order ω, a Sylvester graph (Lattice) Σ p ,
embedded in a manifold S of genus g where ω = 12 p (p2 − 1) represents both the number of
elements of Gω and the number of points of lattice Σ p , and g = 4!1 (p + 2)(p − 3)(p − 5). In
other words, the Sylvester graph Σ p is nothing but the orbit under Gω of an arbitrary point in
the canonical fundamental region of S.
As an example, take G168 , a basis for surfaces of genus g=3, and its presentation G168 ∼
U, V | V 2 , (UV)3 , U 7 , (VU 4 )4 (notice that the action of each generator is assumed to be invertible, therefore – even though never explicitly done – together with U and V, the inverses
U −1 and V −1 should be in principle listed in the presentation). Euler’s theorem shows that
graph Σ7 has 24 heptagonal and 56 hexagonal plaquettes; each heptagon being surrounded by
7 hexagons. As the group manifold has genus > 0, the group is ﬁnite, a global relation appears,
(VU 4 )4 = I, which guarantees the closure of the homology of S in this g=3 case. Locally
the presence of heptagonal plaquettes implies that the surface exhibits negative curvature, the
manifold is hyperbolic. Lattice Σ7 is obtained from the hyperbolic disk shown in Fig.2 (B) by
selecting an arbitrary point P on any of its triangular domains and ﬁnding its orbit under the
whole G168 shown in Fig.2 (A), and then folding the resulting structure. Notice that the global
topology of the set of points of Σ7 provides the basis for any set of points with Betti number
b1 =6. Fig.2 (C-F) shows how to obtain S by folding of the 14-sided polygon.
It may be useful to note that the canonical homology basis of S can be written in terms of
words in the group relators U and V of G168 , that in turn can be used to express the mapping
class group generators in a manner evidencing the underlying (non abelian) lattice structure.
A choice for such a representation of the canonical homology basis is given by
a1 = (VU 3 )4 , b1 = U −1 (VU 3 )4 U ,
a2 = U −1 (VU 4 )3 VU(VU 4 )3 VU , b2 = (VU 3 )3 VU(VU 3 )3 U 3 (VU 3 )2 VU ,
a3 = (VU 3 )3 U 3 (VU 3 )3 U 3 , b3 = U −1 (VU 3 )3 VU(VU 3 )3 U 3 (VU 3 )2 VU 2 ,

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

Fig. 2. A. Poincarè disk D3 of the hyperbolic space G. B. Lattice Σ7 as triangulation of G. F. Surface of genus g=3

which has been determined to respect the intersection form. This is done starting with the
choice of a point P on the Poincaré disk D3 (Fig. 2 (A)) and by drawing ﬁrst a path a1 , moving
through the lattice with the U and V generators. The given path a1 starts in P, crosses the 5-th
edge of the 14-th sided polygon and, due to the identiﬁcation rule (2ν + 1) → (2ν + 6)[mod 14],
reenters it through the 10-th side and closes in P. The cycle b1 then must have only one
intersection with a1 and can be taken to start in P, exit through side 7 and reenter through side
12 to close in P. The cycle a2 is then drawn in such a way as to have no intersection with either
a1 or b1 , and from P exits through side 6, reappears in 1 to exit again trough 12, and reenters
in 7 to join P. Furthermore b2 , which must intersect a2 only, is made of three branches: one
between sides 6 and 5 (which passes through P), the others between 10 and 9, and 14 and
1. Finally, a3 has a branch 2–5 and one 10–11 while b3 has branches 8–7, 12–11 and 2–8.
Clearly, (shorter) alternative words corresponding to equivalent paths can be written by making
use of group local relators U 7 = V 2 = (UV)3 = 1 of G168 . Generators of mapping class group
G MC (S3 ) of Σ7 (or, better, of S3 ) are the set of Dehn’s twists around cycles ai , bi , i = 1, 2, 3.
4. Interpretations of the Space of Data
Considering all the transformations that a topological space undergoes and classifying them in
classes of equivalences – via the mapping class group – allows us to deﬁne a regular language L
that describes the data belonging to the partitions of space of maps between data – by applying
known properties of formal language. We recall that given a ﬁnite set S , the free group is
indicated by S consists of all the words that can be constructed with S ; let R ⊆ S be the
subset of the group consisting of words of S , S |R the biggest quotient group of S such that
each element of R is identiﬁed by the identity, S the ﬁnite set of generators of the group S , R
the ﬁnite set of relators that is equivalence relations among elements of S and the presentation
of a group G, S |R , it is the free group S subject to the set of relations R.
Moreover recall that, if Σ is an alphabet, i.e., a ﬁnite non-empty set of symbols, a string over Σ
is a ﬁnite sequence of symbols obtained by juxtaposition, the length of a string is the number

97

98

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

of its symbols, the concatenation of two strings is the juxtaposition of the two strings, Σ∗ is the
set of all possible strings obtained over Σ and L ⊆ Σ∗ , then L is a language. Σ∗ can be deﬁned
by Σ∗ = Σ0 Σ1 Σ2 ... where Σi is the set of all strings whose length is i and Σ0 = { }, the
language containing only the empty word (or string) . Given an alphabet Σ = {a, b, c . . .} ∪ { }
the set of regular expressions is deﬁned by E ::= a | E + E | E • E | E ∗ |(E) with a ∈ Σ, the
set of regular languages are deﬁned by L[ ] = { }; L[a] = {a}; L[E + F] = L[E] ∪ L[F];
L[E • F] = L[E] • L[F]; L[E ∗ ] = (L[E])∗ . As an example, given an alphabet Σ = {a, b} ∪ { }
and a regular expression E = ab∗ the language L[E] = L[a] • L[b∗ ] = {a} • {b}∗ = {a}({ } ∪ {b} ∪
{bb} ∪ ...) = {a, ab, abb, abbb, ...} is the regular language that describes all the strings that start
with ‘a’ and end with a certain number of ‘b’, possibly zero.
Thus, if we consider S be equivalent to Σ∗ , R ⊆ Σ∗ is equivalent to a language L over Σ.
Furthermore, if the quotient group S |R is obtained grouping similar elements by equivalence
relations. Each generator belonging to the set R, gives rise to a class of equivalence whose
elements satisfy an equality relation. Since the number of relations is ﬁnite, the corresponding
classes of equivalence are also ﬁnite, then we can apply the two following well-known theorems
that ensure the existence of the automaton accepting the language L and guarantee that is the
smallest monoid that recognizes the language L.
Lemma 1. Let S be a nonempty set and let ∼ be an equivalence relation on S . Then, ∼, yields
a natural partition of S , where a¯ = {x ∈ S | x ∼ a}. a¯ represents the subset to which a belongs
to. Each cell a¯ is an equivalence class.
Theorem 1 (Myhill-Nerode). If L is any subset of Σ∗ , one deﬁnes an equivalence relation ∼
(called the syntactic relation) on Σ∗ as follows: u ∼ v is deﬁned to mean uw ∈ L if and only
if vw ∈ L for all w ∈ Σ∗ . The language L is regular if and only if the number of equivalence
classes of ∼ is ﬁnite. If a language is regular, then the number of equivalence classes is equal
to the number of states of the minimal deterministic ﬁnite automaton A accepting L.
Given the ﬁnite presentation of the group G ∼ S |R , with S = s1 ...sm and R = {r1 , r2 ...rn } we
can associate to each relation ri ∈ R, for i = 1...n, a language Lri that recognizes all the elements
subject to ri . The language L associated to the presentation G is the union of all languages that
recognize all the relations in R whose symbols are in Σ = S . L = ri , ri ∈R Lri
Finally, we recall that the expressive power of all the following formalisms is equal:
regular grammars (RG) → regular expressions (RE) → non deterministic ﬁnite state automata
(NFA) → deterministic ﬁnite state automata (DFA). This property allow us to deﬁne a NFA and
assert the existence of a FSA equivalent.
Following the example of G168 and its presentation G168 ∼ U, V | V 2 , (UV)3 , U 7 , (VU 4 )4 , the
non deterministic ﬁnite state automaton shown in Fig 3 recognizes the language L of all the
strings generated by the generators of group G168 . For the sake of readability, we label an edge
of an automaton with a word as a shorthand for a sequence of states and transitions such that
the concatenation of the labels on the transitions equals the word.
The language L168 deﬁned over the alphabet Σ = {T, V} for the presentation of the group
G168 = U, V | V 2 , (UV)3 , U 7 , (VU 4 )4 is L168 = LV 2 L(UV)3 LU 7 L(VU 4 )4 .

Emanuela Merelli and Mario Rasetti / Procedia Computer Science 18 (2013) 90 – 99

Fig. 3. NFA, shortened representation and equivalent DFA accepting L ∼ G168 = U, V|V 2 , (UV)3 , U 7 , (VU 4 )4 .

The language L168 allows to describe the global relations underlying the space of data whose
surface is of genus g=3. Any point of the space is equivalent to a path, to a word of the language
whose class of equivalence is an emergent pattern.
5. Conclusions
In this notes, we have introduced a new approach for analyzing a space of data that leads to
the deﬁnition of a formal language supporting the interpretation of the space of data. The
approach, topology-based, is able to process the data in a uniform way - through the ﬁltration
by persistent homology - but also characterize the space of data by diﬀerent invariants so to
emphasize diﬀerent features (e.g., scales). We recall that topology has been widely use for
multiscale analysis in the context of quantum gravity and theory of turbulence. Moreover, the
use of topology for modeling multilevel complex systems is still a challenge that a specialized
community of researchers is tacking with diﬀerent approaches, among which those proposed
in TOPDRIM project (www.topdrim.eu) [7].
Acknowledgements
We acknowledge the ﬁnancial support of the Future and Emerging Technologies (FET) programme within the Seventh Framework Programme (FP7) for Research of the European Commission, under the FP7 FET-Proactive Call 8 - DyMCS, Grant Agreement TOPDRIM, number
FP7-ICT-318121.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]

G. Carlsson, Topology and data, Bulletin of the American Mathematical Society 46 (2) (2009) 255–308.
H. Edelsbrunner, J.L. Harer, Computational Topology, AMS, 2009
B. Farb, D. Margalit A primer on Mapping Class Group, Princeton University Press, 2011
A., Hatcher, W., Thurston, Topology,19(221) 1980
P. Lum, et al. Extracting insights from the shape of complex data using topology, Nature 3(1236), 2013
J.E. Hopcroft, J. Ullman Introduction to Automata Theory, Languages, and Computation, Pearson Edu, 2000
E. Merelli, M. Rasetti. The Immune System as a metaphor for topology driven patterns formation in complex
systems In Proc. of 11th Int. Conf. ICARIS 2012. Springer LNCS 7597.
[8] V. Pascucci, K. Cole-McLaughlin Eﬃcient Computation of the Topology of Level Sets. IEEE Visual. 2002.

99

