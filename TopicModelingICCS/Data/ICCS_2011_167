Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1771–1781

On the adaptive solution of space–time inverse problems
with the adjoint method
Mihai Alexe1 , Adrian Sandu1
Computational Science Laboratory,
Virginia Polytechnic and State University,
Blacksburg, VA, 24060, USA

Abstract
Adaptivity in space and time is ubiquitous in modern numerical simulations. The large number of unknowns associated with today’s typical inverse problem may run in the millions, or
more. To capture small scale phenomena in regions of interest, adaptive mesh and temporal step
reﬁnements are required, since uniform reﬁnements quickly make the problem computationally
intractable. To date, there is still a considerable gap between the state–of–the–art techniques used
in direct (forward) simulations, and those employed in the solution of inverse problems, which
have traditionally relied on ﬁxed meshes and time steps. This paper describes a framework for
building a space-time consistent adjoint discretization for a general discrete forward problem, in
the context of adaptive mesh, adaptive time step models. The discretize–then–diﬀerentiate approach to optimization is a very attractive approach in practice, because the adjoint model code
may be generated using automatic diﬀerentiation (AD). However, several challenges are introduced when using an adaptive forward solver. First, one may have consistency problems with
the adjoint of the forward numerical scheme. Similarly, intergrid transfer operators may reduce
the accuracy of the discrete adjoint sensitivities. The optimization algorithm may need to be
speciﬁcally tailored to handle variations in the state and gradient vector sizes. This work shows
that several of these potential issues can be avoided when using the Runge–Kutta discontinuous
Galerkin (DG) method, an excellent candidate method for h/p-adaptive parallel simulations. Selective application of automatic diﬀerentiation on individual numerical algorithms may simplify
considerably the adjoint code development. A numerical data assimilation example illustrates
the eﬀectiveness of the primal/dual RK–DG methods when used in inverse simulations.
Keywords: Inverse problems, discrete adjoint method, adaptive mesh reﬁnement, automatic
diﬀerentiation, discontinuous Galerkin method.
Email addresses: malexe@cs.vt.edu (Mihai Alexe), sandu@cs.vt.edu (Adrian Sandu)
work was supported in part by the US National Science Foundation, through the following awards: NSF-CCF0635194, NSF OCI-0904397, NSF CCF-0916493, and NSF DMS-0915047.
1 This

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.192

1772

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

1. Introduction and background
1.1. Background and objectives
Inverse problems (IPs) [1] are deﬁned as estimation problems for unknown parameters that
appear in models of various engineering or physical processes. One infers the best values for
the unknown parameters (where optimality is deﬁned in problem-dependent statistical terms),
based on known a priori observations available, e.g., from direct measurements, or indirectly
through forward simulation results. The mathematical formulation of IPs reduces to a PDE- or
ODE-constrained numerical optimization problem. We focus on the discretize–then–optimize
approach, which calculates the optimal values of the model parameters starting from the discretization of the primal set of equations, i.e., optimality of the solution holds over our choice
of discrete spaces. One major advantage of this approach is that the numerical gradients needed
in the optimization process can be calculated eﬃciently using the adjoint method, and automatic
diﬀerentiation. Moreover, we consider adjoints of models that have been discretized on adaptive
meshes and with adaptive time steps. Space-time adaptivity introduces several challenges in the
inversion process, which have delayed the adoption of state-of-the-art techniques used in forward
numerical simulations. Reviews on recent literature show a growing trend of research into the
use of adaptive inverse problem solvers (see, e.g., [2, 3, 4, 5, 6], and references therein).
This paper discusses a framework for the derivation of adjoint models in both function spaces
(the continuous setting), as well as for discrete models (that may be implemented using AD). To
obtain a consistent adjoint model, the cost functional, as well as the diﬀerential volume and
boundary operators in the forward model, need to satisfy a set of compatibility conditions. Extending previous work by Giles [7], we derive more general compatibility conditions applicable for target functionals that contain both volume and boundary terms. Hartmann [8] gives a
framework for the derivation of dual consistent discontinuous Galerkin discretizations for elliptic problems; see also the earlier work of Lu [9]. The addition of the time dimension precludes
a simple extension of Hartmann’s dual consistency theory to time dependent problems, unless
the time dimension is also discretized with DG. Leveraging the results in [8, 10], we show that
Runge–Kutta DG discretizations that are dual consistent in space, are also adjoint consistent in
time. Moreover, their adjoints retain the temporal accuracy of the forward Runge-Kutta methods.
The adjoints of intergrid operators are also important components in the inversion process.
Inconsistent solution transfer operators may lead to a loss of accuracy in the discrete adjoint
solution. For discontinuous Galerkin and other types of methods that use truncated polynomial
expansions to approximate the exact solution, we show that the by transposing the mesh transfer
operators used in the forward simulation, we retrieve exactly the intergrid operators that would
be used in a discretization of the continuous adjoint equations. This result (see [11] for general
proofs), derived from the L2 -orthogonality of element-wise h/p-mesh operators, allows AD to
be used transparently for the generation of all mesh transfers in the adjoint simulation. This
reduces the possibility of errors, and shortens the development eﬀort required to build the adjoint
framework.
1.2. Organization
This paper is organized as follows. Section 2 outlines the adjoint framework for space-time
PDE problems. We discuss both the function space formulation, as well as the discrete setting,
and highlight the requirements for consistence in both optimize–then–discretize, and discretize–
then–optimize approaches. Section 3 considers the consistency and accuracy discrete adjoints
of intergrid transfer operators for discontinuous Galerkin methods. Numerical experiments that

1773

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

make use of the theoretical framework are presented in section 4. Finally, section 5 summarizes
the conclusions, and discusses extensions that are the subject of current research.
2. The adaptive inverse problem framework
Consider a dynamical system whose space and time evolution is described by the following
partial diﬀerential equation:
ut = N (u) + f , x ∈ Ω , t ∈ [0, T ]
B (u) = g , x ∈ Γ , t ∈ [0, T ]
u(t = 0, x) = u0 (x) , x ∈ Ω .

(1)

The PDE system (2) admits solutions u : [0, T ] → U, such that u ∈ L2 ([0, T ]; U), and
ut ∈ L2 ([0, T ]; U), where U is a space of suﬃciently smooth functions. Here N and B are continuously Frech´et diﬀerentiable, nonlinear diﬀerential operators, containing spatial and boundary
derivative terms. In the following we consider the initial condition u0 as the inversion variable.
Let the Fr`echet derivatives of N and B in the direction w ∈ U, be denoted by L w = N [u] w, and
B w = B [u] w, respectively. Here the brackets denote the state about which the linearization
is performed, while the prime notation indicates a Fr´echet derivative. Consider a nonlinear cost
functional of the form
T

J(u) =

Ω

0

JΩ CΩ u dx dt +

T
Γ

0

JΓ CΓ u ds dt +

Ω

KΩ EΩ u

t=T

dx .

(2)

The diﬀerential operators CΩ and EΩ act on the domain Ω, while CΓ is a boundary operator (all
are assumed to be Frech´et diﬀerentiable). Their Fr`echet derivatives are denoted by CΩ , EΩ , and
T

T

T

CΓ , respectively. Also, let jΩ := JΩ CΩ u , jΓ := JΓ CΓ u , and kΩ := KΩ EΩ u . To
ﬁx notation, we deﬁne the following inner products on the space-time domains [0, T ] × Ω and
[0, T ] × Γ:
T

u, v

[0, T ]×Ω

:=
0

Ω

u v dx , u, v

T
[0, T ]×Γ

:=
0

Γ

u v ds , ∀ u, v ∈ U .

Similar inner products are deﬁned for the discrete variables.
An inverse problem is typically formulated as a constrained minimization problem for (2). In
the continuous approach, also called diﬀerentiate-then-discretize, one deﬁnes the minimization
problem in terms of the analytical model formulation:
Find u0∗ = arg min J(u) , subject to (2) .
u0 ∈U

(3)

We instead focus on the discrete approach, also called discretize-then-optimize. The optimization problem is formulated in terms of the Runge-Kutta discontinuous Galerkin (RK–DG)
space-time discretization of the continuous equations (2). For simplicity, we assume that the
discrete domain Ωh , and its boundary Γh cover exactly the analytical domains Ω and Γ. A discretization in space of the continuous primal problem (1) leads to the semi-discrete model:
Find uh ∈ L2 ([0, T ] ; Uh ) such that (uh )t ∈ L2 ([0, T ] ; Uh ) and
∂uh h
, v (t)
∂t

Ω

= N t; uh , vh + f h , vh

Ω

+ B gh , vh ,

∀ vh ∈ L2 ([0, T ]; Uh ) , a.a. t ∈ [0, T ] .

(4)

1774

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

Here the semi-linear form N is nonlinear in uh , and linear in the test functions vh . B (·, ·) is
a bilinear form deﬁned on the boundary Γ, which depends on the prescribed boundary data gh .
The semi-discrete cost functional
T

Jh (uh ) =
0

Ω

JΩ CΩ uh dx dt +

T
Γ

0

JΓ CΓ uh ds dt +

Ω

KΩ EΩ uh

t=T

dx ,

(5)

is a discretization in space of the continuous functional (2). The time integrals in (5) will be
evaluated using Runge–Kutta quadratures of order p.
A full discretization of the PDE is obtained by discretizing the time derivative in (4) using
an s-stage, pth order Runge–Kutta method [12]. Let Uh be a Sobolev space of broken piecewise
polynomial functions. In the following, un ∈ Uh ⊂ U is the fully discrete solution at tn , Uni ∈ Uh
is the i-th stage vector at time step n, and T in = tn +ci hn+1 is the stage time moment. The time grid
has N + 1 points: from t0 = 0, up to t N = T , and tn+1 = tn + τn+1 . For simplicity of notation, we
omit the discrete space superscripts in the following discussion. The Runge–Kutta discretization
of (4) reads:
s

Uni , v

Ω

=

un , v

n+1
Ω+τ

ai, j N T nj ; Unj , v + f nj , v + B gnj , v

, ∀ v ∈ Uh

(6)

j=1
s

un+1 , v

Ω

=

un , v

Ω

+ τn+1

bi N T in ; Uni , v + fin , v + B gni , v

, n = 0...N − 1 .

i=1

Thus, the discrete inverse problem formulation reads:
h,0:N
Find uh,0
) , subject to (6) .
∗ = arg min Jh (u

(7)

uh ∈Uh

We now brieﬂy present the adjoint framework for both continuous and discrete problems.
For the full details of the derivations, the reader can refer to [11].
2.1. The adjoint framework in function spaces
The concept of adjoint consistency, together with its implications in optimization, have been
investigated for steady-state problems by Lu [9], Harriman, Gavaghan and S¨uli [13], Hartmann
and Houston [14, 15], and Oliver and Darmofal [16]. We leverage previous results on dual
consistency for temporal [17], and spatial discretizations [14], to give a uniﬁed framework for
the analysis of adjoint consistency of space-time DG discretizations. This section discusses
space-time duality relations for continuous model formulations. We outline a general strategy
for the derivation of the adjoint problem. This is applicable whenever the cost functional, and the
associated model diﬀerential operators, satisfy a set of compatibility conditions [11]. The next
section will discuss dual consistency of the time quadratures for Runge–Kutta DG discretizations
(assumed to be dual consistent in space).
The variation of the cost functional (2) is
δJ = J [u] w := CΩ w , jΩ

[0,T ]×Ω

+ C Γ w , jΓ

[0,T ]×Γ

+ E Ω w , kΩ

Ω t=T

.

(8)

,

(9)

We wish to express the variation (8) as
δJ

=

adj

CΩ λ , δf

adj

[0,T ]×Ω

+ CΓ λ , δg

adj

[0,T ]×Γ

+ EΩ λ|t=0 , δu0

Ω

1775

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

for any perturbations δu0 , δf, and δg. The adjoint variables λ are obtained by solving the dual
problem
= L∗ λ + f adj , x ∈ Ω , t ∈ [0, T ]
Badj λ = gadj , x ∈ Γ , t ∈ [0, T ]
adj
λ(t = T, x) = EΩ kΩ , x ∈ Ω .
−λt

(10)

Here the ∗ superscript denotes an adjoint operator. The diﬀerential operators Badj and CΓ need to
be chosen such that (8) and (9) are equivalent. To determine these adjoint volume and boundary
diﬀerential operators, one needs to impose several compatibility conditions on L, CΩ , and EΩ
[11]. If these conditions are satisﬁed, then we say that the cost functional and the primal PDE
are compatible. For J deﬁned by (2), the adjoint system (10) becomes:
adj

−λt

L∗ λ + CΩ∗ jΩ , x ∈ Ω , t ∈ [0, T ]

=

Badj λ =
λ(t = T, x) =

jΓ , x ∈ Γ , t ∈ [0, T ]
E ∗ kΩ .

(11)

Assume that
L w, v

Ω

= w, L∗ v

Ω

+

FiL w, GiL v
i

Γ

, ∀ w, v ∈ U ,

where the operators FiL , and GiL are determined through integration by parts. If the adjoint
boundary condition is deﬁned by the compatibility condition [11]:
Badj λ , CΓ w

adj

[0,T ]×Γ

= CΓ λ , B w

[0,T ]×Γ

−

FiL w , GiL λ
i

[0,T ]×Γ

,

(12)

then the variation of the cost functional J can be expressed in terms of the dual variables:
J [u] w = δu0 , λ

Ω t=0

+ δf , λ

adj

[0,T ]×Ω

+ CΓ λ , δg

[0,T ]×Γ

.

(13)

Thus the adjoint variable λ can be interpreted as the sensitivities to changes in the initial condition
u0 , right-hand side f, or boundary forcing g, depending on the particular choice of direction of
diﬀerentiation w.
2.2. Duality relations for space-time discretizations
Due to the linearity of the Runge–Kutta procedure, the tangent linear model (TLM) of the
fully discrete system (6) reads:
s

Wni , v

Ω

= (wn , v

Ω

ai, j N [Unj ] T nj ; Wnj , v + δf nj , v + B δgnj , v

+ τn+1
j=1
s

wn+1 , v

Ω

=

wn , v

bi N [Uni ] T in ; Wni , v + δfin , v + B δgni , v

n+1
Ω+τ

, ∀ v ∈ Uh .

i=1

Rewriting the tangent linear model of the fully discrete system to use diﬀerent test functions
λn ∈ Uh (later recast as the adjoint variables), summing up over all time steps n = 0 . . . N −1, and

1776

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

ﬁnally identifying the terms involving the same test functions on the left and right hand sides, we
can deﬁne the fully discrete adjoint system as:
⎛
⎞
s
s
⎜⎜ n
⎟
n
n+1
n ⎜
n+1
n⎟
⎜
= τ N [Ui ] ⎜⎝T i ; w , bi λ +
a ,i θ ⎟⎟⎟⎠ − τn+1
bi jΩ CΩ Uni , CΩ w
w, θi
Ω

=1

Ω

i=1

s

− τn+1

bi jΓ CΓ Uni , CΓ w

Γ

, ∀ w ∈ Uh

i=1
s

w, λn

Ω

=

w, λn+1

Ω

+

w, θin

Ω

, ∀ w ∈ Uh .

(14)

i=1

Sum up the TLM relations for n = 0, . . . , N − 1, to get:
wN , λN

Ω

with

= δu0 , λ0
N−1

Sf =

ai, j δf nj , θin
i, j=1

N−1

Sg =

kΩ E Ω u N

T

N−1

s

Ω

+

Ω

+ Sf + Sg .

bi δfin , λn+1

N−1

(15)

,

(16)

bi B δgni , λn+1 .

(17)

i=1

ai, j B δgn, j , θin +
i, j=1

, E Ω wN

τn+1
n=0

s

τn+1
n=0

− J h w0 +

s

τn+1
n=0

and

Ω

Ω

s

τn+1
n=0

i=1

Using the theory of formal Runge–Kutta adjoints in optimal control [18, 19], it can be shown
[11] that, as τ := maxn τn → 0, and h is kept constant,
Sf

=

Sg

=

λ, δf
T

[0, T ]×Ω

+ O(τ p )

B(δg, λ) dt + O(τ p ) .

0

where p is the temporal order of accuracy of the primal Runge-Kutta method (6).
We deﬁne the ﬁnal adjoint condition by
λN , w

Ω

= kΩ E Ω u N , E Ω w

Ω

, ∀ w ∈ Uh .

(18)

Then, (15) becomes:
Jh w ≈ δu0 , λ0

[0, T ]×Ω

+ δf, λ

[0, T ]×Ω

T

+

B (δg, λ) dt .

0

The discrete adjoint variables λh,n can yield diﬀerent sensitivities, depending on the direction in which the Fr´echet derivative of Jh is computed. The gradients of Jh with respect to the
initial state u0 , and volume forcing f, can be computed by diﬀerentiation along (δu0 , 0, 0), and
(0, δf, 0), respectively. However, consistency of the boundary sensitivities, obtained by diﬀerentiation along (0, 0, δg), is not guaranteed unless the boundary discretization B is dual consistent
[11].
The discrete adjoint model (14)–(18) is obtained by applying the discrete Runge–Kutta adjoint numerical method to the semi-discrete adjoint system [11]. According to [17] the discrete
adjoint Runge Kutta method has the same order of accuracy as the forward Runge Kutta method.

1777

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

3. Discrete adjoints of intergrid transfer operators
The primal-dual solution procedure for (6)–(14) can be written as follows:
uh,0
uh,n+1
λh,N
λh,n

= uh,0 (xh )
= In→n+1 Sn→n+1 uh,n

, 0≤n≤ N−1

= λh,N (xh )
∗
ITn→n+1 λh,n+1
= Sn+1→n

, N−1≥n≥0.

(19)

Here Sn→n+1 is the discrete solution operator that advances the discrete solution from tn to tn+1 .
∗
is the discrete dual (transpose) of the linearization of S, and is used in the backward time
Sn+1→n
evolution of the discrete adjoint solution λh,n . The ﬁnal values of the adjoint variables depend on
the speciﬁc form of the cost functional Jh under consideration. The derivation and consistency
properties of S∗ have been discussed in the previous section; we are now concerned with the dual
consistency of the intergrid transfer operators In→n+1 . More precisely, due to the orthogonality
property of L2 -interpolation and restriction for polynomial expansion approximations used with
discontinuous Galerkin, we have that
ITn→n+1 = In+1→n .

(20)

This transpose relationship holds for both hierarchical reﬁnement, and on general (unstructured)
grids. See [11] for a proof of each case. Equation (20) implies that the discrete adjoints of grid
interpolation and restriction operations are identical to the coarsening and interpolation operators
used in the discretization of the continuous adjoint problem. This is important in practice, since
ITn→n+1 can be easily generated from In→n+1 using automatic diﬀerentiation. Automatic code
generation makes coding less error-prone (as opposed to hand-coded derivatives and adjoints),
and reduces the total development eﬀort.
We note that (20) does not hold for ﬁnite volume discretizations [11]. For this particular
type of discretization method [20], quadratic (or higher order) interpolation operators, reduce to
ﬁrst order averaging when transposed in the discrete adjoint model. Moreover, due to the stencil
structure of the interpolants, ﬁrst-order perturbations are added to the solution averages of neighboring cells. Post-processing is required to cancel the eﬀect of these undesired perturbations (see
[11] for more details).
4. A one-dimensional test problem
The one-dimensional data assimilation problem is formulated as:
min J h u0 ,

(21)

ut + 2 u x = f (x) , x ∈ Ω = [−3π, 3π] , t ∈ [0, T ] ,

(22)

u0

subject to
with u (x) = exp(−|x|) sin(x) cos(x), periodic boundary conditions, and T = 0.5. Equation (22)
is discretized with a upwind discontinuous Galerkin method, coupled with a fourth order TVD
Runge-Kutta scheme for time marching [21]. The space-time dual consistency for this discretization can be easily proven (see, e.g., [8] for the spatial discretization).
0

1778

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

0.3

0.3

Exact solution
Observations

0.2
0.1

0.1

0

0

−0.1

−0.1

−0.2

−0.2

−0.3

−9

−6

−3

Exact solution
Observations

0.2

0
x

3

6

9

−0.3

−9

−6

−3

0
x

3

6

9

Figure 1: Reference observations (circles), and the exact solution (continuous line) of (22) at t1 = 0.25 (left) and t2 = 0.5
(right). The adaptive spatial mesh is marked on the x-axis. It is locally reﬁned in areas of high variations in the primal
solution uh,n . The reﬁnement is done using an element-wise error estimator based on a ﬁnite-diﬀerence approximation
to the solution gradient u x .

The discrete cost functional reads:
Jh = JBh + JOh =

1 0
u − uB
2

T

B−1 u0 − uB +

1
2

K

Hk uk − yk

T

R−1
Hk uk − yk .
k

(23)

k=1

The background term JhB quantiﬁes the departure of the inverse solution from a background state
O
uh,0
B . It also acts as a regularization term that makes the inverse problem well-posed. Jh quantiﬁes the mismatch between the model predictions and a set of a priori available observations yk at
selected grid locations and time points (see Figure 1). B and Rk are the error covariance matrices
for the background state uh,0
B , and the observation values at tk , respectively. Finally, Hk is a linear
observation operator that maps the discrete model state to the observation space.
The setup is that of a classical twin experiment: the observations are recorded during a
reference run of the model, starting from the reference solution uh,0
ref . The background state
h,0
h,0
uB = 1.4 uref is the initial guess for the optimization routine. We use a 5th order discontinuous
basis for the reference run, whereas the inversion is done using only cubic approximations, to
avoid the “inverse crime” [22]. The goal of the inversion process is to retrieve a good approxih,0
mation to the reference initial condition as the a posteriori analysis state: uh,0
A ≈ uref .
4.1. Numerical results
The data assimilation procedure follows the description in [10]. The observation times are
t1 = 0.25, and t2 = 0.5 (ﬁgure 1). Our tests were run with a C++ implementation [23] of the
limited memory BFGS method by Nocedal et al. [24, 25]. Figure 2 shows the results of the
assimilation experiment. It can be seen that the discrete adjoint gradient leads to a considerable
decrease in the cost function value, as well as in the RMS error of the computed a posteriori
analysis uh,0
A . We computed the analysis root-mean square error (RMSE) using the formula:
:=

h,0
uh,0
A − uref

L2 (Ω)
h,0
uref L2 (Ω)

.

(24)

Figure 3 shows that the quality of the analysis obtained through the 4D-Var process is much
better than that of the initial guess (the background uh,0
B ).

1779

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

1

0

10

0.8
RMS error

Cost function

−1

10

−2

0.6

10

−3

10

1

2

3

4

5
6
Iteration

7

8

9

0.4

10

1

2

3

4

5
6
Iteration

7

8

9

10

Figure 2: Relative decrease (i.e. ratio to the background values) of the cost function Jh (a), and of the RMSE (b).

0.5

0.5

Background

0.5

Reference

0.25

0.25

0.25

0

0

0

−0.25

−0.25

−0.25

−0.5

−0.5
−9

−6

−3

0
x

3

6

9

Analysis

−0.5
−9

−6

−3

0
x

3

6

9

−9

−6

−3

0
x

3

6

9

Figure 3: Background, reference, and analysis states at t = 0 for the problem (21)–(22).

5. Conclusions and future research directions
Time step and space mesh adaptivity have become necessary features in the solution of large
scale inverse problems. This paper develops a framework for the construction of discrete adjoints of discontinuous Galerkin discretizations for time-dependent problems. We discuss dual
consistency for space-time problems, a concept that has, to the authors’ best knowledge, not
been considered before in the literature. A straightforward extension of existing frameworks
[9, 8] to include the time dimension, is possible only if the time integrals are discretized using a
DG quadrature. If the more common Runge–Kutta methods are used for time discretization, we
show that dual consistency is preserved. Moreover, the order of accuracy of the discrete adjoint
time discretization is identical to the one of the primal method. This is a very useful property in
practice, since discrete adjoints of RK-DG discretizations can be generated with low eﬀort using
AD.
Solution intergrid transfer operators (interpolation and restriction) play an important role in
the inversion process. Equation (20) implies that the adjoints of the primal interpolation and
restriction operators are valid intergrid operators in the discrete adjoint solution process. As
noted before, the use of AD will reduce the complexity of adjoint code generation for mesh
transfer operators.
We demonstrate the discrete-adjoint based inversion technique for a space-time adaptive,
dual consistent DG discretization of the advection equation. The gradient-based optimization
procedure yields a good quality analysis.

1780

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

Error-driven adaptation of the optimal solution mesh, guided by primal/dual a posteriori
error estimates, is the subject of on-going research. A forthcoming paper will analyze in detail
the space-time optimality system for the discrete problem (6)–(7), and its relationship with the
continuous optimality equations. The aim is to obtain general error estimates for the discrete
primal and dual solutions that will guarantee convergence of the inverse problem solution.
References
[1] A. Tarantola, Inverse Problem Theory and Methods for Model Parameter Estimation, 2nd Edition, SIAM, Philadelphia, PA, USA, 2005.
[2] W. Bangerth, A framework for the adaptive ﬁnite element solution of large-scale inverse problems, SIAM J. Sci.
Comput. 30 (6) (2008) 2965–2989.
[3] S. Li, L. Petzold, Adjoint sensitivity analysis for time-dependent partial diﬀerential equations with adaptive mesh
reﬁnement, J. Comput. Phys. 198 (1) (2004) 310–325.
[4] F. Fang, C. Pain, M. Piggott, G. Gorman, A. Goddard, An adaptive mesh adjoint data assimilation method applied
to free surface ﬂows, International Journal for Numerical Methods in Fluids 47 (8-9) (2005) 995–1001.
[5] F. Fang, M. Piggott, C. Pain, G. Gorman, A. Goddard, An adaptive mesh adjoint data assimilation method, Ocean
Modelling 15 (1-2) (2006) 39–55, the Third International Workshop on Unstructured Mesh Numerical Modelling
of Coastal, Shelf and Ocean Flows.
[6] F. Fang, C. C. Pain, M. D. Piggott, G. J. Gorman, A. J. H. Goddard, Data assimilation of three-dimensional free
surface ﬂow using an adaptive adjoint method. part 1: Adjoint model formulation, Tech. rep., Imperial College
London, London, UK (2007).
[7] M. B. Giles, N. Pierce, Adjoint equations in CFD: duality, boundary conditions and solution behavior, in: Proceedings of the 13th Computational Fluid Dynamics Conference, no. AIAA Paper 97-1850, 1997.
[8] R. Hartmann, Adjoint consistency analysis of discontinuous Galerkin discretizations, SIAM J. Numer. Anal. 45 (6)
(2007) 2671–2696.
[9] J. Lu, An a posteriori error control framework for adaptive precision optimization using the discontinuous Galerkin
ﬁnite element method, Ph.D. thesis, Massachusetts Institute of Technology, Department of Aeronautics and Astronautics, Cambridge, MA (2005).
[10] A. Sandu, L. Zhang, Discrete second order adjoints in atmospheric chemical transport modeling, J. Comput. Phys.
227 (12) (2008) 5949–5983. doi:http://dx.doi.org/10.1016/j.jcp.2008.02.011.
[11] M. Alexe, A. Sandu, Space-time adaptive solution of inverse problems with the discrete adjoint method, Tech. Rep.
TR-10-14, Blacksburg, VA, USA (2010).
[12] E. Hairer, G. Wanner, Solving Ordinary Diﬀerential Equations: Stiﬀ and Diﬀerential-Algebraic Problems, Vol. II
of Computational Mathematics, Springer-Verlag, 1994.
[13] K. Harriman, D. Gavaghan, E. S¨uli, The importance of adjoint consistency in the approximation of linear functionals using the discontinuous Galerkin ﬁnite element method, Tech. Rep. 04/18, Oxford University Computing Lab,
Numerical Analysis Group, Oxford, UK (2004).
[14] R. Hartmann, Error estimation and adjoint based reﬁnement for an adjoint consistent dg discretisation of the compressible euler equations, Int. J. Comput. Sci. Math. 1 (2-4) (2007) 207–220.
[15] R. Hartmann, P. Houston, An optimal order interior penalty discontinuous Galerkin discretization of the compressible Navier-Stokes equations, Journal of Computational Physics 227 (22) (2008) 9670–9685.
[16] T. Oliver, D. L. Darmofal, Analysis of dual consistency for discontinuous Galerkin discretizations of source terms,
SIAM Journal on Numerical Analysis 47 (5) (2009) 3507–3525. doi:10.1137/080721467.
[17] A. Sandu, On the properties of Runge - Kutta discrete adjoints, in: International Conference on Computational
Science (4), 2006, pp. 550–557.
[18] W. W. Hager, Runge-Kutta methods in optimal control and the transformed adjoint system, Numerische Mathematik 87 (2) (2000) 247–282.
[19] A. Sandu, P. Miehe, Forward, tangent linear, and adjoint Runge-Kutta methods in KPP–2.2 for eﬃcient chemical
kinetic simulations, Tech. Rep. TR-06-17, Virginia Polytechnic Institute and State University, Blacksburg, VA,
USA (2006).
[20] R. J. Leveque, Finite volume methods for hyperbolic methods, Vol. 21 of Cambridge Monographs on Applied and
Computational Mathematics, Cambridge University Press, Cambridge, UK, 2002.
[21] S. Gottlieb, L.-A. J. Gottlieb, Strong stability preserving properties of Runge–Kutta time discretization methods
for linear constant coeﬃcient operators, J. Sci. Comput. 18 (1) (2003) 83–109.
[22] J. Kaipio, E. Somersalo, Statistical inverse problems: Discretization, model reduction and inverse crimes, Journal
of Computational and Applied Mathematics 198 (2) (2007) 493–504, applied Computational Inverse Problems.

Mihai Alexe and Adrian Sandu / Procedia Computer Science 4 (2011) 1771–1781

[23] libLBFGS: a library of limited-memory Broyden-Fletcher-Goldfarb-Shanno (L-BFGS) (2009).
URL http://www.chokkan.org/software/liblbfgs/
[24] R. H. Byrd, P. Lu, J. Nocedal, C. Zhu, A limited memory algorithm for bound constrained optimization, SIAM
Journal on Scientiﬁc Computing 16 (5) (1995) 1190–1208.
[25] C. Zhu, R. H. Byrd, P. Lu, J. Nocedal, Algorithm 778: L-BFGS-B: Fortran subroutines for large-scale boundconstrained optimization, ACM Transactions on Mathematical Software 23 (4) (1997) 550–560.

1781

