Lessons Learned from a Structured
Undergraduate Mentorship Program
in Computational Mathematics
at George Mason University
John Wallin1 and Tim Sauer2
1
2

Department of Computational and Data Sciences, College of Science,
George Mason University, Fairfax, VA 22030, USA
Department of Mathematical Sciences, College of Science, George Mason
University, Fairfax, VA 22030, USA

Abstract. We present the results from the first two years of the Undergraduate Research for Computational Mathematics (URCM) program at
George Mason University (Mason). In this program, students work on a
year-long research project in Computational Science while being supervised by a mentor. We describe the structure and goals of this program
along with some observations about the elements that we have found that
have been challenging in its implementation. Finally, we will provide a
summary of the outcomes of the first two years of this project.1

1

Introduction

In the Spring of 2007, the Department of Mathematical Sciences and the Department of Computational and Data Sciences (CDS) at George Mason University
received funding from the National Science Foundation to create an undergraduate mentorship program in computational mathematics. This project was funded
through the Computational Science for Undergraduates in the Mathematical Sciences (CSUMS) program for a ﬁve one-year cohorts. In the spring of 2007, the
project selected the ﬁrst ten students in this year-long program. A second cohort
was selected in the spring of 2008.
NSF originated the CSUMS program for students in the mathematical sciences “to better prepare these students to pursue careers and graduate study
in ﬁelds that require integrated strengths in computation and the mathematical
sciences.”[1] Unlike the NSF funded Research Experiences for Undergraduates
(REU) program where students work on a project over the summer, the CSUMS
program is allows students to work on their own independent research projects
over a full year under the direction of a faculty mentor. For the students in our
1

The development of the GMU Computational and Data Sciences undergraduate
program is sponsored by the NSF CSUMS (Computational Science Training for
Undergraduates in the Mathematical Sciences) program, through award # DMS0639300.

G. Allen et al. (Eds.): ICCS 2009, Part II, LNCS 5545, pp. 103–110, 2009.
c Springer-Verlag Berlin Heidelberg 2009

104

J. Wallin and T. Sauer

program, this was their ﬁrst exposure to working on a long term research project.
As summarized by the National Academy of Sciences, “. . . the one-on-one mentoring that takes place in supervised undergraduate research is one of the best
predictors of students’ professional success.” [2]
The goal of the George Mason University URCM program is to create a oneon-one mentoring program in the computational sciences for undergraduate students in the mathematical sciences. In this program, we hope to enhance the
professional success of our students by placing them in supervised, independent
research projects. This is being done by
– exposing undergraduate students to the applied mathematics, science, and
computer science used in cutting-edge computational science projects through
mentorship, classes, and seminars,
– developing the formal and informal learning environments that allow students
to be successful at developing, completing, and presenting their projects,
– developing a peer learning community by encouraging structured student
interaction through classes, seminars, labs, as well as formal and informal
meetings in their research group,
– creating close ties between student and mentor, where the student can receive
ongoing feedback on the project’s progress as well as constructive feedback on
personal strengths and weaknesses in becoming a professional mathematician
and scientist,
– extending this program beyond the ﬁve-year period that is funded by NSF
by matching undergraduate students to scientists who have existing grants
both on the Mason campus and in the larger community.
The students in the program work in a year-long funded research project under
the direction of a faculty mentor. Because of NSF guidelines, all the students in
the program are required to be mathematics majors. In our program, these students are generally in their junior or senior year. Students apply in March, and a
selection of the students for the yearly cohort is made by the beginning of April.
The students who have participated in this program have worked on a wide
variety of computational science research. Although individual research projects
ranged from chemical phase transitions and material structure to computational
hemodynamics, they all had the common theme of numerical and mathematical
modeling of physical systems. Unlike with individual student research programs,
this common theme provides a unifying element of the program that is used to
create support structures that beneﬁt all the students.
Student participation in the project begins at the beginning of the ﬁrst summer
session in late May. During this summer semester, all the students are required
to take a course in Numerical Partial Diﬀerential Equations (PDE). This class is
designed to ﬁll in the background the students need for their research projects as
well as help build the peer relationships and support structure they will need as
they transition to research. As a prerequisite, we ask the our student complete a
one-semester course in basic numerical methods. In parallel with the numerical
PDE course, the students also participate in a daily lab session where they learn
how to use basic computational tools and programming languages. After the PDE

Lessons Learned from a Structured Undergraduate Mentorship Program

105

class ends in early July, the students continue to attend the lab session twice a
week and start working with their advisors on research projects. Throughout the
summer, these lab sessions are kept very informal and are designed to help ﬁll in
the computational background they need for their research projects.
In both the Fall and Spring semester, students are required to attend a onecredit seminar that meets once a week. In this seminar, students are given information on careers, publications, graduate school, and also required to present
frequent updates on their research. A major focus of the seminar is to let students polish their public speaking and writing skills as they prepare to go to
conferences, create their posters about their work, and write papers. The seminar also provides a regular venue for students to discuss the problems they are
having in their research projects.
In the URCM program at Mason, two students are paired together with one or
more faculty mentors. The students work on diﬀerent aspects of the same project,
so they can have a peer support network outside the classroom. The students
may sign up up to six credits for undergraduate directed reading and research
over their research project so they may receive academic credit for their work.
The students are also given a $10,000 stipend over the year long project, and
loaned a laptop computer so they have a portable platform for their computing
and presentations. Travel to conferences, software costs, and publication charges
are also covered in the grant.

2

Observations

As the Director of the mentorship program, Dr. Wallin worked with all the
students in the summer laboratory and then interacted with them the weekly
seminar that he directed. He also interacted with all the mentors on a weekly
basis. Dr. Sauer was the PI for the grant, and also worked closely with both the
fauclty and the students. In these capacities, we have compiled feedback from
both the students and the mentors. Because only thirteen students have been
in this program so far, the results are anecdotal. We will be using the pronoun
“we” to describe these ﬁndings, since they reﬂect the informal consensus of the
groups involved. We believe that these observations reﬂect some of the underlying
issues that others might encounter in similar undergraduate research programs
in computational science.
First, the success of students seemed to be somewhat correlated on the complexity of the software that they used in their projects. If students developed their
own simple codes, it seemed they remained more engaged and motivated in the
research work. This ﬁnding may be more directly related to the students being
mathematics majors, not computer science or computational science majors.
Before starting work on their projects, our students had not been exposed
to the challenges of working with “black box” programs. We deﬁne the term
“black box” in this context to mean programs too complicated for any one person
(particularly an undergraduate mathematics student) to completely understand.
These types of programs are commonly used in complex calculations across the

106

J. Wallin and T. Sauer

computational sciences to simulate diverse problems such as ﬂuid ﬂow or material
science. Most of the students in our program were interested in approaching
the higher level more theoretical questions rather than doing these production
calculations, even if those calculations were tied to very engaging projects.
One issue with using “black box” in undergraduate research projects might be
the learning curve associated with these complex systems. However, it seemed
like most of the frustration that these students felt was the lack of connection
between their classroom studies and their research work. While computational
science projects tend to focus on projects of very high complexity with diﬃcult
interconnections, this paradigm does not seem to map as well to the typical background of undergraduate mathematics majors we found in our programs. In general, it seemed diﬃcult to move our students beyond the simpler Matlab/Octave
tools toward complex programs and compiled programming languages.
Second, the students in the program often did not engage fully in the research
work until they were forced to present their work in our weekly seminar. At the
beginning of the fall semester, about half of the students had not made signiﬁcant
progress on their research projects during the ﬁrst year of the program. When
they were required to make class presentations and given deadlines in their
schedule, the students systematically started making good progress. The quality
of the presentations, their understanding of the problem’s context, and their
research results all came into focus during the fall semester.
Some of the delay in progress might have been from not understanding the
expectations being set by their advisors. We believe that part of the problem can
be attributed to the diﬃculties in the transition between classroom learning and
research, as well as to procrastination that all of us feel until a deadline is upon
us. Even so, setting and enforcing milestones with deﬁnable metrics in these
research projects seems to be very important in promoting student learning,
particularly in the ﬁrst months of a long-term project. Even though the students
were working on independent projects, they needed regular direction from their
mentors to continue making progress. As students became more vested in the
research work, most began to develop their own project schedules and started
integrating research more into their weekly schedule.
Third, we found that the peer support planned in this project was only partially successful at helping students overcome diﬃculties they encountered in
their research. Often a student would turn to his research partner for help, but
busy schedules and geographic considerations made it diﬃcult to get and give
help. Most of the students in our program and across Mason in general lived oﬀ
campus. The commute times and lack of face to face contact outside the normal
university hours probably worked against this collaboration. The students would
often turn to their research advisor instead of their research peer for help.
In contrast, we did ﬁnd that the students immediately started using text
messaging, Facebook, and video conferencing through their laptops during their
class to talk about homework assignments during the summer PDE class. This
transition took place in days, perhaps even hours, after we gave them all laptops.
When the students were working as a class on the same problems, they tended to

Lessons Learned from a Structured Undergraduate Mentorship Program

107

function together extremely well. This collaboration did not translate as well as
we hoped when they started working on independent projects. Even though two
or three students were assigned to very similar projects with the same advisor,
the diﬀerences between the projects and lack of common focus seemed to be a
barrier for eﬀective peer support. In the second cohort, we worked to instill the
expectations that the students in peer groups should meet on a weekly basis.
This seems to have created a better system of peer support during the second
year of the project.
Fourth, students who signed up for academic credit for their research work
were generally more productive than those who did not sign up for these research credits. Some students who tried to balance a full class load with no time
explicitly budgeted for their research activities. In the most extreme case, some
students tried to sign up for a full course load during summer. When they did
this, their research often was viewed as secondary activity that was pushed aside
when there were no nearby deadlines. When students explicitly budgeted their
time through credit hours, this problem was signiﬁcantly reduced.
Fifth, peer support of mentors is just as important as peer support of students.
Even experienced faculty who had supervised graduate students had some trouble eﬀectively mentoring undergraduate students. Regular, informal meetings
between the mentors seemed to help them see how other students and mentors
were working together. Eventually, this helped make the mentorship experience
more consistent between the students.
In our ﬁrst year, the faculty mentors were split in two diﬀerent buildings. This
inadvertently led to less frequent contact between the faculty, despite eﬀorts to
encourage communications. During the second cohort, all the faculty mentors
had oﬃces close together leading to more regular discussions about their students
and the program. It seems this extra support seemed to help the students in the
program become more successful in their research projects earlier in their yearlong projects.
Finally, we have found that recruiting students into this project was more
diﬃcult than expected. Even with the generous stipend, the laptop, and the
experience that students would gain through the project, many students in the
mathematical sciences were reticent to even apply to the program. When we
asked students who were in the program why other students were not applying,
we found several surprising answers. Some students in our program reported
that their friends did not want to get involved in research, since they had no
plans to go to graduate school. Others students reported that their friends were
not interested in either doing research in or getting a job in applied mathematics
and computing.
It seems that many undergraduate students in the mathematical sciences (and
probably beyond) don’t have a good understanding of the jobs they are likely
to do after they graduate since most studies indicate that the vast majority of
jobs for majors across the sciences and mathematics are IT related. [3].

108

3

J. Wallin and T. Sauer

Program Outcomes

Beyond our observations of the elements that seem to help and hinder our mentorship program, it is important to consider the tangible outcomes of this project.
All but one of the thirteen students have presented both oral and poster papers
for external conferences. Most of the students presented papers at both regional
and national conferences, and one was given an award for his poster at the
San Diego meeting of the American Mathematical Society in 2007. The conﬁdence that the students had in creating and giving presentations along with the
quality of these presentations was dramatically enhanced by the practice in the
seminar class.
The skills that students exhibited with software tools also increased dramatically through the project. Most of our students had no familiarity with Unix
at the start of the project, and were experts by the end of the year. The students’skills at using high level tools like Matlab/Octave also greatly increased
during the program. By the end of the year, all of the students felt comfortable
putting complex PDE system into Matlab or Octave. Many of these students
had done very little programming at the beginning of their research project, but
were very comfortable writing these types of codes by the end of their year.
The quality of the ﬁnal research projects we saw in the program was very
high. Most of the mentors felt that the work being done by their undergraduate
students was at the level of ﬁrst and second year graduate students. The students also noted this when they compared their work to other peer groups at
conferences. In particular, one student reported that he felt his work was “just
average” when he looked at the other posters at a conference. He didn’t realize at
the time that there were only two undergraduate students at this poster session
of about forty graduate students.
One of the least quantiﬁable elements of these projects was the excitement
that our students felt about being able to participate and carry out signiﬁcant,
independent research projects under the direction of a real scientist mentor.
Having the students participate in regional and national conferences also opened
up the world of mathematical and computational research to them, and let them
understand the research process from conception to presentation. Overall, our
students reported very positive feelings about the program, despite some of the
diﬃculties they encountered in their projects.
Of the nine students in the ﬁrst year cohort, all but one have gone on to
take graduate courses after graduation. Six are pursing doctoral degrees, and
two others are working masters degrees. Four of the six students pursuing the
Ph.D. are studying either Computational Science or Applied Mathematics. The
remaining doctoral students are working in operations research or medicine. The
only student not currently enrolled in graduate studies is taking a year oﬀ before
starting medical school. It is important to note that less than half of students
had seriously considered graduate school before they started the project. Based
on the status of the ﬁrst cohort, we strongly feel that this program helped change
the attitudes our students had toward research in Computational Science and
Mathematics.

Lessons Learned from a Structured Undergraduate Mentorship Program

4

109

Summary and Conclusions

We have found a great deal of unexpected challenges in this project, and are
still learning how to improve the experience for our mentors and our students.
Based on our experiences, we make the following recommendations for other
similar programs:
– Pick projects that help the students apply their classroom work directly
to their research projects. Having students switch too quickly into complex
software systems can make it diﬃcult for them to make this connections,
and make it seem like their studies are unrelated to their research work.
– Make sure to create and enforce milestones through out the program. Although this is an independent research project, students learning how to do
research need structure particularly in the ﬁrst few months of the project.
– Set expectations for peer meetings and peer support during the project.
Make sure the students understand that they are expected to work together,
and keep the projects in peer groups similar enough so that they can beneﬁt
from each other’s experience.
– Strongly encourage students sign up for directed reading and research credits
when they are in a mentorship or research program. Students tend to over
schedule themselves if time isn’t put into their academic schedules.
– Build informal activities to provide peer support of the mentors. This type of
support is very useful in normalizing expectations and keeping the mentors
engaged in the student projects.
– Try to minimize geographic barriers to collaboration both between student
and between mentors. Make sure regular meetings occur within and between
the diﬀerent groups.
Despite some of the initial problems, we are very happy with the outcomes of
our students both in terms of their research work and their careers. We feel that
our program contributed to their professional development, and has provided
them with a strong basis for further academic work and for their future jobs.
Now that the new major and minor in the Computational and Data Science
is in place at Mason, we hope to see future double majors in this program
and minors from the department of Mathematics in these programs. We feel
that the minor will be particularly attractive to these students since many of
the requirements are already met by their participation in this program via
the numerical methods and research courses they are already taking in their
mentorship. With these programs in place, we feel our students will students
develop the computational skills they need in their careers or for future graduate
work.
Creating projects that for the students that were independent, exciting, and
cutting-edge yet suited to the technical backgrounds of our undergraduates took
a high level of commitment from our mentors. Despite the challenges, we have all
seen a great return on the time we invested in this project as we as we watched
the ﬁrst cohort progress though the program, present papers, and graduate. As

110

J. Wallin and T. Sauer

the second cohort progresses through their program, it is gratifying to see them
transitioning to research faster and broadening their knowledge of how to solve
cutting edge problems using computational science.

References
1. Computational Science Training for Undergraduates in the Mathematical Sciences
(CSUMS), National Science Foundation Solicitation 06-559 (2008),
http://www.nsf.gov/funding/pgm_summ.jsp?pims_id=13655
2. Fox, M.A., Hackerman, N. (eds.): Evaluating and Improving Undergraduate Teaching in Science, Technology, Engineering and Mathematics. The National Academy
Press, Washington (2003)
3. Testimony before the House Subcommittee on Science, Bruce Mehlman, Technology,
and Standards Subcommittee, June 24(2002),
gop.science.house.gov/hearings/ets02/jun24/mehlman.htm

