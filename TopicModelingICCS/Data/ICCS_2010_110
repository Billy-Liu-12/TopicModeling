Procedia Computer
Science
ProcediaComputer
Computer Science
Procedia
Science001 (2010)
(2012)1–9
1435–1443

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Combination of an Adaptive Multilevel SQP Method and a
Space-Time Adaptive PDAE Solver for Optimal Control Problems
Debora Clever, Jens Lang, Stefan Ulbrich and J. Carsten Ziems
{clever,lang,ulbrich,ziems}@mathematik.tu-darmstadt.de
Technische Universit¨at Darmstadt, Department of Mathematics and DFG Graduate School of Excellence Computational Engineering,
Dolivostr. 15, 64293 Darmstadt

Abstract
We present an adaptive multilevel generalized SQP method to solve PDAE-constrained optimization problems.
It explicitly allows the use of independent integration schemes such that all involved systems can be solved highly
eﬃcient and as accurate as desired. We will couple the optimization with the state-of-the-art PDAE solver KARDOS
and apply the new tool to a radiative heat transfer problem described by space-time dependent non-linear partial
diﬀerential algebraic equations. Results are presented, compared and discussed.

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: optimal control, adaptivity, multilevel, reduced Hessian, radiative heat transfer, glass cooling

1. Introduction
When solving PDAE-constrained optimal control problems using the so called adjoint approach, it might be of
great advantage to derive the adjoint system within an inﬁnite dimensional setting and apply independent discretization schemes to state and adjoint systems. Even though from an optimization point of view it is preferable to consider
the adjoint discretization instead of the discretized adjoint, this is not necessarily the case from a numerical point of
view. Diﬀerentiating a suitable discretization scheme of high order for the state equation can result in an unfavorable
stepping scheme of very low order for the adjoint equations. In general, not even the structure of these integration
schemes coincides. Furthermore, the adjoint discretization may not be consistent with the inﬁnite dimensional adjoint PDAE. If the computations are carried out on adaptive grids the interpolation for the adjoint variables between
diﬀerent grids will therefore introduce large errors [1]. Obviously, it is highly ineﬃcient to stay on ﬁxed grids when
solving realistic space-time dependent PDAEs. In addition, the involved systems are quite often of diﬀerent type. The
independent use of appropriate discretization schemes opens up the possibility to eﬃciently discretize all involved
systems with possibly high order on adaptively reﬁned grids.
In Section 2 we will present an adaptive multilevel generalized SQP method which allows the use of independent integration schemes. As the control iterates converge towards the optimum the grids are automatically reﬁned
with respect to the ratio of global error estimates and reduced gradient norm. By controlling the accuracy of state
and adjoint variables and therefore the consistency between both, we can ensure that the ﬁnite dimensional control
iterates converge towards the inﬁnite dimensional optimal control. In Section 3 we will introduce the fully adaptive
software package KARDOS, which is used to solve the involved systems of time-dependent PDAEs [2]. The package
was extended to optimization needs. For example, solution dependent quantities like reduced gradient or reduced
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.159

1436

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443
D. Clever et al. / Procedia Computer Science 00 (2010) 1–9

2

Hessian can be evaluated directly during the PDAE solve. Next, KARDOS was coupled with several derivative based
optimization techniques like gradient and SQP methods. In this paper we want to focus on the presented adaptive
multilevel generalized SQP method and apply it to a radiative heat transfer optimal control problem described by a
system of nonlinear space-time dependent partial diﬀerential algebraic equations. In Section 4 we will introduce the
considered radiative heat transfer problem which describes the behavior during the cooling of hot glass down to room
temperature. We will deﬁne an appropriate objective functional and derive its gradient and Hessian. In Section 5
we will present optimization results and discuss the performance of our SQP method itself. We will compare it to
methods with a lower order of convergence and to approaches on ﬁxed grids.
2. Adaptive Generalized Multilevel SQP Method
In this section we brieﬂy sketch an adaptive generalized trust-region SQP method which explicitly allows the use
of independent discretization schemes and independent spatial meshes for state and adjoint equations. This opens up
the possibility to solve all involved PDAEs highly eﬃcient and as accurate as desired. In a second step we sketch a
multilevel strategy which tailors the grid reﬁnement in accordance to the optimization progress. For more details on
the algorithm we refer to [3, 4].
In the following we consider PDAE-constrained optimal control problems of the form
min J(y, u) s.t. e(y, u) = 0

(1)

y,u

with state y ∈ Y, control u ∈ U, objective functional J(y, u), and PDAE-constraint e(y, u) = 0. We will assume that
the control space U and the state space Y are Hilbert spaces. Furthermore, J(y, u) and e(y, u) are assumed to be twice
continuously Fr´ech´et diﬀerentiable and that the PDAE admits a unique and Fr´ech´et diﬀerentiable solution operator
y : u ∈ U → y(u) ∈ Y. Then, we can reduce the optimal control problem (1) to the control component u
ˆ := J(y(u), u),
min J(u)
u

where y = y(u) satisﬁes e(y, u) = 0.

(2)

For time-dependent problems it is natural not to linearize the state equation as in standard SQP methods but to use
the nonlinear PDAE solver for the update of the state. Let (yk , uk ) be the current iterate, where yk ≈ y(uk ) is obtained
by the PDAE-solver on the current discretization level. As in a reduced trust region SQP method, we approximate
the optimization problem locally by a quadratic subproblem, reduce it to the control component and introduce a trust
region constraint. We obtain the reduced SQP-subproblem
1
min qˆ k (su ) := J(yk , uk ) + Jˆ (uk ), su +
su , Jˆ (uk )su
su
2

s.t. su ≤ Δk ,

(3)

with reduced gradient Jˆ (uk ), reduced Hessian Jˆ (uk ) and trust region radius Δk . A new control uk+1 := uk + su,k is
accepted, if the actual reduction
aredk = J(yk , uk ) − J(yk+1 , uk+1 )
is at least a fraction of the model based predicted reduction
predk = qˆ k (0) − qˆ k (su,k ).
The ratio of actual and predicted reduction is used in a standard fashion to adjust the trust region radius.
At ﬁrst sight this approach appears similar to applying a trust region method to the reduced problem (2). However,
our multilevel and reﬁnement strategy is based on the optimality system for the constrained problem (1), since our
computation of yk , reduced gradient and reduced Hessian is done with the current discretization and therefore inexact
with respect to the inﬁnite dimensional reduced problem (2).
Allowing for independent discretizations for state and adjoint equations introduces inconsistencies between reduced derivatives and minimization problem itself. To guarantee convergence nevertheless, we have developed a
multilevel strategy which automatically reﬁnes computational grids if the ratio between reduced gradient norm and

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443
D. Clever et al. / Procedia Computer Science 00 (2010) 1–9

1437
3

global error estimates indicates severe inconsistencies of discrete and continuous problem. For a suﬃcient quality of
space and time grids we require
ˆ
yex
k − yk ≤c1 J (uk ) ,
ex
ξk − ξk ≤c2 Jˆ (uk )

(4)
(5)

ex
with adjoint variable ξ. Here, yex
k and ξk are the exact solution of state equation and adjoint equation, respectively.
The errors on the left hand side are estimated by global error estimators.
Choosing appropriate values c1 and c2 we can prevent an oversolving on a certain mesh which would lead to an
improvement on the current discrete level but not within the inﬁnite dimensional setting. Moreover, in connection with
a further criterion we can avoid step rejection caused by inconsistencies between gradient and minimization problem.
More details and the proof of convergence can be found in [4, 3].

3. Coupling with the Software Package KARDOS
For the development of a KARDOS based optimization tool, several extensions of the existing software package
KARDOS were necessary. First, a control module had to be implemented. It carries the main optimization algorithm and communicates with KARDOS to start PDAE solves and to read solutions and other quantities. Especially
for boundary or spatially constant control problems, the control component is of lower dimension than the state.
Therefore, we took care that all computations and evaluations concerning states and adjoints are carried out within
the KARDOS environment itself. The interface between optimization algorithm and PDAE solver is only based on
quantities within the discrete control spaces Uk or on scalar values.
Even though the use of a second order optimization method reduces the number of PDAE solves signiﬁcantly, it is
essential to carry out the involved PDAE solves as eﬃcient as possible while approaching the required accuracy. The
software package KARDOS uses Rothe’s method with variable time step Rosenbrock schemes of higher order for the
time integration and adaptive multilevel ﬁnite elements in space. It allows for a fully adaptive grid control in space
and time based on local error estimates and given tolerances tol x,y , tol x,ξ and tolt . Whereas state and adjoint system
are solved on the same time mesh, but in opposite direction, the spatial grids of the forwards run only serve as initial
grids for the backwards solve and can be reﬁned, if necessary.
3.1. Grid Reﬁnement
Rothe’s method utilizes the discretization sequence ﬁrst in time and than in space. Therefore, the global error
t
ex
ex
x
ex
yex
k − yk can be split into two parts, the temporal error gek = yk − Yk and the spatial error gek = Yk − yk , where
ex
Yk denotes the exact solution of the stationary PDE obtained after applying time integration. As usual, we bound the
t
x
global error by controlling spatial and temporal discretizations separately, which yields yex
k − yk ≤ gek + gek .
Suppose the time integrator has delivered discrete solutions at the time nodes t0 < t1 < . . . < tmk −1 < tmk = te .
ex
Then, deﬁning global errors in time, eti = yex
k (ti ) − Yk (ti ) , with the corresponding spatial norm, we can approximate
t
2
the overall temporal error gek through the L (Uk )-norm of the vector (0, et1 , . . . , etmk ). Note the ﬁrst component is
zero, because exact initial values are used. Since KARDOS uses approximate local time errors to steer the step size
selection with respect to the equidistribution principle, we have to bridge the gap between local and global time errors.
Let Yk (ti ) be the solution after one time step, starting with the exact initial value yex
k (ti−1 ). The local time error is then
deﬁned by leti = yex
(t
)
−
Y
(t
)
.
The
error-per-step
strategy
used
in
KARDOS
ensures
leti ≤ tolt in each time step.
i
k
i
k
t
p/(p+1)
It is a known fact that in this case the global time errors ei are proportional to (tolt )
, where p is the order of the
time integrator. This gives us the opportunity to reduce the global time error through downsizing the local tolerance
tolt .
Using linearly implicit methods of Rosenbrock type, local time errors can eﬀectively be estimated by an embedded
formula of lower order. Based on the local error estimators in time, let = (0, let1 , . . . , letmk ), we compute for the state
variables y the scaled global quantity
1

gety,est = (te − t0 )− 2 let
Observe that having leti ≤ tolt we get gety,est ≈ tolt .

L2 (Uk ) .

(6)

1438

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443
D. Clever et al. / Procedia Computer Science 00 (2010) 1–9

4

To estimate the local spatial errors, eix = Ykex (ti ) − yk (ti ) , we make use of the hierarchical basis concept. As long
as a weighted sum of error estimators of all ﬁnite elements is greater than tol x,y , the spatial grid is reﬁned where local
estimators are too big. If local estimators are unreasonable small, the grid is locally coarsened as well. At the end, the
spatial grid at each discrete time node is adapted in such a way, that eix ≈ leix ≤ tol x,y , where leix denotes the spatial error
estimator computed at t = ti . We mention that the hierarchical spatial error estimator implemented in KARDOS takes
into account interpolation errors of the initial values yk (ti−1 ), resulting from changing grids, and the dynamic behavior
of the new solution yk (ti ). Again, based on the temporary local error estimators in space le x = (0, le1x , . . . , lemx k ), we
compute for the state variables y the scaled global quantity
1

x
gey,est
= (te − t0 )− 2 le x

L2 (Uk ) .

(7)

x
Observe that having leix ≤ tol x,y we get gey,est
≈ tol x,y .
Clearly, the spatial and temporal accuracy of the adjoint variables can be controlled analogously. Let getξ,est and
x
geξ,est
be the corresponding scaled global quantities for the adjoint variables ξ. We then replace (4) and (5) through
the checkable conditions
x
gety,est + gey,est
≤˜c1 Jˆ (uk ) ,
t
x
geξ,est + geξ,est ≤˜c2 Jˆ (uk ) ,

(8)
(9)

with new constants c˜ 1 and c˜ 2 . We emphasize that changing the constants bears no restrictions for the multilevel
optimization since c1 and c2 have to be prescribed by the user anyway. The new constants only take into account the
hidden proportionality between local and global errors. To balance temporal and spatial errors, we require them to be
of nearly equal size, i.e., we bound each of the scaled global quantities by half of the corresponding right-hand side.
Appropriately reducing the local tolerances tol x,y , tol x,ξ and tolt with respect to given constants c˜ 1 and c˜ 2 , we are able
to meet (8)-(9) and eventually (4)-(5) with unknown, but well deﬁned constants c1 and c2 . In general no more than one
grid reﬁnement is necessary to achieve the desired accuracy. For more details about local and global error estimation
and error control we want to refer to [5, 6].
3.2. Control update and inner iteration
To compute the control update su (see (3)) we have to solve the linear system
Jˆ (uk )su = − Jˆ (uk ),

(10)

and to control the curvature of Jˆ (uk ). The reduced gradient is evaluated by
Jˆ (u) = ∂u J(y, u) + ∂u e∗ (y, u)ξ,

(11)

∂y e∗ (y, u)ξ = −∂y J(y, u).

(12)

after solving the adjoint system

The reduced Hessian applied to the direction su is deﬁned as
Jˆ (u)su = ∂uu J(y, u)su + ∂uu e∗ (y, u)ξsu − ∂u e∗ (y, u)w,

(13)

with second adjoint state w. It can be evaluated by solving two additional systems, the linearized state system
∂y e(y, u)sy = −∂u e(y, u)su ,

(14)

∂y e∗ (y, u)w = ∂yy J(y, u)sy + ∂yy e∗ (y, u)ξsy .

(15)

and the second adjoint system

To solve (10) we apply the stabilized biconjugated gradient method BiCGstab [7]. As all Krylov methods, BiCGstab
does not require the reduced Hessian Jˆ (u) itself but only an application of it. In contrast to the standard CG, BiCGstab

1439

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443

5

D. Clever et al. / Procedia Computer Science 00 (2010) 1–9

can deal with unsymmetric matrices as well. Even though the reduced Hessian is symmetric in theory, this is not
necessarily the case when applying independent forwards and backwards discretizations. By controlling discretization
errors in state and adjoint variables we automatically control the errors in symmetry. Therefore, in our setting the
reduced Hessian is suﬃciently close to being symmetric in every iteration. Nevertheless, our experience shows, that
in real engineering applications BiCGstab works more reliable than a CG-method. Following the method of Steihaug
[8] we augment BiCGstab by a veriﬁcation of negative curvature and a step restriction to the trust region. Furthermore,
we terminate this inner iteration, if the current inner iterate s(uj) solves the system accurate enough. Here, we couple
the inner accuracy with the outer accuracy by the exponent 1.5 which mirrors the order of the outer SQP-iteration [9].
Even though the computation of the reduced Hessian requires two PDAE solves per inner iteration, our experience
shows that the additional work pays oﬀ in comparison to an SQP method using, for example, BFGS-updates.
4. The Glass Cooling Problem
One important observation in glass cooling modelling is that taking into account only heat conduction inside and
convective heat transfer at the boundary of the glass is not appropriate. Because of the high temperatures at which
glass is processed the direction- and frequency-dependent thermal radiation ﬁeld and the spectral radiative properties
of semi-transparent glass play a dominant role for the temperature distribution inside the material as well.
Here, we consider the so called gray model, a frequency independent SP1 approximation, which consists of a heat
equation for the scaled temperature T (x, t) and a transport equation for the scaled mean radiative intensity φ(x, t) [10].
The state system e(y, u) for the gray scale model is described by the following non-linear system of partial diﬀerential
algebraic equations of mixed parabolic-elliptic type:
1
Δφ = 0
3κ

∂t T − kΔT −

2

−

kn · ∇T +

3κ

in Ω × (0, te ]

Δφ = −κφ + 4πκaT 4

in Ω × (0, te ]

1
1
h
1
n · ∇φ = (u − T ) + 4πau4 − φ
3κ
2
2

in ∂Ω × (0, te ]

2

n · ∇φ = (4πau4 − φ)
3κ
2
T (0, x) = T 0 (x)

in ∂Ω × (0, te ]
on Ω.

The parameter k is the heat conductivity, h the convective heat transfer coeﬃcient and κ the absorption coeﬃcient. The
factor describes the optical thickness of glass. The factor a results from Stefan’s law and is proportional to the StefanBoltzmann’s constant. The outward normal on the spatial boundary ∂Ω in denoted by n. The boundary conditions
reﬂect free thermal convection and diﬀusive surface radiation involving the spatially constant furnace temperature u
which is the control function within this setting. We want to point out that initial conditions are only present for the
glass temperature T (x, t) but not for the algebraic radiation component φ(x, t). Within an optimization context, it is
essential to evaluate consistent initial values for the algebraic component of all involved systems.
4.1. The Objective Functional
In the optimization of glass cooling processes, it is important for the quality of the glass that its temperature
distribution follows a desired proﬁle to control the chemical reactions in the glass. Typically, there are time-dependent
reference values provided by engineers for the furnace temperature as well, which should be considered within the
objective. To allow for a diﬀerent control value at ﬁnal time than the given reference value, we additionally include a
tracking of the glass temperature at ﬁnal time. The above described requirements can be summarized in the following
objective functional:
J(T, u) :=

1
2

te
0

T − Td

2
L2 (Ω)

dt +

δe
(T − T d )(te )
2

2
L2 (Ω)

+

δu
2

te
0

(u − ud )2 dt,

with the desired glass temperature distribution T d (x, t) and a guideline for the control ud (t). The ﬁnal time of the
cooling process is denoted by te . The positive weights δe and δu are used to steer the inﬂuence of the corresponding
components.

1440

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443
6

D. Clever et al. / Procedia Computer Science 00 (2010) 1–9

4.2. The Reduced Gradient and the Reduced Hessian
Solving the adjoint system and using (11) the Riesz representative of the reduced gradient can be evaluated by
Jˆ (u) = δu (u − ud ) +

∂Ω

h
ξT
− ξT − 8πa
+ ξφ u3 dλ.

To evaluate the reduced Hessian applied to a given direction su (13), ﬁrst, the linearized state system (14) has to be
solved to achieve the linearized state sy . Next, the second adjoint system (15) has to be solve with respect to the
current state y, the adjoint state ξ, the linearized state sy and the control update su . Then, the reduced Hessian towards
su can be evaluated by
h

Jˆ (u)su = δu su +

wT + 8πa

wT

∂Ω

+ wφ u3 − 24πa

ξT

+ ξφ su u2 dλ,

where w = (wT , wφ )T is the solution of (15).
5. Numerical Experiments
In the following we will interpret the glass as an inﬁnitely long block. It is therefore suﬃcient to consider a two
dimensional cross section as computational domain. The model and problem speciﬁc qualities used are summarized
in Table 1. We start the optimization on quite coarse grids, with 7 time and 545 spatial nodes forced by the local
Table 1: Problem and Model Speciﬁc Qualities

Ω
te
T 0 (x)

computational domain
ﬁnal time
initial glass temperature

T d (t)

desired glass temperature

u0 (t)
ud (t)
δe
δu

initial control
desired control
ﬁnal value weight
control regularizaton weight

[−2, 2] × [−2, 2]
1.0e − 1
9.0e + 2
T 0 exp

T

0 )t
− log( 300
te

T d (t)
T d (t)
5.0e − 2
1.0e − 1

c˜ 1
c˜ 2
c˜ :=

state error control constant
adjoint error control constant
c˜ 1 = c˜ 2

k

conductivity coeﬃcient

h
κ

convection coeﬃcient
absorption coeﬃcient
optical thickness coeﬃcient
radiated energy coeﬃcient

a

2.0e − 2
2.0e − 2
2.0e − 2
1.0e + 0

1.0e − 3
1.0e + 0
1.0e + 1
1.8e − 8

tolerances tolt = tol x,y = tol x,ξ = 5.0e − 2. Already on this coarse level there is a signiﬁcant diﬀerence between
dim(Uk ) = 7 and dim(Yk ) = 7630. On the ﬁnest level, which will be determined automatically as the optimization
proceeds we will even see dimensions like dim(Uk ) = 8.0e + 1 and dim(Yk ) ≈ 8.0e + 5 forced by the local tolerances
tolt = 3.1e − 04, tol x,y = 2.9e − 04 and tol x,ξ = 3.3e − 04. For the considered glass cooling problem with spatially
constant boundary control u it is therefore of great advantage to reduce the optimization to the control component and
to carry out all evaluations depending on state or adjoint state directly within KARDOS. For the time discretization
we apply ROS3PL, which is an L-stable order three method for nonlinear stiﬀ diﬀerential algebraic equations of index
one and is especially designed to avoid order reduction for parabolic problems [11, 12].
A schematic representation showing the performance of the optimization and the simultaneous grid reﬁnement is
presented in Figure 1. During the optimization the reduced gradient is reduced signiﬁcantly (see Figure 1). After 3
iterations the state time error and the scaled reduced gradient norm 2c˜ Jˆ intersect. This means, criteria (8) is violated
and the grid has to be reﬁned. We adjust the local tolerance tolt with respect to the ratio of violating error estimate
and gradient norm. Reading from left to right each intersection of the scaled gradient norm with any of the four global
error estimates correlates with a grid reﬁnement. The increasing slope of the reduced gradient decrease throughout the
optimization process mirrors the superlinear or even quadratic convergence of the optimization method. We terminate
the optimization if the reduced gradient norm is reduced by 6 decimal orders. Since we reﬁne the meshes as the
discrete reduced gradient approaches towards zero, it can be shown that the inﬁnite dimensional gradient converges
towards zero as well [4].
Additional information about the optimization progress and the grid reﬁnement is presented in Table 2. Each

1441

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443

7

D. Clever et al. / Procedia Computer Science 00 (2010) 1–9
Table 2: Optimization Protocol (Multilevel SQP Method)

opt
it
0
1
2
3
3
4
5
5
6
6
7
7
8

target
value
2.54079e+4
1.08391e+4
8.82848e+3
8.46235e+3
8.39930e+3
8.27626e+3
8.26910e+3
8.25336e+3
8.25258e+3
8.21585e+3
8.21565e+3
8.21456e+3
8.21456e+3

scal.grad.
norm
5.318e+0
1.330e+0
3.972e-1
1.132e-1
3.048e-1
5.230e-2
7.644e-3
1.577e-2
1.068e-3
8.141e-3
2.713e-4
5.544e-4
2.755e-6

max.err.
norm
4.147e-2
7.242e-2
1.206e-1
2.510e-1
1.170e-2
9.719e-3
9.850e-3
5.775e-3
7.974e-3
8.689e-4
8.688e-4
2.645e-4
2.567e-4

time
nodes
7
7
7
7
14
14
14
18
18
53
53
80
80

space
nodes
545-545
545-545
545-545
545-545
545-545
545-545
545-545
545-545
545-545
545-2201
545-2201
545-8853
869-8853

BiCG
loops

term.
reason

2
3
3

res. small
res. small
res. small

3
4

res. small
res. small

5

max no it.

5

max no it.

5

max no it.

overall
cpu time
1.03e+1
5.49e+1
1.12e+2
1.71e+2
1.85e+2
2.74e+2
3.80e+2
3.97e+2
5.54e+2
8.25e+2
1.81e+3
2.64e+3
9.78e+3

horizontal line and the row below represent a grid reﬁnement. After each grid reﬁnement the reduced gradient norm
increases, due to marginal diﬀerences between the adjoint values on old and new grid. Nevertheless, after just one
optimization iteration the reduced gradient is signiﬁcantly reduced in comparison to the last iterate on the old grid.
Column 7 and 8 show the number of BiCGstab iterations within the inner iteration and the reason to terminate. Our
experience shows that a maximum iteration number of 5 gives satisfactory results. In column 9 the overall computing
time up to the corresponding optimization iteration is given.
The optimal control iterates, the corresponding reduced gradients and the resulting glass temperature in the interior
point (1, 1) are presented in Figure 2. In each subﬁgure, the lightest line represents the initial quality and the darkest
1

10

scaled reduced gradient norm
state time error norm
state spatial error norm
adjoint time error norm
adjoint spatial error norm
stopping tolerance

0

10

-1

10

-2

10

-3

10

-4

10

-5

10

-6

10

0

1

2

3

4
optimization iteration

5

6

Figure 1: Performance of Multilevel SQP Method
Error estimators via number of optimization steps. Each intersection of the scaled reduced gradient norm
the global estimators gives rise to a grid reﬁnement.

7

c˜
2

8

Jˆ with one of

1442

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443
8

D. Clever et al. / Procedia Computer Science 00 (2010) 1–9
Control Iterates

Glass Temperature (Interior)

Reduced Gradient

1000

2500

900
desired temperature

2000
0

800

0

glass temperature

furnace temperature

800

1500

600
1000

1

400
500

2

2

3

200

4

0

1

0

0.02

5

0.04
0.06
time

6

0
7

3

4

5

6

7

0

700
1

600

2
3
4
5

500

6

7

8

400

8

8

0.08

0.1

-500

0

0.02

0.04
0.06
time

0.08

0.1

300

0

0.02

0.04
0.06
time

0.08

0.1

Figure 2: Optimization Results (Multilevel SQP Method)
Optimal control iterates, corresponding reduced gradients and resulting glass temperature in the interior point (1, 1) determined by the SQP method. The lightest line (0) represents the initial quality and the darkest (8) the ﬁnal or optimal quality.

the ﬁnal or optimal quality. Especially in the subﬁgure “Reduced Gradient” the coarse initial time discretization can
be seen in the ﬁrst iterate. As the optimization proceeds the reduced gradient converges uniformly towards zero. Only
in the third iteration, there is a quite high gradient value at time t = 0, because now, on the newly reﬁned grid, a small
control increase can be resolved.
To study the computational beneﬁt of the presented multilevel approach we compare the results presented above
to those of an SQP method with ﬁxed local tolerances comparable to those of the ﬁnest level. Clearly, carrying out all
optimization iterations on the same level requires less optimization iterations, since there is no increase of the reduced
gradient after a grid reﬁnement. But having a look at the overall computing time in Table 2 it can be seen that the
optimization iteration on the ﬁnest level does take almost three times longer than the whole optimization took so far.
This means that only two additional iteration on the ﬁnest level would more than double the computational eﬀort.
Generally, for the ﬁxed setting we observe a multiplication of the computing time by at least a factor 5.
It is also interesting to verify whether the additional eﬀort for the computation of the reduced Hessian and the
iterative solving of system (10) really pays oﬀ. Therefore, we compare the multilevel SQP method to a multilevel
gradient method with Armijo line search [13, 14]. Even though one optimization iteration of the gradient method
is signiﬁcantly faster than one of the SQP method, there are also signiﬁcantly more iterations necessary to reduce
the scaled gradient under the predeﬁned tolerance which all in all leads to a multiplication of computing time by a
factor 5.
If the number of spatial nodes diﬀers signiﬁcantly, like it does on the ﬁnest level (see Table 2), it is also of great
computational beneﬁt to allow independent spatial grids at diﬀerent points of time and for diﬀerent PDAEs. Numerical
experiments show that if all computations would be carried out on the same spatial mesh, one optimization iteration
serving the highest accuracy would take 4 times longer than in the adaptive case.
6. Summary
We have presented an adaptive multilevel generalized SQP method to solve PDAE-constrained optimization problems which allows the use of independent integration schemes. It was coupled with the PDAE solver KARDOS and
applied to a radiative heat transfer problem described by space-time dependent non-linear partial diﬀerential algebraic
equations. We observed that allowing for independent spatial meshes can reduce the computational eﬀort signiﬁcantly. Furthermore we compared the multilevel SQP method to an SQP method without multilevel approach and
to a gradient method with linear order of convergence. We could show that both, the higher order of convergence
and the multilevel strategy, save approximately 80% of the computing time. This means computational savings of
approximately 96% in comparison to an optimization method with linear order of convergence and without multilevel
strategy.

D. Clever et al. / Procedia Computer Science 1 (2012) 1435–1443
D. Clever et al. / Procedia Computer Science 00 (2010) 1–9

1443
9

References
[1] S. Li, L. Petzold, Adjoint sensitivity analysis for time-dependent partial diﬀerential equations with adaptive mesh reﬁnement, Journal of
Computational Physics 198,1 (2004) 310–325.
[2] B. Erdmann, J. Lang, R. Roitzsch, KARDOS-User’s Guide, Manual, Konrad-Zuse-Zentrum Berlin (2002).
URL http://www.zib.de/Numerik/software/kardos/
[3] J. C. Ziems, S. Ulbrich, Adaptive multilevel inexact SQP-methods for PDE-constrained optimization, Technical Report, TU Darmstadt, 2008.
Submitted to SIAM Journal on Optimization (2010).
[4] J. C. Ziems, Adaptive multilevel SQP-methods for PDE-constrained optimization, PhD Thesis, Department of Mathematics, TU Darmstadt
(2010).
[5] J. Lang, Adaptive Multilevel Solution of Nonlinear Parabolic PDE Systems. Theory, Algorithm, and Applications, Vol. 16 of Lecture Notes
in Computational Science and Engineering, Springer Verlag, 2000.
[6] K. Debrabant, J. Lang, On global error estimation and control for parabolic equations, Tech. Rep. 2512, Technische Universit¨at Darmstadt
(2007).
[7] H. A. van der Vorst, Bi-CGSTAB: A fast and smoothly converging variant of bi-cg for the solution of nonsymmetric linear systems, SIAM
Journal on Scientiﬁc and Statistical Computing.
[8] T. Steihaug, The conjugate gradient method and trust regions in large scale optimization, SIAM, Journal of Numerical Analysis 20,1 (1983)
626–637.
[9] P. Deuﬂhard, Global inexact newton methods for very large scale nonlinear problems, in: IMPACT of Computing in Science and Engineering,
1991, pp. 366–393.
[10] E. W. Larsen, G. Th¨ommes, A. Klar, M. Sea¨ıd, T. G¨otz, Simpliﬁed PN approximations to the equations of radiative heat transfer and applications, Journal of Computational Physics 183 (2002) 652–675.
[11] J. Lang, D. Teleaga, Towards a fully space-time adaptive FEM for magnetoquasistatics, IEEE Transactions on Magnetics 44,6 (2008) 1238–
124.
[12] J. Lang, J. Verwer, ROS3P - an accurate third-order Rosenbrock solver designed for parabolic problems, BIT 41 (2001) 730–737.
[13] D. Clever, J. Lang, Optimal control of radiative heat transfer in glass cooling with restrictions on the temperature gradient, Technical Report,
TU Darmstadt, 2009. Submitted to Mathematical Models and Methods in Applied Science (2010).
[14] J. Lang, Adaptive computation for boundary control of radiative heat transfer in glass, Journal of Computational and Applied Mathematics
183 (2005) 312–326.

