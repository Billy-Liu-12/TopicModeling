A Web Services Broker for E-learning
Judith Rodr´ıguez, Luis Anido, Manuel J. Fern´
andez, Fernando Mikic, and
´ arez
Luis M. Alv´
Departamento de Ingenier´ıa Telem´
atica
Universidad de Vigo
Campus Universitario s/n, E36200 Vigo (Spain)
{jestevez,lanido,manolo,mikic,lmsabu}@det.uvigo.es

Abstract. Brokerage enriches the traditional searching services to include resource acquisition, distribution and billing and perfectly adapts
to a scenario like e-learning where multiple, independent content
providers and service providers exist. Brokerage oﬀers a suitable framework where customers, mainly learners, can get in touch with providers.
On the one hand, customers can locate, select and access the resources
and services oﬀered by providers in an eﬃcient way. On the other hand,
providers can beneﬁt from services as marketing, customizable publicizing, or even accounting and billing. This paper proposes a brokerage
architecture for Web-based E-learning services. It facilitates the integration of individual software components providing speciﬁc services to
compose a complete E-learning environment.

1

Introduction

The application of Internet technologies to the learning ﬁeld is one of the most
proliﬁc research areas during the last years. There are many educational resources and software platforms available through the Web. In this situation,
heterogeneous proprietary data models and platforms have coexisted for years.
As a consequence an interoperability and integration problem came up. To overcome this situation, a standardization process for E-learning technologies started
several years ago. This process has produced promising results and several proposals has already become de-facto standards among e-learning developers community [1]. Most of these standards oﬀer suitable data models to exchange and
transfer information among heterogeneous systems. Nowadays, the trend among
e-learning standardization community is to oﬀer well-deﬁned interfaces to access
common services. For this, Web services are being widely used as the underlying
support.
The Web services concept has strongly emerged as a new distributed computing paradigm that attempts to make use of existing Internet technology overcoming the drawbacks of other distributed technologies such as DCOM [2] or
CORBA [3]. The E-learning ﬁeld is also beneﬁting from this situation and several e-learning institutions and companies are planning to deliver their services
using Web services technologies [4].
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2657, pp. 659–668, 2003.
c Springer-Verlag Berlin Heidelberg 2003

660

J. Rodr´ıguez et al.

As the oﬀer of available Web services increases it will become more and more
diﬃcult to ﬁnd or even use them. An approach to overcome this situation is to
apply the electronic brokerage concept to E-learning Web services. For this, we
take advantage both of the e-learning standardization results and the advances
in the Web services technology. This paper proposes a brokerage platform that
facilitates service discovery, invocation and composition. This paper is organized as follows. Section 2 explains the concept of Web services and present the
technologies involved. Section 3 is devoted to the presentation of our proposal.
Finally, Section 4 presents the conclusions of our work and outlines the future
trends.

2

Web Services

Web services constitute a distributed computer architecture made up of many
diﬀerent computers trying to communicate over the network to form one system.
This area has been, and continues to be, one of the most proliﬁc research ﬁelds,
as Web services represent the latest in the evolution of modular and distributed
computing.
The W3C [5] deﬁnes a Web Service as “a software system identiﬁed by a
URI, whose public interfaces and bindings are deﬁned and described using XML.
Its deﬁnition can be discovered by other software systems. These systems may
then interact with the Web service in a manner prescribed by its deﬁnition, using
XML based messages conveyed by Internet protocols”. However, a more accurate
and general deﬁnition of what Web Services are is that proposed by the Stencil
Group [6]:
[Web Services are] Loosely coupled, reusable software components that
semantically encapsulate discrete functionality and are distributed and
programmatically accessible over standard Internet protocols.
Ongoing work in this ﬁeld comprises the identiﬁcation and deﬁnition of a
set of standards and protocols (see section 2.1) for Web service management.
The purpose of this work is twofold. On the one side, the new standards will
allow to semantically encode the properties, capabilities, interfaces and eﬀects
of Web Services in an unambiguous and machine-understandable way in order
to automate tasks as service discovery, execution and composition. On the other
side, the agreement on the protocols and data models will promote interoperation
of services.
E-business in general, and E-learning in particular, is an application domain
where Web service technologies will suppose a step ahead. The work discussed in
this paper aims to deﬁne an open brokerage architecture to integrate educationalrelated services. Next, we introduce the main building blocks of the semantic
Web services, namely ontologies and the standards involved. Then, we discuss
our proposal for a brokerage platform for educational services based on ongoing
research on Web service technology. This paper concludes with a summary of
the main contributions and a description of our present and future work.

A Web Services Broker for E-learning

2.1

661

Web Services Technology

Standardization work in the ﬁeld of Web Services produced a set of standards
that enable developers to implement distributed applications, using diﬀerent
tools provided by many diﬀerent vendors. These applications use a combination
of software modules from systems in other departments or even other companies.
The most outstanding standards are organized as a layered structure, and are
brieﬂy described next. From the lower to the highest layer we have:
– XML (eXtensible Markup Language) [7] is the ubiquitous language for the
creation of diﬀerent information formats and the exchange of structured
information among software applications.
– SOAP (Simple Object Access Protocol ) [8] is a protocol for message-based
communications among applications. It is based on XML and uses mainstream Internet transport protocols (e.g. HTTP) to carry its data.
– WSDL (Web Services Description Language) [9] developed by the W3C. It
is an XML-based format to abstractly describe the functionality (i.e. the
interface) oﬀered by a Web Service. WSDL separates the description of the
service itself from the concrete details of how and where its functionality is
oﬀered.
– UDDI (Universal Description Discovery and Integration) [10] deﬁnes a protocol and a registry for describing available Web service components to allow software to discover what Web services are available and how to access
them. The information provided by UDDI registries consists of three conceptual components: (1) white pages of service provider contact information;
(2) yellow pages that categorize services by standard taxonomies; and (3)
green pages that document the technical information about the services.
– WSFL (Web Services Flow Language) [11], from IBM, provides a framework
to describe the business logic required to assemble various services into and
end-to-end business process.
Although there are a lot of ongoing proposals in the Web services ﬁeld (i.e.
SOAP extensions, WXSL) the ones enumerated above are becoming de-facto
standards among researchers/developers in this ﬁeld.

3

Brokerage Platform for Educational Services

Our work aims at the identiﬁcation of a set of common services for a Web services
brokerage platform in the e-learning domain. Figure 1 graphically outlines a
description of the environment of our work.
The purpose of the brokerage platform is to provide a common place where
customers, mainly learners, can beneﬁt from the large oﬀer of educational services without having a prior knowledge about where these services are running
or how to use them.
Next, we introduce the diﬀerent actors involved in the educational Web services brokerage platform and we clarify their interactions through the explanation of several use cases.

662

J. Rodr´ıguez et al.

;;

Educational Web Services Brokerage Platform
New providers

?

User Profiles
LMS - SCORM

Competency definitions
Authority

LMS - AICC

Web Service Interfaces
Web Service Interfaces

Web Service Interfaces

Web Service Interfaces

Web Service Interfaces

Web Service Interfaces

publish

Web Service Interfaces

UDDI Registries
UDDI Registries
UDDI Registries

sh
publi publish

publish

web service requests

Search
Engines
Search
Engines
Search
Engines

Internet

ry

co

ve

dis

co

ce

dis

rvi

ce

se

rvi

se

web service responses

e

ns

e

ns

po

res

po

ry

res

ve

SOAP Request(s)

SOAP Interpreter

Request Adaptation, complex services
composition, etc

Response adaptation

Authentication
Security
Auditing

SOAP Interpreter

Registration

SOAP Response

Web Services Broker

Fig. 1. Educational Brokerage Proposal

3.1

Service Providers

Service providers are those institutions or individuals that made public their
services through Internet. Service providers can be categorized into two diﬀerent
groups. On the one hand, there are providers that are strictly linked to our
educational environment:
– Learning Management Systems (LMS). They represent the proprietary educational content delivery platforms of diﬀerent institutions. Typically, they
are compliant with well-know recommendations in this ﬁeld like SCORM
[12] or CMI [13].
– Competency Deﬁnitions Authorities. They are institutions responsible for
deﬁning and certifying the skills, knowledge, tasks, learning outcomes and
curriculum to achieve a speciﬁc expertise. Usually, the information managed by these institutions follows standardized speciﬁcations like the IMS
Reusable Deﬁnition of Competency or Educational Objective [14].

A Web Services Broker for E-learning

663

On the other hand, there are service providers that oﬀer general services.
Nevertheless, we will only focus on those managing data models relevant for our
purposes.
– User Proﬁles Servers. They oﬀer services over repositories that store personal and academic information about ﬁnal customers, i.e. learners. Several
information models may be used by this kind of providers, like LIP [15],
PAPI [16] or vCard [17][18].
– Search Engines. They provide search services over Internet resources. They
can be either general or educational-speciﬁc. In any case, we will only be
interested in those that can “understand” educational metadata information
models like LOM [19].
– UDDI Registries. As explained in section 2.1, they provide information about
service providers and technical information about services oﬀered by them.
In addition, they oﬀer discovery services over that information.

3.2

Web Services Broker

The Broker is the core component of the brokerage platform. It is responsible for
receiving customers’ requests, fulﬁl them and retrieve the corresponding results
to the customer. As it can be inferred from the discussion above (c.f. Sect.3.1),
there are many information models of which customers should be aware in case
the Broker did not exist. The Broker acts as the intermediary in all the transactions between customers and service providers, making transparent details like
the data models managed, the location of service providers or the ﬂow of exchanged messages to achieve the response of one customer request. Thus, the
tasks for which the Broker is responsible include:
1. Receive and process customers’ request messages.
2. According to previous step, the Broker may proceed with one or more of the
steps below:
– Invoke UDDI registry services to discover the most suitable service or
services according to the customer request.
– Compose a ﬂow of services over diﬀerent providers to fulﬁl the request.
– Make the required data model transformations (i.e. mappings) to invoke
the suitable services.
– Access information about users to adapt the request processing to customer’ preferences or capabilities.
– Request customer interaction if necessary to complete the process.
3. Retrieve the results from the previous step, make the needed adaptations to
return them to the customer, or inform the customer about possible errors
resulting from request processing.

664

3.3

J. Rodr´ıguez et al.

Customers

In our case, ﬁnal customers are students searching for educational services and
resources to achieve speciﬁc capabilities, skills or fulﬁl the curricula requirements.
Nevertheless, the role of Broker customers will be played by the educational
software used by the Learners. To make reading easier, from here on we will use
the term Learner to refer to this Learner software.
3.4

Interaction among Actors

Figure 1 shows graphically the interactions between actors as dotted and dasheddotted arrows. Arrows marked as publish reﬂect the interactions between the
UDDI registry and the remainder service providers to make publicly available
their services and to support their discovery. To carry out this task, service
providers describe their services interfaces using WSDL and supply these descriptions to UDDI registries.
Those arrows marked with service discovery show the interactions between
the Broker and the service providers in order to discover suitable Web services
and how and where to invoke them.
Finally, the arrows marked with Web services responses/requests reﬂect the
interactions among the Broker and the diﬀerent service providers in order to
fulﬁl customers’ requests.
All these interactions are made through Internet and represent the exchange
of SOAP messages over HTTP.
3.5

Usage Case Scenarios

In this section we describe two possible scenarios.
Usage scenario 1. In this scenario the Learner asks for suitable courses to obtain
a speciﬁc competency (e.g. computational science algorithms). Figure 2 shows
the hypothetical ﬂow of messages among actors.
Firstly, the Learner invokes the appropriate Broker service
(searchForCertificatedExpertise). The SOAP request message would carry information
such as the Learner identiﬁer, the subject of interest, etc. Once the Broker
receives the request, it would process it. The requested service is composite,
i.e. it is composed of a set of services whose invocation ﬂow is speciﬁed using
WSFL. In this case, to carry out the requested service the Broker must do the
processing explained next1 :
1. Obtain the suitable competency deﬁnitions from the requested subject using
the services oﬀered by Competency Deﬁnitions Authority.
1

To simplify the usage scenario explanation, it is supposed that the Broker has already
discovered the necessary Web services in the UDDI Registries

A Web Services Broker for E-learning

:Broker

:Competency
DefinitionsAuthority

:SearchEngine

665

:UserProfileServer

Learner

searchForCertificatedExpertise ()
1:getCompetencyDefinition ()

2:searchCompetencyCourses ()

3:getUserProfile ()

4:filterResultsWithProfile ()
5:customizeResponse()

Fig. 2. Flow of messages for the usage scenario 1

2. Compose the suitable message request to invoke the Search Engine services
to get a list of educational courses that fulﬁl the competency deﬁnitions
obtained in the previous step. We assume that there exists a specialized
Search Engine that is able to search suitable courses for a speciﬁc deﬁnition
of competencies.
3. Access to academic and preferences Learner information using User Proﬁle
services. The user proﬁle contains the degree level of the Learner, completed
courses, preferences as preferred data models for information exchange, or
personal information required to complete the enrolment.
4. Use the information gathered from the previous step to ﬁlter out the results
from step 2. For example, the Broker can remove from the list those courses
that are not suitable for the Learner either as they are too basic or too
complex for the Learner degree level.
5. Customize the response message for the Learner based on presentation preferences established in the proﬁle.
Usage scenario 2. This scenario describes a situation where the Learner has
made the choice of both the course and the institution to follow that course.
Then, he requests the Broker to perform the enrolment in the suitable LMS on
his behalf (enrolInCourse). Figure 3 shows the hypothetical ﬂow of messages
caused by the processing of the request message in the Broker. As in the previous
case, the deﬁnition of the requested service states that it implies the invocation
of several services whose choreography is deﬁned in WSFL. Needed steps are
shown below:
1. Get the WSFL deﬁnition for the suitable service for the enrolment in the requested institution. For this task the Broker would use the services provided
by the UDDI registries.

666

J. Rodr´ıguez et al.

:Broker

:UDDI Registry

:UserProfileServer

:LMS

Learner

enrolInCourse ()
1:getServiceDescription ()

2:getUserProfile ()

3:mapDataModels()
3:enrollLearner ()

5:customizeResponse()

Fig. 3. Flow of messages for the usage scenario 2

2. Obtain the personal information of the Learner using the User Proﬁles services. This information allows to automatically providing the information
necessary to make eﬀectively the enrolment without Learner intervention.
3. In this case we suppose that the information model used by the User Proﬁle
(e.g. LIP) is diﬀerent from the one used by the enrolment service of the
LMS (e.g. PAPI). For that reason the Broker must map the two information
models.
4. The Broker sends the enrolment request message to the LMS.
5. Once the previous steps are completed, the Broker customizes the message
response from the execution of the enrolment service and sends it back to
the Learner. This response message would contain for example the login,
password and URL to access the course.

4

Conclusions and Future Trends

At present the Web services technology is one of the most active working areas.
Therefore, many related proposals have been developed in parallel by the most
outstanding institutions and organizations in the Web development area. Elearning is one of the domains that is beneﬁting from this technical development.
Nevertheless, new problems appear as a consequence: which is the most suitable
service? How can I locate it? How should I use it?
In this paper we have presented a Web services Broker for the E-learning
domain that acts on behalf of Learners to discover and invoke services oﬀered
by diﬀerent services providers. In this way, the Broker makes transparent to the
user the underlying processing, the used protocols and infrastructure and the
location where Web services are running.

A Web Services Broker for E-learning

667

Future trends aimed to enrich the Web service brokerage platform with additional features. Among them, we are planning to introduce provided-oriented services as support for billing based on service usage or marketing-related services.
We are also studying the introduction of push services for providers. Presently,
the proposed platform only supports pull services. However, at this time, the
need for push services in this kind of platform is not clear for our application
domain.
Additionally, we also plan to provide notiﬁcation mechanisms for customers.
Notiﬁcation will complement service discovery in the sense that, instead of being
the customer who initiates the search for services, the broker will inform users
about available services, according to the user’s proﬁle.
Acknowledgments. We want to thank “Ministerio de Ciencia y Tecnolog´ıa”
for their partial support to this work under grant “CORBALearn: Interfaz de
Dominio guiada por Est´
andares para Aprendizaje Electr´
onico” (TIC2001-3767).

References
1. Santos, J., Caeiro, M., Rodr´ıguez, J., Anido, L.: Standardization in TelE-learning.
A Critical Analysis. In: TelE-Learning. The Challenge for the Third Millenium.
17th IFIP World Computer Congress, Montreal (Canada). Kluwer Academic Publishers (2002) 321–328
2. Microsoft Coorporation: DCOM Technical Overview (1996) Electronic version available at http://msdn.microsoft.com/library/default.asp?url=/library/en–
us/dndcom/html/msdn dcomtec.asp.
3. OMG: Common Object Request Broker Architecture: Core Speciﬁcation (2002)
Electronic version available at http://cgi.omg.org/docs/formal/02-12-06.pdf.
4. Sun Microsystems: Universities and Solution Providers Showcase the Use of Sun
Technology at this Year’s EDUCAUSE Conference (2002) Electronic version available at
http://www.sun.com/smi/Press/sunﬂash/2002-10/sunﬂash.20021002.3.html.
5. Champion, M., Ferris, C., Newcomer, E., Orchard, D.: Web Services Architecture.
W3C working draft, W3C (2002) Electronic version available at
http://www.w3.org/TR/2002/WD-ws-arch-20021114.
6. Stencil Group: Deﬁning Web Services. Analysis memo (2001) Electronic version
available at http://www.stencilgroup.com/ideas scope 200106wsdeﬁned.html.
7. Bray, T., Paoli, J., Sperberg-McQueen, C., Maler, E.: Extensible Markup Language
(XML) 1.0 (Second Edition). W3C Recommendation 6, W3C (2000) Electronic
version available at http://www.w3.org/TR/2000/REC-xml-20001006.
8. Gudgin, M., Hadley, M., Mendelsohn, N., Moreau, J.J., Nielsen, H.F.: SOAP Version 1.2 Part 1: Messaging Framework. Candidate recommendation, W3C (2002)
Electronic version available at http://www.w3.org/TR/soap12-part1.
9. Chinnici, R., Gudgin, M., Moreau, J., Weerawarana, S.: Web Services Description
Language (WSDL). Working Draft Version 1.2, W3C (2002) Electronic version
available at http://www.w3.org/TR/2002/WD-wsdl12-20020709/.

668

J. Rodr´ıguez et al.

10. Bellwood, T., et al.: UDDI (Universal Description, Discovery & Integration). Published Speciﬁcation Version 3, Accenture, Ariba, Inc., Commerce One, Inc., Fujitsu
Limited, Hewlett-Packard Company, i2 Technologies, Inc., Intel Corporation, International Business Machines Corporation, Microsoft Corporation, Oracle Corporation, SAP AG, Sun Microsystems, Inc., and VeriSign, Inc (2002) Electronic version
available at http://www.uddi.org/pubs/uddi-v3.00-published-20020719.htm.
11. Leyman, F.: Web Services Flow Language (WSFL 1.0). Technical Report Version 1.0, IBM Software Group (2001) Electronic version available at http://www3.ibm.com/software/solutions/webservices/pdf/WSFL.pdf.
12. P. Dodds (Editor): Sharable Content Object Reference Model (SCORM). The
SCORM Runtime Environment. Technical Report Version 1.2, Advanced Distributed Learning Initiative (2001) Electronic version available at
http://www.adlnet.org/ADLDOCS/Documents/SCORM 1.2 RunTimeEnv.pdf.
13. Hyde, J.: CMI Guidelines for Interoperability. Technical Report Version 3.5, AICC
CMI Subcommittee (2001) Electronic version available at
http://www.aicc.org/docs/tech/cmi001v3-5.pdf.
14. Cooper, A., Ostyn, C.: IMS Reusable Deﬁnition of Competency or Educational
Objective - Information Model. Final Speciﬁcation Version 1.0, IMS Global Learning Consortium (2002) Electronic version available at
http://www.imsglobal.org/competencies/rdceov1p0/imsrdceo infov1p0.html.
15. Smythe, C., Tansey, F., Robson, R.: IMS Learner Information Package Information Model Speciﬁcation. Final Speciﬁcation Version 1.0, IMS Global Learning
Consortium (2002) Electronic version available at
http://www.imsglobal.org/proﬁles/lipinfo01.html.
16. Collett, M., Farance, F.: Draft Standard for Learning Technology Public and
Private Information (PAPI) for Learners (PAPI Learner). Technical Report Version
7, IEEE LTSC (2000) Electronic version available at
http://edutool.com/papi/drafts/07/papi learner 07 main.pdf.
17. Howes, T., Smith, M., Dawson, F.: A MIME Content-Type for Directory Information. RFC 2425, IETF, Network Working Group (1998) Electronic version available
at http://www.imc.org/rfc2425.
18. Dawson, F., Howes, T.: vCard MIME Directory Proﬁle. RFC 2426, IETF, Network
Working Group (1998) Electronic version available at http://www.imc.org/rfc2426.
19. Hodgins, W.: Draft Standard for Learning Object Metadata. Draft 6.4, IEEE
Learning Technologies Standards Committee (2002) Electronic version available
at http://ltsc.ieee.org/doc/wg12/LOM WD6 4.pdf.

