Vandermonde–Type Matrices in Two Step
Collocation Methods for Special Second Order
Ordinary Diﬀerential Equations
Silvana Martucci1 and Beatrice Paternoster2
1
2

Dipartimento di Matematica e Applicazioni, Universit´
a di Napoli, Italy
Dipartimento di Matematica e Informatica, Universit´
a di Salerno, Italy

Abstract. We consider a general family of two step nonlinear methods
for the numerical integration of Ordinary Diﬀerential Equations of type
y = f (x, y). By applying a collocation technique, linear systems with a
Vandermonde–type matrix arise during the construction of the methods.
The computation of its determinant reduces to the computation of a
recurrence formula depending on the collocation abscissas.

1

Introduction

We are concerned with the derivation of a general family of two–step collocation methods for the numerical integration of second order Ordinary Diﬀerential
Equations (ODEs), in which the ﬁrst derivative does not appear explicitly,

y (t) = f (t, y(t)),

y(t0 ) = y0 ,

y (t0 ) = y0 ,

y(t), f (t, y) ∈ Rs .

(1)

The idea behind polynomial collocation is well known and old [1,3]. After
ﬁxing a set of collocation abscissas, the numerical solutions is given by a polynomial which satisﬁes the diﬀerential equation at the given set of collocation
points, and which reproduces the values already obtained in the previous step
point. One–step collocation methods for ODEs (1) form a subset of implicit
Runge–Kutta (RK) methods [3] and have been exstensively studied. Multistep
collocation methods were ﬁrst investigated by Guillon and Soul´e [2]. Then Lie
and Norsett [5] considered multistep RK of Gauss type, and Hairer and Wanner
[4] those of Radau type. The parameters of the k–step s–stage multistep RK
method of Radau type are listed in [6].
We extend the procedure indicated in [4], to obtain a general family of two
step collocation methods for (1) within the family of two step Runge–Kutta–
Nystr¨
om (TSRKN) methods, introduced in [8,9], providing numerical approximetions not only for the solution, but also to its ﬁrst derivative at the step
point.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 418–425, 2004.
c Springer-Verlag Berlin Heidelberg 2004

Vandermonde–Type Matrices in Two Step Collocation Methods

2

419

Construction of the Method

The following deﬁnition generalizes the Deﬁnition 3.2 of [4], to obtain a general
family of two step collocation methods for the ODEs (1):
Deﬁnition 1. Let m real numbers c1 , . . . , cm ∈ [0, 1], the solution values
yn , yn−1 and the derivative values yn , yn−1 . The collocation polynomial P (x)
of degree 2m + 3 is then deﬁned by:
P (xn−1 ) = yn−1 ,

P (xn ) = yn ,

P (xn−1 ) = yn−1 ,

P (xn ) = yn ,

(2)

P (xn−1 + ci h) = f (xn−1 + ci h, P (xn−1 + ci h)),

(3)

P (xn + ci h) = f (xn + ci h, P (xn + ci h)).

(4)

Then the numerical solution of (1) is given by
yn+1 = P (xn+1 ),

yn+1 = P (xn+1 )

(5)

(2)–(4) constitute a Hermite interpolation problem with incomplete data,
because the function values at xn + ci h are missing. Following [4,6], to compute
the collocation polynomial P (x) for k = 2, we introduce the dimensionless coordinate t = (x − xn )/h, x = xn + th, with nodes t1 = −1, t2 = 0, and deﬁne the
following polynomials, which constitute a generalized Lagrange basis:
– φi (t), i = 1, 2, of degree 2m + 3, deﬁned by
φi (tj ) = δij ,
φi (cj − 1) = 0,

φi (tj ) = 0,

φi (cj ) = 0,

i, j = 1, 2,

i = 1, 2,

(6)

j = 1, . . . , m.

(7)

– ψi (t), i = 1, 2, of degree 2m + 3, deﬁned by
ψi (tj ) = 0,
ψi (cj − 1) = 0,

ψ (tj ) = δij ,

ψi (cj ) = 0,

i, j = 1, 2,
i = 1, 2,

j = 1, . . . , m.

(8)
(9)

– χi,n−1 (t) and χi,n (t), i = 1, . . . , m , of degree 2m + 3, deﬁned by
χi,n−1 (tj ) = 0,

χi,n (tj ) = 0,

i = 1, . . . , m,

j = 1, 2,

(10)

χi,n−1 (tj ) = 0,

χi,n (tj ) = 0,

i = 1, . . . , m,

j = 1, 2,

(11)

i, j = 1, . . . , m,

(12)

χi,n−1 (cj − 1) = δij ,
χi,n (cj − 1) = 0,

χi,n−1 (cj ) = 0,
χi,n (cj ) = δij ,

i, j = 1, . . . , m.

(13)

420

S. Martucci and B. Paternoster

δij denotes the Kronecker tensor. Then the expression of the collocation polynomial P (x) in terms of these polynomials is given by:
P (xn + th) = φ1 (t) yn−1 + φ2 (t) yn + h( ψ1 (t) yn−1 + ψ2 (t) yn ) +
m

h2

(χj,n−1 (t) P (xn−1 + cj h) + χj,n (t) P (xn + cj h)).
j=1

After constructing φi (t), ψi (t), χi,n−1 (t) and χi,n (t), by putting t = ci ,
writing P (xn + ci h) = Yni and inserting the collocation conditions (2)–(4) for
k = 2, we obtain the expression of the TSRKN collocation method, as the
following theorem states:
Theorem 1. The collocation method deﬁned by (2)–(3)–(4) is equivalent to the
TSRKN method:
Ynj = uj,1 yn−1 + uj,2 yn + h(uj,1 yn−1 + uj,2 yn ) +
m

s
(ajs f (xn−1 + cs h, Yn−1
) + bjs f (xn + cs h, Ynj )),

h2
s=1

yn+1 = θ1 yn−1 + θ2 yn + h(η1 yn−1 + η2 yn ) +
m

h2

j
(vj f (xn−1 + cj h, Yn−1
) + wj f (xn + cj h, Ynj )),

j=1

hyn+1 = θ1 yn−1 + θ2 yn + h(η1 yn−1 + η2 yn ) +
m

h2

j
(vj f (xn−1 + cj h, Yn−1
) + wj f (xn + cj h, Ynj )),

j=1

where
θi = φi (1),

uj,i = φi (cj ),

i = 1, 2, j = 1, . . . , m

(14)

ηi = ψi (1),

uj,i = ψi (cj ),

i = 1, 2, j = 1, . . . , m

(15)

vj = χj,n−1 (1),
wj = χj,n (1),

ajs = χj,n−1 (cs ),
bjs = χj,n (cs ),

θi = φi (1),

ηi = ψi (1),

j, s, = 1, . . . , m,

(16)

j, s, = 1, . . . , m

(17)

i = 1, 2,

(18)

Vandermonde–Type Matrices in Two Step Collocation Methods

vj = χj,n−1 (1),

wj = χj,n (1),

421

j, = 1, . . . , m

(19)

and φi (t), ψi (t), χi,n−1 (t) and χi,n (t) are the polynomials deﬁned by the conditions (6)–(13).
Let us note that the order of approximation of P (xn + ci h), that is the so
called stage order of the TSRKN method, is 2m + 3.
Let us now show how to construct the polynomials φi (t), ψi (t), χi,n−1 (t) and
χi,n (t). We will follow the procedure indicate in [6]. We expand the polynomials:
φi (t) =

2m+3
k=0

χi,n−1 (t) =

d k tk ,
(i)

ψi (t) =

pk tk ,

χi,n (t) =

2m+3
k=0

(i)

2m+3 (i) k
k=0 ek t ,

2m+3 (i) k
k=0 qk t ,

i = 1, 2,
i = 1, . . . m.
(i)

(i)

(i)

The following linear systems arise: Hd(i) = N0 , He(i) = N1 , Hp(i) = N2,n−1
(i)

and Hq (i) = N2,n , of order 2m + 4 with


1 t1
 1 t2

0 1

0 1

0 0

. .
H=
 .. ..

0 0

0 0

. .
 .. ..
0 0


d(i)








=








(i)

d0
(i)
d1
(i)
d2
(i)
d3
(i)
d4
..
.
..
.
(i)

d2m+3

t21
t22
2t1
2t2
2
2
2
2


t31
t32
3t21
3t22
2 · 3(c1 − 1)

...
...
...
...
...
..
.

t2m+3
1
t2m+3
2
(2m + 3)t2m+2
1
(2m + 3)t2m+2
2
(2m + 2)(2m + 3)(c1 − 1)2m+1
..
.














2 · 3(cm − 1) . . . (2m + 2)(2m + 3)(cm − 1)2m+1 


2 · 3c1
...
(2m + 2)(2m + 3)c2m+1
1


..
..

.
.
2m+1
2 · 3cm
...
(2m + 2)(2m + 3)cm
(20)














 (i) 
,e = 















(i)

e0
(i)
e1
(i)
e2
(i)
e3
(i)
e4
..
.
..
.
(i)

e2m+3

















 (i) 
,p = 















(i)

p0
(i)
p1
(i)
p2
(i)
p3
(i)
p4
..
.
..
.
(i)

p2m+3

















 (i) 
,q = 















(i)

q0
(i)
q1
(i)
q2
(i)
q3
(i)
q4
..
.
..
.
(i)

q2m+3









,








422

S. Martucci and B. Paternoster





(i)

N0


δi1
 δi2 
 
 0 
 
 0 
 
 0 
 
. 
=
 .. 
 
 0 
 
 0 
 
 . 
 .. 
0

(i)

N1


0
 0 
 
 δi1 
 
 δi2 
 
 0 
 
. 
=
 .. 
 
 0 
 
 0 
 
 . 
 .. 
0



(i)

N2,n−1


0
 0 


 0 


 0 


 δi1 


. 
=
 .. 


 δim 


 0 


 . 
 .. 
0



(i)

N2,n

0
0
0
0
0
..
.









=


 0

 δi1

 .
 ..










.









δim

To compute the coeﬃcients of the collocation method deﬁned in Theorem 1,
we must now evaluate the polynomials φi (t), ψi (t), χi,n−1 (t) and χi,n (t) according to (14)–(19). When H is not singular, the computation yields
φi (t) = [1 t . . . t2m+3 ] H −1 N0 , i = 1, 2
(i)
θi = φi (1) = [1 . . . 1] H −1 N0 ,
(i)
2m+3
uji = φi (cj ) = [1 cj . . . cj
] H −1 N0 , i = 1, 2, j = 1, . . . , m
(i)
ψi (t) = [1 t . . . t2m+3 ] H −1 N1 , i = 1, 2
(i)
ηi = ψi (1) = [1 . . . 1] H −1 N1 ,
(i)
uji = ψi (cj ) = [1 cj . . . c2m+3
] H −1 N1 , i = 1, 2, j = 1, . . . , m
j
(i)
χi,n−1 (t) = [1 t . . . t2m+3 ] H −1 N2,n−1 , i = 1, . . . , m
(i)
vi = χi,n−1 (1) = [1 . . . 1] H −1 N2,n−1 , i = 1, . . . , m
(i)
ais = χi,n−1 (cs ) = [1 cs . . . c2m+3
] H −1 N2,n−1 , i, s = 1, . . . , m
s
(i)
χi,n (t) = [1 t . . . t2m+3 ] H −1 N2,n , i = 1, . . . , m
(i)
vi = χi,n (1) = [1 . . . 1] H −1 N2,n , i = 1, . . . , m
(i)
bis = χi,n (cs ) = [1 cs . . . c2m+3
] H −1 N2,n , i, s = 1, . . . , m.
s
(i)

For m ≥ 2, from the initial and collocation conditions (2)–(4), a linear system
of 2m + 4 equations in 2m + 4 unknowns arises, having H in (20) as matrix of
coeﬃcients, where t1 = −1 and t2 = 0.
The computation of the determinant of H allows us to determine the exceptional values of the collocation abscissas ci for which the two step collocation
method cannot be constructed.

3

Computation of the Determinant of H

The determinant of H is computed through the tecnique which is usually applied
to the Vandermonde matrices; in this way the computation of the determinant
of H reduces to the computation of a 2 × 2 matrix, whose elements are deﬁned
through a recurrence formula, as described in the following.
Let us reduce the determinant of H to the determinant of the (2m + 2) ×
(2m + 2) matrix H , that is det(H) = −det(H ), where

Vandermonde–Type Matrices in Two Step Collocation Methods



1
 −2

 2

 ..
 .
H =
 2

 2

 .
 ..
2

−1
3
2 · 3(c1 − 1)
..
.

...
...
...
..
.

(−1)2m+3
(2m + 3)(−1)2m+2
(2m + 2)(2m + 3)(c1 − 1)2m+1
..
.

423










2m+1 
2 · 3(cm − 1) . . . (2m + 2)(2m + 3)(cm − 1)


2 · 3c1
...
(2m + 2)(2m + 3)c2m+1
1


..
..
..

.
.
.
2m+1
2 · 3cm
...
(2m + 2)(2m + 3)cm

Then det(H) = −(2m + 2)! (2m + 3)! detH ,


1
2

 −1

 1

 .
 ..
H =
 1

 1

 .
 ..
1

1
(−1) 2·3
1
2

(c1 − 1)
..
.

...
...
...
..
.

1
2m+1
(2m+2)(2m+3) (−1)
−1
2m+1
2m+3 (−1)
(c1 − 1)2m+1

(cm − 1) . . .
c1
...
..
..
.
.
cm
...

..
.
(cm − 1)2m+1
c2m+1
1
..
.








.







c2m+1
m

By setting
x1 = c1 − 1, . . . , xm = cm − 1, xm+1 = c1 , . . . , x2m = cm ,
r(0) (n) =

1
(−1)n+1 ,
n(n + 1)

the matrix H can be written as
 (0)
r (1) r(0) (2)
 q (0) (1) q (0) (2)

 1
x1

 ..
..
 .
.

H =
1
x
m

 1
x
m+1

 .
..
 ..
.
1
x2m

q (0) (n) =

−1
(−1)n+1 ,
n


. . . r(0) (n)
(0)
. . . q (n) 


. . . x2m+1
1

..
.. 
.
. 
.

. . . x2m+1
m


. . . x2m+1
m+1 
..
.. 
.
. 
2m+1
. . . x2m

Then H is a Vandermonde matrix except the ﬁrt two rows. Its determinant
is now computed by using the tecnique which is usually applied to the Vandermonde determinant. In details, we multiply each column by x1 and subtract it
from the following column, starting from the penultimate column. At the end a
block matrix is obtained:

424

S. Martucci and B. Paternoster

2m

A
V

(xi − xj )

H =
i<j,i=1

B
0

where A is a 2 × m matrix, 0 is the zero matrix of dimension 2m × 2, V is a lower
triangular matrix with 1 on the diagonal, and B is a 2 × 2 matrix containing the
elements of H in the upper right corner, which result after the transformations
performed on H to compute its determinant. In particular B takes the following
form:
B=

r(2m) (2m + 1) r(2m) (2m + 2)
q (2m) (2m + 1) q (2m) (2m + 2)

,

(21)

where the r and q elements in B are derived through the following recurrence
formulas, which keep track of the trasformation on H :
r(0) (n) =

1
(−1)n+1 ,
n(n + 1)

r(i) (n) = r(i−1) (n) − r(i−1) (n − 1)xi ,

−1
(−1)n+1 , q (i) (n) = q (i−1) (n) − q (i−1) (n − 1)xi ,
n
i = 1, . . . , 2m, n = 1, . . . , 2m.
By considering the elementary symmetric polynomials in x1 , . . . , x2m ,
q (0) (n) =

p1 =

xi ,

p2 =

xi xj ,

ps =

xi1 xi2 . . . xis ,
i1 <i2 <is

i<j

it is possible to prove by induction that
j

r(j) (n + 1) =

(−1)k r(0) (n − k) pk ,

j

q (j) (n + 1) =

k=0

(−1)k q (0) (n − k) pk .

k=0

In conclusion
2m

det(H) = − (2m + 2)! (2m + 3)!

(xj − xi ) det(B)
i<j,i=1

where
det(B) = r(2m) (2m + 1) q (2m) (2m + 2) − q (2m) (2m + 1) r(2m) (2m + 2)
In this way also the computation of the exceptional values of the collocation
abscissas for the method deﬁned in theorem 1 reduces to the computation of the
c–values which annihilate the 2 × 2 determinant of B in (21).

Vandermonde–Type Matrices in Two Step Collocation Methods

425

For instance, the computation of det(H) for m = 1 allows us to state that
11

3
6
the collocation–based TSRKN is deﬁned only if c = ±
±
.
10
5
The resulting expressions for a higher number of stages can be easily derived
through the illustrated technique and the usage of symbolic computation.

4

Concluding Remark

In this paper the coeﬃcients of the new two step collocation methods for ODEs
(1) are deﬁned through the computation of the inverse of matrix H in (20), which
is of Vandermonde type. Diﬀerent approaches for the derivation of collocation–
based TSRKN methods are under consideration, following [4,5,7], that avoid the
numerical treatment of Vandermonde–type matrices, involving on the contrary
the integrals of polynomials in the generalized Lagrange basis. The analysis of the
properties of the TSRKN methods, such as the obtainable order of convergence,
stability properties, eﬃciency and so on, will be subject of a forthcoming paper.

References
1. J. C. Butcher, The Numerical Analysis of Ordinary Diﬀerential Equations: Runge–
Kutta and General Linear Methods, Wiley, Chichester, 1987.
2. A. Guillon and J. L. Soul´e, La r´esolution num´erique des probl´emes diﬀ´erentiels aux
conditions initiales par des m´ethodes de collocation, RAIRO Anal. Num´
er. Ser.
Rouge R–3, 17–44, 1969.
3. E. Hairer, S. P. Norsett and G. Wanner, Solving Ordinary Diﬀerential Equations I
– Nonstiﬀ Problems, Springer Series in Computational Mathematics 8, Springer–
Verlag, Berlin, 1987.
4. E. Hairer and G. Wanner, Solving Ordinary Diﬀerential Equations II: Stiﬀ and
Diﬀerential–Algebraic Problems, Springer, Berlin, 1991.
5. I. Lie and S. P. Norsett, Superconvergence for multistep collocation, Math. Comput.
52, 65–79, 1989.
6. E. Messina, J. J. B. de Swart and W. van der Veen, Parallel iterative linear solvers
for multistep Runge–Kutta methods, J. Comput. Appl. Math. 85, 145–167, 1997.
7. B. Paternoster, General two–step Runge–Kutta methods based on algebraic and
trigonometric polynomials, Int. J. Appl. Math. 6(4), 347–362, 2001.
8. B. Paternoster, Two step Runge-Kutta-Nystr¨
om methods for y = f (x, y) and Pstability, Computational Science - ICCS 2002, Lecture Notes in Computer Science
2331, Part III, P.M.A.Sloot, C.J.K.Tan, J.J.Dongarra, A.G.Hoekstra Eds., 459–
466, Springer Verlag, Amsterdam (2002).
9. B.Paternoster, Two step Runge-Kutta-Nystrom methods for oscillatory problems
based on mixed polynomials, Computational Science - ICCS 2003, Lecture Notes
in Computer Science 2658, Part II, P.M.A.Sloot, D.Abramson, A.V.Bogdanov,
J.J.Dongarra, A.Y.Zomaya, Y.E.Gorbachev Eds., pp. 131-138, Springer, Berlin
Heidelberg (2003).

