Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 938–947

International Conference on Computational Science, ICCS 2011

Model Reduction Techniques for Characterization of Fractured
Subsurfaces
Victor Gintinga,∗, Michael Preshob
a Department
b Department

of Mathematics, University of Wyoming, Laramie, Wyoming, USA
of Mathematics, Colorado State University, Fort Collins, Colorado, USA

Abstract
One of the most diﬃcult tasks in reservoir simulations is reliable characterization of fractured subsurfaces. A
typical situation in petroleum engineering employs dynamic data integrations such as the oil production history to be
matched with simulated responses associated with a set of porosity and/or permeability ﬁelds. Among the challenges
found in practice are proper mathematical modelings of the ﬂow in the presence of fractured systems, persisting
heterogeneity in the porosity and permeability, and the uncertainties inherent in them. In this paper we propose a
Bayesian framework Monte Carlo Markov Chain simulation (MCMC) to sample a set of subsurface’s characteristics
from the posterior distribution that are conditioned to the production data. This process requires obtaining the simulated responses over many realizations. The ﬂow for this simulated response is governed by a dual porosity, dual
permeability model. As this can be a prohibitively expensive endeavor, we address the possibility of using the Multiscale Finite Volume Element (MsFVEM) combined with a sparse stochastic collocation technique to provide a venue
for an eﬃcient computation. A set numerical examples illustrating the procedure will be presented.
Keywords: fractured reservoir, uncertainty quantiﬁcation, Bayesian statistics, MCMC, multiscale ﬁnite volume
element, stochastic collocation

1. Introduction
Reliable characterization of fractured subsurfaces is one of the most challenging tasks in the ﬂow through porous
media community. Many reservoirs are naturally fractured and can contain fractures that may span over many length
scales. The fractures give rise to very complex paths for the ﬂuid movement which directly aﬀect subsurface characterization. A common practice in the hydrocarbon recovery industry is to use the available production data to guide
the characterization of a particular reservoir. This practice, which is coined “history matching,” amounts to adjusting
the reservoir model until it closely reproduces the recorded production data. In reality, history matching requires sampling the subsurface’s characteristics, such as porosity and permeability ﬁelds, submitting them as input parameters
to the reservoir model (usually expressed in terms of a set of governing mathematical principles), obtaining the output
of simulated responses, and then comparing them with the measured data.
∗ Corresponding

Author
Email address: vginting@uwyo.edu (Victor Ginting)

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.099

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

939

However, direct simulations of ﬂow through fractured reservoirs may be computationally expensive or infeasible
to compute. Ideally, the level of mesh resolution on which the ﬂow and transport are sought has to be in a comparable scale with the fractures’ setting. Often this would require designing a highly unstructured grid along with the
possibility of local reﬁnements in various subregions. Moreover, a great deal of prior information about the fracture
conﬁguration must be gathered for constructing such a grid system. Putting this into the scenario of sampling large
numbers of resevoir characteristics, one can see the tremendous computational load that has to be committed in the
history matching.
On a related aspect, it is not immediately obvious how to rigorously represent the subsurface characteristics before
sending them to the reservoir model. In this regard, the predicament lies on the uncertain nature of these characteristics. In our context, the values of these characteristics have to be projected to the underlying computational mesh
on which the simulated responses are to be evaluated. This will translate into the dimensional immensity of the
uncertainty space which greatly multiplies the already huge computational cost.
To recapitulate, establishing a complete statistical description of the fracture subsurface that is consistent with
the production data necessitates focusing the eﬀort on addressing three fundamental problems, namely, (1) proper
modeling of the ﬂow and transport in a fractured subsurface, (2) appropriate parametrization of the subsurface’s
characteristics in hopes of representing the uncertainty correctly, and (3) accurate numerical procedures that make
the overall computational work tractable. Our thesis in this paper is that these fundamental problems can be resolved
by implementing careful modeling reduction techniques. The reduced system is then placed as a blackbox in the
framework of Bayesian statistical inference in combination with the Markov chain Monte Carlo (MCMC) method.
This statistical approach aims at generating a Markov chain from which a stationary, posterior distribution of the
fracture characteristics may be constructed [11]. In our case, the goal is to describe the posterior distribution of the
permeability conditioned to known tracer cut data.
Since our goal is to mimic the behavior of integrated dynamic responses such as the production data, it is likely
satisfactory to use relatively inexpensive surrogate mathematical models that are capable of predicting the general
trends of the ﬂow and transport in the fractured subsurface. This is the ﬁrst step in the sequence of modeling reductions
that we propose in this paper. One suitable candidate is the class of dual porosity and dual permeability models
whose initial inception originally appeared in the literature in the 1960’s and 1970’s, see e.g. [3, 17, 13]. Typical
assumptions in fractured reservoir simulation are that the permeability within the fracture set is noticably larger than
its matrix counterpart, and that fractures represent the main means of ﬂuid transport in a porous medium. More recent
investigations attempted to provide rigorous derivations of the dual models using the mathematics of homogenization
theory (see [1, 2, 8]). Eﬀectively modeling such systems typically involves solving for equations which govern ﬂow
in the matrix and fracture separately and maintaining a certain interconnection between the two.
Furthermore, as the uncertainty space of a permeability ﬁeld may be exceptionally large, a reduction of the
space dimension is a step which must be performed for computationally feasible simulations. The well known
Karhunen-Lo`eve expansion allows us to parametrize our random space and thereby lead to the desired reduction.
The parametrization is achieved by solving an eigenvalue problem involving a given covariance structure and the assumption of uncorrelated random coeﬃcients. This technique has been used previously in ﬂow through porous media
applications (see, e.g. [9, 10]), where a random permeability ﬁeld deﬁned on a large number of underlying grid points
is expressed using the expansion.
The last straw concerns the numerical procedures for solving the dual model. The main burden when solving
this surrogate model is dominated by the coupled pressure equations (see Eq. (1) in Section 2). This mostly stems
from the heterogeneous nature of the permeabilities associated with the fracture and matrix sheets. We propose to
employ the Multiscale Finite Volume Element method (MsFVEM) to solve the coupled pressure equation for two
main reasons: (1) the ﬁnite volume framework enjoys a local numerical conservation, which is a crucial property for
an accurate simulation of transport phenomena, and (2) the method allows for a degree of freedom reduction in the
resulting algebraic systems by posing the calculation on a coarser mesh and representing the approximate solutions in
terms of the multiscale basis functions. The multiscale basis functions are designed in such a way that they contain
information about the heterogeneity of the permeabilities. Still, in terms of large scale permeabilities sampling, the
cost for recalculation of these basis functions can easily be extremely expensive. Rather than resolving the multiscale
basis functions for every permeability realization, we propose to use the sparse interpolation technique [16]. A set
of collocation points in the parametrized uncertainty space is chosen on which the multiscale basis functions are
computed prior to the MCMC iterations. Then within MCMC, everytime a proposal for the permeabilities are made,

940

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

the associated multiscale basis functions are computed in terms of stochastic interpolation of those precomputed
counterparts at the collocation points. We note that similar approach has been implemented in [6] and [7].
The rest of the paper is organized as follows. Section 2 lays out the dual model that serves as a surrogate governing
principle for the ﬂow and transport in fractured subsurface. Section 3 gives a description on the Karhunen-Lo`eve
expansion to parametrize the uncertainty space. Then in Section 4 we present the MsFVEM followed by the stochastic
interpolation technique in Section 5. The MCMC algorithm is presented in Section 6. A set of numerical simulations
is shown in Section 7. Finally we oﬀer a concluding remark in Section 8.
2. Dual porosity, dual permeability ﬂow model
This section describes the surrogate model we use for characterizing the reservoir in the MCMC framework. We
employ the dual porosity, dual permeability model for single-phase (tracer) ﬂow through a fractured porous medium,
denoted by Ω, see e.g. [3, 17, 13]. Other recent models, such as in [1, 2, 8], are already available. Nevertheless, in
the interest of focusing our eﬀort on developing the general MCMC framework for fractured reservoirs we will use
the more traditional models in [13]. We expect that as our level of understanding matures, exchange of these models
is achievable.
The basic idea of such models is separation of the matrix and fracture equations which describe ﬂow through the
system while maintaining the interaction between the two by an additional transfer term. The equations governing the
pressures are expressed as
km (x, ω)
αkm (x, ω)
(pm − p f ) − ∇ ·
∇pm = qm,p
μ
μ

and

−

k f (x, ω)
αkm (x, ω)
(pm − p f ) − ∇ ·
∇p f = q f,p , (1)
μ
μ

where μ denotes the viscosity of the tracer, and km and k f denote the matrix and fracture permeabilities, respectively,
which change with diﬀerent points x ∈ Ω. The uncertainty inherent in the permeabilities is indicated by ω. The
variables pm and p f denote the respective pressures. The forcing terms qm,p and q f,p denote the matrix and fracture
sources and sinks, respectively. It is evident from the equations that the coupling in the system is realized through the
matrix-fracture transfer function αkμm (pm − p f ), where α is referred to as the shape factor. In this paper we assume a
shape factor of the form α = Ls2 , where Lz denotes the vertical fracture spacing, and s is the shape factor coeﬃcient.
z
We note that shape factors and applicable shape factor coeﬃcients are a topic in the previous research, and we refer
the interested reader to [13, 17] for details of extensive discussion on the proper use of transfer terms.
Along with the dual permeability pressure equations given in (1) the ﬂow model also involves two tracer concentration equations given by
φm

∂Cm
+ ∇ · (vmCm ) − Γc = qm,c
∂t

and

φf

∂C f
+ ∇ · (v f C f ) + Γc = q f,c ,
∂t

(2)

where

kf
km
∇pm and v f = − ∇p f
(3)
μ
μ
are the velocities gained from (1), φm and φ f denote the matrix and fracture porosities, qm,c and q f,c are the corresponding forcing terms for each equation, and Cm and C f denote the respective tracer concentrations. The concentration
matrix-fracture exchange term Γc depends on the diﬀerence of matrix and fracture pressures and is determined by [14]
⎧ αk
m
⎪
⎪
−
(pm (x) − p f (x)) Cm (x, t) if pm (x) ≥ p f (x),
⎪
⎪
⎪
μ
⎪
⎪
⎨
Γc (x, t) = ⎪
(4)
⎪
⎪
⎪
αkm
⎪
⎪
⎪
(pm (x) − p f (x)) C f (x, t) if pm (x) < p f (x).
⎩ −
μ
vm = −

A heuristic consideration veriﬁes this form, as ﬂow from the matrix to fracture (or vice-versa) would result from a
pressure diﬀerence across the respective domains.
Our goal in this paper is to sample the ﬁne scale permeability ﬁelds km and k f on the basis of the tracer fractional
ﬂow. That is, we are interested in the fraction of tracer produced with respect to the total production rate. The tracer
fractional ﬂow (or tracer cut), F(t), is deﬁned by the ﬂow rate at the production edge of the model given by

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

941

Eigenvalues
✯✯

0.35
0.3

✯

✯

.

✯ Fracture
✯

0.25

✯

✯

λk

0.2

✯

✯

✯

0.15
0.1

✯

✯

✯

. .. . .. .. ... .. ....

0.05
0.0

✯

Matrix

0

5

10

✯

✯

15

k

.. .

✯✯

✯✯
20

Figure 1: Eigenvalues decrease in the KLE expansion

F(t) =

∂Ωout

v f · n C f dl +

∂Ωout

∂Ωout

vm · n Cm dl

v f + vm · n dl

,

(5)

where ∂Ωout is the outﬂow boundary and n is the unit normal vector on ∂Ωout . We refer to F(t) as the composite tracer
cut curve.
In practice, the permeability within the fracture system, k f , is larger than its matrix counterpart, km . In addition we
assume φ f < φm to account for less storage capacity of the fractures. In turn, the ﬂow patterns of the fracture advance
signiﬁcantly faster in time, and strongly aﬀect the ﬂow scenario for the Markov chain Monte Carlo (MCMC) process.
3. Parametrization of uncertainty in the permeabilities
To proceed with parametrizing the uncertainty space, the prior information of the matrix and fracture permeabilities is assumed to follow a log-normal distribution. That is, log km (x, ω) = Ym (x, ω) and log k f (x, ω) = Y f (x, ω),
where Ym (x, ω) and Y f (x, ω) follow Gaussian distribution with covariance function
R s (x1 , z1 ; x2 , z2 ) = σ2s exp −

|x1 − x2 |2 |z1 − z2 |2
−
,
2
2l2x,s
2lz,s

(6)

where l x,s and lz,s denote the correlation lengths, σ2s is the variance, and s signiﬁes either matrix (m) or fracture ( f ).
Using the Karhunen-Lo`eve expansion (see e.g.[18]), the permeability ﬁelds can be expanded in terms of deterministic
orthogonal basis Φ j,s (x) functions satisfying

Ω

R s (x1 , z1 ; x2 , z2 ) Φ j,s (x2 , z2 ) dx2 dz2 = λ j,s Φ j,s (x1 , z1 ),

(7)

for j = 1, 2, . . ., where λ j,s = E[Y 2j,s ] > 0. In turn, each permeability ﬁeld is written as
∞

Y s (x, ω) =

λ j,s θ j,s (ω) Φ j,s (x),

(8)

j=1

where θ j,s denotes the random coeﬃcients of the Karhunen-Lo`eve expansion, and λ j,s denotes the eigenvalues where
as before, s is either m or f .
Due to the energy decay property of the correlation function, truncation of (8) into the ﬁrst few terms corresponding to the dominant eigenvalues would in eﬀect reduce the dimension of our uncertainty space. In the present work,
each permeability ﬁeld uses 20 eigenvalues for the Karhunen-Lo`eve expansion (KLE). Fig. 1 illustrates the decline
in eigenvalue size as the horizontal axis increases. In particular, by j = 20 (the 20th eigenvalue for the matrix and

942

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

fracture) we see that the values have nearly vanished. From this point onward, we assume that uncertainty in the permeability ﬁelds have been parametrized by the random vectors θm (for matrix) and θ f (for fracture), each belonging
to R20 and is associated with the coeﬃcients in the KLE.
4. MsFVEM and Iterative Decomposition
In this section we describe the Multiscale Finite Volume Element method (MsFVEM) to solve (1) that reﬂects
a signiﬁcant reduction in the computational load while at the same time maintaining a reasonable accuracy level.
The basic problem is deﬁned as follows. The permeability is deﬁned on the underlying ﬁne grid. We denote by
K h the set of coarse elements K. We let ξ denote a coarse nodal point on the grid, and let Vξ denote the associated
coarse control volume. The pressure solutions are then computed on the coarse nodal points of the discretization. See
Fig. 2 for a schematic of the coarse grid overlay on the underlying ﬁne grid. The main idea is to incorporate the ﬁne

.. .. .. .. .. .. ..
.. .. .. .. .. .. ..
.......

.. .. .. .. ..
.. .. .. .. ..
.....
K

V

Figure 2: Schematic of the coarse grid overlay on the underlying ﬁne grid

scale information of the underlying permeability description into a set of multiscale basis functions and express the
pressure as their linear combination. The technique applied here follows the multiscale ﬁnite element method in [12],
as the basis functions are determined from the solution of the leading order homogeneous elliptic equation on each
f
coarse element. For a coarse rectangular element K, the basis functions ϕm
i,K (i = 1, . . . , 4) and ϕi,K (i = 1, . . . , 4) are
computed from the governing equations
−∇ · (km (x, θm )∇ϕm
i,K ) = 0 in K

and

f
− ∇ · (k f (x, θ f )∇ϕi,K
) = 0 in K
f
ϕi,K
= gi on ∂K,

ϕm
i,K = gi on ∂K,

(9)

for a prescribed boundary function gi . Here we assume that the uncertain vectors θm and θ f are ﬁxed. The boundary
f
value problems in (9) must be solved four times for the determination of the four {ϕm
i,K , ϕi,K }. The basis function
associated with the coarse nodal point ξi is constructed from the union of the basis functions that share this ξi and are
zero elsewhere. Once the multiscale basis functions are formed, we seek the approximate pressures phm and phf in
Vmh = span ϕm
i,K : i = 1, . . . , 4,
respectively, such that

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩−

Vξ

Vξ

f
and V hf = span ϕi,K
: i = 1, . . . , 4,

K ∈ Kh

αkm h
(pm − phf ) dx −
μ

∂Vξ

αkm h
(pm − phf ) dx −
μ

km h
∇pm · n dl =
μ

K ∈ Kh ,

qm,p dx
Vξ

(10)
∂Vξ

kf
∇phf · n dl =
μ

q f,p dx
Vξ

for every coarse control volume Vξ .
The formulation described earlier yields a linear algebraic system
Bm Pm − B f P f + Am Pm = Qm

and

− (Bm Pm − B f P f ) + A f P f = Q f ,

(11)

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

943

where Pm and P f are the vectors of the unknown matrix and fracture pressures, Qm and Q f are the vectors resulting
from integration of the forcing terms, Am and A f are matrices resulting from the boundary integral in (10), and Bm and
B f are a matrices whose entries are
(Bm )i j =
Vi

αkm m
ϕ dx
μ j

(B f )i j =

and

Vi

αkm f
ϕ dx.
μ j

In order to solve (11) we apply an iteration
(l−1)
(Am + Bm )P(l)
m = Qm + B f P f

followed by

(l)
(A f + B f )P(l)
f = Q f + Bm Pm ,

(12)

starting with an initial guess P(0)
f . We note that similar approach has been used in [5]. We perform the iteration until
(N)
we obtain a convergent solution pair (P(N)
f , Pm ), which for simplicity we denote by (P f , Pm ). After each iteration we
compute a summed relative error

E

(l)

(l−1)
P(l)
m − Pm

=

Pm0

L2 (Ω)

L2 (Ω)

+

(l−1)
P(l)
f − Pf

Pf0

L2 (Ω)

,

(13)

L2 (Ω)

where · L2 (Ω) denotes the spatial L2 -norm and Pm0 and P f 0 denote the matrix and fracture solutions in the case when
there is no transfer term. The iteration is stopped when E (l) reaches a pre-deﬁned tolerance.
5. Stochastic sparse interpolation technique
Next we propose an alternative of using stochastic collocation for the multiscale basis function computations. This
Nc
method involves a one-time preprocessing step of computing the basis functions, ϕi,s (x, θks ), at Nc sparse points {θks }k=1
in the uncertainty space. Then, rather than recomputing ϕi,s (x, θ s ) for each realization θ s , we may use the interpolant
Nc

ϕi,s (x, θ s ) =

ϕi,s (x, θks ) αk (θ s )

(14)

k=1

to obtain the multiscale basis functions associated with θ s . As before, the notation s refers to either matrix (m) or
fracture ( f ). When the coeﬃcients (i.e., interpolation weights) αk (θ s ) are easily computable, the sparse grid interpolant
proves to be a more eﬃcient way to gain the basis functions.
The one-dimensional Lagrange interpolant of an arbitrary function g is deﬁned as
(θ − θki )

Mi

Ui (g)(θ) =

g(θij )Lij (θ),

with Lij (θ) =

j=1

k j

(θij − θki )

(15)

being the usual Lagrange basis functions and Mi is the number of nodes in the ith dimension. The full tensor interpolation in d dimensions is then given by
Mid

Mi1

Ui1 ⊗ · · · ⊗ Uid (g) =

···
j1 =1

jd =1

g(θij11 , . . . , θijdd ) · Lij11 ⊗ · · · ⊗ Lijdd .

(16)

We note that for a moderate dimension, the number of terms in (16) makes this interpolation infeasible to compute.
Rather than using a full tensor product interpolation in d dimensions, we use the Smolyak algorithm as an eﬃcient
sparse grid alternative [16]. Letting |i| = i1 + · · · + id for i ∈ Nd , the Smolyak algorithm is deﬁned by
(−1)q−|i| ·

A(q, d)(g) =
q−d+1≤|i|≤q

d−1
· Ui1 ⊗ · · · ⊗ Uid (g).
q − |i|

Most notably, we only need to evaluate the function g at sparse values given by

(17)

944

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

Θi1 ⊗ · · · ⊗ Θid ,

H(q, d) =

(18)

q−d+1≤|i|≤q

where Θi = {θ1i , . . . , θiMi } are the ﬁxed points used by Ui . In this work, we use interpolation points that are based on
the extrema of Chebyshev polynomials [4].
6. Markov chain Monte Carlo method (MCMC)
At this stage, we are in a position to proceed with the actual procedure for sampling the matrix and fracture
permeability ﬁelds which are conditioned to the available tracer cut data, denoted by F ref (t). We note that the map
from the permeability ﬁelds to the tracer cut data is not one-to-one. Thus, this is an ill-posed inverse problem due to
the fact that there exist many diﬀerent permeability samples that will produce F ref (t). Within the statistical framework,
we view the problem as taking the samples from the conditional distribution P (km , k f )|F ref . For brevity we now use
F in the place of F ref , and use k to denote a sample pair (km , k f ). Bayes’ theorem gives the relation
P(k|F) ∝ P(F|k)P(k),

(19)

where P(k) denotes the prior distribution of the permeability ﬁeld, P(F|k) denotes the likelihood function, and represents the conditional probability that the outcome of the measurement is F when the true permeability is k. We note
that the likelihood function requires the forward solution of the ﬂow problem, and in turn, accounts for the bulk of the
computational cost for each permeability sample. This is the juncture at which we employ the MsFVEM combined
with the sparse interpolation technique described earlier to calculate the simulated Fk (t) for a proposed k. For actual
sampling from the posterior distribution P(k|F) we will be using the Metropolis-Hasting MCMC method [15].
As mentioned before, given a permeability sample k, we may obtain the tracer cut curve Fk through solving
the model equations found in (1) and (2). The resulting Fk will contain error from both the model itself, and from
the numerical scheme(s) used to solve the model. A viable assumption is the combined errors from measurement,
modeling, and numerical schemes satisty a Gaussian distribution [10]. In other words, we may write
⎞
⎛
⎜⎜⎜ F − Fk 2 ⎟⎟⎟
(20)
P(F|k) ∝ exp ⎜⎜⎝−
⎟⎟⎠ ,
σ2f
where F is the observed tracer cut, Fk is the tracer cut obtained through solving (1) and (2) for a given k, and σ2f is
the precision associated F and Fk . Noting that F and Fk are time dependent, the L2 -norm F − Fk 2 , may be written
F − Fk

2

T

=

F(t) − Fk (t) 2 dt.

0

From (19), we may then write the posterior distribution as
⎛
⎜⎜ F − Fk
P(k|F) ∝ exp ⎜⎜⎜⎝−
σ2f

⎞
⎟⎟⎟
⎟⎠ P(k).

2⎟

(21)

The main idea of MCMC is to generate a Markov chain whose stationary distribution is given by P(k|F). At each
iteration a permeability pair k is proposed using a transitional probability distribution q(k|kn ), where kn denotes the
previously accepted permeability sample. The forward problem is then solved to determine the acceptance probability
p(kn , k) = min 1,

q(kn |k)P(k|F)
.
q(k|kn )P(kn |F)

More speciﬁcally, kn+1 = k with probability p(kn , k) and kn+1 = kn with probability 1 − p(kn , k). The MetropolisHasting MCMC algorithm is summarized in Algorithm 1 [15].

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

945

Algorithm 1 Collocation MsFVEM and Metropolis-Hasting MCMC
Given covariance structure, generate the KLE parametrization.
Compute the multiscale basis functions for predeﬁned collocation points.
for n = 1 to Nmcmc do
At state kn , generate k from q(k|kn ).
With k as input, solve the dual model to get the simulated Fk .
Accept k as a sample with probability
p(kn , k) = min 1,

q(kn |k)P(k|F)
,
q(k|kn )P(kn |F)

i.e., take kn+1 = k with probability p(kn , k) and kn+1 = kn with probability 1 − p(kn , k).
end for

7. Numerical results
In this section we present a number of representative simulation results for tracer ﬂow in the dual porosity, dual
permeability system. We consider a two-dimensional square domain Ω = [0, 1] × [0, 1]. We impose Dirichlet conditions pm,L = p f,L = 1 and pm,R = p f,R = 0 on the left and right boundaries, respectively, and no ﬂow (zero Neumann)
conditions on the top and bottom portions of the boundary in (1). We use the initial conditions Cm (x, 0) = C f (x, 0) = 1
on the left boundary, and zero elsewhere for the tracer equations in (2). The matrix and fracture porosities are φm = 0.7
and φ f = 0.2, respectively. We use α = 4 as the shape factor. The tolerance for the error in (13) is ﬁxed at 1.0 × 10−8
for all simulations.
The permeability ﬁelds are projected to a 256×256 mesh in Ω. In our simulation, the matrix permeability employs
l x,m = lz,m = 0.1 and variance σ2m = 1, while the fracture permeability uses correlation lengths l x, f = 0.9, lz, f = 0.04
and variance σ2f = 4. The dual pressure equations are solved by MsFVEM and the iterative decomposition on a
16 × 16 mesh. The concentration equations are solved on the same 16 × 16 mesh using a non-oscillatory explicit ﬁnite
diﬀerence scheme with the minmod limiter.
Before embarking on the MCMC, it is worthwhile to see the performance of the sparse interpolation technique
described earlier. With 20 dimensions, and a level 1 interpolation, we use 61 sparse grid points. Table 1 shows the
diﬀerence between pressures computed by traditional MsFVEM and by collocation MsFVEM quantiﬁed in both the
L2 -norm and H1 -norm. These pressures are computed for several realizations of (θm , θ f ). The results in this table
conﬁrm the robustness of the sparse interpolation technique in Section 5.
We run MCMC with 5000 permeability proposals, and consider an independent sampler from a uniform distribution on [−1, 1]20 for the transitional probability distribution q(k|kn ). The left plot of Fig. 3 shows the tracer cut
curves obtained from the accepted permeabilities, while the right plot shows the norm of their diﬀerences against the
reference tracer cut curve. Fig. 4 shows typical proﬁles of accepted permeability ﬁelds. We observe the same situation
between the traditional and collocation MsFVEM. To emphasize this further, Fig. 5 compares the performance of
MCMC for the traditional MsFVEM and collocation MsFVEM in terms of the probability density function of several
entries of accepted θ. We can see that both methods exhibit the same density functions.
In addition to the demonstrated accuracy of collocation MsFVEM, we also address the eﬃciency of the method.
For all time comparisons we use the same dual-core machine equipped with two 2.66 GHz Intel Core i7 processors,
each with 4GB of RAM. The traditional MsFVEM simulation results in a computational time of roughly 12-13 hours,
whereas for the collocation MsFVEM simulation, we obtain a ﬁnal computational time of roughly 9.5 hours. This is
approximately a 27% saving in computation. However, we further remark on the savings associated with the basis
function computations in (9). We emphasize that the basis function computations are the operations which distinguish traditional MsFVEM from collocation MsFVEM. All other computations are common between each respective
method. For collocation MsFVEM we obtain a basis function computational time of 1.8 hours, in addition to a negligible pre-processing time of 2 minutes. This is in sharp contrast to the 4.7 hours which are spent on the basis function
computations for traditional MsFVEM. In particular, when singling out the basis computations we encounter a computational saving of 62%. We expect that further optimization may lead to a more pronounced increase in eﬃciency,

946

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

yet these results adequately demonstrate the expected boost in eﬃciency associated with the collocation MsFVEM
approach.
8. Concluding remarks
In this paper we have proposed a technique for characterizing a fractured porous medium through the use of a
surrogate model for dual porosity, dual permeability tracer ﬂow. We describe the Markov chain Monte Carlo (MCMC)
procedure to sample the posterior distribution of the permeabilities of the surrogate model conditioned to available
tracer cut data. To make computation more tractable, we propose the use of MsFVEM and a sparse interpolation
technique as part of the model reduction techniques. The simulations which we present indicate promising results,
and warrant a more detailed investigation in this direction.
Table 1: Comparison of pressure diﬀerence

(θm , θ f )
1
2
3
4
5

Matrix
L2 (%) H1 (%)
0.05
0.06
0.04
0.05
0.04
0.04
0.03
0.04
0.11
0.15

Fracture
L2 (%) H1 (%)
0.13
0.06
0.06
0.03
0.03
0.01
0.07
0.03
0.06
0.06

Collocation MsFVEM
0.9

0.007

0.8

0.006

Squared L2 -error

0.7

F (t)

0.6
0.5
0.4
0.3
0.2

Accepted F (t)’s
Reference F (t)

0.1
0.0
0.0

0.1

0.2

0.3

0.4

0.005
0.004
0.003
0.002
0.001
0.0

0.5

1000

2000

Time

3000

4000

5000

Sample Index

Figure 3: Tracer cut curves associated with the accepted permeability ﬁelds (left) and their deviation from the reference production (right)

Matrix

-3.4

-2.6

-1.8

Fracture

-1.0

-0.2

0.6

1.4

2.2

Figure 4: Typical proﬁles of accepted permeability ﬁelds

Victor Ginting et al. / Procedia Computer Science 4 (2011) 938–947

947

Fracture
θ2

θ18

Traditional
Collocation

0.6

0.5

Kernel Density

Kernel Density

0.6

0.4
0.3
0.2
0.1
0.0

Traditional
Collocation

0.5
0.4
0.3
0.2
0.1

-2

0

θ

0.0

2

-2

0

θ

2

Matrix
θ2
0.6

0.5

Kernel Density

Kernel Density

0.6

θ18

Traditional
Collocation

0.4
0.3
0.2
0.1
0.0

Traditional
Collocation

0.5
0.4
0.3
0.2
0.1

-2

0

θ

2

0.0

-2

0

θ

2

Figure 5: Comparison of probability density functions for several θ

Acknowledgements V. Ginting is supported in part by grants from US Department of Energy (DE-FE0004832 and
DE-SC0004982), the Center for Fundamentals of Subsurface Flow of the School of Energy Resources of the University of Wyoming (WYDEQ49811GNTG and WYDEQ49811PER), and the National Science Foundation (DMS1016283).
References
[1] T. Arbogast, “Analysis of the simulation of single phase ﬂow through a naturally fractured reservoir”, SIAM J. Math. Anal., 26, 1989, 12–29.
[2] T. Arbogast, J. Douglas, U. Hornung, “Derivation of the double porosity model of single phase ﬂow via homogenization theory”, SIAM J.
Math. Anal., 21(4), 1990, 823–836.
[3] G. Barenblatt, I. Zheltov, I. Kochina, “Basic concepts in the theory of seepage of homogeneous liquids in ﬁssured rocks [strata]”, SMM, 24(5),
1960, 852–864.
[4] V. Barthelmann, E. Novak, K. Ritter, “High dimensional polynomial interpolation on sparse grids“, Advances in Computational Mathematics,
12, 2000, 273-288.
[5] E. Choi, T. Cheema, M. Islam, “A new dual-porosity/dual-permeability model with non-Darcian ﬂow through fractures”, J. Petrol. Sci. Eng.,
17, 1977, 331–344.
[6] P. Dostert, Y. Efendiev, T.Y. Hou, “Multiscale ﬁnite element methods for stochastic porous media ﬂow equations and application to uncertainty
quantiﬁcation”, Comput. Methods Appl. Mech. Engrg., 197, 2008, 3445–3455.
[7] B. Ganapathysubramanian, N. Zabaras, “Modeling diﬀusion in random heterogeneous media: Data-driven models, stochastic collocation and
the variational multiscale method”, J. Comput. Phys., 226, 2007, 326–353.
[8] J. Douglas, T. Arbogast, “Dual-porosity models for ﬂow in naturally fractured reservoirs”, Dynamics of Fluids in Heirarchical Porous Media,
Academic Press, London, 1990, 177–221.
[9] Y. Efendiev, A. Datta-Gupta, V. Ginting, X. Ma, B. Mallick, “An eﬃcient two-stage Markov chain Monte Carlo method for dynamic data
integration”, Water Resour. Res., 41, W12423, 2005.
[10] Y. Efendiev, T. Hou, W. Luo, “Preconditioning Markov chain Monte Carlo simulations using coarse-scale models”, SIAM J. Sci. Comput.,
28(2), 2006, 776–803.
[11] D. Gamerman, “Markov Chain Monte Carlo. Stochastic Simulation for Bayesian Inference.”, Chapman & Hall, Boca Raton, Florida, 1997.
[12] T. Hou, X. Wu, “A multiscale ﬁnite element method for elliptic problems in composite materials and porous media”, J. Comput. Phys., 134,
1997, 169–189.
[13] H. Kazemi, L. Merrill, K. Porterﬁeld, P. Zeman, “Numerical simulation of water-oil ﬂow in naturally fractured reservoirs”, SPE 5719, 1976,
317–326.
[14] A. Lange, J. Bouzian, B. Bourbiaux, “Tracer-test simulation on discrete fracture network models for the characterization of fractured reservoirs”, SPE, 94344, 2005.
[15] C. Robert, G. Casella, “Monte Carlo Statistical Methods”, Springer-Verlag, New York, 1999.
[16] S. A. Smolyak, “Quadrature and interpolation formulas for tensor products of certain classes of functions”, Soviet Math. Dokl. , 4, 1963,
240–243.
[17] J. Warren, P. Root, “The behavior of naturally fractured reservoirs”, SPE, 426, 1963, 245–255.
[18] E. Wong, “Stochastic Processes in Information and Dynamical Systems”, McGraw-Hill, New York, 1971.

