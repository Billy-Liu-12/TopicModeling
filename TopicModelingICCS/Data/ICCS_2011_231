Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1373–1382

International Conference on Computational Science, ICCS 2011

Management of dam systems via optimal price control✩
Boris M. Millera , Daniel J. McInnesb,∗
a Monash

University, Clayton, VIC 3800 Australia and Institute for Information Transmission Problems, Russian Academy of Sciences, Moscow,
Russia.
b Monash University, Clayton, VIC 3800 Australia.

Abstract
This paper considers an optimal management strategy for a system of linked dams. The level of each dam is
approximated by N discrete levels and each dam is then modeled as a continuous-time controlled Markov chain on
a ﬁnite control period. The inﬂow processes for each dam are non-stationary as are the customer demands. We also
consider non-stationary losses from each dam due to evaporation. The controls are a time and state dependent price
control, the bounds of which are prescribed by regulators, and time and state dependent ﬂow controls between dams.
The innovation in this model is that the price control is a feedback control that takes into account the active sectoral
demands of customers. The general approach to the solution is to consider the solution of this stochastic optimization
problem in the average sense and solve it using the dynamic programming method. We consider some issues of the
numerical procedures involved in this method and parallelization as a means to deal with higher dimension problems
in reasonable time. We show that we can obtain optimal price controls for each joint state of the dam system using
numerical methods. The result is illustrated by a numerical example.
Keywords: stochastic control, optimal control, optimization problems, dynamic programming, Markov decision
problems, parallelization.

1. Introduction
The availability of a secure water supply is fundamental for human life and all of the activities associated with
human civilization. Urbanization and the need to supply an urban population with all of its necessities has required the
development of dams and reservoirs as a buﬀer against the vagaries of seasonal rainfall and as centralized infrastructure for water supply . Without such dam systems many cities simply could not exist. In this paper we consider one
approach to dam system management as an example of optimal stochastic control that tries to balance the demands of
long-term sustainability of a resource with the demands of customers in a methodical way.
This type of problem is typically approached as a continuous-time Markov decision process (MDP) and there is
abundant literature available on this topic (see for example [1], [2] and [3]). Of course, dams have not escaped such
✩ This work was supported in part by Australian Research Council Grant DP0988685 and Russian Foundation for Basic Research Grant 10-0100710.
∗ Corresponding author
Email addresses: Boris.Miller@monash.edu (Boris M. Miller), Daniel.McInnes@monash.edu (Daniel J. McInnes)

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.148

1374

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

study and a range of papers have been written where the inﬂow process is a Wiener process or a compound Poisson
process and the dam has either ﬁnite or inﬁnite capacity (for examples see [4], [5], [6], [7] and [8].) It has been
noted that a Wiener process is not very realistic for modeling inﬂows but simpliﬁes some calculation [4]. In general,
compound Poisson processes are used.
The key point of commonality in all of the above examples is that they use very simple threshold control models.
They use a long-run average criterion as the principle optimality criterion. Such models generally assume an inﬁnite
time horizon for control and stationary inﬂow data. It is obvious, however, that inﬂows to dams are non-stationary,
varying with seasonal rains. The long time horizon requires that inﬂows be greater than or equal to outﬂows or the
system will run out of water in ﬁnite time, but in the short term usage may well exceed inﬂows. It is also clear that
short term water availability is extremely important and that some account needs to taken of this in the optimality
conditions. Finally, the long-term average criterion does not consider the costs of transient states and the resources
required for these transitions on a ﬁnite time interval [9].
We consider the optimal management of a system of d dams via a state and time dependent price control and ﬂow
controls between dams in the system. The level of each dam in the system is approximated by N discrete levels and
each is then modeled as a continuous-time controlled Markov chain. The general approach to the solution of this type
of problem is to reduce the stochastic problem to a deterministic one with integral and terminal optimality criteria and
then solve it via dynamic programming. This type of problem has been solved for server queueing systems by Miller
[9] and in general by Miller et. al. [10, 11].
We assume that the intensities of the customers’ seasonal demand functions, the intensities of the natural inﬂows
to each dam and the intensities of evaporation from each dam are deterministic. We also set a bound on the price
control, p(t), with p(t) ∈ [pmin , pmax ]. Each of the ﬂow controls ui, j (t), i, j ∈ [1, .., d] from dam i to j is deﬁned as a
rate of random transitions (Xi,k , X j,l ) → (Xi,k−1 , X j,l+1 ), where ui, j ∈ [0, Umax ], and, for the sake of simplicity, we put
Umax = 1.
1.1. Structure
In section 2 we detail the method of modeling a multi-dam system as linked continuous-time controlled Markov
chains. Section 3 provides details of the key innovation of this model and explains how state dependent consumption
functions are derived for each dam given our price feedback control. In section 4 we consider a general performance
criterion and the general solution of this problem as developed in [9, 10, 11]. Section 5 develops the speciﬁc performance criteria appropriate to this setting.
Section 6 will discuss some issues dealing with the numerical solution and the application of parallelization to
parts of the solution. Section 7 will give a numerical example for a system with only two dams so that the solutions
can be readily visualized. The ﬁnal section will outline future directions for research and enhancement of this model
and solution method.
2. Model of the controlled dam system
In order to model the dam system, we make some assumptions about the behavior of each dam. We assume that
each dam has a natural inﬂow process, independent of ﬂows into other dams. We likewise assume that natural losses
from each dam due to evaporation are independent of evaporative losses in other dams. In terms of consumption, we
assume that the consumption in each dam is controlled by a time and state dependent price and therefore depends on
the joint state of the system. Likewise, cross-ﬂows between dams are time and state dependent and depend on the
joint state of the system.
For each dam, we approximate its level by discretizing it into N + 1 states, N < ∞, and then let Li (t) ∈ {0, ..., N},
i = 1, ..., d, be an integer valued random variable describing the level of dam i at time t. Using the martingale approach
(i)
[12] we describe the N + 1 possible levels in each dam by unit vectors in RN+1 , giving us S i = e(i)
0 , ..., eN for each

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

1375

i = 1, ..., d.
All processes are deﬁned on the probability space {Ω, F , P}. Speciﬁcally, we deﬁne Xi,t , i = 1, ...d, where
Xi,t ∈ S i , t ∈ [0, T ] for T < ∞, as a controlled jump Markov process with piecewise constant right-continuous paths.
Clearly this represents the process of change in the level of each dam on the interval [0, T ]. We also make the following assumptions about the price control, p(t), and the transfer controls, ui, j (t), between dams i and j, for i, j = 1, ..., d
and i j.
Assumption 2.1. Assume that the set of admissible controls, P¯ = p(·) and U¯ = ui, j (·) : i, j = 1, ..., d; i j are
sets of FtX -predictable controls taking values in P = {p ∈ [pmin , pmax ]} and U = {u ∈ [0, 1]} respectively, where
X = X1 ⊗ X2 ⊗ ... ⊗ Xd .
Remark 2.2. Assumption 2.1 ensures that if the number of jumps in the ith dam up to time t ∈ [0, T ] is Nt , τk is the
time of the kth jump and
t
= (Xi,0 , 0), (Xi,1 , τ1 ), ..., (Xi,Nt , τNt )
Xi,0
is the set of states and jump times, then for τNt ≤ t < τNt+1 the controls p(t) = p(t, Xt0 ) and ui, j (t) = ui, j (t, Xt0 ) are
t
t
⊗ ... ⊗ Xd,0
[12, 9].
measurable with respect to t and Xt0 , where Xt0 = X1,0
2.1. Dam system dynamics
In our approach we suppose that the inﬂows and outﬂows of each dam in the system can be approximated by
general FtX -predictable counting processes with unit jumps and let the inﬂow into dam i be Yin(i) (t). We assume that
the natural component of this has a deterministic intensity, λi (t) ≥ 0. The intensity of inﬂow components from other
dams are the result of our water transfer controls, u j,i (t) : j, i = 1, ..., d; j i . So for the ith dam the inﬂow process
has the following form:
t

Yin(i) (t) =

d
(i)
u j,i (s))I {Li (s) < N} ds + Min
(t),

(λi (s) +

0

j=1

(i)
where Min
(t) is a square integrable martingale with quadratic variation
t

(i)
Min
t =

d

(λi (s) +

0

u j,i (s))I {Li (s) < N} ds.
j=1

For the outﬂow process in each dam there is a natural component and components due to consumption and water
(i)
transfer controls. Let the outﬂow from dam i be Yout
(t) and let the intensity of evaporation from dam i be μi (t) =
μi (t, Xt ), such that the intensity depends on the joint state of the process. The intensity of outﬂows from water transfers
are ui, j (t) : i, j = 1, ..., d; j i and the intensity of outﬂow from consumption is the controllable consumption rate
Ci (t) = Ci (t, p(t), X), which depends on the current price of water and the intensity of customer demands. This will
be derived in the next section. So, in similar form to Yin(i) (t),
(i)
(t) =
Yout

t

d
(i)
ui, j (s))I {Li (s) > 0} ds + Mout
(t),

(μi (s) + Ci (s) +

0

j=1

(i)
where Mout
(t) is a square integrable martingale with quadratic variation

(i)
Mout
t =

t
0

d

(μi (s) + Ci (s) +

ui, j (s))I {Li (s) > 0} ds.
j=1

It follows that the approximate dynamics for the ith dam are governed by the equation
(i)
Li (t) = Yin(i) (t) − Yout
(t).

1376

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

It should be emphasized that the dynamics of each dam clearly depend on the dynamics of the other dams.
In essence by splitting each dam into N levels we are saying that the mean time between level changes of the
continuous ﬂow processes correspond with the mean time between jumps in our counting process approximations.
The martingale terms provide the random perturbation about this mean and, importantly, the mean of the martingale
terms is zero, such that,
⎡
⎤
d
⎢⎢⎢ t
⎥⎥⎥
(i)
u j,i (s))I {Li (s) < N} ds⎥⎥⎥⎦ ,
E Yin (t) = E ⎢⎢⎢⎣ (λi (s) +
0

and
E

(i)
Yout
(t)

⎡
⎢⎢⎢
= E ⎢⎢⎢⎣

t

j=1

d

(μi (s) + Ci (s) +

0

j=1

⎤
⎥⎥⎥
ui, j (s))I {Li (s) > 0} ds⎥⎥⎥⎦ .

2.2. Controlled dam system as a system of controlled Markov chains
The above approximation of the dam system dynamics allow us to make the following proposition with respect to
each dam in the system.
Proposition 2.3. Given the approximate dynamics for the ith dam, as stated in 2.1, in a system of d dams, the controlled
process for this dam is represented by a controlled Markov chain with N + 1 states and the matrix (N + 1) × (N + 1),
describing the inﬁnitesimal generator of the corresponding Markov chain,
Ai (t, p(t), ui,· (t), u·,i (t)) = Ai (t, C(t, p), ui,· (t), u·,i (t)), where Ai (t, C, ui,· , u·,i ) =
⎛
⎜⎜⎜−Ii [0, ·]
⎜⎜⎜⎜ Ii [0, ·]
⎜⎜⎜
⎜⎜⎜ ...
⎜⎜⎜ 0
⎜⎝
0

Oi [1, ·]
−(Oi [1, ·] + Ii [1, ·])
...
0
0

0
...
Oi [2, ·] ...
...
...
0
...
0
...

⎞
0
0
0
⎟⎟⎟
⎟⎟⎟
0
0
0
⎟⎟
...
...
... ⎟⎟⎟⎟ ,
⎟
Ii [N − 2, ·] −(Oi [N − 1, ·] + Ii [N − 1, ·]) Oi [N, ·] ⎟⎟⎟⎟⎠
−Oi [N, ·]
0
Ii [N − 1, ·]

where Ii [x, ·] = λi + j i u j,i and Oi [x, ·] = Ci + μi + j i ui, j when dam i is in state Xi = x and the joint state of the
other dams in the system are represented by a dot. One can say that Oi corresponds to the outﬂow and Ii to the inﬂow.
The column number corresponds to the current state of the ith dam and the column entries add to zero.
Proof. The proof of this proposition is accomplished in the same way as for the generator of a controlled Markov
chain for a single queueing system given by Miller [9]. The only diﬀerence is that the chains are linked via water
transfer controls and a price for the joint states, however, as all controls are FtX -predictable, this does not aﬀect the
proof.
3. Derivation of controlled demand functions
As already stated, the key innovation of this model is the use of a time and state dependent feedback control,
p(t, Xt ), to take into account the active seasonal demands of consumers. It is more intuitive and makes calculation
easier to ﬁnd p(t, Xt ) through the eﬀect it has on consumption in each dam. For the ith dam, the resulting controlled
demand is denoted Ci (t, p(t, Xt )) = C(t, p) for brevity. Here we show how we take the price of water into account
through controlled consumption. To be clear, we are looking for a single price structure for all users of the dam system.
So, considering the ith dam, let there be n sectors, or consumers, each with their own seasonal demand intensity,
x¯i,k (t), for k = 1, ..., n. In order to have some control on this demand intensity we want to set an optimal demand
intensity for each sector, which we denote xi,k , for k = 1, ..., n. Now we deﬁne in what sense we want this target to
be optimal by deﬁning the utility function as min xi,k fi,k (xi,k ) where fi,k (xi,k ) = α(xi,k − (1 − r) x¯i,k (t))2 + p(t)xi,k , α is a

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

1377

parameter which sets a limit to consumption above net natural ﬂow and r is a minimum demand reduction target. To
ﬁnd the minimum we diﬀerentiate and solve for xi,k , giving
xi,k (t, p(t)) = ((1 − r) x¯i,k (t) −

p(t)
p(t)
)I (1 − r) x¯i,k (t) −
≥0 .
2α
2α

This is the optimal intensity of demand for the kth sector. It follows that for the ith dam, the total optimal intensity of
demand is
n

Ci (t, p(t)) =

xi,k (t, p(t)).

(1)

k=1

Recalling that p(t) = p(t, Xt ), we now have a vector of optimal demand intensities for the ith dam.
Since we also know that p(t) ∈ [pmin , pmax ], we can now also deﬁne maximum and minimum optimal demand
intensities for the ith dam in the following way:
n

Ci,max (t) =

n

xi,k (t, pmin ) ≤ Ci (t) =
k=1

n

xi,k (t, p) ≤ Ci,min (t) =
k=1

xi,k (t, pmax ).

(2)

k=1

These equations allow us to deﬁne piecewise functions for the solution of Ci (t, p(t)) in the dynamic programming
equations.
4. Dynamic programming and optimal control
In Miller [9], the solution for the optimal control of a single server queueing system is developed via dynamic
programming. This method can be extended to systems deﬁned by multiple controlled Markov chains. This will be
developed in this section, however, we ﬁrst detail the basic elements of the dynamic programming based method of
solving for optimal controls on a single dam with the single control p(t).
4.1. General performance criterion
A performance criterion provides some restriction on the way the Markov chain is allowed to behave and still be
considered optimal. Let f0 (s, p(s), X s ) be the running cost function when the chain is in state X s at time s ∈ [0, T ],
T < ∞. Then, a general performance criterion has the form
T

min J[p(·)], J[p(·)] = E φ0 (XT ) +
p(·)

f0 (s, p(s), X s )ds ,

0

where φ0 ∈ RN+1 , ·, · is the standard inner product, φ0 (XT ) = φ0 , XT and f0 (s, p(s), X s ) = f0 (s, p(s)), X s . The
deﬁnition of f0 (s, p(s), X s ) gives rise to the deﬁnition of a vector of running cost functions of the Markov chain,
f0∗ (s, p(s)) = ( f0 (s, p(s), e0 ), ..., f0 (s, p(s), eN )).
Assumption 4.1. For each ei , i = 0, 1, ..., N, the elements of f0∗ (s, p(s)) are bounded below and continuous on
[0, T ] × [pmin , pmax ].
4.2. Value function
The value function of this Markov chain is really a function which gives the total cost of control starting at time
t ∈ [0, T ] and state Xt = x. It has the form
T

V(t, x) = inf J[p(·)|Xt = x], J[p(·)|Xt = x] = E φ0 (XT ) +
p(·)

f0 (s, p(s), X s )ds|Xt = x .

(3)

t

Assumption 4.1 ensures that this inﬁmum exists.
We now represent V(t, x) as V(t, x) = φ(t), x , where φ(t) = (φ0 (t), φ1 (t), ..., φN (t))T ∈ RN+1 is some measurable
function, recalling that the x are unit vectors forming a basis in Rn+1 .

1378

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

4.3. Dynamic programming
ˆ
Now we consider φ(t),
of the same form as φ(t), and deﬁne the dynamic programming equation with respect to
ˆφ(t):
ˆ A(t, p(t)) · x + f0 (t, p(t)), x ]
0 = φˆ (t), x − min p∈Pˆ [ φ(t),
ˆ
ˆ
= φ (t), x − min p∈Pˆ H(t, φ(t),
p(t), x)
(4)
ˆ
= φˆ (t), x − H (t, φ(t),
x),
ˆ ) = φ0 [12, 13, 14]. Since H(t, φ(t),
ˆ
ˆ for
with boundary condition φ(T
p(t), x) is continuous in (t, p(t)) and aﬃne in φ,
ˆ
any (t, x) ∈ [0, T ] × S , H (t, φ(t),
x) is Lipschitz in φˆ [9].
Proposition 4.2. With Assumption 4.1 holding, equation (4) has a unique solution on [0, T ].
Proof. The result follows from well known results on the solutions of ordinary diﬀerential equations.
Remark 4.3. If we now let x = e(i) , i = 0, 1, ..., N, then we get a system of ODE’s
dφˆ i (t)
ˆ e(i) ), i = 0, 1, ..., N.
= −H (t, φ(t),
dt

(5)

4.4. Optimal control
Given that the system in section 4.3 can be solved, then the optimal control is characterized by the following
theorem [12, 9].
ˆ be the solution of the system of equations (5), then for each (t, x) ∈ [0, T ] × S there exists
Theorem 4.4. Let φ(t)
¯
ˆ
p(t), x) achieves a minimum at p0 (t, x). Then
p0 (t, x) ∈ P such that H(t, φ(t),
ˆ
ˆ X0t ) such that V(t, x) = J[ p(·)|X
ˆ
x.
1. There exists an FtX -predictable optimal control, p(t,
t = x] = φ(t),
2. The optimal control can be chosen as Markovian, that is
ˆ
p(t), Xt− ).
p(t,
ˆ X0t ) = p0 (t, Xt− ) = arg min H(t, φ(t),
p∈P¯

4.5. Extension to d dams
There are two ways to extend these results to d dams. The ﬁrst is to ﬁnd the inﬁnitesimal generator of the
controlled Markov chain for the entire system, writing the entire set of possible joint states as a vector and solving as
in section 4.3. While this is possible it presents practical problems. Firstly, the generator is of the form
G = A1 ⊗ I ⊗ I ⊗ ... ⊗ I + I ⊗ A2 ⊗ I ⊗ ... ⊗ I + ... + I ⊗ I ⊗ ... ⊗ Ad−1 ⊗ I + I ⊗ I ⊗ ... ⊗ I ⊗ Ad ,
which is a matrix of dimensions (N + 1)d × (N + 1)d . With a large number of states and dams this would be extremely
cumbersome to deal with. There is also no existing operation to make the set of joint states into a vector with the
elements in the correct position for calculation, although it can be done in an ad hoc fashion. The second method does
not have these problems and relies on Theorem 4.4.
We consider the value function V(t, x) = φ(t), x1 ⊗x2 ⊗...⊗xd , where φ(t) is a tensor of depth d. From Theorem 4.4
ˆ x , where φ(t)
ˆ has the same
we know that there exist optimal Markovian controls that satisfy V(t, x) = φ(t), x = φ(t),
form as φ(t). So, considering that
dφ(t), X
d φ(t), X
=
+ φ(t), A1 X1 ⊗ X2 ⊗ ... ⊗ Xd + X1 ⊗ A2 X2 ⊗ ... ⊗ Xd + ... + X1 ⊗ X2 ⊗ ... ⊗ Ad Xd ,
dt
dt
we minimize φ(t), X , taking into account the depth-d tensor or performance criteria, f0 (t, p(t), ul,m (t)), and solve the
resulting system of ODE’s:
dφ(t), X
= − min [ φ(t), A1 X1 ⊗ X2 ⊗...⊗ Xd + X1 ⊗ A2 X2 ⊗...⊗ Xd +...+ X1 ⊗ X2 ⊗...⊗ Ad Xd + f0 (t, p(t), ul,m (t)), X ].
p(·),ul,m (·)
dt
(6)
where we use unit vectors e(k)
,
i
=
1,
...N
for
x
,
k
=
1,
...,
d
and
u
(t)
represents
all
ﬂow
controls.
The
actual
method
k
l,m
i
of computing this will be considered in Section 6.

1379

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

5. Performance criteria
Performance criteria deﬁne in what way we want the dam management policy to be optimal. For a problem with
many dams we consider four diﬀerent performance criteria. The ﬁrst type gives the diﬀerence squared of the optimal
consumption in each joint state and in each dam, and the total customer demand each dam. For a d dam system, we
have
J1 (t, p(t), Xt )

=
·

C1X (t) −

n
k=1

Jd (t, p(t), Xt )

=

CdX (t)

−

n
k=1

x1,k (t)

2

(7)
2

xd,k (t) ,

where each of the Ji , i = 1, ...d are tensors of depth d.
The second type of performance criteria concerns controlled transfers between dams. We consider the diﬀerence
squared of the natural inﬂows and transfers into each dam and the customer demand and evaporation in each dam. For
a d dam system the criteria have the form
J1+d (t, u·,1 (t), Xt )

=
·

λ1 (t) +

d
j=1

u j,1 (t) −

n
k=1

J2d (t, u·,d (t), Xt )

=

λd (t) +

d
j=1

u j,d (t) −

n
k=1

x1,k (t) − μ1 (t)

2

(8)
2

xd,k (t) − μd (t) ,

where each of the Ji+d , i = 1, ...d is a tensor of depth d, recalling that u j,· (t) = u j,· (t, Xt ). The idea here is to maintain
balance between inﬂows and outﬂows via these transfers. This simple quadratic criteria is just to demonstrate the
method but clearly more realistic criteria could be developed. Also, we treat the transfer intensities separately in the
performance criteria but what we would observe is the diﬀerence between these intensities as a single ﬂow intensity.
This is explained in section 7.
The third type of performance criteria is a single criterion which gives the sum of the average probability that the
level of each dam in the system falls below level M ≤ N over the interval [0, T ]:
d

J2d+1 (t, p(t), ul,m (t), Xt ) =

⎛
⎡
⎜⎜⎜ p,u ⎢⎢⎢
⎜⎜⎝E ⎢⎢⎣

l=1

T M
0

⎤⎞
⎥⎥⎟⎟
Xl,k (s)ds⎥⎥⎥⎦⎟⎟⎟⎠ .

(9)

k=1

As with the other criteria, this is a tensor of depth d.
Now we deﬁne f0 (t, p(t), ul,m (t), Xt ) = 2d+1
k=1 Jk (·). This is then used in the dynamic programming equation. A
ﬁnal criterion concerns the terminal state. We consider the sum of the probabilities that the level of each dam is below
level M ≤ N at time T :
⎤⎞
⎛
⎡M
d ⎜
⎥⎥⎟⎟
⎜⎜⎜ p,u ⎢⎢⎢⎢
Xl,k (T )⎥⎥⎥⎦⎟⎟⎟⎠ .
(10)
J2d+2 (t, p(t), ul,m (t), Xt ) =
⎜⎝E ⎢⎣
l=1

k=1

This last criterion gives us the terminal conditions for the solution of the system of ODE’s given at (6).
In this paper we consider the control resources of the entire dam system to be unconstrained, however, it is possible
to consider the problem with constrained control resources. This type of work has been done by Miller et.al. [10] and
uses the Lagrangian approach to ﬁnd the optimal weighting of each criterion. This will be implemented in our further
research into dam system management.
6. Computational methods
With the results of 4.5 and 5, we can solve the system numerically. So far, all the numerical work we have done
has been using Mathematica 7. Clearly the numerical solution of this problem will be implemented diﬀerently in

1380

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

diﬀerent languages, however, there are some common issues to deal with in any implementation. The ﬁrst is how to
handle expressions like
φ(t), A1 X1 ⊗ X2 ⊗ ... ⊗ Xd + X1 ⊗ A2 X2 ⊗ ... ⊗ Xd + ... + X1 ⊗ X2 ⊗ ... ⊗ Ad Xd ,
recalling that φ(t) is a tensor of depth d and all of the Xk are unit vectors.
In Mathematica 7 this is handled via the repeated use of a generalized inner product such that
φ(t), A1 X1 ⊗ X2 ⊗ ... ⊗ Xd = Xd , Xd−1 , ..., X2 , A1 X1 , φ(t) ...

.

This may be an abuse of notation since an inner product gives a scalar, however, the implementation produces the
correct result. In general, this calculation would be carried out as follows, where * refers to the transpose operation:
Xd . Xd−1 . .... (X2 . (A1 X1 .φ(t))∗ )∗ ...

∗ ∗

.

All other calculations involving the extraction of a the tensor element corresponding to a particular joint state, or
operations on a particular state, are handled in the same way.
Another issue is the minimization operation involved in each ODE in the system. In the case we have with the
integral performance criteria given, these minimizations can all be carried out prior to solving the ODE system. Essentially we have to minimize over Cl (t, p(t), Xt ) and ul.m (t, Xt ) in (6). Due to the particular structure we have, we simply
take the partial derivatives with respect to these controls and minimize, since the minimizations will be separable. If
the performance criteria were not such nice integral criteria we may have to minimize during the solution of the ODE
system, resulting in far more complex calculations.
In the case we have, the actual time of solution of the ODE system is much less than that taken to carry out
the minimizations. Since these are done prior to the ODE system solution, they can be done separately in parallel.
Mathematica 7 has good support for parallelization and we have parallelized the minimization operations. As yet, this
has only been tested on a dual core machine but the results are promising. We have access to a computer cluster and
will implement the program on this cluster and report on the results when available. Mathematica has been useful for
experimenting and prototyping but in future work we plan to rewrite this program in Fortran or C.
7. Numerical example
We include a two dam system model as a numerical example of our results so far. Table 1 is a list of parameters and
functions corresponding to those deﬁned in previous sections and a value K. The values of the performance criteria for
the probability of the dams falling below level M during and at the end of the control interval are multiplied by K to
make the solutions more sensitive to these criteria. The ﬁrst subscript refers to the ﬁrst or second dam as appropriate.
The values given for α1 and α2 correspond to an allowance of an extra 20% consumption above net natural ﬂows in
each dam. The performance criteria (7), (8) and (9) are included in the ODE system deﬁnition, while (10) is dealt
with by the terminal conditions. On a dual-core processor desktop, for three runs the calculations took on average
575.18 CPU seconds in serial and 71.39 CPU seconds with some parallelization, an increase in speed of around eight
times.
Figures 1 to 3 give the type of price structure achieved, noting that this is not a surface but a lattice of prices.
It is clear that the slightly higher demand on dam one seems to bias the price structure to behave more responsively
to changes in dam one, which is reasonable. The structure is also quite stable, except at the end. With the control
objectives largely achieved by t = 1, the prices move towards the minimum.
A similar result holds for transfers between dams. Figure 4 gives the intensity of selected ﬂows between dam one
and two. This is deﬁned as u1,2 (t) − u2,1 (t) taken at the states speciﬁed in ﬁgure 4. That is, it is the net intensity of
ﬂows between the dams. If the intensity is positive, then it is a ﬂow from dam one to two and if negative, from dam

1381

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

two to one. This graph shows that there is a clear bias toward transfers into dam one where the demand is higher. One
can also observe the quadratic nature of the performance criteria at work. This may not be realistic but we are simply
demonstrating the method at this stage. We will work on better performance criteria in our future research.
Figure 5 shows the eﬀects of these controls on the total demand. It shows the total original demand for the system
and a weighted average of the total controlled demand. The weighted average is given by
⎛
⎞
2 ⎜ N N
⎟⎟⎟
⎜⎜⎜
⎜⎜⎝
P {Dam l is in state [i, j] at time t} × Cl [i, j](t)⎟⎟⎟⎠ .
l=1

i=1 j=1

The probabilities are found by solving the Kolmogorov forward diﬀerential equations for each dam given the solution
to the system of equations (6). It clearly shows that on average there would be a signiﬁcant reduction in water use in
the system using this method of feedback price control.

Table 1: Model parameters and functions.

Parameters
N = 15
M=5
n1 = 3
n2 = 3
pmax = 1.75
pmin = 1.00

Parameters
r1 = r2 = 0.25
α1 = 0.91
α2 = 1.82
K = 150

Natural ﬂows
λ1 (t) = sin(2πt) + 10
λ2 (t) = sin(2πt + π6 ) + 9
μ1,N (t) = − sin(2πt) + 4.5
μ2,N (t) = − sin(2πt + π6 ) + 3.5

1.75

Demands
x1,1 (t) = cos(2πt) + 4.5
x1,2 (t) = 0.3 cos(2πt) + 4.5
x1,3 (t) = 0.5 cos(2πt) + 5
x2,1 (t) = cos(2πt) + 5
x2,2 (t) = 0.4 cos(2πt) + 4
x2,3 (t) = 0.3 cos(2πt) + 4

1.75

Price $ 1.5
1.25
1.
1 2
3 4
5 6
7 8
9 10
Dam 1 level
11 12

13 14

15

1

2

3

4

Figure 1: Prices at t=0.

5

15
14
13
12
11
10
9
8
7 Dam 2 level
6

Price $ 1.5
1.25
1.
1 2
3 4
5 6
7 8
9 10
Dam 1 level
11 12

13 14

15

1

2

3

4

5

15
14
13
12
11
10
9
8
7 Dam 2 level
6

Figure 2: Prices at t=0.5.

8. Conclusion
In this paper we have developed a model for managing water use in a dam system via a dynamic feedback price
control. We have shown via a numerical example that the resulting price structure is ’reasonable’ in that the prices
are generally high when the water level is low and low when high, taking into account the bias toward the dam with
greater demand. In this article we consider users without connection to a dam suited to their particular needs. More
realistic is the presence of a relation between a particular customer and a particular dam or even the variable and
controllable structure of customer-dam relations.

1382

Boris M. Miller et al. / Procedia Computer Science 4 (2011) 1373–1382

1.75

11 12

13 14

15

1

2

3

4

5

State 10,1
0.5

State 10,3
State 10,6

0.0
State 10,9

Dam 1

1.
1 2
3 4
5 6
7 8
9 10
Dam 1 level

15
14
13
12
11
10
9
8
7 Dam 2 level
6

Dam 2 flows

1.0

Price $ 1.5
1.25

State 10,12

0.5

State 10,15
1.0
0.0

0.2

0.4

0.6

0.8

1.0

Time years

Figure 3: Prices at t=1.

Figure 4: Selected ﬂows between dams 1 and 2.

35

Demand ML

30
25
20
15
10

Total demand

0.0

0.2

0.4

0.6

0.8

1.0Controlled demand

Time years

Figure 5: Total original demand and controlled demand.

Future work in this area will introduce more seasonable variability to the natural inﬂows and outﬂows. We will
also consider the problem under control resource constraints. At present we have allowed the ﬂows between dams
to be random, however, we want to schedule ﬂows between dams to make it more realistic. This will result in a
hybrid model. Alongside this work will be further research on computational methods using cluster computing and
parallelization. The results of this work will be reported in appropriate journals as our research proceeds.
9. References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]

E. Altman, Constrained Markov Decision Processes, Chapman & Hall/CRC, Boca Raton, FL, 1999.
D. Bertsekas, S. Shreve, Stochastic Optimal Control: The Discrete-Time Case, Athena Scientiﬁc, Belmont, MA, 1996.
M. Kitaev, V. Rykov, Controlled Queueing Systems, CRC, Boca Raton, FL, 1995.
M. Faddy, Optimal control of ﬁnite dams: Discrete (2-stage) output procedure, Journal of Applied Probability 11 (1) (1974) 111–121.
L. Yeh, L. Hua, Optimal control of a ﬁnite dam: Wiener process input, Journal of Applied Probability 24 (1) (1987) 186–199.
M. Abdel-Hameed, Optimal control of a dam using p λ, τ M policies and penalty cost when the input process is a compound poisson process
with positive drift, Journal of Applied Probability 37 (2) (2000) 408–416.
J. Bae, S. Kim, E. Lee, Average cost under the p λ, τ M policy in a ﬁnite dam with compound poisson inputs, Journal of Applied Probability
40 (2) (2003) 519–526.
V. Abramov, Optimal control of a large dam, Journal of Applied Probability 44 (1) (2007) 249–258.
B. Miller, Optimization of queuing system via stochastic control, Automatica 45 (2009) 1423–1430.
B. Miller, G. Miller, K. Siemenikhin, Torwards the optimal control of markov chains with constraints, Automatica 46 (2010) 1495–1502.
B. Miller, G. Miller, K. Siemenikhin, Control of markov chains with constraints, in: Proceedings of the VIII International Conference ”System
Identiﬁcation and Control Problems” SICPRO ’09, Moscow, 2009.
L. Aggoun, R. Elliot, J. Moore, Hidden Markov Models: Estimation and Control, Springer-Verlag, New York, 1995.
D. Bertsekas, Dynamic Programming and Stochastic Control, Academic Press, London, 1976.
R. Howard, Dynamic Programming and Markov Processes, John Wiley and Sons, New York, 1960.

