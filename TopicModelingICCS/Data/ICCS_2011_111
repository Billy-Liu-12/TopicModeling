Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1828–1833

Diﬀusive Wave Approximation to the Shallow Water Equations:
Computational Approach
Nathan Colliera , Hany Radwana , Lisandro Dalcinb , Victor M. Caloa
a Applied

Mathematics and Computational Science and Earth and Environmental Sciences and Engineering
King Abdullah University of Science and Technology
Thuwal, Saudi Arabia
b Centro Internacional de M´
etodos Computacionales en Ingenier´ıa
Santa Fe, Argentina

Abstract
We discuss the use of time adaptivity applied to the one dimensional diﬀusive wave approximation to the shallow
water equations. A simple and computationally economical error estimator is discussed which enables time-step size
adaptivity. This robust adaptive time discretization corrects the initial time step size to achieve a user speciﬁed bound
on the discretization error and allows time step size variations of several orders of magnitude. In particular, in the one
dimensional results presented in this work feature a change of four orders of magnitudes for the time step over the
entire simulation.
Keywords: time adaptivity, shallow water ﬂow, overland ﬂow

1. Introduction
The diﬀusive wave approximation of the shallow water equations (DSW) is used to model overland ﬂows such
as ﬂoods, dam breaks, and ﬂows through vegetated areas. The shallow water equations (SWE) are obtained from
the full Navier-Stokes equations by introducing the following simplifying assumption: the vertical momentum scales
are small relative to those of the horizontal momentum, that is, due to depth restrictions the velocity structures in the
horizontal direction are much larger than the ones in the vertical one. This assumption reduces the vertical momentum
equation to a hydrostatic pressure relation, which is integrated in the vertical direction and results in a two dimensional
system of equations known as the shallow water equations. Further details and discussion of the scaling assumptions
made can be found in [1]. The DSW equation is a further simpliﬁcation of the shallow water equations. The DSW
equation assumes that the horizontal momentum can be linked to the water height by an empirical relation such as
Manning’s equation [2]. Thus, the DSW reduces to a scalar equation which resembles nonlinear diﬀusion. While
the nonlinearities present challenges, the DSW equation is a simpler framework with which economically simulate
shallow ﬂows.
In this paper, we address computational aspects of solving the DSW equation, speciﬁcally we focus on time
integration and adaptivity. We use the generalized-α method for time integration, which is a second-order accurate
method with controlled dissipation for high frequencies [3, 4]. We describe a simple and robust error estimator which
can be used to guide time adaptivity ﬁrst introduced and described in detail in [5]. Time adaptivity in the solution
of DSW is useful for two reasons. First, the adaptivity aides in determining the initial time step. After selecting an
initial step size, the algorithm will automatically reduce it to acceptable tolerances, relative to the quality of the error

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.198

Nathan Collier et al. / Procedia Computer Science 4 (2011) 1828–1833

1829

estimator. Second, a signiﬁcant amount of computation may be avoided by allowing the time step to change, while
keeping the error under a user-prescribed tolerance. Our numerical results show that in 1D tests, the time step can
change several orders of magnitude over the simulation time. In particular, the simulations presented herein, after the
initial time-step size adjustment, the time-step size varies by four orders of magnitude.
2. DSW Equations
As mentioned in the introduction, the DSW strong form is obtained by special assumptions which simplify the
shallow water equations, leading to the following initial/boundary value problem on the domain Ω for times t ∈ [0, T ]
[6],
⎧
⎪
⎪
u˙ − ∇ · (κ(u, ∇u)∇u) = f
on Ω × (0, T ]
⎪
⎪
⎪
⎪
⎪
⎪u = u0
on Ω × {t = 0}
⎨
(1)
⎪
⎪
⎪
(κ(u, ∇u)∇u) · n = BN
on ΓN × (0, T ]
⎪
⎪
⎪
⎪
⎪
⎩u = BD
on ΓD × (0, T ]
where u is the water height, u˙ is its time derivative, f is a forcing function such as rainfall acting as a source or inﬁltration acting as a sink, u0 is the initial condition, BN and BD are the Neumann and Dirichlet conditions, respectively,
and the diﬀusion coeﬃcient κ is given by
(u − z)αM
.
κ(u, ∇u) =
C f |∇u|1−γM
The bathymetry is represented by the function z, and α M and γ M are constants which specify the empirical method
used to obtain the DSW equation. Following [6] we use parameters corresponding to Manning’s formula, α M = 35
and γ M = 12 . The function C f represents Manning’s coeﬃcient which is also known as a friction coeﬃcient. Typical
values are experimentally measured and available in the literature, but for the sake of simplicity we assume C f = 1.
The equation is doubly degenerate in that the diﬀusion disappears in cases where u = z or when ∇u becomes
large such as in regions where the solution represents a wave front. This creates diﬃculties in developing a numerical
solution technique which can handle these diﬃculties. These properties are discussed in detail in [6].
The weak form for the DSW equation is to ﬁnd u ∈ V such that for every ∀w ∈ W,
B(w, u) = w,

∂u
∂t

Ω

+ (∇w, κ(u, ∇u)∇u)Ω + (w, f )Ω = 0

(2)

where (·, ·)Ω refers to the L2 inner product and the trial, V, and weighting, W, spaces are appropriately chosen for
Eq. 2 to be well deﬁned [6]. A discrete approximation to the solution is obtained constructing a Galerkin approximation appropriately choosing proper subspaces of Vh and Wh of V and W, respectively [7]. The discrete function
space chosen in the numerical example described in section 4 is obtained using 1024 linear elements, while the L2
inner product over the the domain is approximated using Gaussian quadrature, where four Gauss points per element
are used.
3. Time Discretization
We advance in time using the generalized-α method [3, 4]. The method was originally developed in [3] for
structural dynamics, which is of second order in time. Subsequently it was extended for ﬁrst order problems in time in
[4]. This time-stepping methodology has been successfully applied to several nonlinear problems such as, turbulent
simulations [4, 8], and more recently ﬁrst time adaptive technique was proposed for the Cahn-Hilliard equations [9]
and subsequently used in [10] to model bubble formation and evolution.

1830

Nathan Collier et al. / Procedia Computer Science 4 (2011) 1828–1833

The generalized-α method for ﬁrst order in time problems is stated as follows: given (un , u˙ n ), ﬁnd (un+1 , u˙ n+1 , un+α f , u˙
such that
R(un+α f , u˙ n+αm ) = 0,
un+α f = un + α f (un+1 − un ) ,
u˙ n+αm = u˙ n + αm (˙un+1 − u˙ n ) ,
un+1 = un + Δt ((1 − γ) u˙ n + γu˙ n+1 ) ,

(3)
(4)
(5)
(6)

where Δt = tn+1 − tn and α f , αm , and γ are real-valued parameters. It has been shown in [4] that for a linear
model problem, unconditional stability is attained if αm ≥ α f ≥ 12 , and second order accuracy can be achieved with
γ = 12 + αm − α f . The method can be stated as a one-parameter method, where αm , α f and γ can all be expressed in
terms of a parameter known as spectral radius, ρ∞ . We select αm = 56 and α f = γ = 23 which correspond to ρ∞ = 12 .
The generalized-α algorithm is detailed in Alg. 1. The algorithm is a predictor/multi-corrector method where the
corrector steps are indicated by a superscript index inside of parenthesis.
Algorithm 1 Generalized-α method
1:
2:
3:

Compute predictors [4, 9] u(0)
˙ (0)
n+1 = un and u
n+1 =
i=1
while i < maximum iterations do

4:

(i−1)
u(i)
n+α f = un + α f un+1 − un

5:

u˙ (i)
˙ n + αm u˙ (i−1)
˙n
n+αm = u
n+1 − u

6:

(i)
R(i)
˙ (i)
n+αm )
n+1 = R(un+α f , u

7:

(i)
Kn+1
= αm

8:

(i)
(i)
Solve Kn+1
Δ˙u(i)
n+1 = −Rn+1

9:
10:
11:
12:
13:
14:
15:

∂R(u(i)
u(i)
n+α f ,˙
n+αm )
∂˙un+αm

+ α f γΔt

γ−1
˙n
γ u

∂R(u(i)
u(i)
n+α f ,˙
n+αm )
∂un+α f

u˙ (i)
˙ (i−1)
u(i)
n+1 = u
n+1 + Δ˙
n+1
(i−1)
u(i)
=
u
+
γΔt
u(i)
n Δ˙
n+1
n+1
n+1
if R(i)
n+1 ≤
stop
end if
i=i+1
end while

α

R(0)
n+1 then

3.1. Time adaptivity
Time step adaptivity is achieved by a simple error predictor for ﬁrst order methods [5]. Given a un , u˙ n , and Δtn the
solution at tn+1 may be computed given the generalized-α algorithm described in Alg. 1. For ρ∞ = 12 , we can then use
u˙ n+1 to make a ﬁrst order approximation of un+1
u¯ n+1 = un + Δtn u˙ n+1 .

(7)

which is obtained by manipulating a ﬁrst-order Taylor expansion from un+1 to un . With this inexpensive approximation
we can estimate the error as
u¯ n+1 − un+1
En+1 =
(8)
un+1

Nathan Collier et al. / Procedia Computer Science 4 (2011) 1828–1833

1831

and adapt the time-step size using the typical equation [9],
Δtn+1 = ρ

1
2

En+1

Δtn .

(9)

Following [9], the factor of safety ρ was chosen to be 0.9 and the tolerance to be 10−3 . The time step is rejected
if En+1 > and recomputed once Δt is modiﬁed. We added an additional constraint in the implementation of this
algorithm which restricts the growth of the time step at a given time,
Δtn+1
1
≤ 5.
(10)
≤
10
Δtn
We found this last constraint to be useful in situations where the step size grows and then suddenly must reduce.
4. Numerical Results
The spatial, linear ﬁnite elements, and temporal, generalized-α discretizaitons were applied to the solution of a
1D problem, which models a ﬁcticuous dam break, arrested by a series of two dikes. The bathymetry is shown in
Fig. 1(a), indicated by grey shading. The source of water is modeled by a Neumann boundary condition on the left
side and a zero Dirichlet condition on the right. This example illustrates how the solution of the DSW can beneﬁt
from adaptive time stepping.
Figures 1(a)-(h) are a graphical representation of the solution obtained by our numerical simulation. As time
progresses, the downhill ﬂow (Figs. 1(a)-(c)) is arrested by a large dike (Fig. 1(d)) where it pools until the water level
overtakes the dike (Fig. 1(e)). A second, smaller dike is reached after a long plain where the ﬂow is arrested again
(Figs. 1(f)-(g)) until ﬁnally the second dike is also overtaken (Fig. 1(h)).
Figure 2 emphasizes the usefulness of time adaptivity in this problem. The initial time step chosen was Δt = 0.1
which initially is 3 orders of magnitude too large. The adaptive step process assists in choosing this initial step in that
values which are too large are cut to acceptable sizes. In this case the adaptation reduces the time step to Δt = 3 · 10−3 .
Alternatively an initial time step which is too small, will quickly grow. Figure 3 shows a comparison between the
evolution of two initial step sizes, Δt = 1.0 · 10−1 and Δt = 1.0 · 10−8 . In both situations, the time-step size evolves
over the solution time with good agreement.
From step number 2-50, the time step grows two orders of magnitude where it then remains roughly constant until
step 145 (Fig. 1(c)). At this point, the ﬂow is being slowed down by the ﬁrst dike and begins to pool. The water height
is not changing drastically during this phase of the simulation and so the time step grows further until the water begins
to ﬂow over the ﬁrst dike, step number 170. Large and sudden changes in the water height require a smaller step size
and so the step is reduced again. As the simulation continues, two other size changes are seen,
1. as the ﬂow hits the bottom of the ﬁrst dike on the right side (around step number 200)
2. as the ﬂow passes over the second dike (around step number 260).
We observe that time adaptivity is a great advantage when ﬂow must pass sharp obstacles such as these dikes.
While each subﬁgure is titled with the time at which the solution is displayed, these times do not correspond to
real ﬂooding events. The frictional coeﬃcient, C f , in the DSW equations is taken here to be unity. This choice allows
us to focus on the time adaptive scheme where ﬂow velocity is controlled by topographic gradients. Notice that in
spite of have a constant C f the diﬀusivity is not constant, due its non-linear dependence on both the water height, u,
and its gradient ∇u.
5. Conclusions
We brieﬂy described the diﬀusive wave approximation to the shallow water equations and presented a numerical strategy for their approximation using a Galerkin ﬁnite element procedure for spatial discretization and the
generalized-α method for temporal discretization. We discussed a new error estimator which can be used to economically enable time adaptivity. This adaptivity proves useful even in simple 1D problems, while being robust.
This work is an initial study on solution strategies for the DSW equation for the modeling of 2D overland ﬂows. In
future work, we will both extend the numerical technique to 2D as well as incorporate methods for more accurately
determining and utilizing accurate frictional coeﬃcients.

1832

Nathan Collier et al. / Procedia Computer Science 4 (2011) 1828–1833

(a) t = 0.4, step = 25

(b) t = 3.9, step = 90

(c) t = 7.5, step = 145

(d) t = 13.8, step = 163

(e) t = 23.8, step = 184

(f) t = 26.0, step = 195

(g) t = 35.5, step = 235

(h) t = 48.0, step = 275

Figure 1: Time sequence of solutions to DSW with bathymetry shown in grey and the water ﬂow shown in blue. This
sequence models the arrest of a dam break by a series of dikes.
6. References
[1] C. B. Vreugdenhil, Numerical Methods for Shallow-water Flow, Kluwer Academic Publishers, 1994.
[2] V. T. Chow, Open-Channel Hydraulics, The Blackburn Press, 2009.
[3] J. Chung, G. M. Hulbert, A time integration algorithm for structural dynamics with improved numerical dissipation: The generalized-α
method., Journal of Applied Mechanics 60.
[4] K. E. Jansen, C. H. Whiting, G. M. Hulbert, A generalized-α method for integrating the ﬁltered navier-stokes equations with a stabilized ﬁnite
element method, Computer Methods in Applied Mechanics and Engineering 190 (3-4) (2000) 305 – 319.
[5] N. Collier, L. Dalcin, D. Ketcheson, A. Ahmadia, V. M. Calo, An error estimator for the ﬁrst order generalized-α method, in preparation.
[6] M. Santillana, C. Dawson, A numerical approach to study the properties of solutions of the diﬀusive wave approximation of the shallow water
equations, Journal of Computational Geosciences.
[7] T. Hughes, The Finite Element Method, Dover, Mineola, New York, 2000.
[8] Y. Bazilevs, V. M. Calo, J. Cottrell, T. J. R. Hughes, A. Reali, G. Scovazzi, Variational multiscale residual-based turbulence modeling for
large eddy simulation of incompressible ﬂows, Computer Methods in Applied Mechanics and Engineering 197 (1-4) (2007) 173–201.
[9] H. Gomez, V. M. Calo, Y. Bazilevs, T. J. R. Hughes, Isogeometric analysis of the Cahn-Hilliard phase-ﬁeld model, Computer Methods in
Applied Mechanics and Engineering 197 (49-50) (2008) 4333–4352.
[10] H. Gomez, T. J. R. Hughes, X. Nogueira, V. M. Calo, Isogeometric analysis of the isothermal Navier-Stokes-Korteweg equations, Computer
Methods in Applied Mechanics and Engineering 199 (2010) 1828.

Nathan Collier et al. / Procedia Computer Science 4 (2011) 1828–1833

Figure 2: The evolution of the time step growth over the simulation

Figure 3: The evolution of the time step growth over the simulation

1833

