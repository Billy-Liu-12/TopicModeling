Available online at www.sciencedirect.com

ScienceDirect
Procedia Computer Science 108C (2017) 1135–1144

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Higher
Higher accuracy
accuracy protein
protein multiple
multiple sequence
sequence alignments
alignments
by
genetic
algorithm
Higher accuracy by
protein
multiple
sequence alignments
genetic
algorithm
by genetic algorithm
Narayan Beheraa,b*, Jeevitesh. M.Sa, Justin Josea, Krishna Kantc, Alpana

a
a
c
c
d , Krishna Kant , Alpana
Narayan Beheraa,b*, Jeevitesh.
M.S
, Justin
Jose
Dey
and
Javed
Mazher
d a
a
Deyc andM.S
Javed
Mazher
Narayan Beheraa,b*, Jeevitesh.
, Justin
Jose
, Krishna Kantc, Alpana
c
d
a
Institute of Bioinformatics andDey
Applied
Biotechnology,
Electronics city, Bangalore, 560100,India
and
Javed Mazher
a

b
Institute of
and Applied
Department
of Bioinformatics
Physics, Dayananda
Sagar
b
a
Department
of Physics, Dayananda Sagar

Biotechnology,
Electronics
city,Road,
Bangalore,
560100,India
University,
Kudlu
Gate, Hosur
Bengaluru,
560068,
University,
Kudlu
Gate,
Hosur
Road,
Bengaluru,
560068,
India
Institute of Bioinformatics and Applied Biotechnology,
Electronics city, Bangalore, 560100,India
c
b
India
Department
of
Information
Technology,
Electronics
Niketan,
6
CGO
Complex,
New
Delhi,
Lodhi
Department
of Physics, Dayananda Sagar University, Kudlu Gate, Hosur Road, Bengaluru, 560068,
c
Department of Information Technology,
Electronics
Niketan,
6
CGO
Complex,
New
Delhi,
Lodhi
Road,
110003,
India
India
c
Road,
110003,
and India
Department of Information Technology,
Electronics
Niketan, 6 CGO Complex, New Delhi, Lodhi
d
and
Department of Physics, KingRoad,
Faisala
University,
110003,
India Al-Ahasa, 31982, Saudi Arabia
d
Department of Physics, King Faisalaand
University, Al-Ahasa, 31982, Saudi Arabia
d
Department of Physics, King Faisala University, Al-Ahasa, 31982, Saudi Arabia

Abstract
Abstract
A Multiple sequence alignment (MSA) gives insight into the evolutionary, structural and functional
A
Multiple sequence
alignment
(MSA) gives
insight
into the
evolutionary,
and of
functional
relationships
among the
protein sequences.
Here,
the initial
MSAs
are chosenstructural
as the output
the two
Abstract

relationships
amongsequence
the
proteinalignment
sequences.
Here,
the initial
MSAs
are MCoffee.
chosenstructural
as the
the two
important
programs:
ProbCons
and
Weoutput
have
used
the
A Multipleprotein
sequence
alignment
(MSA) gives
insight
into the
evolutionary,
and of
functional
important
protein
sequence
alignment
programs:
ProbCons
Weoutput
have
the
evolutionary
operators
a genetic
algorithm
to the
findinitial
the optimized
protein
alignment
after
several
relationships
among
theof
protein
sequences.
Here,
MSAsand
are MCoffee.
chosen as
the
ofused
the
two
evolutionary
operators
of
a
genetic
algorithm
to
find
the
optimized
protein
alignment
after
several
iterations ofprotein
the algorithm.
we have
developedProbCons
a new MSA
called
as the
important
sequenceThus,
alignment
programs:
and computational
MCoffee. Wetool
have
used
iterations
of the
algorithm.
wealgorithm
have (PASA).
developed
athenew
MSA ofcomputational
tool called
as the
Protein Alignment
by Stochastic
Algorithm
The
efficiency
protein alignment
alignments
is evaluated
evolutionary
operators
of a Thus,
genetic
to find
optimized
protein
after
several
Protein
Alignment
by
Stochastic
Algorithm
(PASA).
The
efficiency
of
protein
alignments
is
evaluated
in terms of
Column (TC)
Thedeveloped
TC score aisnew
basically
number of tool
correctly
iterations
of Total
the algorithm.
Thus,score.
we have
MSA the
computational
calledaligned
as the
in
termsAlignment
of Total the
Column
(TC) Algorithm
score.and
Thethe
TC
score
basically of
the
number
of
aligned
columns
between
test alignments
reference
alignments
divided
by
thecorrectly
totalisnumber
of
Protein
by
Stochastic
(PASA).
Theisefficiency
protein
alignments
evaluated
columns
the
test
alignments
reference
divided
by of
thecorrectly
total
number
of
columns.
The
PASA
is found
be and
statistically
moreisalignments
accurate
alignment
method
in our
in
terms between
of
Total
Column
(TC)toscore.
ThetheTC
score
basicallyprotein
the
number
aligned
columns.
The
PASA
is
found
to
be
statistically
more
accurate
protein
alignment
method
in
our
analysis
in
comparison
to
other
popular
bioinformatics
tools.
columns between the test alignments and the reference alignments divided by the total number of
analysis
comparison
other popular
bioinformatics
tools.
columns.inThe
PASA isto found
to be statistically
more
accurate protein alignment method in our
© 2017 TheGenetic
Authors.algorithm,
Published Multiple
by Elsevier
B.V. alignment, Protein sequence alignment, Friedman rank test,
Keywords:
sequence
analysis
in
comparison
to
other
popular
bioinformatics
tools.
Peer-review under responsibility of the scientific committee of the
International Conference on Computational Science
Keywords:
Genetic algorithm,
Balibase, MCoffee,
ProbCons,Multiple
Ranksumsequence alignment, Protein sequence alignment, Friedman rank test,
Balibase,
MCoffee,
ProbCons,
Ranksumsequence alignment, Protein sequence alignment, Friedman rank test,
Keywords: Genetic algorithm, Multiple
Balibase, MCoffee, ProbCons, Ranksum

1 Introduction
1 Introduction
Multiple Sequence Alignment (MSA) is widely used for protein sequence analysis to find the
1The
Introduction
The Multiple Sequence Alignment (MSA) is widely used for protein sequence analysis to find the

structural and functional relationships. MSAs are also necessary for building the character profiles,
structural
and
functional
MSAs
also necessary
for
building
the
character
establishing
phylogenetic
relationships,
designing
primers
in PCR
experiments
andanalysis
predicting
protein
The Multiple
Sequencerelationships.
Alignment (MSA)
isare
widely
used
for protein
sequence
to profiles,
find
the
establishing
phylogenetic
relationships,
designing
primers
in
PCR
experiments
and
predicting
protein
structural and functional relationships. MSAs are also necessary for building the character profiles,
establishing phylogenetic relationships, designing primers in PCR experiments and predicting protein

*Corresponding author: Tel +91 9986448015
*Corresponding
author: Tel +91 9986448015
Email: chairman-phy@dsu.edu.in
Email: chairman-phy@dsu.edu.in
*Corresponding author: Tel +91 9986448015
Email: chairman-phy@dsu.edu.in
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.100

1136	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

structures. However, constructing a precise MSA for proteins is still a difficult task because the
required computational complexities grow rapidly with the sequence length and the number of
sequences. Furthermore, it is tough to create an objective function to assess the alignment quality1. An
accurate solution is possible only for a small number of related sequences as shown by Lipmanet. al2.
Therefore, most MSA packages use heuristic progressive alignment algorithms with non- optimal
solutions. Some of the routinely used well-known sequence alignment programs are ClustalW, Mafft,
Muscle, TCoffee, M-Coffee and ProbCons. The popular ClustalW3uses a progressive alignment
approach to align protein sequences. In this method, a multiple alignment builds up progressively from
a series of pair wise alignments by using a phylogenetic tree as the reference. The alignments of the
closely related sequences are achieved initially followed by the distant ones. However, the method has
always suffered from the limitations related to the ‘early in the process’ alignment errors. The TCoffee method uses a consistency-based objective function where an information library is built up by
the local and the global alignments and also from the heterogeneous sources such as a mixture of
alignment programs and structure super-positions4. The M-Coffee program is a meta-method that
merges the output of various MSA programs into a single better alignment. It is an extension of the TCoffee method, which uses consistency approach to build up an alignment 5. The Mafft tool uses a
Fourier Transform to determine the homologous position in which an amino acid’s volume and
polarity are taken into account6. However, the Muscle method of sequence alignment is based on
iterative progressive alignment algorithm. It uses the traditional sum of pairs score as the alignment
quality7. The ProbCons method is a progressive protein multiple alignment algorithm that uses
probabilistic consistency information to construct an alignment.8. Advances of multiple sequence
alignments were reviewed by Pei9. It is recently demonstrated that, for the large-scale MSA problems,
the computation process can be accelerated10. Furthermore, Paten et al.11 have developed algorithms
for creating genomic alignments by using cactus-type graphs that represent sequence alignments. An
Immunological Multiple Sequence Alignment Algorithm has been developed for protein multiple
sequence alignment and tested successfully on the benchmarks of Bali Base12. On the basis of a new
benchmark test set, a systematic evaluation of many popular MSA methods is performed13. In a recent
investigation, Merge-Align method is developed that constructs consensus MSAs from multiple
independent MSAs and thus it provides an ab initio method of calculating alignment precision14.
It is imperative to note that the above Bali-base 3.0 benchmark alignment database is an assembly
of 386 structural protein alignments that are verified manually15. The benchmark is categorized into
five different groups; the first group is made of phylogenetically equidistant members of similar
length, the second group contains up to three orphan sequences with close relatives, the third group
contains distantly related sequences, the fourth and the fifth groups involve long terminals and
internal insertions respectively. The basic purpose of a benchmark is to provide a set of tests to
compare the efficiencies of alternative computational tools. On an average, the best performing
software package is expected to find the best alignment of the uncharacterized protein sequences.
Holland (1975)16 introduced a genetic algorithm commonly applied to science and engineering
systems involving optimization problems. It makes use of the three principles of evolution, namely,
mutation, crossover and natural selection to solve an optimization problem. The genetic algorithm
was successfully applied to various problems involving biological evolution 17,18. The genetic
algorithm technique has also been successfully implemented in various multiple sequence alignment
problems19,20,21,22.

	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

2 Theory and computational methods:
Here, we use the sequence alignment outputs of two MSA programs, namely, ProbCons and
MCoffee as the initial alignments. A genetic algorithm with suitable mutation and selection
operators is implemented for obtaining a better protein sequence alignment. The genetic algorithm is
a search algorithm that imitates the processes in natural evolutionary systems as suggested by
Darwin. It is usually modeled on the principles of evolution via natural selection. The model
employs a population of multiple alignments that further undergo natural selection in the presence
of variation-inducing mutation processes. Finally, the population of multiple alignments evolves
generation after generation till the maximum alignment is reached. The genetic algorithm method is
explained in figure 1. The procedure is described in detail later.
Initial multiple sequence
alignments

Evaluate the fitness of each
MSA
Yes
Desired fitness reached

Stop

No
Block shift and Block
Removal operation
Elitism selection
Figure. 1. Flow chart of PASA

In this model, a better protein multiple sequence alignment is allowed to emerge after many
generations of evolution starting from a set of population of alignments. The idea is to obtain the most
optimized alignment. An assessment of a multiple sequence alignment is made by using an objective
function. The fitness value reflects the quality of multiple sequence alignment. It also provides an
insight into the implicit structural and evolutionary relationships that exist among the aligned
sequences. We apply the ‘sum of pairs’ method as a measure for alignment quality. The objective is to
maximize the score of alignment. The most widely used mathematical objective function for this
purpose is the ‘sum of pairs’ scores (S) for a MSA defined as,
S = ∑ ∑ S (i, j)
(1)
i j
where i = 1, 2, .., n-1 (n is the number of sequences in the alignment), j = i +1, i+2, .., n and S(i,j) is
the value obtained using structure based matrix. The alignment score of a pair of rows is the sum of
the alignments of the individual pair of residues. The overall alignment score of the MSA is a sum of
each pair of rows. Mutation alters one or more positions in the sequence in its initial state. Mutation
plays a significant part in a genetic algorithm for finding the optimal solution. It creates variety and
prevents the population from stagnating at any “local optima”. In this model, a mutation is

1137

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

1138	

implemented by inserting a gap randomly in a sequence. A gap in a sequence is generally interpreted
as deletion of a character during the process of evolution. This can result in an entirely new sequence
alignment. With these new sequence alignments, the genetic algorithm is used to arrive at a better
alignment as shown in the latter section. For each alignment in the population of alignments, gaps are
inserted randomly with a fixed probability (p). It is expressed by the following formulae:
p = ln(xy)/(I x 10)

(2)

where x is the maximum length of a sequence in the multiple sequences, y is the number of
sequences and I is the number of columns with identical residues without the gaps. Thus p is fixed for
a given MSA. We analyzed a large number of alignment data by inserting gaps randomly with various
probabilities to see the higher values of alignment score and discovered the equation 2 to serve our
purpose. The gaps are inserted at the MSA in each iteration of the genetic algorithm.
We have implemented affine gap penalty for the PASA. In this scheme, two types of penalties are
used for the alignment score calculation: one for gap opening and the second for gap extension. The
gap opening penalty is applied only once when a gap is introduced into the sequence while the gap
extension penalty is calculated for each of the additional gap. The gap opening penalties are
investigated in the range of -5 and -20 with -1 decrements in each step (such as -5, -6, -7 etc). The gap
extension penalties are studied for 0, -1 and -2 corresponding to each gap opening penalty. It is
observed that a gap opening penalty of -15 and a gap extension penalty of -0.9 yield a higher
alignment score. The terminal gaps are not taken into account to calculate the alignment score in this
study. In some models, the sequence weights are incorporated in a multiple sequence alignment in
order to correct the unequal representation. It has been observed that the inclusion of this weighting
scheme gives only a small improvement in alignment accuracy (about 1%) on the Bali-base
benchmark16. Thus, PASA has not implemented any kind of weighting scheme.
For the purpose of inserting a gap in a MSA, a random number r is generated in the range of 0 to
1. For r < p, a gap is inserted at a random position in the MSA. After insertion of a gap, the remaining
sequences of that MSA are padded with gaps at the terminals so that all sequences are of the same
length. In a procedure involving the ‘hill-climbing mutation’, a new solution (sequence alignment) is
obtained by a mutation from the old solution if the new solution is fitter. Otherwise, the old solution is
retained. The hill climbing algorithm works as follows: For each alignment A of the population of
alignments, its current fitness ƒ (A) is calculated by using equation (1). The fitness is basically defined
as the alignment score. Then A is mutated by inserting a gap randomly in one of the sequences
according to the equation 2 to produce mutant alignment M. Finally, the gaps are padded at the end of
the other sequences to make all sequences of the same length. Now, if ƒ (M) is fitter than ƒ (A), then
the alignment A is replaced with alignment M else the alignment A is retained.

2.1 Block shift operation

We have introduced an operator that searches a block of gaps in a MSA and shifts it to the
neighboring positions. This process is illustrated in fig 2.

KGEETCTF--IKWA
KGCCCAI---KWAAADTTCC-GWA--AGCCTFG---WA--

KGEETCT--FIKWA
KGCCCA---IKWAAADTTC-CGWA--AGCCTF---GWA--

Alignment before block shift

Alignment after block shift

Figure. 2. Block shift operator

	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

A block of any shape is searched randomly and then it is shifted either forward, or backward, upward
or downward in the MSA. The steps are as follows: two integer random numbers r1 and r2 are
generated to find out the sequence number in the MSA and the character position in that particular
sequence respectively. The position corresponding to r2 can be a character or a gap. If it is a character
then one looks forward for a gap in the same sequence. This position is taken as the gap starting
position (Gs) until a residue is found. If no gap is found, then the next individual of alignment is
considered. The number of residues adjacent to Gs is counted as Gap count (Gc). The same procedure
is carried out for all other sequences in the same MSA.
From the above procedure, one can find out the block of gaps (Bg) for the forward or backward
shift of the entire block of gaps. If the position corresponding to r2 is a gap, then we look backward
and find out the gap starting position Gs. Similarly, we find Gs and Gc. The same procedure is carried
out for all other sequences in a MSA. First, Bg is shifted towards the right by one position. Then the
alignment score of the MSA is checked if it is increased or decreased. If it is increased, the old MSA is
replaced by the new MSA. If the alignment score is decreased, Bg is shifted again for one extra
position toward the right and the new MSA score is obtained. If it is increased the old one is replaced
by the new MSA. However, if the alignment score has still not increased, we perform the left shift by
one and two positions respectively and then check if the new MSA score is increased. If so, then the
old MSA is replaced by the new one. If the alignment score is not increased after all the four shifts of
the Bg, the old MSA is retained in the population of alignments. Then the next MSA is considered for
the above procedure and so on. It must be noted here that the top and bottom block shifts are not
performed because the blocks of gaps are irregular and hence they will disrupt the entire alignment.

2.2 Block elimination operation
We have designed an operator called as the block removal as described in fig 3.
KGEETCT- -FIKWA
KGCCCA- - -IKWAAADTTC- -CGWA- AGCCTF- -GWA- - -

KGEETCTFIKWA
KGCCCA-IKWAAADTTCCGWA-AGCCTFGWA---

Alignment before block removal

Alignment after block removal

Figure. 3. Block removal operation

The basic rule of multiple sequence alignment is maintained. It allows the minimum number of
gaps to construct a suitable multiple sequence alignment. The following steps are implemented. Like
the above procedure, two integer random numbers r1 and r2 are generated. Using r2, a starting gap
position is found and the number of gaps from that position to the very next residue of the sequence is
counted. If there is no gap, then we choose the next MSA in the population. The same procedure is
carried out for all other sequences. The first block of gaps corresponding to the maximum number of
sequences is found. This block of gaps is eliminated from the alignment of the MSA. The same
number of gaps from all other sequences is deleted. Then the alignment scores are compared before
and after the block removal. If the score is increased, the new MSA is retained otherwise the old MSA
is kept.

1139

1140	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

2.3 Elitism selection
In each generation of the genetic algorithm, only a fraction of the MSAs is replaced by the new
and better MSAs. Half of the high scoring alignments will survive unchanged while the other half is
replaced by the alignments generated by block shifting and block removal operators. To assess the
efficiency of the PASA, the protein benchmark Bali-base 3.0 is used. The program is implemented on
a 3 GHz Intel Xeon Dual core processor with 8 GB RAM. Fedora core 6 is used as the operating
system. The PASA program is compared with the ProbCons version 1.11, MCoffee, ClustalW23
version 1.83, the T-Coffee version 4.96, the Mafft version 5.861 and the Muscle version 3.6. All the
above programs are executed at the default modes.
In the current model, new kinds of mutation operators of the genetic algorithm, such as block shift
and block removal operators are implemented as discussed above. The initial 100 population of MSAs
from the two program outputs- ProbCons and MCoffee - are constructed with equal probability. The
PASA combines and improves the alignments over successive generations until the most optimized
alignment is obtained at the end. It makes use of mutation and selection in every generation until the
required number of generations as described below. Then it finds the most optimized MSA. The
difference of the best fitness for two consecutive generations is noted. If this difference is less than
1% for the ten consecutive generations, the program is terminated else, it proceeds to the next
generation.
As stated before, the PASA method is tested on the popular benchmark Bali-base version 3. We
have achieved a statistically significant enhancement of alignment over the other popular methods.
The alignment quality of each bioinformatics tool is determined by measuring Quality (Q) and Total
Column (TC) scores. The Q is a number of correctly aligned residue pairs between test alignment and
reference alignment divided by the total number of aligned residue pairs in the reference alignment.
The TC is a number of correctly aligned columns between the test alignment and the reference
alignment divided by the total number of columns in the reference alignment. In general, the TC score
is lower than the Q score. The scores are calculated by using software QSCORE. However, the TC
score provides a more important measure to evaluate the efficiency of a sequence alignment as far as
the conserved blocks of residues are concerned. Hence, we are using the TC scores to find the best
alignment. It is followed by the determination of the corresponding Q for the best alignment.
In order to compare the performance of various MSA programs with the PASA method, we have
conducted a non-parametric test known as the Friedman rank test. The said test makes no assumption
about the distribution of alignment scores across different pairs of MSA programs. Here, instead of
using alignment score directly, the ranking of the score across the pairs of programs is used for finding
the efficiency of a MSA method. Higher the alignment score of an alignment program, the better is its
rank. The Ranksum is calculated as the sum of ranks for a given MSA program. The concept of null
hypothesis is used to compare the efficiencies of two MSA programs in terms of the TC and the Q
values. Null hypothesis assumes that a pair of programs is good in equal probability. The Ranksum is
further used to calculate the P-value, which measures a probability factor for rejecting the null
hypothesis. If the P-value is very small (say, ≤ 0.05), the above null hypothesis is rejected.
Furthermore, the program performance is better for high values of Ranksum. If the P-value is greater
than 0.05, there is no statistically significant difference between the efficiencies of two comparable
MSA programs. For a set of scores (say, Q and TC), the P-values are obtained using the Friedman
rank test from the statistical analysis package R24 .

	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

1141

3 Results and discussions:
The scores and the statistical significance of the alignments are summarized in tables 1 and 2. As
the algorithm is stochastic in nature, the results are dependent on the initial conditions and values of
the random numbers called during the run of the program. Thus, the twelve different simulations are
considered to find the best results. It is observed that a high number of distinct simulations increase
the computational time while a small number of simulations decreases the chances of getting the most
efficient results. It is important to note that there is no straightforward relationship between the Q and
the TC. A higher Q score might have been lost in some cases. The results on Bali-base benchmark
alignment database are shown in Table 1 and 2 as described below.
The PASA is found to achieve improvements of 0.7% over the MCoffee, 1.2% over the ProbCons,
14% over the ClustalW, and 9.28% over the Mafft in terms of Q scores on Bali-base 3 benchmark, as
shown in Table 1. The PASA has enhancements of 3.6% over MCoffee, 7% over ProbCons, 28% over
ClustalW, 24% over Mafft, 14% over Muscle and 24% over TCoffee in terms of TC scores measured
on Bali-base 3 as shown in Table 1.
Table 1: Average of Q scores on the Balibase benchmark
Methods
No. of
alignments
PASA
MCoffee
ProbCons
ClustalW
Mafft
Muscle
TCoffee

R1.1
(76)

R1.2
(88)

R2
(82)

R3
(60)

R4
(49)

R5
(31)

Overall
Ranksu
(386) m

59.29
58.18
59.21
46.82
47.08
53.23
50.08

86.72
86.32
85.80
79.64
80.58
83.31
83.94

85.54
85.14
84.68
79.70
81.77
82.99
83.72

76.88
76.14
74.80
65.86
72.04
72.16
70.24

70.83
70.35
70.28
61.73
65.22
66.80
66.68

74.9
74.87
73.98
63.17
68.91
69.61
70.46

75.69
75.16
74.79
66.15
69.26
71.35
70.85

2322
2170
2003.5
732.5
948.5
1326
1305

The columns represent the average of Q score for all the alignments. The Ranksum values are
obtained from the Friedman test for all the alignments. The highest score in each benchmark set is
highlighted in bold. In the Bali-base software the evaluation of multiple alignment programs is divided
in five hierarchical reference sets (R1 to R5) in terms of residue identities and conservation properties.
The statistically significant differences in the overall TC scores are shown in Table 2.
Table 2: Average of TC scores on the Balibase benchmark
Methods
No.ofalignments
PASA
MCoffee
ProbCons
ClustalW
Mafft
Muscle
TCoffee

R1.1
(76)
35.36
32.74
34.02
23.11
23.46
30.07
25.89

R1.2
(88)
67.41
66.47
64.79
58.70
57.25
62.36
62

R2
(82)
36.12
33.94
33.50
26.03
28.53
28.87
28.23

R3
(60)
39.34
38.15
34.53
29.48
32.48
32.87
27.88

R4
(49)
21.47
21.12
19.64
18.58
18.68
20.37
19.02

R5 Overall Ranksum
(31)
(386)
33.33
38.83
2312.5
32.43
37.47
2060.5
31.17
36.27
1783
25.07
30.16
1030.5
27.44
31.30
1050
28.64
33.86
1364.5
23.83
31.14
1207

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

1142	

The columns represent the average of TC score for all the alignments. The Ranksum values are
obtained from the Friedman test for all the alignments. The highest score in each benchmark set is
highlighted in bold. In the Bali-base the multiple alignment programs are divided in five hierarchical
reference sets (R1 to R5) in terms of residue identities and conservation properties.
The Friedman rank test analysis is presented in Table 3.
Table 3: Statistical analysis on the Bali-base benchmark 3
Methods
PASA

PASA

MCoffee

-< 2.2q-16

ProbCons
ClustalW
Mafft
Muscle
TCoffee

-< 2.2q-16
-< 2.2q-16
-< 2.2q-16
-< 2.2q-16
-< 2.2q-16

MCoffee
+1.0 q-08

ProbCons
+4.8q-12
+3.6q-06

-1.9q-09
- < 2.2q-16
- < 2.2q-16
- < 2.2q-16
- < 2.2q-16

- < 2.2q-16
- < 2.2q-16
-8.0 q-16
- < 2.2q-16

ClustalW
+<2.2q-12
+ < 2.2q-16

Mafft
+<2.2q-12

Muscle
+< 2.2q-16

T Coffee
+< 2.2q-16

+< 2.2q-16

+< 2.2q-16

+< 2.2q-16

+< 2.2q-16

+< 2.2q-16
-1.6q-10

+< 2.2q-16
-< 2.2q-16
-< 2.2q-16

+< 2.2q-16
-< 2.2q-16
- 4.5q-16
(0.33)

(0.60)
+2.1q-16
2.4q-16

+9.0q-09
+0.3q-04

(0.34)

In the table 3, q is assigned a value of 10. Each value in the table contains the P-value
assigned by the Friedman rank test, indicating the significance of the difference of alignments between
the programs. The upper triangle matrix values are derived from the Q scores on the Bali-base 3. The
signs + and - represent that a program in a row performs significantly better and worse respectively
than that of a program in a column. If the P-value is greater than 0.05, the difference is not significant
and is shown in parentheses. For example, the PASA ranks higher than the ClustalW with a P-value of
2.2 x 10-16. The lower triangle matrix values are obtained from the TC scores on the Bali-base 3.
It is also observed that PASA tool is able to improve sequence alignment by 3%-26% in
terms of TC scores measured on the Bali-base benchmark 3 protein dataset in comparison to other
popular alignment programs.
The PASA tool requires a delicate analysis of the genetic algorithm to obtain the best alignment. A
number of operators, such as block insertion, block shifting, block searching in terms of the gaps and
different types of crossovers (where the two MSAs are cut in a particular position and then
recombined to make new MSA) have been tried. Most of those operators have improved the sum of
pair scores but in terms of Q and TC scores, they have failed (data not shown here). In our model, we
are not using any crossover operation as it is found to be disrupting for good alignment. Finding the
highest alignment score of a multiple protein sequence alignment is an open field of research and is
evolving rapidly. We have used a simple idea of evolutionary optimization model to start the initial
population of alignments as the MSA program outputs of two most efficient tools: ProbCons and
MCoffee. These two sequence alignment programs are different than the others in the sense that the
average length of characters in the aligned sequences are greater than the corresponding aligned
sequences found in Bali-base version 3 reference alignments. Consequently, the mutational procedure
of gap elimination operator plays a significant role in enhancing the final alignment. Eventually, we
have obtained a significant enhancement of alignment in terms of Q and TC scores in comparison to
the individual MSA methods. It is very interesting to note that this PASA alignment program structure
is such that the program running time reduces by a factor of about 10 when the codes are written in C
language instead of using Perl.

	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

It has been reported that structural alignment programs produce outputs where 11% – 19% of the
core residues are misaligned. Majority of the benchmark alignments are obtained by using the
structural alignment programs. In that case, we feel that our PASA alignment program will provide
better alignment accuracy. This type of analysis can be extended to RNA alignments although the
work will be very messy.
It is known in the scientific literature that although a genetic algorithm model can give better
result, it takes more computational time due to the stochastic nature of the algorithm. Here, we have
tracked the program running time for the Bali-base subset RV12 protein reference alignment
benchmark (consisting of 88 alignments). It takes 17 minutes and 79 minutes in the cases of Probcons
and MCoffee respectively while for the PASA program it is 96 minutes. The computational time can
be drastically reduced when the program is allowed to run on a multi-cluster system having hundreds
of nodes. The PASA tool gives statistically better alignment over the two competing programs while
maintaining the same scale of computational time. The traditional genetic algorithm approach towards
sequence alignment like SAGA tends to build alignment from the initial random alignments of
sequences. But in our current approach, initial alignment solutions are near to global optimum as they
are the outputs of other important programs. Hence, it takes very less time compared to the
conventional genetic algorithm programs. This proves that the stochastic algorithm can be used as an
excellent optimizer for the sequence alignment problem. It must be noted that due to the stochastic
nature of the computation, the genetic algorithm can converge to a local optimum. The PASA has the
ability to generate more than a single suboptimal alignment depending on the number of initial
population of alignments and various evolutionary operators. This feature can sometimes help one to
select a biologically relevant MSA for further analysis.
To obtain a better sequence alignment, generally it is a tough task to choose the right MSA
program over several programs available in the literature. So the present PASA is a better alternative
to combine the outputs of some of the efficient individual methods and further improve them to obtain
a better alignment. The PASA has incorporated certain biological knowledge such as the structure
based derived matrix and some novel genetic algorithm operators. It generates good results even
below the twilight zone of sequence similarity.

References:

[1] Thompson, J.D., et. al. Towards a reliable objective function for multiple sequence
alignments. Journal Molecular Biology., 2001; 314,937:951
[2] Lipman,D.J., et. al. A tool for multiple sequence alignment. Proceedings of National
Academy of Science., 1989; 86, 4412:4415.
[3] Thompson,J.D., et. al. CLUSTALW: improving the sensitivity of progressive multiple
sequence alignment through sequence weighting, position-specific gap penalties and weight
matrix choice. Nucleic Acids Research., 1994; 22, 4673:4680.
[4] Notredame,C., et. al. T-Coffee: a novel method for fast and accurate multiple sequence
alignment. Journal Molecular Biology., 2000; 302, 205:217.
[5] Wallace,I.M. et. al.. M-Coffee: combining multiple sequence alignment methods with TCoffee. Nucleic Acids Research., 2006; 34, 1692:1699.
[6] Katoh,K., et. al. MAFFT: A novel method for rapid multiple sequence alignment based on
fast Fourier transform. Nucleic Acids Research., 2002; 30, 3059:3066.
[7] Edgar,R.C. MUSCLE: multiple sequence alignment with high accuracy and high throughput.
Nucleic Acids Research., 2004; 32, 1792:1797.
[8] Do,C.B. et. al. ProbCons: Probabilistic consistency-based multiple sequence alignment.
Genome Research., 2005; 15, 330:340.
[9] Pei, Jimin Multiple protein sequence alignment, Current opinions in structural biology, 2008;

1143

1144	

Narayan Behera et al. / Procedia Computer Science 108C (2017) 1135–1144

18, 382:386.
[10] Lloyd,S. and Snell,Q.O., Accelerated large-scale multiple sequence alignment. BMC
Bioinformatics, 2011; 12, 466.
[11] Paten, B. et al. Cactus: Algorithms for multiple sequence alignment. Genome Research,
2011; 21, 1512:1528.
[12] Cutello, V. et al. Protein multiple sequence alignment by hybrid bio-inspired algorithms;
Nucleic Acids Research., 2011
[13] Thompson, J.D. et. al. A comprehensive benchmark study of multiple sequence alignment
methods: current challenges and future perspectives. PLOS One, 2011; 6(3), e18093.
[14] Collingridge, P.W. and Kelly, Steven MergeAlign: improving multiple sequence alignment
performance by dynamic reconstruction of consensus multiple sequence alignments. BMC
Bioinformatics, 2012; 13, 117.
[15] Thompson, J.D., et. al. Balibase 3.0: Latest Developments of the Multiple Sequence
alignment Benchmark. Proteins., 2005; 61, 127:136.
[16] Holland, J.H. Adaptation in natural and artificial systems. Univ of Michigan press, 1975;
Ann Arbor, MI.
[17] Behera N. &Nanjundiah V.trans-Gene Regulation in Adaptive Evolution: a Genetic
Algorithm Model, Journal of Theoretical Biology 1997; 188, 153:162.
[18] Behera N. &Nanjundiah V. Phenotypic plasticity can potentiate rapid evolutionary change.
Journal of Theoretical Biology, 2004; 226, 177:184.
[19] Zhang,C and Wong,A.K. A Genetic algorithm for multiple molecular sequence alignment.
CABIOS, 1997; 13, 565:581.
[20] Cai, L. et. al. Evolutionary computation techniques for multiple sequence alignment.
Proceedings of the second congress on evolutionary computation, 2000; 2, 829-835.
[21] Anbarasu, L.A., et. al. Multiple molecular sequence alignment by island parallel genetic
algorithm. Current Science 2000; 78, 858:863
[22] Notredame,C. and Higgins,D.G. SAGA: sequence alignment by genetic algorithm. Nucleic
Acids Research., 1996; 24, 1515:1524.
[23] Thomsen, R. et. al. ClustalW alignment improver using evolutionary algorithms.
Proceedings of the fourth congress on evolutionary computation, 2002; 1, 121:126.
[24] R-package, URL: http://www.r-project.org/
Funding:N.Behera acknowledges a research grant from the Department of Information Technology,
Government of India (grant no.- DIT R&D)/BIO/15(5) /2006 to NB)
Acknowledgements:We thank Shinsuke Yamada of the Yamana Laboratory, Waseda University,
Japan and Kishlay Kumar Singh of IBAB, Bangalore, India for helping on certain statistical analysis
work.

