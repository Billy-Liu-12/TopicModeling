Local Linearization-Runge Kutta (LLRK)
Methods for Solving Ordinary Diﬀerential
Equations
H. De la Cruz1,2 , R.J. Biscay3 , F. Carbonell3 ,
J.C. Jimenez3 , and T. Ozaki4
1

Universidad de Granma, Bayamo MN, Cuba
Universidad de las Ciencias Inform´
aticas,
La Habana, Cuba
Instituto de Cibern´etica, Matem´
atica y F´ısica,
La Habana, Cuba
4
Institute of Statistical Mathematics,
Tokyo, Japan
hugo@uci.cu, biscay@icmf.inf.cu
2

3

Abstract. A new class of stable methods for solving ordinary diﬀerential equations (ODEs) is introduced. This is based on combining the Local Linearization (LL) integrator with other extant discretization methods.
For this, an auxiliary ODE is solved to determine a correction term that is
added to the LL approximation. In particular, combining the LL method
with (explicit) Runge Kutta integrators yields what we call LLRK methods. This permits to improve the order of convergence of the LL method
without loss of its stability properties. The performance of the proposed
integrators is illustrated through computer simulations.

1

Introduction

The Local Linearization (LL) method (see, e.g., [9], [11], [15], [16], and references
therein), also called exponentially ﬁtted method [9], matricial exponentially ﬁtted method [6], exponential Euler method [4] and piece-wise linearized method
[16], is an explicit one-step integrator for solving ODEs. It is derived from the local linearization (ﬁrst-order Taylor expansion) of the vector ﬁeld of the equation
at each time step. Theoretical and simulation results have demonstrated a number of dynamical properties of this approach, including A-stability and correct
reproduction of phase portraits near hyperbolic equilibrium points and cycles
[11]. Furthermore, its computational cost is relatively low, even for systems that
when deal with standard methods require the use of either cumbersome implicit
schemes or extremely small time steps.
However, a major drawback of the LL method is its low order of convergence,
namely two. This has motivated the recent development of a class of higher order
LL methods (called LLT integrators) that add a Taylor-based correction term
to the LL solution [3]. In this way an arbitrary order of convergence is reached
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 132–139, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Local Linearization-Runge Kutta (LLRK) Methods for Solving ODEs

133

without losing the stability properties of the LL method. But this is achieved
at the expense of computing higher order derivatives of the vector ﬁeld of the
equation.
In the present paper an alternative approach is introduced for constructing
higher order LL integrators. It is also based on the addition of a correction term
to the LL approximation, but now this is determined as the solution of an auxiliary ODE. For the latter, any discretization scheme can be used; e.g. an explicit
Runge-Kutta (RK) method, leading to what we call the Local LinearizationRunge Kutta (LLRK) methods. Computation of higher order derivatives is not
required, and A-stability is insured. This approach can be thought of as a ﬂexible
framework for increasing the order of the LL solution as well as for stabilizing
standard explicit integrators.
Likewise splitting and Implicit-Explicit Runge-Kutta (IMEX RK) methods
(see, e.g., [1], [13]), the LLRK method is based on the representation of the vector
ﬁeld as the addition of two components. However, there are notable diﬀerences
between these approaches: i) Typically in splitting and IMEX methods such a
decomposition is global instead of local, and it is not based on a ﬁrst-order Taylor
expansion. ii) In contrast with IMEX and LLRK approaches, splitting methods
construct an approximate solution by composition of the ﬂows corresponding
to the component vector ﬁelds. iii) IMEX RK methods are partitioned (more
speciﬁcally, additive) Runge-Kutta methods that compute a solution y = u + z
by solving certain ODE for (u, z), setting diﬀerent RK coeﬃcients for each block.
LLRK methods also solve a partitioned system for (u, z) but a diﬀerent one.
In this, one of the blocks is linear and uncouple, and it is solved by the LL
discretization. After inserting the (continuous time) LL approximation into the
second block, this is treated as a non-autonomous ODE, for which any extant
RK discretization can be used.
The paper is organized as follows. Section 2 reviews the standard, low order
LL method, and its numerical implementation. Section 3 introduces a new class
of higher order LL methods, including the Local Linearization-Runge Kutta
(LLRK) methods, and discussed its computational aspects. Finally, Section 4
illustrates its performance through computer simulations.

2

Local Linearization Method

Let D ⊂ Rd be an open set and f ∈C 1 R × D, Rd . Consider the initial-value
problem
x (t) = f (t, x (t)) , t0 ≤ t ≤ T, x (t0 ) = x0 ,
where t0 , T ∈ R, x0 ∈ D. Let t0 < t1 < ... < tN = T be a given partition of
[t0 , T ], and denote hn = tn+1 − tn and Λn = [tn , tn+1 ] for n = 0, ..., N − 1.
The LL discretization can be derived as follows (see, e.g., [11]). Deﬁne the
local problems
x (t) = f (t, x (t)) ,
x (tn ) = xtn ,

t ∈ Λn ,

(1)

134

H. De la Cruz et al.

for given constants xtn ∈ D, n = 0, ..., N − 1. These equations are approximated
by linear ones on the basis of the ﬁrst-order Taylor expansion of f (t, x) around
(tn , xtn ):
x (t) = L (tn , xtn ) x (t) + a(t; tn , xtn ),

t ∈ Λn ,

x (tn ) = xtn ,

(2)

where
a(t; s, x) = f (s, x) − fx (s, x) x + ft (s, x) (t − s) .

L (s, x) = fx (s, x) ,

(3)

Here, fx and ft denote the partial derivatives of f with respect to the variables
x and t, respectively.
The problem (2) has a solution yLL ( . ; tn , xtn ) that is explicit in terms of the
fundamental matrix Φ(t; tn , xtn ) = exp ((t − tn ) fx (tn , xtn )) of the corresponding homogeneous linear system. Namely, for t ∈ Λn ,
t

yLL (t; tn , xtn ) = Φ(t; tn , xtn )xtn+

Φ(u; tn , xtn )Φ−1 (u; tn , xtn )a(u; tn , xtn )du

tn

= xtn + (t − tn ) ϕ (t − tn ; tn , xtn ) ,
where
ϕ (r; s, x) =

1
r

(4)

r

e(r−u)L(s,x) (f (s, x) +f t (s, x) (u − s))du.
0

The continuous-time LL approximation yLL (t) on t ∈ [ t0 , T ] is deﬁned
by concatenating the solutions (4) of said local linear problems starting at
yLL (t0 ) = x0 :
yLL (t) = yLL t; tn , yLL (tn ) ,

t ∈ Λn ,

n = 0, ..., N − 1.

Finally, the LL discretization is deﬁned by evaluating the LL approximation at
the discrete times t = tn ,
= yLL (tn ) ,
ytLL
n

n = 0, ..., N − 1.

(5)

A number of schemes have been proposed for computing the LL discretization
(see reviews in [3], [12]). An implementation that consists of computing just one
matrix exponential is the following (see [10] for more details). For t ∈ Λn and
any xtn ∈ D, yLL (t; tn , xtn ) is written as
yLL (t; tn , xtn ) = xtn + v (t; tn , xtn ) .

(6)

In turn, v (t; tn , xtn ) can be obtained as a block of the matrix exponential
exp ((t − tn )Cn ) according to the identity
⎤
⎡
F (t; tn , xtn ) b (t; tn , xtn ) v (t; tn , xtn )
⎣
0
1
c (t; tn , xtn ) ⎦ = e(t−tn )Cn ,
(7)
0
0
1

Local Linearization-Runge Kutta (LLRK) Methods for Solving ODEs

where

⎤
fx (tn , xtn ) ft (tn , xtn ) f (tn , xtn )
⎦ ∈ R(d+2)×(d+2) ,
0
0
1
Cn = ⎣
0
0
0

135

⎡

(8)

and F (t; tn , xtn ) ∈ Rd×d , b (t; tn , xtn ) ∈ Rd , c (t; tn , xtn ) ∈ R are certain matrix
blocks. Thus, the LL discretization can be obtained as
ytLL
= ytLL
+ v(tn+1 ; tn , ytLL
),
n+1
n
n
) is computed through (7) with t = tn+1 .
where v(tn+1 ; tn , ytLL
n
A number of algorithms are available to compute the matrix exponential involved in this scheme, e.g. those based on stable Pad´e approximations with the
scaling and squaring method, Schur decomposition, or Krylov subspace methods. The choice of one of them should be based on the size and structure of the
Jacobian matrix fx ([8], [14]).

3

Local Linearization-Runge Kutta (LLRK) Methods

In this Section a modiﬁcation of the LL method is introduced in order to improve
its accuracy while retaining desirable stability properties. Speciﬁcally, in order
to obtain a better approximation yn (t) to the solution of the local problem (1)
with initial condition ytn at t = tn , consider the addition of a correction term
zn (t) to the LL solution,
yn (t) = yLL (t; tn , ytn ) + zn (t) ,

t ∈ Λn ,

(9)

where yLL (t; tn , ytn ) is deﬁned by (4).
From the variation of constants formula (see, e.g., [5]) it follows that the
solution xn (t) of (1) starting from ytn at t = tn can be written as
xn (t) = yLL (t; tn , ytn ) + rn (t) ,
where
t

rn (t) = Φ (t; tn , ytn )

Φ−1 (u; tn , ytn ) M (u, xn (u); tn , ytn ) du,

(10)

tn

M(u, x; tn , ytn ) = f (u, x) − (L(tn , ytn )x + a(u; tn , ytn )), and L, a deﬁned by (3).
By taking derivatives in (10) it is obtained that rn (t) satisﬁes the initial-value
problem
rn (t) = gn (t, rn (t) ), t ∈ Λn , rn (tn ) = 0,
(11)
where
gn (t, r) = L(tn , ytn )r + M(t, yLL (t; tn , ytn ) + r; tn , ytn ).
Thus, an approximation zn (t) to rn (t) can be obtained by solving the initialvalue problem (11) through any extant numerical integrator. In particular, we

136

H. De la Cruz et al.

will focus on the approximation yn (t) obtained from solving (11) by means of
an explicit RK method. This will be called a Local Linearization-Runge Kutta
(LLRK) approximation. Speciﬁcally, the choice of an s-stage explicit RK method
with coeﬃcients c = [ci ], A = [aij ], b = [bj ] (see, [5]) leads to
s

zn (t) = (t − tn )

bj kj ,

t ∈ Λn ,

j=1

where

⎛
ki = gn ⎝tn +ci (t − tn ) , (t − tn )

i−1

⎞
aij kj ⎠ ,

i = 1, 2, ...s,

j=1

Finally, the LLRK discretization is deﬁned by the recursion
ytn+1 = yLL (tn+1 ; tn , ytn ) + zn (tn+1 ), n = 0, 1, ..., N − 1,

(12)

starting at yt0 = x0 .
When implementing the LLRK method (12), the required evaluations of yLL
(t; tn , ytn ) at t = tn+1 and t = tn +ci (tn+1 − tn ) can be computed by means of
(6)-(8). We use the diagonal Pad´e approximation with the scaling and squaring
method [14] to evaluate the matrix exponential involved in these expressions.
It should be noted some points that contribute to decrease the burden of the
computation of (12). First, simpliﬁcations arise from the fact that gn (tn , 0) = 0.
Second, if (as usually) the Runge Kutta coeﬃcients ci are of the form ci = mi a
for some integer numbers mi then (12) can be implemented in terms of a few
powers of the same matrix exponential exp (ahn Cn ), where Cn is certain matrix.
Given p ≥ 2, the notation LLRKp will indicate an LLRK method (12) obtained by using an order p RK method to compute zn (t). Notice that any
LLRKp discretization is A-stable because the LL discretization is so, and the
former reduces to the latter for linear systems. Furthermore, it can be shown
that any LLRKp method has order of convergence p if the needed evaluations of
yLL ( . ; tn , ytn ) are carried out with an error of order p.

4

Numerical Examples

The following example is taken from [2] in order to illustrate not only convergence issues of the LLRK discretization but also its dynamics around hyperbolic
stationary points.
Example 1.
x1 = −2x1 + x2 + 1 − μf (x1 , λ) ,
x2 = x1 − 2x2 + 1 − μf (x2 , λ) ,
where f (u, λ) = u 1 + u + λu2

−1

.

Local Linearization-Runge Kutta (LLRK) Methods for Solving ODEs

137

For μ = 15, λ = 57, this system has two stable stationary points and one
unstable stationary point in the region 0 ≤ x1 , x2 ≤ 1. There is a nontrivial
stable manifold for the unstable point which separates the basins of attraction
for the two stable points (see [2]).
Figure 1 illustrates the performance of the LLRK3 scheme in this example.
For comparison, Figure 1(a) presents the phase portrait obtained by the LL
scheme with a very small step-size h = 2−13 , which can be regarded the exact
solution for visualization purposes. Figures 1 (b)-(c)-(d) show the phase portraits
obtained, respectively, by a third order explicit Runge-Kutta (RK3), the LL and
the LLRK3 methods with step-size h = 2−2 .
True Solution

RK3 Solution

1

1

0.8

0.8

0.6

0.6

0.4

0.4

0.2

0.2

0
(a)

0

0.1

0.2

0.3

0.4

0.5

0.6

0
(b)

0

0.1

LL Solution
1

0.8

0.8

0.6

0.6

0.4

0.4

0.2

0.2
0

0.1

0.2

0.3

0.4

0.3

0.4

0.5

0.6

0.5

0.6

LLRK3 Solution

1

0
(c)

0.2

0.5

0.6

0
(d)

0

0.1

0.2

0.3

0.4

Fig. 1. (Example 1). a) Phase portrait obtained by the LL scheme with a very small
step-size, h = 2−13 (which can be thought of as the exact solution for visualization
purposes). b), c), d) Continuous lines show the phase portraits obtained, respectively,
by a third order Runge-Kutta (RK3), the LL and the LLRK3 methods with step-size
h = 2−2 . For reference, the exact trajectories are also shown in each case as dashed
lines.

It can be observed that the RK3 discretization fails to reproduce correctly the
phase portrait of the underlying system near one of the point attractors. On the
contrary, the exact phase portrait is adequately approximated near both point
attractors by the LL and LLRK3 methods, the latter showing better accuracy.
Also notice that the RK3 and LL discretizations do not approximate adequately
the basins of attraction in the region shown in Figure 1. For instance, RK3
trajectories starting near (0, 0.5) and LL trajectories starting near (0, 0.6) go

138

H. De la Cruz et al.

towards wrong point attractors in comparison with exact trajectories. In contrast, the attracting sets are much better represented by the phase portrait of
the LLRK3 method. This demonstrates that, even for moderate values of p, the
larger accuracy of LLRKp methods in comparison with the LL method can in
practice leads to appreciable improvement in dynamical performance.
The next example illustrates the behavior of the LLRK4 method in a wellknown stiﬀ system that is frequently considered to test numerical integrators;
namely, the Van der Pol equation (see, e.g., [7]).
Example 2.
x1 = x2,
x2 = E 1 − x21 x2 − x1 ,
where E = 103 .
Figure 2 shows the approximations obtained for this example by a fourth order
Runge-Kutta (RK4), the LL and the LLRK4 methods for diﬀerent step sizes. The
trajectories start at (2, 0). For large step sizes the Runge-Kutta discretizations
are explosive due to lack of numerical stability, while the LL approximations do
not explode but show poor accuracy. In particular, note that the trajectories of
the LL approximation for large and small step sizes have remarkably diﬀerent
202

RK4

10

277

x 10

2

x 10

5000

0
5

0
−2

0
−6

−4

−2

−4

0

−5000
0

5

98

135

x 10
10000

10

−4

−2

0

2

4

−2

0

2

4

−2

0
(c)

2

4

x 10
5000

5000

0

0

LL

5000
0
−5000

LL RK4

−5000
−5

0

5

−4

−5000
−2

0

2

4

−4

5000

5000

5000

0

0

0

−5000
−4

−5000
−2

0
(a)

2

4

−4

−5000
−2

0
(b)

2

4

−4

Fig. 2. (Example 2). Trajectories obtained for the example 2 by means of a fourth
order Runge-Kutta (RK4), the LL and the LLRK4 methods for several step sizes: a)
h1 = 0.00115, b) h2 = 0.00095, and c) h3 = 0.00025.

Local Linearization-Runge Kutta (LLRK) Methods for Solving ODEs

139

ranges. In contrast, even for large step sizes the LLRK4 method achieves precise
reconstructions of the underlying dynamics associated with a limit cycle.

References
1. Ascher, U. M., Ruuth, S. J. and Spiteri, R. J.: Implicit-Explicit Runge-Kutta
methods for time-depending partial diﬀerential equations. Appl. Numer. Math.
25 (1995) 151-167
2. Beyn,W. J.: On the numerical approximation of phase portraits near stationary
points. SIAM J.Numer. Anal. 24 (1987) 1095-1113
3. Biscay, R. J., De la Cruz, H., Carbonell, F., Ozaki, T. and Jimenez, J. C.: A
Higher Order Local Linearization Method for Solving Ordinary Diﬀerential Equations. Technical Report, Instituto de Cibernetica, Matematica y Fisica, La Habana.
(2005)
4. Bower, J. M. and Beeman, D.: The book of GENESIS: exploring realistic neural
models with the general neural simulation system. Springer-Verlag (1995)
5. Butcher, J. C.: The Numerical Analysis of Ordinary Diﬀerential Equations. RungeKutta and General Linear Methods. John Wiley & Sons: Chichester (1987)
6. Carroll, J.: A matricial exponentially ﬁtted scheme for the numerical solution of
stiﬀ initial-value problems. Computers Math. Applic. 26 (1993) 57-64.
7. Hairer, E. and Wanner, G.: Solving Ordinary Diﬀerential Equations II. Stiﬀ and
Diﬀerential-Algebraic Problems. Springer-Verlag: Berlin. Third edition (1996)
8. Higham, N. J.: The scaling and squaring method for the matrix exponential revisited. Numerical Analysis Report 452, Manchester Centre for Computational
Mathematics. (2004)
9. Hochbruck, M., Lubich, C. and Selhofer, H.: Exponential integrators for large systems of diﬀerential equations. SIAM J. Sci. Comput. 19 (1998) 1552-1574
10. Jimenez, J. C.: A Simple Algebraic Expression to Evaluate the Local Linearization
Schemes for Stochastic Diﬀerential Equations. Appl. Math. Lett. 15 (2002) 775-780
11. Jimenez, J. C., Biscay, R. J., Mora, C. M., and Rodriguez, L. M.: Dynamic properties of the Local Linearization method for initial-valued problems. Appl. Math.
Comput. 126 (2002) 63-81
12. Jimenez, J. C. and Carbonell, F.: Rate of convergence of local linearization schemes
for initial-value problems. Appl. Math. Comput. 171 (2005) 1282-1295
13. McLachlan, R.I and Quispel, G. R.W.: Splitting methods. Acta Numer. 11 (2002)
341-434
14. Moler, C. and Van Loan, C. F.: Nineteen dubious ways to compute the exponential
of a matrix, twenty-ﬁve years later. SIAM Review. 45 (2003) 3-49
15. Ozaki, T.: A bridge between nonlinear time series models and nonlinear stochastic
dynamical systems: a local linearization approach. Statist. Sinica. 2 (1992) 113-135
16. Ramos, J. I. and Garcia-Lopez, C. M. (1997).: Piecewise-linearized methods for
initial-value problems. Appl. Math. Comput. 82 (1992) 273-302

