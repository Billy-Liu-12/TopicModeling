Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 2056 – 2065

International Conference on Computational Science, ICCS 2013

A Dynamic Data Driven Application System for Real-time
Monitoring of Stochastic Damage
E. E. Prudencio∗, P. T. Bauman, S. V. Williams, D. Faghihi, K. Ravi-Chandar, J. T. Oden
Institute for Computational Engineering and Sciences
The University of Texas at Austin
201 East 24th St, Stop C0200, Austin, Texas 78712-1229, USA

Abstract
In this paper we describe a stochastic dynamic data-driven application system (DDDAS) for monitoring, in real-time, material
damage in aerospace structures. The work involves experiments, diﬀerent candidate damage models, ﬁnite element discretization,
Bayesian analysis of the candidate models, Bayesian ﬁltering with the most plausible model, parallel scientiﬁc libraries, and high
performance computing. Here we describe a low-degree-of-freedom model designed for proof-of-concept, in preparation for the
development of the full DDDAS. The physical system involves ﬁber-reinforced composite plates subjected to quasi-static loading
and enriched with distributed carbon nanotubes that act as sensors, signaling damage through changes on the voltage proﬁle. We
give an overview of the experimental data we collected, of the damage models we explored, and of the Bayesian methodology we
applied in order to use uncertain experimental data for driving the stochastic system.
Keywords: Material damage modeling, composite materials, Bayesian model plausibility, Bayesian ﬁltering.

1. Introduction
The current generation of high-performance military aircraft and the next generation of civil transport aircraft are
made almost entirely of composite materials. With repeated loading cycles or accidental overloading such as foreignobject impact events, composite materials accumulate damage that degrades their performance and eventually leads
to failure. Aging of this type of aircraft is likely to be quite diﬀerent from the metal-skin aircraft for which there is
almost a century of experience in characterizing fatigue, multisite damage, and other aging phenomena. Therefore, it
is very important to monitor and track the evolution of damage in these composite materials.
In the early days of damage monitoring, the focus was on nondestructive evaluation using inspection techniques
such as visual observations, ultrasonic or x-rays, imaging and other modalities to reveal the damage state. These techniques were used during periodic interruptions of service of the vehicle. Recent advances have altered the methodology
to embed sensors or sensor arrays into the structure and perform continuous acquisition of data that are to be interpreted in terms of evolving damage. This is called structural health monitoring [1, 2]. The ability to obtain continuous
updates in the health of the structure provides a large collection of data that can be coupled within the framework
of a Dynamically Data Driven Application System (DDDAS) in order to extract appropriate conclusions regarding
structural durability and reliability. Indeed, the underlying philosophy of DDDAS is to dynamically connect computational models of the evolution of physical phenomena of interest with experimental systems that deliver relevant data
in near-real time so as to allow feedback to control outputs to meet a set of objectives (see [3, 4, 5, 6, 7, 8, 9]).
∗ Corresponding

author, Tel.: +1-512-471-3168, Fax: +1-512-232-8067.
E-mail address: prudenci@ices.utexas.edu.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.375

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

2057

The types and evolution of damage that appears in composite materials and structures are complex functions of
the composition, architecture, geometry and loading history. Furthermore, such damage occurs at multiple scales;
visible delaminations of the macro (or structural) scale, transverse matrix cracks, ﬁber-matrix interfacial failure, ﬁber
breaks, etc. occur at diﬀerent length scales and result in the degradation of the overall performance. Numerous types
of sensors, such as embedded ﬁber-Bragg sensors [10], and distributed Carbon Nano-Tubes (CNTs, see [11, 2]), have
been developed and used in evaluating damage. Recently, methods of patterning CNTs into addressable arrays with a
spacing of a few micros have also been developed [1]. These distributed sensors can be embedded while processing
the composite material or pasted as an add-on at critical points in the structure. As shown in [12], a small volume
fraction - 0.5 wt.% - of multi-wall CNTs creates a percolating electrically conductivity and can be easily detected.
Local damage is attributed to changes in the induced ﬁeld and the local current due to micro-crack developed in the
substrate material.
In the present paper, the computational models are based on ﬁnite element models of nonlinear material damage
theories of the type used in contemporary fatigue analysis, fracture mechanics, and structural mechanics. These
typically involve material parameters that exhibit uncertainties, and our DDDAS is therefore statistically calibrated.
We collect experimental data from a CNT enriched polymer matrix, in order to update our knowledge about the damage
state, which will then drive a mesh reﬁnement procedure.
The paper is structured as follows. Section 2 presents some physical models for damage, followed by Section 3,
where we layout how DDDAS applies to our system. In Section 4 we describe the experimental program, while in
Section 5 the computational algorithms needed in our system are presented, including Bayesian model updating and
Bayesian ﬁltering. We conclude the paper with Section 6, with an overview of integration eﬀorts under way and a
brief discussion of future work.
2. Damage
A material under loading is regarded as damaged relative to some initial state when it experiences a loss of stiﬀness
due to the emergence of microscale defects (e.g. micro-cracks, micro-voids). In contrast to fracture mechanics,
continuum damage mechanics is based on the idea of existence of a continuous variable, which is measure of the
density of these micro-defects. An increase in damage signals a deterioration of the material before the initiation
of macro-cracks. The notion of a damage density ﬁeld was ﬁrst introduced by Kachanov [13], who postulated an
evolution equation for the growth of damage, written in terms of stress or strain, which may be used to predict the
failure of material. More general models of anisotropic damage were introduced by Chaboche[14, 15], Murakami
and Ohno [16], and Krajcinovic and Foneska [17], in which the damage variable can be tensorial. The assumption of
isotropic damage with scalar damage ﬁeld is often regarded as suﬃcient to give a good prediction of the load carrying
capacity, the number of cycles or the time to local failure in isotropic structural components. In this paper we restrict
ourselves to isotropic damage, which consists of cracks and cavities with an orientation distributed uniformly in all
directions. The damage variable does not depend on the orientation and the damaged state is completely characterized
by the scalar D. In this case the value D = 0 characterizes the virgin (undamaged) state, while D = Dc
1
characterizes the initiation of a macro-crack. The parameter Dc is a critical value for the damage variable usually
taken between 0.2 and 0.8 for engineering materials (see the references in Lemaˆıtre and Chaboche [18]). Let us use
the following notation: Ω ⊂ R3 for the physical domain (specimen), σi j for stress tensor, u for displacement, i j for
strain tensor, Ci jkl for elasticity tensor, f for body force, and g for surface traction. The general quasi static model of
isotropic damage can be obtained using the principle of virtual work for the displacement ﬁeld, ui (xi , t), in a linear
elastic solid such that
(1 − D(t))Ci jkl uk,l vi, j dV =
fi vi dV +
gi vi dA,
(1)
Ω

Ω

∂Ω

where vi (xi ) denotes the kinematically admissible virtual displacement ﬁeld. Considering the stress strain relation (i.e.
σi j = (1 − D)Ci jkl kl ) and the deﬁnition of strains ( i j = 12 (ui, j + u j,i )), the following relations for force equilibrium and
traction condition can be expressed respectively for volume Ω and external surface ∂Ω:
σi j, j − fi = 0,

(2)

gi = σi j ni ,

(3)

and
where nk denotes the outward unit normal to ∂Ω.

2058

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

2059

order to provide an electrically conducting network. The specimen is then subjected to a monotonically increasing
load up to failure. At diﬀerent stages in this process, the specimen is interrogated in order to determine the spatial
variation in the strain using digital image correlation and map this to damage. In future studies, we will measure
changes in electrical resistivity which can be mapped to damage.
So, how does DDDAS enter into the picture? Figure 1 provides the answer. It shows, with dotted lines, that the
statistically inferred state of the material can be used to drive a variety of actions. By “state” we mean a joint PDF
of the material parameters and the damage ﬁeld. Possible data driven actions are mesh reﬁnement (mesh is reﬁned
around regions of increasing damage), load control, healing control, and measurement control (measurements become
concentrated in regions of increasing damage).
In order to better understand Figure 1, it is important to realize that there are two main computational cycles in it.
One computational cycle involves “only” simulations, and is responsible for predicting the state. Beginning with an
initial state (one usually assumes that no damage exists), the computational model is exercised during the solution of
the statistical forward problem for one time step. While experimental data is not available, the predicted state feeds
back through the statistical forward problem, so that the state can be predicted at the next time step. Eventually, the
mesh may need to be reﬁned to more accurately predict the state.
The other computational cycle in Figure 1 involves a Bayesian updating procedure, and is responsible for dynamically updating our knowledge about the state, as data is collected. Once experimental data is accessed at a particular
time, we can use it to update our knowledge about the system state, using prior knowledge (predicted state) to gain
posterior knowledge (corrected state). The computational model and the experimental data are used in the computation of the likelihood function in Bayes’ formula (see Section 5). The corrected damage state is then fed back to the
forward problem as we advance in time and the loop begins again. The mesh may need to be reﬁned based on the
corrected damage state, as indicated by the dotted line at the top of Figure 1. The corrected damage state might also
drive other control actions, as indicated by the three dotted lines on the bottom of Figure 1. For instance, in cases in
which the material is part of an airplane in service, possible actions might be: (i) to instantly apply healing (an example
of control) to a damaged region, and/or (ii) to instantly update a ﬂight maneuver plan (another example of control) in
order to diminish the possibility that any further damage happens to the system, and/or (iii) update the ﬂight computer
so that it has up-to-date information before taking a maneuver decision.
It is important to note that many uncertainties are involved in the process of assessing the system state: the data
is measured only at some points of the system, the measured data has noise, the computational model that maps the
spatial distribution of damage to the spatial distribution of strain (or electric potential) is an imperfect characterization
of reality, and the damage evolution model does not capture reality perfectly either. All these uncertainties justify the
use of statistical problems in Figure 1.
4. Experimental Eﬀorts
In our work there are two groups of experiments. The ﬁrst group involves experiments with diﬀerent loads for
measuring strain proﬁles, and for calibrating the two models. The second group involves experiments with quasistatic loads for measuring electric potential proﬁles, and for dynamically inferring the evolving damage in real-time
using changes in electrical conductivity. The latter step requires relating changes in electrical conductivity to damage
through another set of calibration experiments.
Uniaxial tensile loading experiments are performed on rectangular strip specimens (length l, width w, and thickness t) as illustrated in Figure 2-(a). The specimens are made of a bisphenol A epoxy resin with 2 wt% of multiwalled carbon nanotubes (CNTs) dispersed uniformly through the specimen 1 . The presence of the CNTs makes the
specimen electrically conductive and provides the possibility of determining the damage state through electrical conductivity measurements. These specimens are subjected to monotonically increasing displacements between two rigid
crossheads in a testing machine. The global response of the specimen is characterized easily by measuring the force
and extension. We perform two additional measurements: ﬁrst, the spatial variation in the strain ﬁeld (resulting from
local perturbations in material state and properties) is measured at each load increment using digital image correlation.
In this method of strain measurement, the specimen is decorated by spray-painting a ﬁne speckle pattern; this speckle
pattern is imaged at high spatial resolution at each load increment. By comparing the speckle pattern in the initial and
1 The CNT dispersed epoxy resin was supplied by Molecular Rebar Design LLC, Austin. We acknowledge the gracious support of Dr. Clive
Bosnyak in providing the raw material.

2060

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

2061

σ( t )
Feed
Electrode

x
Nanotubes

Measure
Electric
Potential

(a)

(b)

Fig. 2. (a) Schematic representation of a typical experiment performed in our research project. (b) A typical measurement data: on the top, the
strain distribution over one specimen with red regions indicating localization of damage and strain; on the bottom, a plot indicating the horizontal
x-variation of strain at a ﬁxed y position, at one particular magniture of horizontal load.

5. Computational Eﬀorts
5.1. Finite Elements
In the 1D case being studied, we neglect the eﬀect of body forces, so that the governing equations take the form
⎫
⎪
dσ(k+1)
⎪
= 0 in Ω, ⎪
−
⎪
⎪
⎬
dx
(11)
⎪
⎪
u(0) = 0,
⎪
⎪
⎪
⎭
(k+1)
,
σ(L) = g
for each load increment k + 1. Multiplying by a test function υ and integrating by parts, we arrive at the weak form
Ω

σ(k+1) (u(k+1) , D(k+1) )

dυ
dx = g(k+1) υ(L),
dx

∀ υ ∈ V,

(12)

for an appropriate space of test functions V. We construct a partition of unity over the domain Ω and discretize using
standard basis functions:
ndof
ndof
dNi
duh
uh =
=
.
ui Ni (x) ⇒
ui
dx
dx
i
i
We also discretize the damage ﬁeld using a possibly diﬀerent basis from that of uh . Thus, we can rewrite the weak
form (12) as a algebraic system of nonlinear equations:
R(k+1)
=
j

Ω

σ(k+1) (u(k+1)
, D(k+1)
)
h
h

dN j
dx − g(k+1) N j (L),
dx

j = 1 . . . ndof .

, D(k+1)
) since both u(k+1)
and D(k+1)
depend upon the the history
The key is the evaluation of the stress state σ(k+1) (u(k+1)
h
h
h
h
of deformation and damage.

2062

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

The stress state evaluation is achieved by discretizing the evolution equations of the stress and damage. Because
we assume quasi-static loading of the material, we will work with increments, e.g. Δ , as opposed to an unsteady
discretization in time. Thus, given a load increment Δg = g(k+1) −g(k) , we have a corresponding displacement increment
u˙ ≈ Δu = u(k+1) − u(k) from which we can compute the corresponding strain increment ˙ ≈ Δ = (k+1) − (k) . Now,
using the stress conjugate variable Y = 1/2E 2 , we can evaluate the dissipation potential ψd :
ψd = Y − ω(D).
If ψd ≤ 0, then no damage is accumulated. If ψd > 0, then damage must be accumulated. Noting that Y˙ ≈ ΔY = E Δ ,
then
ΔY
E (k+1) Δ
ΔD =
=
.
(13)
ω (D(k+1) ) ω (D(k+1) )
Note that the evaluation of (13) requires a nonlinear iteration. Using the fact that Δσ ≈ σ
˙ = (1− D(k) )EΔ −ΔDE
then
⎧
⎪
⎪
if ψd ≤ 0,
⎨(1 − D(k) )EΔ
σ(k+1) = σ(k) + ⎪
⎪
⎩(1 − D(k) )EΔ − ΔDE (k+1) if ψd > 0.

(k+1)

,

Now we can write an algorithm for the evaluation of the stress state σ(k+1) :
1. Given u(0) , D(0) . Step k = 0.
2. Iterate until convergence:
(a) Compute u(k+1) given load g(k+1) .
(b) σ(k+1) = (1 − D(k+1) )EΔ .
(c) Compute ψd (Y (k+1) , D(k+1) ).
(d) If ψd (Y (k+1) , D(k+1) ) > 0, σ(k+1) = σ(k+1) − ΔDE (k+1) .
3. k = k + 1, goto 2.
5.2. Bayesian Analysis and Model Plausibilities
Let us say that we are interested in statistically inferring about the current state of a system of physical volume
Ω ⊂ R3 , so that we can make predictions about the system, given our updated knowledge about its state. For instance,
the state might be the set of physical parameter values. The state will be indicated by the vector θ ∈ Rnθ , for some
ﬁxed positive integer nθ > 0. In order to proceed with the state inference, we collect measurement data d ∈ Rnd , for
some ﬁxed positive integer nd > 0. Our current (pre-inference), and uncertain, knowledge about the system state is
represented by the prior probability density function (PDF) πprior (θ). The posterior (post-inference) state is given by
Bayes’ formula [22]
πlike (d|θ) · πprior (θ)
.
(14)
πpost (θ|d) =
πdata (d)
In (17), πpost (θ|d) is the posterior PDF deﬁning the Bayesian update of the prior information embodied in πprior (θ). The
likelihood PDF πlike (d|θ), a PDF of d, encapsulates assumptions about the discrepancy between the values d that are
measured and the values that can be computed with the computational model we have at our disposal. And the term
πdata (d) =

πlike (d|θ) · πprior (θ) dθ

is the normalization value (for a given d) that makes (17) a PDF. For the DDDAS of interest in this paper, Ω represents
some material piece that might be subjected to stresses and consequent damages, d is the strain (or electric potential)
measured at nd positions of the system, and θ represents the spatial distribution of damage (a vector of size nθ ) inferred
by statistical inversion.
Formula (14) can also be written to make explicit the whole set of assumptions underlying the modeling and
inference eﬀorts [23, 24, 25]:
πlike (d|θ j , M j ) · πprior (θ j |M j )
πpost (θ j |d, M j ) =
.
(15)
πdata (d|M j )
In (15), M j denotes the j-th model class, which has associate with it a random vector θ j of model parameters,
j = 1, 2, . . . , m. All m proposed model classes are “competing” to explain (match) the same collected data d. Any
arbitrarily ﬁxed parameter sample θ j ∗ in M j is called a model. That is, a model class can be seen as the family of all

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

2063

possible values of θ j , augmented with prior and likelihood PDFs. It should be noted that diﬀerent model classes might
have diﬀerent parameters.
In (15), the term
πdata (d|M j ) =

πlike (d|θ j , M j ) · πprior (θ j |M j ) dθ j

is denoted “model evidence”, and it reﬂects how likely one is to obtain a given data sample d with the whole family
of models θ j in M j . The model evidence can be used to update the ranking of model classes. Indeed, in the set
M = {M1 , . . . , Mm } of competing model classes, let us say that we have an a priori plausibility πprior (M j |M) for each
model class, with the constraint
m

πprior (M j |M) = 1.
j=1

Once we collect new data, we can update such a priori ranking. The posterior plausibility πpost (M j |d, M) for each
model class is also computed through a Bayesian updating procedure:
πpost (M j |d, M) =
In (16), the term

πdata (d|M j , M) · πprior (M j |M)
.
πdata (d|M)

(16)

m

πdata (d|M) =

πdata (d|M j , M) · πprior (M j |M)
j=1

is the normalization value (for a given d) that makes (16) a PDF. It reﬂects how likely one is to obtain a given data
sample d with the whole family of model classes M j in M.
In our DDDAS, we will use (15) and (16) in order to calibrate and rank some of the models of Section 2. For
instance, θ j = (E, s, R ) for the Krajcinovic and Foneska model (10).
5.3. Bayesian Filtering
Let us say that we are now interested in statistically assessing how the system state evolves with time t ∈ [0, +∞),
so that we can inform ourselves for potential decisions to be taken about the system, and/or for potential control actions
to be taken on it. For instance, the state might be a scalar damage ﬁeld throughout a volume region. The initial state
of the system is speciﬁed by the PDF π(θ(0) ). The (eventual) control will be indicated by the vector c ∈ Rnc , for some
ﬁxed positive integer nc > 0. In order to assess the system state, we collect measurement data d(1) , d(2) , . . ., at instants
0 = t(0) < t(1) < t(2) < . . ., and then apply Bayes’ formula
πpost (θ(k) |d(k) ) =

πlike (d(k) |θ(k) ) · πprior (θ(k) )
.
πdata (d(k) )

(17)

If no control is applied, or if we believe that the state should remain unchanged, Bayes’ formula (17) is applied
every time new data is collected, in order to update our knowledge about the system state. Implicit in this understanding
is the equality
πprior (θ(k+1) ) = πpost (θ(k) |d(k) ).
However, if control is applied, or if we believe the state changes over time due to events beyond our control, then:
(a) [Prediction step] One might need to use an evolution equation in order to predict the state of the system. A possible
discrete form of such evolution equation is
θ(k+1) = fθ(k+1) (θ(k) , c(k+1) , w(k) ),

(18)

where fθ(k+1) (·, ·, ·) is an evolution function and w denotes the state noise. Once the new state θ(k+1) is predicted,
one can also predict the next measurement to be obtained at t(k+1) . A possible discrete form of such prediction
is given by the output equation
(19)
y(k+1) = fy(k+1) (θ(k+1) , v(k+1) ),
where fy(k+1) (·, ·) is an output function and v denotes the output noise;

2064

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

(b) [Correction step] Then, ﬁnally, one can actually measure data d(k+1) at t(k+1) . The comparison between the model
output y(k+1) and tne measurements d(k+1) in the likelihood PDF will then allow one to statistically update the
predicted state θ(k+1) using Bayes’ formula (17).
The steps (a)-(b) continue as long as we want to assess and control the state of our system. Such continuing process
can be represented by the equation
πlike (d(k+1) , d(k) , . . . , d(1) |θ(k+1) ) · πprior (θ(k+1) )
.
πdata (d(k+1) , d(k) , . . . , d(1) )

πpost (θ(k+1) |d(k+1) , d(k) , . . . , d(1) ) =

(20)

If one assumes (i) that the system state follows a ﬁrst-order Markov process, that is,
πstate (θ(k+1) |θ(k) , . . . , θ(0) ) = πstate (θ(k+1) |θ(k) ),

(21)

and (ii) that, given a current state, the measurements are independent of previous measurements, that is,
πlike (d(k+1) |d(k) , . . . , d(1) , θ(k+1) ) = πlike (d(k+1) |θ(k+1) ),

(22)

then (20) can be rewritten as [26, 27, 28]
πpost (θ(k+1) |d(k+1) , d(k) , . . . , d(1) ) =

πlike (d(k+1) |θ(k+1) ) · πprior (θ(k+1) |d(k) , . . . , d(1) )
.
πdata (d(k+1) |d(k) , . . . , d(1) )

(23)

In (23), the term
πprior (θ(k+1) |d(k) , . . . , d(1) ) =

πstate (θ(k+1) |θ(k) , d(k) , . . . , d(1) ) · πpost (θ(k) |d(k) , . . . , d(1) ) dθ(k)

involves the evolution Equation (18), while the term
πlike (d(k+1) |θ(k+1) )
involves the output Equation (19). The recursive nature of (23) is clear, in the sense that one makes the transition
πpost (θ(k) |d(k) , . . . , d(1) )

−→

πpost (θ(k+1) |d(k+1) , d(k) , . . . , d(1) ).

(24)

Transition (24) can be broken into two intermediate transitions, namely the prediction and correction steps mentioned
above. The prediction step relates itself to the transition πpost (θ(k) |d(k) , . . . , d(1) ) −→ πprior (θ(k+1) |d(k) , . . . , d(1) ),
while the correction step relates itself to the transition πprior (θ(k+1) |d(k) , . . . , d(1) ) −→ πpost (θ(k+1) |d(k+1) , d(k) , . . . , d(1) ).
The Bayesian ﬁltering procedure (23) is usually intractable computationally, but it can be simpliﬁed with further
assumptions. For instance, if the operators fθ and fy are linear, and the noises are Gaussian, then the ﬁltering procedure
can be reduced to a simple Kalman ﬁlter [28]. In our DDDAS, we intend to apply the Kalman ﬁltering, as well as the
extended Kalman ﬁltering, to the most plausible damage model according to the analysis of Subsection 5.2.
6. Final Remarks
Future work will involve the full integration of the diﬀerent components described in Sections 2-5. Such integration will enable the stochastic analysis of the damage inﬂicted, during loading, in the CNT enriched ﬁber-reinforced
composite plates. More speciﬁcally, we will integrate the stochastic algorithms (calibration and ﬁltering) with the
model codes, calibrate the damage models with the experimental data, compute the plausibilities of the damage models, and dynamically infer the evolving stochastic damage proﬁle with the most plausible calibrated damage model.
We will use the parallel MPI/C++ software libraries libMesh [29] and QUESO [30]. Moreover, as an application of
the DDDAS concept, updated damage states will drive mesh reﬁnement. Short term goals also include the use of 2D
models and 2D mesh reﬁnements.
The connection of the experimental apparatus to the computational machinery is an eventual goal. Then the
updated damage states can not only be used to drive mesh reﬁnements, but also to guide the measurement apparatus,
e.g. decide in real-time where to concentrate the next set of measurements. Another potential use is to control actions
on the specimen itself, e.g. diminishing the load, or applying healing to the material. The latter case will demand
more sophisticated models as well. The self-healing of composites, through the embedding of vascular networks for
inﬁltration of “healing agents”, has been proposed in [31]. The framework of DDDAS can be used to target the patch
repair or the healing agents to retard the damage in the most eﬃcient manner.

E.E. Prudencio et al. / Procedia Computer Science 18 (2013) 2056 – 2065

Acknowledgements
The support of this work under AFOSR contract FA9550-11-1-0314 is gratefully acknowledged. Authors Bauman,
Oden, and Prudencio, were also partially supported by the DOE contract DE-FC52-08NA28615 in connection with
the Predictive Science Academic Alliance Program. Author Oden was also partially supported by the DOE contract
DE-FG02-05ER25701 in connection with the Multiscale Mathematics Program. Author Prudencio was also partially
supported by the Academic Excellence Alliance program of KAUST.
References
[1] NASA, Carbon Nanotube-Based Structural Health Monitoring Sensors, nASA Tech Briefs, LAR-16475-1 (2011).
[2] J. Rausch, E. M¨ader, Health monitoring in continuous glass ﬁbre reinforced thermoplastics: Tailored sensitivity and cyclic loading of CNTbased interphase sensors, Composites Science and Technology 70 (2010) 2023–2030.
[3] F. Darema, DDDAS: Dynamic Data Driven Applications Systems, http://www.nsf.gov/cise/cns/dddas.
[4] F. Darema, Dynamic Data Driven Applications Systems: A New Paradigm for Application Simulations and Measurements, Vol. 3038 of
Lecture Notes in Computer Science, Springer, 2004.
[5] F. Darema, Dynamic data driven applications systems: A new paradigm for application simulations and measurements, in: M. Bubak, G. D. v.
Albada, P. M. A. Sloot, J. J. Dongarra (Eds.), Computational Science - ICCS 2004, Vol. 3038 of Lecture Notes in Computer Science, Springer
Berlin / Heidelberg, 2004, pp. 662–669.
[6] F. Darema, Grid computing and beyond: The context of dynamic data driven applications systems, Proceedings of the IEEE 93 (3) (2005)
692–697.
[7] F. Darema, Characterizing dynamic data driven applications systems (dddas) in terms of a computational model, in: G. Allen, J. Nabrzyski,
E. Seidel, G. van Albada, J. Dongarra, P. Sloot (Eds.), Computational Science ICCS 2009, Vol. 5545 of Lecture Notes in Computer Science,
Springer Berlin / Heidelberg, 2009, pp. 447–448.
[8] F. Darema, M. Rotea, Dynamic data-driven applications systems, in: Proceedings of the 2006 ACM/IEEE conference on Supercomputing, SC
’06, ACM, New York, NY, USA, 2006.
[9] F. Darema, H. E. Seidel, Report of the August 2010 Multi-Agency Workshop on InfoSymbiotic/DDDAS. The Power of Dynamic Data Driven
Applications Systems (2011).
[10] G. Zhou, L. M. Sim, Damage detection and assessment in ﬁbre-reinforced composite structures with embedded ﬁbre optic sensors review,
Smart Materials and Structrures 11 (2002) 925–939.
[11] T. W. Chou, L. Gao, E. T. Thostenson, Z. Zhang, J. H. Byun, An assessment of the science and technology of carbon nanotube-based ﬁbers
and composites, Composites Science and Technology 70 (2010) 1–19.
[12] E. T. Thostenson, T. W. Chou, Carbon nanotube networks: sensing of distributed strain and damage for life prediction and self healing, Adv.
Mater. 18 (2006) 2837–2841.
[13] L. M. Kachanov, On time to rupture in creep conditions, Izviestia Akademii Nauk SSSR 8 (1958) 26–31.
[14] J. L. Chaboche, Continuum damage mechanics: Part I - General concepts, Journal of Applied Mechanics 55 (1988) 59–64.
[15] J. L. Chaboche, Continuum damage mechanics: Part II - Damage growth, crack initiation and crack growth, Journal of Applied Mechanics 55
(1988) 65–72.
[16] S. Murakami, N. Ohno, Continuum theory of creep and creep damage, Springer, 1981.
[17] D. Krajcinovic, G. U. Fonseka, The continuous damage theory of brittle materials, Parts 1 and 2, Journal of Applied Mechanics 48 (1981)
809–824.
[18] J. Lemaitre, J. L. Chaboche, Mechanics of Solid Materials, Combridge University Press, 1990.
[19] G. Belloni, G. Bernasconi, G. Piatti, Creep Damage Models. In: Creep of Engineering Materials and Structures, Applied Science Publisher,
1979.
[20] F. A. Cozzarelli, G. Bernasconi, Non-linear creep damage under one-dimensional variable tensile stress, International Journal of Nonlinear
Mechanics 16 (1981) 27–38.
[21] C. Lee, F. A. Cozzarelli, K. Burk, One-dimensional strain dependent creep damage in homogeneous materials, International Journal of
Nonlinear Mechanics 21 (1986) 303–314.
[22] E. T. Jaynes, Probability Theory: The Logic of Science, Cambridge University Press, 2003.
[23] S. H. Cheung, T. A. Oliver, E. E. Prudencio, S. Prudhomme, R. D. Moser, Bayesian uncertainty analysis with applications to turbulence
modeling, Reliability Engineering and System Safety 96 (2011) 1137–1149.
[24] E. E. Prudencio, S. H. Cheung, Parallel adaptive multilevel sampling algorithms for the Bayesian analysis of mathematical models, International Journal for Uncertainty Quantiﬁcation 2 (3) (2012) 215–237.
[25] J. T. Oden, E. E. Prudencio, A. Hawkins-Daarud, Selection and assessment of phenomenological models of tumor growth, Mathematical
Models and Methods in Applied Sciences.
[26] A. M. Fraser, Hidden Markov Models and Dynamical Systems, SIAM, 2008.
[27] A. H. Jazwinski, Stochastic Processes and Filtering Theory, Dover, 1998.
[28] G. Welch, G. Bishop, An Introduction to the Kalman Filter, http://www.cs.unc.edu/~welch/kalman/kalmanIntro.html, uNCChapel Hill TR 95-041 (2006).
[29] B. S. Kirk, J. W. Peterson, R. H. Stogner, G. F. Carey, libMesh: a C++ library for parallel adaptive mesh reﬁnement/coarsening simulations,
Engineering with Computers 22 (3) (2006) 237–254.
[30] E. E. Prudencio, K. W. Schulz, The parallel C++ statistical library QUESO: Quantiﬁcation of Uncertainty for Estimation, Simulation and
Optimization, in: M. Alexander et al. (Ed.), Euro-Par 2011 Workshops, Part I, Vol. 7155 of Lecture Notes in Computer Science, SpringerVerlag, Berlin Heidelberg, 2012, pp. 398–407.
[31] S. R. White, N. R. Sottos, P. Geubelle, J. S. Moore, M. R. Kessler, S. R. Sriram, E. N. Brown, S. Viswanathan, Autonomic healing of polymer
composites, Nature 409 (2001) 794–797.

2065

