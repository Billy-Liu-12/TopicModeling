Approximation Algorithms to Minimum Vertex
Cover Problems on Polygons and Terrains
Ana Paula Tom´
as 1 , Ant´
onio Leslie Bajuelos2 , and F´
abio Marques3
1

2

DCC-FC & LIACC, University of Porto, Portugal
apt@ncc.up.pt
Department of Mathematics / R&D Unit “Mathematics and Applications”
University of Aveiro, Portugal
leslie@mat.ua.pt
3
School of Technology and Management, University of Aveiro, Portugal
fabio@estga.ua.pt

Abstract. We propose an anytime algorithm to compute successively
better approximations of the optimum of Minimum Vertex Guard.
Though the presentation is focused on polygons, the work may be directly
extended to terrains along the lines of [4]. A major idea in our approach
is to explore dominance of visibility regions to ﬁrst detect pieces that are
more diﬃcult to guard.

1

Introduction, Related Works, and Problem Deﬁnition

The Art Gallery Problem [17] was posed in 1973 by V. Klee: “How many guards
are always suﬃcient to guard any simple polygon P with n vertices?”. Each guard
is considered a ﬁxed point with 2π range visibility, that is, it can see in every
direction. An equivalent formulation of this problem, is to ask how many point
lights are needed to fully illuminate P , so that it is also known as an Illumination
Problem. In our work, we focus on problems where guards may be only placed
at vertices of P – vertex guards. By simple polygon we mean a region of the
plane enclosed by a simple cycle of straight line segments. In a simple cycle, nonadjacent segments do not intersect and two adjacent segments intersect only in
their common endpoint. A simple polygon P is a polygon without holes, that is,
its interior is topologically equivalent to a disk. We say that point x sees point y
(or y is visible to x) iﬀ the closed segment xy does not intersect the exterior of P .
The set of all points of P visible to v ∈ P is called the visibility region of v and
denoted V (v). If V (v) is the union of a polygon Q ⊆ P and some line segments,
we restrict V (v) to Q, so that V (v) will ﬁt our deﬁnition of polygon. Chv´
atal
has shown that n3 guards are always suﬃcient and occasionally necessary to
guard a simple polygon with n vertices [2]. In 1978, Fisk [5] gave a simpler proof
based on the fact that the graph obtained by triangulating a simple polygon is
Work partially supported by funds granted to LIACC through Programa de Financiamento Plurianual, Funda¸c˜
ao para a Ciˆ
encia e Tecnologia and Programa POSI.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2657, pp. 869–878, 2003.
c Springer-Verlag Berlin Heidelberg 2003

870

A.P. Tom´
as, A.L. Bajuelos, and F. Marques

three-colorable. This idea led Avis and Toussaint [1] to develop an O(n log n)
algorithm for locating n3 stationary guards in a simple polygon.
Orthogonal (rectilinear) polygons, that is, polygons whose edges are parallel
to the axes, are of particular interest. Indeed, most real life buildings are, after
all, orthogonal. Moreover, these kind of polygons arise naturally in certain applications, such as VLSI design and computer graphics. Interesting results on
this subclass of art gallery problems include the proof by Kahn et al. [9] that
n
4 vertex guards are suﬃcient and sometimes necessary to guard n-vertex orthogonal polygons. Edelsbrunner at el. [3] developed an O(n log n) algorithm for
stationing n4 guards in a rectilinear polygon, by performing an L-shaped partition of the polygon. Later, Sack and Toussaint [15] showed that guard placement
in monotone rectilinear polygons can be done in linear time, while the problem
can be solved for arbitrary n-vertex rectilinear polygons in O(n log log n).
In contrast, Minimum Vertex Guard, that is the problem of ﬁnding the
minimum number of vertex guards needed to cover P , is much harder. Lee and
Lin [10] proved that it is NP-hard for polygons and Shuchardt and Hecker [16]
have shown that it is also NP-hard for orthogonal polygons. In [17], Urrutia
asserts that one approach that has been neglected in the study of art gallery
problems is that of ﬁnding algorithms that obtain approximate solutions. The
most well-known result on this subject is an algorithm by Ghosh [7], that ﬁnds in
O(n5 log n) time a vertex guard set that is at most O(log n) times the minimum
number of vertex guards needed. Further results are given by Eidenbenz in [4],
who also designed approximation algorithms and heuristics for several variations
of terrain guarding problems, by ﬁnding the right extension of Ghosh’s work.
Our contribution. We propose an anytime algorithm to compute successively
better approximations of the optimum to Minimum Vertex Guard. Anytime
means that the algorithm returns the best answer found even if it is not allowed
to run to completion, and may improve it if it is allowed to run longer. Although
the presentation is focused on polygons, our work may be directly extended to
terrains along the lines of [4]. A major idea in our approach is to successively
reﬁne an initial partition of polygon P and to explore dominance of visibility regions to try to identify, as soon as possible, pieces that are more diﬃcult to guard.
An experimental evaluation of the algorithm is being done, in which standard
Computational Geometry algorithms and Constraint Programming techniques
will be used in an hybrid way.
The paper is structured as follows. In the next section we formalize the
problem and state some useful results that support our method. In section 3, we
describe the algorithm and present an example, and then conclude.

2

From Minimum Vertex Guard to Minimum Set Cover

Minimum Vertex Guard is usually modeled as a discrete combinatorial problem – Minimum Set Cover – using decompositions of polygon P . It is often
required that each piece in such a decomposition is either totally visible or totally

Approximation Algorithms to Minimum Vertex Cover Problems

871

invisible from each vertex v, which guarantees that the approximation is exact.
This feature, which we shall term Piece Restriction, may render decompositions too grained [7]. Nevertheless, for some real-world applications, the solution
to the discrete model seems to give a fairly good approximation [4], even if the
decomposition does not verify Piece Restriction. As we mentioned already,
our idea is to take successively ﬁner partitions to improve an initial approximation. We now introduce some deﬁnitions about visibility and some results that
we need to present the algorithm.
A vertex of a polygon P is called convex if the interior angle between its two
incident edges is at most π; otherwise it is called reﬂex. We use symbol r to
represent the number of reﬂex vertices of P . It has been shown by O’Rourke [14]
that n = 2r + 4 for every n-vertex orthogonal polygon. Thus the upper bound
n
r
4 given in [9] is identical to the bound 2 + 1.
Deﬁnition 1. A partition Π of polygon P is a division of P into sub-polygons
(named pieces) that do not overlap except on their boundaries.

Deﬁnition 2. A rectilinear cut (r-cut) of an orthogonal polygon P is obtained
by extending each edge incident to a reﬂex vertex of P towards its interior until
it hits the boundary of P . By drawing all r-cuts, we partition P into rectangles
(called r-pieces, c.f. Fig. 1(a)). This partition will be denoted by Πr−cut .

v

v

pvq

S
(v)
VR,i

r-piece
e1

e4

.t

R
p

w

q

S
VR,j
(v)

e3

(a)

e2
H(S) = {v, e 1,e2, e 3, e4}
(b)

(c)

Fig. 1. Construction and visibility of the r-pieces.

Following the terminology of [3,14], we say that to draw an r-cut, we draw
an horizontal and a vertical cut, but keep the resulting parts together until all
r-cuts are done. Thus, Πr−cut does not depend on the order we do cuts, which is
useful to show Proposition 4 in section 2.2. By noting that each drawn horizontal
(vertical) line intersects at most n previously drawn vertical (horizontal) lines,
we may show that Πr−cut has at most 1 + r + r2 pieces.

872

2.1

A.P. Tom´
as, A.L. Bajuelos, and F. Marques

Notions of Visibility

Deﬁnition 3. A piece R is totally visible from vertex v if R ⊆ V (v) and is
partially visible from v if only part of the interior of R is visible from v. If R is
partially visible from v then V (v) ∩ R is called a visibility section and is denoted
by VRs (v). A piece R is visible by sections if it is union of visibility sections.
We represent the sets of all pieces that are totally visible from v and partially
visible from v, by Gtv and Gsv , respectively. Similarly, GtR and GsR represent the
sets of all vertices that are visible from every point of R and that are visible
from only part of the interior points of R. Thus, a vertex v ∈ GtR iﬀ R ⊆ V (v)
and v ∈ GsR iﬀ there are points p and q in the interior of R such that p is visible
from v but q is not. (We note that G stands for guard.)
The following result gives a simple condition that we may check to decide
whether a convex piece is totally visible from a vertex v of P . It may be used
with Proposition 2, to eﬃciently ﬁnd Gtv and Gsv , provided we have a good
representation of the grid deﬁned by Πr−cut (or another partition Π).
Proposition 1. Let v be a vertex of an orthogonal simple polygon P and R an
r-piece inside P . If e1 ,e2 ,e3 and e4 are the vertices of R and v and all ei ’s are
visible, then for all p ∈ R, v and p are visible (i.e., R ⊆ V (v)).
Proof. We ﬁrst observe that if R ⊆ P and v and the four ei ’s are visible, then
the line segments vei do not intersect the exterior of P . We now prove that the
convex hull H(S) of the set of points S = {v, e1 , e2 , e3 , e4 } is in P (see Fig. 1(b)).
If it were not, we could ﬁnd a point q ∈ H(S) with q ∈
/ P . Hence, P would not
deﬁne a closed simply-connected set and so it would not be a simple polygon.
Note 1. We actually have proved that, under the assumptions of this proposition,
H(S) ⊆ V (v), for S = {v} ∪ {vertices of R}. Therefore, Proposition 1 still holds
for any simple polygon P , if we replace r-piece by convex piece.
Proposition 2. If a piece R ⊂ P is partially visible from a vertex v, the visibility
section VRs (v) deﬁnes a closed simply-connected set.
Proof. If the proposition were false, VRs (v) could be divided into polygons and
s
s
there would be two disjoint polygons in such partition, say VR,i
(v) and VR,j
(v),
s
s
s
s
/ VR,i (v)∪VR,j (v).
and points p, q ∈ R such that p ∈ VR,i (v), q ∈ VR,j (v) and pq ∈
s
s
Thus, we could ﬁnd w ∈ R, w ∈ pq, w ∈
/ VR,i
(v) ∪ VR,j
(v) such that w and v
were not visible (wv ∈
/ P ). Therefore, there would exist t such that t ∈
/ P and
t ∈ ∆pvq ⊂ P (see Fig. 1(c)). Hence, P would not be a simple polygon because
it would not deﬁne a closed simply-connected set.
2.2

Diﬀerent Discrete Models of the Problem

Let Γ0Π be the set of pieces in partition Π of P that are partially visible from
Π
be the set of pieces that are not visible by sections.
at most one vertex. Let Γ∞

Approximation Algorithms to Minimum Vertex Cover Problems

873

Π
Lemma 1. Every piece in Γ0Π is not visible by sections, that is Γ0Π ⊆ Γ∞
.

Deﬁnition 4. Minimum Vertex Guard with Piece Restriction is the
problem Minimum Vertex Guard with the additional restriction that guards
are not allowed to cooperatively see a piece in the partition (i.e., visibility by
sections is not allowed).
Deﬁnition 5. Given a region F (i.e., a set of pieces), the optimum of Minimum
Vertex Guard and the optimum of Minimum Vertex Guard with Piece
Restriction w.r.t. F are denoted by OP T (F) and OP T✷ (F), respectively, with
guards placed in vertices of P .
Remark. In the rest of the paper, we assume that each piece R in a partition Π
is totally visible from at least one vertex of P . Every partition may be reﬁned to
meet this condition. If a piece R is only visible by sections (i.e., when GtR = ∅),
we replace R by the partition of R induced by its visibility sections, that we
call ZR . The pieces in ZR are the cells of the arrangement of segments that
deﬁne the boundary of R and the boundary of the visibility sections VRs (v), for
v ∈ GsR . Each piece in ZR is either totally visible or totally invisible to each
vertex of P . In this way, we clearly have OP T (F) ≤ OP T✷ (F), for all F.
Π
, the optimum of Minimum Vertex Guard is the
Now, for every Γ ⊆ Γ∞
optimum of Minimum Vertex Guard with Piece Restriction, as stated
Π
Π
by Lemma 2. It follows from Γ0Π ⊆ Γ∞
⊆ Π and the deﬁnitions of Γ and Γ∞
.
Π
Lemma 2. For every subset Γ of Γ∞
, we have OP T✷ (Γ ) = OP T (Γ ). FurtherΠ
more, OP T (Γ0Π ) ≤ OP T (Γ∞
) ≤ OP T (P ) ≤ OP T✷ (Π), for every polygon P
and partition Π of P , such GtR = ∅, for all R ∈ Π.

A triangulation T of polygon P is a decomposition of P into triangles by a
maximal set of non-intersecting diagonals. Every triangle is totally visible from
each of its vertices, that are also vertices of P . Proposition 3 is a direct corollary
of Lemma 2 and of Fisk’s proof [5] of the upper bound n3 for Minimum Vertex
Guard on an n-vertex polygon.
Proposition 3. For every triangulation T of an n-vertex simple polygon P ,
OP T✷ (T ) ≤ n3 .
A similar result holds for orthogonal polygons, for which the partition Πr−cut
deﬁned by r-cuts (c.f. Deﬁnition 2) is a natural decomposition.
Proposition 4. For the partition Πr−cut of an n-vertex orthogonal polygon P
into r-pieces, OP T✷ (Πr−cut ) ≤ n4 = 2r + 1.
A key idea for proving it is the observation that Πr−cut is a reﬁnement of the
decomposition proposed by Edelsbrunner et al. in [3]. This allows us to adapt
the proof that their algorithm achieves this same upper bound. Ultimately both
are based on O’Rourke’s proof of the Rectilinear Art Gallery Theorem [14] and
proceed by induction on the number of reﬂex vertices. Each L-shaped polygon
in their decomposition may appear as the union of three or more r-pieces in

874

A.P. Tom´
as, A.L. Bajuelos, and F. Marques

Πr−cut , but it is still true that all are totally visible from the single reﬂex vertex
of the L-shaped polygon.
The works of Ghosh [7] and of Eidenbenz [4] have in common the approximation of OP T✷ (Π) using a Greedy algorithm [8] for Minimum Set Cover. It
recursively adds to the solution the vertex that totally sees a maximum number
of pieces not yet covered by the current solution. We argue that this heuristic
does not take enough advantage of the polygon’s topology, and in particular, of
the fact that some pieces are dominant over others: if they are visible so are the
dominated ones. Next we formalize this notion of dominance and explore it to
design an approximation algorithm.

3

An Anytime Approximation Algorithm

The main idea is to ﬁnd a sequence of successively shorter intervals enclosing
OP T (P ). To approximate OP T (P ) from below we consider an increasing powerful subset of dominant pieces that are not visible by sections. To ﬁnd a sequence
of decreasing upper bounds, we successively reﬁne the given partition of P . We
introduce two notions of dominance both for vertices and for pieces.
Deﬁnition 6. A vertex vi is strictly dominant over a vertex vj if V (vj ) ⊆ V (vi ).
A vertex vi is ✷-dominant over a vertex vj if Gtvj ⊆ Gtvi .
Deﬁnition 7. A piece Ri is ✷-dominant over a piece Rj if GtRi ⊆ GtRj , with
Π
is strictly dominant over a diﬀerent piece
Ri , Rj ∈ Π. A piece R in Γ ⊆ Γ∞
t
t
R ∈ Π if GR ⊆ GR , meaning that R is necessarily guarded whenever R is
Π
guarded. We recall that Γ∞
is the set of pieces that are not visible by sections.

4

3

R11

6 5 R2

R12

R7 R3

R20 R16

R13

R8 R4

14 R23 R21 R17

R14

R9

15 R24 R22 R18

R15

R10 R6

12

11

3

7

8

11
R19 10 9

12

4

7

8

R11

6 5

10 9

13

13
1 14

R5 2
R1

0

15

2

1
0

Fig. 2. Example

Example 1. Though the polygon in Fig. 2 is quite simple, it illustrates the impact
of ﬁnding dominant pieces and vertices. We may see that GtR1 = {0, 1, 2, 15} and
GsR1 = {4, 5, 6, 8, 9, 10, 12, 13, 14} but R1 is not visible by sections. Hence, all

Approximation Algorithms to Minimum Vertex Cover Problems

875

other r-pieces R such that GtR ⊇ GtR1 are ✷-dominated and strictly dominated
by R1 . In this case, we may discard R6 , R10 , R15 , R18 , R22 and R24 . Piece
R2 is not visible by sections either, so that we can throw away R3 , R4 and R5 .
Eventually we would keep just three pieces R1 , R19 and R11 . The latter is visible
by sections from the non-dominated vertices 2 and 13, which totally guard R1
and R19 . Here, Γ0Π = {R3 , R4 , R5 , R6 , R7 , R8 , R10 , R14 , R15 , R17 , R18 , R21 , R22 }
Π
but R7 is strictly dominant over them. Also, Γ∞
= Π \ {R11 } and Π is Πr−cut .
Let D✷ (F) and D(F) be maximal sets of all ✷-dominant pieces and of strictly
non-dominated pieces in the family/region F. We wrote maximal instead of
maximum because Ri is ✷-dominant over Rj and Rj is ✷-dominant over Ri if
GtRi = GtRj . To break ties, either Ri or Rj may be selected as dominant, but not
both. Proposition 5 follows directly from these deﬁnitions of dominance.
Proposition 5. For all partitions Π of P , we have OP T✷ (Π) = OP T✷ (D✷ (Π))
Π
and OP T (Γ ) = OP T (D(Γ )) = OP T✷ (Γ ) = OP T✷ (D✷ (Γ )), for every Γ ⊆ Γ∞
.
Reﬁning Partitions. As before, let Γ0Π be the set of pieces in partition Π of P
that are partially visible from at most one vertex. Let us construct a sequence
of pairs (Γi , Πi ), for i ≥ 0, being Πi a partition of P and Γi a subset of pieces
of Πi that are not visible by sections, with Π0 = Π and Γ0 = Γ0Π . We consider
∆i+1 = {R | R ∈ Πi \ Γi and R is not ✷-dominated by a piece in D(Γi )}
and if ∆i+1 = ∅, we select a piece R ∈ ∆i+1 and ﬁnd whether R is visible
by sections. For that, we compute the partition ZR of R determined by the
visibility sections. As we noted in section 2.2, each piece in ZR satisﬁes Piece
Restriction, i.e., is either totally visible or totally invisible to each vertex of P .
So, R is not visible by sections iﬀ there is a piece in ZR that is not visible to
any vertex in GsR . We deﬁne Πi+1 = (Πi \ {R}) ∪ ZR and Γi+1 = Γi ∪ ZR , if
R is visible by sections, and Πi+1 = Πi and Γi+1 = Γi ∪ {R}, otherwise. This
completion procedure stops when ∆i+1 = ∅, because then D(Γi ) = D(Πi ) and
OP T✷ (D(Πi )) = OP T (D(Πi )) = OP T (P ). Non-increasing intervals enclosing
OP T (P ) are determined by this sequence {(Γi , Πi )}i≥0 , as formally stated by
Proposition 6. It follows from Γi ⊆ Γi+1 , and the fact that Πi+1 reﬁnes Πi .
Proposition 6. For all i ≥ 0,
OP T✷ (Γi ) ≤ OP T✷ (Γi+1 ) ≤ OP T (P ) ≤ OP T✷ (Πi+1 ) ≤ OP T✷ (Πi )
We note that if R ∈ Πi is ✷-dominated by some piece in Γi then this piece
strictly dominates R, because pieces in Γi satisfy Piece Restriction. This implies that ∆i+1 ⊂ ∆i , for all i, so that ∆i+1 can be obtained from ∆i . Moreover,
we may use a maximal dominant set D(Γi ) instead of Γi .
In contrast to previous approaches [4,7], we do not start from a partition Π that satisﬁes Piece Restriction. Neither would we like to assume
that OP T✷ (Π) is a good approximation of OP T (P ), in practice, as argued by
Eidenbenz for a problem of location of antennas [4]. Since Minimum Set Cover

876

A.P. Tom´
as, A.L. Bajuelos, and F. Marques

is NP-hard, though for small instances it can naturally be solved to optimality,
we would like to keep the number of elements in the partition small. This is
why we decompose pieces of the initial partition Π that are visible by sections
in a lazy evaluation fashion, and introduce the notion of dominance. A possible
heuristic to select the piece R ∈ ∆i+1 that is the next one to be decomposed is
to proceed from the boundary pieces to the most interior ones, to hopefully and
quickly improve the bounds of the enclosing interval or reduce the number of
dominant pieces. In particular, we may try to ﬁnd pieces in ears of the polygon
and may take more than one piece at each step. The duality between vertices and
pieces may be further explored to reduce the sets of relevant pieces and vertices.
This is the main idea behind the ﬁrst step in the approximation algorithm for
OP T✷ (F), we describe next.
3.1

Approximation of OP T✷ (F )

The idea is to tighten the relevant sets D✷ (F) and D✷ (VF ) by applying jointly
✷-dominance for vertices and for pieces. The algorithm is in Fig. 3: VF is the set
of vertices that totally see pieces of F, and GtR,F = GtR ∩ VF and Gtv,F = Gtv ∩F,
for v ∈ VF and R ∈ F. Our intuition is that the number of relevant pieces is
Compute a maximal set D✷ (VF ) of ✷-dominant vertices in VF .
DO
Replace VF by D✷ (VF ).
Replace GtR,F by GtR,F ∩ VF , for all R ∈ F .
Compute D✷ (F ), a maximal set of ✷-dominant pieces in F.
IF F = D✷ (F ) THEN
Replace F by D✷ (F).
Replace Gtv,F by Gtv,F ∩ F , for all v ∈ VF .
Compute D✷ (VF ).
WHILE D✷ (VF ) = VF .
Fig. 3. A polynomial algorithm for ﬁnding ✷-dominance w.r.t. F.

much smaller than the total number of pieces. The number of iterations is at
most min(|VF |, |F|). The algorithm preserves OP T✷ (F), though the reduction
of VF may not preserve the set of optimal solutions. If we apply the Greedy
algorithm to the resulting F, we ﬁnd an approximation of OP T✷ (F) with a ratio
bound of O(log f ) [12], where f is the number of pieces in the reduced F. This
approximation may be used to try to solve some instances to optimality, that is
to ﬁnd OP T✷ (F).
3.2

Using Constraint Programming to Find OP T✷ (F )

The reformulation of Minimum Vertex Guard with Piece Restriction
as Minimum Set Cover allows us to model it as a Constraint Satisfaction

Approximation Algorithms to Minimum Vertex Cover Problems

877

Problem (CSP) and to solve it using Constraint Programming. The decision
variables are: Xv ∈ {0, 1}, for v ∈ VF (1 iﬀ a guard is placed at vertex v) and
YR ∈ {0, 1}, for R ∈ F (1 iﬀ piece R is guarded). The constraints are (1)–(3)
YR = |F|

(1)

Xv ≥ YR , for all R ∈ F

(2)

YR ≥ Xv |Gtv |, for all v ∈ VF

(3)

R∈F

v∈GtR

R∈Gtv

and state that all pieces must be visible, that piece R is visible only if there exists
v ∈ GtR with Xv = 1, and that a guard at v sees all pieces in Gtv , respectively.
The goal is to minimize v∈VF Xv .
The concept of Constraint Programming (CP) was introduced in artiﬁcial intelligence and graphics in the 1960s and 1970s. For an introduction to CP see for
instance [13]. Fr¨
uhwirth et al [6] describe an application of CP to solve optimal
antenna placement. CP languages and solvers help reduce the implementation
eﬀort and oﬀer signiﬁcant pruning of the search space through the reduction of
the domains of variables by constraint propagation.
Additional constraints may be imposed here to reduce the search space. For
example, for orthogonal polygons, we know that v∈VF Xv ≤ n4 . More interesting are the constraints that result from Proposition 6. If [mi , Mi ] is the
interval found up to approximation step i, we may check whether it is possible
to improve the lower bound mi by imposing that mi < OP T✷ (Γi+1 ) ≤ Mi .
If this condition, together with the dominance relations, renders the model inconsistent, we deﬁne mi+1 = mi . If either OP T✷ (Γi+1 ) = Mi or all pieces in
D(Πi+1 ) \ Γi+1 are totally visible for the resulting solution, OP T (P ) was found.
Otherwise, we may check whether the constraints (1)–(3) deﬁned by Πi+1 are
consistent with OP T✷ (Πi+1 ) ≤ mi+1 . If they are, OP T (P ) was found. If not, we
compute OP T✷ (Πi+1 ), but, to try to reduce the search, we impose the redundant constraint that OP T✷ (Πi+1 ) > mi+1 . As before, we try to improve Mi by
requiring also that OP T✷ (Πi+1 ) < Mi , and consistently update Mi+1 in a similar way. The approximation procedure may continue until OP T✷ (Πi+1 ) = mi+1 ,
in which case we know that OP T (P ) was found.
3.3

The Main Steps of Our Approximation Algorithm

We summarize the main steps of the general algorithm. Suppose the n vertices
of polygon P are given in counterclockwise order. Perform a decomposition Π of
P (e.g., Πr−cut for orthogonal polygons), such that each piece is totally visible
from at least a vertex. Compute the visibility region of each vertex of P , by
adapting Lee’s algorithm [11,17] and keep only a maximal set of (strictly) nondominated vertices. Determine Gtv , Gsv , for all v ∈ D({v1 , . . . , vn }) and collect
relevant information about GtR and GsR , but delay decomposition of pieces visible

878

A.P. Tom´
as, A.L. Bajuelos, and F. Marques

by sections. Compute Γ0Π and apply the algorithm described in the previous
subsections. We note that to compute OP T✷ (F) we ﬁrst apply the algorithm in
Fig. 3 to reduce F and VF .

4

Conclusions

We give an anytime algorithm to compute the optimal solution of Minimum
Vertex Guard by successive approximations. Though the presentation is focused on polygons, it may be directly extended to terrains following [4]. An
experimental evaluation of the algorithm is being done, which will combine the
application of standard Computational Geometry algorithms and Constraint
Programming techniques.

References
1. Avis, D., Toussaint, G.: An eﬃcient algorithm to decompose a polygon into starshaped pieces. Pattern Recognition 13 (1981) 295–298.
2. Chv´
atal, V.: A combinatorial theorem in plane geometry. J. of Combinatorial Theory (Series B) 18 (1975) 39–41.
3. Edelsbrunner, H., O’Rourke, J., Welzl, E.: Stationing guards in rectilinear art
galleries. Computer Vision, Graphics, and Image Processing 27 (1984) 167–176.
4. Eidenbenz, S.: Approximation algorithms for terrain guarding. Information Processing Letters 82 (2002) 99–105.
5. Fisk, S.: A short proof of Chv´
atal’s watchman theorem. J. of Combinatorial Theory
(Series B) 24 (1978) 374.
6. Fr¨
uhwirth, T., Brisset, P.: Optimal Placement of Base Stations in Wireless Indoor
Communication Networks. IEEE Intelligent Systems Magazine 15(1) (2000).
7. Ghosh, S. K.: Approximation algorithms for art gallery problems. Proc. Canadian
Information Processing Society Congress. (1987) 429–434.
8. Johnson, D.: Approximation algorithms for combinatorial problems. J. Comput.
System Sci. 9 (1974) 256–278.
9. Kahn, J., Klawe, M., Kleitman, D.: Traditional galleries require fewer watchmen.
SIAM J. Algebraic and Discrete Methods 4 (1983) 194–206.
10. Lee, D. T., Lin, A. K.: Computational complexity of art gallery problems. IEEE
Transaction on Information Theory IT-32 (1986) 276–282.
11. Lee, D. T.: Visibility of a simple polygon. Computer Vision, Graphics, and Image
Processing 22 (1983) 207–221.
12. Cormen, T. H., Leiserson, C. E., Rivest, R. L.: Introduction to Algorithms,
11st Ed., MIT Press (1994) 974–978.
13. Marriott, K., Stuckey, P.: Programming with Constraints – An Introduction, MIT
Press (1998).
14. O’Rourke, J.: An alternate proof of the rectilinear art gallery theorem. J. of Geometry 21 (1983) 118–130.
15. Sack, J. R., Toussaint, G.: Guard placement in rectilinear polygons. Computational
Morphology. G. T. Toussaint, ed., Elsevier Science Publishers (1988) 153–175.
16. Schuchardt, D., Hecker, H.: Two NP-hard problems for ortho-polygons. Math.
Logiv Quart. 41 (1995) 261–267.
17. Urrutia, J.: Art gallery and illumination problems. In J.-R. Sack and J. Urrutia,
editors, Handbook on Computational Geometry. Elsevier (2000).

