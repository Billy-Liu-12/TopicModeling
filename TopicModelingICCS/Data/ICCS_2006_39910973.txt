Throughput Analysis and Enhancement for
CSMA Based Wireless Networks
Younggoo Kwon
Konkuk University, 1 Hwayang-dong, Kwangjin-gu, Seoul, 143-701, Korea
ygkwon@konkuk.ac.kr

Abstract. We studied the performance of contention based medium
access control (MAC) protocols. We used a novel technique for estimating
the throughput, and other parameters of interest, of such protocols. In
this paper, a new assumption for the theoretical throughput limit in
the distributed CSMA based MAC algorithm is introduced. Through
the performance analysis and simulation studies, the proposed algorithm
shows signiﬁcant performance improvements in CSMA based wireless
networks.

1

Introduction

In many performance analysis papers for the binary exponential backoﬀ based
CSMA algorithms, the performance analysis starts from the assumption that all
stations have the same average contention window range in steady state [1]-[3].
The same average contention window range for all active stations can be understood that all stations have the same average probability of packet transmission
in steady state. The performance of many binary exponential backoﬀ based MAC
algorithms, including the IEEE 802.11 MAC algorithm, can be explained well by
using the assumption that all stations have the same average contention window
range in steady state. Furthermore, the optimum value which will minimize the
wasting overheads during the contention procedure can be derived for a given
number of active stations [1]-[3]. However, there are still the wasting overheads
come from the inherent limitation of the assumption that all stations have the
same contention window range for packet transmission in steady state.

2

Enhanced CSMA

Under high traﬃc load and under some ergodicity assumption, we can obtain
the simpliﬁed expression for the throughput:
m
¯
E[Nc ](E[Bc ] · ts + m
¯ + DIFS ) + (E [Bc ] · ts + m
¯ + SIFS + ACK + DIFS )
(1)
where E[Nc ] is the average number of collisions, E[Bc ] is the average number of
idle slots.
ρ=

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 973–976, 2006.
c Springer-Verlag Berlin Heidelberg 2006

974

Y. Kwon

From this result, we can see that the theoretical throughput limit would be the
following: a successful packet transmission must be followed by another successful
packet transmission without any overheads, in which case, E[Nc ] = 0, E[Bc ] = 0.
If we could develop a contention-based MAC algorithm, which assigns a backoﬀ timer 0 to the station in transmission while assigns all other stations’ backoﬀ timers to ∞ for each contention cycle, then we could achieve the perfect
scheduling, leading to the theoretical throughput limit. Unfortunately, such a
contention-based MAC algorithm does not exist in practice. However, this does
provide us the basic idea how to improve the throughput performance in the
MAC algorithm design. We can use the operational characteristics of the perfect
scheduling to design more eﬃcient contention-based MAC algorithm. One way
to do so is to design a MAC protocol to approximate the behavior of perfect
scheduling. To achieve the similar operational characteristics of perfect scheduling, the proposed MAC algorithm provides the following design factors: Large
contention window range & small idle slots, long-term fairness, backoﬀ timer
realignment.

3

Performance Evaluations

We consider two kinds of contention window sizes, one for the whole contention
procedure including deferring conditions, E[CW ], and the other for the case
of transmitting a packet, E[CW ]P kSend . The relation between the average contention window size for each contention procedure E[CW ] and the probability
of a successful packet transmission for one station psuc,1 is given by the following
equation.
E[CW ]

psuc,1 =
i=1

E[CW ] − i M−1
1
·(
)
E[CW ]
E[CW ]

(2)

Furthermore, the summation of the probability of collision and the probability
of deferring for one station is given by the following equation: 1 − psuc,1 =
pcol,1 + pdef er,1 .
The contention window size for each contention procedure is increased by the
increasing factor (IF) when a station experiences either a collision or a deferred
situation, and goes to the minimum value with a successful packet transmission.
Therefore, the average contention window size for each contention period is
E[CW ] = psuc,1 × minCW + (1 − psuc,1 ) × E[CW ] × IF

(3)

If we use the above equations (2) and (3), we can use an iterative process to
obtain the average contention window size for each contention procedure E[CW ]
and the probability, psuc,1 , of a successful packet transmission for one station. If
the number of stations in the network is M , the total probability of successful
packet transmission for the whole network is psuc,total = psuc,1 · M and the total
average probability of collision for the whole network is pcol,total = 1 − psuc,total .

Throughput Analysis and Enhancement for CSMA Based Wireless Networks

975

1

Distribution of contention window size

0.9

0.8

0.7

0.6

0.5
CW=32
CW=64
CW=128
CW=256

0.4

0.3

0.2

0.1

0

0

10

20

30

40

50

60

70

80

90

100

Number of stations

Fig. 1. Distribution for Contention Window Size

Now, we can calculate the average number of collisions for a successful packet
transmission
pcol,total
(4)
E[Nc ] =
psuc,total
To calculate the average idle backoﬀ slot number E[IdleSlot]/tslot , we need the
probability of sending a packet at each contention window size E[CW ]P kSend . In
Figure 1, an example of the distribution of contention window sizes for sending
a packet in steady state is shown for the minCW = 32, maxCW = 256, IF = 2
case. In the 10 station case, 51% of stations have contention window size of
sending a packet at CW = 32, 9% of stations have CW = 64, 3% of stations
have CW = 128, and 37% of stations have CW = 256. As the number of stations
increase, we can see the operational characteristics of the proposed algorithm
follow those of the perfect scheduling. The average contention window size of
sending a packet is
E[CW ]P kSend = 32 × pP kSend,32 + 64 × pP kSend,64 + 128 × pP kSend,128
+256 × pP kSend,256

(5)

where pP kSend,i is the probability that a packet is transmitted with a contention
window size i.
The average number of idle backoﬀ slots is given by the following equation
E[CW ]P kSend −1

i×

E[IdleSlot]/tslot =
i=1

(E[CW ]P kSend − i)M−1
(E[CW ]P kSend )M

(6)

In Figure 2, the throughput results of the proposed algorithm, the improved
DCF (under the assumption that all stations have the same contention window
range) and the IEEE802.11 MAC are shown for 10 and 50 contending stations,
respectively. We can see that the throughput of the proposed MAC is signiﬁcantly

976

Y. Kwon
1

0.9

normalized throughput

0.8

0.7

0.6

0.5

0.4

0.3
Theoretical throughput limit
Proposed algorithm (10 stations)
Proposed algorithm (50 stations)
Improved DCF (10 stations)
Improved DCF (50 stations)
IEEE 802.11 (10 stations)
IEEE 802.11 (50 stations)

0.2

0.1

0

0

200

400

600

800

1000

1200

average packet size, bytes

Fig. 2. Throughput results

improved compared with other MAC algorithms and close to the theoretical limit
of perfect scheduling as the average packet size is increased.

4

Conclusions

The general assumption that all stations have the same contention window range
in steady state results in sub-optimal solutions for performance analysis of distributed contention-based MAC algorithms because of its inherent limitations.
We present a new assumption for the theoretical throughput limit from observing the operational characteristics of the perfect scheduling CSMA algorithm.
The proposed algorithm based on the new assumption signiﬁcantly improves the
throughput performance and still provides easy implementation property in wireless networks. Extensive performance analysis and simulation studies for various
performance factors have demonstrated that the proposed algorithm reduces the
wasting overheads come from each contention procedure.

References
1. Bharghavan, V.: MACAW: A Media Access Protocol for Wireless LAN’s. SIGCOMM’94, London, England, Aug. (1994) 212-225
2. Bianchi, G.: Performance Analysis of the IEEE802.11 Distributed Coordination
Function. IEEE Journal on Selected Areas in Commun. 18 (2000) 535-547
3. Cali, F., Conti, M., Gregori, E.: Dynamin Tuning of the IEEE 802.11 Protocol
to Achieve a Theoretical Throughput Limit. IEEE/ACM Trans. on Networking 8
(2000) 785-799
4. Aad, I., Castelluccia, C.: Diﬀerentiation mechanisms for IEEE 802.11. IEEE INFOCOM Anchorage, AK, USA (2001)

