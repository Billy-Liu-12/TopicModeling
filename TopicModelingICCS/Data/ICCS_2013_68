Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1989 – 1998

International Conference on Computational Science, ICCS 2013

Adjoint-Based Control of Fluid-Structure Interaction for
Computational Steering Applications
Y. Bazilevs*,a, M.-C. Hsub, and M.T. Bementc
b

a
Department of Structural Engineering, University of California, San Diego, CA 92093, USA
Institute for Computational Engineering and Sciences, University of Texas, Austin, TX 78712, USA
c
Los Alamos National Laboratories, Los Alamos, NM 87545, USA

Abstract
The primal and adjoint, time-dependent fluid—structure interaction (FSI) formulations are presented. A simple control strategy
for FSI problems is formulated based on the information provided by the solution of the adjoint FSI problem. A well-known
benchmark FSI problem is computed to demonstrate the effectiveness of the proposed technique. Such control strategies as
proposed in this paper are useful for computational steering or so-called Dynamics Data Driven Application System (DDDAS)
simulations, in which the computational model is adjusted to include the information coming from the measurement data, and
control strategies may be employed to computationally steer the physical system toward desired behavior.
Keywords: Fluid—structure interaction; adjoint FSI formulation; adjoint-based control; isogeometric analysis; computational steering; DDDAS

1. Introduction
Dynamics Data Driven Application System (DDDAS) [1] is a framework in which measurement data collected
for a given physical system are used to dynamically update a computational model of that system. Using
measurement data, the computational model geometry, boundary conditions, forcing, and material parameters may
be updated to better represent physical reality. At the same time, the properly updated computational model is able
to produce higher-fidelity outputs for the quantities of interest for which measurements are not readily available. As
such, DDDAS is a framework in which measurement and simulation co-exist in a symbiotic environment.
Many applications of DDDAS involve not only updating of the computational model on the basis of sensor data,
but also adjustment of the model and physical system input parameters to optimize a desired outcome. For example,
in [2], the authors developed and deployed a DDDAS framework for computational steering of the laser-guided
surgery for prostate cancer treatment. The temperature and location of the laser were dynamically controlled to
achieve maximum damage to the cancerous tissue. In our case, we are interested in a DDDAS framework for largescale structures exposed to aerodynamic loading, such as military aircraft fuselage and wings, helicopter blades,
unmanned aerial vehicles, and wind turbine blades [3].

* Corresponding author. Tel.: +1-858-534-3663; fax: +1-858-822-2260.
E-mail address: yuri@ucsd.edu.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.368

1990

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

As part of the DDDAS framework, we are interested in dynamically controlling structures to ensure their
operation in safe conditions, and to minimize the onset and progression of structural damage. In most cases, the
fluid—stricture interaction (FSI) [4] effect is important and needs to be included in the underlying computational
model. Furthermore, because the FSI effect is important, a successful dynamic control strategy for our application
system must be able to take FSI coupling into account.
Such a dynamic control strategy for time-dependent FSI is described in this paper. The proposed control strategy,
which is the main focus of this paper, is based on the simultaneous solution of the primal and adjoint (or sometimes
called “dual”) FSI problems. The solutions of both primal and adjoint FSI problems are used to adjust the control
parameters of the application system. Because both primal and adjoint FSI problems involve coupling between the
primal and dual fluid and structural mechanics degrees of freedom, the control strategy automatically takes FSI
coupling into account.
The paper is outlined as follows. In Section 2 we present the primal and adjoint FSI formulations in the weak
form. In Section 3 we show how the solution of the adjoint FSI problem is used to compute the objective function
gradient with respect to the control parameters of the FSI problem. We then formulate a simple control strategy and
show its performance on a well-known benchmark FSI problem. In Section 4 we draw conclusions.
2. Governing Equation of the Primal and Adjoint FSI Problems
In this section we provide the weak form of the coupled primal and adjoint FSI equations. The fluid is assumed to
be viscous and incompressible. The structure is modeled as a solid that is allowed to undergo large deformations.
The details of the formulations are given in what follows.
2.1. Primal FSI problem
The weak form of the Navier—Stokes equations of incompressible flows in the Arbitrary Lagrangian—Eulerian
frame [5] may be stated as: find the fluid velocity u and pressure p, such that for all δu and δp, the linear
momentum and incompressibility constraint test functions:

B f ({δu,δp}, {u, p}) − F f ({δu,δp}) = 0,
where the semilinear form

(1)

B f ({δu,δp}, {u, p}) is given by

B f ({δu,δp}, {u, p}) = ∫ δu ⋅ ρ f
Ωf

⎛ ∂u
⎞
+ (u − uˆ ) ⋅ ∇u dΩ − ∫ ∇ ⋅ δu p dΩ
⎝ ∂t
⎠
Ω
f

+ ∫ ∇ δu : 2μ f ∇ u dΩ + ∫ δp∇ ⋅ u dΩ,
s

Ωf

s

(2)

Ωf

F f ({δu,δp}) contains body forces and surface tractions. Here, uˆ is the velocity of the
fluid mechanics domain, and ρ f and μ f are the density and dynamic viscosity of the fluid.

and the linear functional

The weak form of the structural mechanics equations in the Lagrangian frame [6] may be stated as: find the
structural displacement y, such that for all δy, the linear-momentum test functions:

Bs (δy, y ) − Fs (δy ) = 0,
where the semilinear form

(3)

Bs (δy, y ) is given by
Bs (δy, y ) = ∫ δy ⋅ ρs
Ωs

d2 y
dΩ + ∫ ∇ X δy : FS dΩ,
dt 2
Ωs

(4)

(5)

1991

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

Fs (δy ) contains body forces and surface tractions. Here, F is the deformation gradient, S
is the second Piola—Kirchhoff stress tensor, and ρs is the density. (See [6] for details.)
With these definitions, a coupled FSI problem may be compactly stated as: Find u, p, and y, such that for
all δu, δp, and δy:
and the linear functional

B f ({δu,δp}, {u, p}) − F f ({δu,δp}) + Bs (δy, y ) − Fs (δy ) = 0.
To ensure proper FSI coupling, the following auxiliary relationships hold at the interface between the fluid and
structure:

dy
,
dt

(6)

δu = δy,

(7)

u=
and

which state that the fluid and structural mechanics velocities and liner momentum test functions are equal. The latter
condition ensures that the tractions at the fluid-structure interface are in equilibrium [4]. The fluid mechanics
domain velocity at the fluid-structure boundary equals to the velocity of the structure. In the fluid mechanics domain
interior, a suitable extension of the structural velocity at the interface is taken to have a well-posed FSI problem.
However, the solution of the FSI problem should not depend on a particular choice of that extension.
2.2. Adjoint FSI problem
The adjoint FSI problem in the weak form may be derived directly from the coupled FSI formulation given by Eq.
(5), following the approach of [2]. Assuming the fluid domain velocity is “frozen” during the derivation, we arrive
*
*
*
at the following weak form of the adjoint FSI problem: find u and p , the dual fluid velocity and pressure, and y ,
*

*

*

the dual structural displacement, such that for all δu , δp , and δy :

(

)

(

)

B*f {δu * ,δp* }, {u * , p* } − F f* {δu * ,δp* } + Bs* (δy * , y * ) − Fs* (δy * ) = 0.

(8)

The semilinear forms for the adjoint fluid and structural mechanics problems are given by

⎛ ∂u *
⎞
B*f {δu * ,δp* }, {u * , p* } = ∫ δu * ⋅ ρ f ⎜ −
− (u − uˆ ) ⋅ ∇u * + (∇u ) u * ⎟ dΩ − ∫ ∇ ⋅ δu * p* dΩ
⎝ ∂t
⎠
Ωf
Ωf

(

)

+ ∫ ∇ sδu * : 2μ f ∇ su * dΩ + ∫ δp*∇ ⋅ u * dΩ,
Ωf

(9)

Ωf

and

Bs* (δy * , y * ) = ∫ δy * ⋅ ρs
Ωs

d2 y *
dΩ + ∫ ∇ X δy * : D∇ X δy * dΩ,
dt 2
Ωs

(10)

where the tangent stiffness tensor D is a function of the structural displacement y, and is given in component form
by

D = [DiJkL ],

(11)

DiJkL = FiI C IJKL FkK + δ ik SJL .

(12)

(13)

1992

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

The linear functionals that “drive” the adjoint fluid and structural mechanics problems are defined depending on the
circumstances in which the adjoint problems are employed.
To ensure proper adjoint FSI coupling, the following auxiliary relationships hold at the fluid-structure
interface:

u* =
and

dy *
,
dt
(14)

δu * = δy * ,

which state that the fluid and structural mechanics dual velocities and liner momentum test functions are equal. The
latter condition leads to the equilibrium of dual tractions.
Remark: The adjoint FSI formulation employed in this work is derived holding the fluid domain velocity and
position fixed. Otherwise, the adjoint FSI formulation takes on a somewhat more complicated form (see, e.g., [7,8]).
However, as we will illustrate with a numerical example, the proposed adjoint FSI formulation is sufficient for its
intended purpose.
3. Adjoint-Based Control Formulation for FSI Problems
3.1. Computation of the objective function gradient.
In this work, the primal FSI equations are discretized using the ALE-VMS technique for the fluid
mechanics equations [9], and Galerkin technique for the structural mechanics equations. NURBS-based
Isogeometric Analysis (IGA) [10,11] is used for the spatial discretization of both the fluid and structural mechanics
problems. The resulting equations are integrated in time using the Generalized-α method [12,13]. Within each time
step, the FSI equations are solved using a quasi-direct coupling technique [14], where at the level of the Newton—
Raphson iteration the increments of fluid and structural mechanics solution are computed simultaneously in a
coupled fashion. The increment in the structural displacement is then used to compute the fluid mechanics mesh
deformation using equations of linear elastostatics with Jacobian-based stiffening [15]. The adjoint FSI equations
are discretized in space in the same way as the primal FSI equations, and are integrated backward in time also using
the Generalized-α method. However, because the adjoint FSI equations are linear, no Newton—Raphson iterations
are necessary. Furthermore, we do not have a dual mesh displacement variable in our formulation, so we do not
compute it. As such, the adjoint FSI problem is computationally less expensive than its primal counterpart.
The discretized primal FSI equation system may be compactly written as

(15)

N(d) − Fc (c) = 0,

where N(d) is a nonlinear residual function dimensioned by the number of degrees of freedom employed in the FSI
problem, d is a vector of discrete unknowns of the FSI problem, Fc is a vector of applied discrete forces, and c is a
vector of discrete, adjustable time-dependent control parameters. The dimension of c depends on a particular
problem.
The discretized adjoint FSI equations may be compactly written as

L*d d* − Fd* = 0,
*

*

(16)
*

where L d is the left-hand-side matrix, d is the vector of discrete dual unknowns, F d is the vector of applied
discrete forces of the adjoint FSI problem, and the subscript “d” denotes the dependence of these objects on the
*
solution of the primal FSI problem. F d is computed as follows. Let g denote a vector of objective functions in
one’s optimization or control application, and let ||g||w denote its appropriate weighted norm. Then, the discrete

(17)

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

1993

forcing of the adjoint FSI problem is given by

Fd* =

∂ gw
.
∂d

It may be shown that the gradient of the objective function with respect to the control parameters may be expressed
as follows (see, e.g., [2,16]):

∂ g w ∂Fc * ∂Fc * −1 ∂ g w
=
⋅d =
⋅ [L d ]
.
∂c
∂c
∂c
∂d

(18)

The gradient of the objective function is used in the first-order gradient descent methods, which we employ in this
work. In these methods a typical update of the vector of control parameters c takes the form

c i+1 = c i − τ i

∂ gw
,
∂c i

where “i” is the iteration counter, and τ i is a real parameter that determines the step size. Eq. (19) states that the
reduction in the objective function is expected if steps are taken in the direction of its gradient with
respect to the control parameters. The iterations given by Eq. (19) continue until a local (or global)
(19)
minimum is attained, or until the objective function is sufficiently reduced. We use this methodology to
develop a simple control strategy for FSI problems described in the next section.
3.2. A simple control strategy based on the gradient descent method
We propose the following simple strategy for time-dependent FSI problems. The time interval over which the FSI
equations are solved is decomposed into subintervals, and the control parameters are assumed to be constant in each
subinterval. Let tn and tn+1 denote the end points of the time interval of interest. Then, the following five-step
procedure is employed on the subinterval:
1.
2.
3.
4.
5.

Set c=0 and advance the primal FSI problem forward in time from tn to tn+1.
Given the primal FSI solution, advance the adjoint FSI problem backward in time from tn+1 to tn.
Given the adjoint solution, compute the objective function gradient according to Eq. (18).
Compute the control parameters according to Eq. (19).
Advance the primal FSI problem forward in time from tn and tn+1 using c from Step 4.

The five-step procedure is repeated for the subsequent subintervals. Steps 4 and 5 may be repeated multiple times to
ensure the desired reduction in the objective function. However, one must keep in mind that the FSI problem is timedependent, and to ensure that it is well posed, the change in the control parameter values from one subinterval to
the next may not be arbitrarily large. Techniques such as line search may be employed to select the step size τ i in
Eq. (19).
Remark: Although not explicitly shown in this paper, the proposed control strategy may be employed as part of a
larger DDDAS framework for an FSI application system. For example, a wind speed sensor may detect a sudden
increase in wind speed, requiring an appropriate adjustment of the blade pitch angle (the control parameter) to
minimize tip deflection (the objective function) while maintaining a minimum power production (the constraint).

1994

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

Fig. 1. FSI of an elastic beam attached to a fixed, rigid square block. Problem setup.

3.3. Numerical example

Fig. 2. FSI of an elastic beam attached to a fixed, rigid square block. Contours of flow speed (in cm/s), and deformation of the elastic beam for
the baseline simulation without control.

To demonstrate the proposed technique, we solve a 2D benchmark problem involving FSI of a thin elastic beam
attached to a fixed, rigid block [13]. The problem setup is illustrated in Figure 1. Quadratic NURBS are used to
discretize the fluid and structural mechanics equations. The NURBS mesh consists of 6,936 quadratic elements and
is conforming at the fluid-structure interface. We first solve the problems using the primal FSI formulation without

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

1995

control to establish a baseline solution. Vortices develop behind the rigid block and interact with the elastic bar,
sending it into large-amplitude oscillatory motion. Snapshots of the fluid pressure and beam deformation are shown
in Figure 2.

Fig. 3. FSI of an elastic beam attached to a fixed, rigid square block. Objective function and control force.

To reduce the beam deformation, we apply a time-dependent force at the free end of the beam. The force is
restricted to act in the vertical direction, however, its magnitude and sign are left as control parameters. The
objective function is the squared L2-norm of the displacement vector. The beam, control force, and objective
function are shown in Figure 3. For this computation, the proposed five-step procedure is employed at each time
step, and Steps 4 and 5 are only executed once. This gives, at every time step, the vertical force of

c = −τ
The step size

∂ gw
.
∂c

τ is kept constant throughout the simulation.

1996

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

Fig. 4. FSI of an elastic beam attached to a fixed, rigid square block. Primal and dual velocity and pressure contours for the simulation employing
the proposed control strategy.

Simulation results with control are shown in Figures 4 and 5. Figure 4 shows the snapshots of the primal and dual
velocity and pressure solution at a time instant. Note that the beam deformation is not as pronounced as in the case
of the baseline solution without control. Figure 5 shows the time history of the objective function and compares it to
the baseline solution. The control is clearly doing its job of keeping the beam displacement very small compared to
the baseline case. The time history of the vertical force is also shown in Figure 5. Because we “turn on” the control
mechanism at the time instant when the beam displacement is at its largest, the control force grows very quickly to
suppress it. Once the displacement is suppressed, the vertical force exhibits much smoother behavior in time.

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

1997

Fig. 5. FSI of an elastic beam attached to a fixed, rigid square block. Left: comparison of the time-dependent objective function for the
simulations with and without control. Note that the beam displacement, as measured by the objective function, is reduced significantly when the
control is employed. Right: time history of the control force.

4. Conclusions
Primal and adjoint, fully coupled, time-dependent FSI formulations are presented. A simple control strategy
based of the solution of the primal and adjont FSI problems is proposed. The performance of the control strategy is
shown on a well-known FSI benchmark problem. Such control strategies as presented in this work are well suited
for deployment as part of a DDDAS or computational steering framework for applications involving fluid—
structure interaction.
Acknowledgements
The lead author acknowledges the support of the Air Force Office of Scientific Research Award FA9550-12-10005. M.-C. Hsu was supported through the Los Alamos–UC San Diego Educational Collaboration Fellowship.
References
1.

F. Darema, "Dynamic Data Driven Applications Systems: A New Paradigm for Application Simulations and Measurements", in
proceedings of ICCS 2004 – 4th International Conference on Computational Science, pp. 662–669.

2.

J. T. Oden, K. R. Diller, C. Bajaj, J. C. Browne, J. Hazle, I. Babuska, J. Bass, L. Demkowicz, Y. Feng, D. Fuentes, S. Prudhomme, M.
N. Rylander, R. J. Stafford, and Y. Zhang, “Dynamic Data-Driven Finite Element Models for Laser Treatment of Prostate Cancer”,
Num. Meth. PDE, 23 (2007) 904-922.

3.

Y. Bazilevs, A.L. Marsden, F. Lanza di Scalea, A. Majumdar, and M. Tatineni, “Toward a computational steering framework for
large-scale composite structures based on continually and dynamically injected sensor data”, Procedia Computer Science, 9 (2012)
1149--1158.

4.

Y. Bazilevs, K. Takizawa, and T.E. Tezduyar, Computational Fluid--Structure Interaction. Methods and Applications, Wiley 2013.

5.

T.J.R. Hughes, W.K. Liu, and T.K. Zimmerman, “Arbitrary Lagrangian–Eulerian finite element formulation for incompressible

6.

T. Belytschko, W.K. Liu, and B. Moran, Nonlinear Finite Elements for Continua and Structures, Wiley 2000.

7.

T. Richter, “Goal-oriented error estimation for fluid–structure interaction problems”, Computer Methods in Applied Mechanics and

viscous flows”, Computer Methods in Applied Mechanics and Engineering, 29 (1981) 329–349.

Engineering, 223-224 (2012) 28-42.
8.

K.G. van der Zee, E.H. van Brummelen, I. Akkerman, and R. de Borst, “Goal-oriented error estimation and adaptivity for fluid–
structure interaction using exact linearized adjoints”, Computer Methods in Applied Mechanics and Engineering, 200 (2011) 2738-

1998

Y. Bazilevs et al. / Procedia Computer Science 18 (2013) 1989 – 1998

2757.
9.

Y. Bazilevs, M.-C. Hsu, K. Takizawa, and T.E. Tezduyar, “ALE-VMS and ST-VMS Methods for Computer Modeling of WindTurbine Rotor Aerodynamics and Fluid—Structure Interaction”, Mathematical Models and Methods in Applied Sciences. 22 (2012)
1230002.

10.

T.J.R. Hughes, J.A. Cottrell, and Y. Bazilevs, “Isogeometric analysis: CAD, finite elements, NURBS, exact geometry, and mesh
refinement”, Computer Methods in Applied Mechanics and Engineering, 194:4135-4195, 2005.

11.
12.

J.A. Cottrell, T.J.R. Hughes, and Y. Bazilevs, Isogeometric Analysis: Toward Integration of CAD and FEA. Wiley, Chichester, 2009.
J. Chung and G. M. Hulbert, “A time integration algorithm for structural dynamics withimproved numerical dissipation: The
generalized-α method”, Journal of Applied Mechanics, 60 (1993) 371-75.

13.

Y. Bazilevs, V.M. Calo, T.J.R. Hughes, and Y. Zhang, “Isogeometric fluid-structure interaction: Theory, algorithms and
computations,” Computational Mechanics, 43 (2008) 3-37.

14.

T. E. Tezduyar, S. Sathe, and K. Stein, “Solution techniques for the fully-discretized equations in computation of fluid–structure
interactions with the space–time formulations”, Computer Methods in Applied Mechanics and Engineering, 195 (2006) 5743-5753.

15.

A. A. Johnson and T. E. Tezduyar, “Mesh update strategies in parallel finite element computations of flow problems with moving
boundaries and interfaces”, Computer Methods in Applied Mechanics and Engineering, 119 (194) 73–94.

16.

M.T. Bement and T.R. Bewley, “Excitation design for damage detection using iterative adjoint-based optimization—Part 1: Method
development”, Mechanical Systems and Signal Processing, 23 (2009) 783–793.

