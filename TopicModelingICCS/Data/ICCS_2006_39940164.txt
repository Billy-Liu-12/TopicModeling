Precise Matching of Semantic Web Services*
Yonglei Yao, Sen Su, and Fangchun Yang
State Key Laboratory of Networking & Switching Technology,
Beijing University of Posts & Telecommunications (BUPT)
187# 10 Xi Tu Cheng Rd., Beijing 100876, China
{yaoyl, susen, fcyang}@bupt.edu.cn

Abstract. Matchmaking is an important aspect of the Web Services
interactions, which enables a service requester to locate the most suitable
counterpart. However, current service matching algorithms operate on service
advertisements, which don’t contain enough information to select a service
instance that the consumer can immediately interact with. In this paper, we
propose a precise matching algorithm, based on WS-Agreement and OWL-S, to
deal with this challenge. We show how to combine WS-Agreement with OWLS to obtain an agreement-style service description, and how the degree of match
between two descriptions of this style is calculated1.

1 Introduction
In recent years, more and more Web Services are becoming available on the Internet,
enabling customer to interact with a great number of potential counterparts. On the
other hand, this also makes a matchmaking process necessary to locate the most
suitable one.
In current matchmaking approaches, the matching algorithms operate on service
advertisements and queries [3, 4, 5]. Unfortunately, quality of service and other
guarantees cannot simply be advertised. As a result, the matchmaking process can
only find a set of services which may possibly meet one’s requirements, leaving the
task of selecting the most suitable counterpart to the customer.
Against this background, this paper develops a matching algorithm that operates
on agreement-style service descriptions, to help a customer to select a specific
service that can indeed meets all its requirements. This work advances the state of
the art in the following ways. Firstly, it’s a novel way to calculate the degree of
match between services based on detailed service descriptions which combine WSAgreement [1] and OWL-S [2]. Secondly, this work develops a matching algorithm
which can provide a precise and quantified degree of match between a service
requested and a service offered, which in turn can serve as a sound criteria for
service selection.
* The work presented in this paper was Supported by 973 program of China(2003CB314806),
the National Natural Science Foundation project of China(90204007), the program for
Changjiang Scholars and Innovative Research Team in University (PCSIRT), and National
Natural Science Funds for Distinguished Young Scholar(60125101).
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part IV, LNCS 3994, pp. 164 – 167, 2006.
© Springer-Verlag Berlin Heidelberg 2006

Precise Matching of Semantic Web Services

165

2 Matching Algorithm
In order to select a specific service instance, a service consumer will continuously
exchange proposals described in WS-Agreement, in which an OWL-S profile is
embedded as service description terms to describe the functionalities provided or
required, with potential service providers. Our matching algorithm operates on such
agreement-style service descriptions to facilitate the service selection process. Our
work presents several matching degree assessment methods as follows:
2.1 Concept Matching Degree
Firstly, we show how to calculate the degree of match between two concepts defined
in ontologies. We differentiate between four degrees of concept match in terms of the
subsumption relationships, and quantify each degree, as shown following:
ConceptMatchDegree(C1, C2){
if C1 C2 then return 1;
else if C2 subsumes C1 then return p;
else if C1 subsumes C2 then return q;
else return 0;}

≡

Where C1 and C2 denote two concepts defined in some ontologies, and p, q
and p q.

＞

∈(0,1)

2.2 Input Matching Degree
For input matching, we want to show how well the inputs and preconditions required
by service providers are satisfied by service consumers.
InputMatchDegree(inputsProvider, inputsRequester){
inputMatchDegree=1;
for each inputP in inputsProvider do{
find inputR in inputsRequester that
m=max(ConceptMatchDegree(inputR, inputP));
if m>0 then inputMatchDegree=inputMatchDegree*m;
else return 0;}
return inputMatchDegree;}
2.3 Output Matching Degree
For output matching, we decide how well the outputs and effects required by service
consumers are satisfied by those of service providers, as shown following:
OutputMatchDegree(outputsProvider, outputsRequester){
outputMatchDegree=1;
for each outputR in outputsRequester do{
find outputP in outputsProvider that

166

Y. Yao, S. Su, and F. Yang

m=max(ConceptMatchDegree(outputP, outputR));
if m>0 then outputMatchDegree=outputMatchDegree*m;
else return 0;}
return outputMatchDegree;}
2.4 Guarantee Term Matching Degree
Besides functionalities, a service consumer also demands an assurance with respect to
the non-functional attributes from the service provider, such as price, delivery time,
quality of service, etc. The assurance is described by the guarantee terms of the WSAgreement document.
{t1, t2,……, tn} represent the guarantee terms demanded by the service
Let t
consumer, and Di = [mini, maxi] denotes the intervals of values for quantitative term ti
acceptable for the service consumer. Values for qualitative issues, on the other hand,
are defined over a fully ordered domain, i.e., Di =<q1, q2,……, qm>.
For each term ti, the service consumer has a scoring function Vi: Di → [0, 1] that
gives a score to a value of term ti in the range of its acceptable values. Based on the
above model, we can calculate the degree of match between guarantee terms.

∈

GuranteeTermMatchDegree(termsRequester, termsProvider){
guranteeTermMatchDegree=0;
for each term ti in termsRequester do{
if there is a corresponding term in termsProvider with
value j then GuranteeTermMatchDegree+=WiVi(j);}
return GuranteeTermMatchDegree;}
Where Wi denotes the relative importance that the service consumer assigns to term
Vi, The weights of all terms are normalized, i.e.,

∑

1≤ i ≤ n

Wi = 1 .

2.5 Global Matching Degree
Based on the matching degrees between input parameters, output parameters and
guarantee terms, we can determine the degree of match between two agreement-style
service descriptions as:
M a tc h D e g re e = W i × in p u tM a tc h D e g re e + W
+ W

g

o

× o u tp u tM a tc h D e g re e

× G u a ra n te e T e rm M a tc h D e g re e

(1)

Where Wi, Wo and Wg represent the weights that the service consumer assigns to
input match, output match and guarantee term match respectively.

3 Conclusion and Future Work
In this paper, we propose an algorithm for calculating the degree of match between
two services based on the agreement-style service descriptions. Given the algorithm
we develop, a service consumer can select a specific service which indeed has the
ability to meet her requirements.

Precise Matching of Semantic Web Services

167

Future work includes implementing the matching algorithm, applying this
technique to various applications, and as the last step, investigating the effectiveness
of the algorithm with real world use cases.

References
[1] A. Andrieux, K. Czajkowski, A. Dan, K. Keahey, H. Ludwig, J. Pruyne, J. Rofrano, S.
Tuecke, and M. Xu, Web Services Agreement Specification (WS-Agreement): Global Grid
Forum, May 2004.
[2] D. Martin, M. Burstein, J. Hobbs, O. Lassila, D. McDermott, S. Mcllraith, S. Narayanan,
M. Paolucci, B. Parsia, T. Payne, E. Sirin, N. Srinivasan, and K. Sycara. Owl-s: Semantic
markup for web services, http://www.daml.org/services/owl-s/1.1/overview/, 2004.
[3] J. Hau, W. Lee, J. Darlington, A Semantic Similarity Measure for Semantic Web Services,
In Proceedings of the fourteenth International World Wide Web Conference (WWW
2005), Chiba, Japan, May 10–14, 2005
[4] L. Li and I. Horrocks, “A software framework for matchmaking based on semantic web
technology”, In Proceedings of the Twelfth International World Wide Web Conference
(WWW 2003), pages 331-339, ACM, 2003.
[5] M. Paolucci, T. Kawamura, T.R. Payne, and K. Sycara., “Semantic matching of web
services capabilities”, In Proceedings of the 1st International Semantic Web Conference
(ISWC), pages 333-348, Sardinia, Italia, June 2002.

