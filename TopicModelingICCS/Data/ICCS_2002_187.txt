SIMULATION AND DIGITAL CONTROL OF
NONLINEAR SYSTEMS
Alexandru Ioan Ticlea1*, Gildas Besançon**, Dumitru Popescu*
*
Faculty of Automatic Control and Computer Science,
“Politehnica” University, 313 Splaiul Independentei Ave., 77206 Bucharest 6, Romania
{ticlea, dpopescu}@indinf.pub.ro
**
Laboratoire d'Automatique de Grenoble,
ENSIEG BP46, 38402 Saint Martin d'Heres, France
Gildas.Besancon@inpg.fr

Abstract. This paper is on the digital control of a continuous-time non-linear system
by observer-based state feedback. Simulink is used to simulate both the continuous
system and the discrete feedback loop. Some discrete-time observer and controller are
built on-line at each sample time according to the linear approximation of the system
about the current estimation point using an f-function. This methodology is
exemplified through the numerical simulation of some load speed control in a
mechanical system subjected to backlash and only using the measurement of the
driving motor speed.

1

Introduction

Non-linear control represents nowadays an important part of control theory. Given a state
space representation, one approach is the linearization of the differential equations about
the nominal operating point of the system. The resulting model, which will be obviously a
linear one, is then used to compute controller and state estimator gains, required in a linear
state feedback control scheme [2]. This technique assumes the knowledge of the values
taken by the states of the system at the nominal operating point, this being a difficult task if
the system is complex and has a lot of states. Moreover, the value of the reference
determines the nominal operating point, which makes the linear approximation tightly
dependent on this reference.
In this paper, we rather consider a reference-independent scheme, with a discrete-time
implementation, in the sense that some discrete observer and controller are designed, with
on-line computations at each sample time, based on a linear approximation of the system
about the current operating point. This methodology appears to give fairly good results in
the problem of control we consider in this paper, namely the control of the load speed in a
mechanical system subjected to backlash. We will simulate the physical process and the
closed loop using Simulink.
The discrete-time design was in particular chosen in order to better perform on-line
computations: in each sample period we indeed linearize the system about the current
estimation point and then build the corresponding (discrete) state estimator and controller.
Notice that in order to build a linear approximation of the system, the non-linearity should
be differentiable. However, if this is not the case, the above condition can be relaxed to the
existence of a differential function that approximates the non-linear characteristic, and this
is what happens in the example we consider in this paper.
The paper is organised as follows: Section 2 presents in some details the methodology
we will use, including the well-known extended Kalman filter and integral control, and it
1

At the LAG when this work was achieved.

also shows how the discrete estimator and controller are built from a continuous-time state
space description. Section 3 describes the example on which this methodology is applied,
while section 4 presents the corresponding simulation results and comments them. Finally,
Section 5 draws the final conclusions.

2

Methodological Aspects

2.1

System Linearization About the Current Estimation Point2

Consider that the non-linear model is described by
x

a
x  B u t  G  w t

(1)

Cxv

(2)

y

with ax a non-linear, differentiable function, w representing the process noise and v the
measurement noise. We will assume that the noise signals are individually white, zero
mean, gaussian, with known covariance:
E 
w

Ev



0, E wwT



 

Q, E vvT

 

R, E wvT

0

(3)

We will denote
Ai, j

wai
wx j

(4)
x xˆ

where ai is the ith component of a(x), xj is the jth component of x and x̂ is the current state
estimation. This matrix is changing according to the value of the current state estimate, so
in what follows we will refer it as Axˆ in order to point out the fact that we must compute
this matrix online every time x̂ changes. The non-linear function ax , if sufficiently
smooth, can be expanded in Taylor series about the current estimate x̂ as
ax

a
xˆ  Axˆ  x  xˆ  ...

(5)

Neglecting high order terms and assuming knowledge of x̂ enables us to approximate
the system (1) and (2) as
x

Axˆ  x  B  u 
t  G  w t  axˆ  Axˆ  xˆ

(6)

Cxv

(7)

y

where the additive term in (6), axˆ  Axˆ  xˆ is usually referred as a bias input. By
combining this term with the one involving the true input of the system we obtain another
expression for (6),
x

Axˆ  x  u xˆ 
t Gw t

(8)

where u xˆ is computed online from
2

The same type of linearization is performed in [1] for non-linear systems that already have a discrete
state space representation.

axˆ  B  u t  Axˆ  xˆ

u xˆ t

2.2

(9)

Discrete Time, Extended Kalman Filter

After computing the linear approximation about the current estimation point, the next step
is to build the corresponding state estimator. As it will be a discrete one, a discrete
equivalent of the linear approximation is needed. If h is the sample time and we set
B xˆ

(10)

I

where the identity matrix has the size of Axˆ ,3 the discrete equivalent of (8) and (7) is given
by [2]:
Ad  x k  Bd  u k  wk

x k 1

yk

(11)

Cd  xk  vk

(12)

e Axˆ  h

(13)

with
Ad
h A ˆ K
x

³0 e

Bd

dK  B xˆ

Cd
uk



dK

(14)
(15)

C

a xˆk  B  u k  h  Axˆ  xˆk

u xˆk

E wk wkT

h A ˆ K
x

³0 e

³

Qk

h

(16)

T

e AxˆW  G  Q  G T  e Axˆ W dW

(17)

0



E vk vkT

Rk

R
h

(18)

For numerical algorithms on the computation of (13), (14) and (17) see [3].
According to [1], for the system described by (11) and (12) with noise covariance from
(17) and (18), the equations of the Kalman filter are
xˆ k 1 k

xˆ k





Ad  xˆ k k 1  B d  u k  Ad  Pk 1 k  C dT  C d  Pk 1 k  C dT  R k

y

k

1



 C d  xˆ k k 1



xˆ k k 1  Pk 1 k  C dT  C d  Pk 1 k  C dT  R k

1



 y k  C d  xˆ k k 1

where Pk 1 k is also computed from a recursive relationship:

3

Notice that in (8) the input of the system is a vector with as many rows as the state vector.

(19)

(20)

Ad  Pk k  AdT  Q k

Pk 1 k
Pk 1 k 1



(21)

Pk 1 k  Pk 1 k  C dT  C d  Pk 1 k  C dT  R k

1

 C d  Pk 1 k

(22)

Equation (22) is a discrete Riccati equation. Under usual stabilizability and detectability
assumptions it provides the optimal stabilising solution for the pair AxTˆ , C T , as well as





the largest noise robustness for the filter if Qk and R k are computed from (17) and (18)
respectively. Notice that if the system is not affected by noise, Qk and R k can be
considered as tuning parameters.
2.3

Discrete Optimal Control

In this sub-section we present the design of a state-feedback in order to control any linear
output Cc  x of the system, the measured output Cm  x being used only for state
estimation. Figure 1 presents the block diagram corresponding to this case. It may be seen
that if Cc=Cm, we can control the measured output of the system as well. In this case the use
of the estimated output instead the real one, takes advantage of measurement noise filtering,
which is performed by the state estimator.

Fig. 1. Block diagram for integral control with state estimation

In order to compute K and K0 at each sample time, we must use the corresponding linear
approximation of the system in that moment. We will use equations (6) and (7) and we will
treat the bias input in the same way as we are treating w, i.e. like a disturbance that the
controller will have to reject. Therefore, we can write for the system in Fig. 1:
ª Axˆ
«C
¬ c

ª x º
«K »
¬ ¼

0º ª x º ª B º

u

0»¼ «¬K »¼ «¬ 0 »¼

(23)

where
u

>@K

ª xº
K0  « »
¬K ¼

(24)

Next, if we denote respectively
A

ª Axˆ
«C
¬ c

0º
,
0»¼

B

ªBº
« 0 »,
¬ ¼

K

>@K

K0

(25)

we see that the computation of K and K0 reduces to the computation of a stabilising K for
the pair A, B . In optimal control, K is obtained from the solution of a Riccati equation.



We would like to obtain at each sample time a corresponding K for the current linear
approximation of the system, and computing on-line the solution of a continuous Riccati
equation is not a reliable solution. A better idea is the computation of K from the solution
of a discrete Riccati equation, a recursive relationship similar to (22), which doesn't require
a significant computational effort. In order to be able to use such a relationship, we must
first discretize the system depicted by (23). Using the same sample time we have used for
the state estimator, we obtain
e A h

Ad
Bd

³

h

(26)

e A K dK  B

(27)

0

Consequently, we have for K a similar equation to that describing the gain of the
Kalman filter:

K

R  B

T
d

 S k 1 k  Bd

1

 BdT  S k 1 k  Ad

(28)

where
S k 1 k

S k 1 k 1

AdT  S k k  Ad  Q



S k 1 k  S k 1 k  B d  B dT  S k 1 k  B d  R

(29)
1

 B dT  S k 1 k

(30)

The constant matrices Q and R are used for controller tuning. After replacing the
continuous integrator in Fig. 1 by a discrete one, at each sample time the control device
should build a linear approximation about the current estimation point, discretize it,
compute the estimated state vector, form the pair A, B , compute its discrete equivalent
and finally compute the feed-back gains K and K0.



3

Example of Non-Linear Estimation and Control

Fig. 2. Block structure of the system

Fig. 3. Load inertia

Consider an asynchronous motor connected to a load through a system of gears. Fig. 2
presents the structure of this system. The motor torque is the input of the system, while the
motor speed is the measured output. We know the inertia models for motor, load and gears
(Fig. 3), and also the transfer model of each shaft (Fig. 4). A difference appears at the third
shaft, as the transfer from the last gear to the load presents a backlash-type non-linearity,
meaning that the transfer of power between these two components of the system has the
characteristic of a dead-zone (Fig. 5). The considered problem is to control the angular
velocity of the load and estimate the resisting torque, from the only measurement of the
angular velocity of the motor.

Fig. 4. Shaft 1

Fig. 5. Shaft 3 with backlash

From the above block description of the system, we can derive a non-linear state space
representation. An important requirement in order to build a linear approximation of the
system is that the non-linearity must be differentiable. The dead-zone characteristic doesn't
fulfil this condition; therefore we will approximate it with a differentiable function (Fig. 6).
Considering that the dead-zone lies between T and T radians, and knowing that the
function we are searching must have as an asymptote the dead-zone characteristic (which
has slopes equal to one) we can find the approximating expression (31) and subsequently its
corresponding derivative (32).

f x

wf
wx

­ x2
,xt0
°
° x T
®
2
° x ,xd0
¯°  x  T

­ x 2  2 xT
,xt0
°
2
° x  T
® 2
° x  2 xT , x d 0
°  x  T 2
¯

sgn x  x 2
sgn x  x  T

(31)

x 2  2  sgn x  x  T

sgnx

 x T

2

(32)

Another non-linearity that we must handle in the model is the switch (Fig. 5), whose role
is to ensure that the absorption is taken into account only when the transfer of power

between the last gear and the load exists. A switch has a non-differentiable characteristic,
so we will replace it by a product involving the first input of the switch and a differentiable
function g, which will have the characteristic of a second order system answer, i.e. it will
approximate a step. Moreover, we will consider that the step is activated when the output of
the dead zone characteristic is different from zero, meaning that g will be a function of f.
Although it results that g must be equal to one when f is not zero, we will allow a 10-3 order
tolerance, and as a consequence we will require g to be equal to 0.999 when f is 0.001.

Fig. 6. Dead-zone approximation

The expressions for g and for its derivative are immediate:
g x
wg
wx

1 e

3

7  10 

7

f x

1 e

0.001

7

signx  x 2  2  x  T

signx

 x T

2

x2

(33)

0.001signx  x T

e

7

x2
0.001signx  x T

(34)

Table 1. Numerical values of system's parameters

JM
0.00488

J G1

JG2

JL

k SH 1

k SH 2

k SH 3

0.014

0.03

0.068

357

157

78

fM

f G1

fG 2

fL

f SH 1

f SH 2

f SH 3

0.0005

0.0005

0.0005

0.0005

0.0051

0.00565

0.01575

We are now ready to build the state-space representation of the system. In all the
presented blocks we have already denoted any signal by a state variable. Because we will
need to estimate the resisting torque, we add a constant state denoted by x8 (that satisfies
x 8 0 ) which will represent the torque of the load. We thus obtain a state-space
representation (1)-(2), where the expressions of a(x), B, C are given by (35), (36) and (37)
respectively. If we compute the linear approximation of this system we can see that only six
elements of Axˆ depend on the current operating point, the rest of them being constant and
thus allowing to be computed off-line. It follows that at each sample time all that we have
to compute from Axˆ are the elements described in (38) and (39).

ax

f  f SH 1
f
k
ª
 M
x1  SH 1 x 2  SH 1 x 5
«
J
J
JM
M
M
«


k
k
f
f
f
f
f
«
SH 1
SH 1
SH 2
x 2  SH 2 x 3  SH 1 x 5  SH 2 x 6
x1  G1
«
J G1
J G1
J G1
J G1
J G1
«
k
k SH 2
« f SH 2 x  f G 2  f SH 2 x  f SH 3 g 
x 6  SH 3 f x 7
x7 x3  x 4 
3
« J G2 2
J G2
J G2
J G2
J G2
«
k SH 3
f SH 3
fL
1
«
x4 
f x 7 
x8
g 
x7 x3  x 4 
JL
JL
JL
JL
«
«
x1  x 2
«
x
2  x3
«
«
x3  x 4
«
0
«¬

ª 1
«
¬JM

B

C

>@1

º
0 0 0 0 0 0 0»
¼

(35)

T

(36)

(37)

0 0 0 0 0 0 0

f
ª f G 2  f SH 2
 SH 3  g xˆ7
«
J
JG2
G2
«
f SH 3
«
 g xˆ7
«
JL
¬

Axˆ 3 : 4,3 : 4

º
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»
»¼

f SH 3
 g xˆ7
JG2
f
f
 L  SH 3  g xˆ7
JL
JL

º
»
»
»
»
¼

(38)

º
ª k SH 3 wf
f
wg
 xˆ 4  xˆ 3  SH 3 

«
»
J
x
J
x
w
w
ˆ
ˆ
2
G
G
2
x
x
x
x
«
7
7»
»
« k SH 3 wf
f
wg

 xˆ 3  xˆ 4  SH 3 
«
»
J L wx x xˆ7 »
«¬ J L wx x xˆ7
¼

Axˆ 3 : 4,7

(39)

Once the state vector is available, its fourth element represents the angular velocity of
the load, while the eighth one represents the resistant torque. The control of the load speed
was one of the requirements, meaning that Cc from Fig. 1 must be
Cc

>@0

(40)

0 0 1 0 0 0 0

Notice that the simulations were performed so that the load didn't exceed 157 rad/s and
the torque developed by the engine was below 20 N·m.

4

Simulation Results
Table 2. Deadband width and resistant torque used in the simulation and the open loop input
Fig. 7

Fig. 8

Fig. 9

Fig. 10

a,b

c,d

a,b

c,d

a

b

a

b

deadband width
(rad)

4

4

4

4

4

4

10

10

resistant torque
(N·m)

0

10

0

19

10
4
20

10
4
20

10

10

motor torque
(N·m)

0.1

10.1

0.3

19.2

10.1

10.1

-

-

The sample time was set to 10 ms. The process noise had covariance Q = 0.05 and it was
filtered by the matrix in (41), while the measurement noise had covariance R=0.5. Both
noise signals had zero mean.
G

>@0.4

0.3 0.5 0.4 0.2 0.1 0.2 0.2 T

(41)

Fig. 7. Load speed estimation in the absence of noise. a) No resistant torque (detail). b) In the
presence of resistant torque

The initial states for the state estimator are equal to zero, which explains the large
estimation errors that appear in the first seconds of the simulation if the resistant torque
takes a value different from zero (Figs. 7, 8). Note that the greater the initial errors are, the
larger the estimation error is in the first seconds. Another remark concerning the estimation
of the load speed is that the estimation error in the case when the system is affected by
noise is smaller if the resistant torque is not zero (Fig. 8). The explanation is simple: while
there in no load resistance, the system has an evolution near the dead-zone. The presence of
the noise induces on the system an important number of entries inside this zone where it
becomes unobservable (because in this case the position of a component towards the other
is uncertain), generating a greater estimation error.

Fig. 8. Load speed estimation in the presence of noise. a) Estimation in the absence of resistant
torque. b) Estimation in the presence of resistant torque.

As for the estimation of the resistant torque, it may be seen that the estimator has a
slower convergence if the system is affected by noise. A comparison between Fig. 9a and
Fig. 9b shows that the estimation error approaches zero in about two seconds if the system
is not affected by noise, while the same error approaches zero in about ten seconds in the
presence of the noise.

The convergence properties also affected the control performances. Besides the
convergence of the estimator, the convergence of the recursive scheme in (25) and (26)
played an important role over the first simulation seconds (Fig. 10). Fig. 10a shows that if
the noise is absent, the system moves towards the stabilizing solution without applying
significant stress on the actuator, as it happens in the presence of the noise (Fig. 10b). On
the other hand, the rejection of an additive, persistent disturbance is performed more
efficiently when the system is affected by noise. The tracking performances are almost
identical in both cases (except for the first simulation seconds, of course).

Fig. 9. Load torque estimation. a) In the absence of the noise. b) In the presence of the noise

Fig. 10. Load speed control. a) In the absence of the noise. b) In the presence of the noise

5. Conclusions
We have considered a technique to control a non-linear system using the state feedback
and the linear approximation of the system about the current state point. The example in
this paper has shown that if the non-linearity has a characteristic that cannot be
differentiated, the solution is to approximate it by a differentiable function. For the
simulation of the closed loop Simulink was used.

References
1.
2.
3.

Anderson, B. D. O. and Moore, J. B.: Optimal filtering. Prentice Hall, Englewood
Cliffs, N. J (1979).
Franklin G. D., Powell J. D. and Workman M. L.: Digital control of dynamic systems,
Second edition. Addison-Wesley (1990).
Van Loan, C. F.: Computing integrals involving the matrix exponential. IEEE
transactions on automatic control, AC-23 (1978), pp. 395-404.

