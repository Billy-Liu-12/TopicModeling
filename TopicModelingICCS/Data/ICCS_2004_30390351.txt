First Order ODEs: Mathematica and
Symbolic-Numerical Methods
Ciro D’Apice, Giuliano Gargiulo, and Manzo Rosanna
University of Salerno, Department of Information Engineering and Applied
Mathematics, via Ponte don Melillo,
84084 Fisciano (SA), Italy
{dapice,gargiulo,manzo}@diima.unisa.it

Abstract. The use of information technology in addition to traditional lectures
affords a means to develop student intuition and curiosity, reaching in the same
time a deep knowledge of the subject of study. The aim of this work is to show
the didactic use of a Computer Algebra System to illustrate and compare different symbolic-numerical methods for solving first order ordinary differential
equations (ODEs). In particular, we apply, relate and compare the built-in
functions of Mathematica, the method of integration by series, the Picard process and the linearization method in solving some first order ODEs. This approach allows students not only to master the basic methods for solving ODEs,
but also to be naturally led to theoretical deepening of such areas as power series, stability and convergence theory, elements of functional analysis or the local-global relationship via linearization.

1
1.1

Symbolic Methods in Solving ODEs
Introduction

Consider a differential equation of the first order in normal form
y ' = f [ x, y ]

(1)

and one of its solutions, that is a function u:J R, where J is an interval which satisfies :
u ' [ x ] == f [ x, u[ x]]

∀x ∈ J .

(2)

If f is continuous (C0), the right-hand member of (2) is continuous, since u is C1 (continuously differentiable). If f is more smooth, for example, C1 the right-hand member
of (2) (being composition of C1 functions) is C1 and therefore u is C2. For induction it
can be easily proved that, if f is Ck (k-time continuously differentiable), u is k+1-time
continuously differentiable, if f is infinitely continuously differentiable, also u is
infinitely continuously differentiable.
In these cases, the derivatives at x0 of a Cauchy problem solution

M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 351–357, 2004.
© Springer-Verlag Berlin Heidelberg 2004

352

C. D’Apice, G. Gargiulo, and M. Rosanna

y ' = f [ x, y ]
y[ x 0 ] = y 0

(3)

can be computed starting from the derivatives of f at (x0 ,y0). In fact, obviously it
turns out that
u[ x 0 ] = y 0
u ' [ x 0 ] = f [ x0 , y 0 ]

(4)

Moreover, computing derivatives of (2) - it is possible if f is enough regular – we
obtain:

It is clear that if we go on in this way all the derivatives of u at x0 can be computed
(when the derivatives of f exist and are known).

1.2 ODE Integration by Series
Alternatively - assuming for simplicity that x0=0 - we suppose that f admits Taylor
development respect to y near x, for all x in a neighbourhood of x0:

So also u has a Taylor development:

We require that the composite of the two series (i.e., the series of the composite function f[ x, u [x] ] ) is equal to the derived series of u (i.e., the series of derivates) …

First Order ODEs: Mathematica and Symbolic-Numerical Methods

353

Obviously, the coefficients of the series can be expressed in terms of the derivatives of
u and f, so this approach is equivalent to the previous…

1.3 Picard Method and Linearization
In the Picard iterative process, we search the fixed point of a transformation among
abstract spaces (Banach spaces). We can expect that if we approximate this transformation with a simpler one (for example a linear one) the fixed point we find in this
way is on one side the approximation of the searched fixed point (solution of the
ODE) and moreover on the other side it is simpler to compute. The transformation is:
x

T [ y ][ x] = y0 +

∫ f [t, y[t ]]dt

(5)

x0

The best local linear approximation is the differential that in our case can be written
in the following form:
x

∫

T '[ y, ϕ ][ x ] = ∂ y f [t , y[t ]]ϕ (t )dt

(6)

x0

dT '[ y ,ϕ ][ x] = T [ y ][ x ] + T '[ y, ϕ − y ][ x] =
x

y0 +

∫

x

∫

f [t , y[t ]]dt + ∂ y f [t , y[t ]](ϕ[t ] − y[t ])dt

x0

x0

to be seen as a function of ϕ , with y fixed). It is easy to see that the fixed point of dT
(computed in y) is a solution of the following problem:
x

ϕ[ x] = y 0 +

∫

x0

x

∫

f [t , y[t ]]dt + ∂ y f [t , y[t ]](ϕ (t ) − y[t ])dt
x0

The latter is a linear (non homogeneous) ODE and therefore Mathematica is able to
solve it symbolically. The solution of (6) or (7) is an approximation of the solution of
the initial ODE.
ϕ[ x 0 ] = y 0
ϕ ' [ x] = f [ x, y[ x ]] + ∂ x f [ x, y[ x]](ϕ[ x] − y[ x])

(7)

354

C. D’Apice, G. Gargiulo, and M. Rosanna

It can be used as an approximation or as initial point (near, and so with fast convergence rate) in the Picard process applied to the original ODE. Also, it can be used as
an abstract version of Newton-Raphson method. In particular, the search of the fixed
points of the transformation (5) is equivalent to the search of the fixed points of the
associated Newton-Raphson transformation:
NR (T )[ y ] = ( y − T [ y ]) − ( Id − T ' [ y ]) −1 ( y − T [ y ])

(8)

where Id is the identical transformation and ( . )-1 is the transformation inverse. Since
the inversion corresponds to the solution of a linear ODE we can apply again, even if
only in part, the power of symbolic calculus of Mathematica to NR(T). We remark
that analogous results are valid if T' and dT are computed with a fixed approximation
y=y1, instead of a variable one.

2 The Particular Case y’==y2
Dsolve

.
Picard method
Let us define the following integral function. We can observe that as it follows from
the definition, when we give in input only the function H, it assumes for default 0 as
initial point and x as final point.

First Order ODEs: Mathematica and Symbolic-Numerical Methods

355

By comparison of the result obtained with Picard iterative process and the exact solution we can see that the difference between the two terms decreases. We plot the approximations of the solutions at the first 5 steps and the exact solution to evaluate their
difference.

We are thus led to conjecture that the exact solution is 1+x+x2+x3+x4+x5+…, i.e.
∞
1
.
xn =
1
−
x
n =0

∑

Linearization

Timing[p3=P[p3]]…
Timing[p4=P[p4]]…

356

C. D’Apice, G. Gargiulo, and M. Rosanna

By comparison of the plots it turns out that the last method seems to approximate the
solutions with a greater rate than the Picard process.
Integration by series

Now we plot the difference between the solution approximated by "series" seriesol=Normal [y[ x]] /. coeff (1+x2 +x3 +x4 +x5 +x6 ) and the symbolic solution .

First Order ODEs: Mathematica and Symbolic-Numerical Methods

357

References
1. Albano, G., D'Apice, C., Tomasiello, S.: Simulating Harmonic Oscillator and electrical
circuits: a didactical proposal. iJMEST, Vol.33, No 2, (2002) 157-185.
2. D'Apice, C., De Simone, T., Manzo, R., Tibullo, V.: MOSFET: a Virtual Laboratory with
Mathematica. Proceedings ICTMT6 Volos, Greece, (2003) 252-257.
3. Kampas F.,Lockheed M.: Iterative Solution of Highly Nonlinear Differential Equations
Using Mathematica WorldWide Mathematica Conf. (1998).
4. Mezzino, M.: Discovering Solutions to Ordinary Differential Equations. WorldWide
Mathematica Conf. (1998).
5. Olness, F.: Integrating Mathematica in the Undergraduate Science Curriculum: Teaching
Computer Literacy with Mathematica. WorldWide Mathematica Conf. (1998).

