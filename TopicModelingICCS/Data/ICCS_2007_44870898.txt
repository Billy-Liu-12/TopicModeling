Fourier Spectral Solver for the Incompressible
Navier-Stokes Equations with
Volume-Penalization
G.H. Keetels1 , H.J.H. Clercx1,2 , and G.J.F. van Heijst1
1
Department of Physics,
Eindhoven University of Technology, The Netherlands
2
Department of Applied Mathematics,
University of Twente, The Netherlands
http://www.fluid.tue.nl

Abstract. In this study we use a fast Fourier spectral technique to
simulate the Navier-Stokes equations with no-slip boundary conditions.
This is enforced by an immersed boundary technique called volumepenalization. The approach has been justiﬁed by analytical proofs of
the convergence with respect to the penalization parameter. However,
the solution of the penalized Navier-Stokes equations is not smooth on
the surface of the penalized volume. Therefore, it is not a priori known
whether it is possible to actually perform accurate fast Fourier spectral
computations. Convergence checks are reported using a recently revived,
and unexpectedly diﬃcult dipole-wall collision as a test case. It is found
that Gibbs oscillations have a negligible eﬀect on the ﬂow evolution. This
allows higher-order recovery of the accuracy on a Fourier basis by means
of a post-processing procedure.
Keywords: Immersed boundary, volume-penalization, Fourier spectral
methods, dipole-wall collision, vortices

1

Introduction

Fourier spectral methods are widely used in the CFD community to solve ﬂow
problems with periodic boundary conditions. Higher order accuracy can be
achieved provided that the solution of the problem is suﬃciently smooth. Moreover, these methods are fast, relatively easy to implement even for performing parallel computations. Incorporation of no-slip boundaries is, however, not
straightforward. Therefore we use the volume-penalization method of Arquis &
Caltagirone [2]. They model an obstacle or domain boundary as a porous object. By decreasing the permeability the penalized Navier-Stokes solution converge towards the Navier-Stokes solution with no-slip boundary conditions (see
Ref.[1],[4]). A delicate issue is that a very steep velocity proﬁle appears inside
the porous obstacle. This can be a drawback for Fourier spectral methods as
Gibbs oscillations might deteriorate the stability and accuracy of the scheme.
Y. Shi et al. (Eds.): ICCS 2007, Part I, LNCS 4487, pp. 898–905, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Fourier Spectral Solver for the Incompressible Navier-Stokes Equations

899

On the other hand, the numerical simulations of Kevlahan & Ghidaglia [10] and
Schneider [11] have shown that is possible to perform stable Fourier spectral
computations with volume-penalization for ﬂow around cylinders.
It is important to extend this analysis and to determine the accuracy of the
Fourier spectral computations. An important issue is to fully quantify the role
of the Gibbs eﬀect on the ﬂow dynamics: is it possible to recover higher-order
accuracy of the Fourier spectral scheme? A very challenging dipole-wall collision experiment is used as a test problem. The Chebyshev spectral and ﬁnite
diﬀerences computations of Clercx & Bruneau [5] have shown that a dipole colliding with a no-slip wall is a serious challenge for CFD methods. In particular,
the formation and detachment of very thin boundary layers, containing highamplitude vorticity, during the collision process and the subsequent formation
of small-scale vorticity patches in the near-wall region can possibly deteriorate
the accuracy of the ﬂow computation. This dramatically aﬀects the dynamics of
the ﬂow after the impact.

2

Fourier Collocation Scheme

In the volume-penalization approach from Arquis & Caltagirone [2] an obstacle
with a no-slip boundary is considered as a porous object with inﬁnitely small
permeability. The ﬂow domain Ωf is embedded in a larger domain Ω, such that
Ωf = Ω \ Ωs , where Ωs represents the volume of the porous objects. The interaction between the ﬂow and the obstacles is modelled by adding a Darcy drag
term to the Navier-Stokes equations locally inside Ωs . This yields the penalized
Navier-Stokes equations
1
∂t u + (u · ∇)u + ∇p − νΔu + Hu = 0

in

Ω × [0, T ] ,

(1)

where u = (u(x, t), v(x, t)) is the Eulerian velocity, p = p(x, t) the scalar kinetic
pressure, ν the kinematic viscosity, the penalization parameter and the mask
function H is deﬁned as
H=

1
0

if
if

x ∈ Ωs
x ∈ Ωf .

(2)

Figure 1 shows some examples of diﬀerent geometries. In this study we use
the channel geometry (Fig. 1b) and the square bounded geometry (Fig. 1c). This
allows a comparison with classical methods, such as Chebyshev spectral computations, that are well adapted to these geometries. The continuity condition
∇ · u = 0 accompanies the penalized Navier-Stokes equations in Ω. On the domain boundary ∂Ω we take a periodic boundary condition, such that Fourier
spectral methods can be applied. Carbou & Fabrie [4] have rigorously shown
that the L2 -norm of the diﬀerences in the velocity and velocity gradients of the
penalized Navier-Stokes equations and the
with no-slip
√ Navier-Stokes equations
. To ensure the C 1 continuity
of the
boundary conditions is proportional to
√
velocity, an asymptotically thin boundary layer proportional to ν appears

900

G.H. Keetels, H.J.H. Clercx, and G.J.F. van Heijst

0000
1111
1111
0000
0000
1111
0000
1111
0000
1111
0000
1111
0000
1111
0000
1111
0000
1111

00000
11111
11111
00000
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
11111
00000
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111
00000
11111

000000000000000000000
111111111111111111111
111111111111111111111
000000000000000000000
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
111111111111111111111
000000000000000000000

(a) obstacles

(b) channel

000000000000000000000
111111111111111111111
111111111111111111111
000000000000000000000
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
000000000000000000000
111111111111111111111
111111111111111111111
000000000000000000000

(c) square

Fig. 1. Decomposition of a square computational domain Ω into porous objects Ωs
(dashed) and ﬂow domain Ωf (white)

inside the obstacle. As a consequence, the limit → 0 might result in two problems for a numerical approximation. i) The velocity gradient proﬁle becomes
extremely steep, which might result in Gibbs
oscillations when using Fourier
√
error bound might be aﬀected in
spectral schemes. ii) The validity of the
case the details of the penalization boundary layer are√not resolved. Furtherthe time step has to
more, due to the slow convergence rate proportional to
be decoupled from the penalization parameter in order to achieve a stiﬄy stable
time integration scheme. In this study this is achieved by a collocation approach
of the penalized Navier-Stokes equations. A third-order extrapolated backward
diﬀerentiation scheme (BDF) with exact diﬀerentiation of the diﬀusion term is
applied,
3

α0 un+1
N

+

δtLN (un+1
N )

=−

(δtβh GN (un+1−h
) + αh un+1−h
) ehδtνΔ
N
N

(3)

h=1

˜ · uN = 0
∇

(4)

˜ N + ∇p
˜ N , LN = 1 HuN , ehδtνΔ is the semi-group of
where GN = (uN · ∇)u
the heat kernel and δt the time step. A tilde marks that collocation derivatives
are used here in order to distinguish from the exact Galerkin derivative. The
coeﬃcients αj and βj are determined by third-order backward diﬀerentiation
and extrapolation, respectively. The right-hand side of Eq. (3) is computed in
transform space (Ref. [9]). Aliasing is avoided by applying the zero-padding
technique introduced by Orszag, generally referred to as the 2/3-rule (see, for
details Ref. [3]). Three forward and four backward FFTs are required in total.

3

Results

We consider two set of experiments. The ﬁrst set concerns a normal dipole-wall
collision where the dipole traverses from the center of the domain perpendicular
to the wall. For these experiments a channel geometry Fig. 1b is considered.
A high-resolution benchmark computation is achieved by using Chebyshev expansion in the direction perpendicular to the wall and Fourier expansion in the

Fourier Spectral Solver for the Incompressible Navier-Stokes Equations

901

periodic direction. For details of the Chebyshev-Fourier code see Kramer [8]. The
second test problem is an oblique dipole-wall collision experiment in a square
bounded geometry Fig. 1c. The benchmark computation for this case is conducted with Chebyshev expansions in both directions [6]. For details of the initial
conditions and setup of the simulations see Clercx & Bruneau [5]. Fig. 2 show the
result of a normal dipole-wall experiment at Re = 1000. The Reynolds number
1
1
Re is based on the total kinetic energy of the ﬂow E(t) = 12 −1 −1 u2 (x, t)dxdy ,
and the half width of the domain W = 1. As the dipole impinges the wall Gibbs
oscillations in the vorticity isolines become apparent. This can be related to steep
gradients of the velocity inside the porous obstacle. Note that only one half of the
domain is shown because of the symmetry of a normal dipole-wall collision. The
oscillations are more pronounced near the wall than in the interior of the ﬂow
domain. As the vortex moves into the interior of the ﬂow domain at t = 0.5 the
wiggles disappear (see Fig. 2d). This indicates that the observed oscillations do
not have a serious dynamical eﬀect on the evolution of the dipole-wall collision.
Fig 2 b,e show the result of a post-processing or smoothing technique developed
by Tadmor & Tanner [12]. The molliﬁed result in Fig. 2b shows that the Gibbs
oscillations can safely be removed from the vorticity isolines. To determine the
accuracy of the scheme we consider the normalized L2 -error δN of the vorticity.
The error is computed in a box x ∈ [−0.99, 0.99] that is slightly smaller than
−0.5

−0.5

−0.5

−0.75

−0.75

−0.75

−1
0

0.25

0.5

−1
0

(a) Fourier projection

0.25

0.5

−1
0

(b) molliﬁed

−0.5

−0.5

−0.5

−0.75

−0.75

−0.75

−1
0

0.25

0.5

(d) Fourier projection

−1
0

0.25

(e) molliﬁed

0.25

0.5

(c) benchmark

0.5

−1
0

0.25

0.5

(f) benchmark

Fig. 2. Vorticity isolines of a normal dipole-wall collision with Re = 1000 at t =
0.3 (a,b,c) and t = 0.5 (d,e,f). 1364 × 1364 active Fourier modes, δt = 10−5 and
= 2.5 × 10−5 are used. Benchmark computation is conducted with 1024 Chebyshev
modes and 2048 active Fourier modes and δt = 10−5 . Contour levels are drawn for
-270..,-50,-30,-10,10,30,50,..270.

902

G.H. Keetels, H.J.H. Clercx, and G.J.F. van Heijst

the computational domain x ∈ [−1, 1]. This is motivated by the fact that the
post-processing procedure of Tadmor & Tanner [12] is only second order in the
close vicinity of a discontinuity, but is higher-order accurate at a suﬃcient distance. From Fig. 3 it can be deduced that the truncation error of the Fourier
projection shows only ﬁrst order behavior in case Gibbs oscillations are present
around t = 0.3. The molliﬁcation procedure of Tadmor & Tanner [12] recovers,
however, a higher-order accuracy rate of the Fourier spectral scheme. After the
ﬁrst collision around t = 0.5 the Fourier projection without molliﬁcation shows
a higher-order decay rate of the error in the vorticity. Molliﬁcation slightly improves the accuracy see Fig. 3b. An important issue is to check if it is possible
−2

−1

10

10

−3

10

−2

10

δN

1.1

−4

δN

10

−3

10
−5

10

3.0
2.5

−6

10

−4

2

10

3

10

N→
(a) t = 0.3

4

10

10

2

10

3

10

N→
(b) t = 0.5

4

10

Fig. 3. Truncation error δN computed with respect to the highest resolution run with
N = 2730 active Fourier modes in both directions. The time step δt = 2 × 10−5 is
ﬁxed for all runs. The error of the Fourier projection (solid) and the molliﬁed result
(dashed).

to ﬁnd a balance between the truncation error and the penalization error. Fig. 4
shows a set of computations where a balance between both error sources is
achieved. By choosing an appropriate number of active Fourier modes N and
value of the penalization parameter , the vorticity isolines coincide (see Fig. 4c).
By keeping ﬁxed and increasing N until a saturation level is reached in the
error in the vorticity versus the high-resolution benchmark computation one obtains a measure for the penalization error. The decay rate (not shown here) is
proportional √
to 0.7 , which is consistent with the theoretical upperbound proderived by Carbou & Fabrie [4].
portional to
To increase the complexity of the ﬂow problem we consider an oblique collision
in the square bounded geometry Fig. 1c at a higher Reynolds number Re = 2500.
For this problem it is necessary to perform molliﬁcation in both directions. Fig. 5
shows that the Fourier spectral scheme with post-processing is able to compute
the isolines of the small-scale structures in this ﬂow problem correctly as well.
Some global measures are presented in Fig. 6. The total enstrophy Z(t) is the
L2 -norm of the vorticity in the ﬂow domain Ωf . The angular momentum of the

Fourier Spectral Solver for the Incompressible Navier-Stokes Equations
−0.5

−0.5

−0.5

−0.75

−0.75

−0.75

−1
0

0.25

(a)

−1
0

0.5

−3

= 10

0.25

(b)

−1
0

0.5

−4

= 10

0.25

(c)

903

0.5

= 10−8

Fig. 4. Contour plots (dashed) of the vorticity after the second collision at t = 0.8
for diﬀerent values of the penalization parameter with respect to the benchmark
simulation (solid). Contour levels are drawn for -270,-250,..,-50,-30,-10,10,30,50,..,250,
270. Number of active Fourier modes N = 682 (a), N = 1364 (b) and N = 2730 (c).
Benchmark computation (solid) is conducted with 1024 Chebyshev modes and 2048
active Fourier modes and δt = 10−5 .

1

1

0.5

0.5

0
0

0.5

(a) Fourier

1

0
0

0.5

1

(b) Chebyshev

Fig. 5. Vorticity isolines of an oblique dipole-wall collision at t = 0.6 obtained with a
Fourier spectral method with volume-penalization with 2730 active Fourier modes and
δt = 2 × 10−5 (a) Benchmark computation conducted with 640 Chebyshev modes in
both directions and δt = 1.25 × 10−5 (b) Contour levels are drawn for -270,-250,..,-50,30,-10,10,30,50,..,250, 270

ﬂow is computed with respect to the center of the container. It is found that the
maximum error in the total enstrophy is smaller than one percent. Recall that
the quality of post-processing procedure of Tadmor & Tanner [12] is only second
order in the vicinity of the wall and cannot be applied on the wall itself. Therefore the accuracy in the total enstrophy is slightly limited. Clercx & Bruneau [5]
found that is diﬃcult to achieve convergence in the total angular momentum,
especially after the second collision. Fig. 6b shows a good agreement between
the high-resolution benchmark computation with 640 Chebyshev modes in both
directions and the Fourier spectral computation with N = 2730 active Fourier
modes. Note that the Fourier spectral method corresponds to an equidistant
grid, while the Chebyshev method uses a Gauss-Lobatto grid that is strongly

904

G.H. Keetels, H.J.H. Clercx, and G.J.F. van Heijst

0.3

2000
0.25

Z(t)

L(t)

1500

0.2

0.15
1000
0.1

0.05

500

0

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1.8

2

t→
(a) Enstrophy

0

0

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1.8

2

t→
(b) Angular momentum

Fig. 6. Total enstrophy Z(t) and angular momentum L(t) with respect to the center
of the domain versus time. Chebyshev benchmark computation 640 Chebyshev modes
and δt = 1.25 × 10−5 (solid), Fourier spectral computation with volume-penalization
obtained with N = 1364 (dots) and N = 2730 active Fourier modes (dashed). For both
runs δt = 2 × 10−5 and penalization parameter = 10−8 is used.

reﬁned in the corners of the domain (see Ref. [6]). Therefore it is not suprising
that the required number of active Fourier modes is larger than the number of
Chebyshev modes to achieve mode convergence for this speciﬁc problem.

4

Conclusion and Discussion

The numerical results of a normal and an oblique dipole-wall collision demonstrate that it is possible to conduct stable and accurate Fourier spectral computations using volume-penalization. Gibbs oscillations are present in the Fourier
projections but are not dynamically active. In addition, the accuracy can be
recovered using post-processing. Similar results are reported for Fourier spectral
computations of other non-smooth problems (see Ref. [7]). For instance on the
simulation of shock development in the 2D Euler equations. In our case it is, however, not necessary to apply any artiﬁcial viscosity to stabilize the scheme. The
penalization error can be controlled by an appropriate choice of the penalization
parameter. The theoretical upperbound
√ of the penalization error obtained by
is conﬁrmed. It actually scales slightly
Carbou & Fabrie [4] proportional to
better proportional to 0.7 for the dipole-wall problem. This is a remarkable
result since the asymptotically thin boundary layer that appears inside the obstacle is unresolved in our simulations. This result may be related to the formal
expansion of penalized Navier-Stokes
solution (see Ref. [4] for details). Only the
√
expansion
higher-order terms in the
√ rely on the details of the penalization
accuracy of the penalized Navier-Stokes
boundary layer. As a consequence, a
equations is possible without computing the boundary layer components. In our
opinion the combination of Fourier spectral methods and volume-penalization
can be useful to pursue DNS of turbulence in complex geometries. Note that this
can easily be achieved by a diﬀerent choice of the mask function.

Fourier Spectral Solver for the Incompressible Navier-Stokes Equations

905

References
1. Angot, P., Bruneau, C.-H, Fabrie, P.: A penalization method to take into account
obstacles in viscous ﬂows, Numer. Math. 81 (1999), 497
2. Arquis, E, Caltagirone, J.P.: Sur les conditions hydrodynamique au voisinage d’une
interface milieu ﬂuide-milieu poreux: application `
a la convection naturelle C. R.
Acad. Sci. Paris, 299, S´erie II, 1-4 (1984)
3. Canuto, C., Hussaini, M.Y., Quarteroni,A., Zang, T.A.: Spectral Methods in Fluid
Dynamics Springer-Verlag, Berlin (1987).
4. Carbou, G., Fabrie, P.: Boundary layer for a penalization method for viscous incompressible ﬂow, Adv. Diﬀerential Equations 8 (2003) 1453
5. Clercx, H.J.H., Bruneau, C.-H : The normal and oblique collision of a dipole with
a no-slip boundary, Comput. Fluids 35 (2006) 245
6. Clercx, H.J.H.: A spectral solver for the Navier-Stokes equations in the velocityvorticity formulation for ﬂows with two non-periodic direction, J. Comput. Phys.
137 (1997) 186.
7. Gottlieb, D., Gottlieb, S.: Spectral methods for discontinuous problems. In Grifﬁths, D.F., Watson, G.A. (eds.): Proc. 20th Biennial Conference on Numerical
Analysis, University of Dundee, (2003) 65
8. Kramer, W: Dispersion of tracers in two-dimensional bounded turbulence. Ph.D.
thesis, Eindhoven University of Technology, The Netherlands (2007)
9. Keetels G.H., D’Ortona, U., Kramer, W., Clercx, H,J,H, Schneider, K., van Heijst, G.J.F: Fourier spectral and wavelet solvers for the incompressible Navier-Stokes
equations with volume-penalization: convergence of a dipole-wall collision. submitted to J. Comput. Phys.
10. Kevlahan, N.K.R., Ghidaglia J.-M.: Computation of turbulent ﬂow past an array
of cylinders using spectral method with Brinkman penalization. Eur. J. Mech.
B-Fluid. 20 (2001) 333
11. Schneider, K.: The numerical simulation of transient ﬂow behaviour in chemical
reactors using a penalization method. Comput. Fluids 34 (2005) 1223
12. Tadmor, E., Tanner, J.: Adaptive molliﬁers for high resolution recovery of piecewise
smooth data from its spectral information. Found. Comput. Math. 2 (2002) 155

