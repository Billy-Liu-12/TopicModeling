Procedia Computer Science
Volume 80, 2016, Pages 2141–2146
ICCS 2016. The International Conference on Computational
Science

Fast and accurate ﬁnite-diﬀerence method solving
multicomponent Smoluchowski coagulation equation with
source and sink terms
Alexander P Smirnov2,3∗, Sergey A Matveev1,2,3†, Dmitry A Zheltkov2,3 , and
Euegene E Tyrtyshnikov2,3,4,5,6
1

2

Skolkovo Institute of Science and Technology.
Faculty of Computational Mathematics and Cybernetics, Lomonosov Moscow State University.
3
Institute of Numerical Mathematics, RAS
4
Moscow Institute of Physics and Technology
5
University of Podlasie, Siedlce, Poland

Abstract
In this work we present novel numerical method solving multicomponent Smoluchowski coagulation equation. The new method is based on application of the fast algorithms of linear algebra
and the fast arithmetics in tensor train format to acceleration of well-known highly accurate
second order Runge-Kutta scheme. After the application of proposed algorithmic optimizations
we obtain a dramatical speedup of the classical methodology without loss of the accuracy. We
test our solver the problem with source and sink terms and obtain that the TT-ranks of numerical solution do not grow tremendously even with the insert of the physical eﬀects into the
basic Smolushowski coagulation model.
Keywords: tensor train decomposition, multicomponent Smoluchowski equation, runge-kutta scheme,
convolution

1

Introduction

A coagulation lies in the foundations of various physical processes such as aerosol dynamics[2,
11], polymers growth[8], blood clotting and even formation of stars[3]. The Smoluchowski
equation[12] is a conventional mathematical model of the space-homogeneous coagulation:
∂n(v, t)
1
=
∂t
2

v
0

K(v − u, u)n(v − u, t)n(u, t)du
−n(v, t)

∗ This

(1)

∞

K(v, u)n(u, t)du.
0

work was supported by RSCF grant 14-11-00806

† matseralex@gmail.com

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.533

2141

Fast and accurate ﬁnite-diﬀerence method

Smirnov, Matveev, Zheltkov, Tyrtyshnikov

This equation describes the time-evolution of concentration function n(v, t) of the particles of
size v per the unit volume of the system at the moment t. The coagulation kernel K(v, u) usually
depends on the the features of the considered physical system and related to the frequencies of
the collisions of the particles of sizes v and u.
If the particles may consist of d diﬀerent substances (components) v = (v1 , v2 , . . . , vd ) the
coagulation process is described by multidimensional (it is also called multicomponent) Smoluchowski coagulation equation:
∂n(v, t)
1
=
∂t
2

v1
0

vd

...

0

K(v − u; u)n(v − u, t)n(u, t)du1 ...dud −
(2)

−n(v, t)

∞
0

∞

...

0

K(u; v)n(u, t)du1 ...dud .

This equation describes the time-evolution of the concentration function n(v, t) of the multicomponent particles per the unit volume of system with sizes of components (v1 , . . . , vd ).
The multicomponent coagulation kernels K(u; v) again are dictated by the features of concrete
physical processes [4, 11].
If the initial concentration function
n(v, t = 0) = n0 (v)

(3)

is given, the Cauchy problem for the Smoluchowski equation with coagulation kernel K(u; v) is
deﬁned.
If the components of the particles cannot exceed some maximal volume and the is the source
of the particles then we have to solve the following Smolushowski-type equation
∂n(v, t)
1
=
∂t
2

v1
0

vd

...

0

K(v − u; u)n(v − u, t)n(u, t)du1 ...dud −
(4)

−n(v, t)

Vmax
0

...

Vmax
0

K(u; v)n(u, t)du1 ...dud + J(v1 , . . . , vd ).

In this case, too big particles are deleted from the system and the particles with the component
sizes (v1 , . . . , vd ) are injected into the system with the source power J(v). We should also mark
that due to the boundary on the particles sizes the equation (4) is considered in the ﬁnite area
[0; Vmax ]d .
Analytical solutions of the Cauchy-Smoluchowski problems are known for just several exceptional cases and especially rare in multidimensional cases. Hence, we need the eﬃcient
numerical methods to get at least the approximate solutions of the studied problems. The
Monte-Carlo simulations are the most common methodologies solving the multicomponent
Cauchy-Smoluchowski problems [11, 16, 14, 15] and often are used even for modelling of the onedimensional coagulation [7, 16, 5, 13]. The main aim of this work stands in formulation of the
deterministic methodology which will be competitive with the spread Monte Carlo frameworks.

2

Finite-diﬀerence scheme

In this section, we discuss a classical ﬁnite-diﬀerence second-order Runge-Kutta scheme solving
the Cauchy problem for the multicomponent Smoluchowski equation. The concentration function function n(v, t) can be found as a solution of the Cauchy-Smoluchowski problems (2) - (3)
2142

Fast and accurate ﬁnite-diﬀerence method

Smirnov, Matveev, Zheltkov, Tyrtyshnikov

or (4) - (3). We use uniform mesh for each volume axis vj with step h on interval [Vmin ; Vmax ].
Thus, formally the mesh consists of N d points in d-dimensional case.
We apply a ﬁnite-diﬀerence Runge-Kutta scheme to equation (4) with time step τ :
1

nk+ 2 (i) =
n

k+1

τ
2

L1 (i)(nk ) − nk (i)L2i (nk ) + J(i) + nk (i)
1

1

1

(i) = τ L1 (i)(nk+ 2 ) − nk+ 2 (i)L2 (i)(nk+ 2 ) + J(i) + nk (i),

where L1 (i), L2 (i) are the approximations of the integral operators from (4) by trapezoidal
rule and i represents a point i = (i1 , . . . , id ) of the taken multidimensional uniform grid. The
error of approximation of the analytical solution by this method is O(h2 + τ 2 ) and the computational complexity of each time-step is O(N 2d ) operations. Such a complexity leads to very
big computational times even in one-dimensional case if number N of grid-nodes is big and
makes the scheme absolutely useless even if N is quite small for the higher dimensionality of
the Smoluchowski equation.

3

Tensor train notations

In this section we introduce a brief summary of tensor train notations. The tensor train (TT)
representation of a d-dimensional function f = f (v1 , . . . , vd ) is a multi-linear decomposition of
f into the combination of 3-dimensional functions [10]
f (v1 , . . . , vd ) =
rd

r0

f1 (α0 , v1 , α1 ) . . . fd (αd−1 , vd , αd ),

...
α0 =1

αd =1

where v1 , . . . , vd are the “physical” variables and αk = 1, rk are the “artiﬁcial” indices rank
with the closed boundary conditions r0 = rd = 1. The 3-dimensional functions fk (αk−1 , vk , αk )
are the TT-cores. If f (v1 , . . . , vd ) is given on some grid with N nodes per each variable vk one
can interpret it as a deﬁnition of multidimensional array(tensor ). In fact, N d memory cells are
required to store all the values of f at the taken grid but if somehow it can be represented in TTformat with modest values of ranks rk then only O(dN r2 ) cells are required (here r = max rk ).
k=1,...,d

If f (v1 , . . . , vd ) is represented in TT-format with maximal TT-rank r it can be evaluated at
any point (v1 , . . . , vd ) in O(dr2 ) operations – we just need to provide d multiplications of r × r
matrices by a vectors of size r [10, 9].
There is an eﬃcient algorithm allowing one to ﬁnd the TT-approximation of the multidimensional array with the desired tolerance or the desired ranks – TT-CROSS method [10].
TT-CROSS allows to get TT-approximation f of f with maximal TT-rank r = max rk in
k=1,...,d

O(dN r3 ) operations if a subroutine evaluating f locally at any point (v1 , . . . , vd ) of the grid is
given.
There also exist the eﬃcient implementations of the rounding procedures for the tensors in
TT-format, as well as, the fast basic linear algebra operations [9, 6].

4

Fast algorithm

In this section we brieﬂy discuss acceleration of the Runge-Kutta scheme by application of the
TT-decomposition to the computation of the integral operators from the right-hand side of the
Smoluchowsku equation.
2143

Fast and accurate ﬁnite-diﬀerence method

Smirnov, Matveev, Zheltkov, Tyrtyshnikov

Assume that f (u) = f (u1 , . . . , ud ) and g(u) = g(u1 , . . . , ud ) are given on some closed set
[0; Vmax ]d with the uniform mesh for each axis vj with a step h and N nodes and we need to
ﬁnd
v1

q(v1 , . . . , vd ) =

vd

...
0

0

f (v1 − u1 , . . . , vd − ud )×

(5)

×g(u1 , . . . , ud )du1 . . . dud ,

at all the N d mesh-points of the grid. Applying the trapezoidal quadrature rule to this integral
operator we ﬁnd that the complexity of the direct computation of q(v) at all the mesh-points
is O(N 2d ) operations.
The integral operator (5) is a lower-triangular convolution. If the functions f (u) and g(u)
are given in TT-format the eﬃcient algorithms evaluating the discrete convolution are presented
in [6] and in our work we just adopt them for the trapezoidal quadrature rule. This technique
allows us to reduce the complexity of trapezoidal rule for the multidimensional integral (5) from
O(N 2d ) to just O(d2 R4 N log N ) operations.
Table 1: Performance of our method in comparison with the direct implementation of the RungeKutta scheme in case of the 2-dimensional Cauchy-Smoluchowski problem with the ballistic
kernel at time segment t ∈ [0, 1] with the time-steps τ = 0.1.
N
Vmax Solution
TTdirect
R
method
time, sec
time, sec
100
10
12
212
1 684
200
20
14
290
22 511
400
40
15
403
425 182
Assume that K(u; v) and f (u) are again given on the same closed set [0; Vmax ]d with the
same grid in TT-format and we want to compute
Vmax

t(v) =

Vmax

...
0

0

K(u; v)f (u)du1 ...dud

(6)

at all the grid points of the taken mesh. Computation of the integral operators of such a type
in TT-format is a standard operation of TT-arithmetics [9, 6, 10] and can be executed with a
complexity of O(dN R4 ) operations.
All in all, for the acceleration of the Runge-Kutta scheme we replace the direct formulas
of the trapezoidal rule for L1 , L2 by the TT-methods from this section and add the source
term J(i) using the standard summation in TT-format. Hence, we reduce the complexity to
O(d2 N log N R4 ) operations. We also should mark, that the assumption that the maximal
value of TT-ranks R is small is crucial for the eﬃciency of our methodology and we justify this
assumption through the numerical experiments.

5

Numerical results

In this section, we discuss the results of numerical experiments. In the table 1 we demonstrate
performance of TT-based method in comparison with direct Runge-Kutta scheme. We obtain
a dramatical speedup of the taken numerical scheme. The computations which took days using
2144

Fast and accurate ﬁnite-diﬀerence method

Smirnov, Matveev, Zheltkov, Tyrtyshnikov

(v_1 + v_2) n(v_1, v_2, t)
t = 10.00

(v_1 + v_2) * n(v_1, v_2, t)
t = 10.00

0.018
0.016
0.014
0.012
0.01
0.008
0.006
0.004
0.002
0

0.018
0.016
0.014
0.012
0.01
0.008
0.006
0.004
0.002
0

0.25
0.2
0.15
0.1
0.05

0.35
0.3
0.25
0.2
0.15
0.1
0.05
0

20
15
0

10

5
v_1

10

15

5
20

0

v_2

0

2

4

6

8 10
12 14
v_1
16 18
20

0

2

4

6

8

0.3
0.25
0.2
0.15
0.1
0.05
0

20
18
16
14
12
10
v_2

Figure 1: The solution of the Smoluchowski equation without source with constant kernel at
t = 10.0 without the source(left) and solution the Smoluchowki equiation with the same kernel
with source and sink of the particles(right). The relative error of the numerical solution on the
left picture does not exceed 2%.
the direct ﬁnite-diﬀerence method now can be provided by our method in just couple of minutes!
From the table 1 we also can see that the ranks of the numerical solution are the modest numbers
– this fact underlies the demonstrated eﬃciency.
In the ﬁgure 1 we compare numerical solution of the Cauchy-Smoluchowski problem with
the constant kernel and the sink Vmax = 20 and source power
J(v1 , . . . , vd ) = exp(−(v1 + . . . vd ))
to the numerical solution of the classical Smoluchowski coagulation equation without the source
term.
For the Cauchy-Smoluchowslki problem with the constant kernel and without source terms
there is a well-known analytical solution and relative error of the presented numerical solution
does not exceed 2%. We also obtain convergence of the numerical solutions in the case with the
source term. For both of the cases the TT-ranks of numerical solutions do not exceed 5, hence,
our methodology can be successfully applied to both the Cauchy-Smoluchowski problems with
and without the source-sink terms.
For our experiments, we used processor Intel Core i5-3330S @ 2.70GHz and the python
implementation of TT-toolbox by Ivan Oseledets [1].

6

Conclusions

In this work we present fast and accurate algorithm solving multicomponent (multidimensional)
Smoluchowski coagulation equation. This methodology is based on a classical second order
Runge-Kutta scheme. Application of the TT-representations and use of the fast algorithms of
linear algebra allows one to reduce the complexity of the classical algorithm from O(N 2d ) to
O(d2 R4 N log N ) operations, where N is the number of nodes per axis in the volume-grid, R
is a maximal TT-rank of used TT-representations of the multidimensional arrays and d is the
dimensionality of the Cauchy-Smoluchowski problem.
We demonstrate eﬃciency of TT-based method in comparison with the direct implementation of the taken scheme and check its applicability to the problems with the source/sink terms.
We obtain a dramatical speedup of the ﬁnite-diﬀerence method without loss of its accuracy and
the eﬃciency in both of the considered cases.
2145

Fast and accurate ﬁnite-diﬀerence method

7

Smirnov, Matveev, Zheltkov, Tyrtyshnikov

Acknowledgements

This work was supported by RSCF grant 14-11-00806.

References
[1] https://github.com/oseledets/ttpy. -, 2012-2015.
[2] A Aloyan. Dynamics and kinematics of gas impurities and aerosols in the atmosphere(in russian).
A Textbook, Institute of Numerical Mathematics, 2002.
[3] NV Brilliantov, PL Krapivsky, AS Bodrova, F Spahn, H Hayakawa, V Stadnichuk, and J Schmidt.
Size distribution of particles in saturn’s rings from aggregation and fragmentation. Proceedings of
the National Academy of Sciences, 112(31):9536–9541, 2015.
[4] Anwesha Chaudhury, Ivan Oseledets, and Rohit Ramachandran. A computationally eﬃcient technique for the solution of multi-dimensional pbms of granulation via tensor decomposition. Computers & Chemical Engineering, 61:234–244, 2014.
[5] Edouard Debry, Bruno Sportisse, and Benjamin Jourdain. A stochastic approach for the numerical
simulation of the general dynamics equation for aerosols. Journal of Computational Physics,
184(2):649–669, 2003.
[6] Vladimir A Kazeev, Boris N Khoromskij, and Eugene E Tyrtyshnikov. Multilevel toeplitz matrices generated by tensor-structured vectors and convolution with logarithmic complexity. SIAM
Journal on Scientiﬁc Computing, 35(3):A1511–A1536, 2013.
[7] F Einar Kruis, Arkadi Maisels, and Heinz Fissan. Direct simulation monte carlo method for
particle coagulation and aggregation. AIChE Journal, 46(9):1735–1742, 2000.
[8] Joanna Masel, Vincent AA Jansen, and Martin A Nowak. Quantifying the kinetic parameters of
prion replication. Biophysical chemistry, 77(2):139–152, 1999.
[9] Ivan V Oseledets. Tensor-train decomposition. SIAM Journal on Scientiﬁc Computing, 33(5):2295–
2317, 2011.
[10] Ivan V Oseledets and Eugene E Tyrtyshnikov. Tt-cross approximation for multidimensional arrays.
Linear Algebra and its Applications 432 (1), 2008.
[11] Geethpriya Palaniswaamy and Sudarshan K Loyalka. Direct simulation monte carlo aerosol dynamics: coagulation and collisional sampling. Nuclear technology, 156(1):29–38, 2006.
[12] M von Smoluchowski. Drei vortrage uber diﬀusion, brownsche bewegung und koagulation von
kolloidteilchen. Zeitschrift fur Physik, 17:557–585, 1916.
[13] AA Sorokin, VF Strizhov, MN Demin, and AP Smirnov. Monte-carlo modeling of aerosol kinetics.
Atomic Energy, 117(4):289–293, 2015.
[14] Z Sun, R Axelbaum, and J Huertas. Monte carlo simulation of multicomponent aerosols undergoing
simultaneous coagulation and condensation. Aerosol science and technology, 38(10):963–971, 2004.
[15] Haibo Zhao and Frank Einar Kruis. Dependence of steady-state compositional mixing degree on
feeding conditions in two-component aggregation. Industrial & Engineering Chemistry Research,
53(14):6047–6055, 2014.
[16] Haibo Zhao, F Einar Kruis, and Chuguang Zheng. A diﬀerentially weighted monte carlo method
for two-component coagulation. Journal of Computational Physics, 229(19):6931–6945, 2010.

2146

