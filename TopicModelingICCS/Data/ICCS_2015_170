Procedia Computer Science
Volume 51, 2015, Pages 2533–2542
ICCS 2015 International Conference On Computational Science

A DDDAS Plume Monitoring System with Reduced
Kalman Filter ∗
Liqian Peng1,3 , Matthew Silic1,3 , and Kamran Mohseni1,2,3
1
2

Department of Mechanical and Aerospace Engineering,
Department of Electrical and Computer Engineering,
3
Institute for Networked Autonomous Systems,
University of Florida, Gainesville, FL, 32611
{liqianpeng, msilic, mohseni}@ufl.edu

Abstract
A new dynamic data-driven application system (DDDAS) is proposed in this article to dynamically estimate a concentration plume and to plan optimal paths for unmanned aerial vehicles
(UAVs) equipped with environmental sensors. The proposed DDDAS dynamically incorporates measured data from UAVs into an environmental simulation while simultaneously steering
measurement processes. The main idea is to employ a few time-evolving proper orthogonal decomposition (POD) modes to simulate a coupled linear system, and to simultaneously measure
plume concentration and plume source distribution via a reduced Kalman ﬁlter. In order to
maximize the information gain, UAVs are dynamically driven to hot spots chosen based on the
POD modes using a greedy algorithm. We demonstrate the eﬃcacy of the data assimilation
and control strategies in a numerical simulation and a ﬁeld test.
Keywords: DDDAS, plume monitoring, reduced Kalman ﬁlter, UAV, POD

1

Introduction

The use of cooperative, small unmanned aerial vehicles (UAVs) equipped with simple environmental sensors provides a promising option for safe and cost-eﬀective data collection. Two
beneﬁts of such a system are the relatively low-cost of individual vehicles and the safety of
using unmanned vehicles for missions involving harsh atmospheric conditions or toxic environments. Regardless of the number of UAVs employed in an application, the key consideration
in the use of UAVs is how to position them in order to gain useful information from their
locations and/or path. Dynamic data driven application systems (DDDAS) provide a means
to position the UAVs in an eﬃcient manner using the real time data obtained from the sensors. The framework of DDDAS is driven by the goal of dynamically incorporating data into
∗ The

authors gratefully acknowledge the support of the Air Force Oﬃce of Scientiﬁc Research (AFOSR).

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.361

2533

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

a running application (e.g. an environmental simulation) while simultaneously using the application to steer measurement processes [2]. The DDDAS framework is widely used in wildﬁre
simulation [11, 18], identiﬁcation of airborne contaminants [1, 9], and weather forecasting [4].
This article is an extension of our previous work in plume monitoring using UAVs [12,
13]. A new data assimilation technique based on a reduced Kalman ﬁlter (RKF) is proposed
for two-dimensional plume evolution problem. The plume is released upwind of two square
obstacles (representing buildings) and travels downstream according to the advection-diﬀusion
equation. For real-time plume simulation and estimation, the unknown parameters in our
problem include not only the initial condition of the plume concentration, but also the plume
source distribution. This leads to an inverse problem with high-dimensional control spaces in the
form of unknown parameters, and whose solution is not unique. This motivates the construction
of reduced-order surrogate models to uniquely determine these parameters in DDDAS. The
proper orthogonal decomposition (POD) [5] can be used to replace a high-dimensional Kalman
ﬁlter with a RKF while preserving the dominant features of the original ﬁlter. The RKF is
applied to incorporate point observations into a coupled dynamic systems to simultaneously
estimate plume concentration and plume source distribution. Compared with the least square
method that was applied in [12] for plume estimation, the RKF can obtain more robust and
accurate results, because all the historical data is accumulated for current plume estimation.
The remainder of this article is organized as follows. In Section 2, we ﬁrst formulate the
problem of plume evolution within an urban environment; then discuss and present the DDDAS
methodology, focusing on the RKF for the data assimilation procedure. Section 3 and Section
4 provide a numerical simulation and a ﬁeld test, respectively. Finally, conclusions are oﬀered
in Section 5.

2

DDDAS methodology

The DDDAS is a systems-level approach and can be applied to many phenomena where good
simulation models are available. Here, we focus on measuring and tracking a concentration
plume from sparse observations in an advection-diﬀusion system described by
∂ψ
1 2
+ v · ∇ψ =
∇ ψ + f + ξ;
∂t
Pe

ψ(0, x) = ψ0 (x),

(1)

where t ∈ [0, T ] denotes the time, x ∈ Ω is the space coordinate, v = v(t, x) is the background
wind velocity, P e is the P´eclet number which quantiﬁes the relative strength of the advection
and diﬀusion terms, ψ(t, x) is the concentration ﬁeld, f (t, x) is the plume source distribution,
ξ(t, x) is the small noise introduced by the uncertainty in the background velocity ﬁeld, the
diﬀusion constant, or the concentration source, and ξ
f . We examine the case where a
plume source distribution is described by a linear stochastic equation, which is advected under
the action of the velocity ﬁeld v while also dispersing due to the diﬀusion. Suppose the domain
Ω is discretized into n grid points , and the discrete version of the advection diﬀusion equation
at time step k is given by ψk = Ak−1 ψk−1 + fk−1 δt + ξk−1 , and the plume source distribution
is evolved by fk = Ak−1 fk−1 + ηk−1 , where ψk , fk , ξk , ηk ∈ Rn , δt denotes the unit step, ηk
denotes the uncertainty of the evolution of plume source distribution. If we assume the plume
source distribution fk is governed only by the stochastic noise, then Ak = I. The coupled
system for plume concentration and plume source distribution is given by
ψk
fk
2534

=

Ak−1
0

δt · I
Ak−1

ψk−1
fk−1

+

ξk−1
ηk−1

.

(2)

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

Figure 1: Schematic of the online DDDAS. The two main components of the system are a
sensor guidance and control loop and a simulation loop. The two loops interact through data
assimilation and sensor placement algorithms.
Suppose at each time step the plume concentration is measured at l (l
n) discrete points
s1 , s2 , ..., sl with some sensor noise ζ, the observation of this system is given by
zk =

PkT

0

ψk
fk

+ ζk ,

(3)

where Pk ∈ Rn×l and the ith column of Pk is the si th column of the identity matrix In . The
wind velocity v can be obtained by a CFD model or weather forecasting. In this paper, v is
found by numerically solving the incompressible Navier–Stoke equations using a ﬁnite diﬀerence
method at n grid points. The wind velocity v and the linear operator Ak vary with time. Since
mobile sensors can measure the plume concentration at diﬀerent locations, Pk also varies with
time. Therefore, (2) and (3) construct a linear time variant (LTV) system. For the case of a
discrete plume of concentration being released, the forcing term f in (2) is zero for t > 0, and
the coupled system degenerates to an ODE of ψ ∈ Rn .
A schematic of this DDDAS system is shown in Figure 1. Since the number of measured grid
points l at one time step is much smaller than the total number of grid points n in the whole
space, the original discrete LTV system can be unobservable for a small time domain [0, T ] even
if we ignore all the stochastic noise. To address this, an oﬄine-online splitting methodology is
applied to estimate the coupled variable (ψ, f ) on a subspace S of R2n . In the oﬄine stage, the
wind velocity is obtained by solving the Navier–Stokes equations. Then we sample the possible
plume source locations and solve the advection–diﬀusion equation, which results in possible
trajectories of (ψ, f ). In the ﬁnal oﬄine step, the dominant modes of (ψ, f ) are identiﬁed by
the POD method.
In the online stage, two coupled feedback loops are run in real-time to improve the accuracy
of a running simulation while simultaneously improving the eﬀectiveness of data collection
strategies. We refer to the ﬁrst loop in the DDDAS as the sensor guidance and control loop.
The system components in this loop are responsible for movement, collision avoidance, and
data collection. The second loop in the system is referred to as the simulation loop. In this
loop, a real-time simulation attempts to model the physical system of interest; in our case,
a concentration plume is modelled using the advection-diﬀusion equation mentioned above.
The key to the DDDAS is an eﬀective, two-way coupling between the simulation loop and the
sensor guidance and control loop. This is accomplished by using a POD based data assimilation
routine to assimilate data collected in the guidance and control loop into the running simulation
loop, resulting in improved accuracy in the simulation. Meanwhile, in order to improve the
data collection process, the simulation loop can be used to adaptively construct local POD
2535

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

modes, which are then applied in the proposed sensor placement algorithm to steer the UAVs
to impactful measurement locations.
In the rest of this section, we discuss each component of the the DDDAS plume monitoring
system.

2.1

Sensor mobility control

Sensor mobility control refers to a strategy for gathering sensor measurements to support a
sensing objective, such as environmental measurement. When the sensors are installed on
robotic platforms an important part of the problem is planning the sensor path to achieve
low working time or low energy consumption [7], obstacle avoidance in unstructured dynamic
environments [8, 17, 14], or eﬃciently gather target information [20]. In this paper, we applied
a hierarchical control strategy were proposed to maximize the useful information collected by
mobile sensors. The detailed procedure can be found in [12]. Based on the speed limitation of
UAVs, the entire time domain is artiﬁcially partitioned into N smaller subintervals such that
during each subinterval, any UAV has the ability to reach (or at least approach) any important
measurement location. At a higher level, a greedy algorithm was developed to ﬁnd the the
important positions, or hot spots, for a ﬁxed time interval where sensors may obtain more
information than arbitrarily chosen positions [12]. At a lower level, a Lyapunov vector ﬁeld
based scheme is used to guide UAVs to the chosen hot spots at each time interval [16].

2.2

Proper orthogonal decomposition

Since observations are incomplete and noisy, it is not suﬃcient to estimate the instant plume
concentration and plume source distribution in the high dimensional space R2n with the measured data alone. However, if we restrict this problem to a subspace S with a lower number of
unknown parameters, the measured data is suﬃcient to ﬁnd an approximate solution for plume
concentration on S with high accuracy and low computational cost. The proper orthogonal
decomposition method [10] is used to capture S in this article. The key idea of POD is to
deliver a set of empirical eigenfunctions so that the original data is optimally captured by these
modes in the least squares sense [5]. An empirical eigenfunction is often referred to as a POD
mode. Hence although the original system (2) has a dimension of 2n, the online simulation
is computed by a reduced order equation with a signiﬁcantly low dimension d. Speciﬁcally,
Galerkin projection provides a lower dimensional approximation by projecting the full system
onto a linear (or an aﬃne) subspace.

2.3

Reduced Kalman ﬁlter (RKF)

For simplicity, we ﬁrst consider a determinant system and ignore all the stochastic noise in
(2) and (3). Suppose the approximation of ψk and fk is given by [ψˆk ; fˆk ] = Φck , the reduced
system based on the Galerkin projection is given by
ck = A˜k−1 ck−1 ,

(4)

where A˜k−1 denotes the projected linear operator of [Ak−1 δt · I; 0 Ak−1 ]. The observation is
given by
(5)
zk = P˜kT Φck
where P˜kT = [PkT 0] ∈ R2n×d , and Φ = [[ϕ1 ; φ1 ], ..., [ϕd ; φd ]] ∈ R2n×d denotes the POD basis
for the coupled variable (ψ, f ). A RKF can be used to assimilate measured data into the
2536

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

running simulation (and couple the simulation loop to the control loop). It has been applied
in data assimilation in the oceanic and atmospheric research [3, 6]. The state of the ﬁlter
is represented by a state estimate at time k and the error covariance matrix (a measure of
the estimated accuracy of the state estimate). In this paper, the RKF is constructed by the
Galerkin projection for the Kalman equation, which is conceptualized as a prediction stage
and a correlation stage. The prediction stage uses (4) to produce an updated estimate of the
d
state at the current time step. This priori state estimate c−
k ∈ R does not include observation
information from the current time step. A priori estimate error covariance Pk− ∈ Rd×d is
updated as
˜
(6)
Pk− = A˜k−1 Pk−1 A˜Tk−1 + Q,
˜ = ΦT QΦ = c1 I ∈ Rd×d is the reduced order covariance matrix for ω
˜k .
where Q
In the update phase, the current a priori prediction is combined with current observation
at selected positions to reﬁne the state estimate. In particular, the Kalman gain, Kk ∈ Rd×m ,
can be computed as
˜ k P −H
˜ T (H
˜ T + R)−1 .
(7)
Kk = Pk− H
k
k
k
˜ k = Hk Φ ∈ Rm×d . A posteriori state estimate is generated by the following equation,
where H
˜ k ψ˜− ),
ψ˜k = ψ˜k− + Kk (zk − H
k

(8)

and the covariance matrix is updated as
˜ k P −.
Pk = Pk− − Kk H
k

(9)

Equations (4)–(9) have a similar form as the standard Kalman ﬁlter. However, since the
state variable and covariance matrix are updated in a low dimensional subspace, signiﬁcant
speedups can be obtained by the RKF.

3

Simulation

The proposed data assimilation and control strategy described above are shown to successfully
monitor and characterize a simulated concentration plume that is analogous to the release of
an airborne plume of toxic chemicals in an urban environment. The plume motion is governed
by the advection-diﬀusion equation given in (1). For simplicity, the initial plume concentration
is zero. The plume source distribution is a constant. However, in this test, neither the precise
location nor the extent of the plume source distribution is known. As time progresses the
DDDAS is able to identify and update the plume concentration and plume source distribution
by guiding the UAVs to measure plume concentration near hot spots while assimilating the
data measured along the sensor paths. All variables, including time, length, and velocity, are
given in nondimensional units unless otherwise speciﬁed.
In the simulation, the wind velocity is computed by solving the non-dimensional Navier–
Stoke equation on the spatial domain Ω = [0, 30] × [0, 10] (see Figure 2), which is treated as
the “real wind”. Two square obstacles are placed within the domain to simulate buildings
in an urban environment. All concentration plume boundary conditions are set to ψ = 0 for
simplicity. As the concentration ﬁeld evolves, the plume interacts with the buildings in the
domain, passing between and around them. For time t > 0, a plume source distribution is
set as f (t, x) = 1.2 exp(−||x − x1 ||22 ) + 0.8 exp(−||x − x2 ||22 ) with stochastic evolution where
x1 = (2.3, 4.1) and x2 = (2.7, 5.5) (See Figure 3). This will be used as the true plume solution
and as a reference for all measures of accuracy. The total time domain of interest is [0, 30] from
2537

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

Figure 2: The background wind velocity ﬁeld at t = 0. The dimensionless unit is used for both
spatial and temporal coordinates.

10

2.5
2
1.5

5
1
0.5
0

0

5

10

15

20

25

30

0

Figure 3: The red background shows the instantaneousness plume concentration ψ(t, x) of
the “real plume” for t = 30. The blue lines show the contour of the plume source f (t, x) =
1.2 exp(−||x − x1 ||22 ) + 0.8 exp(−||x − x2 ||22 ).

the release of plume source to the time for the front of the plume to reach the right edge of the
spatial domain.
The DDDAS described in previous sections is then applied to this data set. In the oﬄine
stage, the plume source distribution is assumed to be unknown so it is initially estimated to
be within the square region [1.5, 3.5] × [3.5, 6.5]. A linear combination of kernel functions is
used to approximate the real plume source distribution. The kernel functions used here are
set as fˆi (x) = 0.1 exp(−||x − xi ||22 /0.82 ). The centers xi of these Gaussian kernel functions
are located on the grid points at 2, 2.5, 3 in horizontal direction and 4, 4.5, 5, 5.5, 6 in
vertical direction. Using these kernel functions for plume source distribution, we generate
corresponding trajectories for the evolution of plume concentration and build a discrete data
ensemble. The POD method is then used to capture the dominant modes for the data ensemble.
The contribution of each mode to the data ensemble is characterized by the corresponding
singular value. If ﬁxed sensors are used to measure the plume concentration, we take all the
snapshots from the data ensemble. However, if UAVs are used, we can artiﬁcially partition the
global time domain into 6 periods, and focus on the local POD modes for each time interval.
Compared with global POD, local POD can ﬁt the empirical data with higher accuracy for the
same number of modes. In order to balance accuracy and computational speed, only the ﬁrst
three local POD modes are used to approximate the real plume concentration.
2538

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

Motor

Autopilot

GPS antenna

Battery
Sensor suite

RC receiver for
pilot control

Figure 4: The resource constrained delta-wing UAV used in the experimental demonstration of
the DDDAS technique. The 0.8 m wingspan UAV is equipped with a GPS sensor for position,
a roll rate sensor, XBee wireless communication radio, and an autopilot to control the craft
during autonomous mode.

4

Experiment

In order to verify the feasibility of this DDDAS in a real world application, we combine the
aforementioned simulation with a ﬁeld test involving three small, resource constrained UAVs.
The experiment was designed to compare the performance of the DDDAS technique using real
mobile sensors to the performance using simulated mobile sensors. The UAV GPS coordinates
are continuously communicated to a ground station laptop, running the data assimilation and
sensor placement loops in real time. The same virtual plume used in simulations is “measured”
using the GPS coordinates of UAVs at a speciﬁed time. The UAVs are guided through the
environment using Lyapunov guidance vector ﬁelds [16].

4.1

Hardware description

The small, resource constrained UAV used in the experiment is shown in Figure 4. The aircraft
has a wingspan of 0.8 m and weighs less than 0.5 kg. The airframe, elevons, ﬂaps, nose cone,
propeller and servos, are all mass produced thus making the aircraft inexpensive compared to a
custom design. This aircraft has been successfully used in several experiments in our research
group and has proven itself robust, relatively simple and inexpensive to maintain, and easily
replaceable if needed [19]. Additionally, the small size and simplicity of the aircraft allow for
rapid deployment in areas that are not ideal for traditional UAVs. The Delta-Wing UAVs are
equipped with a custom autopilot to allow for implementation of custom control strategies [16].
Several studies [19, 15] have shown that it is possible to achieve fully autonomous operation of
a small UAV by means of this simple autopilot equipped with a limited number of sensors.
The autopilot consists of an on-board processor, a single axis rate gyro to sense roll rates, an
absolute pressure sensor for altitude sensing, and a GPS receiver for positioning. The program
has built-in routines to account for short term blackouts in the GPS signals and the noise
and drifts in the sensors. The autopilot system also includes a complementary ground station
that receives and relays data to and from the autopilot on board the aircraft. The autopilot
transmits telemetry data to the ground station which responds with an updated position of the
hot spot. As required by FAA regulations, the pilot remains in control at all times and can
disengage the autopilot immediately if needed.
2539

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

North (km)

1

0.5

0
0

0.5

1

1.5

East (km)

2

2.5

3

Figure 5: The experiment domain and hot spots.

North (km)

0.8

0.5

0.2
0.25

0.5

0.75

1

East (km)

1.25

1.5

Figure 6: The GPS coordinates of three UAVs during approximately 12 minute of the ﬁeld test.

4.2

Experiment results

The simulated plume concentration was applied on a 3 × 1 km domain with a time scale of 12
minute. Figure 5 plots the region that we take the experiment with accompanying “buildings”.
The circles correspond to three hot spots of the ﬁrst three local POD modes. The hot spots are
calculated based on the greedy algorithm discuss in [12]. Based on our simulation setup, the
ﬁrst hot spot (red) stays near the plume source, the second one (blue) is around the building
area, and the third one (green) moves toward the right region as plume is advected by wind.
The radius of each hot spot (50 m) corresponds to the turning radius of the delta-wing UAVs.
The dashed box represents the boundary as shown in Figure 6. The red, green, and blue lines
indicate the path of the three UAVs during this period of time.
Figure 7 shows the the percent error versus time in the estimated concentration plume.
The error was computed using the 2 norm using ﬁxed sensors and mobile sensors (both in
experiment and simulation). Once UAVs achieve the desired locations, this DDDAS technique
using three mobile sensors is able to reduce the error between the estimated concentration
and the actual concentration to levels within approximately 20%. Despite the experimental
uncertainties, this DDDAS technique using three real mobile sensors (subject to experimental
uncertainty) matches very well with the simulated sensors. Most importantly, the results show
that three mobile sensors are able to decrease the error between the estimated and actual
concentration ﬁelds faster and to lower levels than ten static sensors.
2540

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

Figure 7: Percent error versus time for the DDDAS experiment.

5

Conclusions

In this article, we propose a complete dynamic data-driven application system (DDDAS) for
simultaneously measuring and simulating a concentration plume and the plume source distribution in a dynamic environment. The dynamic evolution of plume concentration is governed
by a coupled ODE. In order to assimilate incomplete and noisy state observations into this
system in real-time, an oﬄine-online approach is used. In the oﬄine stage, we build a database
by sampling several possible plume source regions and solving the governing equation to obtain
possible trajectories for the plume concentration. We then use the proper orthogonal decomposition (POD) to ﬁnd a few dominant modes. In the online stage, the reduced Kalman ﬁlter
(RKF) is applied to estimate plume concentration and plume source distribution, which restricted to the subspace of the POD modes. The RFP-based data assimilation method leads
to a hierarchical vehicle control strategy. On one level, hot spots are chosen such that maximal information can be obtained by UAVs. On another level, the Lyapunov vector ﬁeld based
scheme is used for vehicle path planning and control. Both the assimilation method and the
control strategies are very computationally eﬃcient and can be carried out in real time.
The proposed DDDAS combines the data assimilation method and control strategy together
for plume characterization and the simulation/experiment results verify the utility of the system.
Speciﬁcally, a small number of mobile sensors are able to approach the hot spots and produce
a greatly improved estimate of plume concentration when compared to the use of many more
static sensors. Moreover, experimental results using UAVs match very well with simulation
results for plume estimation.

Acknowledgments
The authors wish to thank Richard O’Donnell for his help; his expertise in RC aircrafts and
electronics facilitated the experiment.

References
[1] V. Akcelik, G. Biros, A. Drˇ
agˇ
anescu, J. Hill, O. Ghattas, and B. van Bloeman Waanders. Dynamic
data-driven inversion for terascale simulations: Real-time identiﬁcation of airborne contaminants.
In Proceedings of the ACM/IEEE SC 2005 Conference, pages 43–58, Seattle, WA, 2005.

2541

A DDDAS Plume Monitoring System with Reduced Kalman Filter

L. Peng et al.

[2] F. Darema. Dynamic data driven applications systems: A new paradigm for application simulations and measurements. International Conference on Computational Science, pages 662–669,
2004.
[3] B. F. Farrell and P. J. Ioannou. State estimation using a reduced-order Kalman ﬁlter. Journal of
the Atmospheric Sciences, 58:3666–3680, 2001.
[4] M. Fisher, J. Nocedal, Y. Tr´emolet, and S. J. Wright. Data assimilation in weather forecasting: a
case study in PDE-constrained optimization. Optimization and Engineering, 10:409 – 426, 2009.
[5] P.J. Holmes, J. L. Lumley, and G. Berkooz. Turbulence, Coherent Structures, Dynamical Systems
and Symmetry. Cambridge Univ. Press, Cambridge, UK, 1998.
[6] I. Hoteit, D.-T. Pham, and J. Blum. A simpliﬁed reduced order Kalman ﬁltering and application
to altimetric data assimilation in Tropical Paciﬁc. Journal of Marine Systems, 36:101–127, 2002.
[7] P.-M. Hsu, C.-L. Lin, and M.-Y. Yang. On the complete coverage path planning for mobile robots.
J. Intell. Robot. Syst., 74:945–963, 2014.
[8] A. Lazanas and J.-C. Latombe. Motion planning with uncertainty: A landmark approach. Artif.
Intell., 76:287–317, 1995.
[9] C. Lieberman, K. Fidkowski, K. Willcox, and B. van Bloemen Waanders. Hessian-based model
reduction: Large-scale inversion and prediction. Int. J. Numer. Meth. Fluids, 71:135–150, 2013.
[10] M. Lo`eve. Probability Theory. Van Nostrand, Princeton, N.J., 1955.
[11] J. Mandel, L. S. Bennethum, J. D. Beezley, J. L. Coen, C. C. Douglas, M. Kim, and A. Vodacek.
A wildland ﬁre model with data assimilation. Mathematics and Computers in Simulation, 79:584
– 606, 2008.
[12] L. Peng, D. Lipinski, and K. Mohseni. Dynamic data driven application system for plume estimation using UAVs. J. Intell. Robot. Syst., 74:421–436, 2014.
[13] L. Peng and K. Mohseni. Sensor driven feedback for puﬀ estimation using unmanned aerial vehicles.
In International Conference on Unmanned Aircraft Systems (ICUAS), pages 562 – 569, Orlando,
FL, 2014.
[14] L. Peng, Y. Zhao, B. Tian, J. Zhang, B.-H. Wang, H.-T. Zhang, and T. Zhou. Consensus of
self-driven agents with avoidance of collisions. Phys. Rev. E, 79(026113), 2009.
[15] W. J. Pisano, D. A. Lawrence, and K. Mohseni. Concentration gradient and information energy
for decentralized UAV control. AIAA paper 2006-6459, AIAA Guidance, Navigation, and Control
Conference and Exhibit, Keystone, CO, 2006.
[16] W. J. Pisano, D. A. Lawrence, and P. C. Peter. Autonomous UAV control using a 3-sensor
autopilot. AIAA paper 2007-2756, AIAA Infotech Aerospace Conference, Rohnert Park, CA,
2007.
[17] N. S. V. Rao. Robot navigation in unknown generalized polygonal terrains using vision sensors.
IEEE Trans. Syst. Man Cybern, 25:947–962, 1995.
[18] R. Rodr´ıguez, A. Cort´es, and T. Margalef. Injecting dynamic real-time data into a DDDAS for forest ﬁre behavior prediction. In Proceedings of the 9th International Conference on Computational
Science, volume 5545, pages 489 – 499, Baton Rouge, LA, 2009.
[19] A. Shaw and K. Mohseni. A ﬂuid dynamic based coordination of a wireless sensor network of
unmanned aerial vehicles: 3-D simulation and wireless communication characterization. IEEE
Sensors Journal, 11:722–736, 2011.
[20] G. Zhang, S. Ferrari, and M. Qian. An information roadmap method for robotic sensor path
planning. J. Intell. Robot. Syst., 56:69–98, 2009.

2542

