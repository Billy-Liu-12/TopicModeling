Using Consistency Measures and Attribute Dependencies
for Solving Conflicts in Adaptive Systems
M. Malowiecki, N.T. Nguyen, and M. Zgrzywa
Department of Information Systems, Wroclaw University of Technology, Poland
{malowiecki,thanh,mzgrzywa}@pwr.wroc.pl

Abstract. In this paper we consider two problems related to consensus determining as a tool for conflict resolution. The first problem concerns the consistency measures for conflict profiles which could be useful for taking decision if
the consensus should be determined or not. The second problem refers to
dependencies of attributes representing the content of conflicts, which cause
that one may not treat the attributes independently in consensus determining.
We show that using some kind of distance functions may enable to determine
consensus in the same way when the attributes are independent on each other.

1 Introduction
Conflict resolution is one of the most important aspects in distributed systems in
general, and in adaptive systems in particular. The resources of conflicts in these
kinds of systems come from the autonomy feature of their sites. This feature causes
that each site of a distributed or multiagent system processes a task in independent
way and there may arise such situation that the for same task different sites may
generate different solutions. Thus, one deals with a conflict.
For a conflict one can distinguish the following three its components: conflict
body, conflict subject and conflict content. Consensus models seem to be useful in
conflict solving. The oldest consensus model was worked by such authors as
Condorcet, Arrow and Kemeny [1]. This model serves to solving such conflicts in
which the content may be represented by orders or rankings. Models of Barthelemy
[2] and Day [4] enable to solve such conflicts for which the structures of the conflict
contents are n-trees, semillatices, partitions etc. The common characteristic of these
models is that they are one-attribute, it means that conflicts are considered only
referring to one feature. Multi-feature conflicts are not investigated.
In works [7],[8] the author presents a consensus model, in which multi-attribute
conflicts may be represented. Furthermore, in this model attributes are multi-valued,
what means that for representing an opinion of an agent on some issue one may use
not only one elementary value (such as +, –, or 0) [9] but a set of elementary values.
Consensus determining is often required in adaptive systems. The reason is that to be
adaptive a system needs to use information from different resources for determining a
better way to serve users. These resources can contain inconsistent information
referring to the same class of users. Thus, for generating a more adaptive model in
user serving the system has to reconcile the inconsistency. One of the most used ways
for this process is based on consensus calculating.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3038, pp. 537–544, 2004.
© Springer-Verlag Berlin Heidelberg 2004

538

M. Malowiecki, N.T. Nguyen, and M. Zgrzywa

In mentioned models a consensus always is able to be determined, it means that for
each profile representing a conflict one can calculate the consensus referring to some
criterion. However, a question may arise: Is the chosen consensus good enough and
can it be acceptable as the solution of given conflict situation? In other words, is the
conflict situation susceptible to (good) consensus? We will consider the susceptibility
to consensus for conflict profiles. Before defining the notion of susceptibility to
consensus below we present an example. For this problem a notion of so called
susceptibility to consensus has been defined [8], which is relied on defining a criterion
allowing to assess if a conflict can have a solution. In this paper we present another
approach [3],[6]to this problem. It is based on measuring the consistency of the
conflict. Thus a conflict profile should have a number representing its consistency
degree. A set of postulates for consistency functions and some concrete functions are
presented.
Another problem is related to attribute dependencies. Consensus model presented
in [7],[8] enables to process multi-feature conflicts, but attributes are mainly treated
as independent. However, in many practical conflict situations some attributes are
dependent on others. For example, in a meteorological system attribute Wind_power
(with values: weak, medium, strong) is dependent on attribute Wind_speed, the values
of which are measured in unit m/s. This dependency follows that if the value of the
first attribute is known, then the value of the second attribute is also known. It is
natural that if a conflict includes these attributes then in the consensus the dependency
should also take place. The question is: Is it enough to determine the consensus for
the conflict referring to attribute Wind_speed? In other words, when is it true that if
some value is a consensus for the conflict referring to attribute Wind_speed, then its
corresponding value of attribute Wind_power is also a consensus for the conflict
referring to this attribute? In this paper we consider the answer for mentioned above
question. For this aim we assume some dependencies between attributes and show
their influence on consensus determining.

2 Postulates for Consistency Measures
Formally, let U denote a finite universe of objects (alternatives), and Π(U) denote the
ˆ (U) we denote the set of k-element subsets (with
set of subsets of U. By ∏
k

ˆ (U)= ∪ ∏
ˆ (U). Each element of set
repetitions) of the set U for k∈N, and let ∏
k
k >0

ˆ (U) is called a profile. In this paper we only assume that the macrostructure of the
∏
+
set U is known and a distance is a function d: U×U → ℜ , which is: a) Nonnegative:
(∀x,y∈U)[d(x,y)≥0]; b) Reflexive: (∀x,y∈U)[d(x,y)=0 iff x=y] and c) Symmetrical:
(∀x,y∈U)[d(x,y)=δ(y,x)]. For normalization process we can assume that values of
function d belong to interval [0,1].
Let us notice, that the above conditions are only a part of metric conditions. Metric
is a good measure of distance, but its conditions are too strong. A space (U,d) defined
in this way does not need to be a metric space. Therefore we will call it a distance
space [7]. A profile X is called homogeneous if all its elements are identical, that is
X={n∗x} for some x∈U. A profile is heterogeneous if it is not homogeneous. A

Using Consistency Measures and Attribute Dependencies for Solving Conflicts

539

profile is called distinguishable if all its elements are different from each other. A
profile X is multiple referring to a profile Y (or X is a multiple of Y), if Y = {x1,...,xk}
and X={n∗x1,..., n∗xk} for some n∈N. A profile X is regular if it is a multiple of some
distinguishable profile.
By symbol C we denote the consistency function of profiles. This function has the
following signature:
ˆ (U) → [0,1].
C: ∏
where [0,1] is the closed interval of real numbers between 0 and 1.
The idea of this function relies on the measuring the consistency degree of profiles’
elements. The requirements for consistency are expressed in the following postulates.
Those postulates are result of the intuition, because this is the only one way to
translate of the empirical knowledge into the rule-based knowledge. Of course,
founded function has not to grant all of those postulates. Mostly it depends on the
desired appliance. The following postulates for consistency functions have been
defined: P1a. Postulate for maximal consistency; P1b. Extended postulate for
maximal consistency; P2a. Postulate for minimal consistency; P2b. Extended
postulate for minimal consistency; P2c. Alternative postulate for minimal consistency;
P3. Postulate for non-zero consistency; P4. Postulate for heterogeneous profiles; P5.
Postulate for multiple profiles; P6. Postulate for greater consistency; P7a. Postulate
for consistency improvement; P7b. Second postulate for consistency improvement.
The content of these postulates can be found in work [6].

3 Consistency Functions and Their Analysis
Let X={x1, …, xM} be a profile. We define the following parameters:
• The matrix of distances between the elements of profile X:

D X = [ d ijX ] for i,j = 1,…,M.
• The vector of average distances of knowledge states of following objects to the
rest:

[ ]

 1 M X
1 M X
1 M X
W X = wiX = 
d j1 ,
d j2 , …,
∑
∑
∑ d jM
 M − 1 j =1
M − 1 j =1
M − 1 j =1



,



• Diameters of sets X and U Diam( X ) = max d (x, y ), and the maximal element
X

( ) = max

of vector W : Diam W

X

1≤ i ≤ M

x , y∈ X

wiX ,

• The average distance of objects’ knowledge states:
d(X ) =

M M
1
1
∑ ∑ d ijX =
M ( M − 1) i =1 j =1
M

M

∑ wiX ,

i =1

• The sum of distances between an element x of universe U and the elements of
set X: d(x,X) = Σy∈X d(x,y),

540

M. Malowiecki, N.T. Nguyen, and M. Zgrzywa

• The minimal sum of distances from an object to the elements of profile X:
dmin(X) = min {d(x,X): x∈U},
• The maximal sum of distances from an object from X to its elements:
dmax(X) = max {d(x,X): x∈X}.
These parameters are applied for the defining the following consistency functions:
c1 ( X ) = 1 − Diam( X ),

( )

c2 ( X ) = 1 − Diam W X ,
c3 ( X ) = 1 − d ( X ),

c4 ( X ) = 1 −

1
d min ( X ).
M

c5 ( X ) = 1 −

1
d max ( X ).
M

Values of functions c1, c2, c3 and c4 reflect accordingly:
- c1(X) – the maximal distance between two elements of profile.
- c2(X) – the maximal average distance between an element of profile X and
other elements of this profile.
- c3(X) – the average distance between elements of X.
- c4(X) – the minimal average distance between an element of universe U
and elements of X.
- c5(X) – the maximal average distance between an element of profile X and
elements of this profile.
The table presented below shows result of functions analysis. The columns denote
postulates and rows denote functions. Plus means that presented function complies the
postulate and minus means that presented function doesn’t comply the postulate.
Table 1. Results of functions analysis
c1
c2
c3
c4
c5

P1a
+
+
+
+
+

P1b
−
−
+
+
+

P2a
+
+
+
−
−

P2b
−
−
−
−
−

P2c
+
−
−
−
−

P3
−
−
+
+
+

P4
+
+
+
+
+

P5
+
+
−
+
+

P6
−
−
−
+
+

P7a
−
+
+
−
−

P7b
−
+
+
−
−

4 The Outline of Consensus Model
The consensus model which enables processing multi-attribute and multi-valued
conflicts has been discussed in detail in works [7],[8]. In this section we present only
some of its elements needed for the consideration of attribute dependencies. We

Using Consistency Measures and Attribute Dependencies for Solving Conflicts

541

assume that some real world is commonly considered by a set of agents that are
placed in different sites of a distributed system. The interest of the agents consists of
events which occur (or are to occur) in this world. The task of the agents is based on
determining the values of attributes describing these events. If several agents consider
the same event then they may generate different descriptions (which consist of, for
example, scenarios, timestamps etc.) for this event. Thus we say that a conflict takes
place. For representing potential conflicts we use a finite set A of attributes and a set
V of attribute elementary values, where V = ∪ a∈AVa (Va is the domain of attribute a).
Let Π(Va) denote the set of subsets of set Va and Π(VB) = ∪ b∈BΠ(Vb). Let B⊆A, a tuple
rB of type B is a function rB: B → Π(VB) where rB(b) ⊆ Vb for each b∈B. Empty tuple is
denoted by symbol φ. The set of all tuples of type B is denoted by TYPE(B). The
consensus system is defined as a quadruple
Consensus_Sys = (A, X, P, Z),
where:
• A is a finite set of attributes, which includes a special attribute Agent; a value of
attribute a where a≠Agent is a subset of Va; values of attribute Agent are
singletons which identify the agents;
• X={Π(Va): a∈A} is a finite set of consensus carriers;
• P is a finite set of relations on carriers from X, each relation P∈P is of some
type TP (for TP ⊆ A and Agent ∈ TP). Relations belonging to set P are classified
+
into 2 groups identified by symbols " " and "−" as the upper index to the relation
names.
• At least Z is a set of logical formulas for which the relation system (X,P) is a
model. These formulas are the conditions which should be satisfied by
consensus as the solution of the conflict.
The structures of the consensus carriers are defined by means of a distance
function between tuples of the same type. This function can be defined on the basis of
one of distance functions δ and ρ between sets of elementary values [8]. These
functions are defined as follows: Function δ measures the distance between 2 sets X
and Y (X,Y⊆V) as the minimal costs of the operation which transforms set X into set Y;
the distance measured by function ρ is equal to the sum of shares of elements from V
P
P
in this distance. Functions δ and ρ are called propositional (denoted by δ and ρ
respectively) if the condition (X÷Y ⊇ X'÷Y') ⇒ (κ(X,Y) ≥ κ(X',Y')) is satisfied for any
X,X',Y,Y'⊆Va and κ∈{ρ, δ}. The distance ∂(r,r') between 2 tuples r and r' of type A is
1
P
P
equal to the number
κ ( ra , r ' a ) where κ∈{ρ , δ }.
∑
a
∈
A
card( A)
A consensus is considered within a conflict situation, which is defined as a pair s =
+
+
<{P ,P−}, A→B> where A,B⊆A, A∩B=∅ and rA≠φ holds for any tuple r∈P ∪P−.
+
−
The first element of a conflict situation (i.e. set of relations {P ,P }) includes the
domain from which consensus should be chosen, and the second element (i.e.
relationship A→B) presents the schemas of consensus subjects of the consensus
+
content, such that for a subject e (as a tuple of type A, included in P or P−) there
should be assigned only one tuple of type B. A conflict situation yields a set
Subject(s) of conflict subjects which are represented by tuples of type A. For each

542

M. Malowiecki, N.T. Nguyen, and M. Zgrzywa

subject e two conflict profiles, i.e. profile(e) and profile(e)−, as relations of
+
TYPE({Agent}∪B) should be determined. Profile profile(e) contains the positive
opinions of the agents on the subject e, while profile profile(e)− contains agents’
negative opinions on this subject.
+

Definition 1. Consensus on a subject e∈Subject(s) is a pair (C(s,e) ,C(s,e)−) of 2
tuples of type A∪B which fulfill the following conditions:
a) C(s,e)A+=C(s,e)A−=e and C(s,e)+B ∩C(s,e)−B=φ,
+

b) The sums

∑ ∂( rB , C ( s, e) +B ) and

r∈ profile( e ) +
+

∑ ∂( rB , C ( s, e) −B ) are minimal.

r∈ profile( e ) −

−

Any tuples C(s,e) and C(s,e) satisfying the conditions of Definition 1 are called
+
consensuses of profiles profile(e) and profile(e)− respectively.

5 Attribute Dependencies and Consensus Determining
+

In Definition 1 the most important is condition b) which requires the tuples C(s,e) B
and C(s,e)

−
B

to be determined in such way thus the sums

∑ ∂( rB , C ( s, e) +B ) and

r∈ profile( e ) +

∑ ∂( rB , C ( s, e) −B ) are minimal, respectively. These tuples could be calculated in

r∈ profile( e ) −

the following way: For each attribute b∈B one can determine sets C(s,e) b and C(s,e)−b,
+

which minimize sums

∑ ∂( rb , C ( s, e)b+ )

r∈ profile( e )

+

and

∑ ∂( rb , C ( s, e) b− )

respectively.

r∈ profile( e ) −

Such way is an effective one, but it is correct only if the attributes from set B are
independent. In this section we consider consensus choice assuming that some
attributes from set B are dependent. The definition of attribute dependency given
below is consistent with those given in the information system model [10]:
Definition 2. Attribute b is dependent on attribute a if and only if there exists a

function f ba : Va→Vb such that in any consensus system (A,X,P,Z) for each relation
P∈P of type TP and a,b∈TP the formula (∀r∈P)(rb =

∪ x∈ra { f ba ( x)} ) is true.

The dependency of attribute b on attribute a means that in the real world if for
some object the value of a is known then the value of b is also known. In practice,
owing to this property for determining the values of attribute b it is enough to know
the value of attribute a. Instead of ∪ x∈Y { f ba ( x)} we will write shortly f ba (Y).
+
Consider now a conflict situation s=<{P ,P−},A→B>, in which attribute b is
+
dependent on attribute a where a,b∈B. Let profile(e) be the positive profile for given
conflict subject e∈Subject(s). The problem relies on determining consensus for this
profile. We can solve this problem using two approaches:

Using Consistency Measures and Attribute Dependencies for Solving Conflicts

543

+

1. Notice that profile(e) is a relation of type B∪{Agent}. The dependency of attribute
b on attribute a implies that there exists a function from set TYPE(B∪{Agent}) to set
+
TYPE(B∪{Agent}\{b}) such that for each profile profile(e) one can assign exactly
+
+
one set profile'(e) = {rB∪{Agent}\{b}: r∈profile(e) }.
+
Set profile'(e) can be treated as a profile for subject e in the following conflict
+
situation
s' = <{P ,P−}, A→B\{b}>.
+
+
Notice that the difference between profiles profile(e) and profile'(e) relies only on
+
the lack of attribute b and its values in profile profile(e) . Thus one can expect that the
+
+
+
consensus C(s,e) for profile profile(e) can be determined from the consensus C(s,e)'
+
+
for profile profile(e)' after adding to tuple C(s,e)' attribute b and its value which is

equal to f ba (C(s,e)' a). In the similar way one can determine the consensus for profile
+

−

profile(e) .
2. In the second approach attributes a and b are treated equivalently. That means they
+
play the same role in consensus determining for profiles profile(e) and profile(e)−.
+
−
The consensus for profiles profile(e) and profile(e) are defined as follows:
Definition 3. The consensus for subject e∈Subject(s) in situation s=<{P ,P−},A→B>
+
is a pair of tuples (C(s,e) ,C(s,e)−) of type A∪B, which satisfy the following
conditions:
+
+
a) C(s,e) A=C(s,e)−A=e and C(s,e) B ∩C(s,e)−B=φ,
+

b) C(s,e) b=f ba (C(s,e) a) and C(s,e)−b=f ba (C(s,e)−a),
+

+

c) The sums

∑ ∂( rB , C ( s, e) +B ) and

r∈ profile( e ) +

∑ ∂( rB , C ( s, e) −B ) are minimal.

r∈ profile( e ) −

We are interested in the cases when conditions b) and c) of Definition 3 can be
+
satisfied simultaneously. The question is: Is it true that if set C(s,e) a is a consensus
+
+
for profile profile(e) a (as the projection of profile profile(e) on attribute a) then set
f ba (C(s,e) a) will be a consensus for profile profile(e) b (as the projection of profile
+
profile(e) on attribute)? The following theorem was proven [8]:
+

+

Theorem 1. With using distance function ρ or δ if a set C(s,e) a is a consensus for
+
+
profile profile(e) a then there exists a set C(s,e) b being a consensus for profile
P

P

+

profile(e) b such that f ba (C(s,e) a) ⊆ C(s,e) b.
A similar theorem may be formulated and proved for consensuses of profiles
profile(e)−a and profile(e)−b.
+

+

+

+

+

Example 1. [5],[8] Let profiles profile(e) a and profile(e) b and function f be given:
profile(e)+a

profile(e)+b

{a1,a3}
{a2,a3}
{a1,a4}
{a1,a4,a5}

{b2}
{b1,b2}
{b1,b2}
{b1,b2}

Function f a : Va→Vb
b
a1
b2
a2
b1
a3
b2
a4
b1
a5
b1

544

M. Malowiecki, N.T. Nguyen, and M. Zgrzywa
+

the consensus for profile profile(e) a is the set {a1,a3} and the consensus for profile
profile(e) b is the set {b1,b2}. Notice that f ba ({a1,a3}) = {b2} ⊆ {b1,b2}.
+

6 Conclusions
In this paper we consider 2 problems: The first refers to measuring consistency of
conflict profiles. We present its definition, conditions for its determining and some
concrete consistency functions. The future works should concern the deep analysis of
proposed postulates and considering if a function satisfying all of them exists. The
second problem is related to how dependencies of attributes influence the possibilities
of consensus determining. The limitations of distance functions between attribute
values were shown, guarantying determining a correct consensus despite of treating
attributes independently. Using such functions provides the following profits. First of
all, they enable determining a consensus for only a part of the attributes (the rest may
be calculated using dependency functions). Secondly, they prevent from determining
an incorrect consensus, which does not fulfill some of the dependencies of attributes.
The results of these works should be useful in adaptive systems where reconciling
processes are often required, for example, in user interface design [11].

References
1.
2.

Arrow, K.J.: Social Choice and Individual Values. Wiley New York (1963).
Barthelemy, J.P., Janowitz, M.F.: A Formal Theory of Consensus. SIAM J. Discrete Math.
4 (1991) 305-322.
3. Danilowicz, C., Nguyen, N.T., Jankowski, Ł.: Methods for selection of representation of
agent knowledge states in multiagent systems. Wroclaw University of Technology Press
(2002) (in Polish).
4. Day, W.H.E.: Consensus Methods as Tools for Data Analysis. In: Bock, H.H. (ed.):
Classification and Related Methods for Data Analysis. North-Holland (1988) 312–324.
5. Katarzyniak, R., Nguyen, N.T.: Modification of Weights of Conflict Profile’s Elements
and Dependencies of Attributes in Consensus Model. Lecture Notes in Artificial
Intelligence 2475 (2002) 131-138.
6. Nguyen, N.T., Malowiecki, M.: Consistency Measures for Conflict Profiles. Manuscript
submitted for publication in: Advanced Rough Sets (Springer-Verlag).
7. Nguyen, N.T.: Consensus System for Solving Conflicts in Distributed Systems.
Information Sciences – An International Journal 147 (2002) 91-122.
8. Nguyen, N.T.: Methods for Consensus Choice and their Applications in Conflict
Resolving in Distributed Systems. Wroclaw University of Technology Press (2002), (in
Polish).
9. Pawlak, Z.: An Inquiry into Anatomy of Conflicts. Information Sciences 108 (1998) 6578.
10. Pawlak, Z., Skowron, A.: A Rough Set Approach to Decision Rules Generation. Reports of
Institute of Computer Science, Warsaw University of Technology (1993).
11. Sobecki J, Weihberg M (2004) Consensus-based Adaptive User Interface Implementation
in the Product Promotion. To be published as a chapter in book "Design for a more
inclusive world" (Springer-Verlag).

