Procedia Computer Science
Volume 51, 2015, Pages 2893–2897
ICCS 2015 International Conference On Computational Science

Cryptanalysing the shrinking generator∗
Sara D. Cardell1 and Amparo F´
uster-Sabater2
1

Depto. de Estad´ıstica e Investigaci´
on Operativa, Universidad de Alicante,
Ap. Correos 99, E-03080, Alicante, Spain
s.diaz@ua.es
2
Instituto de Tecnolog´ıas F´ısicas y de la Informaci´
on,
CSIC, Serrano 144, 28006, Madrid, Spain
amparo@iec.csic.es

Abstract
In this work, we propose a cryptanalysis of the nonlinear sequence generator called the shrinking
generator. The output sequence of this cryptographic generator, the shrunken sequence, can
be modelled as one of the output sequences of linear cellular automata (CA). The shrunken
sequence and the other sequences generated by the CA can be reduced to a combination of PNsequences generated by the same characteristic polynomial. Therefore, all these PN-sequences
are the same but shifted. We propose an eﬃcient cryptanalysis that takes advantage of the
linearity of these PN-sequences and the CA.
Keywords: Shrinking generator, Shrunken sequence, Cryptanalysis, Characteristic polynomial

1

Introduction

The PN-sequences generated by maximum-length linear feedback shift registers (LFSRs) [5]
have applications in several areas. However, for their use in cryptography, such sequences are
combined by means of nonlinear functions to destroy their linearity. These structures generate
sequences with high linear complexity, long period and good statistical properties [4].
In [1], it was proven that one-dimensional linear CA generate exactly the same PN sequences
as those generated by maximum-length LFSRs. In [4], the authors proved that linear 90/150
CA generate exactly the same sequences as those of certain nonlinear generators based on
LFSRs. In this work, we show that a well-known class of LFSR-based nonlinear generators,
the sequence generators based on decimation, can be modelled in terms of linear 102 CA. The
linearity of the CA can be advantageously used to propose a cryptanalysis against the shrinking
generator and recover the output sequence.
∗ This work was partially supported by project S2013/ICE-3095-CIBERDINE-CM of Comunidad de Madrid.
The work of the ﬁrst author was also supported by a grant for postdoctoral students from the Generalitat
Valenciana with reference APOSTD/2013/081

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2015.05.454

2893

Cryptanalysing the shrinking generator

2

D. Cardell and F´
uster-Sabater

Basic concepts

The shrinking generator is composed of two maximum-length LFSRs R1 and R2 , with lengths
L1 and L2 , respectively. The PN-sequence {ai } produced by R1 decimates the PN-sequence
{bi } generated by the other register R2 . Given two bits ai and bi , i = 0, 1, 2, . . . from both
PN-sequences, the output sequence {sj } of the generator is obtained as follows: if ai = 1 then
sj = bi and if ai = 0 then bi is discarded.
The sequence {sj } is called the shrunken sequence. It has period T = (2L2 − 1)2L1 −1
and its number of 1s is 2L1 +L2 −2 . Besides, the characteristic polynomial has the form p(x)m ,
with 2L1 −2 < m ≤ 2L1 −1 and p(x) a primitive polynomial of degree L2 [4]. This generator
has good cryptographic properties, is easy to implement and was ﬁrst introduced in [2]. The
characteristic polynomial of the registers R1 and R2 are known and the key of this generator is
the initial state of each register.
Cellular automata (CA) were introduced by von Neumann as simple models to study biological processes such as self-reproduction [8]. Elementary CA consist of an arrangement of cells.
The value of each cell evolves deterministically according to a set of deﬁnite rules involving the
values of its k nearest neighbours. Thus, the state of the cell in position i at time t + 1, denoted
by xt+1
, depends on the state of the k closest cells at time t. If these rules are composed
i
exclusively of XOR operations, then the CA are linear. Here, the CA we consider are regular
(every cell follows the same rule), cyclic (extreme cells are adjacent) and one-dimensional. For
k = 3, rule 102 is given by xt+1
= xti + xti+1 [9].
i
Due to their speed and the randomness in their sequences, CA are a very good basis for
stream ciphers. Furthermore, their hardware implementation is simple and their regular structure makes possible to ﬁnd an eﬃcient software implementation. Many authors have proposed
stream ciphers based on CA along the years [3, 7].

3

Modelling the shrunken sequence

In this section, we highlight some properties of the shrunken sequence, which will be used in the
recovering algorithm proposed in Section 4. From now on, we consider two registers R1 and R2 ,
with characteristic polynomials p1 (x), p2 (x) ∈ F2 [x], lengths L1 and L2 (gcd(L1 , L2 ) = 1) and
T1 = 2L1 − 1 and T2 = 2L2 − 1 the periods of their corresponding PN-sequences, respectively.
Besides, the PN-sequences generated by both registers are {ai } and {bi }, respectively. We
assume without loss of generality that a0 = 1. The shrunken sequence {sj } generated by
both registers will have period T = 2L1 −1 (2L2 − 1) and characteristic polynomial p(x)m , with
2L1 −1 < m ≤ 2L1 −1 .

3.1

Properties of the shrunken sequence

If we decimate the shrunken sequence {sj } by 2L1 −1 , we get 2L1 −1 PN-sequences whose characteristic polynomial is p(x). These sequences are called the interleaved PN-sequences of the
shrunken sequence. All these PN-sequences have the same characteristic polynomial and, thus,
there is one single PN-sequence but shifted. This shift depends on the positions of the 1s in
the PN-sequence {ai }.
Lemma 1. Let δ ∈ {1, 2, 3, . . . , T2 − 1}, such that T1 δ = 1 mod T2 . If the ﬁrst interleaved
sequence is decimated by δ, then the resultant sequence is {bi }.
2894

Cryptanalysing the shrinking generator

D. Cardell and F´
uster-Sabater

As a consequence, if we decimate the shrunken sequence by 2L1 −1 δ, we obtain the PNsequence {bi } again.
Corollary 1. If the primitive polynomials p1 (x), p2 (x) ∈ F2 [x] have degrees L1 and L1 + 1,
respectively, then δ = T2 − 2.
On the other hand, we analyse now how to recover {ai } from {sj }. Assume the ﬁrst interleaved PN-sequence is {vi }. Since the other interleaved PN-sequences are the same but shifted,
we assume they have the form {vd1 +i }, {vd2 +i }, . . . , {vd2L1 −1 −1 +i }. Let {0, i1 , i2 , . . . , i2L1 −1 −1 }
be the set of indices of the 1s in {ai }. In this case, we know that dk = δik , for k =
1, 2, . . . , 2L1 −1 − 1.

3.2

Sequences in the CA

Consider a PN-sequence {ui } with characteristic polynomial p(x) of degree L. The sequence
{ui + ui+1 } is obtained adding the PN-sequence with itself, therefore this new sequence is the
same PN-sequence but starting in some position d. For every PN-sequence {ui } generated by a
primitive polynomial p(x), there exists a unique number d = Zα (1), such that ui + ui+1 = ud ,
where Zα (1) is the Zech logarithm of 1 (see [6]).
Consider a linear CA that uses rule 102 and the sequence in the zero column is the PNsequence {ui }. It is not diﬃcult to check that the sequences in columns whose indices are 2j ,
for j = 0, 1, 2, . . ., have the form {ui + ui+2j }. Using the previous reasoning, we can see that
every column is the same PN-sequence {ui } but shifted d, 2d, 3d, . . . (mod 2L − 1) positions,
respectively. Besides, since the CA is cyclic, the length of the CA must be T /gcd (T, d).
Consider the shrunken sequence {sj }, whose characteristic polynomial is p(x)m , 2L1 −2 <
m ≤ 2L1 −1 . There exists a unique number D = 2L1 −1 d, such that sj + sj+2L1 −1 = sD , where
d = Zα (1), with α ∈ F2L2 root of p(x). This means that the CA generate 2L1 −1 sequences,
including the shrunken sequence, before generating the shrunken sequence again shifted D
positions. According to this, the CA must have length L = T 2L1 −1 /gcd (D, T ).

3.3

The other sequences in the CA

If we locate the shrunken sequence in the zero column of the CA, 2L1 −1 diﬀerent sequences are
generated, including the shrunken sequence. All these sequence have the same characteristic
polynomial p(x)m and are composed of 2L1 −1 PN-sequences with characteristic polynomial
p(x).
Consequently, we can deduce that the fact of knowing some bits of the other sequences
of the CA can help us to recover parts of the shrunken sequence. More precisely, we can
recover the ﬁrst interleaved PN-sequence of the shrunken sequence using the other interleaved
PN-sequences of the same shrunken sequence and the interleaved PN-sequences of the other
sequences generated by the CA.
Assume the interleaved PN-sequences of the shrunken sequence are denoted by {vd0 +i },
{vd1 +i }, {vd2 +i }, . . . , {vd2L1 −1 −1 +i }, where d0 = 0. Remember that the shifts dk depend on
the location of the 1s in the PN-sequence {ai } generated by the ﬁrst register R1 . If the interleaved PN-sequences of the next sequence in the CA are denoted by {vd10 +i }, {vd11 +i }, {vd12 +i },
. . . , {vd1L −1 +i }, these new positions can be computed as follows
2 1

−1

d1k = Zα (dk − dk+1 ) + dk+1 , k = 0, 1, . . . , 2L1 −1 − 2,
d12L1 −1 −1 = Zα (d2L1 −1 −1 − 1) + 1.
2895

Cryptanalysing the shrinking generator

D. Cardell and F´
uster-Sabater

Similarly, we can compute the shifts dji , for i = 0, 1, 2, . . . , 2L1 −1 − 1 for the next sequences in
the CA using the same expressions and the previous shifts dj−1
, for i = 0, 1, 2, . . . , 2L1 −1 − 1
i
and j = 2, 3, . . .

4

Cryptanalysis

In this section we introduce a cryptanalysis of the shrinking generator based on the results
given in Section 3. This attack is based on an exhaustive search over the initial states of the
ﬁrst register R1 . Thus, the complexity of the brute-force attack is reduced by a factor 2L2 .
Given two primitive polynomials p1 (x) and p2 (x) that generate the shrunken sequence, the
characteristic polynomial p(x)m can be computed using these two polynomials. Given n bits,
s = {s0 , s1 , . . . , sn−1 }, of the shrunken sequence, the function given in Algorithm 1 tests every
initial state a of length L1 for R1 . As output, the function provides a set of possible correct
initial states.
It is worth pointing out that this work can be equivalently done with rule 60, xt+1
=
i
t
xi−1 + xti . In this case, the sequences would appear in inverse order, but the results would be
identical.

5

Conclusions

The shrinking generator was conceived and designed as a nonlinear keystream generator based
on maximum-length LFSRs. However, this generator can be modelled in terms of CA using rule
102. The eﬀort to introduce decimation in order to break the inherent linearity of the LFSRs
has been useless, since the shrunken sequence can be modelled as the output sequence of a
model based on linear CA. In this work, we analyse a family of one-dimensional, linear, regular
and cyclic 102 CA that describe the behaviour of the shrinking generator. These CA generate
a family of sequences with the same characteristic polynomial and period as the shrunken
sequence. Taking advantage of the linearity and the similarity between the sequences generated
by the CA, we propose a cryptanalysis based on the exhaustive search among the initial states
of the ﬁrst register.

References
[1] Kevin Cattell and Jon C. Muzio. One-dimensional linear hybrid cellular automata. IEEE Transactions on Computer-Aided Design, 15(3):325–335, 1996.
[2] Don Coppersmith, Hugo Krawczyk, and Yishay Mansour. The shrinking generator. In Advances
in Cryptology – CRYPTO ’93, volume 773 of Lecture Notes in Computer Science, pages 23–39.
Springer-Verlag, 1993.
[3] Sourav Das and Dipanwita RoyChowdhury. Car30: A new scalable stream cipher with rule 30.
Cryptography and Communications, 5(2):137–162, 2013.
[4] Amparo F´
uster-Sabater and Pino Caballero-Gil. Linear solutions for cryptographic nonlinear sequence generators. Physics Letters A, 369:432–437, 2007.
[5] Solomon W. Golomb. Shift Register-Sequences. Aegean Park Press, Laguna Hill, California, 1982.
[6] Klaus Huber. Some comments on Zech’s logarithms. IEEE Transactions on Information Theory,
36(4):946–950, 1990.
[7] Jimmy Jose, Sourav Das, and Dipanwita RoyChowdhury. Inapplicability of fault attacks against
trivium on a cellular automata based stream cipher. In 11th International Conference on Cellular

2896

Cryptanalysing the shrinking generator

D. Cardell and F´
uster-Sabater

Algorithm 1. CrypTest: Searching possible initial states for R1
Input: p1 (x), p(x) and s
function S =CrypTest(p1 (x), p(x), s )
01 Initialise S;
02 for i = 1 to 2L1 − 1
03
Compute i the binary representation of i;
01:
Compute the PN-sequence {a0 , a1 , . . . , a2L1 −1 } using p1 (x) and a;
02:
Store in pos the positions of the 1s in {a0 , a1 , . . . , a2L1 −1 };
03:
Compute δ, such that δ · (2L1 − 1) = 1 mod (2L2 − 1);
04:
Store in pos the new positions computed as posi · δ mod (2L2 − 1);
05:
Store [posi , si ] in a matrix A;
06:
Stop = 1;
07:
while Stop = 1 and length(ss) > 1
08:
Update pos with the new positions;
09:
Update s with {s0 + s1 , s1 + s2 , . . . , sn−1 + sn };
10:
Store [M,N]=size(A);
11:
for j = 0 to M − 1
12:
for k = 0 to length(pos) − 1
13:
if Aj1 = posk
14:
if Aj2 = sk
15:
Initialise A;
16:
Stop = 0;
17:
end if
18:
end if
19:
Store [posk , sk ] in A;
20:
end for
21:
end for
22:
end while
05
if Stop=1
06
Store i in the set S;
07
end if
08 end for
end function
Output: S: Set of initial states of R1 considered correct.

Automata for Research and Industry, ACRI 2014, volume 875 of Lecture Notes in Computer Science,
pages 427–436. Springer-Verlag, 2014.
[8] John Von Neumann. Theory of Self-Reproducing Automata. University of Illinois Press, Champaign,
IL, USA, 1966.
[9] Stephen Wolfram. Cellular automata as simple self-organizing system. Caltrech preprint CALT
68–938, 1982.

2897

