Bifurcation Analysis of Large Equilibrium
Systems in Matlab
David S. Bindel1 , James W. Demmel2 , Mark J. Friedman3 ,
Willy J.F. Govaerts4 , and Yuri A. Kuznetsov5
1

2

4

Department of Electrical Engineering and Computer Science,
University of California at Berkeley,
Berkeley, CA 94704
dbindel@eecs.berkeley.edu
Department of Electrical Engineering and Computer Science,
Department of Mathematics,
University of California at Berkeley,
Berkeley, CA 94704
demmel@eecs.berkeley.edu
3
Mathematical Sciences Department,
University of Alabama in Huntsville,
Huntsville, AL 35899
friedman@math.uah.edu
Department of Applied Mathematics and Computer Science,
Ghent University,
Krijgslaan 281-S9, B-9000 Ghent, Belgium
Willy.Govaerts@UGent.be
5
Mathematisch Instituut, Budapestlaan 6,
3584CD Utrecht, The Netherlands
kuznet@math.uu.nl

Abstract. The Continuation of Invariant Subspaces (CIS ) algorithm
produces a smoothly varying basis for an invariant subspace R(s) of a
parameter-dependent matrix A(s). In the case when A(s) is the Jacobian
matrix for a system that comes from a spatial discretization of a partial
diﬀerential equation, it will typically be large and sparse. Cl matcont is
a user-friendly matlab package for the study of dynamical systems and
their bifurcations. We incorporate the CIS algorithm into cl matcont
to extend its functionality to large scale bifurcation computations via
subspace reduction.

1

Introduction

Parameter-dependent Jacobian matrices provide important information about
dynamical systems
du
= f (u, α), where u ∈ Rn , α ∈ R, f (u, α) ∈ Rn .
dt
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3514, pp. 50–57, 2005.
c Springer-Verlag Berlin Heidelberg 2005

(1)

Bifurcation Analysis of Large Equilibrium Systems in Matlab

51

For example, to analyze stability at branches (u(s), α(s)) of steady states
f (u, α) = 0,

(2)

we look at the linearization fu (u(s), α(s)). For general background on dynamical systems theory we refer to the existing literature, in particular [15]. If the
system comes from a spatial discretization of a partial diﬀerential equation, then
fu will typically be large and sparse. In this case, an invariant subspace R(s)
corresponding to a few eigenvalues near the imaginary axis provides information
about stability and bifurcations. We are interested in continuation and bifurcation analysis of large stationary problems (2).
Numerical continuation for large nonlinear systems of this form is an active
area of research, and the idea of subspace projection is common in many methods being developed. The continuation algorithms are typically based on Krylov
subspaces, or on recursive projection methods which use a time integrator instead of a Jacobian multiplication as a black box to identify the low-dimensional
invariant subspace where interesting dynamics take place; see e.g. [17, 5, 11, 4, 6],
and references there.
Cl matcont [9] and its GUI version Matcont [8] are matlab packages for
the study of dynamical systems and their bifurcations for small and moderate
size problems. The matlab platform is attractive because it makes them userfriendly, portable to all operating systems, and allows a standard handling of
data ﬁles, graphical output, etc.
Recently, we developed the Continuation of Invariant Subspaces (CIS) algorithm for computing a smooth orthonormal basis for an invariant subspace
R(s) of a parameter-dependent matrix A(s) [7, 10, 12, 3]. The CIS algorithm uses
projection methods to deal with large problems. See also [12] for similar results.
In this paper we consider integrating the CIS algorithm into cl matcont.
Standard bifurcation analysis algorithms, such as those used in cl matcont,
involve computing functions of A(s). We adapt these methods to large problems
by computing the same functions of a much smaller restriction C(s) := A(s)|R(s)
of A(s) onto R(s). Note, that the CIS algorithm ensures that only eigenvalues
of C(s) can cross the imaginary axis, so that C(s) provides all the relevant
information about bifurcations. In addition, the continued subspace is adapted
to track behavior relevant to bifurcations.

2

Bifurcations for Large Systems

Let x(s) = (u(s), α(s)) ∈ Rn × R be a smooth local parameterization of a
solution branch of the system (2). We write the Jacobian matrix along this path
as A(s) := fu (x(s)). A solution point x(s0 ) is a bifurcation point if Re λi (s0 ) = 0
for at least one eigenvalue λi (s0 ) of A(s0 ).
A test function φ(s) := ψ(x(s)) is a (typically) smooth scalar function that
has a regular zero at a bifurcation point. A bifurcation point between consecutive
continuation points x(sk ) and x(sk+1 ) is detected when
ψ (x(sk )) ψ (x(sk+1 )) < 0.

(3)

52

D.S. Bindel et al.

Once a bifurcation point has been detected, it can be located by solving the
system
f (x) = 0,
(4)
g(x) = 0,
for an appropriate function g.
We consider here the case of a (generic codimension-1 bifurcation) fold or
limit point (LP) and a branch point (BP), on a solution branch (2). For both
detecting and locating these bifurcations, cl matcont uses the following test
functions (see e.g. [15], [13], [9]):
M
ψBP
(x(s)) := det

A fα
,
u˙ T α˙

(5)
n

M
ψLP
(x(s)) := det (A(s)) =

λi (s) ,

(6)

i=1

where x˙ := dx/ds. The bifurcations are deﬁned by:
M
= 0,
BP : ψBP

For some m

M
M
LP : ψLP
= 0, ψBP
= 0.

(7)

n, let
m

Λ1 (s) := {λi (s)}i=1 , Re λm ≤ . . . ≤ Re λmu +1 < 0 ≤ Re λmu ≤ . . . ≤ Re λ1 ,
(8)
be a small set consisting of rightmost eigenvalues of A(s) and let Q1 (x(s)) ∈
Rn×m be an orthonormal basis for the invariant subspace R(s) corresponding
to Λ1 (s). Then an application of the CIS algorithm to A(s) produces
m×m
C(x(s)) := QT
,
1 (x(s))A(s)Q1 (x(s)) ∈ R

(9)

which is the restriction of A(s) onto R(s). Moreover, the CIS algorithm ensures
that the only eigenvalues of A(s) that can cross the imaginary axis come from
Λ1 (s), and these are exactly the eigenvalues of C(x(s)). We use this result to
construct new methods for detecting and locating bifurcations. Note, that Λ1 (s)
is computed automatically whenever C(x(s)) is computed.
2.1

Fold

M
M
(x(s)) and ψLP
(x(s)), respectively, by
Detecting Fold. We replace ψBP

ψBP (x(s)) := sign det

A fα
u˙ T α˙

,

(10)

m

ψLP (x(s)) :=

λi (s) .

(11)

i=1

Then LP is detected as:
LP : ψBP (x(sk )) ψBP (x(sk+1 )) > 0 and ψLP (x(sk )) ψLP (x(sk+1 )) < 0. (12)

Bifurcation Analysis of Large Equilibrium Systems in Matlab

53

Locating Fold. Let x0 = x(s0 ) be a fold point. Then A(s0 ) has rank n − 1. To
locate x0 , we use a minimally augmented system (see [13], [9]), with A replaced
by C, whenever possible. The system consists of n + 1 scalar equations for n + 1
components x = (u, α) ∈ Rn × R,
f (x) = 0,
g (x) = 0,

(13)

where g = g (x) is computed as the last component of the solution vector (v, g) ∈
Rm × R to the (m + 1)-dimensional bordered system:
C(x) wbor
T
vbor
0

v
0
= m×1 ,
1
g

(14)

where vbor ∈ Rm is close to a nullvector of C(x0 ), and wbor ∈ Rm is close to
a nullvector of C T (x0 ) (which ensures that the matrix in (14) is nonsingular).
T
v = 1. Thus (13) and (14) hold at
For g = 0, system (14) implies Cv = 0, vbor
x = x0 , which is a regular zero of (13).
The system (13) is solved by the Newton method, and its Jacobian matrix
is:
f
A fα
(15)
J := x =
∈ R(n+1)×(n+1) ,
gx
gu gα
where gx is computed as

gx = −wT Cx v,

(16)

with w obtained by solving
C T (x) vbor
T
wbor
0

w
0
=
.
1
g

(17)

Here Cx v is computed as
Cx (x)v ≈

fx (u
QT
1

+δ

z
z

, α) − fx (u − δ

z
z

, α)

z , z := Q1 v ∈ Rn . (18)
2δ
Finally we note that at each Newton step for solving (13), linear systems
with the matrix (15) should be solved by the mixed block elimination (see [13]
and references there), since the matrix (15) has the form
M :=

A b
,
cT d

(19)

where A ∈ Rn×n is large and sparse, b, c ∈ Rn , d ∈ R, and A can be ill conditioned.
Once the fold point x0 = (u0 , α0 ) is computed, the corresponding quadratic
normal form coeﬃcient
1
a := wT fuu [v, v]
2
is computed approximately as
a≈

Q1 w
1 T
Q1 v
, w≈ T
. (20)
w [f (u0 + δv, α0 ) + f (u0 − δv, α0 )] , v ≈
2
2δ
Q1 v
v Q1 w

54

D.S. Bindel et al.

Fold Continuation. We use again the system (13) of n + 1 scalar equations,
but for n + 2 components x = (u, α) ∈ Rn × R2 , in this case. Again g is obtained
by solving (14), where gx is computed using (16), (17), and (18).
There are four generic codimension-2 bifurcations on the fold curve: BogdanovTakens (or double zero) point (BT), Zero - Hopf point (ZH), Cusp point (CP),
and a branch point (BP). These are detected and located by the corresponding modiﬁcations of cl matcont test functions. For example, test function to
detect ZH is
ψZH (x(s)) :=

(Re λi (s) + Re λj (s)) .

(21)

m≥i>j

2.2

Branch Points

Detecting Branching. The branch point is detected as:
BP : ψBP (x(sk )) ψBP (x(sk+1 )) < 0,

(22)

where ψBP is deﬁned by (10).
Locating Branching. Let x0 = x(s0 ) be a branch point such that fx0 = fx (x0 )
has rank n − 1 and
N fx0 = Span v10 , v20 ,

N

fx0

T

= Span ψ 0 .

We use a minimally augmented system ([14], [2], [1]) of n + 2 scalar equations
for n + 2 components (x, µ) = (u, α, µ) ∈ Rn × R × R,
f (x) + µwbor = 0,
g1 (x) = 0,
g2 (x) = 0,

(23)

where µ is an unfolding parameter, wbor ∈ Rn is ﬁxed, and g1 = g1 (x), g2 =
v v
g2 (x) ∈ R are computed as the last row of the solution matrix 1 2 , v1 , v2 ∈
g1 g2
Rn+1 , to the (n + 2)-dimensional bordered system:
fx (x) wbor
T
Vbor
02×1

v1 v2
0
= n×2 ,
g1 g2
I2

Vbor = v1,bor v2,bor ,

(24)

where v1,bor , v2,bor ∈ Rn+1 are close to an orthonormal basis of N fx0 , and wbor
T

is close to the nullvector of fx0 .
The system (23) is solved by the Newton method [14] with the modiﬁcations
in [2]. The Newton method is globalized by combining it with the bisection on
the solution curve.

Bifurcation Analysis of Large Equilibrium Systems in Matlab

3

55

Examples

All computations are performed on a 3.2 GHz Pentium IV laptop.
Example 1. 1D Brusselator, a well known model system for autocatalytic chemical reactions with diﬀusion:
d2
d1
2
v + bu − u2 v = 0, in Ω = (0, 1),
l2 u − (b + 1)u + u v + a = 0, l2
(25)
u(0) = u(1) = a,
v(0) = v(1) = ab .
This problem exhibits many interesting bifurcations and has been used in
the literature as a standard model for bifurcation analysis (see e.g. [16]). We
discretize the problem with a standard second-order ﬁnite diﬀerence approximation for the second derivatives at N mesh points. We write the resulting system,
which has dimension n = 2N , in the form (2). This discretization of the Brusselator is used in a cl matcont example [9]. In Figure 1 a bifurcation diagram
in two parameters (l, b) is shown in the case n = 2560. We ﬁrst continue an
equilibrium branch with a continuation parameter l (15 steps, 13.5 secs) and
locate LP at l = 0.060640. We next continue the LP branch in two parameters
l, b (200 steps, 400.8 secs) and locate ZH at (l, b) = (0.213055, 4.114737).
Example 2. Deformation of a 2D arch. We consider the snap-through of an elastic arch, shown in Figure 2. The arch is pinned at both ends, and the y displacement of the center of the arch is controlled as a continuation parameter.
Let Ω0 ⊂ R2 be the interior of the undeformed arch (Figure 2, top left),
and let the boundary Γ = ΓD ∪ ΓN , where ΓD consists of the two points where
the arch is pinned, and ΓN is the remainder of the boundary, which is free. At
equilibrium, material points X ∈ Ω0 in the deformed arch move to positions
x = X + u. Except at the control point Xcenter in the center of the arch, this
deformation satisﬁes the equilibrium force-balance equation [18]
2

J=1

∂SIJ
= 0,
∂XJ

X ∈ Ω0 ,

I = 1, 2.

(26)

4.8

LP
4.6

4.4

4.2

b

ZH

4

3.8

3.6

3.4
0.06

0.08

0.1

0.12

0.16

0.14

0.18

0.2

l

Fig. 1. Bifurcation diagram for a 1D Brusselator

0.22

0.24

56

D.S. Bindel et al.
1: 00

2: BP

0.8

0.8

0.7

0.7

0.6

0.6

0.5

0.5

0.4

0.4

0.3

0.3

0.2

0.2

0.1

0.1

0

0

0.2

0.4

0.6

0.8

0

1

0

0.2

0.4

0.6

0.8

1

3: 99
0.8

0.1

0.7

0.05

0.6

0

0.5
−0.05
0.4
−0.1

BP

0.3
−0.15

0.2

−0.2

0.1
0

0

0.2

0.4

0.6

0.8

1

−0.25
−0.012

−0.01

−0.008

−0.006

−0.004

−0.002

0

Fig. 2. Top left: the undeformed arch, top right: the arch at the bifurcation point,
bottom left: the arch at the end of continuation, bottom right: the bifurcation diagram

where the second Piola-Kirchhoﬀ stress tensor S is a nonlinear function of the
∂u
. Equation (26) is thus
Green strain tensor E, where E := 12 (F T F − I), F := ∂X
a fully nonlinear second order elliptic system. The boundary and the control
point Xcenter are subject to the boundary conditions
u = 0 on ΓD ,

SN = 0 on ΓN , where N is an outward unit normal, (27)
e2 · u = α,

e1 · (F SN ) = 0.

(28)

The ﬁrst condition at Xcenter says that the vertical displacement is determined;
the second condition says that there is zero force in the horizontal direction.
We discretize (26) with biquadratic isoparametric Lagrangian ﬁnite elements.
Let m be the number of elements through the arch thickness, and n be the
number of elements along the length of the arch; then there are (2m + 1)(2n + 1)
nodes, each with two associated degrees of freedom. The Dirichlet boundary
conditions are used to eliminate four unknowns, and one of the unknowns is used
as a control parameter, so that the total number of unknowns is N = 2(2m +
1)(2n + 1) − 5. Figure 2 displays the results in the case when the continuation
parameter is y displacement of node in middle of arch; m = 4, n = 60, N = 2173
unknowns; 80 steps took 258.4 secs, one BP was found.

Bifurcation Analysis of Large Equilibrium Systems in Matlab

57

Acknowledgment
Mark Friedman was supported in part under under NSF DMS-0209536.

References
1. E. Allgower and K. Georg, Numerical path following, in Handbook of Numerical Analysis, volume 5, P. G. Ciarlet and J. L. Lions, eds., North-Holland, 1997,
pp. 3–207.
2. E. Allgower and H. Schwetlick, A general view of minimally extended systems
for simple bifurcation points, Z. angew. Math. Mech., 77 (1997), pp. 83–98.
3. D. Bindel, J. Demmel, and M. Friedman, Continuation of invariant subspaces
for large bifurcation problems, in Proceedings of the SIAM Conference on Linear
Algebra, Williamsburg, VA, 2003.
4. E. A. Burroughs, R. B. Lehoucq, L. A. Romero, and A. J. Salinger, Linear
stability of ﬂow in a diﬀerentially heated cavity via large-scale eigenvalue calculations, Tech. Report SAND2002-3036J, Sandia National Laboratories, 2002.
5. C. S. Chien and M. H. Chen, Multiple bifurcations in a reaction-diﬀusion problem, Computers Math. Applic., 35 (1998), pp. 15–39.
6. K. A. Cliﬀe, A. Spence, and S. J. Tavener, The numerical analysis of bifurcations
problems vith application to ﬂuid mechanics, Acta Numerica, (2000), pp. 1–93.
7. J. W. Demmel, L. Dieci, and M. J. Friedman, Computing connecting orbits via
an improved algorithm for continuing invariant subspaces, SIAM J. Sci. Comput.,
22 (2001), pp. 81–94.
8. A. Dhooge, W. Govaerts, and Yu.A. Kuznetsov, matcont: A matlab package for
numerical bifurcation analysis of odes., ACM TOMS., 29 (2003), pp. 141–164.
9. A. Dhooge, W. Govaerts, Yu.A. Kuznetsov, W. Mestrom, and A. M.
Riet, MATLAB continuation software package CL MATCONT, Jan. 2003.
http://www.math.uu.nl/people/kuznet/cm/.
10. L. Dieci and M. J. Friedman, Continuation of invariant subspaces, Numerical
Linear Algebra and Appl., 8 (2001), pp. 317–327.
11. E. J. Doedel and H. Sharifi, Collocation methods for continuation problems in
nonlinear elliptic PDEs, issue on continuation, Methods in Fluid Mechanics, Notes
on Numer. Fluid. Mech, 74 (2000), pp. 105–118.
¨mmler”, Ergodic Theory, Analysis, and
12. W-J. Beyn and W. Kleßand V. Thu
Eﬃcient Simulation of Dynamical Systems” Continuation of low-dimensional Invariant Subspaces in dynamical systems of large dimension, Springer, 2001, pp.
47– 72.
13. W. Govaerts, Numerical methods for bifurcations of dynamical equilibria, SIAM,
Philadelphia, 2000.
14. A. Griewank and G. Reddien, Characterization and computation of generalized
turning points, SIAM J. Numer. Anal., 21 (1984), pp. 176–185.
15. Yu. A. Kuznetsov, Elements of Applied Bifurcation Theory, Third edition,
Springer-Verlag, New York, 2004.
16. D. Schaeffer and M. Golubitsky, Bifurcation analysis near a double eigenvalue
of a model chemical reaction, Arch. Rational Mech. Anal., 75 (1981), pp. 315–347.
17. G. M. Shroff and H. B. Keller, Stabilization of unstable procedures: The recursive projection method, SIAM J. Numer. Anal, 30 (1993), pp. 1099–1120.
18. O. Zienkiewicz and R.T.Taylor, The Finite Element Method: Volume 2, Solid
Mechanics, 5th edition, Butterworth Heinemann, Oxford, 2000.

