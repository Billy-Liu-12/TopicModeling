Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 928–937

International Conference on Computational Science, ICCS 2011
Application of high-resolution methods in compositional simulation
Jiˇr´ı Mikyˇskaa , Abbas Firoozabadib
a Czech

Technical University in Prague, Faculty of Nuclear Sciences and Physical Engineering, Department of Mathematics, Trojanova 13, 120 00
Prague, Czech Republic
b Reservoir Engineering Research Institute, 595 Lytton Ave, Palo Alto CA-94301, United States of America

Abstract
Compositional simulation is an important tool in for evaluation of oil recovery and carbon sequestration. Several compositional models have been proposed in the past that are based on ﬁnite-diﬀerence, ﬁnite-volume or ﬁniteelement methods. These methods are typically of low order of approximation and suﬀer excessive numerical diﬀusion.
These deﬁciencies can be signiﬁcantly suppressed using the high resolution methods like mixed-hybrid and discontinuous Galerkin ﬁnite element methods. We have shown recently that these methods are much more sensitive to
problem formulation than the conventional ﬁrst-order methods. In this work we discuss several problems connected
with application of high resolution schemes. These problems include formulation of boundary conditions, proper
evaluation of phase ﬂuxes, and formulation of the slope limiter in the discontinuous Galerkin method. The latter problem is common to all high resolution methods. We will present new examples of compositional simulations showing
the advantages of our approach over the traditional ﬁrst-order ﬁnite-volume schemes in single-phase and two-phase.
Keywords: two-phase ﬂow, compositional simulation, high resolution methods, mixed-hybrid ﬁnite element method,
discontinuous Galerkin method, slope limiter

1. Introduction
Mathematical models of gas injection into a porous medium with species transfer between the phases are essential
for solving problems of enhanced oil recovery and CO2 sequestration. Injection of CO2 into an oil reservoir may
lead to complex behavior - e.g. the supercritical CO2 can cause an originally single-phase hydrocarbon mixture to
split into phases. The phase properties like density or viscosity depend signiﬁcantly on pressure, temperature, and
chemical composition of each phase. Because of these complexities, eﬃcient and robust compositional simulation of
two-phase ﬂow in porous media remains a challenging problem.
The traditional approaches are based on the ﬁrst-order ﬁnite diﬀerence or ﬁrst-order ﬁnite volume schemes. To
obtain a solution without spurious oscillations, upwinding techniques are used which lead to non-oscillating solutions
suﬀering from enormous amount of artiﬁcial diﬀusion. Although the excessive numerical diﬀusion can be suppressed
by suﬃciently reﬁning the mesh, this approach is not practical because the mesh reﬁnement leads to computation
of extremely large systems for many cells. With large number of smaller cells, the time steps are chosen to be very
small to satisfy the time stability constraints. Consequently, mesh reﬁnement is not eﬀective in terms of the CPU time

Email addresses: jiri.mikyska@fjfi.cvut.cz (Jiˇr´ı Mikyˇska), abbas.firoozabadi@yale.edu (Abbas Firoozabadi)

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.098

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

929

required to obtain suﬃciently accurate results. Accuracy can be improved without excessive mesh reﬁnement using
the high resolution methods like the ﬁnite-element method, where one can increase accuracy of the solution by using
higher-order polynomial approximation of the exact solution. In this paper we use a combined approach based on the
mixed-hybrid ﬁnite element (MHFE) and discontinuous Galerkin (DG) ﬁnite element methods which are stabilized
using a slope limiter. The MHFE yields high accuracy in ﬂux evaluation while the DG provides a non-oscillating
solution with substantially lower numerical diﬀusion in comparison with the ﬁrst-order schemes. Moreover, the
values of pressure at element centers provided by the MHFE can be used directly values for performing the ﬂash
calculations on element edges. The combined method was ﬁrst proposed in [1] for single phase multicomponent ﬂow
and further extended to two-phase compositional ﬂow in [2] and [3]. Later we have discovered several issues with
problem formulation that were critical for the application of high resolution methods. Some of these issues have been
discussed in [4]. In this paper, we oﬀer some additional explanations and new examples demonstrating important
features of the method.
The paper is structured as follows. In the ﬁrst section, we review the problem formulation. Then, we describe the
discretization of the system of equations. This involves discretization of the total ﬂux using the MHFE, evaluation of
the phase ﬂuxes, discretization of the transport equations using the DG, and description of the slope limiting procedure.
Finally, we present results of example computations showing eﬃciency and robustness of our method.
2. Model formulation
The two-phase transport of nc components in porous media is described by the following set of balance equations
∂czi
i = 1, . . . , nc ,
(1)
+ ∇ · co xoi vo + cg xgi vg = Fi ,
∂t
where φ is the porosity, c is the overall molar density, zi is the overall mole fraction of i-th component, co , cg , xoi and
xgi are the oil and gas molar densities and oil and gas molar fractions, respectively, Fi describes distribution of the
sources/sinks of the i-th component, and t denotes the time. In this work capillarity and diﬀusion are neglected. The
formulation of the two-phase compositional problem including diﬀusion can be found in [5]. The temperature T is
assumed to be constant. The phase velocities vo and vg are given by Darcy’s laws,
φ

vα = −λα (S α )K(∇p − ρα g),

α ∈ {o, g},

(2)

where λα is the α-phase mobility, K is the permeable medium intrinsic permeability, p is the pressure, ρα is the αphase density, and g is the gravity acceleration vector. As capillarity is neglected, the pressures in both phases are the
same. The viscosities in the mobility terms are estimated using the correlation of Lohrenz et al. [6]. Based on the
concept of volume-balance (see [7]), the following pressure equation can be derived
φc f

∂p
+
∂t

nc

nc

vi ∇ · co xoi vo + cg xgi vg =
i=1

vi Fi ,

(3)

i=1

where c f and vi denote the total ﬂuid compressibility and the total partial molar volume of the i-th component, respectively. These coeﬃcients can be evaluated using the pressure, temperature, and chemical composition (see [8]
for details). The splitting of components between the phases is described by the following equations expressing local
thermodynamic equilibrium
foi (xo1 , . . . , xonc −1 , p; T ) = fgi (xg1 , . . . , xgnc −1 , p; T ), i = 1, . . . nc ,
zi = (1 − v)xoi + vxgi ,
i = 1, . . . nc ,
nc

nc

xoi =
i=1

nc

xgi =
i=1

(4a)
(4b)

zi = 1,

(4c)

i=1

where foi and fgi represent fugacities of the i-th component in the respective phase, and v is the gas mole fraction.
The phase molar densities cα are evaluated using the Peng-Robinson equation of state (PR-EOS) [9], [8]. The phase
saturations (needed in (2)) are calculated from
c
c
S g = v.
(5)
S o = (1 − v),
co
cg

930

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

The saturation constraint S o + S g = 1 provides an additional expression
1−c

1−v
v
= 0,
+
co
cg

(6)

from which c can be evaluated independently of the transport equations (1). In the computations, the value of c is
determined from equations (1) and the constraint equation (6) is used as a criterion for the selection of a time step.
3. Treatment of impermeable boundaries
We simulate two-phase compositional transport in a rectangular domain in which the gas or the supercritical ﬂuid
is injected in one corner and the mixture of oil and gas is produced in the opposite corner. The boundaries of the
domain are impermeable. Although this is a standard setup of many simulations reported in the literature, it may
be surprising that the formulation described above does not allow to enforce impermeability for both phases if the
mixture is in two-phase. The condition for impermeable walls reads as
vα · n = −λα (S α )K(∇p − ρα g) · n = 0,

α ∈ {o, g},

where n is the outer normal vector. Consequently, in two-phase region (where λα
∇p · n = ρo g · n

and

∇p · n = ρg g · n,

(7)

0 for both α ∈ {o, g})
(8)

which means that one pressure gradient should equilibrate two diﬀerent density proﬁles. This can not be achieved
in two-phase problems with gravity and no capillarity unless the two densities are the same. While there is no issue
for vertical impermeable walls due to absence of gravity term, the problem appears in the horizontal boundaries. We
observe that on the horizontal boundaries we cannot enforce impermeable boundary for both phases. We will see later
that it is possible to enforce the normal component of the total molar ﬂux to be zero which is necessary for total mole
conservation in the domain, i.e.
(9)
(co vo + cg vg ) · n = 0.
Equation (9) implies that if one phase is ﬂowing out of the domain, the other phase is ﬂowing in at the same point. The
composition and molar density of the inﬂow phase can be prescribed, while the composition and molar density of the
outﬂow phase is the result of the computation. Therefore, when treating boundary conditions in the transport equations
(1), the mole fraction of each component and molar density of the inﬂow phase are set to the corresponding mole fraction and molar density of the outﬂow phase, respectively. Note that this problem arises in any discretization scheme
for two-phase compositional equations without capillarity and is not connected with the MHFE/DG approach [4].
4. Discretization
The system of equations is discretized using the implicit pressure - explicit concentration technique. The pressure
equation is discretized by mixed-hybrid ﬁnite element method, while the transport equations are discretized using
the discontinuous Galerkin ﬁnite element method with piecewise linear shape functions on a rectangular grid. The
spurious oscilations in the numerical solution are suppressed using the slope limiter.
4.1. Discretization of the total molar ﬂux
The total molar ﬂux is introduced as
q = co vo + cg vg = −

cα λα K(∇p − ρg),

(10)

α

where ρ = fo ρo + fg ρg , and fα = cα λα / α ∈{o,g} cα λα . Unlike coeﬃcients cα λα in the phase ﬂuxes, the coeﬃcient
α cα λα in (10) is always positive as at least one of the phases is always mobile. The pressure gradient can then be
expressed as
1
∇p = −
K−1 q + ρg.
(11)
α cα λα

931

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

Equation (11) can be combined with Darcy’s law given by (2) to obtain the phase molar ﬂuxes
qα ≡ cα vα = fα (q − Gα ),
where
Gα =

co λo (ρo − ρg )Kg
cg λg (ρg − ρo )Kg

(12)

α = g,
α = o.

(13)

The total molar ﬂux is approximated using the lowest order Raviart-Thomas elements as
qK =

qK,E wK,E ,

(14)

E∈∂K

where qK,E is the normal component of the total molar ﬂux over the edge E of element K with respect to outer normal,
and wK,E are the RT 0 basis functions. These functions deﬁned on a reference element K = (0, l x ) × (0, ly ) are given by
wK,B (x, y) = 0,

y − ly
,
|K|

wK,T (x, y) = 0,

y
,
|K|

x − lx
,0 ,
|K|

wK,L (x, y) =

wK,R (x, y) =

x
,0 ,
|K|

where the B, T , L, and R denote the bottom, top, left, and right edge in the element K, respectively. Multiplying (11)
by wK,E , integrating the result over the element K, and using the Gauss theorem, one obtains

K

wK,E · K−1 q
=−
α cα λα

wK,E · ∇p +
K

ρwK,E · g =
K

p∇ · wK,E −

∂K

K

ρwK,E · K−1 Kg.

pwK,E · nK,E +

(15)

K

The right side can be rewritten as
wK,E · K−1 q
1
=
c
λ
|K|
α α α

K

p−
K

1
|E|

ρwK,E · K−1 Kg,

p+
E

(16)

K

where |K| is the area of the element K and |E| is the length of the edge E. Let pK and tpK,E denote the cell and edge
average pressure, respectively. Assuming that the mobilities and densities are constant over the element K, equation
(16) is approximated by

E ∈∂K

α

qK,E
ρK qKg
AK,E,E = pK − tpK,E +
K,E AK,E,E ,
cα ,K λα ,K
E ∈∂K

(17)

where
AK,E,E =
K

wK,E · K−1
K wK,E ,

and

qKg
K,E =

Kg · nK,E = Kg · nK,E |E|.

(18)

E

After inverting the matrix AK = [AK,E,E ]E,E ∈∂K , the ﬂux qK,E can be expressed as
qK,E = aK,E pK −

bK,E,E tpK,E + dK,E ,

(19)

E ∈∂K

where
aK,E =

A−1
K,E,E ,

cα ,K λα ,K
α

cα ,K λα ,K A−1
K,E,E ,

bK,E,E =
α

E ∈∂K

dK,E = Kg · nK,E |E|

cα ,K λα ,K ρα,K .
α

(20)
The mole balance at an edge E = K ∩ K between neighboring elements K and K implies that qK,E + qK ,E = 0.
Combining this equation with (19), we derive
aK,E pK −

bK,E,E tpK,E + dK,E + aK ,E pK −
E ∈∂K

bK ,E,E tpK ,E + dK ,E = 0,
E ∈∂K

(21)

932

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

for each interior face. For boundary faces E ⊂ ∂Ω adjacent to an element K, we use (9) to obtain qK,E = 0, whence
aK,E pK −

bK,E,E tpK,E + dK,E = 0.

(22)

E ∈∂K

The system of equations (21) and (22) can be rewritten in the matrix form as
RT P − MT P = V,

(23)

where
R ∈ RNK ,NE , RK,E = aK,E ,

M ∈ RNE ,NE , ME,E =

bK,E,E ,

V ∈ R NE , V E =

K:E,E ∈∂K

dK,E ,

(24)

K:E∈∂K

and NK is the number of element cells, NE is the number of mesh edges, P ∈ RNK is the vector of cell-average
pressures, and T P ∈ RNE is the vector of pressure traces.
4.2. Approximation of the pressure equation
The pressure equation given by (3) expressed in terms of the total molar ﬂux reads as
φc f

∂p
+
∂t

nc

nc

vi ∇ · (mi q − si ) =
i=1

vi F i ,

(25)

i=1

where mi = xoi fo + xgi fg , and si = xoi fo Go + xgi fg Gg . Integrating this equation over an element K and assuming that
the total compressibility and the total partial molar volumes are element-wise constant, we use the divergence theorem
to transform the last equation into
φK c f,K |K|

∂pK
+
∂t

nc

nc

mi,K qK,E − si,K · nK,E =

vi,K
i=1

E∈∂K

E

vi,K Fi,K |K|.

(26)

i=1

The coeﬃcients mi,K and si,K are evaluated using the local average values inside element K. The ﬂux in this equation can be eliminated using (19). Using the Euler scheme for discretization of the time derivative, in which all
composition-dependent coeﬃcients are evaluated explicitly using the values from previous time level while pressure
is treated implicitly, we develop the following system
˜ Pn+1 = G,
DPn+1 − RT

(27)

where n + 1 denotes the new time level, D ∈ RNK ,NK is a diagonal matrix with diagonal components
DK =

nc

φK c f,K |K|
+
Δt

mi,K aK,E ,

vi,K
i=1

E∈∂K

E

R˜ ∈ RNK ,NE is a rectangular matrix with components
nc

R˜ K,E =

mi,K bK,E,E ,

vi,K
i=1

E∈∂K

E

and G ∈ RNK is a right side vector with components
GK =

φK c f,K |K| n
pK −
Δt

nc

nc

(mi,K dK,E − si,K · nK,E ) + |K|

vi,K
i=1

E∈∂K

E

vi,K Fi,K .
i=1

933

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

4.3. Evaluation of the Phase Fluxes
As a result of previous development, we derived a system of linear algebraic equations (23) and (27) for unknown
cell pressure averages P and traces of pressure at the element edges T P at a new time level. This system can be solved
eﬃciently by taking advantage of the fact that the matrix D is diagonal and invertible. Therefore, the system can be
reduced to a smaller system
˜ Pn+1 = RT D−1G − V.
(M − RT D−1 R)T
(28)
for unknown traces of pressure. Once this system is solved, the cell average pressures P can be updated using (27)
and the total molar ﬂux can be evaluated from (19). All these computations can be done locally on each element.
The next step is the evaluation of the phase ﬂuxes using (12). For this purpose, using local values of fα and Gα
would lead to non-matching phase ﬂuxes at element edges. It has been observed that arithmetic averaging of the
coeﬃcients leads to unstable oscillatory results. To obtain stable phase ﬂuxes that are balanced at mesh edges, the
values of ρα used in Gα in (12) are weighted aritmetically from the neighboring cells, while cα λα , and cα λα in fα
should be taken from the upwind side with respect to vα , cf. [10]. To determine the upwind directions (qα is not
available yet), let us denote by α the phase for which
sgn qK,E · nK,E = − sgn Gα · nK,E ,
and let α denote the other phase. The choice is always possible because the total ﬂux is already known and vectors
Gα and Gα are pointing in the opposite directions. The sign of qα,K,E is thus the same as the sign as of qK,E . This
sign does not depend on the value of cα λα in (12), which is unknown but non-negative. Using the known sign of
qα,K,E , we can choose the upwind value of cα λα in the computation of Gα . We can thus determine qα ,K,E and ﬁnally
the value of λα is determined and used for evaluation of the ﬁnal value of qα,K,E .
4.4. Discretization of transport equations
The transport equations (1) are discretized using the discontinuous Galerkin ﬁnite element method with elementwise linear approximation of the molar concentration czi . Assuming the approximation in the form
3

czi,K =

3

czli,K ϕK,l ,

xαi,K =

l=1

l
xαi,K
ϕK,l ,

qα,K =

l=1

qα,K,E wK,E ,

(29)

E∈∂K

where functions ϕK,l form a basis of a local approximation space, we multiply (1) by a test function, integrate over the
element K and integrate by parts to obtain
φ
K

∂czi,K
ϕK, j −
∂t

xoi,K qo + xgi,K qg · ∇ϕK, j +
K

xoi,K,E qo + xgi,K,E qg · nK,E ϕK, j =
E∈∂K

E

Fi ϕK, j ,

(30)

K

for each j ∈ {1, 2, 3}. The xαi,K,E (α ∈ {o, g}) denotes the upwind value of concentration deﬁned as
xαi,K,E =

xαi,K,E
xαi,K ,E

if qα,K,E ≡ qα · nK,E |E| ≥ 0,
if qα,K,E ≡ qα · nK,E |E| < 0,

(31)

where E = K ∩ K is a common edge between the neighboring elements K and K . For boundary edges, the Dirichlet
boundary conditions on the inﬂux part of the boundary are applied. The values xαi,K,E and xαi,K ,E in (31) are computed
by two-phase ﬂash at element edges using the values of T , T P and zi at that edge. The values xαi,K in the second
integral on the left hand side of (29) are evaluated by the two-phase ﬂash using the values of T , P and zi at the element
center. Altogether 5 ﬂashes are performed on each element. Substitution of (29) into (30) results in the following
semi-discrete scheme
3

φK
l=1

dczli,K
dt

3

M Kj,l −

qα,K,E M K,E
j,l +

xαi,K
α∈{o,g} l=1

E∈∂K

xαi,K,E qα,K,E M Ej =
E∈∂K α∈{o,g}

Fi ϕK, j .
K

(32)

934

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

The matrices M K , M E , and M K,E , deﬁned by
M Kj,l =

ϕK, j ϕK,l ,
K

M Ej =

1
|E|

ϕK, j ,
E

M K,E
j,l =

ϕK,l wK,E · ∇ϕK, j ,
K

can be evaluated analytically. For linear test functions ϕK,l deﬁned on a reference element K = (0, l x ) × (0, ly ) by
ϕK,1 (x, y) = 1,

ϕK,2 (x, y) =

2
lx
x−
,
lx
2

ϕK,3 (x, y) =

ly
2
y−
,
ly
2

(33)

the weighting factors czli,K (l = 1, 2, 3) are the average value of molar concentration over the element K, and diﬀerences
between the central value and the values at the right and top edges, respectively. For these test functions the matrix
M K is diagonal, and the forward Euler scheme leads to an explicit scheme in terms of czli,K with 3 degrees of freedom
on each element.
The discontinuous Galerkin method, similarly as any other high resolution method, has to be stabilized to avoid
spurious oscillations of the numerical solution using a slope limiter. On rectangular grids the slopes in the horizontal
and vertical directions can be limited independently of each other. After each step of DG method the limiter provides
bounds czi,min and czi,max at each edge E by taking minimum and maximum of czi,K over elements K sharing the edge
E. If needed, the slopes may be decreased in the absolute value so that the inequalities
czi,min ≤ czi ≤ czi,max

(34)

hold at every edge E for each i = 1, . . . , nc . It is important to note that this limiting procedure works well only
if used for the original system of equations (1) for each i = 1, . . . , nc . If a commonly used formulation using (1)
for i = 1, . . . , nc − 1 and the sum of all equations (1) is used, the limiter provides bounds czi,min and czi,max for
i = 1, . . . , nc − 1 and bounds for total concentration cmin and cmax . The implied bounds on the concentration of the last
nc −1
nc −1
c −1
component cznc are then cmax − i=1
czi,min ≤ cznc = c − ni=1
czi ≤ cmax − i=1
czi,min . These bounds are inconsistent
with the bounds given by equation (34) for i = nc and lead to spurious oscillations in the concentration proﬁles which
eventually cause the code to crash when an unphysical value of concentration appears [4].
5. Computational Algorithm
Here we summarize the basic steps of the computational algorithm:
1. Initialize temperature and distribution of pressure and overall molar concentrations of all components.
2. Perform the phase stability and ﬂash calculations to obtain number of phases and phase compositions at the
initial pressure, temperature, and overall composition at element centers and at element faces and evaluate the
phase viscosities using the Lohrenz et al. method.
3. Repeat the following steps until a predetermined simulation time is reached.
(a) Assemble and solve the system (28) for traces of pressure T P.
(b) Evaluate cell average pressures P locally on each element using (27).
(c) Calculate ﬂuxes using the procedure described in section 4.3.
(d) Compute new overall composition using one explicit Euler time step of the DG scheme (32).
(e) Apply the slope limiter.
(f) Perform the phase stability analysis and ﬂash calculation to obtain number of phases and phase composition at the new pressure, overall composition and temperature T at element centers and at element faces,
and update phase viscosities.
6. Numerical Simulations of CO2 Injections in Oil Reservoirs
In this section, we present results of several simulations computed using the combined MHFE/DG method described above. The results will be compared to those obtained by the same procedure in which the traditonal ﬁrst-order
ﬁnite volume scheme is used rather than the discontinuous Galerkin (denoted as MHFE/FV). In this case there is no
need to assemble equations for the concentration gradients, which are zero, and only 1 ﬂash per element is performed.
All the problems were solved on a 2-D square domain 50 × 50 m with a rectangular grid on a HP xw9400 RedHat WS
4 workstation with the Dual-Core AMD Opteron 2216 CPU at 2.4GHz and 4GB memory. The relevant parameters
for all examples are summarized in Table 1.

935

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

Soil and mixture parameters
Porosity φ
Permeability K [md]
Relative permeability model type
Residual gas saturation S rg
Residual oil saturation S ro
Binary interaction parameter δCO2 −C3

0.2
10
linear
0
0
0.15

Component parameters
accentric factor ω
critical temperature T c [K]
critical pressure Pc [bar]
critical volume vc [m3 /kg]
molar weight M [g/mol]
volume shift parameter c

CO2
0.239
304.14
73.75
0.00214
44
-0.18

propane (C3 )
0.153
396.83
42.48
0.00454
44.1
-0.09

Table 1: Relevant parameters for all simulations. The notation of parameters of the Peng-Robinson equation of state follows the exposition in [8].

Figure 1: CO2 mole fraction at 0.56 years computed on a 40 × 40 mesh by the MHFE/FV (left) and the MHFE/DG methods (right): Example 1

6.1. Example 1
In this example we simulate injection of CO2 into a propane-saturated reservoir in a vertical 2D domain. CO2 is
injected in the upper left corner at a constant rate (corresponding to 42.5 m2 /day at standart conditions p = 1 atm and
T = 293 K), displacing propane that is produced in the lower right corner. Pressure at the production well is kept constant at p = 69 bar, temperature in the whole domain is T = 311 K. Under these conditions the mixture stays in singlephase during whole simulation. Figure 1 shows CO2 mole fraction at 66% of PVI computed using the MHFE/DG
and MHFE/FV methods on a 40 × 40 mesh. The computation time (to 100% PVI) is 2 minutes for both methods. We
observe the excessive numerical dispersion in the ﬁnite-volume method compared to the DG. To see better the eﬀect
of numerical diﬀusion, the black lines in all ﬁgures show the isolines with values 0.05, 0.15, 0.25, . . . , 0.95.
6.2. Example 2
In the second example we change the pressure in Example 1 to allow for two-phase ﬂow. CO2 is injected in the
upper left corner at the same rate as in Example 1, but the mixture is produced in the lower right corner at lower
pressure p = 25 bar. Temperature and other parameters are the same as in Example 1. Under lower pressure the
mixture splits into two phases. Figures 2 and 3 show CO2 mole fraction and gas phase saturation proﬁles at 66% of
PVI computed using the MHFE/DG and MHFE/FV methods on a 40 × 40 mesh. The computation time (to 100%
PVI) is 2 minutes for both methods. The reduction of the excessive numerical diﬀusion in the MHFE/DG method is
signiﬁcant even in the two-phase case. Less numerical diﬀusion in MHFE/DG method also inﬂuences the position of
the saturation front, see Figure 3.
6.3. Example 3
In the last example we simulate the injection of CO2 in the vertical 2D domain in which CO2 is injected at the
bottom left corner at the same rate as before and the mixture is produced in the upper right corner. The pressure in
the production well is p = 69 bar and the temperature in the whole domain is T = 311 K. Under these conditions the
mixture stays in single-phase. Figure 4 shows the mole fraction of CO2 at PVI=50% computed by both methods on a

936

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

Figure 2: CO2 mole fraction at 0.56 years computed on a 40 × 40 mesh by the MHFE/FV (left) and the MHFE/DG methods (right): Example 2

Figure 3: Gas saturation at 0.56 years computed on a 40 × 40 mesh by the MHFE/FV (left) and the MHFE/DG methods (right): Example 2

40 × 40 mesh. As the mixture of CO2 with propane has lower density than propane, we can observe unstable ﬁngering
of CO2 towards the production well in the MHFE/DG method. This eﬀect is not captured by the MHFE/FV method
in which the ﬁngers are suppressed by the strong numerical diﬀusion. The CPU time to reach PVI=50% is 18 min
for the MHFE/FV and 20 min for the MHFE/DG method. The results of the same computation using the MHFE/DG
method on ﬁner meshes are shown in Figure 5. The computational time of the MHFE/DG method on the 60 × 60
mesh is 2h 9 min and 8h 2 min on the 80 × 80 mesh. The CPU time for the MHFE/FV method is 1h 51 min on the
60 × 60 mesh and 7h 50 min on the 80 × 80 mesh. The results of the MHFE/FV on 60 × 60 and 80 × 80 meshes are
very similar to the result in Figure 4 on the left and are not presented here for brevity.
7. Conclusions
In this paper we have discussed formulation of the compressible two-phase compositional ﬂow model. Using
high-resolution methods, we construct a numerical model that provides a non-oscillatory solution that contains much
less numerical diﬀusion compared to the traditional ﬁrst-order schemes. Consequently, the solution obtained using
the combined MHFE/DG method exhibits much sharper fronts even on coarse meshes and unlike the MHFE/FV, the
MHFE/DG method also captures ﬁngering phenomenon in the physically unstable conﬁguration. In all simulations
the CPU time of the MHFE/DG scheme is only slightly longer than of the MHFE/FV method. Although the CPU time
is dominated by the ﬂash calculation, the increased number of ﬂashes per element in the MHFE/DG scheme does not
increase the CPU time considerably. This can be explained by the fact that the result of the ﬂash on element center
provides an excellent initial estimate for the subsequent ﬂashes on element edges. Convergence of the edge ﬂashes is
thus much faster in comparison with the ﬂash computations in the element centers.

Jiˇr´ı Mikyˇska et al. / Procedia Computer Science 4 (2011) 928–937

937

Figure 4: CO2 mole fraction at 0.18 years computed on a 40 × 40 mesh by the MHFE/FV (left) and the MHFE/DG methods (right): Example 3

Figure 5: CO2 mole fraction at 0.18 years computed by the MHFE/DG method on a 60 × 60 (left) and a 80 × 80 mesh (right): Example 3

Acknowledgements
This work was supported by the member companies of the Reservoir Engineering Research Institute (RERI), and
by the project number P105/11/1507 of the Czech Science Foundation.
References
[1] H. Hoteit, A. Firoozabadi, Multicomponent ﬂuid ﬂow by discontinuous Galerkin and mixed methods in unfractured and fractured media,
Water Resources Research 41 (11) (2005) 1–15.
[2] H. Hoteit, A. Firoozabadi, Compositional modeling of discrete-fractured media without transfer functions by the discontinuous Galerkin and
mixed methods, SPE Journal 11 (3) (2006) 341–352.
[3] H. Hoteit, A. Firoozabadi, Compositional modeling by the combined discontinuous Galerkin and mixed methods, SPE Journal 11 (1) (2006)
19–34.
[4] J. Mikyˇska, A. Firoozabadi, Implementation of higher-order methods for robust and eﬃcient compositional simulation, Journal of Computational Physics 229 (8) (2010) 2898–2913. doi:10.1016/j.jcp.2009.12.022.
[5] J. Moortgat, A. Firoozabadi, Higher-order compositional modeling with Fickian diﬀusion in unstructured and anisotropic media, Advances
in Water Resources 33 (9) (2010) 951–968. doi:10.1016/j.advwatres.2010.04.012.
[6] J. Lohrenz, B. Bray, Clark, Calculating viscosities of reservoir ﬂuids from their compositions, Journal of Petroleum Technology 16 (10)
(1964) 1171–1176.
[7] G. Acs, S. Doleschall, E. Farkas, General-Purpose Compositional Model, SPE Journal 25 (4) (1985) 543–553.
[8] A. Firoozabadi, Thermodynamics of Hydrocarbon Reservoirs, McGraw-Hill, 1999.
[9] D. Peng, D. Robinson, New 2-Constant Equation of State, Industrial & Engineering Chemistry Fundamentals 15 (1) (1976) 59–64.
[10] P. Sammon, An analysis of upstream diﬀerencing, SPE Reservoir Engineering (August) (1988) 1053–1056.

