Preliminary Through-Out Research on Parallel-Based
Remote Sensing Image Processing*
Guoqing Li1, Yan Ma2, Jian Wang1, and Dingsheng Liu1
1

Key laboratory, Remote Sensing Satellite Ground Station, Chinese Academic of Sciences
No. 45 BeiSanHuanXi Road, P.O. Box 2434, Beijing, 100086, China
Graduate University, Chinese Academic of Sciences
No. 45 BeiSanHuanXi Road, P.O. Box 2434, Beijing, 100086, China
{gqli, yma, jwang, dsliu}@ne.rsgs.ac.cn

Abstract. As the most important and most complex Geo-Information, remote
sensing data can be fast processed with cluster-based parallel computation
technologies. The through-out ability of every step of such processing will
affect heavily the application of remote sensing image parallel processing
technologies. This paper shall discuss more detail how to set up the through-out
model of remote sensing image parallel processing and presents some deeply
research works on such through-out mechanism. A lot of experiments have
been given to support a quantitative analysis method to adjust the performance
of remote sensing parallel processing system.

1 High Through-Out Computation and Remote Sensing Image
Processing
There are many research works focusing on how to improve the spatial data
processing speed. HPC (high performance computation), especially based on cluster
can bring the outstanding speed-up [1] [2]. On the other hand, HTC (high throughout computation) should also be paid more attention to [3].
The aim to research HTC is to build an economical and high efficiency system.
High performance parallel computation can support the improvement on process
speed of independent processing steps. However, the isolated effort on special step
will not always cause the appearance of HTC. When we are building a HTC
system, what we have to pay more attention to is the discovery and solver of
bottlenecks.
Most important, remote sensing image processing has high data complexity. To
design a parallel model, the matching relationship of data transfer, catching and node
computing ability should be considered firstly. During certain time, HTC system can
deal with most data than other system, and data flux is thought as the most important
technical index for some applications.
*

The above research is supported by the National Key Research and Development Plan of
China.

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part I, LNCS 3991, pp. 880 ‚Äì 883, 2006.
¬© Springer-Verlag Berlin Heidelberg 2006

Preliminary Through-Out Research

881

2 The Through-Out Rate Model of Remote Sensing Image
Processing
2.1 Process Course Model
A remote sensing image parallel process course is organized with some important
steps, data loading, distribution, processing, collection and export, as shown in Fig. 1.
Because the step of data loading is similar with data export, the step of data
distribution is similar with data collection in the term of through-out character; such
steps can be described with the steps of data loading and data distribution.
Through-out rate model
The through-out rate R is the most important index of
HTC.
T = Tinput + Tdist ribute + T process
(1)

Data Load

Data
Distribution

T means the full process time, Tinput means the

Where

data loading time,
time and

Tdist ribute means the data distributing

Data Process

Tprocess means data processing time. If we define

M is the amount of processed data, then
T input

=

(2)

M
R input

‚éß
Mi
T dist ribute = MAX ‚é®
R
‚é© distributi
T process

‚éß‚é™ M i
= MAX ‚é®
‚é™‚é© R process

on

i = 1...n

‚é´
‚é¨
‚é≠

(3)

i = 1...n

‚é´‚é™
‚é¨
‚é™‚é≠

Data
Collection

Data Out

(4)

Fig. 1. process course
model

If we suppose data M is averagely distributed on n nodes,
then M = M . From formula (1) to (4),
i

n

T =

2M
2M
+
R input
nR distributi

+
on

M
nR

=

process

M
n

‚éõ 2n
2
‚éú
+
‚éú R input
R
distributi
‚éù

Where Rinput is the data loading through-out rate, and

+
on

1
R process

‚éû
‚éü
‚éü
‚é†

(5)

Rdistribution means the data

distribution through-out rate and R process is the rate of data processing.
R =

M
=
T

2n
R input

{

+

n
2
R distributi

+
on

=

1
R

process

}Ôºå

1
2
R input

+

(6)

2
nR

+

distributi

{

on

1
nR

process

}

Rmax = MAX Rinput , Rdistribution , R process ,
If Rmin = MIN Rinput , Rdistribution , R process
there are the following conclusions: (1)When Rmin ~ Rmax, the process course is in
the condition of ideal through-out. In this condition, the improvement of system

882

G. Li et al.

through-out is depended on the matching of these three through-out rates; however
the limit of such improvement is not above one order of magnitude. (2)When Rmin
<< Rmax, the process course is in the condition of abnormal through-out. In this
condition, the improvement of system through-out is depended on the tuning of the
lowest course of through-out. (3)With the increasing of node number n, the throughout rate R is increasing. When n is large enough, R is limited in Rinput It means that
the increasing of computing node will bring up the improvement of system throughout capability, while the limit of such increasing is Rinput .(4)The through-out rate R
is stable in some degree, which means R has low relativity with the scale of input
data.
5LQSXW0%V

1)6
60%

5LQSXW0%V















5LQRXW0%V

,'(
6&6,












0

0

0

0

Fig. 2. The

'9'
86%











0

Rinput

0

0

0

0

0

0

0

trend of three data loading methods

2.2 Experiments
Some experiments have been taken to research the performance and character of
different stage. Fig. 2 shows three methods of data loading and exporting, which are
local disk method (SCSI, SATA and IDE
etc.), local extend storage method (DLT,
DVD and USB etc.) and network method
(NFS, SMB and RCP etc.). In Fig. 3, the
different scale data in cache node is
distributed to the other 8 nodes in Giga LAN
with methods of MPI, NFS and PIPFS [4]
Fig. 4 gives the comparison of the throughFig. 3. the Rdistribution of three distriput between two typical remote sensing
bution mode
image algorithms FFT and Wavelet within
same parallel environment.
Rprocess
FFT Wavelet
PIPFS
MPI
NFS

Data distribution (MB/s)

70
60
50
40
30
20
10

0

10M

3 The Conclusion and Analyses of
Through-Out Rate Model

(MB/s)
9
8
7
6
5
4
3
2
2

100M

3

4

1000M

5

6

10000M

7

8

Node
9

(1) When nQ is least than the range of
40~70 MB/s, R is limited by the
Fig. 4. R process trend of two typical
throughput nQ and the capability of
processes
through-out can be simply accelerated
with adding computing nodes.
(2) When nQ is in the range of 40~70, R is near 40~70MB/s. The better through-out
performance can be implemented by adjusting the relationship of three courses.

Preliminary Through-Out Research

883

(3) When the nQ value is more than 70, adding computing node number will not
bring the increasing of R. In such system, it is no sense to extend the scale of
computer cluster.
(4) When Q is large enough, which means the process algorithm is too simple, the
most cost of the process courses is spend during data loading and distributing.
Only little time cost is used in the data processing. The method to improve the
through-out performance of such system is
depended on the accelerating of data loading
and distributing, which can be accessed with
advance storage technologies and combined
bandwidth technology.
(5) When Q is not very large, the process
algorithm is very complex and the process
course will spend relative long time. The
method to improve the through-out
Fig. 5. The relationship between
performance can be realized with the adding
through-out rate and node
of computing nodes. The devoting of the
number
improvement on storage technology will not
be outstanding in such condition.
In some degree, the above analyses are the predigesting of process courses. It will
be more complex in real, for example the imbalance of load and data distribution.
However, the methodology of through-out analyses is also useful for the research of
such condition.

References
[1] High Performance Computing Clusters, Constellations, MPPs, and Future Directions, Jack
Dongarra, Thomas Sterling, Computing in Science and Engineering, March/April 2005
(Vol. 7, No. 2) pp. 51-59
[2] Guoqing Li, Dingsheng Liu, Key Technologies Research on Building a Cluster-based
Parallel Computing System for Remote Sensing, LNCS 3516, pp. 484-490
[3] IBM website:http://www-128.ibm.com/developerworks/cn/linux/cluster/hpc/part1/
[4] Keying Huang, Guoqing Li, Dingsheng Liu A parallel file system based on spatial
information object, LNCS 3779, pp. 154-162

