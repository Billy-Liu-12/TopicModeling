Generating Sharp Features on Non-regular
Triangular Meshes
Tetsuo Oya1,2 , Shinji Seo1 , and Masatake Higashi1
1

2

Toyota Technological Institute, Nagoya, Japan
The University of Tokyo, Institute of Industrial Science, Tokyo, Japan
{oya, sd04045, higashi}@toyota-ti.ac.jp

Abstract. This paper presents a method to create sharp features such
as creases or corners on non-regular triangular meshes. To represent
sharp features on a triangular spline surface we have studied a method
that enables designers to control the sharpness of the feature parametrically. Extended meshes are placed to make parallelograms, and then
we have an extended vertex which is used to compute control points for
a triangular B´ezier patch. This extended vertex expressed with a parameter enables designers to change the shape of the sharp features. The
former method we presented deals with regular meshes, however, it can
be a strong restriction against the actual variety of meshes. Therefore,
we developed a method to express sharp features around an extraordinary vertex. In this paper, we present algorithms to express creases and
corners for a triangular mesh including extraordinary vertices.

1

Introduction

Computer-aided design tools have supported the designer’s work to create aesthetic and complex shapes. However, to represent a pleasing and high quality
surface is still a diﬃcult task. The reason of this diﬃculty is that both high
continuity of the surface and the ability to handle 2-manifold surfaces with arbitrary topology are required especially in the industrial design ﬁeld. In addition,
sharp features such as creases and corners which play a signiﬁcant role to express
product’s shape should be treated as they want. However, expressing sharp features at an arbitrary place is not easy. Therefore, a method to represent sharp
features and to control their shapes would be a great help to designers.
There are two major ways to represent surfaces in computer graphics. In
CAD/CAM software, tensor product surfaces such as B´ezier, B-spline and NURBS
are usually used to represent free-form surfaces. These are expressed in parametric
form and generally have high diﬀerentiability enough to represent class-A surfaces.
However, connecting multi patches with high continuity is rather diﬃcult. Also,
techniques like trim or blend are usually utilized to represent the required complexity, and it would be an exhausting job. Furthermore, it is diﬃcult to generate
sharp features on arbitrary edges.
The other important method, namely, subdivision surfaces have become a
popular method recent years especially in the entertainment industry. Inputting
M. Bubak et al. (Eds.): ICCS 2008, Part II, LNCS 5102, pp. 66–75, 2008.
c Springer-Verlag Berlin Heidelberg 2008

Generating Sharp Features on Non-regular Triangular Meshes

67

an original mesh, some subdivision scheme is repeatedly performed on the vertices and the faces of the mesh, then a reﬁned resultant is obtained. Although
its limit surface is theoretically continuous everywhere, the obtained surface is
a piecewise smooth surface. Thus it is not applicable to the surfaces used in
industrial design where high quality surfaces are always required. Moreover, the
parametric form of the surface is not available.
As for sharp features on a subdivision surface, there are many studies dealing
with creases and corners. Nasri [1] presented subdivision methods to represent
boundary curves, to interpolate data points, and to obtain intersection curves of
subdivision surfaces. Hoppe et al. [2] proposed a method to reconstruct piecewise
smooth surfaces from scattered points. They introduced a representation technique of sharp features based on the Loop’s subdivision scheme [3]. To model
features like creases, corners and darts, several new masks were deﬁned on regular
and non-regular meshes. DeRose et al. [4] described several eﬀective subdivision
techniques to be used in the character animation. They introduced a method to
generate semi-sharp creases whose sharpness can be controlled by a parameter.
Biermann et al. [5] improved subdivision rules so as to solve the problems of
extraordinary boundary vertices and concave corners. Based on this method,
then Ying and Zorin [6] presented a nonmanifold subdivision scheme to represent a surface where diﬀerent patches interpolates a common edge along with the
same tangent plane. Sederberg et al. [7] presented a new spline scheme, called
T-NURCCs, by generalizing B-spline surfaces and Catmull-Clark surfaces. In
this method, features are created by inserting local knots. To create and change
features, direct manipulation of knots and control points is required. These methods have succeeded to represent sharp features, however, the subdivision surface
technique is not a principal method in an industrial design ﬁeld where high
quality smooth surfaces are demanded.
An alternative method to create surfaces is generating a spline surface composed of B´ezier patches. Triangular B´ezier patching can be used to represent
complex models because each patches are easily computed from the original
mesh. The advantage of this method is that it is rather easier to keep continuity
across the patches than conventional tensor product patches. Hahmann [8] [9]
has shown the eﬀectiveness of spline surface technique. Yvart and Hahmann [10]
proposed a hierarchical spline method to represent smooth models on arbitrary
topology meshes. With their method, designers are able to create complex models
preserving tangent plane continuity when reﬁning a local patch to add details.
However, they have not mentioned how to represent sharp features. Thus, to
be a more practical method, representing sharp features on a triangular spline
surface should be studied. Loop [11] represented a sharp edge as a boundary
curve by connecting two patches, however, its shape is not controllable because
it is depend on each patches’ boundary curves. Higashi [12] presented a method
to express sharp features by using the concept of extended mesh. With that
method, the shape of the edge can be changed parametrically.
In spite of its high potential, the triangular spline technique is not frequently
used like other methods. One of the reasons is its diﬃculty of handling non-regular
meshes. Here, a non-regular mesh means a mesh containing an extraordinary

68

T. Oya, S. Seo, and M. Higashi

vertex whose valence is not six. In this paper, we developed a method to represent controllable sharp features on a non-regular triangular mesh.
This paper is organized as follows. Sec. 2 presents basics on B´ezier representation used in this paper. Sec. 3 describes the method of mesh extension to express
sharp features. In Sec. 4, we present main contributions of this paper, that is,
schemes to handle non-regular meshes. Then several examples are shown in Sec.
5, and Sec. 6 concludes this paper.

2

Triangular B´
ezier Patch

To construct a triangular spline surface, we utilize a triangular B´ezier patch. In
this section, we brieﬂy describe important backgrounds about B´ezier forms [13].
A B´ezier surface of degree m by n is deﬁned as a tensor product surface
m

n

bm,n (u, v) =

bi,j Bim (u)Bjn (v)

(1)

i=0 j=0

where bi,j is the control net of a B´ezier surface, and Bim (u) is the Bernstein
polynomials of degree m.
A triangular B´ezier patch is deﬁned in the barycentric coordinates that is
denoted u := (u, v, w) with u + v + w = 1. The expression is
bi Bin (u),

b(u) =

|i| = i + j + k

(2)

|i|=n

where bi is a triangular array of the control net and
Bin (u) =

n
i

ui v j w k ;

|i| = n,

n
i

=

n!
i!j!k!

(3)

are the bivariate Bernstein polynomials. In this paper we use quartic B´ezier
patches thus degree n is set to 4.
The triangular spline surface used in this paper is represented by B´ezier
patches. Computing the necessary control points bi from the original mesh,
we can obtain the corresponding B´ezier patches. Composing all of them, the
resulting surfaces is a C 2 surface if the original mesh is regular.
We utilize Sabin’s rules [14] [15] to compute B´ezier points. Let P0 be the
ordinary vertex and P1 (i); i = 1, · · · , 6 be the six neighboring vertices of P0 .
In the case of quartic triangular B´ezier patch there are ﬁfteen control points,
however, just four distinct rules exist due to symmetry. The following is the
rules to compute B´ezier control points Qijk as illustrated in Fig. 1 :
6

24Q400 = 12P0 + 2

P1 (i),

(4)

i=1

24Q310 = 12P0 + 3P1 (1) + 4P1 (2) + 3P1 (3) + P1 (4) + P1 (6),

(5)

24Q211 = 10P0 + 6P1 (1) + 6P1 (2) + P1 (6) + P1 (3),

(6)

24Q220 = 8P0 + 8P1 (2) + 4P1 (1) + 4P3 (3).

(7)

Generating Sharp Features on Non-regular Triangular Meshes
B

P1 (1)

Q004

P1 (6)

E

Q103 Q013
Q112

Q202
P1 (5)

69

P0

Q400

Q310

Q022

Q121

Q301 Q211
Q220

G
Q031

Q130

P1 (2)

C
A

H
1-s

s

F

Q040

D
P1 (4)

P1 (3)
Vertices of the original meshes
Ordinary vertex
1-ring vertices of the ordinary vertex
Control points computed by using
and
Other control points

Midpoints
Interpolated point on the line EF
Extended vertex

Fig. 1. Control points for triangular
B´ezier patch

Fig. 2. Mesh extension and deﬁnition of
parameter s

The remaining control points are obtained by applying the same rules to the
neighboring vertices of P1 (1) and P1 (2).

3

Mesh Extension

In this section we brieﬂy describe the method of mesh extension [12] to represent
sharp features on a regular mesh. First, a designer speciﬁes an edge to be a
crease, then the meshes sharing the speciﬁed edge are separated. Next, we make
extended vertices at the opposite side of the speciﬁed edge for both triangles.
As shown in Fig. 2, let the original triangles be ABC and BCD. The edge BC
is speciﬁed to create a crease. Point E is the midpoint of the edge BC and F is
the midpoint of AD. Then the position of G is parametrically deﬁned so as to
satisfy the relation
G = sE + (1 − s)F

(8)

where s denotes the parameter to control the sharpness of the crease. Finally the
extended vertex H is deﬁned as the position to satisfy H = 2 AG and the control
triangle BCH is produced. In the opposite side, similar procedure is conducted
with same parameter s.

(a) s = 0 (smooth surface)

(b) s = 0.5 (crease)

(c) s = 1.0 (crease)

Fig. 3. Examples of generating crease edges for regular mesh

70

T. Oya, S. Seo, and M. Higashi

Inputting s, all B´ezier control points are determined and we get a regenerated
surface where a sharp crease appears. By changing the value of s, the designer is
able to control the sharpness of the crease. Fig. 3 shows examples of the surfaces
created by this method. When s is equal to 0, the resulting surface is the original
C 2 surface itself(Fig. 3(a)). When s is equal to 1, the resulting surface(Fig. 3
(c)) is same as the shape of the subdivision crease. For the details of generating
a dart or a corner, see [12].

4

Sharp Features on Non-regular Meshes

This section introduces the rules to generate sharp features such as creases and
corners on non-regular meshes. Higashi et al. [12] presented the method of mesh
extension to create sharp features on regular meshes described in the previous
section, however, computing rules for generating them on non-regular meshes are
not shown. We have developed a method based on the mesh extension technique
and Peters’ algorithm [16] to generate a smooth surface with sharp features on
a mesh including an extraordinary vertex.
4.1

Creating a Crease

There are numerous types of non-regular meshes. Here, non-regular meshes mean
the set of meshes around an extraordinary vertex whose valance is not six. In
this paper, we deal with the case of n = 5 because the proposed method can be
applied to other cases such as n = 4 or 7.
In the case of n = 5, there are ﬁve meshes around an extraordinary vertex.
Crease edges are deﬁned on the two edges that divide these ﬁve meshes into two
and three. On the side of the three meshes, the same rule is applied to obtain the
control points as in the case of regular meshes. On the side of the two meshes,
there are three steps to compute the control points.
In Fig. 4 (a), the input meshes are shown. For the ﬁrst step of the process,
as depicted in Fig. 4 (b), one edge is changed to connect the vertex in orange
with the extraordinary vertex. Then, two meshes including crease edges are
extended to make parallelograms using two new vertices which are colored red.
By this treatment, the original non-regular meshes are now regular. Using ordinal
Sabin’s rules, control points represented by small red point are computed. Five
white points are computed by Sabin’s rules with one extended vertex and ﬁve
original vertices. And small black control points are obtained by using original
six vertices.
Second, the same process is conducted in the opposite side as shown in
Fig. 4 (c). In the third step, as illustrated in Fig. 4 (d), the positions of two
control points in yellow are modiﬁed to be middle between two adjacent control
points. This calculation is done to keep G1 continuity along the edge. Now, all
of the required control points are available and we have the resulting surface
by composing ﬁve B´ezier patches that is expressed with Eq. (2). Note that the
vertices of the extended meshes are only used to compute the necessary control

Generating Sharp Features on Non-regular Triangular Meshes
(a)

(b)

(c)

(d)

Extraordinary vertex
1-ring ordinary vertices
Adjacent vertices
Vertex used in step 1 and 2
Vertex of extended mesh

71

Control points using Sabin’ s rules with extended vertices
Control points using orange vertices in step 1 and 2
Control points using Sabin’ s rules with original vertices
Control points to be modified for smoothness in step 3

Fig. 4. Description of the presented procedure: (a) the input meshes and vertices,
(b) change of an edge(orange) and computation of control points(red) with extended
meshes, (c) same procedure with (b) on the other side, (d) modiﬁcation of the positions
of the control points(yellow) to be smooth surface

points. This surface represents the case of s = 1, therefore, the shape of the
crease is identical to the original mesh. In order to represent the case of s = 0,
we adopt Peters’s scheme [16] and these two surfaces are linearly interpolated
with parameter s. Thus the surface changes its shape between these two shapes
by inputting the parameter s.
4.2

Creating a Corner

To represent a sharp corner, we deﬁned another rule. For simplicity, the case
of n = 3 is described. As shown in Fig. 5, there are three faces meeting at the
target corner. Control points of each faces are obtained by using mesh extension
procedure. Making parallelograms, ﬁve faces are generated as if the target corner
vertex is the center of six meshes. Control points are calculated by Sabin’s rules
with these six vertices. Performing same procedure on the other two faces, all
required control points are obtained. These control points represent the shape of
the input mesh itself (s = 1). Then, using Peters’ scheme [16] with the original
vertices, we obtain control points to express a smooth surface (s = 0).
Seven control points, namely the corner point and its surrounding six points,
are employed to represent a sharp corner. These points are colored blue in
Fig. 6. Using the shape control parameter s, these seven control points are linearly interpolated as
pnew = (1 − s)psmooth + spsharp

(9)

72

T. Oya, S. Seo, and M. Higashi

Vertices of the original mesh
Vertices of the extended meshes
Control points by using the vertices of the extended meshes

Fig. 5. An illustration of mesh extension to obtain control points for corner triangle
faces. Starting from one of the corner mesh, four vertices are generated by making
parallelogram. The same procedure is conducted on remaining two faces.

Smooth surface

psharp
1-s
s
Control points obtained by using extended meshes
Control points used for sharp corner
Control points obtained by Peters’ method

pnew

psmooth
pnew = (1 − s)psmooth + spsharp

Fig. 6. Description of sharp corner generation. To change the shape of the corner,
colored seven control points are used. These control points are linearly interpolated
between Peters’ control points (red) and control points (blue) obtained by using mesh
extension.

where psmooth is the position of the control points obtained by using Peters’s
scheme and psharp denotes the position of the control points generated by the
mesh extension. Inputting some value to the parameter s, new control points
pnew are computed by Eq. (9). By changing the value of the parameter s, we
have a smooth corner (s = 0) and a sharp corner (s = 1).

Generating Sharp Features on Non-regular Triangular Meshes

5

73

Results

This section provides application results where the presented method is used
to represent sharp features on non-regular meshes. Here, results of generating
creases are given in the case of valence n = 4, 5 and 7. Tested meshes are depicted in Fig. 7. Figs. 8∼10 show results of each cases, where parameter s is
changed from 0 to 0.5 and 1. When s = 0, the resulting surface is identical
to the smooth surface that is obtained by using the input mesh. On the other
hand, if s becomes greater than 0, creases appear at the speciﬁed edges. When s
is equal to 1, the shape of the crease is same as the shape of the input mesh. A
small undulation is observed around the extraordinary vertex when s = 0.5. The
reason is that the smooth surface(s = 0) is constructed by using Peters’ scheme,
where the tangential plane on the extraordinary vertex is arbitrarily input by
a user. And the shapes of each B´ezier patches are inﬂuenced by the tangential
plane. Therefore, the crease line undulates when the mesh is not regular because
tangent vectors are not necessarily parallel to the crease edges. This must be
conquered to generate high quality creases.
Fig. 11 represents the case of sharp corner. From this picture, making a sharp
corner is also successfully performed.

n = 4 (non-regular)

n = 5 (non-regular)

n = 6 (regular)

n = 7 (non-regular)

Ordinary vertex( regular meshes)
Extraordinary vertex( non-regular meshes)
1-ring vertices
Normal mesh edge
Crease edge

Fig. 7. Types of meshes used to produce examples

(a) s = 0 (smooth surface)

(b) s = 0.5 (crease)

(c) s = 1.0 (crease)

Fig. 8. Results of generating creases in the case of n = 4

74

T. Oya, S. Seo, and M. Higashi

(a) s = 0 (smooth surface)

(b) s = 0.5 (crease)

(c) s = 1.0 (crease)

Fig. 9. Results of generating creases in the case of n = 5

(a) s = 0 (smooth surface)

(b) s = 0.5 (crease)

(c) s = 1.0 (crease)

Fig. 10. Results of generating creases in the case of n = 7

(a) s = 0 (smooth surface)

(b) s = 0.5 (corner)

(c) s = 1.0 (corner)

Fig. 11. Results of generating sharp corner in the case of n = 3

6

Conclusion

This paper presented a method to generate sharp features on non-regular meshes.
Our method is based upon the regular version of the mesh extension technique
and we have developed new schemes to deal with non-regular meshes. Results
suggest that the method is eﬀective for the tested cases. Future work would be
an exploration for more various cases and a pursuit of the quality of features.
Acknowledgement. This study was ﬁnancially supported by the High-tech
Research Center for Space Robotics from the Ministry of Education, Sports,
Culture, Science and Technology, Japan.

Generating Sharp Features on Non-regular Triangular Meshes

75

References
1. Nasri, A.H.: Polyhedral Subdivision Methods for Free-Form Surfaces. ACM Transactions on Graphics 6(1), 29–73 (1987)
2. Hoppe, H., DeRose, T., Duchamp, T., Halstead, M.: Piecewise Smooth Surface
Reconstruction. In: Proc. SIGGRAP 1994, pp. 295–302 (1994)
3. Loop, C.: Smooth Subdivision Surfaces Based on Triangles, Master’s thesis, Department of Mathematics, University of Utah (1987)
4. DeRose, T., Kass, M., Truong, T.: Subdivision Surfaces in Character Animation.
In: Proc. SIGGRAPH 1998, pp. 85–94 (1998)
5. Biermann, H., Levin, A., Zorin, D.: Piecewise Smooth Subdivision Surfaces with
Normal Control. In: Proc. SIGGRAPH 2000, pp. 113–120 (2000)
6. Ying, L., Zorin, D.: Nonmanifold Subdivision. In: Proc. IEEE Visualization, pp.
325–332 (2001)
7. Sederberg, T.W., Zheng, J., Bakenov, A., Nasri, A.: T-splines and T-NURCCs.
ACM Transactions on Graphics 22(3), 477–484 (2003)
8. Hahmann, S., Bonneau, G.-P.: Triangular G1 interpolation by 4-splitting domain
triangles. Computer Aided Geometric Design 17, 731–757 (2000)
9. Hahmann, S., Bonneau, G.-P.: Polynomial Surfaces Interpolating Arbitrary Triangulations. IEEE Transactions on Visualization and Computer Graphics 9(1),
99–109 (2003)
10. Hahmann, S., Bonneau, G.-P.: Hierarchical Triangular Splines. ACM Transactions
on Graphics 24(4), 1374–1391 (2005)
11. Loop, C.: Smooth Spline Surfaces over Irregular Meshes. In: Proc. SIGGRAP 1994,
pp. 303–310 (1994)
12. Higashi, M., Inoue, H., Oya, T.: High-Quality Sharp Features in Triangular Meshes.
Computer-Aided Design & Applications 4, 227–234 (2007)
13. Farin, G.: Curves and Surfaces for CAGD, 5th edn. Academic Press, London (2005)
14. Boem, W.: The De Boor Algorithm for Triangular splines. In: Surfaces in Computer
Aided Geometric Design, pp. 109–120. North-Holland, Amsterdam (1983)
15. Boem, W.: Generating the Bezier Points of Triangular Spline. In: Surfaces in Computer Aided Geometric Design, pp. 77–91. North-Holland Publishing Company,
Amsterdam (1983)
16. Peters, J.: Smooth Patching of Reﬁned Triangulations. ACM Transactions on
Graphics 20(1), 1–9 (2001)

