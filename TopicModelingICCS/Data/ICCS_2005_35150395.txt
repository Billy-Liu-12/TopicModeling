Constructibility of Signal-Crossing Solutions in von
Neumann 29-State Cellular Automata
William R. Buckley1 and Amar Mukherjee2
1

California Evolution Institute, San Francisco, CA. 94134
wrb@calevinst.org
2
Professor of Computer Science, School of Computer Science,
University of Central Florida, Orlando, FL. 32816
amar@cs.ucf.edu

Abstract. In von Neumann 29-state cellular automata, the crossing of signals is
an important problem, with three solutions reported in the literature. These
solutions greatly impact automaton design, especially self-replicators. This paper
examines these solutions, with emphasis upon their constructibility. We show
that two of these solutions are difficult to construct, and offer an improved design
technique. We also argue that solutions to the signal-crossing problem have
implications for machine models of biological development, especially with
regard to the cell cycle.

1

Von Neumann 29-State Cellular Automata Signal-Crossing

John von Neumann developed cellular automata theory, yielding an environment in
which to demonstrate his thesis that machines may be designed having the property of
self-replication [1]. Von Neumann cellular automata are characterized by a
two-dimensional, rectilinear lattice network of finite state automata (the cells), each
identical in form, function, and association, as specified by a set of states, a set of rules
for the transition of cells between states (the state transition function), and a grouping
function that places each cell at the center of a neighborhood of adjacent cells
(specifying the set of cells operated upon by the state transition function in the
computation of state transitions). All cells transition their state synchronously.
States are grouped into five categories; a ground state, the transition states, the
confluent states (C), the ordinary transmission states (D), and the special transmission
states (M). The last three categories have an activity property, while the last two
categories have the property of direction. Activity corresponds to carried data, it being
transmitted between states at the rate of one bit per application of the state transition
function. Confluent states have the additional property of a one-cycle delay, and so hold
two bits of data. The direction property indicates the flow of data between states.
Ordinary and special transmission states have an antagonistic relationship, with
mutually directed active cells of each causing the annihilation of the other, to yield the
ground state. Active special transmission states also yield confluent state annihilation.
Confluent states accept data from ordinary transmission states, perform a logical AND on
1

AKA - Amar Mukhopadhyay

V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp . 395 – 403, 2005.
© Springer-Verlag Berlin Heidelberg 2005

396

W.R. Buckley and A. Mukherjee

the inputs, and transmit data to both ordinary and special transmission states. Ordinary
and special transmission states logically OR inputs. An ordinary transmission state
accepts input only from like states, and from adjacent confluent states. Special
transmission states accept input likewise. Confluent states pass data to any adjacent
transmission state not pointed at the confluent state. Data are not transmitted to
transmission states against the direction of those transmission states. For instance, two
ordinary transmission states pointing at each other do not exchange data. Instead, the
data is simply lost. Data held by a confluent state is lost if there is no adjacent
transmission state not pointing at the confluent state.
Patterns of cells are called configurations, with those that implement specific
functionality being called organs. Configurations can be compared in terms of their
constructibility. Constructibility is both an absolute measure, and a relative measure.
Some configurations are not constructible, while other configurations are constructible.
In absolute terms, constructibility is the property that a configuration can be obtained
through the act of another configuration. In relative terms, constructibility is an inverse
measure of effort. In von Neumann 29-state cellular automata, the organ that facilitates
configuration construction is known as the construction arm.

2

The Signal-Crossing Problem and Available Solutions

A problem arises within any two-dimensional system respecting the mechanisms of
translocation - the crossing problem. The familiar example is roadway transportation,
the solutions being stop-and-go intersections, bridges, and traffic circles. In cellular
automata, we have the signal-crossing problem. This owes to the fixed-position nature
of the component finite state automata, where the translocation is of data (in the form of
signals). In such cases, translocation is called communication.
Signals are an ordered sequence of data (bits), whether of fixed or arbitrary length,
that are communicated between organs. The literature reports three solutions to the
signal-crossing problem within von Neumann 29-state cellular automata. These
signal-crossing organs are the Coded Channel (CC), the Mukhopadhyay Crossing
Organ (MCO) [2], and the Real-Time Crossing Organ (RTCO). We are here concerned
with the properties of these signal-crossing organs, particularly the latter two.
The MCO and RTCO are general signal-crossing solutions, able to serve the
crossing needs of any two signals, regardless of length. The CC is a more constrained
signal-crossing solution, capable of serving only signals of varying fixed length, though
extendable to service an arbitrarily large number of signals. While the MCO and RTCO
are indiscriminate in the signals they service, the CC discriminates between signals, via
selective acceptance. The function of the CC is programmable, while neither the MCO
nor the RTCO is programmable.
We now consider signal-crossing organ
architecture [3].
The CC has two-layers, with an internal channel (or signal path) positioned
between inputs and outputs. The internal channel is of finite length, and is non-cyclic.
The first CC layer accepts signal input and translates it into a code carried by the internal

Constructibility of Signal-Crossing Solutions in von Neumann

Ain
Bin

397

C DDD C D C D C
C DDD C DDD C D C D C D C
E
E F F
E
E F
F
DDDD C D C D C DDDDDDDD C D C D C D C D C D C DDDDD Bout
E F
C DDD C DDD C D C D C D C E F C DDD C D C D C
E
E F
F E F E
E F F
DD C D C D C D C D C DDDDDD E DD C D C D C DDDDDDD Aout

Fig. 1. The minimal CC is a configuration that crosses two signals, <11> and <101>. Input Ain is
accepted by a decoder/pulser pair, the result being then injected into the internal channel, where
an identical decoder/pulser pair again accepts the signal. A single ordinary transmission state
separates the decoder from the pulser, each organ being constructed of confluent and ordinary
transmission states. The decoder of input Ain , outlined in this figure with dashed lines, is an organ
of dimension five cells by three cells

channel. The second layer of the CC translates this code into signal output. The CC may
accept any input signal a multiple number of times, and may generate the corresponding
output signal any number of times. Linearity of the internal channel requires input
acceptance prior to output generation. Each input may accept more than one signal,
while each output generates only one signal. If corruption of channel code occurs,
unwanted output signal generation may result. Thus, signal inputs ought occur with
sufficient relative delay. The CC is best applied where it is known that signals are
incident only upon the complete servicing of any previously accepted signal.
In the simplest implementation, shown in figure 1, the CC expresses a bijection of
two inputs to two outputs. It is especially easy to see in this case that signal input can be
both crossed and duplicated on output. If the input signals A and B are accepted in that
order, with input acceptors coming before output generators, and the order of outputs is
B then A, we have that the signals are crossed and duplicated. For signals <11> and
<101>, the CC covers approximately 230 cells. CC size is proportional to the number
and length of inputs and outputs.
The RTCO is a square organ, comprising 64 cells, as shown in figure 2. It has two
inputs and two outputs, arranged in orthogonal input/output pairs. Signals are
duplicated at input, routed along a pair of internal paths, and joined into a single signal at
output. There are four different signal paths internal to the RTCO, all of identical length.
Bout

Ain

E
C F DD C C C F
E C E
E E C
DD C DD C D F
DC E C F E F
F E E C E C D Aout
DD C DD C D E
C F E
E C F
E C E CDE E C
E
Bin

Fig. 2. The RTCO, shown without clock signals, with inputs and outputs indicated

398

W.R. Buckley and A. Mukherjee

The RTCO has five clocks, each of identical structure and emitting a period six signal
<101010>, which drive inputs to outputs and operate in-phase with one-another. Four
of these clocks are positioned at the four corners of the RTCO, with the fifth clock
located directly in the middle of the RTCO. The four internal signal paths of the RTCO
completely surround the central clock. Every other bit of signal input is transmitted
along one internal path of the pair while the alternating bits are transmitted along the
other path of the pair. Signal transmission through the RTCO is facilitated by the
alternating signals generated by the component clocks, which trigger confluent states
along the internal paths. These confluent states act as gates to control signal
propagation. There are four such gates, each intersecting two internal paths.
Like the RTCO, the MCO has two inputs and two outputs, and the functional
elements of the internal paths are similarly co-linear. Unlike the RTCO, the inputs and
outputs of the MCO are parallel. The MCO is highly compartmentalised, with a greater
variety of functional parts, and exhibits several levels of structure. At the macro-level,
the MCO is composed of three units that implement the logical XOR operator, one
upstream, and two downstream. The two signals to be crossed are routed through the
upstream XOR, the output of which is then routed through the downstream XOR units, each
taking as the other input the alternate of the two signals to be crossed. The outputs of
these two downstream XOR units will be the two input signals to the MCO, now crossed.
A single XOR is shown in figure 3.

AIN
BIN

DD F DD F D F D F D F D F D F DDD F DDDDDDDDDDDD F
E F C C F E F EDEDEDEDE
DC
F
EDC F E C C C C EDF DF
DF
F
E
C F EDE
C C C C DC F E C F CC
C F
DCDF C E DC F E F E F ECF F FDE
DE F
C D C D C E D C C D C C DDD C L C D C DDD F
D C D X OUT
D C D E F D F D C C D C C DDD C L C D C DD F F
EDF E
DF
F
DD E F E F E F C E E E D F F F
E C E
FC
F
C C C C DC E F C E CCF F
E E
DF
F
DE DE
DE
CDCDC E E
FC
F
DF
DF
E F E E
DF
F
CC
DC F E C F CC CDE F E E
FC
F
DC F E F
E C F F F D E E E DD E E
DF
C D C E D C C D C DDDD C L C D C DDD E E E
E
FC
F D F D C C D C DDDD C L C D C DDDD E E
E
DF
F
DD E F E
FCE E EDF
E
E
FC
F
CC
DC E F C E CC
E
E
DF
F
DE
DE
E
E
FC
F
DF
E
E
DF
F
DC F E C F CC
E
E
FC
F
DF
ECF F FDE
E
E
E
DF
DDDDDDDD C C C DDD C L C D C DDDDDD E
FC
DE
E
DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD E

Fig. 3. A single XOR unit of the MCO, shown without clock signals. The five internal paths are
clearly visible, as indicated by presence of special transmission states. The clocks of the selector,
inverter, collector combination of one path are outlined with a dashed box. The confluent state to
the left of the special transmission state is the operational part of the selector, while the confluent
state to the right is the operational part of the inverter. The confluent state still further to the right
is the operational part of the collector. This organ cannot be autoinitialised

Constructibility of Signal-Crossing Solutions in von Neumann

399

At the meso-level, each XOR of the MCO is composed of three operational parts,
two logical AND operators and a logical negation (NOT) operator, and three internal paths.
Each of the two signal inputs to the XOR is first duplicated. One of the duplications of
each signal is then routed via an internal path around the outside of the XOR, to its output.
The other duplications of the two signals are first combined via a logical AND operator
(the two inputs of a confluent state), with the output of the AND then input to the
component NOT operator. At output, the result of the NOT is then severally combined
with the two duplicated signals to produce the output of the XOR. For the upstream XOR
unit, the output is two first-stage (or partially) crossed signals.
At the micro-level, each NOT operator is composed of clocks, three types of gate,
and internal paths. There are a total of fifteen clocks per NOT operator, five internal
paths, and five of each kind of gate, with each gate being driven by one of the component
clocks. Along each internal path, a sequence of the three kinds of gates, together with
their driving clocks, is positioned. Each group of three gates implement one NOT
operator. The five NOT operators function out-of-phase with each other, staggered to
service every fifth bit of signal input. Hence, the clocks emit period five signals. The
three gates, in order, select the bit to be inverted (the selector), invert the selected bit (the
inverter), and collect the inverted bit (the collector) for transmission to output. The
clocks of the selector and collector emit the signal <10000>, while the inverter emits the
signal <11111>. The clock of the collector is out-of-phase with the clock of the selector,
following by one state transition.
Given the descriptions above, we can compare the constructibility of the CC,
MCO, and RTCO. The single internal path, the lack of interaction between component
parts, and the lack of clock organs gives the CC the highest constructibility. Indeed, the
presence of clock organs is the most important determinant of the unconstructibility of
signal-crossing organs. The reason is simple: clocks are active organs. None of the
component organs of the CC is active, while the MCO and RTCO each have several
active component organs. We now look at the effect of active organs upon
constructibility.

3

Configuration Construction

Constructibility is strongly impacted by configuration activity and the phasing of
component clocks. All passive configurations are constructible. Unconstructible
configurations express a signal, as suggested in figure 4. Yet, not all configurations that
express a signal are unconstructible. In practice, the unconstructibility of a
configuration has as much to do with the construction arm as with the configuration.
Configuration construction involves the sequential construction of individual
cells, requiring a signal of between four and five bits, depending upon the desired end
state of the constructed cell. For instance, confluent cell construction requires signal
<1111> while construction of a right-pointing ordinary transmission cell requires signal
<10000>. At least four ticks of the system clock are required for the construction of a
single cell. Another time cost to construction is the motion of the construction arm. The

400

W.R. Buckley and A. Mukherjee
NKNKNKK
N MKMKLM
LLLLN C D C MK
DDDDD E F LM
LN C C C MK
NKLNLN M
LLMLMLM

NKNKNKK
N MKMKLM
LN C D C MK
NK E F LM
LN C C C MK
NKLNLN M
LLMLMLM

Fig. 4. An unconstructible configuration, shown without signaling, in both expected final form
(right), and during construction (left), where the clock signal is the twelve-bits <111111111111>.
Construction fails upon attempt to initialise the clock via the ordinary transmission path of the
construction arm: interference from the clock alters the signaling of the construction arm. The
construction arm is outlined with a dashed box

process of construction begins with the extension of the construction arm, followed by a
sequence of pairings of cell constructions and construction arm retractions, one pair per
cell constructed. Extension of the construction arm requires the separate construction of
four cells, and the annihilation of two cells (a minimum unit cost of 18 system clock
ticks), while retraction requires the separate construction of seven cells, and annihilation
of nine cells (a minimum unit cost of 37 system clock ticks). Construction proper occurs
during construction arm retraction, so construction of a single cell requires at least 41
system clock ticks.
The proximity of an active clock may impede cell construction. This occurs in two
ways. Either the clock interferes with the signaling of the construction arm, or the clock
provides alternative signaling to the constructed cell. In general, the signal emitted by a
clock is not the same as the signal used to construct a cell. Similarly, the emitted signal
will not likely correspond to the signal needed for construction arm extension and
retraction. The far more likely condition is that the emitted signal will corrupt the
signaling of the construction arm, or alter the state of a constructed cell. Interference
with the construction arm is the reason that the configuration shown in figure 4 is
unconstructible.
Even where an active configuration is constructible, the presence of multiple
clocks presents a special difficulty. The construction arm can perform only one
operation at a time, such as passing a signal to a clock. Consider the case in which two
clocks are initialised, with one clock already circulating its signal. In order for the
second clock to remain in proper relative phasing, the signal to the construction arm
must be accurately timed. This requires knowledge of the phasing of the already
operating clock, the length of the construction arm, and perhaps other quantities.
One means to construct a configuration having active organs is the use of a
dedicated pulser. This allows the a priori computation of proper signaling for the
construction arm, and so ensures proper clock phasing. For the RTCO, the
configuration size of this pulser is some 105 cells, three orders of magnitude larger than
the configuration size of the RTCO. To a good approximation, such a pulser would
produce a signal of some 104 bits.2 The size of this dedicated pulser is some ten percent
of the size of a complete self-replicator, sans the external store [4]. The phasing of
2

Though we have not sufficient room in this paper to demonstrate the result, it has been computed.

Constructibility of Signal-Crossing Solutions in von Neumann

401

multiple clocks is not at all a trivial problem, the MCO and RTCO being good examples.
Through redesign, both the RTCO and MCO can be made more constructible, which we
now demonstrate for the MCO.

4

Autoinitialisation

Mukhopadhyay anticipated the difficulty of clock phasing in signal-crossing
configuration construction, suggesting that means might exist to set the timing of clocks
as a consequence of configuration function. The technique involves the sampling of
signal input, and using the sample to trigger component clocks. We call this method
autoinitialisation, and recognise the inherent implications of the technique for machine
models of biological development, with particular respect to control of gene expression.
Configurations capable of autoinitialisation include subconfigurations (or AI
organs) dedicated to the process. These AI organs sample signal inputs to the
configuration, and generate control and clock signals. For many configurations,
autoinitialisation is a one-time operation, occuring only for the first input signal. We
now consider the case of an MCO configuration that supports autoinitialisation, and
note one AI organ per internal path. Figure 5 shows the design of an MCO that includes

AIN
BIN

D C C DDDDDDDDDDDDDDDDDDDDDDDD F
EDE
F
E D C C D C DDDDDDD C L C DD C DDDDD F F
CCEDE
DD F
EDE
EDF
F F
C E E
DC DC F C C F
E C CC
F F
E CDC
E D C M D E E CDD F
E
F F
C C E F N C D C D C D C DD C D C DD C E
F F
C E E F L E F D C N D F F CD C M D F DD F F
DE E F E DC DF E C C E
F CCC C F F
DC F E C E
DD E D E F D F
FDE E F F
C D C DD C DDDDDDD C L C DD C DD C E F D C F
D C E F DD C DDDDDDD C L C DD C DD C D F D C D
DF F EC
DD F
EDE
EDF
F EDC E
C E
E
D C DDD C C F
E C CCC F E E
F F C E
E D C M E C E CDD F
E F E E
C C D E N C D C D C D C DD C D C DD C D E D E E
F F
L E F D C N F C F CD C M F
E E
F F
E DC DCDC C E
F CC
E E
F F DD F E
DD E
FDF
FDE
C E E
F D C D C DDDDDDD C L C DD C DDDD E E E
F
D C D C DDDDDDD C L C DD C DDDDD E E
F
F
DD F
EDE
EDF
E
F
F D C DD F C C F
E C CC
E
F
L F E D C M D E E CD C N
E
E
F
M C D C D C D C DD C D C DDD E
E
F
DD E
E
DDDDDDDDDDDDDDDDDDDDDDDDDDD E

Xout

Fig. 5. An XOR unit of the MCO that supports autoinitialisation. Po r tal s are indicated by two
adjacent special transmission states, with one outlined with a dashed box. The autoinitialisation
organ of one signal path is outlined with a solid line, at the bottom of the figure. The configuration
shown is autoinitialised with the signal <11111>, applied synchronously at both inputs

402

W.R. Buckley and A. Mukherjee

AI organs. Each AI organ obtains signal input from the adjacent internal path of the
MCO through a portal, generates properly phased signals for the component clocks of
the corresponding selector, inverter, and collector gates, and generates a signal that
closes the portal. Each portal consists of a confluent state inserted into the
corresponding internal path. This confluent state duplicates the signal carried by the
internal path, transmitting it both along the internal path, and to the AI organ, via
adjacent ordinary transmission states that are pointed away from and perpendicular to
the internal path. The portal is closed by changing this perpendicular ordinary
transmission state into a confluent state. Closing the portal ensures that subsequent
inputs to the configuration do not corrupt the signals of the clocks.
In addition to the increase in configuration size implied by the inclusion of AI
organs, there is a cost to the time performance of the configuration. This cost comes in
one of two forms. There is either a latency time cost or a propagation time cost
associated with configuration function. In the case where the autoinitialisation is
triggered by a dedicated signal, a design based upon latency is preferred, resulting in a
one-time delay to the use of configuration function. If a dedicated signal is not available,
then a design based upon propagation is the appropriate choice, with the delay borne for
every use of the configuration. We term post construction changes to a configuration a
reconfiguration. The MCO reconfigurations described are fairly simple to implement.
Reconfigurations can be much more complex operations, involving dynamic change to a
configuration, and they may be linked hierarchically.
One expects many layers of autoinitialisation to provide examples of
machine-modeled biological development. For instance, the sequence of events in the
cell cycle of bacteria consists of three basic phases: regeneration, regulation, and
replication. The mechanisms of autoinitialisation suggest cellular automata replication
can be extended into the processes of regeneration and regulation. Thus, with cascades
of autoinitialisation giving rise to change in the function of a configuration, we can see
opportunity for modeling replication in terms of regulation, instead of as a stand-alone
(holistic) process. Further, if some operations in the cascade result in the expression of
organs not present at replication, then regeneration becomes apparent. It is not so hard
to envision a configuration that functions through such a sequence, thereby expressing a
crude model of the cell development process.

5

Conclusions

As we have shown, solutions to the signal crossing problem in von Neumann cellular
automata are hard to construct. We have developed the technique of autoinitialisation,
and have demonstrated its application, yielding great improvement in configuration
constructibility. For instance, the technique is easily applied to the task of postconstruction initiation of clocks. Autoinitialisation can be extended to facilitate the
run-time alteration of configurations. Systems of hierarchical autoinitialisation have
strong implications for the modeling of the cell cycle. We expect that extension of the
ideas presented here will yield computational models of biological developmental
processes.

Constructibility of Signal-Crossing Solutions in von Neumann

403

References
1. von Neumann, J.: Theory of Self-Reproducing Automata. University of Illinois Press,
Urbana and London (1966)
2. Mukhopadhyay, A. Representation of Events in the von Neumann Cellular Model. J. of
the ACM, Vol. 15, No. 4, October 1968, pp. 693-705
3. Burks, A. W. (ed.): Essays on Cellular Automata. University of Illinois Press, Urbana and
London (1970)
4. Mange, D., Stauffer, A., Peparolo, L., Tempesti, G.: A Macroscopic View of SelfReplication. Proc. of the IEEE, Vol. 92, No. 12, December 2004, pp. 1929-1945

