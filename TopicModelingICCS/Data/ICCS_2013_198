Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1959 – 1968

International Conference on Computational Science, ICCS 2013

An Oﬄine/Online DDDAS Capability for
Self-Aware Aerospace Vehicles
D. Allaire∗a , J. Chambersb , R. Cowlagib , D. Kordonowyb , M. Lecerfa , L. Maininia , F.
Ulkera , K. Willcoxa
a Department

of Aeronautics and Astronautics, Massachusetts Institute of Technology, Cambridge, MA
b Aurora Flight Sciences, Cambridge, MA

Abstract
In this paper we develop initial oﬄine and online capabilities for a self-aware aerospace vehicle. Such a vehicle can dynamically adapt the way it performs missions by gathering information about itself and its surroundings via sensors and responding intelligently. The key challenge to enabling such a self-aware aerospace vehicle is to achieve tasks of dynamically and autonomously
sensing, planning, and acting in real time. Our ﬁrst steps towards achieving this goal are presented here, where we consider the
execution of online mapping strategies from sensed data to expected vehicle capability while accounting for uncertainty. Libraries
of strain, capability, and maneuever loading are generated oﬄine using vehicle and mission modeling capabilities we have developed in this work. These libraries are used dynamically online as part of a Bayesian classiﬁcation process for estimating the
capability state of the vehicle. Failure probabilities are then computed online for speciﬁc maneuvers. We demonstrate our models
and methodology on decisions surrounding a standard rate turn maneuver.
Keywords:
DDDAS, data library, Bayesian classiﬁcation

1. Introduction
A self-aware aerospace vehicle can adapt the way it performs missions by adaptively collecting information about
itself and its surroundings and responding accordingly. The vehicle will respond to events and to degradation over time
in the same way as a self-aware organism—sprinting when healthy and under favorable conditions, and slowing down
as it ages and degrades. There are a number of beneﬁts to enabling such a revolutionary concept. The ability to sense
will allow decisions to be made mid-mission. For example, a launch vehicle approaching maximum dynamic pressure
can use information regarding current system health to compensate underperforming systems with healthier systems.
Under oﬀ-nominal conditions or health states, modiﬁcations to the mission or ﬂight planning can be implemented
to perform the mission based on responsive adaptation by the vehicle to its state. For an aging aircraft that must
operate for twenty, thirty, or even ﬁfty years, the ability to tailor or restructure its everyday ﬂight to minimize wear,
fatigue, or environmental degradation adds years to its life and reduces the maintenance required to keep the aircraft
ﬂight-worthy. Additionally, the aircraft will ﬂy to its capability, performing missions beyond its traditional design
envelope.
Email address: dallaire@mit.edu (D. Allaire∗ )

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.365

1960

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

One of the key challenges to enabling such a self-aware aerospace vehicle is to achieve tasks of dynamically and
autonomously sensing, planning, and acting in real time. Our ﬁrst steps towards achieving this goal are presented here,
where we consider the execution of online mapping strategies from sensed strain data to expected vehicle capability
while accounting for uncertainty. We consider this task in a novel manner by using available sensor data coupled
with a Bayesian classiﬁcation process as a surrogate for performing expensive statistical inverse calculations. We
thus avoid the need to estimate the strain ﬁeld to use as input to a forward modeling process for estimating vehicle
capability through a data-driven reduced order modeling process. The mapping process from strain data to vehicle
capability is built with libraries of strain, capability, and maneuever loading that are generated oﬄine using vehicle
and mission modeling capabilities we have developed in this work. Online failure probabilities can then be calculated
to support decision-making regarding upcoming mission maneuvers.
This paper presents our initial work towards an oﬄine/online DDDAS approach that incorporates data-driven
methods in place of traditional inversion methods. To demonstrate our methodology, we have developed a baseline
unmanned aerial vehicle (UAV) and detailed models for a structurally signiﬁcant panel on the wing of the UAV.
We discuss the vehicle and the panel in Section 2. In Section 3 we discuss our mission planning capabilities and in
Section 4 we demonstrate for a case of three possible damage states, our oﬄine/online DDDAS capability. We provide
concluding remarks in Section 5.
2. Modeling Capabilities
In this section we discuss the modeling capabilities we have developed. We ﬁrst discuss a baseline UAV concept
and the bending and shear loads on the wing of the vehicle in a sustained standard rate turn. We then discuss the
composite panel and damage models for that panel. The composite panel is used in this work as a surrogate for the
complete vehicle in the development of our methodologies.
2.1. Baseline UAV Concept
A conceptual design of a UAV was established to allow for the assessment of structural damage and degradation
cases on realistic maneuvers from a vehicle. The design was completed using a ﬁrst-principles sizing routine [1] and
FAR 23 guidelines. As shown in Figure 1, the vehicle has a wing span of 55 feet. It is estimated to cruise at 140
Sweep Angle=4.3deg

300

Wing Spars
Wing OML

200
Wing Span Station (in)

Engines
Pylons

100

Fuselage OML
Front Landing Gear

0

Main Landing Gear
Payload

−100

Sweep Angle=5deg
Wing Spars

−200

Wing OML
Airplane Center of Gravity

−300

Airplane Neutral Point
0

100
200
300
Fuselage Station (in)

Figure 1. A realistic concept unmanned aerial vehicle established in order to estimate the eﬀect of structural change on capability.

knots (72 m/s) at an altitude of 25,000 ft. A payload of 500 lbs is allowed for in the fuselage. The range of the aircraft

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

1961

is estimated to be roughly 2500 nmi, corresponding to a duration of 17.5 hours allowing for adequate operational
capability to explore maneuverability as a function of the changing structural state of the vehicle.
For this initial assessment of models and algorithms, the concept UAV is to perform a standard rate turn. A
sustained standard rate turn is performed by the aircraft by banking at an angle α and increasing the lift normal to the
wing planform necessary balance the aircraft weight. This increase in lift creates a net centripetal force component
perpendicular to the velocity of the aircraft that changes the heading of the aircraft at a constant velocity; a larger bank
angle allows for a higher rotational speed and a tighter radius of turn while increasing the lift force necessary to keep
the aircraft at altitude, as shown in Figure 2.

Figure 2. A vehicle (left to right): a) under steady level ﬂight; and b) performing a standard rate turn. The weight of the aircraft (red arrow) is equal
to the vertical component of the total aircraft lift (green arrow). The horizontal component of the total aircraft lift under b) creates a centripetal
force, causing the aircraft to perform a turn.

The lift distribution along the wing for varying turn rates and radii is estimated using Schrenk’s approximation[2]
based on an elliptical and chord-wise estimation of lift. This lift distribution is reacted by the wing box structure of
the concept UAV in bending and shear. The wing skins (cap) react the majority of the bending while the spars (web)
react the majority of the shear. These load reactions induce tension and compression stress, σcap , in the lower and
upper skins respectively due to bending, which are estimated as
σcap =

M⊥ (η) hmax (η)
,
2IIcap (η)

(1)

where M⊥ (η) is the bending moment on the wing at normalized spanwise location η perpendicular to the wing sweep
angle, hmax (η) is the maximum thickness of the wing at η, and Icap (η) is the moment of inertia of the wing skins at η.
Shear stress, τweb , is induced in the spars due to the shear loading and is estimated as
τweb =

S⊥ (η)
Aweb (η)

(2)

where S⊥ (η) is the shear force on the wing at η perpendicular to the wing sweep angle, Aweb (η) is the area of the wing
spars at η. These relations allow for estimating the turn rate or radius of the concept UAV based on the capability of
the structural components to react the loading.
2.2. Composite Panel and Damage Models
The magnitude of wing loading on the concept UAV is directly related to the turn rate; therefore a section of the
wing is used as an example panel on which to test the algorithms developed under the DDDAS program. This allows
for damage or degradation that reduces the structural capability of the panel to react a sustained load without failure
to directly aﬀect
ﬀ the ability of the concept UAV to perform a standard rate turn.
A section of the wing is chosen outboard along the wing span at a location where the wing skin is sized for
strength (further outboard the wing skin is sized by minimum gage or handling loads rather than ﬂight loading), as

1962

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

shown in Figure 3. At a location roughly 260 inches outboard along the wing, the wing skin consisting of 4 plies of
MTM45-1/AS4 carbon composite plain weave fabric in a [45/0/
0 0/
0 45] quasi-isotropic layup is necessary to meet the
loading requirements due to FAR 23 design requirements[3], while not exceeding strain design allowable values for
the plies. Design allowables were computed by assuming a 5% coeﬃcient of variation on the published mechanical
properties[4] and calculating the −3σ value, which corresponds to a 99.86% conﬁdence that the actual value is greater
than the allowable value.

Figure 3. An 18 inch by 18 inch section of the wing upper skin chosen to demonstrate the eﬀect
ﬀ of structural change on capability.

Three structural conditions were initially considered for the example panel: pristine, moderate, and severe damage,
as shown in Figure 4. Damage cases are deﬁned as delamination of the ﬁrst two plies due to low-speed impact on the
panel or interlaminar separation caused by stress concentrations under cyclic loading due to embedded foreign object
debris or other defects. The panel conditions are modeled using the ﬁnite element method and strain values for the
panel are estimated for a variety of loading conditions that can be traced back to loading from a variable turn rate.
These sets of strains can then be used by the vehicle system to identify the condition of the panel based on measured
strain values from strain gauges or other sensors onboard the vehicle. Once the panel condition is determined, the
capability of the vehicle to perform a sustained turn necessary to follow a ﬂight path can be determined and a go/
o no-go
decision can be made.

Figure 4. The panel was modeled using the ﬁnite element method for three conﬁgurations (left to right): pristine; moderate damage; and severe
damage. The delamination site for moderate and severe damage are shown in yellow.

The panel is compressively loaded in the Y-axis of Figure 4 with loading that corresponds to a 3.80 load factor
on the loads expected when the “air, ground, and water loads are placed in equilibrium with inertia forces[3]” (in
this case, steady level ﬂight). This represents the limit maneuvering load factor for a normal category airplane and is
the expected design sizing case for the wing. The induced strain in the direction of loading is then estimated using
NASTRAN. This directional strain, which puts the ﬁbers in the middle plies of the panel in compression is predicted to
be the ﬁrst failure mode of the panel. A failure index, FI, which is the ratio of expected/
d/predicted load over allowable
load, is calculated for this and other failure modes. A failure index of greater than unity predicts an exceedance of the
allowed load. When the allowable load is deﬁned by the maximum load sustainable, then a failure index of greater
than unity would predict a failure of the panel to sustain the estimated loading. Since materials can have multiple
failure modes, multiple failure indices are calculated. The maximum failure index is the envelope of all failure indices
calculated, and would represent the ﬁrst failure mode for the element analyzed.
A load factor of 3.80, which was used for the design of the aircraft, can also describe a reference sustained turn.
This load factor can then be used to deﬁne a reference radius r and velocity V corresponding to the ﬂight conditions

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

1963

that would induce a loading that is analyzed by the ﬁnite element model. More on this is discussed in Section 3, where
mission planning is considered. The predicted strain in the direction of loading for each of the three cases is shown in
Figure 5.

Figure 5. The predicted strain contour in the Y-axis for (left to right): pristine; moderate damage; and severe damage due to Y-axis loading
corresponding to the limit maneuvering load factor for a normal category airplane. This load factor corresponds to a reference sustained turn at a
speciﬁed velocity and resulting turn radius.

The maximum sustainable load factor is calculated in Table 1 by reducing the reference load factor by the maximum calculated failure index. This is a measure of capability, since that is the load factor for which the current
condition would cause a maximum failure index of unity (and the predicted loading condition would not exceed the
allowable loading). The deterministic minimum turn radius is then calculated for the speciﬁed aircraft velocity that
induces the maximum load factor.
Table 1. Maximum load factor and corresponding turning radius for the example panel under pristine, moderate and severe damage conditions.
Pristine
Moderate Damage
Severe Damage
Maximum Failure Index
1.00
1.35
1.45
Reference Load Factor
3.80
3.80
3.80
Velocity (m/s)
72.0
72.0
72.0
Maximum Load Factor
3.80
2.82
2.62
Minimum Radius (m)
144
200
218

We assume in this work that the panel is instrumented at nine equally-spaced locations with strain gauges, as
shown in Figure 6. Sensor placement and the development of dynamic sensor data collection techniques are important

1964

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

Figure 6. The location of the nine equally-spaced strain gauge sensors on the example panel.

topics of future work not considered here. These strain gauges are oriented in the direction of the load. The predicted
strain at the nearest element of the ﬁnite element model for each of these locations under the reference load factor is
shown in Table 2. The predicted strains scale linearly by the load factor, so that the strains can be estimated for other
load factors based on the ratio of the actual load factor to the reference load factor.
Table 2. Strain gauge sensor locations and predicted strain in the direction of loading for pristine, moderate and severe damage cases.
Location
Pristine
Moderate Damage
Severe Damage
X (in)
Y (in)
Strain (in/in)
Sensor 1
3.94
14.36
-0.004411
-0.004378
-0.006177
Sensor 2
9.00
14.06
-0.004296
-0.004133
-0.003354
Sensor 3
14.36
14.06
-0.004442
-0.004487
-0.004496
Sensor 4
3.94
9.00
-0.004409
-0.004485
-0.003979
Sensor 5
9.00
9.00
-0.004618
-0.004900
-0.005028
Sensor 6
14.36
9.00
-0.004376
-0.004316
-0.004401
Sensor 7
3.64
3.64
-0.004451
-0.004356
-0.004049
Sensor 8
9.00
3.64
-0.004273
-0.004073
-0.003185
Sensor 9
14.36
3.64
-0.004429
-0.004449
-0.004493

3. Motion Planning
In this section we discuss our motion planning capability for our demonstration problem. Informally, motion
planning for an autonomous vehicle, modeled by a controlled nonlinear dynamical system, refers to the problem of
ﬁnding admissible control inputs for this dynamical system to drive its states from a pre-speciﬁed initial condition to
a pre-speciﬁed goal [5]. Typically, the motion planning problem involves the notion of a cost that must be minimized
along the resultant state trajectory, and the notion of obstacles, which are regions of the state space that any feasible
state trajectory must avoid. In addition, the notion of a higher-level mission may be involved, which involves logical
speciﬁcations on the objective of the motion planning problem. Motion planning algorithms are critical for enabling
autonomy in mobile vehicles, such as UAVs.
The objective of this research is to develop capability-aware autonomy for UAVs. The term capability refers to a
concise quantitative characterization of the structural health condition of the airframe. Here, we deﬁne capability as
the maximum allowable load factor (i.e., the ratio of lift to weight) that the aircraft can safely sustain. In the context
of motion planning, an upper bound nmax on the load factor, n, is equivalent to a constraint on the minimum radius,
rmin , of turns that the aircraft can feasibly perform. Speciﬁcally, the relation between rmin and nmax is given as [6]:

rmin

=

V2
g n2max − 1

,

(3)

1965

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

B
d
A
Figure 7. Mission environment for developing DDDAS capabilities for a self-aware UAV.

where V is the airspeed.
As a simple, yet illuminating example of the challenges involved in enabling capability-aware autonomy in UAVs,
we consider the environment shown in Fig. 7. Here, A and B denote two regions of interest, and the gray areas denote
obstacles. Within this environment, consider a mission informally speciﬁed as “Fly from region A to region B while
avoiding all obstacles as quickly as possible.” For the sake of discussion, let d = 6, 000 m, and suppose that the
aircraft ﬂies at a constant airspeed of v = 350 knots = 180.1 m/s. First suppose that this mission is to be achieved
while maintaining the load factor, at all times during the ﬂight, less than or equal to nmax,1 = 2.5. It follows by Eqn. (3)
that the minimum turn radius for the aircraft in this case is rmin,1 = 1, 444 m. Because 2rmin,1 < d, it is easy to see
from Fig. 7 that the aircraft can satisfy the mission speciﬁcations by following a path similar to the blue-colored path
in Fig. 7. Now suppose that this mission is to be achieved while maintaining the load factor, at all times during the
ﬂight, less than or equal to nmax,2 = 1.3. It follows by Eqn. (3) that the minimum turn radius for the aircraft in this
case is rmin,2 = 3, 978 m. Here, 2rmin,2 > d, and the aircraft will be unable to follow a path similar to the blue-colored
path, and the mission can be satisﬁed only by following a path similar to the red-colored path in Fig. 7. The upper
bounds n1max and nmax,2 on the load factor are examples of the aircraft’s structural capability constraints in possibly
two diﬀerent health states. A capability-aware UAV would be required to plan paths according to the load factor
constraints corresponding to diﬀerent structural health states.
4. Demonstration
In this section we demonstrate our initial work towards oﬄine/online DDDAS capability. The demonstration
consists of a decision regarding which mission to ﬂy from point B to point A. In the following subsections we setup
the decision problem, discuss the oﬄine libraries of strain, capability, and mission information, provide background
on our Bayesian approach to mapping strain data to vehicle capability, and present results.
4.1. Problem Setup
The speciﬁc planning problem we consider in this work is, given a set of possible paths from point B to point
A in Figure 7, select the shortest path subject to a mission failure probability of less than 0.0001. We also have the
option of mission no-go if there is no feasible option. For this problem we do not consider the eﬀects of degradation.
Thus, the mission failure probability is based entirely on the maximum load sustained during the mission. Only the
composite panel discussed in Section 2.2 is considered in the failure probability estimation. The panel is thus a proxy
for the complete vehicle.
4.2. Oﬄine Libraries
As an example of a possible DDDAS path to a self-aware UAV, we consider the oﬄine population of information
libraries. These libraries can contain experimental data, model input/output data, expert information, and models
themselves. For our demonstration problem here, we consider a strain library, a capability library, and a mission

1966

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

library. Each is discussed in turn.
Strain Library. The strain library for our example problem consists of strain data generated at 9 diﬀerent locations
on the composite panel as shown previously in Figure 6. This data was generated for each location under a maximum
loading condition for the panel in the pristine, moderate, and severe damage cases. The data is presented in Table 2.
Online interpolation of this oﬄine generated strain library is used in the demonstration to estimate the probability of
the panel being in each damage case. This concept of online interpolation of an oﬄine library is something we will
explore in detail in future work. The concept embodies the DDDAS paradigm of leveraging data to support modeling,
and in this case, replace modeling entirely.
Capability Library. The capability library for our example problem consists of the load factor for each damage
state under the maximum loading condition for the panel in each damage state. The capability data is presented in
Table 1. Online this data is used to estimate the failure probability for the standard rate turn maneuver based on the
probability of being in each capability state as estimated via the online use of the strain library and acquired strain data.
Mission Library. The mission library for our example problem consists of two possible paths from B to A in
Figure 7, as well as an abort option. The two possible paths from B to A are shown in blue (tighter turn) and red. The
concept we are demonstrating here is that of generating an oﬄine library of optimal mission plans that can be coupled
with online data to drive online mission decision-making. Concepts of mission plan interpolation will be explored in
the future, as well as probabilistic extensions to more traditional H-cost motion-planning algorithms [7].
4.3. Data-Driven Mapping from Strain to Capability to Failure Probability
A key aspect of our DDDAS methodology is the ability to rapidly move from sensed data to vehicle state to
mission decision-making. To enable this, we consider the online use of our information libraries driven by acquired
strain data during a mission. The ﬁrst step is the estimation of the probability that we are in a particular damage state.
We do this by implementing a Bayes classiﬁer under the assumption of independent features, where here the features
are the online strain gauge data, which are indepedent conditioned on a loading case. Let the strain gauge data from
the nine sensors be represented by a random vector [G1 |X j , G2 |X j , . . . , G9 |X j ]T , where each Gi |X j ∼ N(¯gi, j , σ2g ) and
X j denotes conditioning on the damage state (pristine, moderate, or severe). Here also, σ2g is the variance, assumed
identical, associated with each random variable representing the strain gauge data. The expected value of each of
these random variables, g¯ i, j , is calculated as
n
g¯ i, j = gi, j,max
,
(4)
n j,max
where gi, j,max is the strain gauge output for gauge i under the maximum loading condition, n j,max , for damage state
X j . Let di denote the actual output of the ith strain gauge. We may construct a likelihood function, L(X j |d), where
d = [d1 , . . . , d9 ]T as
9

L(X j |d) =

pi (di |X j ),

(5)

i=1

where pi (di |X j ) is the probability density function of Gi |X j ∼ N(¯gi, j , σ2g ) evaluated at di . If we deﬁne prior probabilities
for each damage state as P(X j ), then using Bayes rule we arrive at posterior estimates of probability of being in each
state, P(X j |d) as
P(X j )L(X j |d)
P(X j |d) =
.
(6)
j P(X j )L(X j |d)
Given our estimates of the probability that we are in each damage state, we can produce estimates of the probability of failure on a given maneuver. We assume that our capability estimates for each damage state have some
associated uncertainty due to our inability to perfectly model the physics of the loading on the panel. We capture this
by assigning a random variable C j to the capability in each damage state j. Here we assume that each damage state
has a corresponding capability state. However, in future work we will consider possible many to few mappings from
a large library of damage states onto a possibly much smaller space of capabilities. We assume each C j ∼ N(¯c j , σC2 ),
where c¯ j is the load factor associated with the maximum loading condition for damage state j and σC2 is the variance,

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

1967

assumed identical, associated with each C j . We also assume in this demonstration that the load, n, on the panel is uncertainty, which could be caused by a number of factors (e.g., environmental conditions). We capture this uncertainty
by assuming we can represent the load as a random variable N ∼ N(¯n, σ2N ), where n¯ is the nominal load and σ2N is the
variance of the random variable N. Then, for a given damage state, the probability of failure, Pfail |X j , on a particular
maneuver is Pfail |X j = P({N − C j }) > 0. The overall probability of failure, Pfail is then given as
Pfail =

P(X j |d)Pfail |X j .

(7)

j

4.4. Results
We consider here a speciﬁc example for the mission scenario shown in Figure 7, where a decision must be made
based on current estimated vehicle capability on whether to traverse the blue path (tighter turn), the red path, or to
abort the mission of travelling from B to A. We have assumed the numerical quantities in this section primarily to
demonstrate some of the potential of such a DDDAS capability aboard a UAV.
As noted in Section 4.1, we wish to travel from B to A as quickly as possible but we require that the probability
of mission failure be less than 1 × 10−9 . We assume the aircraft ﬂies at a constant velocity of 72 m/s, and thus, the
tighter turn mission will arrive at point A faster than the other option. Therefore, the online information that must
be calculated is the feasibility of each path based on estimated capability, which is based on the acquisition of online
strain gauge data. We assume that the radius of the tighter turn is 150 meters and that the radius of the wider turn is
230 meteres. For uncertainty information, we assume σG2 = 0.0001, σC2 = 0.01, and σ2N = 0.02. We consider three
cases in turn.
Case 1. For the ﬁrst case we assume we received the strain gauge data provided in the fourth column of Table 3. We
acquired this data by performing a gentle test turn with radius 500 meters to provide some information for identifying
our damage state (much the same way a human may inspect him or herself for a broken bone by testing movements and
applying pressure in various locations). This concept of dynamically gathering data online via optimal experimental
design is something we will consider in more detail in future work. Using Equations 3 and 4, we estimate the load
and the expected value of the output of each strain gauge conditioned on each damage state. Note that estimate a
deterministic value for g¯ i, j by using n¯ and n¯ i, j,max in Equation 4, where n¯ i, j,max is the estimated deterministically from
Equation 3. Using the acquired data in Table 3, the estimates of g¯ i, j , and Equation 6, with P(X j ) = 1/3 for all j, we
estimate the probability of being in each damage state as P(Xpristine ) ≈ 1, P(Xmoderate ) ≈ 0, and P(Xsevere ) ≈ 0. For the
tigher turn we estimate the failure probability given this information as Pfail = 3.5 × 10−10 . Thus, for this case, the
mission planner selects the tighter turn (blue path) from the mission library as the optimal mission.

Sensor 1
Sensor 2
Sensor 3
Sensor 4
Sensor 5
Sensor 6
Sensor 7
Sensor 8
Sensor 9

X (in)
3.94
9.00
14.36
3.94
9.00
14.36
3.64
9.00
14.36

Table 3. Measured strain in the direction of loading for three test cases.
Location
Case 1
Case 2
Y (in)
Strain (in/in)
14.36
-0.001697
-0.002282
14.06
-0.001485
-0.001930
14.06
-0.001691
-0.002541
9.00
-0.001684
-0.002091
9.00
-0.001842
-0.002494
9.00
-0.001679
-0.002127
3.64
-0.001681
-0.002414
3.64
-0.001593
-0.002160
3.64
-0.001733
-0.002323

Case 3
-0.003388
-0.002030
-0.002450
-0.002331
-0.002786
-0.002379
-0.002216
-0.001660
-0.002395

Case 2. For the second case we assume we performed the 500 meter radius turn and acquired the strain gauge data
provided in the ﬁfth column of Table 3. Following the same procedure as in Case 1, we now estimate the probability of
being in each damage state as P(Xpristine ) ≈ 0, P(Xmoderate ) ≈ 1, and P(Xsevere ) ≈ 0. For the tighter turn, we estimate the
failure probability given this information as Pfail ≈ 1. Thus, the tighter turn is not feasible in this case. For the wider
turn, we estimate the failure probability given this information as Pfail 5.8 × 10−34 . Thus, for this case, the mission
planner selects the wider turn from the mission library as the optimal (and in fact only feasible) mission.

1968

D. Allaire et al. / Procedia Computer Science 18 (2013) 1959 – 1968

Case 3. For the third case we assume we performed the 500 meter radius turn and acquired the strain gauge data
provided in the sixth column of Table 3. Following the same procedure as in Case 1 and 2, we now estimate the
probability of being in each damage state as P(Xpristine ) ≈ 0, P(Xmoderate ) ≈ 0, and P(Xsevere ) ≈ 1. For the tighter turn,
we estimate the failure probability given this information as Pfail ≈ 1. Thus, the tighter turn is not feasible in this
case either. For the wider turn, we estimate the failure probability given this information as Pfail 1.6 × 10−7 . Thus, the
wider turn is also not feasible. Since there are no feasible missions in the mission library, the mission planner selects
to abort the mission in this case.
5. Conclusions
We have demonstrated an oﬄine/online DDDAS capability that incorporates online data collection as part of a
mapping procedure from data to capability state. In our demonstration, the damage states where distinct enough that
classiﬁcation based on strain gauge data (and the assumptions regarding uncertainty) placed the vehicle in a particular
damage state with probability near unity for each case tested. By identifying the vehicle’s capability state we were
able to support online mission re-planning.
This work has opened a number of avenues for future work. The construction of oﬄine information libraries and
there online use is a key aspect of developing what is essentially a data-driven reduced-order modeling capability that
connects all modeling and decision aspects of the self-aware UAV problem. Optimal online data collection informed
by data and modeling needs is another key ingredient that merits future research. For the work presented here in
particular, we will in the future compare our DDDAS methodology to more traditional approaches such as solving a
statistical inverse problem for the strain ﬁeld from strain gauge data and then propagating that ﬁeld forward through
oﬄine and online modeling tools to estimate vehicle capability.
References
References
[1] E. Greitzer, P. Bonnefoy, E. De la Rosa Blanco, C. Dorbian, M. Drela, D. Hall, R. Hansman, J. Hileman, R. Liebeck, J. Lovegren, J. P. P. Mody,
S. Sato, Z. Spakovszky, C. Tan, J. Hollman, J. Duda, N. Fitzgerald, J. Houghton, J. Kerrebrock, G. Kiwada, D. Kordonowy, J. Parrish, J. Tylko,
E. Wen, W. Lord, N+3 aircraft concepts designs and trade studies, ﬁnal report, volume 2, Nasa cr-2010-216794/vol2, NASA Glenn Research
Center, Cleveland, Ohio 44135 (2010).
[2] D. Raymer, Aircraft design : a conceptual approach, American Institute of Aeronautics and Astronautics, Reston, Va, 2006.
[3] Federal aviation regulations, part 23, title 14, Code of Federal Regulations (1999).
[4] Umeco mtm451- high service temperature, ﬂexible cure, vacuum processable prepreg system product data sheet, pDS1205/03.12/7b (2012).
[5] H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard, L. Kavraki, S. Thrun, Principles of Robot Motion: Theory, Algorithms, and
Implementations, The MIT Press, 2005.
[6] J. D. Anderson, Aircraft Performance and Design, McGraw-Hill, Boston, MA, USA., 1999.
[7] R. V. Cowlagi, P. Tsiotras, Hierarchical motion planning with dynamical feasibility guarantees for mobile robotic vehicles, IEEE Transactions
on Robotics 28 (2) (2012) 379 – 395.

