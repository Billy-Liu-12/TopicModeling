Procedia Computer Science
Volume 29, 2014, Pages 2013–2023
ICCS 2014. 14th International Conference on Computational Science

Computation of Filtering Functions for Cryptographic
Applications
A. F´
uster-Sabater
Institute of Physical and Information Technologies (ITEFI), C.S.I.C.
Serrano 144, 28006 Madrid, Spain.
amparo@iec.csic.es

Abstract
Large Linear Complexity (LC ) is a fundamental requirement for a binary sequence to be used
in secret key cryptography. In this paper, a method of computing all the nonlinear ﬁltering
L
functions applied to a shift register with a linear complexity LC ≥ Lk + k−1
, where L is
the register’s length and k the order of the ﬁlter, is proposed. Emphasis is on the simple
algebraic operations (addition and shifting of functions) included in the calculations. The
method formally completes the family of nonlinear functions whose ﬁltered sequences satisfy
the previous lower bound on LC. In cryptographic terms, it means an easy and useful way of
designing sequence generators for cryptographic purposes.
Keywords: Nonlinear ﬁlter, encryption function, linear complexity, cryptography, security

1

Introduction

A stream cipher is a type of encryption algorithm which encrypts individual alphabet symbols
(typically bits) of the original message into symbols of the ciphertext under a time-varying
transformation. Stream ciphers are very popular due to many attractive features: they are
very fast, can be implemented easily in hardware, have limited propagation errors and are
particularly suitable for environments where alphabet symbols are processed individually, see
[1, 2, 3, 4]. At the present moment, stream ciphers are implemented in many engineering
applications e.g. the encryption algorithm RC4 [5] used in Wired Equivalent Privacy (WEP) in
the 802.11 standard, the recent proposals HC-128 or Rabbit coming from the eSTREAM Project
[6] and included in the latest release versions of CyaSSL (lightweight open source embedded
implementation of the SSL/TLS protocol [7]) or the pseudorandom generator J3Gen (included
in the EPCglobal Gen2 standard) for low-cost passive RFID tags [8].
The underlying idea in stream ciphers is the design of a binary sequence generator (keystream
generator ), commonly based on maximal-length Linear Feedback Shift Registers (LFSRs) [9],
[10], whose output sequence (keystream sequence) must satisfy diﬀerent cryptographic properties: long period, balance between ones and zeroes, low out-of-phase autocorrelation spectra, as
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2014.05.185

2013

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

well as large linear complexity (LC ). This last property, which is equivalent to the weight of the
Discrete Fourier Transform (DFT) [11], is an important measure of the cryptographic strength
of a sequence. In fact, LC must be as large as possible in order to prevent cryptanalytic attacks
e.g. the application of the Berlekamp-Massey algorithm [12].
One general technique for building keystream generators is to use a ﬁltering function [2], i.e.
a nonlinear function applied to the stages of a maximal-length LFSR, in such a way that the
keystream sequence is generated as the image of a nonlinear Boolean function F in the LFSR
stages. The problem of determining the value of the linear complexity attained by any ﬁltering
function is still open; however, several classes of ﬁltering functions have been proposed that
allow to derive lower bounds on LC. These constructions primarily study ﬁlters that consist
of a single equidistant or norm-phase product of phases of a maximal-length sequence. This
procedure is formally known as the root presence test [3] whose best lower bound on LC is Lk
where L is the LFSR length and k the degree of the ﬁltering function. Later, by formulating
the test in terms of generalized Vandermonde determinants a new and improved lower bound
L
L
k + k−1 is attained in [13, 14]. In both cases the ﬁltering function is a single product of
phases or at most sums of single products.
In this work a method of computing the complete class of ﬁltering functions with this
improved lower bound on their linear complexity is developed. The algorithm is based on the
handling of nonlinear ﬁlters by means of simple algebraic operations. The nonlinear ﬁltering
functions here computed satisfy the characteristic of large linear complexity required to every
cryptographic sequence. The method of computing means an easy technique to design sequence
generators with straight application in stream cipher.

2

Fundamentals and Basic Concepts

Speciﬁc notation and basic concepts to develop such a computing method are introduced:
Maximal-sequence (m-sequence). It is the binary output sequence {sn } from a maximallength LFSR of L stages and primitive characteristic polynomial P (x), see [3].
The generic term of the sequence {sn } can be written in terms of the trace function as [15]:
L−1

j

(Cαn )2 ,

sn = T r(C αn ) =

n≥0

(1)

j=0

where α is a root of P (x) and C a constant. If C = 1, then {sn } is in its characteristic phase.
Nonlinear ﬁltering function (Nonlinear ﬁlter). It is a Boolean function F (x0 , x1 , . . . , xL−1 )
in L variables of degree k. For a subset A = {a0 , a1 , . . . , ar−1 } of {0, 1, . . . , L − 1} with r ≤ k,
the notation xA = xa0 xa1 . . . xar−1 is used. The Boolean function can be written as [16]:
F (x0 , x1 , . . . , xL−1 ) =

c A xA ,

(2)

A

where cA ∈ {0, 1} are binary coeﬃcients and the summation is taken over all subsets A.
Filtered sequence. The sequence {zn } is the keystream or output sequence of the nonlinear
ﬁlter F applied to the L stages of the LFSR. That is,
zn = F (sn , sn+1 , . . . , sn+L−1 ),

n ≥ 0.

(3)

Cyclotomic coset. Let Z2L −1 denote the set of integers [1, . . . , 2L − 1]. An equivalence
relation R is deﬁned on its elements q1 , q2 ∈ Z2L −1 such as follows: q1 R q2 if there exists an
2014

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

integer j, 0 ≤ j ≤ L − 1, such that
2j · q1 = q2 mod 2L − 1.

(4)

The resultant equivalence classes into which Z2L −1 is partitioned are called the cyclotomic
cosets mod 2L − 1, see [9]. All the elements qi of a cyclotomic coset have the same number of
1’s in their binary representation; this number is called the coset weight. The leader element,
E, of every coset is the smallest integer in such an equivalence class and the cardinal of any
coset is L or a proper divisor of L.
Characteristic polynomial of a cyclotomic coset. It is a polynomial PE (x) deﬁned by PE (x) =
(r−1)
E
), where the degree r (r ≤ L) of PE (x) equals the cardinal
(x + αE )(x + α2E ) . . . (x + α2
of the cyclotomic coset E.
Characteristic sequence of a cyclotomic coset. It is a binary sequence {SnE } deﬁned by the
(r−1)
En
} with n ≥ 0, see [15].
expression {SnE } = {αEn + α2En + . . . + α2

3

Grouping Filtering Functions in Equivalence Classes

The idea of grouping nonlinear ﬁltering functions in equivalence classes for their analysis and
handling has been already treated in the literature, see [16]. In this section, an equivalence
relationship speciﬁc to compute nonlinear ﬁlters with guaranteed LC is proposed.
First of all, diﬀerent representations of the nonlinear ﬁltering functions will be considered.
Boolean functions are currently expressed in Algebraic Normal Form (ANF) as the sum of
distinct products in the Boolean variables. In fact, equation (2) describes the Algebraic Normal
Form (ANF) of a nonlinear ﬁltering function F in the variables (sn , sn+1 , . . . , sn+L−1 ). This
representation has been traditionally used by the designer of nonlinear ﬁlters as he can handle
the degree and particular form of the function. Nevertheless, the ANF of ﬁltering functions do
not give information on the linear complexity of the ﬁltered sequence. In this sense, a diﬀerent
representation closely related to the linear complexity is required.
Indeed, if all the variables sn+j (0 ≤ j ≤ L − 1) of F are substituted by their corresponding
expressions in (1) and the resulting terms grouped, then the nth-term zn of the ﬁltered sequence
{zn } can be written as:
CE1 α

E1 n

zn = F (sn , sn+1 , . . . , sn+L−1 ) =
(r1 −1)
+ (CE1 αE1 n )2 + . . . + (CE1 αE1 n )2
+
..
.

CEi αEi n + (CEi αEi n )2 + . . . + (CEi αEi n )2

(ri −1)

+

(5)

..
.
(r −1)
CEN αEN n + (CEN αEN n )2 + . . . + (CEN αEN n )2 N ,
where ri is the cardinal of coset Ei , the subindex i ranges in the interval 1 ≤ i ≤ N and N
is the number of cosets of weight ≤ k. Thus, a nonlinear ﬁltering function F can be represented
in terms of its N characteristic sequences {SnEi }.
Note that the coeﬃcient CEi determines the starting point of the characteristic sequence
{SnEi } with reference to its characteristic phase. If CEi = 0, then the corresponding cyclotomic
coset Ei is degenerate. Otherwise, the coset would be nondegenerate. Linear complexity of
the ﬁltered sequence is related with the number of coeﬃcients CEi = 0 as the contribution of
2015

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

any nondegenerate coset to LC equals the cardinal of such a coset [3]. In this way, the above
sequential representation already provides quantitative information on the LC of the ﬁltered
sequence.
Next we introduce a third nonlinear ﬁltering function representation that is a simpliﬁcation
of the previous one. In fact, a nonlinear ﬁlter F (sn , sn+1 , . . . , sn+L−1 ) can be also represented
by a N -tuple of coeﬃcients (CE1 , CE2 , . . . , CEN ) where CEi ∈ GF (2ri ) and N is as before the
number of cosets of weight ≤ k. This representation is particularly useful as allows us to treat
separately the distinct cosets.
In brief, a nonlinear ﬁltering function can be represented in three diﬀerent ways:
• The traditional Algebraic Normal Form.
• The sum of its characteristic sequences.
• A N -tuple of coeﬃcients that deﬁne the starting point of such characteristics sequences.
Now, an equivalence relationship among ﬁltering functions is deﬁned. Indeed, let G be the
set of the kth-order nonlinear ﬁltering functions applied to a single LFSR of length L. We are
going to group the elements of G producing the ﬁltered sequence {zn } or a shifted version of
{zn }, denoted by {zn }∗ . This fact enables us to deﬁne an equivalence relationship ∼ on the set
G as follows:
Deﬁnition 1. Two nonlinear ﬁltering F, F ∈ G are related, F ∼ F , if they generate
shifted versions of the same ﬁltered sequence {zn },
{F (sn , . . . , sn+L−1 )} = {zn } and {F (sn , . . . , sn+L−1 )} = {zn }∗ .
It is easy to see that the relation deﬁned above is an equivalence relationship and that the
number of ﬁltering functions in each equivalence class equals the period of the ﬁltered sequence
Tz . Making use of the third representation (N -tuple of coeﬃcients), we see that the coeﬃcients
associated with F, F , notated (CEi ) and (CEi ) respectively, satisfy
CEi = CEi · αj Ei (1 ≤ i ≤ N ),

(6)

where j is an integer 0 ≤ j < Tz . Based on this equivalence relationship, a method of computing
ﬁltering functions whose ﬁltered sequences have a large LC is developed.

4

A Method of Computing Nonlinear Filtering Functions
with Large LC

Previously to the method’s description, several results that will be used in the computation are
introduced.
Deﬁnition 2. Two nonlinear ﬁltering functions F0 and F1 in the same equivalence class
are consecutive if they satisfy the equation (6) with j = 1 or equivalently
F1 (sn , . . . , sn+L−1 ) = F0 (sn+1 , . . . , sn+L ).
Moving from function F0 to function F1 in the three forms of representation means:
1. An increment by 1 in all the sub-indices of the ANF representation.
2. A simultaneous cyclic shift of all the characteristic sequences {SnEi } in the characteristic
sequence-based representation.
2016

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

3. The product of each coeﬃcient by its corresponding factor αEi (1 ≤ i ≤ N ) in the N -tuple
representation.
Now two diﬀerent Lemmas [17], [18] that allow one to handle the diﬀerent functions of an
equivalence class can be formulated.
Lemma 1. If p nonlinear ﬁltering functions in the same equivalence class are chosen
(CEi ), (CEi · αq1 Ei ), (CEi · αq2 Ei ), . . . , (CEi · αqp−1 Ei )

(7)

(q1 , q2 , . . . , qp−1 being integers), then the nonlinear ﬁlter characterized by the coeﬃcients
C˜Ei = CEi (1 + αq1 Ei + . . . + αqp−1 Ei ) (1 ≤ i ≤ N )

(8)

✷
preserves the same cosets Ei as those of the ﬁlters deﬁned in (7).
Therefore, an easy way to guarantee the presence of all the cosets Ei in the new ﬁlter is just
summing two consecutive nonlinear ﬁlters F0 and F1 in the same equivalence class.
Next, a new lemma that relates the nonlinear ﬁlters from diﬀerent equivalence classes is
introduced.
Lemma 2. The sum of nonlinear ﬁlters satisfying the conditions of Lemma 1 gives rise to
a new nonlinear ﬁlter in a diﬀerent equivalence class.
✷
Both lemmas allow us to develop a method of computing nonlinear ﬁltering functions with
the following characteristics:
1. The method computes the ﬁltering functions that preserves all the cosets of weight k and
k − 1 simultaneously.
2. The LC of their corresponding ﬁltered sequences is lower bounded by
LC ≥

L
L
.
+
k−1
k

(9)

3. The method uses the NT -tuple representation
((CEi ), (CEj )) (1 ≤ i ≤ Nk ), (1 ≤ j ≤ Nk−1 ),
where Nk is the number of k-weighted cosets, Nk−1 is the number of k − 1-weighted cosets
and NT = Nk + Nk−1 .
4. The method starts from a ﬁltering function F0 of the form:
F0 (sn , sn+1 , . . . , sn+L−1 ) = sn sn+δ sn+2δ . . . sn+(k−1)δ

(10)

with gcd(δ, 2L − 1) = 1 whose cosets of weight k and k − 1 are guaranteed to be nondegenerated [13, 14].
The key idea in this construction method is:
• To compute the coeﬃcients of the NT -tuple representation for the ﬁlters F0 , F1 and
F 0 + F1 .
• To shift the ﬁlter F0 + F1 through its equivalence class and summing it with F0 in order
to cancel the successive components of its NT -tuple.
2017

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

The procedure is sketched in algorithm 1. After a succession of sums and shiftings, the ﬁnal
result is:
1. A set of NT basic nonlinear ﬁltering functions of the form (0, 0, . . . , dl , . . . , 0, 0) (1 ≤ l ≤
NT ) with dl = 0 where each function includes a unique coset El of weight k or k − 1.
2. Their corresponding ANF representations.
The combination of all these basic ﬁlters with dl (1 ≤ l ≤ NT ) in ANF representation gives rise
to the possible functions that preserve the cosets of weight k and k − 1. Later, the addition of
terms of order < k − 1 in ANF permits the generation of all the nonlinear ﬁltering functions of
L
.
order k that guarantee a linear complexity LC ≥ Lk + k−1

4.1

Computation of the coeﬃcients CEi and CEj

Given the ﬁltering function F0 in (10), the computation of the coeﬃcients in its NT -tuple
representation is carried out as follows:
Coeﬃcients (CEi ): They correspond to the cosets of weight k. The generic expression for
any coeﬃcient CEi (1 ≤ i ≤ Nk ) is [3]:
e0

C Ei =

α0· 2
e1
α0· 2
α0· 2

ek−1

e0

αδ 2
e1
αδ 2
...
ek−1
αδ 2

e0

α2 δ 2
e1
α2 δ 2
ek−1

α2 δ 2

...
...
...
...

e0

α(k−1) δ 2
e1
α(k−1) δ 2
,
...
ek−1
α(k−1) δ 2

(11)

where Ei = 2e0 + 2e1 + . . . + 2ek−1 is the leader element of an arbitrary coset of weight k and
em (0 ≤ m ≤ k − 1) are integers. Thus, each coeﬃcient CEi is a Vandermonde determinant
that can be easily computed as well as it is guaranteed to be diﬀerent from 0. Thus, the cosets
of weight k for the ﬁlter F0 are nondegenerate and their contribution to the linear complexity
equals Lk , see [3].
Coeﬃcients (CEj ): They correspond to the cosets of weight k − 1. The generic expression
for any coeﬃcient CEj (1 ≤ j ≤ Nk−1 ) is [13]:
k−2

C Ej =

α(p+q) d es V (¯
x),

(12)

0≤p<q≤k−1 s=0

where the determinant V (¯
x) has order k − 2 and the vector x
¯ is given by the expression
ek−2 +1
e0 +1
). In addition, Ej = 2e0 + 2e1 + . . . + 2ek−2 is the leader element of
, . . . , αd 2
x
¯ = (αd 2
an arbitrary coset of weight k − 1 and em (0 ≤ m ≤ k − 2) are integers. Thus, each coeﬃcient
CEj is the sum of generalized Vandermonde determinants that can be easily computed as well
as their total sum is guaranteed to be diﬀerent from 0. Thus, the cosets of weight k − 1 for the
L
, see
ﬁlter F0 are nondegenerate and their contribution to the linear complexity equals k−1
[13].

4.2

Discussion of the method

Regarding the previous method, distinct considerations must be taken into account.
Recall that the construction method above described to compute the basic ﬁlters of the form
(0, 0, . . . , dl , . . . , 0, 0), dl = 0 involves very simple operations:
2018

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

Algorithm 1. Computation of nonlinear ﬁlters with k and k − 1-weighted cosets
Input:
The pair (L, k), NT , LFSR characteristic polynomial P (x) and ﬁlter F0 in ANF
0
01: Compute the NT -tuple for ﬁlter F0 , (CE
), (1 ≤ l ≤ NT );
l
02: for l = NT − 1 to 2 do
1
01
03:
Compute the NT -tuples for ﬁlters F1 and F0 + F1 , (CE
) (1 ≤ l ≤ NT );
) and (CE
l
l
01
0
04:
Shift (CEl ) through its equivalence class until the l − th component equals CE
;
l
01
0
05:
Sum (CEl ) + (CEl ) getting a NT -tuple with 0 at the l − th component;
0
01
0
)
) ← (CE
) + (CE
06:
(CE
l
l
l
07: end for
Output:
A set of NT basic ﬁlters of the form (0, 0, . . . , dl , . . . , 0, 0)
(1 ≤ l ≤ Nk ) with dl ∈ GF (2L ), dl = 0
Their corresponding ANF representations.

• Sum operation: that is reduced to a sum of ﬁlters in the ANF representation or to a sum
of elements CEl in the extended ﬁeld GF (2L ) that expressed in binary representation is
just an exclusive OR operation.
• Shifting operation through an equivalence class: that means for each shifting an increment
by 1 in all the indexes in the ANF representation or the multiplication of powers of α by
their corresponding factors αEl in the NT -tuple representation.
Consequently, the eﬃciency of the computation method is quite evident. In brief, we provide
L
one with the complete class of nonlinear ﬁlters with LC ≥ Lk + k−1
at the price of minimal
computational operations.
In the case that the presence of more cosets of weight < k−1 were guaranteed, the procedure
here described continues being applicable just enlarging the coeﬃcient vector to new components
corresponding to those new guaranteed cosets in the N -tuple representation. Let us now see
an illustrative example.

4.3

A numerical example

Let F0 be a nonlinear ﬁltering function of degree k = 4 applied to the stages of a LFSR of length
L = 5 and characteristic polynomial P (x) = x5 + x3 + 1, where α is a root of P (x) so that α5 =
α3 +1. There are N4 = 1 cyclotomic coset of weight 4, coset 15= {15, 30, 29, 27, 23}, and N3 = 2
cyclotomic cosets of weight 3, coset 7= {7, 14, 28, 25, 19} and coset 11= {11, 22, 13, 26, 21}. The
form of the ﬁlter with guaranteed cosets of weight 4 and 3 is F0 (s0 , s1 , s2 , s3 ) = s0 s1 s2 s3 . The
algorithm previously described is applied.
INPUT: (L, k) = (5, 4), NT = 1 + 2, LFSR characteristic polynomial P (x) = x5 + x3 + 1,
ﬁlter F0 = s0 s1 s2 s3 in ANF.
Computation of the 3-tuples for the ﬁlters F0 , F1 , F0 + F1 :
0
0
• F0 (s0 , s1 , s2 , s3 ) = s0 s1 s2 s3 → (C15
, C70 , C11
) = (α16 , α7 , 1)
1
1
, C71 , C11
) = (α16 · α15 , α7 · α7 , 1 · α11 ) = (1, α14 , α11 )
• F1 (s0 , s1 , s2 , s3 ) = s1 s2 s3 s4 → (C15

2019

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

01
01
) = (α16 , α7 , 1) + (1, α14 , α11 ) =
, C701 , C11
• F0 + F1 = s0 s1 s2 s3 + s1 s2 s3 s4 → (C15
7
23
23
(α , α , α )

Computation of (d1 , 0, 0):
0
0
1
1
01
01
, C70 , C11
) + (C15
, C71 , C11
) = (C15
, C701 , C11
), (α30 , 0, α12 ) + (α14 , 0, α23 ) = (α21 , 0, α4 )
(C15
01
01
01
0
• Shifting of (C15
, C701 , C11
) through its equivalence class until C11
= C11
= α12 , that is
21
4
15
12
(α , 0, α ) is shifted up to (α , 0, α )

• Sum (α15 , 0, α12 ) + (α30 , 0, α12 ) = (α6 , 0, 0), so that (d1 , 0, 0) = (α6 , 0, 0)
Computation of (0, d2 , 0):
0
0
1
1
01
01
, C70 , C11
) + (C15
, C71 , C11
) = (C15
, C701 , C11
), (α23 , α23 , 0) + (α7 , α30 , 0) = (α14 , α8 , 0)
(C15
01
0
01
01
= C15
= α23 , that is
) through its equivalence class until C15
, C701 , C11
• Shifting of (C15
14
8
23
6
(α , α , 0) is shifted up to (α , α , 0)

• Sum (α23 , α6 , 0) + (α23 , α23 , 0) = (0, α24 , 0), so that (0, d2 , 0) = (0, α24 , 0)
Computation of (0, 0, d3 ):
0
0
1
1
01
01
, C70 , C11
) + (C15
, C71 , C11
) = (C15
, C701 , C11
), (α30 , 0, α12 ) + (α14 , 0, α23 ) = (α21 , 0, α4 )
(C15
01
01
01
0
• Shifting of (C15
, C701 , C11
) through its equivalence class until C15
= C15
= α30 , that is
21
4
30
23
(α , 0, α ) is shifted up to (α , 0, α )

• Sum (α30 , 0, α23 ) + (α30 , 0, α12 ) = (0, 0, α4 ), so that (0, 0, d3 ) = (0, 0, α4 )
OUTPUT: Three basic nonlinear ﬁlters expressed in their 3-tuple and ANF representations.
1. The 3-tuple (d1 , 0, 0) = (α6 , 0, 0) and its ANF representation
s1 s 2 s 3 + s 0 s 1 s 3 s 4 + s 1 s 4 + s 0 s 1 s 4 + s 0 s 2 + s 0 s 1 s 2 + s 0 s 2 s 3 + s 0 s 2 s 3 s 4 + s 0 s 1 s 3 .
2. The 3-tuple (0, d2 , 0) = (0, α24 , 0) and its ANF representation
s 0 s2 s4 + s2 s3 + s0 s2 s3 + s0 s3 s4 + s1 s2 s4 + s2 s3 s4 + s1 s3 .
3. The 3-tuple (0, 0, d3 ) = (0, 0, α4 ) and its ANF representation
s1 s 3 s 4 + s 2 s 3 s 4 + s 0 s 2 s 4 + s 1 s 2 s 3 + s 0 s 1 s 2 + s 1 s 2 s 4 + s 2 s 3 + s 0 s 2 + s 1 s 3 .
Basic ﬁlters (d1 , 0, 0), (0, d2 , 0) and (0, 0, d3 ) range in their corresponding equivalence class
(with 25 − 1 ﬁlters per class) as it is partially shown in Appendix A Tables 1, 2, and 3, respectively. Filter (d1 , 0, 0) includes a unique coset of weight 4 (coset 15) while ﬁlters (0, d2 , 0) and
(0, 0, d3 ) include each of them a unique coset of weight 3 (coset 7) and (coset 11), respectively.
None of the ﬁlters depicted in the previous tables attains the lower bound LC ≥ 54 + 53
corresponding to the cosets of weight 4 and 3. Nevertheless, summing up each one of the ANF
representations in Table 1 with every one of the ANF representations in Table 2 and Table 3,
we get the 31 × 31 × 31 possible combinations of terms of degree 3 and 4 that guarantee simultaneously the cosets of weight 4 and 3. Next, the addition of terms of order < 3 in ANF
representation permits us the generation of all the nonlinear ﬁlters of degree 4 applied to the
previous LFSR that guarantee a linear complexity LC ≥ 54 + 53 .
2020

Computation of Cryptographic Filtering Functions

5

A. F´
uster-Sabater

Conclusions

In this work, nonlinearly ﬁltering functions applied to maximal-length LFSRs have been analyzed under diﬀerent representations (ANF, sequential decomposition, N -tuple representation).
At the same time, a method of computing all the nonlinear dynamical ﬁlters with guaranteed
cosets of weight k and k − 1 has been developed. The procedure is based on simple algebraic operations (addition and shifting operations) on nonlinear ﬁlters in diﬀerent equivalence classes.
Starting from a nonlinear function that is the product of equidistant phases, the computation method formally completes the class of ﬁlters with a guaranteed large linear complexity of
L
value LC ≥ Lk + k−1
. In cryptographic terms, this procedure means an easy way of designing
keystream generators for cryptographic application in stream ciphers.

Acknowledgements
This work was supported by CDTI (Spain) under Project Cenit-HESPERIA as well as by Ministry of Science and Innovation and European FEDER Fund under Project TIN2011-25452/TSI.

References
[1] N. Nagaraj, One-Time Pad as a nonlinear dynamical system. Commun Nonlinear Sci Numer
Simulat 17 (2012) 4029-4036.
[2] C. Paar, J. Pelzl, Understanding Cryptography, Springer-Verlag, Berlin Heidelberg, 2010.
[3] R.A. Rueppel, Analysis and Design of Stream Ciphers, Springer, New York, 1986.
[4] A.J. Menezes et al., Handbook of Applied Cryptography, New York:CRC Press, 1997.
[5] G. Paul, S. Maitra, RC4 Stream Cipher and Its Variants; Discrete Mathematics and Its Applications, CRC Press, Taylor and Francis Group, Boca Raton, FL, 2012.
[6] M. Robshaw, O. Billiet (Eds.), New Stream Cipher Designs: The eSTREAM Finalist. LNCS, Vol.
4986, Springer-Verlag, 2008.
[7] Yet Another SSL (YASSL), Embedded SSL Library (2012) available at http://www.yassl.com
[8] EPC Global,
UHF Air Interface Protocol Standard Generation2,
Version 2,
http://www.gs1.org/gsmp/kc/epcglobal/uhfc1g2.
[9] S. Golomb, Shift-Register Sequences, revised ed., Aegean Park Press, Laguna Hills, California,
1982.
[10] O. Delgado, A. F´
uster-Sabater, J.M. Sierra, Performance Evaluation of Highly Eﬃcient Techniques
for Software Implementation of LFSR. Computers & Electrical Engineering, 37(6) (2011) 12221231.
[11] K. Paterson, Root counting, the DFT and the linear complexity of nonlinear ﬁltering. Des. Codes
Cryptogr. 14 (1998) 247-259.
[12] J.L. Massey, Shift-Register Synthesis and BCH Decoding. IEEE Trans. Information Theory, 15(1)
(1969) 122-127.
[13] N. Kolokotronis, K. Limniotis, N. Kalouptsidis, Lower Bounds on Sequences Complexity via Generalised Vandermonde Determinants. Proc. of Sequences and Their Applications, 4th International
Conference, SETA 2006, Beijing, China, LNCS, Vol. 4086, Springer-Verlag, 2006, pp. 271-284.
[14] K. Limniotis, N. Kolokotronis, N. Kalouptsidis, On the Linear Complexity of Sequences Obtained
by State Space Generators. IEEE Trans. Inform. Theory. 54 (2008) 1786-1793.
[15] R. Lidl, H. Niederreiter, Finite Fields. In Enciclopedia of Mathematics and Its Applications vol.
20, Second Ed., Cambridge University Press, Cambridge, UK, 1997.

2021

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

[16] S. Ronjom, C. Cid, Nonlinear Equivalence of Stream Ciphers. Proc. of Fast Software Encryption,
17th International Workshop, FSE 2010, Seoul, Korea, LNCS, Vol. 6147, Springer-Verlag, 2010,
pp. 40-54.
[17] A. F´
uster-Sabater, Computing Classes of Cryptographic Sequence Generators. International Conference on Computational Science, ICCS 2013. Procedia Computer Science 18 (2013) 2440-2443.
[18] A. Peinado, A. F´
uster-Sabater, Generation of pseudorandom binary sequences by means of LFSRs
with dynamic feedback. Mathematical and Computer Modelling. 57(11-12) (2013) 2596-2604.

2022

Computation of Cryptographic Filtering Functions

A. F´
uster-Sabater

Classes of nonlinear ﬁlters with a unique k-weighted or
k − 1-weighted coset in the previous numerical example

A

No.

Filtering function in ANF representation

0
1
2
3
...
30

s 1 s 2 s 3 + s0 s 1 s 3 s 4 + s1 s 4 + s0 s 1 s 4 + s0 s 2 + s0 s 1 s 2 + s0 s 2 s 3 + s0 s 2 s 3 s 4 + s0 s 1 s 3
s2 s 3 s 4 + s 0 s 1 s 2 s 4 + s 0 s 1 s 2 s 3 + s 2 s 3 + s 0 s 2 + s 0 s 1 s 2 + s 1 s 3 + s 0 s 1 s 3 s 4 + s 1 s 2 s 4
s0 s 3 s 4 + s 0 s 1 s 2 s 3 + s 1 s 3 + s 2 s 4 + s 0 s 1 s 2 s 4 + s 0 s 2 s 3 + s 2 s 3
s0 s1 s4 + s1 s2 s3 s4 + s2 s4 + s0 s3 + s3 + s0 s1 s2 s3 + s1 s2 s3 + s3 s4
...
...
...
...
s 0 s 1 s 2 + s0 s 1 s 2 s 3 + s0 s 3 + s0 s 1 s 3 + s0 s 1 s 3 s 4 + s0 s 1 + s0 s 1 s 3 + s0 s 1 s 4

Coeﬃc.
(α6 , 0, 0)
(α21 , 0, 0)
(α5 , 0, 0)
(α20 , 0, 0)
...
(α22 , 0, 0)

Table 1: Class of nonlinear ﬁlters (d1 , 0, 0) with coset 15 of weight 4.

No.

Filtering function in ANF representation

0
1
2
3
...
30

s0 s 2 s 4 + s2 s 3 + s0 s 2 s 3 + s0 s 3 s 4 + s1 s 2 s 4 + s2 s 3 s 4 + s1 s 3
s0 s1 s3 + s1 s3 + s0 s1 s4 + s0 s2 s3 + s2 s3 + s0 s3 s4 + s2 s4
s 1 s 2 s 4 + s2 s 4 + s0 s 1 s 2 + s1 s 2 s 3 + s1 s 3 s 4 + s3 s 4 + s0 s 1 s 4 + s1 s 3 s 4 + s0 s 3 + s3
s0 s 2 s 3 + s 2 s 3 + s 0 s 3 + s 3 + s 0 s 4 + s 3 s 4 + s 0 s 1 s 2 + s 2 s 3 s 4 + s 1 s 4 + s 4
...
...
...
...
s0 s 2 s 3 + s 1 s 2 + s 0 s 1 s 2 + s 1 s 2 s 3 + s 0 s 1 s 3 + s 1 s 2 s 4 + s 0 s 2

Coeﬃcient
(0, α24 , 0)
(0, 1, 0)
(0, α7 , 0)
(0, α14 , 0)
...
(0, α17 , 0)

Table 2: Class of nonlinear ﬁlters (0, d2 , 0) with coset 7 of weight 3.

No.

Filtering function in ANF representation

0
1
2
3
...
30

s 1 s 3 s 4 + s2 s 3 s 4 + s0 s 2 s 4 + s1 s 2 s 3 + s0 s 1 s 2 + s1 s 2 s 4 + s2 s 3 + s0 s 2 + s1 s 3
s0 s 2 s 4 + s0 s 3 s 4 + s0 s 1 s 3 + s1 s 3 + s1 s 2 s 3 + s0 s 2 s 3 + s2 s 3
s 0 s 1 s 3 + s1 s 3 + s0 s 1 s 4 + s1 s 2 s 4 + s2 s 4 + s2 s 3 s 4 + s3 s 4
s 1 s 2 s 4 + s2 s 4 + s0 s 1 s 2 + s1 s 2 s 3 + s0 s 2 s 3 + s2 s 3 + s0 s 3 + s3 + s0 s 3 s 4 + s0 s 4
...
...
...
...
s 0 s 2 s 3 + s1 s 2 s 3 + s0 s 1 s 4 + s0 s 1 s 2 + s0 s 2 s 4 + s0 s 1 s 3 + s1 s 2 + s0 s 3 + s0 s 2

Coeﬃcient
(0, 0, α4 )
(0, 0, α15 )
(0, 0, α26 )
(0, 0, α6 )
...
(0, 0, α24 )

Table 3: Class of nonlinear ﬁlters (0, 0, d3 ) with coset 11 of weight 3.

2023

