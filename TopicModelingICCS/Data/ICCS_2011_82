Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 2226–2235

International Conference on Computational Science, ICCS 2011

Demand-driven Movement Strategy for Moving
Beacons in Distributed Sensor Localization
Anindya Iqbal * and Manzur Murshed
a

Gippsland School of Information Technology, Monash University, Churchill Vic 3842, Australia

Abstract
In a wireless sensor network, range-free localization with a moving beacon can reduce susceptibility to communication noises
while concomitantly eliminate need for large number of expensive anchor nodes that are vulnerable to malicious attacks. This
paper presents a moving beacon aided range-free localization technique, which is capable of estimating the location of a sensor
with high accuracy. A novel distributed localization scheme is designed to optimally determine beacon movement strategy
according to user demand. Superiority of this scheme to the state-of-the-art has been established in terms of location estimation
quality, measured by the theoretical expected maximum error and simulated mean error while optimizing the beacon location
density or traversal path length.
Keywords: sensor network; localization; range-free localization; moving beacon;

1. Introduction
Wireless Sensor Networks (WSNs) are usually deployed in a random fashion throughout a large unattended area
to sense data of interest. Thousands of sensors, having limited sensing coverage and transmission capacity, sense
specific properties from the surrounding environment to facilitate remote monitoring or detect the occurrence of
expected events like fire. The sensed data are transmitted, periodically or on-demand basis, to the nearest base
station for further processing. Unless the coverage of a WSN is confined to a small area, collecting sensed data
without any information on locality makes little sense. For example, a bushfire detection network unable to pinpoint the occurrence location will be of no help in a large geographical terrain such as the Australian outback.
Locations of sensors are also indispensable requirement for many existing network traffic routing protocols. So,
sensor locations need to be identified at an acceptable level of accuracy.
There are two straightforward ways to inform a sensor about its absolute geographic location, manually
configuring it or equipping it with GPS, and neither is feasible. The former is not scalable and the latter is too
expensive to implement. An acceptable solution has to rely on a distributed collaborative localization process where
some of the nodes of the network are equipped with GPS to act as anchor nodes or beacons. These anchor nodes

* Corresponding author. Tel.: +61-3-5122-6138; fax: +61-3-5122-7137.
E-mail address: anindya.iqbal@monash.edu.

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.243

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

2227

determine their locations with the help of GPS and transmit these to other nodes in the vicinity. The non-anchor
nodes compute their locations based on these received beacon signals using a localization technique. There are
alternative ways of centralised approaches where location computation is done at sink node. These approaches
suffer from a single point of failure and traffic bottle-neck close to the sink. Hence distributed techniques are
preferred by researchers in recent times.
Localization process varies depending on how the beacon signal is received and used thereafter [1]. Range-based
techniques [2] try to estimate the absolute distance of sender and receiver by using one or more features of the
transmitted signal e.g., received signal strength, time of arrival, angle, etc. While these techniques are likely to
estimate sensor location accurately, they are quite vulnerable to environmental interference and signal fading, and
the hardware required for determining absolute distance from received signal is also expensive. To avoid these
shortcomings, range-free approaches avoid estimation of absolute distance and instead localize nodes from
constraints like wireless connectivity and anchor proximity. The major limitation of range-free approaches is
inaccuracy of location estimation as they only confine the possible location to the area of intersection of the fixed
range of received beacon signals. To increase accuracy, number of anchor nodes need to be increased, which
eventually increases the overall hardware cost. Accuracy of both the approaches is also affected by malicious anchor
nodes broadcasting false location [2], [3]. These shortcomings are addressed by using moving beacon in [4]-[10].
In techniques using moving beacon, a single mobile beacon periodically broadcasts its position in the vicinity
while traversing deployment area. If a non-anchor node receives beacon broadcast multiple times from different
positions, it is more or less similar to receiving beacons from multiple anchors. The arrival and departure constraints
of received beacons from upper and lower directions enable the sensor confine its potential location area [4]. The
accuracy of location estimate depends on the distribution of beacon locations used by the moving beacon.
Galstyan et al. [6] first introduced an elementary localization technique using a moving beacon where location of
a sensor is confined to the rectangular box bounded by a quadratic constraint from each received beacon signal.
Xiao et al. [9], [4] proposed a more comprehensive localization scheme by restricting beacon mobility along
horizontal and vertical lines only. However, the technique fails to attain the achievable accuracy as it considers the
beacons from upper and lower directions separately to define two potential areas and use the average of their centres
as the sensor location. Wu et al. [5] further refined this technique by introducing directional antennas with increased
hardware cost. Teng et al. [8] recently introduced a probabilistic method to estimate location from randomly moving
beacons and further refined the technique to reduce the number of beacon samples to achieve improved efficiency
and accuracy. Kushwaha et al. [10] presented a scheme with acoustic signal based ranging technique using time-offlight measurement. However, we have adopted radio signal strength based technique which is more widely used.
Moving beacons with auto-guided mobility such as a GPS-equipped transmitter on a robot is becoming a costeffective solution for sensor localization covering a vast terrain that require frequent recalibration of locations as
tiny sensor nodes may drift significantly over time due to wind, water flow, or other mobile entities such as grazing
animals. Considering the sophistication of the mobile unit (e.g., an expensive robot), it is desirable that the process
of localizing all sensor nodes is completed with the minimal beacon location density as well as minimal beacon
traversal distance to reduce localization delay, conserve beacon’s energy, and more importantly, save the expensive
moving beacon from excessive wear and tear.
In schemes using moving beacon, traversal path length and transmission frequency depend on localization. The
accuracy requirement is related to application scenario, e.g., military applications to monitor hidden explosives and
environment monitoring schemes have quite different tolerance level of location estimation error. Whereas, high
accuracy demands high beacon transmission density, low accuracy applications prefer conservation of energy used
by movement and transmission of beacon. To deal with this trade off, a novel demand driven movement strategy is
proposed in this paper where user can flexibly configure beacon’s movement parameters and thereby minimize
energy consumption or wear and tear.
When sensors are deployed with uniform random distribution, random mobility of the beacon node can be of
little benefit as observed in [4], [5]. In order to guarantee that the process is not biased to any specific region or
node, beacon locations must also be uniformly distributed and the moving beacon must move from one location to
one of the neighbouring unvisited locations along the most-direct straight-line path.
In this paper, we have considered three tessellations [11] (triangular, rectangular, and hexagonal) of beacon
locations to find an optimal beacon movement strategy to guarantee the expected maximum localization error within
a user-defined bound. To the best of our knowledge, this optimization problem has not been studied before. In the

2228

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

process of solving this problem, we have also developed a novel range-free distributed localization technique using
rectangular tessellation of moving beacon locations, which outperforms the state-of-the-art in [4]. Specific
contributions of this paper are as follows:
x Establishing that the rectangular tessellation of beacon locations is optimal among the three tessellations
considered in terms of localizing randomly deployed sensors with uniform distribution.
x Developing a range-free sensor localization technique by constructing innermost intersection region from the
received beacons and finding the centre of that region in such a way that the maximum distance of this centre
from any sensor within that region is the minimum.
x Formulating a number of optimization problems on demand-driven beacon movement strategy and solving these
NP-hard problems for finite-precision localization using the proposed localization scheme.
x Performing simulations to compare the proposed scheme against the state-of-the-art in [4] in realistic
environment where signal distortion is modelled by combined path loss and shadow fading.
The proposed scheme can ideally achieve target expected maximum localization error using as much as 50% less
beacon location density and 16% less beacon traversal path length, compared with [4] having the same
computational complexity. Conversely, the proposed scheme can achieve target beacon location density with
maximum 40% reduction in the expected maximum error. As analytical modeling of the mean localization error is
impossible, we had to use extensive simulations to show that our proposed scheme enjoys on average 29% and 16%
reduction in the mean localization error for ideal and realistic environment, respectively.
2. Optimal System Model
Sensors are deployed randomly in a field. The moving beacon traverses throughout the field and periodically
transmits omni-directional beacons consisting of its instantaneous location. If a node receives a beacon signal, it is
assumed to be within the radio transmission range ܴ of that beacon.
In a performance study of deployment factors in wireless mesh networks, Robinson and Knightly [11] observed
that the hexagonal tessellation requires double node density to achieve worst-case coverage probability identical to
that by the triangular or rectangular tessellations. Although localization of any sensor requires coverage from at least
two beacon locations, this observation is also valid in this context. Moreover, the optimal length of beacon traversal
path is 9% to 54% longer for the hexagonal tessellation compared to that for rectangular one, which can be shown as
follows:
With the rectangular tessellation of unit rectangle ο‫ ݔ‬ൈ ο‫ ݕ‬m2, ο‫ ݔ‬൑ ο‫ݕ‬, a geographic area of ‫ ܪ‬ൈ ܸ m2 can be
traversed optimally with path length of
௏

‫ܮ‬ோ௘௖ ൌ ‫ ܪ‬ൈ

ο௬

ൌ

ு௏
ο௬

݉.

(1)

With the hexagonal tessellation of the same worst-case coverage, unit hexagon of side ܾ ൌ ඥሺο‫ݔ‬ሻଶ ൅ ሺο‫ݕ‬ሻଶ Ȁʹ
must be used, as shown in Fig. 1. As two successive side traversal of ʹܾ m constitutes only ͵ܾȀʹm of horizontal
displacement and the height of the unit hexagon is ξ͵ܾ m, the optimal path length to traverse all the beacon
locations in the same geographic area will be
‫ܮ‬ு௘௫ ൌ

ு
ଷ௕Ȁଶ

ȉ ʹܾ ൈ

௏
ξଷ௕

ൌ

଼ξଷ

ு௏

ଽ ඥሺο௫ሻమ ାሺο௬ሻమ

݉.

(2)

Considering the two extremes, ο‫ ݔ‬ൌ ο‫ ݕ‬and ο‫ ا ݔ‬ο‫ݕ‬, we get
ସξ଺
ଽ

൑

௅ಹ೐ೣ
௅ೃ೐೎

൑

଼ξଷ
ଽ

Ǥ

(3)

Although no significant difference can be drawn on the triangular and rectangular tessellations [11] in terms of
optimal beacon node density and beacon traversal length, considering the simplicity of moving along horizontal and
vertical directions only, the latter is preferred as evidenced in the existing techniques [4], [5].

2229

ξሺ

ȟ

;൅

ȟ

;ሻ
Ȁ

ʹ

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

Fig. 1. Optimal traversal path of the moving beacon on rectangular and hexagonal tessellation of beacon loactions.

Another key observation in [11] is that moderate grid perturbation of (say) one-fifth inter-node distance has only
2% decrease in coverage area. We may then conclude that inaccuracies in positioning the moving beacon on exact
locations due to terrain irregularity will have little impact on the expected maximum localization error.
3. Determining Location of a Sensor
3.1. Localization Using Arrival and Departure Information
When the beacon moves along a path and transmits beacon, the sensors that fall within the transmission range
receives beacon signals. Depending on value of ο‫ ݔ‬andο‫ݕ‬, each sensor may receive multiple signals with respective
beacon position from both upper and lower directions.
From the signals received, the first and last one from each direction is significant in localization process. These
are termed differently in previous works from which we have adopted arrival and departure position (of beacon) for
the first and last received signals, respectively. The sensors also receive current value of ο‫ ݔ‬and ο‫ ݕ‬from beacon
transmission. So, it can also calculate the immediate position of the beacon before arrival and the immediate
position after departure. These are termed as pre-arrival and post-departure position, respectively. The mechanism,
by which a sensor may decide from which vertical direction a signal comes, is discussed in [4] and we refer readers
to that work for limited space.
3.2. Our Algorithms
We have devised Algorithm 1 to determine the Innermost Intersection Region (IIR) of pre-arrival, arrival,
departure, and post-departure beacon signals from both directions in a distributed way. Each sensor will use this
scheme to find its possible location area.
Representative points on each circle as mentioned in line 3 of Algorithm 1 refer to the points that will define the
intersection region. Its granularity is an implementation issue related to accuracy of area to determine or smoothness
of the arcs. In our implementation, the points were taken at angular distance of ͷι to compute areas. However, only
the intersecting points of participating circles provide the minimal set of representative points that are used to find
centres of these regions using a greedy heuristic presented in Algorithm 2.
Once an IIR is found, a sensor may reside at any point within this region. To specify the possible location, we
propose the polygon centre as defined below.
Definition 1: Centre point of a polygon is a point within that polygon such that maximum possible distance of
this centre from all points within or on the polygon is the minimum.
As the furthest point of any internal point of a polygon is one of its vertices, the following lemma holds.
Lemma 1: Centre point of a polygon is a point within that polygon such that maximum possible distance of this
centre from all vertices of the polygon is the minimum. That is, centre point of a polygon with n vertices ܸ ൌ
Ŷ
ሼ‫ݒ‬ଵ ǡ ‫ݒ‬ଶ ǡ Ǥ Ǥ Ǥ ‫ݒ‬௡ ሽ is ‫ ݌‬ൌ  ‫׊‬௤௢௡௢௥௜௡௦௜ௗ௘௉ ଵஸ௜ஸ௡ ԡ‫ ݍ‬െ ‫ݒ‬௜ ԡ.

2230

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

Algorithm 1 ܲூ = IIR( ‫) ܥ‬
Precondition: Set of eight equiradial circles of radius ܴ, ‫ ܥ‬ൌ ൛ܿ௕௣௔ ǡ ܿ௕௔ ǡ ܿ௕ௗ ǡ ܿ௕௣ௗ ǡ ܿ௧௣௔ ǡ ܿ௧௔ ǡ ܿ௧ௗ ǡ ܿ௧௣ௗ ൟ where
ܿ௕௣௔ ǡ ܿ௕௔ ǡ ܿ௕ௗ ǡ ܿ௕௣ௗ represent pre-arrival, arrival, departure, and post-departure circles, respectively, at the
bottom row and ܿ௧௣௔ ǡ ܿ௧௔ ǡ ܿ௧ௗ ǡ ܿ௧௣ௗ represent the same at the top row such that
ܿ݁݊‫݁ݎݐ‬൫ܿ௕௣௔ ൯௫ ൅  ο‫ ݔ‬ൌ ܿ݁݊‫݁ݎݐ‬ሺܿ௕௔ ሻ௫ ൑ ܿ݁݊‫݁ݎݐ‬ሺܿ௕ௗ ሻ௫ ൌ ܿ݁݊‫݁ݎݐ‬൫ܿ௕௣ௗ ൯௫ െ ο‫ݔ‬
ܿ݁݊‫݁ݎݐ‬൫ܿ௕௣௔ ൯௬ ൌ ܿ݁݊‫݁ݎݐ‬ሺܿ௕௔ ሻ௬ ൌ ܿ݁݊‫݁ݎݐ‬ሺܿ௕ௗ ሻ௬ ൌ ܿ݁݊‫݁ݎݐ‬൫ܿ௕௣ௗ ൯௬
ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣௔ ൯௫ ൅  ο‫ ݔ‬ൌ ܿ݁݊‫݁ݎݐ‬ሺܿ௧௔ ሻ௫ ൑ ܿ݁݊‫݁ݎݐ‬ሺܿ௧ௗ ሻ௫ ൌ ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣ௗ ൯௫ െ ο‫ݔ‬

ۗ
ۖ

ۘ
ۖ
ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣௔ ൯௬ ൌ ܿ݁݊‫݁ݎݐ‬ሺܿ௧௔ ሻ௬ ൌ ܿ݁݊‫݁ݎݐ‬ሺܿ௧ௗ ሻ௬ ൌ ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣ௗ ൯௬ ൌ ܿ݁݊‫݁ݎݐ‬൫ܿ௕௣௔ ൯௬ ൅  ο‫ۙݕ‬

Ǥ

Postcondition: Polygon ܲூ representing the intersection area such that any of its interior point ‫ ݌‬is interior to
circles ‫ܥ‬௕௔ ǡ ‫ܥ‬௕ௗ ǡ ‫ܥ‬௧௔ ǡ ‫ܥ‬௧ௗ , exterior to circles ‫ܥ‬௕௣௔ ǡ ‫ܥ‬௕௣ௗ ǡ ‫ܥ‬௧௣௔ ǡ ‫ܥ‬௧௣ௗ , and c݁݊‫݁ݎݐ‬൫ܿ௕௣௔ ൯௬ ൒ ‫݌‬௬ ൒ ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣௔ ൯௬ Ǥ
1. ܲூ ൌ ‫;׎‬
2. for each circle ܿ ‫ ܥ א‬do
3.
for each representative point ‫ ݌‬on ܿ do
4.
if ԡ‫ ݌‬െ ܿ݁݊‫݁ݎݐ‬ሺܿ௕௔ ሻԡ ൑ ܴ and ԡ‫ ݌‬െ ܿ݁݊‫݁ݎݐ‬ሺܿ௕ௗ ሻԡ ൑ ܴ and ԡ‫ ݌‬െ ܿ݁݊‫݁ݎݐ‬ሺܿ௧௔ ሻԡ ൑ ܴ and ԡ‫ ݌‬െ
ܿ݁݊‫ ܴ݀ݐܿ݁ݎݐ‬and ‫݌‬íܿ݁݊‫ ܴܽ݌ܾܿ݁ݎݐ‬and ‫݌‬íܿ݁݊‫ ܴ݀݌ܾܿ݁ݎݐ‬and ‫݌‬íܿ݁݊‫ ܴܽ݌ݐܿ݁ݎݐ‬and
ฮ‫ ݌‬െ ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣ௗ ൯ฮ ൒ ܴ and ܿ݁݊‫݁ݎݐ‬൫ܿ௕௣௔ ൯௬ ൑ ‫݌‬௬ ൑ ܿ݁݊‫݁ݎݐ‬൫ܿ௧௣௔ ൯௬ then
5.
ܲூ ൌ ܲூ ‫ ׫‬ሼ‫݌‬ሽ;
6.
end if
7.
end for
8. end for
௣೤
௣
9. Gravitational centre, ݃ܿ ൌ  ቀσ‫׊‬௣‫א‬௉಺ ȁ௉ೣȁ ǡ σ‫׊‬௣‫א‬௉಺ ȁ௉ ȁቁ Ǣ
಺

10. Sort ܲூ with respect to the angle induced by ݃ܿ.

಺

Algorithm 2 ‫݌‬௖ = POLYGON_CENTRE (ܸ)
Precondition: A polygon with ݊ vertices ܸ ൌ ሼ‫ݒ‬ଵ ǡ ‫ݒ‬ଶ ǡ Ǥ Ǥ Ǥ ‫ݒ‬௡ ሽ.
Postcondition: Centre point ‫݌‬௖ of the polygon such that the maximum
distance of ‫݌‬௖ from all vertices of the polygon is the minimum.
1. for each possible triangle ܶ௜ ‫ ܸ א‬ൈ ܸ ൈ ܸ do
‫݌‬௖ ൌ ௤‫א‬୘ୖ୍୅୒ୋ୐୉̴େ୉୒୘ୖ୉ሺ்೔ ሻ ଵஸ௜ஸ௡ ԡ‫ ݍ‬െ ‫ݒ‬௜ ԡ
2.
3. end for
Algorithm 3 ‫ݐ‬௖ = TRIANGLE_CENTRE (ܶ)
Precondition: A triangle ܶ.
Postcondition: Centre point ‫ݐ‬௖ of ܶ such that the maximum distance of ‫ݐ‬௖ from
all three vertices of ܶ is the minimum.
1. if ܶ is an obtuse triangle then
‫ݐ‬௖ = mid-point of the largest edge of ܶ;
2.
3. else
‫ݐ‬௖ = intersection point of perpendicular bisectors of the edges of ܶ;
4.
5. end if 
The TRIANGLE_CENTRE( ) function used in Algorithm 2 is defined in Algorithm 3. Note that actual
intersection region is a polygon of semi-circular arcs; whereas we have proposed estimating the centre of this area
using a polygon of straight lines having the same vertices. We now establish that no error is induced due to this.
തതതത ൅ ‫ ܤܣ‬represents the entire corresponding circle.
തതതത denote the complementary of arc ‫ ܤܣ‬such that ‫ܤܣ‬
Let arc ‫ܤܣ‬
തതതത is the corresponding major arc and vice
For example, if ‫ ܤܣ‬is the minor arc induced by chord ‫ ܤܣ‬to a circle, ‫ܤܣ‬
versa.
Lemma 2: Three arcs ‫ܤܣ‬, ‫ܥܤ‬, and ‫ ܣܥ‬represent an IIR only if they are inscribed in circle ‫ܥܤܣ‬.

2231

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

തതതത
‫ܤܣ‬

തതതത
‫ܤܣ‬

(a)

(b)

Fig. 2. Arc തതതത
‫( ܤܣ‬a) intersects BC and CA inside inscribed circle; (b) creates new IIR with BC and CA.

Proof. Of the three arcs, let arc ‫ ܤܣ‬be not inscribed in circle ‫ܥܤܣ‬. For each circle having ‫ ܤܣ‬as a chord, either
തതതത is now inscribed
the minor or the major arc, induced by ‫ܤܣ‬, will be exclusively inscribed in circle ‫ܥܤܣ‬. So, arc ‫ܤܣ‬
തതതത intersects with any of the arcs ‫ ܥܤ‬and ‫ ܣܥ‬inside circle ‫( ܥܤܣ‬see Fig. 2(a)), the region
in circle ‫ܥܤܣ‬. If this arc ‫ܤܣ‬
തതതത, ‫ܥܤ‬,
marked by arcs ‫ܤܣ‬, ‫ܥܤ‬, and ‫ ܣܥ‬can no longer represent an IIR. Otherwise, as the region defined by arcs ‫ܤܣ‬
and ‫ ܣܥ‬is fully enclosed in the region defined by arcs ‫ܤܣ‬, ‫ܥܤ‬, and ‫ܣܥ‬, the former will be an IIR instead of the
latter (see Fig. 2(b)). Hence, the lemma is proved by the transposition rule of inference.
Ŷ
Theorem 3: Centre point of an IIR, comprising a polygon of arcs, minimizing the distance from all vertices
coincides with the centre of a polygon of straight lines having the same set of vertices.
Proof. Any IIR represented by three arcs ‫ܤܣ‬, ‫ܥܤ‬, and ‫ ܣܥ‬are confined to circle ‫ ܥܤܣ‬by Lemma 2. As the centre
of circle ‫ ܥܤܣ‬is used as the centre of this IIR in Algorithm 3, no point in the boundary of this IIR can be further than
the radius of circle ‫ܥܤܣ‬. So, the theorem is proved for polygons of three arcs. As the centre of a polygon having
more than three arcs is calculated using all possible polygons of three arcs in Algorithm 2, the theorem holds for all
polygons in general.
Ŷ
Computational complexity of our location estimation technique differs marginally from the same in [4]. In fact
both the techniques are of constant order. Order of Algorithm POLYGON_CENTRE for a polygon with ݊ vertices
is ܱሺ݊ସ ሻ. Order of Algorithm IIR is constant as only eight circles are considered to find the intersection area, which
is represented by a polygon of at most eight vertices (empirically verified) and thus require only ܱሺͺସ ሻ operations to
find its centre. The location estimator in [4] considers two polygons of at most five vertices; centre of each is then
estimated in ܱሺͷሻ operations. Note that the order of Algorithm IIR, common in both the approaches, is dominant in
the whole process.
80
75
70

Ctpa
Cbd

65

Ctpd
Cba

60

Cta

Ctd
Cbpa

55

Cbpd

50
45
40
70

75

80

85

90

Fig. 3. Polygon center for different intersection regions drawn with our algorithms where ο‫ ݔ‬ൌ ܴȀͶ andο‫ ݕ‬ൌ ܴ.

2232

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235
y

q

p

(

)

Fig. 3 presents a programmatically drawn example of polygon centres for respective IIRs where the small circles
represent sensors’ location according to our proposed approach. One of the intersection regions is marked with
arrow in Fig. 3 and pre-arrival, arrival, departure, and post-departure beacon signals represented by circles from both
vertical directions are shown for this region. Although, the figure is drawn with ideal beacon transmission position
and circular shapes, our approach successfully work in realistic scenario as it actually works with intersecting points
of received beacons. This is supported by our simulation result presented in Section 5.
The way we have identified sensor location is quite different from the approach by Xiao et al. [4] where a
possible location is determined for each individual half arrival-departure overlap (HADO) areas separately and then
their midpoint is set as estimate position. In Fig. 4 this process is depicted with an example. The marker ‘o’ and ‘+’
refer to positions obtained from lower and upper HADOs, respectively and ‘*’ denotes the final sensor location
determined as the midpoint of two HADO centres. The IIR of these HADOs is pointed with arrow in this figure and
final sensor location must reside within this area. However, [4] failed to locate it within that area. Note that, they had
to work only for ܴand ʹܴhorizontal/vertical intervals with their centre computation scheme for specific shape of
HADO, which is a naive approach. We investigated both the schemes for a wide range of horizontal/vertical
intervals and thus formulated the novel demand-driven strategy.
For many intersection regions, our approach and that proposed in [4] produce same location, but in some cases
they give inaccurate estimation as depicted in Fig. 4 As we have already discussed, in reality sensors identifying an
intersection region reside at any point within it, it is not possible to theoretically estimate the average error of
തതതതതതത
localization. However, we may compute the expected maximum errorሺ‫ܧ‬
୫ୟ୶ ሻ of all regions for each set of values of
ο‫ ݔ‬andο‫ ݕ‬for both the approaches where
‫ܧ‬୫ୟ୶  ൌ σ‫୍׊‬୬୲ୣ୰ୱୣୡ୲୧୭୬୰ୣ୥୧୭୬ூ σ

஺௥௘௔ሺூሻ
‫౅׊‬౤౪౛౨౩౛ౙ౪౟౥౤౨౛ౝ౟౥౤಻ ஺௥௘௔ሺ௃ሻ

 ൈ ୴ୣ୰୲ୣ୶௩୭୤ூ ԡܱܲ‫ܧܴܶܰܧܥ̴ܱܰܩܻܮ‬ሺ‫ܫ‬ሻ  െ ‫ݒ‬ԡ

(4)

For the approach proposed by Xiao et al. [4], to compute ‫ܧ‬୫ୟ୶ ௫௜௔௢ their corresponding estimated sensor location is
considered in place of ܱܲ‫ܧܴܶܰܧܥ̴ܱܰܩܻܮ‬ሺ‫ܫ‬ሻ.
4. Demand-driven Beacon Movement Strategies
Quality of localization can be estimated as the mean localization error or the expected maximum localization
error or the average area of intersection, to name a few. It is, however, impossible to model the mean localization
error in any analytical framework. As the rectangular tessellation of beacon locations is shown optimal in Section 2
in terms of both beacon location density and beacon traversal path length to achieve a target worst-case coverage,
we are interested in the following two optimization problems on the rectangular tessellation:
ு௏
തതതതതത
‫܍ܢܑܕܑܖܑܕ‬ǡ ο௫ο௬ ǡ ‫ܧ‬
୫ୟ୶ ൑ ܶୣ୰୰୭୰ Ǥ

80
75
70
65
60
55
50
45
40
60

65

Fig. 4. An example scenario of sensor location found by [4].

70

75

80

85

90

95

100

(5)

2233

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

4000
3000
2000
1000
0

Our approach
Xiao's approach

25
Beacon path traversal (km)

Beacon location density (per km2 )

5000

Expected maximum localization error (m)

26
Our approach
Xiao's approach

6000

24
23
22
21
20
19
18

6

8

10
12
14
16
Expected maximum localization error (m)

18

17

6

6.5

7

7.5

8

8.5

Expected maximum localization error (m)

(a)

9

12
Our approach
Xiao's approach

10
8
6
4
2
0
1000

2000

3000

4000

5000

6000

Beacon location density (per km2 )

(b)

(c)

Fig. 5. Comparison between proposed and Xiao’s [4] schemes on (a) Beacon location for different expected maximum error target; (b) Beacon
traversal path length for different expected maximum error target; (c) Expected maximum localization error for different beacon density.
ு௏

തതതതതത
‫܍ܢܑܕܑܖܑܕ‬ǡ ο௬ ǡ ‫ܧ‬
୫ୟ୶ ൑ ܶୣ୰୰୭୰ Ǥ

(6)

where ܶୣ୰୰୭୰ is a user-defined error threshold. There are many similar optimization problems that have been
considered but not reported in this paper due to lack of space. For example, instead of seeking the expected
maximum localization error within a threshold, the user might be interested in guaranteeing the average area of
intersection within a threshold.
As all these problems are NP-hard, instead of finding any closed-form solution, we have to look at their restricted
versions where ο‫ ݔ‬and ο‫ ݕ‬are constrained with finite precision. With finite precision, it is possible to consider a
finite number of possible values for ο‫ ݔ‬and ο‫ ݕ‬to populate a table of quality of localization estimators such as the
expected maximum localization error and the average area of intersection. Solving any of the abovementioned
optimality problems is then translated to simply inspecting this off-line table to find the optimal setup satisfying the
given constraint.
Fig. 5(a) and (b) present comparative performance of our proposed and Xiao’s [4] schemes in terms of beacon
location density and beacon traversal path length, respectively, against demand-driven ‫ܧ‬୫ୟ୶ values. In both cases,
the proposed scheme shows considerable superiority achieving target error using as much as 50% less beacon
location density and 16% less beacon traversal path length.
For the sake of completeness, we have also included solution to the dual of the optimization problem in (5),
formulated as
ு௏

തതതതതത
‫܍ܢܑܕܑܖܑܕ‬ǡ ‫ܧ‬
୫ୟ୶ ǡ ο௫ο௬ ൑ ܶୢୣ୬ୱ୧୲୷ Ǥ

(7)

Fig. 5(c) presents comparative performance on the above optimization problem. Again, the proposed scheme shows
considerable superiority achieving target beacon location density with expected maximum localization error as
much as 40% less.
5. Simulation
Although our proposed location estimator is designed to minimize the maximum error, its performance
evaluation in terms of minimizing mean error of randomly placed nodes is highly significant as that represents the
practical scenario. Our approach is likely to perform well in this consideration as well against Xiao’s approach [4]
which estimates sensor locations, in many cases, outside the intersection areas; whereas our approach always
confines locations within the intersections areas; in the extreme on their boundaries. To validate this by comparing
the performance of our proposed localization technique with that of Xiao’s we simulated WSNs in MATLAB.
Performance is also compared in realistic environment where path loss and shadow fading increases localization
error. All the results presented here are computed from average of 100 simulation runs.

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

7

7

6

6

6

5
4
3
2
1

Our approach
Xiao's approach
10

15

20
'x

25

(a)

30

L o c a liz a t io n e rro r

7

Localization error

L ocalizatio n error

2234

5
4
3
2

Our approach
Xiao's approach
10

15

20
'x

(b)

25

30

5
4
Our approach
Xiao's approach

3
2

10

15

20
'x

25

30

(c)

Fig. 6. Localization error for different ο‫ ݔ‬values when (a) no fading effect, (b) ɀ ൌ ʹ and ߪ ൌ Ͷ, and (c) ɀ ൌ ͵ and ߪ ൌ ʹǤͷǤ

5.1. Simulation Setup
We have considered wireless sensors deployed in a representative area where all possible types of intersection
regions from transmitted beacon signals are available. To accommodate all shapes the total representative area
varied with ο‫ݔ‬Ǥ To keep sensor density uniform despite variable areas, we placed number of nodes 10 times the area
in square meters each time. The maximum transmission range of this beacon isܴ ൌ ͶͲ. These nodes receive beacon
signals and compute own location from those.
To model realistic environment where sensors may miss some of the arrival or departure beacon signals due to
wireless signal attenuation, we used combined path loss and shadow fading. Transmission beacon of radius ܴ may
be affected according to (8) where the path loss component ɀ is assumed to be 2, which is standard for free space
propagation. The standard deviation ߪof normally distributed random shadow fading for free space propagation is
considered 4 dB [2] when high fading is present. We have also experimented in high path loss and low fading
environment considering ɀ ൌ ͵ and ߪ ൌ ʹǤͷ dB. The mean distance affected by fading is used from [2] as:
߳ҧ ൌ ൬ͳ െ ͳͲ

഑
భబം

ି

൰ ܴ.

(8)

Each arc of intersecting polygons have ߳ҧ width of areas potentially affected by fading spreading equally in both
sides of the arc. Hence, within a region the probable affected area’s width may be approximated as ߳ҧȀʹalong all
arcs. Since shadow fading affects a transmission signal in Gaussian distributed way with mean Ͳ, a sensor node
within this area again has equal probability of being actually affected or not. We have used uniform random
probability to determine if a sensor within this area is affected, i.e. misses either arrival or departure signal and then
the sensor will consider itself to reside in the adjacent region. Consequently, centre of the adjacent region will be
estimated as its location and consequently localization error is likely to increase.
5.2. Results and Discussion
Localization techniques are evaluated by their induced error both in ideal environment and realistic one. In the
abovementioned simulation setup we tested our approach and that of Xiao [4] varying path loss or shadow fading
parameters.
Fig. 6(a) presents mean localization error in ideal environment with no fading effect. The beacon transmission
intervals varied as ο‫ ݔ‬ൌ ܴȀͶ to͵ܴȀͶ when ο‫ ݕ‬ൌ ܴ. These ο‫ ݔ‬values are reasonable since shorter values cause very
frequent transmissions incurring high cost. Moreover, created IIRs for these values are of such areas that small part
of the area has the risk of missing the arrival/departure beacons. That’s why in our experiment, we considered only
one signal may be missed by a sensor at any instance. Localization error increased for both the approaches with
increase in ο‫ ݔ‬and this is explainable by the consequent increase in size of IIRs. We perform better in all instances
with mean gain more than 29%.

Anindya Iqbal et al. / Procedia Computer Science 4 (2011) 2226–2235

2235

Fig. 6(b) shows performance of both approaches in high fading scenario. Although we outperform Xiao’s
approach in all cases, the margin of mean gain is reduced to 12.5%. The reason is comprehensible from the
observation that the regions (refer to Fig. 4) have a pattern where every region asymmetric with respect to x-axis is
surrounded by symmetric regions and Xiao’s centres are mostly affected for these asymmetric regions. As we
showed that some of Xiao’s centres go outside the corresponding intersection region, it goes close to centre of the
one of its adjacent regions. Recall here that due to fading, a sensor takes the location of adjacent centre. Hence, for
the sensors near the common arc with this adjacent region, Xiao’s centre is close to the fading-affected centre.
Consequently, in such cases Xiao’s approach has less error increase compared to that of ours. Fig. 6(c) shows
similar performance when path loss is high and fading is low. Here our mean gain is almost 16%.
6. Conclusion
In this paper we have presented a moving beacon-aided range-free localization scheme which follows a novel
demand-driven optimal movement strategy to conserve localization time and cost of unnecessary path traversal and
beacon transmissions. The beauty of our technique is the flexibility with which the beacon may dynamically decide
movement parameters on user demand. Our scheme achieves as much as 40% improvement in terms of the expected
maximum localization error and on average 29% reduction in the mean error with uniformly distributed random
sensor deployment compared to the state-of-the-art [4] without increase in computational complexity. In realistic
environment also, modelled with fading and path loss, the superiority is retained at reduced level. In future we may
compare our scheme with other approaches such as where beacon itself computes location and then transmit it.
References
1.
2.

G. Mao, B. Fidan, and B. Anderson, “Wireless sensor network localization techniques,” Computer Networks, 51(10)(2007), 2529–53.
A. Iqbal and M. Murshed, “Attack-Resistant Sensor Localization under Realistic Wireless Signal Fading,” In Proc. of IEEE Wireless
Communication and Networking Conf. (WCNC), 2010.
3.
A Srinivasan and J Wu, “A survey on secure localization in wireless sensor Networks,” Computer Networks, 52(12)( 2008).
4.
B. Xiao, H. Chen, and S. Zhou, “Distributed localization Using a Moving Beacon in Wireless Sensor Networks,” IEEE Transactions on
Parallel and Distributed Systems, 19(5)(2008).
5.
Y-H. Wu and W-M Chen, “Localization of Wireless Sensor Networks Using a Moving beacon with Directional Antenna,” In Proc. of IEEE
Intl. Conf. on High performance Computing and Communications (HPCC), 2009.
6.
A. Galstyan, B. Krishnamachari, K. Lerman, and S. Pattem, “Distributed Online Localization in Sensor Networks Using a Moving Target,”
In Proc. of Intl. Symposium of Information Processing in Sensor Networks (IPSN), 2004.
7.
N. Priyantha, H. Balakrishnan, E. Demaine, and S. Teller, “Mobile-Assisted Localization in Wireless Sensor Networks,” In Proc. of IEEE
Intl. Conf. on Computer Communications (Infocom), 2005.
8.
G. Teng, K. Zheng, and W. Dong, “Adapting Mobile Beacon-Assisted Localization in Wireless Sensor Networks,” Journal of Sensors,
9(2009), 2760–79.
9.
B. Xiao, H. Chen, and S. Zhou, “A Walking beacon Assisted Localization in Wireless Sensor Networks,” In Proc. of IEEE Intl. Conf. on
Communications (ICC), 2007.
10. M. Kushwaha, K. Molnar, J. Sallai, P. Volgyesi, M. Maroti, and A. Ledeczi, “Sensor Node Localization Using mobile Acoustic Beacons,”
In Proc. of IEEE Conf. On Mobile Ad-hoc and Sensor Systems (MASS), 2005.
11. J. Robinson and E. Knightly, “A Performance Study of Deployment Factors in Wireless Mesh Networks,” In Proc. of IEEE Intl. Conf. on
Computer Communications (Infocom), 2007.

