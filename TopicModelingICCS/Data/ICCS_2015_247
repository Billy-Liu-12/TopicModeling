Procedia Computer Science
Volume 51, 2015, Pages 2583–2592
ICCS 2015 International Conference On Computational Science

Dynamic Data Driven Sensor Network Selection and
Tracking
Ioannis D. Schizas1 and Vasileios Maroulas2
1

University of Texas at Arlington, Department of Electrical Engineering, Arlington, TX, U.S.A.
schizas@uta.edu
2
University of Tennessee at Knoxville, Department of Mathematics, Knoxville, TN, U.S.A.
maroulas@math.utk.edu

Abstract
The deployment of networks of sensors and development of pertinent information processing techniques
can facilitate the requirement of situational awareness present in many defense/surveillance systems.
Sensors allow the collection and distributed processing of information in a variety of environments
whose structure is not known and is dynamically changing with time. A distributed dynamic data
driven (DDDAS-based) framework is developed in this paper to address distributed multi-threat tracking
under limited sensor resources. The acquired sensor data will be used to control the sensing part of the
sensor network, and utilize only the sensing devices that acquire good quality measurements about the
present targets. The DDDAS-based concept will be utilized to enable eﬃcient sensor activation of only
those parts of the network located close to a target/object. A novel combination of stochastic ﬁltering
techniques, drift homotopy and sparsity-inducing canonical correlation analysis (S-CCA) is utilized to
dynamically identify the target-informative sensors and utilize them to perform improved drift-based
particle ﬁltering techniques that will allow robust, stable and accurate distributed tracking of multiple
objects. Numerical tests demonstrate the eﬀectiveness of the novel framework.
Keywords: Multi-target tracking, sensor network, distributed processing, sparsity, drift homotopy, particle ﬁltering

1

Introduction

Sensor networks facilitate the collection and distributed processing of information in a variety of diﬀerent environments including buildings, industrial facilities, residences, transportation systems, etc. [24].
Such infrastructure oftentimes is prone to threats that may be generated due to human errors, structural
and functional defects, or even malicious attacks. Thus, it is essential to design resource-eﬃcient distributed target localization and tracking algorithms that are computationally simple and comply with the
limited resources across sensors, while they provide situational awareness [5].
Existing tracking algorithms for sensor networks (SNs) either require all sensors in the network to
be operational [1,28,29], or they are developed for ﬁxed data models and do not utilize the sensor data to
update their measuring process [1, 25, 28, 29, 36]. However, using all the available sensor measurements
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.366

2583

Dynamic Data Driven Sensor Network Selection and Tracking

Schizas and Maroulas

in a sensor network (SN) may degrade the tracking performance since it is not clear which sensors
have good quality (information-bearing) measurements and which sensors have noisy data. Existing
approaches focus on identifying informative sensors in the presence of a single threat whose location
and statistical behavior is known [8, 35]. Here we utilize the concept of Dynamic Data Driven Applications Systems (DDDAS) [12, 13] and employ the sensor data to identify the informative sensors, and
control/adjust via proper feedback the part of the network that should remain active and perform data
acquisition and advanced target tracking techniques.
Sensor measurements that contain information about the same threat are correlated. This property
translates to a sparse (multiple zeros) sensor data correlation structure that will be exploited to determine
target-informative sensors that will keep acquiring data for tracking the present targets. Canonical correlation analysis (CCA) [6,19] is combined with sparsity imposing regularization techniques [33,37,38]
to obtain a framework that can extract correlated sensor measurements and identify diﬀerent groups of
sensors that acquire information about the same targets. The proposed sparse CCA framework will be
a DDDAS mechanism that identiﬁes which measurements are relevant and useful and which sensors
should be remain active and acquire tracking data.
Once the target-informative sensors have been identiﬁed, their measurements will be used to accurately and reliably track the corresponding targets. Targets in general have a time-varying probabilistic
behavior due to fast mobility and noise. Thus, it is essential to develop eﬀective tracking algorithms
that monitor how the probabilistic behavior of the targets changes across time. Existing particle ﬁltering
schemes [2,18] require a large number of particles to determine the probabilistic behavior of the present
threats, while the majority of them resort in statistically insigniﬁcant regions. Further, the accuracy of
the generic particle ﬁlters deteriorates in the presence of multiple threats that move closely to each other.
Drift homotopy, see e.g., [26], is employed in this work to resolve issues that are present in the sampling
process of the generic particle ﬁlter and improve the tracking performance of multiple targets. A novel
approach is proposed here that has the potential to reduce the number of particles acquired across the
limited-resources sensors.

2

Problem Setting

Consider a network of sensors consisting of p sensors that monitor a ﬁeld of interest. For example, there
are p = 12 sensors in Fig. 1. Each sensor, say the S j , acquires at time instant t = 0, 1, 2, . . . a scalar
measurement denoted as z j (t). Fig. 1 depicts a setting where r = 2 threats (the blue and yellow dots)
are present, located at the unknown positions x1 (t) and x2 (t) at time instant t. The threats emit signals
which are quantiﬁed by the random scalars s1 (t) and s2 (t), respectively. The probabilistic distribution of
the aforementioned signals is not known. For instance, in Fig. 1, the signals emitted from the ﬁrst threat
and the second threat aﬀect the measurements of sensors S 3 , S 6 , S 10 and S 5 , S 10 , S 12 , respectively. The
blue and yellow shaded regions in Fig. 1 indicate the ﬁeld regions that are aﬀected by the two threats.
Note that sensor S 10 is aﬀected by both threats s1 and s2 . It is clear that among the 12 sensors present
in the ﬁeld less than half of them acquire informative measurements. Thus, it is of interest to utilize and
process the sensor data zt := [z1 (t), . . . , z p (t)]T acquired over time t = 1, 2, . . ., to dynamically identify
sensors that acquire informative measurements about the ﬁeld threats and can be used to subsequently
track the threats signals, position and so on. This will be done by using the sensor measurements to learn
the underlying ﬁeld correlation structure and analyze it into sparse factors. The sensor measurements
zt are related to the threat locations and signals {xρ (t), sρ (t)}rρ=1 (e.g., r = 2 in Fig. 1) via the following
stochastic nonlinear mapping [9, 23],
zt =
2584

r
ρ=1

hρ (xρ (t), sρ (t)) + wt ,

(1)

Dynamic Data Driven Sensor Network Selection and Tracking

Schizas and Maroulas

Figure 1: A ﬁeld with r = 2 threats/sources monitored by a network of p = 12 sensors.

where wt denotes zero-mean white sensing noise with variance σ2w . The driving sensing noise quantiﬁes
the uncertainty and random perturbations present at the sensors during the data acquisition process.
Each vector hρ (xρ (t), sρ (t)) ∈ R p×1 with ρ = 1, . . . , r denotes an unknown regression vector that has
nonzero entries in positions that correspond to these sensors whose measurements are aﬀected by the
presence of the zero-mean threat signal sρ (t). The nonzero entries quantifying how strong is the threat
signal, see e.g., signal propagation models in [17], these at a given sensor are given as
hρ [ j] = sρ (t) xρ (t) − xS j

−α
2 ,

where xS j is the known position of sensor S j and α is the attenuation coeﬃcient due to wireless propagation. For instance in Fig.1, the vector h1 will have nonzero entries only in positions 3, 6, 10 and
the regressor h2 in positions 5, 10, 12. The remaining regression vector entries are zero (in practice
these entries will have small-amplitude values) since the sensors are either far away from the threats,
causing the propagation medium to signiﬁcantly attenuate the threat signals. Hence the corresponding
non-informative sensors mainly acquire sensing noise. It becomes apparent that the set of indices of
the nonzero entries in the regression vectors hρ (also called support) indicates which sensors acquire
measurements that contain information about a threat. These sensor measurements will be used to perform more sophisticated and accurate tracking, while the rest of the sensors that have irrelevant to the
threat information will become idle and will not be used during tracking to preserve the limited sensor
resources. As per the DDDAS concept, the sensor data will be employed here to dynamically identify and keep active the informative part of the sensor network which will be responsible for acquiring
new data. Such a strategy can increase the life expectancy of the sensor network by matching the SN
topology to the ﬁeld spatiotemporal structure. Thus, it is crucial to devise techniques that are capable to
estimate/track the support of the sparse regression vectors hρ , for ρ = 1, . . . , r.
The support of the regression vectors in (14) aﬀects the sensor measurements covariance matrix
Σz (t)

E[(zt − μz )(zt − μz )T ],

(2)

E[zt ]. The support of each hρ indicates which
where E[·] denotes statistical expectation while μz
sensor measurements in zt observe the same threat signal sρ (t) and therefore are statistically correlated.
Thus, by extracting r diﬀerent groups of correlated sensor measurements in zt , the support of each hρ (·)
can be recovered.
2585

Dynamic Data Driven Sensor Network Selection and Tracking

3

Schizas and Maroulas

Data Driven Sensor Network Selection

Sensor measurements that contain information about the same threat/target are statistically correlated no
matter what the underlying data model is. Such a property translates to a sparse (multiple zeros) sensor
data correlation structure that will be exploited to determine threat-informative sensors that will keep
acquiring data for tracking the present threats/targets.

3.1

Preliminaries

A brief outline of the standard CCA framework, necessary to build our novel framework, is given next.
N−1
∈ R p×1 the CCA framework is utilized to linearly extract comGiven zero-mean data pairs {z+t , z−t }t=0
mon features from two data sequences z+t and z−t [6, 19, Chpt. 10]. This is done by looking for matrices
G, H ∈ Rq×p with q ≤ p that minimize the following cost
ˆ H)
ˆ = arg min N −1
(G,
G,H

N−1
t=0

Gz+t − Hz−t 22 , s. to GΣˆ z+ z+ GT = I, HΣˆ z− z− HT = I,

(3)

where · 2 denotes the Euclidean norm, while the sample-average estimate for the covariance matrix of
z+τ is given in eq. (4) below:
N−1 + + T
Σˆ z+ z+ := N −1 τ=0
zτ (zτ )
(4)
ˆ and H
ˆ can be found in,
The covariance matrix Σˆ z− z− is deﬁned similarly. A closed-form solution for G
e.g., [6, pg. 370]. Intuitively, CCA can be viewed as a way to recover a common source, say s(t) ∈ Rr×1 ,
which is present in both sequences z+t and z−t . Using zt we construct the following two data sequences
z+t := zt − μz (t), and z−t := zt−1 − μz (t)

(5)

where μz (t) := t−1 t−1
τ=0 zτ corresponds to the sample-average estimate of the ensemble expectation of
zt , namely E[zt ]. The past and future sequences z+t and z−t are related though the sources sm (t).

3.2

Sparsity-Inducing Canonical Correlations

Our idea for recovering the support of the underlying factors hρ (t), is to identify correlated groups of
sensor measurements in zt and inducing proper sparsity patterns in the estimated matrices G and H. For
simplicity in exposition it is further assumed that i) the probabilistic distribution of the threat positions
and signals {xρ (t), sρ (t)} is stationary (time-invariant); and ii) the threat signals sρ (t) are uncorrelated.
The proposed sparsity-inducing CCA (S-CCA) formulation involves the estimation of pertinent r × p
matrices G and H using the following minimization formulation
ˆ H)
ˆ = arg minN −1
(G,
G,H

N−1
t=0

Gz+t − Hz−t

+ μ I − GΣˆ z+ z+ GT

2
F

2
2

+

q
=1 (λG,

G

,: 1

+ ν I − HΣˆ z− z− HT

2
F,

+ λH, H

,: 1 )

(6)

where · 1 and · F denote the norm-one and the Frobenius norm respectively, λG, and λH, are
positive constants tuning the number of zeros in the th row of H and G, namely H ,: and G ,: ; while the
ˆ +t and Hz
ˆ −t are uncorrelated.
parameters μ > 0 and ν > 0 make sure that the canonical variates in Gz
The ﬁrst, third and fourth terms in (6) are also present in standard CCA [6]. The reason for making
ˆ z+t and H¯
ˆ z−t as similar as possible in (6) is that both estimate the threat signals present in z+t
vectors G¯
−
and z¯ t , namely s(t). The novel norm-one regularization term in (6) induces sparsity in the rows of H and
G in order to determine which entries in zt observe the same threat/target, or just sense noise. In detail,
ˆ +t and Hz
ˆ −t estimates one of the threat signals sρ (t). For instance, in the two-threat setting
each entry in Gz
2586

Dynamic Data Driven Sensor Network Selection and Tracking

Schizas and Maroulas

ˆ +t has two entries one of which estimates s1 (t) and the other one estimates s2 (t).
considered earlier, Gz
ˆ +t and Hz
ˆ −t estimates s1 (t) and recall that only measurements 3, 6, 10
Assume that the ﬁrst entry in Gz
in zt contain information about threat s1 (t). Thus, the corresponding norm-one term in (6) is utilized to
ˆ 1,: , except the entries with indices 3, 6, 10.
ˆ 1,: and G
induce zero values in all entries of the ﬁrst row H
ˆ 2,: are expected to have nonzero
ˆ 2,: and G
Similarly, the second row of the two following matrices H
entries only at locations 5, 10, 12 that correspond to these sensor measurements in zt sensing threat s2 (t).
Thus, the support of the factors hρ (or equivalently the threat-informative sensors) can be determined by
ˆ in the S-CCA framework. The distributed sparsity-inducing
ˆ and G
ﬁnding the support of the rows in H
CCA framework in (6) is derived by combining block coordinate descent (BCD) techniques [3] along
with the alternating direction method of multipliers (ADMM) [4,32]. Details (omitted here due to space
considerations) on tackling (6) can be found in [10, 11].

4

Drift-Homotopy Based Tracking

Once the information bearing sensors have been identiﬁed via the S-CCA framework, a sophisticated
tracking technique will be applied next for monitoring objects moving in a nonlinear fashion. From a
mathematical point of view, tracking of multiple objects is an inherently diﬃcult problem and consists
of computing the best estimate of the objects’ trajectories based on noisy sensors measurements. In
other words, denoting the sequence of acquired from the SN data by z1:t = {z1 , · · · , zt }, the conditional
expectation E(xt |z1:t ) or equivalently the posterior ﬁltering distribution p(xt |z1:t ) need to be estimated.
The greater the number of objects that are being tracked, the more complicated the tracking algorithm
becomes. Following a Bayesian recursion, the posterior ﬁltering distribution at time t is given by
p(xt |z1:t ) =

p(zt |xt )p(xt |z1:t−1 )
,
p(zt |z1:t−1 )

(7)

where p(xt |z1:t−1 ) = p(xt |xt−1 )p(xt−1 |z1:t−1 )dxt−1 is the predictive distribution given by the ChapmanKolmogorov equation. The predictive distribution relies on the Markov transition density, p(xt |xt−1 ),
which encapsulates the dynamics of the threats. The likelihood function, p(zt |xt ), depends on the underlying observation model. Particle ﬁltering is a sequential importance sampling method where one
could choose as the importance reference density the predictive distribution p(xt |z1:t−1 ). Consequently,
the following approximation for the conditional expectation is given by
N

E(xt |z1:t ) ≈

w¯ n,t xn,t ,

(8)

n=1

where w¯ n,t are the normalized weights deﬁned by p(zt |xn,t )/

N
n=1

p(zt |xn,t ) and xn,t is the nth sample from

the importance distribution, p(xt |z1:t−1 ), at time t. Most particles have a negligible weight as time progresses and several resampling schemes have been proposed to remedy this matter, see e.g., [2, 7, 15].
Particle ﬁlter’s framework is easy to implement and it is very popular due to the fact that it can handle
nonlinear and/or non-Gaussian scenarios. However, the particle ﬁltering even with the resampling step
requires a great number of samples to approximate the ﬁltering density of equation (7). It is common
in practical applications especially related to rare event transitions [21, 22, 26, 27] to propagate samples
which do not lie in statistically signiﬁcant regions. Some authors, e.g. [16], have suggested the use of
an extra MCMC step after the resampling step, which can help move more samples into statistically
signiﬁcant regions. There are many possible ways to append an MCMC step after the resampling step
in order to achieve this objective. The important point is that the MCMC step must preserve the nature
of the posterior ﬁltering distribution given in eq. (7).
2587

Dynamic Data Driven Sensor Network Selection and Tracking

Schizas and Maroulas

Adopting the strategy of [26], we establish a novel MCMC particle ﬁltering algorithm enhanced
by drift homotopy for the multi-target tracking problem which assimilates the data acquired by the
information bearing sensors which were identiﬁed by the S-CCA framework. Suppose that the threats’
dynamics are given by eq. (9),
(9)
xt = a(xt−1 ) + ut−1 ,
where a, σ are appropriate functions which depend on the nature of the problem and ut−1 is the driving
noise, e.g. normally distributed. We conclude from (9) that the dynamics are governed by a deterministic
term (function a in our case), called drift, and the stochastic part, which is the noise, ut−1 . Next, suitably
modiﬁed dynamics are considered as follows,
xt = a˜ (xt−1 ) + ut−1 ,

(10)

where a˜ is an appropriate function which facilitates the sampling. Moreover, based on the original
dynamics of equation (9) and the modiﬁed dynamics given in equation (10) we consider a system of
L + 1 levels of dynamics,
xt = (1 − )˜a(xt−1 ) + a(xt−1 ) + ut−1 ,
(11)
where 0 ≤ ≤ 1 and 0 = 0, L = 1. One may easily verify that when = 0, the modiﬁed dynamics
described by equation (10) are in eﬀect. By the same token, as the term increases and reaches the
terminal level L, eq. (11) corresponds to the original dynamics of eq. (9). The posterior ﬁltering distribution given in equation (7) is preserved if one samples from the product of densities, p(zt |xt )p(xt |xt−1 ),
where xt−1 is given in the aforementioned modiﬁed resampling step. However, instead of using the transition density p(xt |xt−1 ) encapsulated in the threats’ dynamics in Eq. (9), we begin with a sample from
(11) for = 0 (i.e.. from the modiﬁed eq. (10)) and through MCMC we sample the product
p(zt |x0t )p(x0t |xt−1 ).

(12)

We keep the last sample based on the MCMC step of equation (12) and we use it as an initial condition
for the next level. We proceed similarly by sampling from the product of densities p(zt |xt )p(xt |xt−1 ),
until the last sampling at L level which corresponds to the original dynamics. The levels from 0 to L − 1
are auxiliary and they just provide a better initial condition for the MCMC step at the terminal level L.
Remark: The homotopy strategy established in [14] is employed at the densities level in contrast to our
method which is employed at the dynamics level. In detail, the homotopy in [14] was utilized in order
to ﬁnd an appropriate ordinary diﬀerential equation (ODE) to implement the Bayes rule rather than the
pointwise multiplication of two functions as in the denominator of eq. (8), namely the product of the
prior density with the likelihood. The system of ODEs relates the several diﬀerent levels and involves a
generalized inverse matrix which can be ill-conditioned.
The drift homotopy algorithm is tested and compared with standard particle ﬁltering on a setting
with 6 targets. The dynamics of the targets were given via the near constant velocity model, which is a
standard approach for multi-threat tracking problems, e.g. [31]. The nonlinear observation model used
in the numerical example involved the bearing and range of the targets. Fig. 2a and Fig. 2b show the
evolution on the plane of the true targets, the observations, and the estimates of the generic and drift
homotopy (DH) MCMC particle ﬁlter, respectively. It is obvious from the ﬁgures that the DH-MCMC
particle ﬁlter accurately follows the threats and there is no ambiguity in the identiﬁcation of the threat
trajectories. On the other hand, the accuracy of the generic particle ﬁlter’s estimate deteriorates fast.
This rapid loss of accuracy is a manifestation of the “curse of dimensionality" [34].

5

Joint Sensor Selection and Tracking

Next, it is described how the DH-MCMC PF unit and the sensor selection scheme in Sec. 3 interact
to enable tracking using only target-informative sensors in the SN. Speciﬁcally, during a start-up stage
2588

Dynamic Data Driven Sensor Network Selection and Tracking

Schizas and Maroulas

12000

12000

True Position
Particle filter estimate
Observations

10000

10000

8000

8000

y coordinate

y coordinate

True Position
Particle filter estimate
Observations

6000

6000

4000

4000

2000

2000

0
2000

3000

4000

5000

6000
7000
x coordinate

8000

9000

10000

11000

(a) Generic particle ﬁlter with 5000 samples

0
2000

3000

4000

5000

6000
7000
x coordinate

8000

9000

10000

11000

(b) DH-MCMC particle ﬁlter with 25 samples

Figure 2: The solid grey lines denote the true threat tracks, the black lines with crosses denote the
observations, and the colored lines the conditional expectation estimates.

each sensor acquires T s measurements, namely {z j (τ)}0τ=−(T s −1) used to initialize the sets of informative

0
sensors {Iρ0 ,0 }rˆ(0)
=1 acquiring information about target ρ , where each ρ ∈ {1, . . . , R} for = 1, . . . , rˆ(0),
and rˆ(0) is the estimated number of r(0) sensed targets at time t = 0. One sensor in each set Iρ0 ,0
becomes a leading sensor Cρ0 ,0 which collects from all other sensors in j ∈ Iρ0 ,0 their corresponding
measurements z j (0) and their position xS j . During initialization the leading sensor Cρ0 ,0 can be selected
randomly among the sensors in Iρ0 ,0 . Each leading sensor Cρ0 ,0 calculates an average location of the
sensors in Iρ0 ,0 to initialize the PF which use only the informative measurements z j (0), for j ∈ Iρ0 ,0 .

Suppose that at time t each leading sensor {Cρ ,t } has available state estimates xˆ ρ (t) for = 1, . . . , rˆ(t)
obtained from the DH-MCMC PF in Sec. 4. The leading sensor Cρ ,t transmits the state estimates xˆ ρ (t)
to its single-hop neighbors, which will subsequently transmit to their own neighbors and the estimate
propagates in time. A sensor S j that receives xˆ ρ (t) will forward this estimate only to those neighboring
sensors that are located within a pre-speciﬁed radius R s from the estimated target location. The set of
sensors receiving the estimates via the aforementioned process at time t + 1 is denoted as Jρ ,t+1 .
In each of the subsets Jρ ,t+1 the distributed the sensor selection scheme in Sec. 3 is employed to
determine the target-informative sensor subsets Iρ ,t+1 ⊆ Jρ ,t+1 for each of the targets ρ at time instant
t + 1. The radius R s through which Jρ ,t+1 are constructed is up to our control, and the faster the target
moves the larger R s should be set to guarantee that all target-informative sensors are included in Jρ ,t+1 .
Performing the sensor-target association algorithm in diﬀerent sensor subsets Jρ ,t+1 of the SN facilitates
tracking the present targets, while it requires less computational and communication complexity than
when applied in the whole SN. The leading sensor Cρ ,t+1 is then chosen as that sensor in Iρ ,t+1 , which
is closest to the estimated position of the ρ th target. The leading sensor Cρ ,t+1 then collects i) the
corresponding state particles and weights from Cρ ,t ; and ii) the sensors measurements z j (t + 1) for
S j ∈ Iρ ,t+1 , namely the updated informative sensor subset for target ρ th at time instant t + 1.
The leading sensor Cρ ,t+1 proceeds to draw new state particles from the terminal level L
p(zt |xtL )p(xtL |xt−1 ) and similarly to the standard particle ﬁlter update their corresponding weights based
on the likelihood p(zt |xtL ). Then, Cρ ,t+1 forms the new state estimate xˆ ρ (t + 1) ≈ E[xρ (t + 1)|zTρ,0:t ].
2589

Dynamic Data Driven Sensor Network Selection and Tracking

6

Schizas and Maroulas

Simulations

In the numerical tests we consider a setting where the targets move according to a near constant velocity
model [31]. In detail, the ρth target’s state vector evolves according to the following model
xρ (t + 1) = Axρ (t) + uρ (t),

(13)

where A is a 4 × 4 transition matrix, while uρ (t) denotes zero-mean Gaussian noise with covariance Σu .
The structure of matrices A and Σu can be found in [31].
Sensors measure the intensity of signals received from the diﬀerent moving targets on the ﬁeld.
Sensor j acquires a scalar measurement at time instant t that adheres to the following model
x j (t) =

r
ρ=1

bρ (t)d−2
j,ρ (t) + w j (t), j = 1, . . . , m

(14)

where bρ (t) denotes the intensity of a signal emitted by the ρth target, while d j,ρ (t) denotes the distance
between the ρth target and sensor j at time t. The state noise is assumed to be temporally white and
uncorrelated with the observation noise across sensors, namely wt := [w1 (t), . . . , wm (t)]T .
The tracking performance of our proposed framework is tested in a setting where the number of
targets can change in time. A number of m = 120 sensors are placed randomly in the region of [0, 100]×
[0, 100]m2 . The total number of targets showing up and vanishing across time is R = 6. In the tested
region, two groups of diﬀerent targets appear and disappear orderly, whose conﬁguration is given as
follows: Targets ρ = 1, 2, 3 start moving at positions [46, 34], [40, 45], [20, 55] and follow the dynamics
in (13). Based on the DH-MCMC PF, we use L = 10 levels and appropriately modiﬁed drifts. The
choice of modiﬁed drift corresponds to a mean drift while at the same time oﬀsetting the individual
sample’s properties, see [26]. While targets ρ = 2, 3 move along the x-axis with a speed of 2m/s, target
ρ = 1 moves with −0.65m/s along x-axis and 2m/s along y-axis. The ﬁrst three targets keep active
for the time interval [1, 15]s. In the interval [15, 17]s, no targets are present in the region. Then targets
ρ = 4, 5, 6 show up at positions [70, 13], [40, 10], [60, 20] and move according to the same state model
followed by the ﬁrst three targets for the interval [17, 30]. The three targets ρ = 4, 5, 6 have the same
velocity 1.5m/s along x-axis, though the velocity along y-axis are respectively −1.5m/s, 1.5m/s and
1.5m/s. The state and measurement noise variances are both set as 0.1, same as before.
Fig. 3a depicts the true target trajectories (blue dashed curves), along with the estimated trajectories
(light green curves). The blue stars correspond to the starting position of the targets and the red stars
denote the ending position. Clearly, the proposed framework is able to carry out accurate tracking
of all R = 6 targets. Another interesting property shown in Fig. 3a is the small number of sensors
selected and used in the tracking process. The active sensors are in the vicinity of the targets’ location
corroborating the capability of our DDDAS-based framework to utilize the sparse covariance sensing
data structure and select those sensors acquiring informative measurements about the present targets.
Fig. 3b depicts the number of informative sensors versus time throughout the simulation. Clearly, the
number of informative sensors does not exceed 20 (16% of the network), while the average number of
informative sensors is equal to approximately 8.

7

Conclusions

A novel distributed DDDAS framework for tracking multiple targets in ad hoc sensor networks was considered. Once sensor data are acquired, then the target-informative sensors are identiﬁed using eﬀective
sparsity-aware correlation analysis techniques that learn the sensed ﬁeld and adjust the sensing process
by selecting only those sensors close to the targets. Innovative tracking schemes are designed using
a drift homotopy MCMC particle ﬁltering to eﬀectively reduce the amount of information (particles)
2590

Dynamic Data Driven Sensor Network Selection and Tracking

100

112 71

63 58
80

96 61
88

70

69

50

35

10
57

40

44

84
94

66

30
117
29118

20

119
1

89

17

56

10

8

6

92

4

26
46
2

75

33
10

9
47

12

6791

11
14
25

12

42

97

0

76
90

6

55

109
40 108111 62
107
106

4 5195
73 43

23

32

0

98

78

41

52

21
7

14

54

81
110

8
74

22

49

3

16

53

93

39
85

15 38

86
30

5

65

72

103
102
101

28

27

83

114
8211560 116
18

77
31

18

45

50
104
105

24

60

13
64 99

113

87
79

70

37

2

Num of Informative Sensors

16

80

10

20

68
20
36

48

59
100
19

90

Schizas and Maroulas

20

30

40

50

60

70

80

90

34
100

0

0

5

10

15

20

25

30

35

time

(a)

(b)

Figure 3: (a); Tracking of multiple targets in a setting with time-varying number of targets. Blue dashed
curves indicate the true target trajectories, while the light green curves correspond to the estimated
trajectories. The red circles represent active sensors. (b) Number of target-informative sensors versus t.

needed compared to standard particle ﬁlters. The tracking estimates are used as feedback to update the
informative-sensor determination modules and activate only target-relevant sensors.

References
[1] N. Ahmed, M. Rutten, T. Bessell, S. S. Kanhere, N. Gordon, and S. Jha, “Detection and Tracking Using
Particle-Filter-Based Wireless Sensor Networks,” IEEE Trans. on Mobile Computing, vol. 9, no. 9, pp.
1332–1345, Sep. 2010.
[2] M. S. Arulampalam, S. Maskell, N. Gordon, and T. Clapp, “A Tutorial on Particle Filters for Online
Nonlinear/Non-Gaussian Bayesian Tracking,” IEEE Trans. Signal Proc., vol. 50, no. 2, pp. 174–188, 2002.
[3] D. P. Bertsekas, Nonlinear Programming. 2nd Edition, Athena Scientiﬁc, Massachussets, 1999.
[4] D. P. Bertsekas and J. N. Tsitsiklis, Parallel and Distributed Computation: Numerical Methods. 2nd Edition, Athena Scientiﬁc, Massachussets 1997.
[5] E. P. Blasch, E. Bosse, and D. A. Lambert, High-Level Information Fusion and Systems Design. Artech
House, 2012.
[6] D. R. Brillinger, Time Series: Data Analysis and Theory. Expanded Edition, Holden Day, 1981.
[7] M. Boli´c, P. M. Djuri´c, and S. Hong, “Resampling Algorithms for Particle Filters: A Computational Complexity Perspective,” EURASIP J. on Applied Sign. Proc., 15, pp. 2267–2277, 2004.
[8] C. Charalambous and S. Cui, “A Biologically Inspired Networking Model for Wireless Sensor Networks,”
IEEE Network, vol. 24, no. 3, pp. 6–13, 2010.
[9] K.-C. Chang and Y. Bar-Shalom, “Joint Probabilistic Data Association for Multitarget Tracking with Possibly Unresolved Measurements and Maneuver,” IEEE Trans. on Automatic Control, 29(7):585–594, July
1984.
[10] J. Chen and I. D. Schizas, “Distributed Sparse Canonical Correlation Analysis in Clustering Sensor Data,”
Proc. of the Asilomar Conf. on Signals, Systems and Comp., Paciﬁc Grove, CA, Nov. 2013.
[11] J. Chen and I. D. Schizas, “Online Distributed Sparsity-Aware Canonical Correlation Analysis,” IEEE
Transactions on Signal Processing, submitted May 2014.
[12] F. Darema, “Dynamic Data Drive Applications Systems: New Capabilities for Application Simulations and
Measurements,” Lect. Notes in Computer Science, 3515, pp. 610–615, 2005.
[13] F. Darema, “Grid Computing and Beyond: The Context of Dynamic Data Driven Applications Systems,”
Proc. of IEEE, vol. 93, no. 3, pp. 692–697, 2005.

2591

Dynamic Data Driven Sensor Network Selection and Tracking

Schizas and Maroulas

[14] F. Daum and J. Huang, “Particle Flow for Nonlinear Filters with Log-Homotopy,” Proc. of SPIE, Signal
Processing, Sensor Fusion, and Target Recognition XVIII, I. Kadar, Ed., vol. 7336 733603-1, Orlando, FL,
USA, April 13, 2009.
[15] A. Doucet, N. de Freitas, and N. Gordon, Sequential Monte Carlo Methods in Practice. Springer NY, 2001.
[16] W. Gilks and C. Berzuini, “Following a Moving Target. Monte Carlo Inference for Dynamic Bayesian
Models,” J. Royal Stat. Soc. B, vol. 63, no. 1, pp. 2124–2137, 1999.
[17] A. Goldsmith, “Wireless Communications,” Cambridge University Press, 2005.
[18] N. Gordon, “A Hybrid Bootstrap Filter for Target Tracking in Clutter,” IEEE Trans. on Aerospace and
Electr. Sys., vol. 33, no. 1, pp. 353–358, 1997.
˝
[19] H. Hotelling, “Relations Between Two Sets of Variates,” Biometrika, vol. 28, pp. 321U-377,
1936.
[20] I. M. Johnstone and A. Lu, “On Consistency and Sparsity for Principal Components Analysis in High
Dimensions,” Journal of the American Statistical Association, vol. 104, no. 486, pp. 682–693, 2011.
[21] K. Kang and V. Maroulas. Drift homotopy methods for a nonGaussian ﬁlter, Proc. of the 16th Intl. Conference on Information Fusion, pp.1088-1094, July 2013.
[22] K. Kang, V. Maroulas and I. D. Schizas, “Drift Homotopy Particle Filter for non-Gaussian Multi-target
Tracking," Proc. of the 17th Intl. Conference on Information Fusion, Salamanca, Spain, pp.1-7, July 2014.
[23] Z. Khan, T. Balch, and F. Dellaert, “MCMC Data Association and Sparse Factorization Updating for Real
Time Multitarget Tracking with Merged and Multiple Measurements,” IEEE Trans. on Pattern Analysis and
Machine Intelligence, 28(12):1960–1972, Dec. 2006.
[24] Y. Li, M. T. Thai, and Weili Wu, Wireless Sensor Networks and Applications. Springer, 2008.
[25] J. Lin, W. Xiao, F. L. Lewis, and Lihua Xie, “Energy-Eﬃcient Distributed Adaptive Multisensor Scheduling
for Target Tracking in Wireless Sensor Networks,” IEEE Transactions on Instrumentation and Measurements, vol. 58, no. 6, pp. 1886–1896, June 2009.
[26] V. Maroulas and P. Stinis, “A Drift Homotopy Monte Carlo Approach to Particle Filtering for Multi-Target
Tracking,” Journal of Computational Physics, vol. 231, no. 2, pp. 602–611, 2012.
[27] V. Maroulas and J. Xiong, “Large deviations for optimal ﬁltering with fractional Brownian motion",
Stochastic Processes and Applications, 123 (6), pp. 2340-2352, 2013.
[28] R. Olfati-Saber,“Distributed Kalman Filter With Embedded Consensus Filters,” Proc. 44th Conf. Dec., the
Eur. Control Conf., Seville, Spain, Dec. 2005, pp. 8179–8184.
[29] O. Ozdemir, R. Niu, and P. K. Varshney, “Tracking in Wireless Sensor Networks Using Particle Filtering:
Physical Layer Considerations,” IEEE Trans. on Signal Processing, vol. 57, no. 5, pp. 1987–1999, May
2009.
[30] C. P. Robert and G. Casella, Monte Carlo Statistical Methods. New York: Springer, 2004.
[31] Y. Bar-Shalom and T. E. Fortmann, Tracking and Data Association. Academic Press, 1988.
[32] I. D. Schizas, A. Ribeiro, and G. B. Giannakis, “Consensus in Ad Hoc WSNs with Noisy Links - Part I:
Distributed Estimation of Deterministic Signals,” IEEE Trans. on Signal Processing, vol. 56, pp. 350–364,
Jan. 2008.
[33] R. Tibshirani, “Regression Shrinkage and Selection via the Lasso,” Journal of the Royal Statistical Society,
Series B, vol. 58, no. 1, pp. 267–288, 1996.
[34] J. F. Traub and A. G. Werschulz, Complexity and Information (Lezioni Lincee). Cambridge University
Press, 1999.
[35] W. Zhang and G. Cao,“DCTC: Dynamic Convoy Tree-based Collaboration for Target Tracking in Sensor
Networks,” IEEE Transactions on Wireless Communications, vol. 3, no. 5, pp. 1689–1701, September
2004.
[36] F. Zhao, J. Shin, and J. Reich, “Information-Driven Dynamic Sensor Collaboration for Tracking Applications,” IEEE Signal Processing Magazine, vol. 19, no. 2, pp. 61–72, 2002.
[37] H. Zou, “The Adaptive Lasso and its Oracle Properties,” Journal of the American Statistical Association,
vol. 101, no. 476, pp. 1418–1429, 2006.
[38] H. Zou and T. Hastie, “Regularization and Variable Selection via the Elastic Net,” Journal of the Royal
Statistical Society, Series B, vol. 67, no. 2, pp. 301–320, 2005.
[39] H. Zou, T. Hastie, and R. Tibshirani, “Sparse Principal Component Analysis,” Journal of Computational
and Graphical Statistics, vol. 15, no. 2, 2006.

2592

