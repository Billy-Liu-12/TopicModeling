Procedia Computer Science
Volume 80, 2016, Pages 2312–2316
ICCS 2016. The International Conference on Computational
Science

Hydra: A High-throughput Virtual Screening Data
Visualization and Analysis Tool
Curtis Sera1, Shelby Matlock2, Yasuhiro Watashiba3,
Kohei Ichikawa3, Jason H. Haga4
1

University of California, San Diego; 2UNC, Charlotte, North Carolina
3
Nara Institute of Science and Technology, Ikoma, Japan
4
National Institute of Advanced Industrial Science and Technology, Tsukuba, Japan
csera@ucsd.edu, smatlock@uncc.edu, watashiba@is.naist.jp, ichikawa@is.naist.jp,
jh.haga@aist.go.jp

Abstract
Virtual high-throughput biochemical screening offers a cost-effective alternative to the empirical
testing of millions of compounds. However, virtual screening data often requires some manual
processing of the data to eliminate false positives, evaluate the ligand-macromolecule fit, and identify
new molecular interactions. This analysis is generally hindered by highly specific software and
hardware requirements and complex user interfaces. Hydra is an HTML5 and JavaScript based
application, which ameliorates this issue by displaying ligand-macromolecule models calculated by
virtual screening programs in a single, simple online interface. The application is capable of loading
raw data sets from the DOCK virtual screening platform and utilizing pre-processed datasets from
other software to display compounds side-by-side in a user-defined size grid of 3Dmol.js instances. It
also searches databases for selected compound information to natively display within the interface.
This tool provides a highly accessible platform for streamlined virtual screening results analysis.
Keywords: Virtual screening, high-throughput screening, visualization, data analysis, 3Dmol.js

1 Introduction
Traditional high-throughput screening (HTS) is an automated empirical method for testing
biological activity of entire classes of chemical compounds (Persidis, 1998). HTS is popular in
biology and the pharmaceutical industry, especially for drug development. Though effective, this
development process can be cost-prohibitive, taking up to 12–15 years and $1 billion for a finished
product (Hughes, Rees, Kalindjian, & Philpott, 2011), and produces low “hit” rates unless a focused
library of test samples is used (Mayr & Bojanic, 2009). Because of this, virtual high-throughput
screening (vHTS) methods were developed to generate more selective compound libraries (Cheng, Li,
Zhou, Wang, & Bryant, 2012). One vHTS program our group uses is DOCK (Lang, et al., 2008)

2312

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.427

Hydra: A High-throughput Virtual Screening Data Visualization and Analysis Tool

Sera, et al.

(Allen, et al., 2015). The resultant data from virtual screening programs are typically visualized to
screen for false positives and to qualitatively evaluate the ligand-macromolecule goodness of fit. This
has added benefits of facilitating the discovery of structural binding trends and identification of
unknown molecular interactions. A list of such visualization software is at the RCSB PDB website
(RCSB, 2015). However, none of these tools support visualization in a high-throughput manner.
Previously, our group developed a modified version of ViewDock (Pettersen, et al., 2004) called
ViewDock TDW (Lau, Levesque, Chien, Date, & Haga, 2010) to better facilitate the comparison of
virtual screening results using multiple instances of Chimera on a tiled display wall. This software tool
is highly effective, but its technical user interface and highly specific system requirements hinder nonspecialized labs from fully utilizing vHTS data.
To address this, we created a prototype JavaScript/HTML5 based tool called Hydra (Zhao & Haga,
2014) that enables the visualization of multiple molecular models with a user-friendly interface. We
have extended and redesigned this tool with a workflow that enables users to load vHTS results into
the interface, check/compare ligand-target fits to identify promising candidate chemical compounds,
and obtain detailed vendor information to purchase compounds for subsequent experiments. One of
Hydra’s key advantages over existing tools is its integration of visualization with a layered approach
to presenting chemical and vendor information. Furthermore, it is entirely browser-based, making it
platform independent, and has easy, intuitive navigation. The result is a comprehensive visualization
application for vHTS data analysis that enhances the drug discovery workflow.

2 Hydra Description
2.1 Software Libraries
Hydra’s main graphical user interface (GUI) uses multiple layout modules and widgets from
Webix JavaScript library (XB Software Ltd., 2016) for the creation of responsive and intuitive
interactions. Logic for event functions was in JavaScript, augmented by the jQuery JavaScript library
(jQuery Foundation, 2016). Instances of the WebGL-based 3Dmol.js (Rego & Koes, 2015) were used
to display molecular models and 3Dmol.js was extended to allow data from the parent Hydra interface
to be loaded. Subsets from the ZINC (Irwin, Sterlin, Michael, Bolstad, & Coleman, 2012) database
were included to enable display of additional information upon compound selection in Hydra. All of
this information populates the Hydra interface for viewing by the user.

2.2 GUI Design & Features
Hydra’s general GUI is composed of three sections with distinct functions: a left sidebar for data
file and display setting options; a central workspace of 3Dmol.js instances for visualization; and a
right sidebar showing compound-specific chemical and vendor information. As shown in Figure 1, the
general flow of information for the user is from left to right through these three sections.
Figure 2 shows detailed screenshots of the controls on the left and right sidebars. The left sidebar
contains two sliding panels that contain all controls for directly interacting with files and 3Dmol.js
instances. In the primary panel (L1), batches of over 300 files may be uploaded directly or through the
file processor, which is designed for use with results from DOCK and appears as a popup over the
main interface. Importantly, the processor allows raw data from DOCK to be utilized without any
outside processing by combining all relevant files into a single data object. Selected files are placed in
a re-orderable list under the “Import Compounds” header, coupled with user defined column and row
coordinates for the viewer to display the file in. Below this list are “Grid Size” controls for setting the
number of columns and rows of viewers in the central workspace.
The secondary panel (Figure 2, L2) contains controls for compound display in the active viewer.

2313

Hydra: A High-throughput Virtual Screening Data Visualization and Analysis Tool

Sera, et al.

Figure 1: Screenshot of Hydra featuring the three sections of the GUI. The active viewer in the visualization
grid, with coordinates (1,1), is denoted by the green highlighted box. Example ligand-protein model pairs were
loaded by setting the “Col” and “Row” cells of the desired objects to match viewer coordinates as shown in the
bottom left of each 3Dmol.js instance. Selection is synchronized between the file list and the “Compound List”,
and metadata extracted from the file is displayed under “Compound Information”.

Figure 2: Screenshots featuring the left and right sidebars. L1 and L2 are the sliding panels on the left side of
the interface with the “File & Grid Controls” and “Compound Controls”. R1 and R2 are the sliding panels on
the right side with “Compound Overview” the “Compound Details” panels.

2314

Hydra: A High-throughput Virtual Screening Data Visualization and Analysis Tool

Sera, et al.

Display options can be set independently for the target protein and ligand using the respective “Main
Compound” controls and “Ligand” controls provided that the ligand is demarcated by “HETATM”
tags in the pdb file. Model display options include line, cartoon (ribbon), sphere, stick, and cross.
Surfaces with user-defined opacities can also be shown including Van der Waals, solvent accessible,
and solvent excluded. A checkbox is also provided in this panel for synchronizing molecular
movements between viewers. Switching between these panels is easily done via paired buttons at the
bottom of the sidebar labeled “To Compound Controls” and “To File & Grid Controls”.
A key feature of Hydra is the central workspace with a dynamic, user-definable grid of sixteen or
more 3Dmol.js instances. Each instance is a programmatic child of the workspace and displays its
“coordinates” in column, row format. When the user interacts directly with a particular viewer, it
becomes “active” and is marked with a green border. Changing (column, row) values and clicking
“Update Data” will move desired molecules to different viewers.
The right sidebar similarly uses the dual sliding panel design. In contrast to other visualization
tools, it also displays detailed chemical and purchase information for compounds. The primary panel
(Figure 2, R1) contains a list of the ZINC database unique identifiers under the “Compound List”
header that is synchronized with the uploaded files list in the left panel. If no ZINC ID is found, then
the added item is left blank. Selecting one compound in the right sidebar both selects the
corresponding item on the left sidebar and causes compound-specific information to be shown. Under
the “Compound Information” header, general compound data from the file’s metadata such as the
IUPAC name and number of atoms is displayed. More specific chemical information can be found in
the second panel (Figure 2, R2) under the “Compound Properties” header, and a list of vendors selling
the selected compound is found below this. With the exception of the 2D depiction, these data are
obtained from the packaged “properties” and “purchasing” databases respectively upon initial
selection of an item via ZINC ID-based key-value pair maps. Both the 2D structure and details for
individual vendor contact information and compound catalog numbers may be viewed in a popup
window by selecting a compound in the vendor list.

3 Results
Hydra is highly responsive both with a single 3Dmol instance and multiple instances running in
parallel. Tested on Firefox 43.0 with a Lenovo Y510P running Windows 8.1 with an i7-4700MQ CPU
@ 2.40 GHz and 7.73 GB usable RAM, Hydra used an average of 454.1 MB of RAM over the course
of 5 trials while running 16 file sets in 16 parallel 3Dmol instances. This compares favorably with the
309.5 MB baseline for Hydra’s default initialization and 169.78 MB for Firefox alone on the Yahoo
front page. Moreover, models may be synchronously translated and rotated with no perceptible
decrease in performance. Integrating these visualization capabilities with compound data retrieval
services adds no tangible time delay to item selection or to data populating the interface.
Although most browsers can run Hydra locally some browsers, such as Google Chrome, have
security policies that prohibit usage of client-side files due to the “null” file origin signing, which can
be overcome by running a server-hosted instance of Hydra. Also, no more than 18 different models
can be displayed at once due to embedded limitations in the version of WebGL used by 3Dmol.js.
Hydra’s lightweight design compensates for this, as multiple instances of Hydra may be run
simultaneously if necessary with minimal impact on performance.

4 Conclusion
Hydra provides a uniquely streamlined, user-friendly interface for analyzing the results of virtual
HTS programs and supporting the drug discovery workflow. This is very useful for labs that do not

2315

Hydra: A High-throughput Virtual Screening Data Visualization and Analysis Tool

Sera, et al.

specialize in bioinformatics as it enables them to utilize virtual screening results without the need for
extensive technical knowledge. With 60-70 inch displays becoming relatively affordable now, the
browser-based nature of this tool also allows it to be used on these large format displays, eliminating
the need for costly and complex multi-tiled displays. This tool also provides a layered approach to
presenting chemical and vendor information, and allows the user to find additional information as
necessary. In the future, patent information will also be integrated with the interface to inform
biomedical researchers of the potential for commercialization of any discoveries.

5 Acknowledgements
The authors thank the 3Dmol.js developer Dr. David Koes and members of SDLab at NAIST for
their assistance. This work was funded in part by UCSD Julia Brown Research Scholarship for Health
and Medical Professions (Curtis Sera), ODSC-PIRE Fellowship (Shelby Matlock), and by the Japan
Society for the Promotion of Science (JSPS) and Global Initiatives Program at NAIST.

6 References
Allen, W. J., Balius, T. E., Mukherjee, S., Brozell, S. R., Moustakas, D. T., Lang, P. T., et al.
(2015). DOCK 6: Impact of new features and current docking performance. Journal of Computational
Chemistry , 36 (15), 1132-1156.
Cheng, T., Li, Q., Zhou, Z., Wang, Y., & Bryant, S. H. (2012). Structure-Based Virtual Screening
for Drug Discovery: a Problem-Centric Review. The AAPS Journal , 14 (1), 133-141.
Hughes, J. P., Rees, S., Kalindjian, S. B., & Philpott, K. L. (2011). Principles of early drug
discovery. British Journal of Pharmacology , 162 (6), 1239-1249.
Irwin, J. J., Sterlin, T., Michael, M. M., Bolstad, E. S., & Coleman, R. G. (2012). ZINC: A Free
Tool to Discover Chemistry for Biology. Journal of Chemical Information and Modeling , 52 (7),
1757-1768.
jQuery Foundation. (2016). jQuery - write less, do more, 2.1.4. Retrieved December 7, 2015, from
jQuery: http://www.jquery.com
Lang, P. T., Moustakas, D., Brozell, S., Carrascal, N., Mukherjee, S., Balius, T., et al. (2008).
UCSF DOCK 6.2, 6.2. Retrieved August 20, 2015, from UCSF DOCK: http://dock.compbio.ucsf.edu/
Lau, C. D., Levesque, M. J., Chien, S., Date, S., & Haga, J. H. (2010). ViewDock TDW: highthroughput visualization of virtual screening results. Bioinformatics , 25 (15), 1915-1917.
Mayr, L. M., & Bojanic, D. (2009). Novel trends in high-throughput screening. Current Opinion in
Pharmacology , 9 (5), 580-588.
Persidis, A. (1998). High-throughput screening. Nature Biotechnology , 16, 488-489.
Pettersen, E. F., Goddard, T. D., Huang, C. C., Couch, G. S., Greenblatt, D. M., Meng, E. C., et al.
(2004). UCSF Chimera - a visualization system for exploratory research and analysis. Journal of
Computational Chemistry , 25 (13), 1605-1612.
RCSB. (2015). RCSB PDB: Third Party Tools. Retrieved December 12, 2015, from RCSB PDB:
http://www.rcsb.org/pdb/static.do?p=general_information/web_links/index.html
Rego, N., & Koes, D. (2015). 3Dmol.js: molecular visualization with WebGL. Bioinformatics , 31
(8), 1322-1324.
XB Software Ltd. (2016). JavaScript Framework & HTML5 UI Library for Web App
Development-Webix, 3.0.1. Retrieved August 12, 2015, from Webix: http://www.webix.com
Zhao, Y., & Haga, J. H. (2014). Hydra: An HTML5-Based Application for High-Throughput
Visualization of Ligand Docking. Supercomputer 2014 (p. 1). New Orleans: IEEE.

2316

