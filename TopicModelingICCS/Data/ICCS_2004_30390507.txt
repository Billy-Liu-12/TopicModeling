Investigation of the Sensitivity of the Monte
Carlo Solution for the Barker-Ferry Equation
with Sequential and Parallel Pseudo-Random
Number Generators
T.V. Gurov1 and P.A. Whitlock2
1

IPP - BAS, Acad. G. Bonchev st, bl. 25 A,
1113 Soﬁa, Bulgaria, gurov@parallel.bas.bg
2
Dep. of CIS, BC-CUNY, 2900 Bedford Ave,
Brooklyn, NY 11210, USA, whitlock@sci.brooklyn.cuny.edu

Abstract. In this work a set of several sequential and parallel pseudorandom number generators (prng’s) are tested when we apply a MC
approach for solving a quantum-kinetic equation derived from ultra-fast
transport in semiconductos. The aim is an optimization of the MC solver for the equation which accounts for quantum eﬀects in the electronphonon interaction. We consider so-called the Barker-Ferry (B-F) equation written for the case of zero electric ﬁeld. The original formulation
of this equation accounts for the action of the electric ﬁeld during the
process of collision.
The sensitivity of the MC solution for the electron energy distribution
is investigated empirically, using prng’s under consideration. The results
obtained for the computational cost of the MC algorithm, the accuracy
and the bias in the MC solution can be used to guide the choice of rng
in the general case.

1

The Quantum-Kinetic Equation

The Barker-Ferry equation [1] can be utilized as a relevant physical model of the
femtosecond relaxation of initially excited by a laser pulse electrons. For zero
electrical ﬁeld, the equation can be written in the following integral form [2]:
t

t

dt

f (k, t) =
0

dt

d3 k {S(k , k, t − t )f (k , t )

(1)

0

− S(k, k , t − t )f (k, t )} + φ(k),
2V
S(k , k, t − t ) =
|gk −k |2 exp(−Γ (k , k)(t − t ))
(2π)3 ¯
h2
×{(nq + 1) cos(Ω(k , k)(t − t )) + nq cos(Ω(k, k )(t − t ))},

(2)

Supported by ONR Grant N00014-96-1-1-1057 and by Center of Excellence BIS-21
grant ICA1-2000-70016, as well as by the NSF of Bulgaria through grant number
I-1201/02.
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3039, pp. 507–514, 2004.
c Springer-Verlag Berlin Heidelberg 2004

508

T.V. Gurov and P.A. Whitlock

where k is the momentum, f (k, t) is the distribution function and φ(k) is the
positive initial condition. In the kernel (2), nq is the Bose function [2], V is the
volume and Ω(k , k) = (ε(k ) − ε(k) − ¯hωq )/¯h. The phonon energy is h
¯ ωq , which
generally depends on q = k − k, and ε(k) = (¯
hk)2 /2m is the electron energy.
1
2

2πe2 h
¯ω

q
1
1
The coupling gk −k = −i
− 1 s (k −k)
applies to the Fr¨
ohlich
2
V
∞
interaction, and ( ∞ ) and ( s ) are the optical and static dielectric constants.
The damping factor Γ (k , k) = Γ (k ) + Γ (k) is related to the ﬁnite carrier
lifetime for the scattering process: Γ (k) = d3 k 23Vπ2 h¯ ± gk −k 2 δ(ε(k ) −
ε(k) ± ¯
hωq )(nq + 12 ± 12 ). In spherical coordinates (k, θ, ϕ), with the kz axis
oriented along k and zero lattice temperature (nq = 0), the equation (1) becomes
one-dimensional with respect to the momentum integration [3]:

Q

t

dt

f (k, t) =
0

dk K(k, k ) ×

(3)

0

× [K1 (k, k , t, t )f (k , t ) + K2 (k, k , t, t )f (k, t )] + φ(k),
K(k, k ) = c1

k
ln
k

k+k
|k − k |

K1 (k, k , t, t ) = −K2 (k , k, t, t ) =

Ωk2 ,k

,
1
{Γk ,k +
+ Γk2 ,k

+ exp(−Γk ,k (t − t )) [Ωk ,k sin(Ωk ,k (t − t )) − Γk ,k cos(Ωk ,k (t − t ))]}
h). The functions Γ (k , k) and Ω(k , k) depend only
and c1 = e2 ω 1 ∞ − 1 s /(π¯
on the radial variables k and k and are denoted by Γk ,k and Ωk ,k , respectively
where
√
√
c2 ln (k + k 2 − ω1 )/ ω1 /k, if k 2 ≥ ω1
Γk =
0,
if k 2 < ω1 ,
with ω1 = 2mωq /¯
h, c2 = (me2 ωq /¯h2 )|1/ ∞ − 1/ s |. The Neumann series
corresponding to equation (3) converges [3] and a MC approach can be applied
to evaluate the electron energy distribution. We note that this approach can be
generalized for ﬁnite temperatures in a straightforward way.

2

Monte Carlo Approach

Deﬁne a terminated Markov chain (κ0 , τ0 ) → . . . → (κj , τj ) → . . . → (κlε , τlε ),
such that every point (κj , τj ) ∈ (0, Q) × (0, τj−1 ), j = 1, 2, . . . , lε (ε is the
truncation parameter) is sampled using an arbitrary transition density function
r(k, k , t, t ) which is tolerant1 to both kernels in equation (3).
The biased Monte Carlo estimator for the solution of equation (3) at the ﬁxed
point k = κ0 at the time t = τ0 using backward time evolution of the numerical
trajectories has the following form:
1

r(x) is tolerant of g(x) if r(x) > 0 when g(x) = 0 and r(x) ≥ 0 when g(x) = 0.

Investigation of the Sensitivity of the Monte Carlo Solution
lε

ξlε [κ0 , τ0 ] = φ(κ0 ) +

Wjα φα (κj ),

509

(4)

j=1
α
Wjα = Wj−1

K(κj−1 , κj )Kα (κj−1 , κj , τj−1 , τj )
, W1α = 1, α = 1, 2, j = 0, . . . , lε .
pα r(κj−1 , κj , τj−1 , τj )

The probabilities pα (α = 1, 2) are related to the choice of one of the kernels.
Now we can deﬁne a Monte Carlo method
1
N

N

P

(ξlε [κ0 , τ0 ])i −→ f (κ0 , τ0 ),

(5)

i=1

where ξlε [κ0 , τ0 ])1 , ξlε [κ0 , τ0 ])2 , . . . , ξlε [κ0 , τ0 ])N are independent values of the
P
estimator (4) and −→ means stochastic convergence as N → ∞. The relation
(5) still does not determine the computation algorithm: we must specify the modeling function (sampling rule) ξlε [κ0 , τ0 ] = g(β1 , . . . , βn ), where β1 , . . . , βn are
uniformly distributed random numbers in the interval (0, 1). Now both relations
(5) and the sampling rule deﬁne a Monte Carlo algorithm for (4).
Thus we can say [4] the constructive dimension (c.d.) of the algorithm is n,
i.e. c.d. = n. Clearly, the variance of the MC estimator (4) does not depend
on the c.d. Nevertheless, the c.d. has suggested a classiﬁcation of sampling rules
and an ordering of tests for pseudo-random numbers.
The transition density function in the Markov chain can be chosen in the
following way rα (k, t, k , t ) = r(k, k )r(t, t /k, k ), α = 1, 2, where
r(k, k ) = C

k
ln
k

k+k
|k − k |

and r(t, t /k, k ) =

Γk,k exp(−Γk,k (t − t ))
.
1 − exp(−Γk,k t)

The normalized density function r(k, k ) can be expressed as an inﬁnite weighted
sum of other density functions by expanding (k /k) ln ((k + k )/(|k − k |)), i.e.
∞

∞

C i ri (k, k ), C i ≥ 0,

r(k, k ) =
i=0

2i+2

ri (k, k ) =

C i = 1,
i=0

)
,
(2i + 3) (kk2i+3

(Qk)2i−1
1
Q2i−1 −k2i−1 (k )2i

(2i − 1)

2
 (2i+1)(2i+3) ,
2
4k
Ci =
(1−( Qk )2i−1 )
(4i2 −1)

,
Q+k
(Q−k)[2k+(Q+k) ln( Q−k
)]

when 0 ≤ k < k
,

when k < k ≤ Q,

when 0 ≤ k < k
when k < k ≤ Q.

The decomposition MC approach can be applied to sample k : 1. Generate
β1 , β2 , β3 uniform on [0, 1]; 2. Deﬁne C i by β1 using decomposition MC techni1
ques. 3. Sample k with the i-th density function ri (k, k ), namely, k = k(β3 ) 2i+1 ,
1
if β2 Q < k. Otherwise, k = k/[1 − β3 (1 − (k/Q)2i−1 )] 2i−1 .
Using the normalized conditional probability density function r(t, t /k, k ) we
can sample t = log(β4 (exp(Γk,k t) − 1) + 1)/Γk,k , where β4 ∈ (0, 1). Finally, we

510

T.V. Gurov and P.A. Whitlock

generate β5 ∈ (0, 1) and choose one of the kernels Kα (k, k , t, t ), α = 1, 2 using
probabilities pα = |Kα (k, k , t, t )|/(|K1 (k, k , t, t )| + |K2 (k, k , t, t )|). Summarizing, we have used 5 uniform random numbers β1 , . . . , β5 in order to construct
the MC estimator (4) for one transition (k, t) → (k , t ) in the Markov chain.
The computational complexity of the obtained iterative MC algorithm can be
measured by the quantity F = N × tn0 × E(lε ). We note that the number of the
random walks, N , and the average number of transitions in the Markov chain,
E(lε ), are connected with the stochastic and systematic errors [3]. However the
mean time for modeling one transition, tn0 , (n0 = 5) depends on the complexity of the transition density functions and the choice of the random number
generator. It is strongly recommended that all simulations be done with two or
more diﬀerent generators, and the results compared to check whether the prng
is introducing a bias. The c.d. of this algorithm can be deﬁned as the average
number of uniformly distributed random numbers necessary for carrying out one
trial, i.e. c.d. = n0 E(lε ). Thus we can use parallel prng’s that produce n0 = 5
independent and non-overlapping random sequences in order to compute every
transition in the Markov chain as well as sampling 5 consecutive pseudo-random
numbers from a sequential generator.

3

Numerical Results and Discussions

The simulation results are obtained for GaAs with material parameters taken
from [2]. The initial condition is a Gaussian function of the energy. The solution
f (k, t) is estimated by the MC estimator in 60 points of the simulation domain
between 0 and Q = 66 × 107 /m.
The iterative MC algorithm is realized using the following sequential prng’s:
1. CLCG-PL, Combined linear congruential generator with parameters recommended by P. L’Ecuyer [5]; 2. EICG, Explicit inversive congruential generator
[6]; 3. ICG, Inversive congruential generator [7]; 4. LCG-F, Linear congruential
generator with parameters recommended by Fishman [8]; 5. LCG-PM , Linear
congruential generator with parameters recommended by Park and Miller [9];
6. MT-MN, Mersenne Twister generator by Matsumoto and Nishimura [10]; as
well as the following parallel prng’s: 1. SNWS, Shuﬄed nested Weyl sequences
[11] with a multiplier M = 1234567. To produce 5 random sequences we use the
following seeds: γ = {21/2 }, {31/2 }, {51/2 }, {71/2 } and {111/2 }. 2. SPRNG, the
Scalable Parallel Random Number Generator Library [12].
The MC algorithm were implemented in the C language. Numerical tests
were performed on a Sun Ultra Enterprise 450 with 4 Ultra-SPARC, 400 MHz
CPUs running Solaris. In all our tests ε = 0.0001. Such a choice of the truncation
parameter allow us to ignore the systematic error [3] and to investigate whether
any generator under consideration is introducing a bias when diﬀerent stochastic errors are ﬁxed. The quantity presented on the y-axes in all ﬁgures below,
kf (k, t), is proportional to the electron energy distribution function multiplied
by the density of states. The quantity k 2 given on the x-axes in units of 1014 /m2
is proportional to the electron energy. Figure 1 compares the solutions for evolu-

Investigation of the Sensitivity of the Monte Carlo Solution

511

Table 1. Comparison of the accuracy of the solution obtained with the SNWS and
SPRNG generators for the 3 points with the biggest variance. The evolution time is
100f s in the case N = 1 million (mln), 150f s in the case N = 5 million (mln) and
200f s in the case N = 10 million (mln), respectively.

N
1
mln
5
mln
10
mln

k
48.00
48.75
49.50
48.00
48.75
49.50
48.00
48.75
49.50

SNWS
µ
kf1
9.8192 ±0.0038
10.4557 ±0.0039
10.7340 ±0.0039
14.6451 ±0.0041
15.6877 ±0.0043
15.4964 ±0.0042
17.1504 ±0.0066
18.2430 ±0.0066
17.7436 ±0.0064

SPRNG
kf2
µ
9.7896 ±0.0038
10.4595 ±0.0039
10.7024 ±0.0039
14.7029 ±0.0042
15.7370 ±0.0043
15.5394 ±0.0042
16.9636 ±0.0066
18.0536 ±0.0067
17.6170 ±0.0064
N=1 mln, SNWS
N=1 mln, SPRNG
N=5 mln, SNWS
N=5 mln, SPRNG
N=10 mln, SNWS
N=10 mln, SPRNG

35

30

|f1 − f2 |
6.2 × 10−4
7.8 × 10−5
6.4 × 10−4
1.2 × 10−3
1.0 × 10−3
8.7 × 10−4
3.9 × 10−3
3.9 × 10−3
2.6 × 10−3

100fs
100fs
150fs
150fs
200fs
200fs

S o l u t i o n - a.u.

25

20

15

10

5

0
500

1000

1500

2000

2500
k*k

3000

3500

4000

Fig. 1. Comparison of the electron energy distribution kf (k, t) versus k2 obtained by
using of SNWS and SPRNG.
Table 2. Comparison of the computational complexity of the algorithm using the
sequential and parallel prng’s.

generator
MT-MN
LCG-PM
CLCG-PL
SNWS
SPRNG
EICG
LCG-F
ICG

150f s, N = 150000
CP U time E(lε )
15m41.80s 15.5084
20m18.46s 15.5205
23m08.77s 15.5162
23m17.10s 15.5300
24m50.11s 15.5085
30m51.42s 15.5265
30m56.13s 15.4899
47m31.30s 15.5153

200f s, N = 750000
CP U time E(lε )
1h20m51.78s 15.8995
1h44m49.75s 15.9055
2h0m45.19s 15.9052
1h59m54.47s 15.9155
2h6m20.08s 15.8982
2h38m47.89s 15.9095
2h38m58.54s 15.8891
3h2m44.73s 15.9023

tion times 100 femtoseconds (f s), 150f s and 200f s obtained by using the SNWS
and, SPRNG parallel prng’s. The number of realizations of the MC estimator
(4) are 1 million (mln), 5 mln and 10 mln, respectively. We see that the solutions
coincide. Table 1 shows the mean square error, µ, and the absolute error for the

512

T.V. Gurov and P.A. Whitlock

3 values of the momentum k with the biggest variance using the SNWS and
SPRNG generators. In this “the worst” case of the variance compared with the

N=30000, LCG-F
‘correct’ sol.
N=150000, LCG-F
‘correct’ sol.
N=750000, LCG-F
‘correct’ sol.

20

100fs
100fs
150fs
150fs
200fs
200fs

S o l u t i o n - a.u.

S o l u t i o n - a.u.

100fs
100fs
150fs
150fs
200fs
200fs

15

15

10

5

0
1000

N=30000, LCG-PM
‘correct’ sol.
N=150000, LCG-PM
‘correct’ sol.
N=750000, LCG-PM
‘correct’ sol.

20

10

5

1500

2000

2500

3000
k*k

3500

4000

,

0
1000

1500

2000

2500

3000

3500

4000

k*k

Fig. 2. Comparison of the electron energy distribution obtained by using of LCG-F
and LCG-PM generators with the ”correct” solution on the left and the right pictures,
respectively.

variance at the other points, we have µ = O(10−3 ) and absolute errors are in
agreement with the mean square error. Let us note that the exact solution of the
B-F equation is unknown. Given the excellent agreement and similar variances,
we can take any MC solution from Fig. 1 as a “correct” solution.
Figures 2 – 5 compare “correct” solutions (using the results with the SNWS
generator) for the evolution times 100f s, 150f s and 200f s with the quantum
solutions obtained using all the sequential and parallel prng’s when the mean
square error is O(10−2 ). The number of realizations of the MC estimator are
N = 30000, 150000 and 750000. Results obtained when k 2 < 2000 for kf (k, t)
using the sequential generators when compared with the “correct” solution show
systematic diﬀerences. The best case occurs when using the CLG-PM, minimal
standard, generator. However, for all times it exhibits small consistent diﬀerences. Systematic diﬀerences in the MC solution with increasing evolution time
appear when LCG-F, ICG, EICG and MT-MN are used. Random “noise” in the
MC solution is observed when the CLCG-PL generator is used, which, however,
is unbiased. When k 2 > 2000 the results using any prng’s disagree in the ﬁrst
peak of the distribution. This can be explained because the product kf (k, t) for
bigger values of k is sensitive to even small errors in the MC solution. Table 2
shows the computational complexity (CP U time for all 60 points) of the algorithm using all the prng’s. We see that the computational cost is the least when
the MT-MN generator is used. The CP U time of the algorithm using the SNWS
and SPRNG parallel prng’s is closely to the CLCG-PL sequential generator and
they are faster than the EICG and LCG-F sequential generators. The ICG generator is twiceas slow as the parallel generators with the MC algorithm and
therefore it should not be employed for solving this problem. Also, the quantity
E(lε ) very slowly increases with increasing evolution time.

Investigation of the Sensitivity of the Monte Carlo Solution
N=30000, ICG
‘correct’ sol.
N=150000, ICG
‘correct’ sol.
N=750000, ICG
‘correct’ sol.

20

100fs
100fs
150fs
150fs
200fs
200fs

100fs
100fs
150fs
150fs
200fs
200fs

15

S o l u t i o n - a.u.

S o l u t i o n - a.u.

N=30000, SNWS
‘correct’ sol.
N=150000, SNWS
‘correct’ sol.
N=750000, SNWS
‘correct’ sol.

20

15

513

10

5

10

5

0
1000

1500

2000

2500

3000

3500

4000

k*k

0
1000

,

1500

2000

2500

3000

3500

4000

k*k

Fig. 3. Comparison of the electron energy distribution obtained by using of ICG and
SNWS generators with the ”correct” solution on the left and the right pictures, respectively.
N=30000, EICG
‘correct’ sol.
N=150000, EICG
‘correct’ sol.
N=750000, EICG
‘correct’ sol.

20

100fs
100fs
150fs
150fs
200fs
200fs

100fs
100fs
150fs
150fs
200fs
200fs

15

S o l u t i o n - a.u.

15

S o l u t i o n - a.u.

N=30000, CLCG-PL
‘correct’ sol.
N=150000, CLCG-PL
‘correct’ sol.
N=750000, CLCG-PL
‘correct’ sol.

20

10

5

10

5

0
1000

1500

2000

2500

3000
k*k

3500

4000

,

0
1000

1500

2000

2500

3000

3500

4000

k*k

Fig. 4. Comparison of the electron energy distribution obtained by using of EICG and
CLCG-PL generators with the ”correct” solution on the left and the right pictures,
respectively.

4

Summary

Statistically, the solution of the B-F equation would be expected to be noisier at
O(10−2 ) than at O(10−3 ) mean square error. It is gratifying that the two parallel prng’s used gave the same answer at O(10−3 ) precision. However, even at
O(10−2 ) mean square error, if the solution was unbiased, we would expect random ﬂuctuations about the more precise solution. This was only observed with
the CLCG-PL prng. All the other sequential generators exhibited systematic
rather than random diﬀerences.
Therefore we conclude that parallel prng’s are preferable to solve this problem
as the evolution time increases. In this case, the CP U time of the algorithm
become crucial. Thus, to predict the solution we need parallel realizations of the
algorithm and/or we have to estimate the solution with coarser stochastic error.
To obtain a high parallel eﬃciency in the case of the parallel realization of the
algorithm, the random sequences have to be produced with similar CP U times.

514

T.V. Gurov and P.A. Whitlock
N=30000, MT-MN 100fs
‘correct’ sol. 100fs
N=150000, MT-MN 150fs
‘correct’ sol. 150fs
N=750000, MT-MN 200fs
‘correct’ sol. 200fs

20

15

S o l u t i o n - a.u.

S o l u t i o n - a.u.

15

10

5

0
1000

N=30000, SPRNG 100fs
‘correct’ sol. 100fs
N=150000, SPRNG 150fs
‘correct’ sol. 150fs
N=750000, SPRNG 200fs
‘correct’ sol. 200fs

20

10

5

1500

2000

2500

3000
k*k

3500

4000

,

0
1000

1500

2000

2500

3000

3500

4000

k*k

Fig. 5. Comparison of the electron energy distribution obtained by using of MT-MN
and SPRNG generators with the ”correct” solution on the left and the right pictures,
respectively.

References
1. Barker, J., Ferry, D.: Self-scattering path-variable formulation of high ﬁeld timedependent quantum kinetic equations for semiconductor transport in the ﬁnitecollision-duration regime, Phys. Rev. Lett. 42(26) (1979) 1779–1781.
2. Nedjalkov, M. et al: Statistical modeling of pulse excited electron quantum kinetics
in a one-band semiconductor, Math.& Comp. in Simul. 47 (1998) 391–402.
3. Gurov, T.V., Whitlock, P.A.: An eﬃcient backward Monte Carlo estimator for
solving of a quantum kinetic equation with memory kernel, Math. & Comp. in
Simul. 60 (2002) 85–105.
4. Sobol, I.M.: On quasi-Monte Carlo integration, Math.& Comp. in Simul. 47 (1998)
103–112.
5. L’Ecuyer, P.: Eﬃcient and Portable Combined Random Number Generators, Communications of the ACM 31 (1988) 742–774.
6. Eichenauer-Hermann, J.: Statistical independence of a new class of inversive congruential pseudorandom numbers, Math. Comp. 60 (1993) 375–384.
7. Eichenauer, J., Lehn, J.: A non-linear congruential pseudo-random number generator, Stat. Papers 27 (1986) 315–326.
8. Fishman, G.S.: Multiplicative congruential random number generators with modulus 2β : an exhaustive analysis for β = 32 and a partial analysis for β = 48, Math.
Comp. 54 (1990) 331–344.
9. Park, S.K., Miller, K.W.: Random Number Generators: Good Ones Are Hard to
Find, Communications of the ACM 31 (10) (1988) 1192–1201.
10. Matsumoto, M., Nishimura, T.: Mersenne Twister: A 623-Dimensionally Equidistributed Uniform Pseudo-Random Number Generator, ACM Trans. on Modeling
& Comp. Simul. 8 (1) (1998) 3–30.
11. Holian,B.L. et al: Pseudorandom number generator for massively parallel
molecular-dynamics simulation, Phys. Rev. E 52(2) (1994) 1607–1615.
12. Scalable Parallel Random Number Generators Library for Parallel Monte Carlo
Computations, SPRNG 1.0 and SPRNG 2.0 – http://sprng.cs.fsu.edu.

