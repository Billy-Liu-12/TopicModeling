Procedia Computer
Science
ProcediaComputer
Computer Science
Procedia
Science001 (2010)
(2012)1–8
1427–1434

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Modiﬁed QR Decomposition to Avoid Non-Uniqueness in Water
Supply Networks with Extension to Adjoint Calculus
Oliver Kolb, Pia Domschke and Jens Lang
Technische Universit¨at Darmstadt, Department of Mathematics
and DFG Graduate School of Excellence Computational Engineering, Dolivostr. 15, 64293 Darmstadt

Abstract
The dynamic simulation and optimization of water supply networks contains various diﬃculties. One of them
is that a classical modelling may yield singularities in the form of non-unique solutions. In [1], the application of
singular value decomposition (SVD) is proposed in the context of water supply networks. Since the SVD of a matrix
is computationally very expensive, we introduce an approach based on the QR decomposition of a suitably modiﬁed
matrix. The properties of the resulting solution are analysed and we show the applicability of our method on a real
life water supply network. Further, we incorporate the presented approach in an adjoint calculus to provide sensitivity
information such that gradient-based optimization methods can be applied.

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: water supply networks, QR decomposition, adjoint calculus

1. Introduction
Simulation and optimization of water supply networks is a topic of great common interest. The ﬁrst algorithm to
determine pressure heads and ﬂows for a networked system in the steady state case was published in 1936 [2]. Meanwhile, a variety of software packages has been implemented, e.g. KANET [3], STANET [4] and EPANET [5]. The
latter one is released as freeware by the United States Environmental Protection Agency, broadly accepted, and often
a core part of proprietary packages. But EPANET and also other codes have diﬃculties with certain constellations
of control devices. Several problem cases have been published by Simpson in 1999 [6]. Meanwhile, the EPANET
software copes with all of them but many recent publications still report about new cases where it fails or computes
wrong results, e.g. [7, 8].
One underlying problem can be explained by a very simple example: Consider two closed valves as shown in
Fig. 1. The equations modelling the pressure heads hl and hr and the ﬂow rates ql and qr at the connection of the two
Email address: kolb@mathematik.tu-darmstadt.de (Oliver Kolb)

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.158

1428

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434
O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

valves are given as follows,

⎞
⎛
⎛ ⎞
⎜⎜⎜hl − hr ⎟⎟⎟
⎜⎜0⎟⎟
⎜⎜⎜⎜ql − qr ⎟⎟⎟⎟ ! ⎜⎜⎜⎜⎜0⎟⎟⎟⎟⎟
⎟ = ⎜⎜⎜ ⎟⎟⎟ .
F(hl , ql , hr , qr ) = ⎜⎜⎜
⎜⎝⎜ ql ⎟⎟⎟⎠⎟
⎜⎜⎝0⎟⎠⎟
0
qr

2

(1)

=: b(hl ,ql ,hr ,qr )

Here, the pressure head between the two valves is not uniquely determined by the model equations. We only claim
that hl equals hr . From the practical point of view, we might not be interested in the “real” pressure values between the
two closed valves, but in a dynamic or quasi-stationary numerical simulation, we would expect the pressure variables
to keep the same or at least similar values as in the previous time step.
h =?
ql = 0

hl = hr
ql = qr

qr = 0

Figure 1: Two closed valves – the model equations do not yield a unique solution

Of course, one could cope with the non-uniqueness in the mentioned example but the situation becomes more
diﬃcult for large networks and especially when devices are state-controlled so that “truncated” parts are not known
a priori. Anyway, we expect getting into trouble when solving the in general nonlinear model equations of a water
supply network with Newton’s method in situations like above.
The nature of the non-uniqueness in our small example is in close correlation with the Jacobian matrix of the
model equations:
⎞
⎛
⎜⎜⎜1 0 −1 0 ⎟⎟⎟
⎜⎜⎜0 1 0 −1⎟⎟⎟
⎟⎟ .
(2)
A(hl , ql , hr , qr ) = ⎜⎜⎜⎜
0 ⎟⎟⎟⎟⎠
⎜⎜⎝0 1 0
0 0 0
1

The Jacobian matrix is singular, and obviously, the vector v0 = (1, 0, 1, 0) is an element of the kernel of A. Thus, when
solving A δ = b in Newton’s method, we have to cope with the singularity of A, and moreover, an arbitrary multiple
of v0 could be added to any solution δ, which corresponds to arbitrary but equal values for hl and hr .
As already mentioned, from the practical point of view, we might not be interested in the pressure values between
the two closed valves, but at least, we have to ensure that the underlying singularity does not impede the solution
process of the whole system of model equations. Moreover, we would prefer the pressure variables to change as little
as possible.
In literature, there are diﬀerent approaches to handle the shown problem in general. Alvarez et al. [7] propose to
add virtual tanks in the network. In [9], Deuerlein proposes a reformulation of the model equations in the form of a
minimization problem. For the analysis of the resulting model, he also uses game theory. H¨ahnlein [1] uses basically
the same modelling as we do. For solving the sets of linear equations in Newton’s method, he applies singular value
decomposition.
Regarding the example problem, solving A δ = b with an SVD has exactly the desired eﬀect: We get the solution
of the linear system of equations with minimal norm – the solution component in the nullspace of A (multiples of the
vector v0 ) equals zero. Since this property of using an SVD for solving sets of linear equations holds in a more general
setting, singular value decomposition seems to be a good approach. While we get a solution of the linear system of
equations (if one exists), the correction terms for the “critical variables” (here hl and hr ) are kept small. Moreover,
we may eliminate small singular values in the SVD of the matrix to stabilize the solution process. Besides all those
advantages of using singular value decomposition, the price to pay is the huge computational eﬀort.
Typically, there are various points in water supply networks where the pressure variables may not be uniquely
determined and thus may be “critical” in the solution process. Without proper treatment, one gets very large correction
terms δ in Newton’s method or no solution at all for the linear system of equations, and either usually leads to a failure
of the method.

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434
O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

1429
3

In the next section, we will present our approach to the solution of the introduced class of problems. In the general
setting, parts of the solution of the underlying sets of linear equations are uniquely determined while there may be
degrees of freedom in other parts. We want to keep those solution components as small as possible while maintaining
a useful solution.
˜ Since we know the critical variables in
Our approach is based on the QR decomposition of a modiﬁed matrix A.
our applications, the original matrix A is extended with additional rows in such a way that the resulting matrix has
full rank. The basic idea behind this approach is to penalize corrections in critical variables. Since various choices for
the additional rows are possible that meet the assumptions made in the following theoretical analysis, we will give an
example afterwards to demonstrate the inﬂuence of the choice.
Although we increase the size of the underlying matrix, the application of a QR decomposition to the modiﬁed
matrix compared to the SVD of the original matrix results in an enormous speed-up. But this is not the only contribution we make to the simulation task of water supply networks. Additionally, we use the decomposition of the modiﬁed
matrix to eﬃciently compute sensitivity information with respect to a given target functional in Sect. 3.
In contrast to the modelling used in EPANET, our software is not based on a quasi-steady-state model. The
dynamics of the water in the pipes are modelled by the so-called water hammer equations, a hyperbolic system
of partial diﬀerential equations (PDEs). In this context, the application of adjoint equations to derive sensitivity
information is widely used. We make use of them in a ﬁrst-discretize manner. For the discretization of the PDE, we
apply an implicit box scheme [10], which allows for coarse grids. Numerical results are given in Sect. 4.
2. Theoretical Analysis - Forward Direction
The discretization of the model equations of the whole water supply network yields a coupled system of nonlinear
algebraic equations E(y, u), which depends on state variables y = (y(t0 ), . . . , y(tN )), like pressure heads and ﬂow
rates, and control variables u = (u(t0 ), . . . , u(tN )), e.g. the speed of pumps. For a given initial state y(t0 ) ∈ Rn and
control variables for all time steps, the set of equations can be partitioned and solved for y(t j ) time step by time step
( j = 1, . . . , N) with Newton’s method by solving subsets of E of the form
F(t j , t j+1 , y(t j ), y(t j+1 ), u(t j ), u(t j+1 )) = 0 .

(3)

In every step of Newton’s method, we have to compute a correction δ by solving a linear system of equations of
the form
Aδ = b ⇔ Aδ − b = 0
(4)

with A being an n × n matrix. If A is singular (or ill-conditioned), we cannot make use of an LU decomposition of A
in order to solve (4). Instead, we reformulate (4) as linear least squares problem
min A δ − b
δ

2
2

.

(5)

This problem can always be solved with a singular value decomposition of A. The SVD yields the (unique) solution
δ∗ of (5) where additionally δ∗ 2 is minimal among all solutions. In general, there is a residual r∗ = A δ∗ − b.
Linear least squares problems can also be solved via a QR decomposition of the underlying matrix if it has full
rank. Therefore, we consider the modiﬁed problem
min A˜ δ − b˜
δ

2
2

(6)

A
b
.
with A˜ =
and b˜ =
Bs
0
Here, Bs is a k × n matrix (with k ≤ n) where in each row, there is exactly one nonzero entry s > 0 and at most one
entry in every column, for example,
⎞
⎛
⎜⎜⎜ s 0 0 0 0⎟⎟⎟
⎟
⎜⎜⎜
(7)
Bs = ⎜⎜0 s 0 0 0⎟⎟⎟⎟ .
⎠
⎝
0 0 0 s 0

1430

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434
4

O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

Let IB be the set of column indices of the nonzero entries in Bs (in the example IB = {1, 2, 4}). By adding additional
rows to A, we can achieve that A˜ has full rank, and accordingly, the modiﬁed minimization problem (6) can be solved
˜
via a QR decomposition of A.
There are several advantages of using a singular value decomposition for solving the original problem (5):
1. If A is regular, δ∗ = A−1 b and r∗ = 0.
2. If A is not regular, δ∗ 2 is minimal among all solutions.
3. By eliminating small singular values, the solution process can be stabilized.
The main disadvantage of using SVD is the computational eﬀort. Typically, the singular value decomposition is
computed in two steps. First, the matrix is reduced to a bidiagonal matrix, and afterwards, the SVD of the bidiagonal
matrix is computed by an iterative method up to a certain precision. In one of our real life applications, we have
a 766 × 766 matrix with 1774 nonzero entries. For the computation of the SVD, 9.68 seconds are needed using
MATLAB [11].
For the same example, the QR factorization of the corresponding modiﬁed matrix (1018 × 766 with 2026 nonzero
entries) takes only 13 milliseconds. Hence, from the computational point of view, we prefer a QR decomposition to
solve the modiﬁed problem (6) instead of solving (5) with an SVD. The results computed for the modiﬁed task (6)
have to be measured in comparison to the three points given above. This is done in the following.
Let δ˜ ∗ be the unique solution of (6) and r˜∗ = A δ˜ ∗ − b. With
f (δ) = A˜ δ − b˜

2
2

2
2

= Aδ − b

we have

+ s2
j∈IB

δ2j = A δ − b

2
2

+ s2 δIB

f (δ˜ ∗ ) ≤ f (δ∗ ) .

2
2

(8)

(9)

Inequality (9) yields for the corresponding residuals
r˜∗

2
2

≤ r∗

2
2

+ s2 δ∗IB

− δ˜ ∗IB

2
2

2
2

≤ r∗

2
2

+ s2 δ∗IB

2
2

(10)

.

Thus, the maximum deviation of the Euclidean norm of the residual term r˜∗ from the possible minimum r∗ 2 is
limited and can be reduced by reducing s. In particular, if A is regular (or at least b is in the range of A), we have
r∗ 2 = 0 and
r˜∗ 2 ≤ s δ∗IB 2 .
(11)
Moreover, we get in the regular case:

A (δ˜ ∗ − δ∗ ) = r˜∗

⇔

δ˜ ∗ − δ∗ = A−1 r˜∗ .

(12)

Taking the Euclidean norm on both sides yields
δ˜ ∗ − δ∗
and ﬁnally1

2

≤ A−1

2

r˜∗

(11)
2

≤ A−1

δ˜ ∗ − δ∗
δ∗ 2

2

2

s δ∗IB

≤ s A−1

2

≤ s A−1

2

2

≤ A−1

2

s δ∗

2

(13)

(14)

for the relative error of δ˜ ∗ compared to δ∗ = A−1 b.
Since δ˜ ∗IB − δ∗IB 2 ≤ δ˜ ∗ − δ∗ 2 , we also get from (13):2
δ˜ ∗IB − δ∗IB
δ∗IB

1 Note

that δ˜ ∗ = δ∗ if δ∗ 2 = 0.
= δ∗IB if δ∗IB

2 Analogously, δ
˜∗
IB

2

= 0.

2

2

.

(15)

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434
O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

1431
5

In addition to the given results, (9) also yields
δ˜ ∗IB

2
2

≤ δ∗IB

2
2

−

1
s2

2
2

r˜∗

− r∗

2
2

≤ δ∗IB

2
2

.

(16)

≥0

This means that regarding the indices IB of the “correction terms” δ˜ ∗ and δ∗ , the correction induced by the QR
decomposition of the modiﬁed matrix A˜ is not greater than the one induced by the SVD of the original matrix A. This
is an important property since the set of indices IB typically refers to “critical” variables of the problem, while the rest
of the variables is supposed to be determined anyway.
So far, we have given quantitative results for our QR decomposition approach related to the ﬁrst two advantages
of using singular value decomposition. To give a quantitative result related to the third point, we consider the case
IB = {1, . . . , n} with Bs = sIn , where In is the n-dimensional identity matrix.
Let A = UΣV T be a singular value decomposition of A with
⎛
⎜⎜⎜σ1
⎜⎜
Σ = ⎜⎜⎜⎜
⎜⎝

For the modiﬁed matrix A˜ we get
A˜ T A˜ = AT

BTs

..

.
σn

⎞
⎟⎟⎟
⎟⎟⎟
⎟⎟⎟ .
⎟⎠

A
= AT A + B2s = V (Σ2 + B2s ) V T .
Bs

(17)

(18)

Hence, the singular values σ
˜ j ( j = 1, . . . , n) of A˜ are given by
σ
˜ 2j = σ2j + s2 .

(19)

In particular, we have σ
˜ j > σ j and σ
˜ j ≥ s > 0.
While in the results above a smaller s is always preferred, here, the opposite is the case since an increase of the
singular values leads to more stability. Thus, in practice, a trade-oﬀ has to be made.
3. Theoretical Analysis - Backward Direction
Let f (y, u) be a (scalar) quantity of interest. We would like to gain sensitivity information, that is, the dependency
of f with respect to the control variables. In this context, the state variables y(u) are considered as a function of the
control variables, induced by the model equations E. The desired information can be eﬃciently computed by solving
the (linear) adjoint equation
T
T
∂
∂
(20)
E(y(u), u) ξ = −
f (y(u), u) .
∂y
∂y
Due to the special structure of E, this can also be done time step wise, but backwards in time, and we ﬁnally have to
solve linear systems of equations with the same matrices as in the forward direction, but transposed.
Thus, we have to solve systems of the form
AT ξ = c .
(21)
In the whole section, we postulate that c is in the range of AT . This has the following reason: The solution of the
simulation process has degrees of freedom in the kernel ker(A) of A. Thus, regarding the quantity of interest f ,
it is reasonable to claim that the partial derivatives of f with respect to the state variables (in each time step) are
perpendicular to ker(A), which is equivalent to being in the range of AT . Additionally to the partial derivatives of f ,
c also may contain components from the preceding time step. This can only occur in parts of the network where the
modeling contains temporal derivatives, but those parts do not suﬀer from the described problem of non-uniqueness
since the state variables of consecutive time steps are linked here.

1432

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434
O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

6

Let ξ∗ be the solution of (21) of minimal Euclidean norm. Similar to Sect. 2, this can be computed by a singular
value decomposition of A respectively AT . It is natural to apply the QR decomposition of A˜ to solve the modiﬁed
problem
ξ
=c.
(22)
A˜ T
μ
With the QR decomposition

Q˜
A˜ = ˜ 11
Q21

Q˜ 12 R˜
,
Q˜ 22 0

(23)

where Q˜ 11 and R˜ are n × n matrices, the solution of (22) of minimal norm can be written as
ξ˜∗
Q˜
= ˜ 11 R˜ −T c .
Q21
μ˜ ∗

(24)

Q˜
This results from the well-known fact that the columns of ˜ 12 form a basis of the kernel of A˜ T . With q˜ ∗ = AT ξ˜∗ − c
Q22
we have
ξ∗ 2
ξ˜∗ 2
(25)
ξ˜∗ 22 + s12 q˜ ∗ 22 = ξ˜∗ 22 + μ˜ ∗ 22 =
= ξ∗ 22 .
∗ 2 ≤
μ˜
0 2
This yields

q˜ ∗

2
2

≤ s2 ( ξ∗

2
2

− ξ˜∗ 22 ) ≤ s2 ξ∗

2
2

(26)

as upper bound for the residual with respect to the original equation (21). Analogously to Sect. 2, we get in the regular
case
ξ˜∗ − ξ∗ 2
≤ s A−T 2
(27)
ξ∗ 2
for the relative error of ξ˜∗ compared to ξ∗ = A−T c.
4. Numerical Results
In our current implementation, we put the indices of all pressure variables in front of and behind valves and pumps
into the set IB to ensure full rank of the underlying matrices without taking a closer look at the network structure. As
already mentioned in the introduction, various choices for IB are possible. To give an impression of the inﬂuence of
the choice, let us ﬁrst consider the introductory example with the following (initial) values for the state variables:
h0l = 10.01 , q0l = 0.01 , h0r = 10 , q0r = 0 .

(28)

First, we compute δ∗ by applying singular value decomposition,3 which yields
h1l = 10.005 , q1l = 0 , h1r = 10.005 , q1r = 0 .

(29)

Thus, the two pressure variables “meet” in the middle while the ﬂow rates are set to zero.
Next, we apply our QR decomposition approach. Since the two pressure variables (indices 1 and 3) are the critical
variables in this example, we try IB = {1}, IB = {3} and IB = {1, 3} with s = 10−8 . We expect all three choices to deliver
useful solutions because the two critical variables are connected by an equality constraint. Therefore, the penalization
of the correction of one of these variables should be suﬃcient.
In the ﬁrst case, we get
h1l = 10.01 , q1l = 0 , h1r = 10.01 , q1r = 0 .
(30)
Analogous to the solution induced by the SVD, the ﬂow rates are set to zero. Since we only penalized corrections in
the ﬁrst variable, both pressure variables end up at the “old” value of hl , 10.01.
3 The

computations were made using MATLAB [11].

1433

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434

7

O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

In the second case, we get

h1l = 10 , q1l = 0 , h1r = 10 , q1r = 0 .

(31)

While the ﬂow rates are set to zero, we now end up at the “old” value of hr for both pressure variables since we have
only penalized corrections in the third variable.
In the third case, we get
h1l = 10.005 , q1l = 0 , h1r = 10.005 , q1r = 0 .
(32)
Up to roundoﬀ errors, this solution is equal to the solution obtained by the SVD. The reason for this is that we
have penalized corrections of both pressure variables, and therefore, they meet in the middle while the ﬂow rates
are determined to be zero anyway. Even if we choose IB = {1, 2, 3, 4}, a short computation in MATLAB yields the
same solution since the slight penalization (s = 10−8 ) does not impede the “necessary” corrections for the ﬂow rate
variables.
Altogether, this small example illustrates that the choice of IB does have inﬂuence on the computed solution but
mainly on those variables which are not uniquely determined by the model equations. The computed corrections for
those variables were useful in all cases since enough indices of critical variables were included in IB .
Now, let us consider a real life water supply network from one of our industry partners. The structure of the
network is shown in Fig. 2. The fresh water stored in the tank farm is pressurized in the pump station and ﬂows
through a system of ﬂow control valves and surge vessels. Up the hill, water can be stored in an intermediate reservoir
or is delivered directly to several receiving stations in diﬀerent valleys. Overall, the network consists of 8 pumps,
10 surge vessels, 20 pipes, 54 short pipes, 12 tanks and 118 valves. We consider a scenario with varying consumer
demands over a period of 4 hours. The control used was the result of a gradient-based optimization [12], where
the entire energy consumption of the pumps was minimized. As temporal step size we use one minute, resulting in
186,720 unknown state variables. A single run of our simulation software needs 2.4 seconds on an AMD AthlonTM 64
X2 Dual Core Processor 5000+. Since the computation of the corresponding adjoint state only demands the solution
of a linear system of equations of the same size as the nonlinear model equations, the computational eﬀort for this is
dominated by the time needed for the simulation.
intermediate
reservoir
tank farm

pump station

ﬂow control unit
and surge vessels

receiving
stations

Figure 2: Structure of a real life water supply network

For the computations we used s = 10−8 . Note that the choice of s does not inﬂuence the accuracy of the computed
solution with respect to the model equations since the termination criterion in Newton’s method is deﬁned via the
residual of the nonlinear equations. But the choice of s can aﬀect the number of iterations needed to ﬁnd such a
solution. Table 1 shows the total number of iterations and the average per time step for the same scenario as above
and various choices for the parameter s. As one can see, the number of iterations does not react very sensitively on s
within a wide range.
Table 1: Number of iterations in Newton’s method depending on s

parameter s
number of iterations
average per time step

10−5
456
1.90

10−6
392
1.63

10−7
373
1.55

10−8
373
1.55

10−9
373
1.55

10−10
373
1.55

10−11
373
1.55

Finally, we would like to compare the computational eﬀort of our approach to the application of singular value
decomposition. The example given in Sect. 2 is based on the network presented in this section. Thus, even if we
only need one iteration in Newton’s method per time step, the solution of the same simulation task would take us
240 × 9.68 seconds ≈ 39 minutes with the SVD, compared to the 2.4 seconds needed with our new QR approach.

1434

O. Kolb et al. / Procedia Computer Science 1 (2012) 1427–1434
O. Kolb et al. / Procedia Computer Science 00 (2010) 1–8

8

5. Summary
We have introduced a novel approach to tackle the problem of non-unique solutions in water supply networks. The
discretized model equations are solved with Newton’s method, where the solution of the underlying linear systems of
equations is replaced by a modiﬁed minimization task, which can eﬃciently be solved via a QR decomposition. The
resulting solutions feature similar properties as if the original systems were solved with a singular value decomposition. We illustrated the eﬀect of our approach for a small example and demonstrated its applicability to a real life
problem.
Additionally to solving the simulation task for water supply networks, we have introduced and analysed a technique to compute sensitivity information based on the presented approach. Adjoint equations are used to compute
gradients of a given quantity of interest with respect to the control variables of the problem and are applied in a
gradient-based optimization framework. Since the adjoint equations are linear and have a special structure, the additional computational eﬀort to compute the sensitivity information is small compared to solving the simulation task.
Acknowledgements. This paper was supported by the German Federal Ministry of Education and Research (BMBF,
grant 03MAPAK1). Part of the data was provided by the Siemens AG.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]

C. H¨ahnlein, Numerische Modellierung zur Betriebsoptimierung von Wasserverteilnetzen, Ph.D. thesis, TU Darmstadt (2008).
H. Cross, Analysis of ﬂow in networks of conduits or conductors, University of Illinois Bulletin No. 286 (1936).
KANET, http://kanet.iwg.uni-karlsruhe.de.
STANET, http://www.stafu.de.
L. A. Rossman, EPANET 2 users manual, U.S. Environmental Protection Agency, Cincinnati, OH (2000).
A. R. Simpson, Modeling of pressure regulating devices: The last major problem to be solved in hydraulic simulation, in: Proceedings of
29th Annual Water Resources Planning and Management Conference, ASCE, 1999.
´
R. Alvarez,
N. B. Gorev, I. F. Kodzhespirova, Y. Kovalenko, S. Negrete, A. Ramos, J. J. Rivera, Pseudotransient continuation method in
extended period simulation of water distribution systems, Journal of Hydraulic Engineering 134 (10) (2008) 1473–1479.
J. Deuerlein, A. R. Simpson, E. Gross, The never ending story of modeling control-devices in hydraulic systems analysis, in: Proceedings of
Water Distribution Systems Analysis, ASCE, 2008, p. 72.
J. Deuerlein, Zur hydraulischen Systemanalyse von Wasserversorgungsnetzen, Ph.D. thesis, U Karlsruhe (2002).
O. Kolb, J. Lang, P. Bales, An implicit box scheme for subsonic compressible ﬂow with dissipative source term, Numerical Algorithms 53 (2)
(2010) 293–307. doi:10.1007/s11075-009-9287-y.
MATLAB 7.5, The MathWorks Inc. (2007).
A. W¨achter, L. T. Biegler, On the implementation of a primal-dual interior point ﬁlter line search algorithm for large-scale nonlinear programming, Mathematical Programming 106 (1) (2006) 25–57.

