Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 2297–2306

International Conference on Computational Science, ICCS 2011

Implicit Second Order Weak Taylor Tau-Leaping Methods
for the Stochastic Simulation of Chemical Kinetics
T.-H. Ahna,∗, A. Sandua
a Computational Science Laboratory, Department of Computer Science
Virginia Polytechnic Institute and State University, Blacksburg, Virginia 24061, USA

Abstract
For biochemical systems, when some chemical species are represented by small numbers of molecules, discrete
and stochastic approaches are more appropriate than continuous and deterministic approaches. The stochastic simulation algorithm (SSA), proposed by Gillespie, is a cardinal simulation method for the chemical kinetics. Because the
SSA simulates every reaction event, the amount of the computational time is huge when models have many reaction
channels and species. Therefore there have been many alternative algorithms whose goal is to improve the computational efﬁciency of the SSA. In this paper we use stochastic Taylor expansions to propose implicit second order weak
Taylor tau-leaping methods for the stochastic simulation of chemical kinetics. These methods are motivated by the
theory of weakly convergent discretizations of stochastic differential equations. Three different schemes of the second
order weak Taylor tau-leaping methods are numerically tested to demonstrate the performance with accuracy.
Keywords: Stochastic simulation algorithm (SSA), stochastic differential equations (SDEs), discrete time
approximations, weak Taylor approximations, tau-leaping methods

1. Introduction
Biological systems are frequently modeled as networks of interacting chemical kinetics. In systems formed by
living cells, these reactions evolve stochastically and the stochastic effects typically become important when there are
a small number of molecules of one or more species involved in a reaction [1]. The stochastic approach treats the
time-evolution as a kind of randomness that is inherent to all biochemical systems. The Chemical Master Equation
(CME) [2, 3] is the time-evolution equation for the probability function of the system’s state. Gillespie proposed
the stochastic simulation algorithm (SSA) that is the stochastic process deﬁned by the CME by using a Monte Carlo
method [4]. Despite representing exact realizations of the CME, the amount of computational time of the SSA cause
by executing every reaction is always an issue in real systems. This drawback motivates attempts to improve the
computational efﬁciency with approximate algorithms.
One approximate acceleration procedure is the “tau-leaping method” [5], in which some chosen time τ that encompasses more than one reactions. Therefore, many reactions can be simulated at each step with a pre-selected time
∗ Corresponding

author
Email addresses: thahn@cs.vt.edu (T.-H. Ahn), sandu@cs.vt.edu (A. Sandu)

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.250

2298

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

τ. The tau-leaping method requires that the selected τ must be small enough to satisfy the “leap condition”: The
expected state change induced by the leap must be sufﬁciently small that propensity functions remain nearly constant
during the time step τ. The number of times that each reaction ﬁres in time τ can be approximated by a Poisson
random variable.
While the tau-leaping method represents the efﬁciency for the one time scale systems, it gives unstable results with
the larger stepsize solution especially for the stiff systems. Stiffness generally manifests when there are well-separated
“fast” and “slow” time scales present, and the “fast modes” are stable. The implicit tau-leaping method improves the
numerical stability of the explicit tau-leaping method in the stiff systems [6]. For stiff problems, the implicit tauleaping method generates damping effect that has much smaller variance than the expected value for large stepsizes.
With the improved step size selection strategies [5, 7], there exist several other tau-leaping attempts to accelerate the
efﬁciency of the exact SSA through approximations [8, 9, 7, 10].
In here we propose implicit second order weak Taylor tau-leaping methods for the stochastic simulation of chemical kinetics. Existing trapezoidal tau-leaping formula is also a second order for the mean part, but the variance part
is still ﬁrst order. Here we attempt to treat the tau-leaping method as the order 2.0 Taylor scheme by the weak convergence discrete time approximation of the stochastic differential equations (SDEs) scheme [11]. In order to discretize
the continuous time process, two convergence criteria are considered; one is the strong convergence for good pathwise
approximation, and the other is the weak convergence for good probability distributional approximation. The weak
convergence criteria is more suitable for many practical situations to avoid the use of multiple integrals for the strong
approximation. We advance three different cases from the family of implicit order 2.0 weak Taylor schemes to the
tau-leaping method. The numerical experiments show that, for stiff systems, all three cases avoid damping effect. But
two cases show unstable for large step size although those are more stable than existing explicit tau-leaping method.
The paper is organized as follows. Section 2 describes the SSA with existing approximation algorithms. SDEs
schemes and the order 2.0 weak Taylor schemes are presented in Section 3. In Section 4 we propose three new
schemes of the implicit order 2.0 weak Taylor tau-leaping methods. The numerical experiments in a sample stiff
system are described in Section 5. Section 6 draws some conclusions with future work.
2. Stochastic Simulation Algorithms for Chemical Kinetics
In this section we review essential concepts of the exact stochastic simulation algorithm and existing accelerated
methods for the SSA, motivating our proposed implicit second order weak Taylor tau-leaping methods.
2.1. Exact Stochastic Simulation Algorithm
Suppose a biochemical system or pathway involves N molecular species S 1 , . . ., S N . Xi (t) denotes the number of
molecules of species S i at time t. People would like to generate the evolution of the state vector X(t) = (X1 (t), ..., XN (t))
given that the system was initially in the state vector X(t0 ). Suppose the system is composed of M reaction channels
R1 , . . ., R M . In a constant volume Ω, assume that the system is well-stirred and in thermal equilibrium at some
constant temperature. There are two important quantities in reaction channels R j : the state change vector ν j = ν·, j =
(ν1, j , ..., νN, j ), and propensity function a j . νi, j is deﬁned as the change in the S i molecules’ population caused by one
R j reaction, and a j (x)dt gives the probability that one R j reaction will occur in the next inﬁnitesimal time interval
[t, t + dt).
The SSA simulates every reaction event [4]. With X(t) = x, p(τ, j|x, t)dτ is deﬁned as the probability that the next
reaction in the system will occur in the inﬁnitesimal time interval [t + τ, t + τ + dτ), and will be an R j reaction. By
letting a0 (x) ≡ M
j=1 a j (x), the equation p(τ, j|x, t) = a j (x) exp(−a0 (x)τ) can be obtained. A Monte Carlo method is
used to generate τ and j. On each step of the SSA, two random numbers r1 and r2 are generated from the uniform (0,1)
1
1
distribution. From probability theory, the time for the next reaction to occur is given by t + τ, where τ =
ln
.
a0 (x)
r1
The next reaction index j is given by the smallest integer satisfying
j

a j (x) > r2 a0 (x).
j =1

After τ and j are obtained, the system states are updated by X(t + τ) := x + ν j , and the time is updated by t := t + τ.
This simulation iteration proceeds until the time t reaches the ﬁnal time.

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

2299

2.2. Tau-Leaping Method
The SSA is an exact stochastic method for chemical reactions, however, it is very slow for many real systems
because the SSA simulates one reaction at a time. One approximate simulation approach is the tau-leaping method [5].
The basic idea of the tau-leaping method is that many reactions can be simulated at each step with a preselected time
τ. The tau-leaping method requires that the selected τ must be small enough to satisfy the leap condition. The leap
condition is that the expected state change induced by the leap must be sufﬁciently small that propensity functions
remain nearly constant during the time step τ.
K j (τ; x, t) is deﬁned as the number of times, given X(t) = x, that reaction channel R j will ﬁre in the time interval
[t, t + τ) where j = 1, . . ., M. If the leap condition is satisﬁed, then the state X(t) = x can be updated by
M

ν j K j (τ; x, t).

X(t + τ) = x +

(1)

j=1

K j (τ; x, t) is modeled by a Poisson random variables. Poisson random variable counts the number of occurrence
during a given time period. The probability of having exactly k occurrence during this time is given by P(X = k) =
[e−u (u)k ]/k!. Therefore we can say that P(a, τ) can be interpreted physically as the number of events that will occur
in any ﬁnite time τ, given that the probability of an event occurring in any future inﬁnitesimal time dt is a dt. Finally,
the explicit tau-leaping method assumes
K j (τ; x, t) ≈ P j (a j (x)τ),
where P j is a Poisson random variate with mean and variance of a j (x)τ.
2.3. Implicit Tau-Leaping and Trapezoidal Methods
In general, the tau-leaping methods are only able to perform well if they continue to take time steps that are of the
one time scale as fast or slow mode. This drawback is caused by the fact that explicit methods advance the solution
from one time to the next by approximating the slope of the solution curve at or near the beginning of the time interval.
If the system is “stiff”, it has widely varying dynamic modes with the fastest mode being stable, the leap condition
will bound the step size τ to the time scale of the fastest mode. Therefore, large leaps cannot be taken for the stiff
system which results in no advantage compared to the exact SSA. In addition, forced big time step size τ might lead
to unstable population states.
The tau-leaping method is explicit because the future random state X(t + τ) is driven only with an explicit function
of current state X(t). An implicit tau-leaping method [6] modiﬁes the explicit tau-leaping method as follows. P j can
be split as
P j = a j τ + (P j − a j τ).
We then evaluate the mean value part (a j τ) at the unknown state X(t + τ), and the zero-mean random part (variance of
the Poisson variables) at the known state X(t). Therefore,
M

ν j τa j X(t + τ) + P j (a j (x)τ) − τa j (x) .

X(t + τ) = x +
j=1

The implicit equation is solved by Newton’s iteration method, and the ﬂoating point state X(t + τ) is rounded to
the nearest integer values. This implicit tau-leaping method allows much bigger step size than the explicit tau-leaping
method in stiff systems. But the large step size might provoke damping effect, which means that when a large step size
is used to solve a stiff system, it yields a much smaller variance and damp out the natural ﬂuctuations of the stochastic
nature [6].
The trapezoidal tau-leaping formula was proposed to reduce the damping effect of the implicit tau-leaping formula
[9]. The formula is
M
τ
τ
ν j a j X(t + τ) + P j (a j (x)τ) − a j (x) .
X(t + τ) = x +
2
2
j=1
Because the trapezoidal rule has a second order convergence without damping effect, this formula has better accuracy
and stiff stability than the implicit tau-leaping method. The trapezoidal method, however, is second order for the mean
value, but the variance is still ﬁrst order.

2300

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

3. Discrete Time Approximations for SDEs
This section discusses the systematic development of numerical methods for stochastic differential equations
(SDEs), and in particular the weak approximations. We follow [11].
3.1. Stochastic Differential Equations (SDEs)
SDEs are differential equations that incorporate white noise (the derivative of a Wiener process) and thus their
result is a random process. In integral form the random process solution {X(t), t ≥ 0} is represented as [11].
t

X(t) = X(t0 ) +
t0

t

μ(X(s)) ds +

σ(X(s)) dW(s)

(2)

t0

for t ∈ [t0 , T ]. Here we consider a d-dimensional system, X(t) ∈ d . {W(t), t ≥ 0} is an m-dimensional Wiener
process, W(t) ∈ m . The functions μ : d → d and σ : d → d×m are sufﬁciently smooth. We call μ the drift
coefﬁcient (slowly varying continuous random component) and σ the diffusion coefﬁcient (rapidly varying continuous
random component).
Because the Wiener process is non-differentiable, special rules of stochastic calculus are required when deriving
numerical methods for SDEs. There are two widely used versions of stochastic calculus, Ito and Stratonovich [11].
Following the Ito calculus, the integral equation (2) can be written in differential form as
dX(t) = μ(X(t)) dt + σ(X(t)) dW(t) .

(3)

3.2. Convergence
Consider a time discretization of the SDE (2) which uses a maximum step size δ and produces an approximation
{Y δ (t)} of {X(t)}. The magnitude of the pathwise approximation error at a ﬁnite terminal time T is measured by the
expected absolute value of the difference between the Ito process and the approximation [11]
ε(δ) = E{|X(T ) − Y δ (T )|} .
The following two deﬁnitions of convergence [11] are useful in the analysis of discretization methods.
Deﬁnition 1. (Strong convergence).
strongly to X at time T if

A time discrete approximation Y δ (t) with maximum step size δ converges
lim E{|X(T ) − Y δ (T )|} = 0,

δ→0

and if there exists a positive constant C, which does not depend on δ, and a ﬁnite δ0 > 0 such that
E{|X(T ) − Y δ (T )|} ≤ C δγ
for each δ ∈ (0, δ0 ), then Y δ is said to converge strongly with order γ > 0.
In many practical situations it is not necessary to have numerical solutions that accurately approximate each path of
an Ito process. Often one is only interested to accurately compute moments, probability densities, or other functionals
of the Ito process. The concept of weak convergence [11] describes numerical accuracy in this situation.
Deﬁnition 2. (Weak convergence). A time discrete approximation Y δ (t) with maximum step size δ converges weakly
to X(t) at time T as δ ↓ 0, with respect to a class C of polynomials g : Rd → R if
lim E{g(X(T ))} − E{g(Y δ (T ))} = 0,

δ→0

for all g ∈ C. If there exist a positive constant C, which does not depend on δ, and a ﬁnite δ0 > 0 such that
E{g(X(T ))} − E{g(Y δ (T ))} ≤ C δβ
for each δ ∈ (0, δ0 ), then Y δ is said to converge weakly with order β > 0.
These two convergence criteria lead to the development of different discretization schemes.

2301

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

3.3. Discretization Schemes
Consider a time discretization t0 < t1 · · · < tn < · · · < t N = T of the time interval [t0 , T ]. The stochastic Euler
approximation [11] of the SDE (3) is
m

Ykn+1 = Ykn + μk Δtn +

σk, j ΔW nj ,

k = 1, · · · , d

(4)

j=1
n+1

n

where superscripts denote vector and matrix components. Here ΔW nj = W tj − W tj is the N(0; Δ tn ) increment of the
jth component of the m-dimensional standard Wiener process W on [tn , tn+1 ], and ΔW nj1 and ΔW nj2 are independent for
j1 j2 . It was shown in [12] that the Euler scheme converges with strong order γ = 0.5 under Lipschitz and bounded
growth conditions on the coefﬁcients μ and σ.
For weak convergence the random increments ΔW n of the Wiener process can be replaced by other random variables ΔW n which have similar moment properties to the ΔW n , but are less expensive to compute [11]. For instance,
in the scalar case d = m = 1, a weak Euler approximation with weak order β = 1.0 [11] is
Y n+1 = Y n + μ (Y n ) Δtn + σ (Y n ) ΔW n
where ΔW n satisﬁes moment condition
E(ΔW n ) + E (ΔW n )3 + E (ΔW n )2 − Δtn ≤ C (Δtn )2
for some constant C [11]. A simple example of such a random variable is the two-point distributed ΔW n with
√
1
P ΔW n = ± Δtn = .
2
3.4. The Second Order Weak Taylor Scheme
In the general multi-dimensional case d, m = 1, 2, . . . the kth component of the second order weak Taylor scheme
[11] takes the form

Ykn+1 = Ykn + μk Δtn +

1
L0 μk (Δtn )2 +
2

m

m

σk, j ΔW nj + L0 σk, j I (0, j) + L j μk I ( j,0) +

L j1 σk, j2 I ( j1 , j2 ) .

(5)

∂
∂xz

(6)

j1 , j2 =1

j=1

where operators L0 and L j are
L0 =

∂
+
∂t

d

μz
z=1

∂
1
+
∂xz 2 z,

d

m

σz,h σ
=1 h=1

,h

∂2
∂xz ∂x

d

and

Lj =

σz, j
z=1

for j = 1, 2, . . . , m. In addition, the multiple Ito integrals are abbreviated by I ( j1 ,..., j ) =

tn+1
tn

···

s2
tn

1

dW js1 · · · dW js .

Here we have multiple Ito integrals involving different components of the Wiener process, which are generally not
easy to generate. Therefore (5) is more of theoretical interest than of practical use. However, for weak convergence
we can substitute simpler random variables for the multiple Ito integrals [11]. In this way we obtain from (5) the
following simpliﬁed order 2.0 weak Taylor scheme with kth component
Ykn+1

=

Ykn

1
+ μk Δt + L0 μk (Δtn )2 +
2

m

n

j=1

1
σk, j + Δtn (L0 σk, j + L j μk ) ΔW nj +
2

m
j1 , j2 =1

L j1 σk, j2 ΔW nj1 ΔW nj2 + V j1 , j2 .
(7)

Here the W j for j = 1, 2, . . . , m are independent random variables satisfying moment conditions
E(ΔW n ) + E (ΔW n )3 + E (ΔW n )5 + E (ΔW n )2 − Δtn + E (ΔW n )4 − 3(Δtn )2 ≤ C (Δtn )3

(8)

2302

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

for some constant C. An N(0; Δtn ) Gaussian random variable certainly satisﬁed the moment condition (8). A simple
example of such a random variable is the three-point distributed ΔW n with
√
1
P ΔW n = ± 3 Δtn = ,
6

P ΔW n = 0 =

2
.
3

(9)

1
The V j1 , j2 are independent two-point distributed random variables with P V j1 , j2 = ± Δtn = for j2 = 1, . . . , j1 − 1,
2
V j1 , j1 = −Δtn , and V j1 , j2 = −V j2 , j1 for j2 = j1 + 1, . . . , m and j1 = 1, . . . , m.
4. Implicit Second Order Weak Taylor Tau-Leaping Method
In this section new implicit tau-leaping method is introduced by analogy with the implicit order 2.0 weak Taylor
scheme.
4.1. Implicit Second Order Weak SSA with α = 1.0 and β = 1.0
We can form a family of implicit order 2.0 weak Taylor scheme from the simpliﬁed order 2.0 weak Taylor scheme
(7)
Ykn+1

=

1
Ykn + α μk (tn+1 , Y n+1 ) + (1 − α) μk Δ tn + (1 − 2α) β L0 μk (tn+1 , Y n+1 ) + (1 − β) L0 μk (Δtn )2
2
m
m
1
1
+
L j1 σk, j2 ΔW nj1 ΔW nj2 + V j1 , j2 +
σk, j + (L0 σk, j + (1 − 2α)L j μk )Δtn ΔW nj (10)
2 j =1, j =1
2
j=1
1

2

where μk (tn , Y n ) = μk and σk, j (tn , Y n ) = σk, j . When α = 1.0 and β = 1.0 the scheme (10) simpliﬁes to
Ykn+1

=

1
Ykn + μk (tn+1 , Y n+1 )Δ tn − L0 μk (tn+1 , Y n+1 )(Δtn )2
2
m
m
1
1
+
L j1 σk, j2 ΔW nj1 ΔW nj2 + V j1 , j2 +
σk, j + (L0 σk, j − L j μk )Δtn ΔW nj .
2 j =1, j =1
2
j=1
1

(11)

2

We apply the implicit order 2.0 weak Taylor scheme to the stochastic chemical kinetic problem. Recall that the explicit
tau-leaping method (1)is
M

X(t + τ) = x +

ν j P j (a j (x) τ),

(12)

j=1

where P j is a Poisson random variate with mean and variance a j (x)τ. The Poisson variate can be rewritten as the mean
value part plus the variance part of the Poisson variables. Then the variance term is scaled by the standard deviation
of a j (x) as below
P j (a j (x) τ) = a j (x)τ +
where the Poisson noise
ΔP j =

a j (x) ΔP j

P j (a j (x) τ) − a j (x) τ
a j (x)

(13)

is close to a normal variable N(0; τ) when a j is large. The scheme (12) can be written as
M

X(t + τ) = x +

M

ν j a j (x) τ +
j=1

νj

a j (x) ΔP j .

(14)

j=1

In the general multi-dimensional case, the weak Euler scheme, in vector notation, reads
m

Y n+1 = Y n + μ Δ tn +

σ:, j ΔW nj
j=1

(15)

2303

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

where σ:, j is the jth column of σ. We note that (14) is similar to the Euler scheme (15) with
M

μ=

ν j a j (x) ,

Δ tn = τ ,

σ:, j = ν j

a j (x) .

(16)

j=1

Note that
d

L0 μ

=

μk
k=1

∂μ 1
+
∂xk 2 k,

d

L0 σ j

d

∂σ j 1
μk
+
∂xk 2 k,
k=1

=

m

σk,h σ

,h

=1 h=1
d

m

∂2 μ
,
∂xk ∂x

d

Lj μ =

∂ σj
σ ,h
,
∂xk ∂x

σk, j
k=1

∂μ
,
∂xk
d

2

σk,h
=1 h=1

and

L j1 σ j 2 =

σk, j1
k=1

∂σ j2
.
∂xk

(17)

From (11), (16), and (17) the implicit order 2.0 weak tau-leaping SSA method with α = 1.0 and β = 1.0 has the form
⎡ M
⎛ N
⎞⎤
M
M
⎢⎢⎢
⎜⎜⎜
∂a j2 (x) ⎟⎟⎟⎥⎥⎥⎥
1
1
⎢
⎢⎢
ν j a j (X(t + τ)) +
νj
a j1 (x) ⎜⎜⎝ νk, j1
X(t + τ) = x + τ
⎟⎟⎥⎥ ΔW j1 ΔW j2 + V j1 , j2
4 j =1 2 a j2 (x) ⎣ j =1
∂xk ⎠⎦
j=1
k=1
2
1
⎡
⎛M
⎞⎤
M ⎢
N
⎜⎜⎜
∂ah (x) ⎟⎟⎟⎟⎥⎥⎥⎥
τ
⎢⎢⎢
⎜
+
a j (x)
νk, j ⎜⎝ νh
⎢⎣ν j a j (x) −
⎟⎥ ΔW j
2
∂xk ⎠⎦
j=1
k=1
h=1
⎡ N
⎞
⎞⎤
⎛
⎛
M
N
⎢⎢⎢
⎟⎟⎟
⎟⎟⎥⎥⎥
νj
∂a j (x) ⎜⎜⎜ M
∂2 a j (x) ⎜⎜⎜ M
τ
1
⎢
⎟
⎜
⎜
⎢⎢⎣
+
⎜ νk, j ah (x)⎠⎟ −
⎜ νk,h ν ,h ah (x)⎟⎟⎠⎟⎥⎥⎥⎦ ΔW j
⎝
⎝
4 j=1 4 a j (x) k=1 ∂xk h=1
4a j (x) k, =1 ∂xk ∂x h=1
⎡
⎞
⎞⎤
⎛
⎛
M
⎢⎢⎢ N ∂a j (X(t + τ)) ⎜⎜ M
⎟⎟⎟ 1 N ∂2 a j (X(t + τ)) ⎜⎜⎜ M
⎟⎟⎥⎥⎥
τ2
⎜
⎢
⎟
⎜
⎜
−
ν j ⎢⎢⎣
(18)
⎜ νk,h ah (x)⎠⎟ +
⎜ νk,h ν ,h ah (x)⎟⎟⎠⎟⎥⎥⎥⎦ .
⎝
⎝
2
∂xk
2
∂xk ∂x
j=1

k=1

k, =1

h=1

h=1

4.2. Implicit Second Order Weak SSA with α = 1.0 and β = 0.0
When α = 1.0 and β = 0.0 the implicit order 2.0 weak tau-leaping SSA method has the form
⎡ M
⎛ N
⎞⎤
M
M
⎢⎢⎢
⎜⎜⎜
⎟⎟⎟⎥⎥⎥
∂a
(x)
1
1
j
2
⎟⎟⎥⎥⎥ ΔW j1 ΔW j2 + V j1 , j2
⎢⎢⎣⎢
ν j a j (X(t + τ)) +
ν j2
a j1 (x) ⎜⎝⎜ νk, j1
X(t + τ) = x + τ
4 j =1
∂xk ⎠⎦
a
(x)
j
2
j=1
j
=1
k=1
2
1
⎡
⎛M
⎞⎤
M ⎢
N
⎜
τ
∂ah (x) ⎟⎟⎟⎟⎥⎥⎥⎥
⎢⎢⎢
⎜⎜⎜
+
a j (x)
νk, j ⎜⎝ νh
⎢⎣ν j a j (x) −
⎟⎥ ΔW j
2
∂xk ⎠⎦
j=1
k=1
h=1
⎡ N
⎞
⎞⎤
⎛
⎛
M
N
⎢⎢⎢
⎟⎟⎟
⎟⎟⎥⎥⎥
νj
∂a j (x) ⎜⎜⎜ M
∂2 a j (x) ⎜⎜⎜ M
τ
1
⎢
⎢⎣⎢
+
⎜⎜⎝ νk, j ah (x)⎟⎟⎠ −
⎜⎜⎝ νk,h ν ,h ah (x)⎟⎟⎟⎠⎥⎥⎦⎥ ΔW j
4 j=1 4 a j (x) k=1 ∂xk h=1
4a j (x) k, =1 ∂xk ∂x h=1
⎡
⎞
⎞⎤
⎛
⎛
M
⎢⎢⎢ N ∂a j (x) ⎜⎜ M
⎟⎟⎟ 1 N ∂2 a j (x) ⎜⎜⎜ M
⎟⎟⎥⎥⎥
τ2
⎜
⎢
−
ν j ⎢⎢⎣
(19)
⎜⎜⎝ νk,h ah (x)⎟⎟⎠ +
⎜⎜⎝ νk,h ν ,h ah (x)⎟⎟⎟⎠⎥⎥⎥⎦ .
2 j=1
∂xk h=1
2 k, =1 ∂xk ∂x h=1
k=1
4.3. Implicit Second Order Weak SSA with α = 0.5
When α = 0.5 the implicit order 2.0 weak tau-leaping SSA method has the form
X(t + τ)

=

x+

τ
2

M

M

ν j a j X(t + τ) + a j (x) +
j=1

νj
j=1

a j (x) ΔW j

⎡ N
⎞
⎛
⎛
N
⎢⎢⎢
⎟
∂a j (x) ⎜⎜⎜ M
∂2 a j (x) ⎜⎜⎜ M
⎢⎢⎢
⎜⎜⎝ νk, j ah (x)⎟⎟⎟⎟⎠ − 1
⎜⎜⎝ νk,h ν
⎣
∂x
4a
(x)
∂x
∂x
4
a
(x)
k
j
k
j
j=1
k=1
h=1
k, =1
h=1
⎡ M
⎛ N
⎞⎤
M
⎢
⎥
⎜
⎟
⎢⎢⎢
∂a j2 (x) ⎟⎟⎥⎥⎥
1
1
⎜
⎟⎟⎥⎥ ΔW j1 ΔW j2 + V j1 , j2 .
⎢⎢
+
νj
a j1 (x) ⎜⎜⎜⎝ νk, j1
4 j =1 2 a j2 (x) ⎣ j =1
∂xk ⎠⎦
k=1
2
1
τ
+
4

M

νj

⎞⎤
⎟⎟⎟⎥⎥⎥
⎟⎠⎥⎥⎥⎦ ΔW j
,h ah (x)⎟
(20)

2304

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

Dimer species trajectories by the SSA
900
800
X2

Molecules

700
600
500
400

X1

300
200
100
0

X

3

0

0.05

0.1

0.15

Time (sec)

0.2

Figure 1: Decaying-dimerizing trajectories simulated by the Gillespie SSA. The upper curve is X2 , the middle curve is X1 , and the
lower curve is X3 .

5. Experimental Results
This section provides experimental results for the fully implicit tau-leaping methods applied to a stiff system: the
decaying-dimerizing reaction set [6].
5.1. Decaying-Dimerizing Reaction Set
The decaying-dimerizing reaction set [6] consists of three species S 1 , S 2 , and S 3 and four reactions
c1

S 1 −→ 0 ,

c2

S 1 + S 1 −→
←− S 2 ,
c3

c4

S 2 −→ S 3 .

(21)

We chose values for the parameters c1 = 1, c2 = 10, c3 = 1000, and c4 = 0.1 which will render the problem stiff.
Hence the propensity functions are given by a1 = X1 , a2 = 5X1 (X1 − 1), a3 = 1000X2 , and a4 = 0.1X2 where Xi
denotes the number of molecules of species S i . The initial conditions X1 (0) = 400, X2 (0) = 798, and X3 (0) = 0
were chosen to satisfy stiff system, and ﬁnal time T = 0.2 second. Figure 1 represents species trajectories of the
decaying-dimerizing reaction set by the original SSA until time T = 0.2 seconds. From the ﬁgure, X1 and X2 vary
rapidly by fast reactions, but X3 varies slowly by slow reaction. So this model is a stiff system.
We consider numerical tests of the implicit order 2.0 weak Taylor methods for the Decaying-Dimerizing system
with existing improved SSA methods. Figure 2 (a) shows the histograms of X1 at time T = 0.2 achieved from the
100,000 independent samples of Gillespie SSA and 10,000 samples of existing accelerated methods such as explicit
tau-leaping, implicit tau-leaping, and trapezoidal tau-leaping methods. We set the ﬁxed stepsize as τ = 2 × 10−4 that
is chosen to show the difference character of the methods. Figure 2 (b) also shows the histograms generated from
the Gillespie SSA and our proposed methods, implicit order 2.0 weak Taylor with α = 1.0 and β = 1.0, α = 1.0 and
β = 0.0, and α = 0.5 methods with the same ﬁxed stepsize.
From the Figures 2 (a) and (b) we notice that the histogram given by the trapezoidal tau-leaping method and
implicit order 2.0 weak Taylor method with α = 0.5 are very close to the exact SSA method than other methods
for the speciﬁc time step. The explicit method gives very unstable and varying results. Other implicit order 2.0 weak
Taylor methods with α = 1.0 provoke a little wide varying results, but those escape the damping effect such as implicit
tau-leaping method in Figure 2 (a).
It is necessary to simulate the Decaying-Dimerizing system with different stepsize to catch the performance of each
accelerated method with measuring degree of accuracy. Not only mean and variance, but also K-L divergence and
distance metric are used to evaluate the similarity between the results from our proposed formula and the results from
the SSA. K-L divergence [13] is a non-commutative measure of the difference between two probability distributions P
and Q typically P representing the “true” distribution and Q representing arbitrary probability distribution. Therefore
we set P as distribution from Gillespies SSA and Q as distribution from one of other formulae. The K-L divergence
P(i)
where Q(i)
0. Smaller value of K-L divergence represents more
P(i) log
is deﬁned to be DKL (P||Q) =
Q(i)
i
similarity for two distributions. Another distance metric is to measure the distance between two distributions with

2305

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306
0.16

0.16
Gillespie
Explicit Tau
Implicit Tau
Trapezoidal Tau

0.14

0.12

Probability Density

0.12

Probability Density

Gillespie
Imp. 2.0 Weak α=1, β=1
Imp. 2.0 Weak α=1, β=0
Imp. 2.0 Weak α=0.5

0.14

0.1
0.08
0.06

0.1
0.08
0.06

0.04

0.04

0.02

0.02

0
200

250

300

350

400

450

500

550

0
200

250

X (molec.)

300

350

400

450

500

550

X (molec.)

(a) The histogram of X1 by the Gillespie SSA (solid line), explicit tau (b) The histogram of X1 by the Gillespie SSA (solid line), implicit order
(dashed with ’+’), implicit tau (dashed with ’*’), and trapezoidal (dashed 2.0 weak Taylor SSA with α = 1.0 and β = 1.0 (dashed with down
with square) methods.
triangle), α = 1.0 and β = 0.0 (dashed with pentagram), and α = 0.5
(dashed with circle) methods.
Figure 2: The histogram (100,000 samples for Gillespie SSA and 10,000 samples for other methods) of X1 with ﬁxed stepsize τ = 2 × 10−4 for the
Decaying-dimerizing reaction set.

Dist =

ΔX · |P(i) − Q(i)| where ΔX is a bin size for the probability distribution. Because K-L divergence is not
i

useful when there exists zeros for Q, we also tested the distance metric.
Table 1 shows the proposed metrics results of 10,000 samples generated by different methods with different
stepsizes compared to the 100,000 runs of the Gillespie SSA. Not only the Poisson noise (13) but also the simple
three-point distributed variables (9) are tested here. The results show that there is no big difference (three point
variables results are slightly more unstable) between applying Poisson random variables and applying three point
distributed variables to the implicit second order weak Taylor methods cased by both of them have τ variance with
zero mean value. α = 1.0 schemes are accurate until appropriate stepsize, then results become unstable with large
stepsize. α = 0.5 scheme generate a more accurate variance even with large stepsize, than do α = 1.0 schemes.

Table 1: The mean, variance, K-L divergence, and distance of X1 at T = 0.2 at different stepsize with Poison random variables and three point
distributed variables for noises.

Method
Metrics
Stepsize
Gillespie
Mean
SSA
Variance
Implicit
Mean
Order 2.0
Variance
Weak Method K-L div
(α = 1, β = 1) Distance
Implicit
Mean
Order 2.0
Variance
Weak Method K-L div
(α = 1, β = 0) Distance
Implicit
Mean
Order 2.0
Variance
Weak Method K-L div
(α = 0.5)
Distance

Poison random variables
0.00020 0.00100
387.30
345.89
387.27
386.88
145.02
368.83.27 596.71 10884.30
0.025
0.078
0.100
1.64
2.65
20.00
383.78
386.27
576.62
364.51
587.80
4933.96
0.019
0.085
0.112
1.46
2.57
20.00
387.14
386.63
387.47
385.38
341.50
352.15
0.004
0.001
0.006
0.636
0.346
0.814
0.00005

0.00500

∞
∞
∞
∞
∞
∞
∞
∞
386.53
702.44
0.027
1.834

Three point distributed variables
0.00005 0.00020 0.00100 0.00500
387.21
347.24
373.39
381.93
139.09
∞
360.35
569.04 10053.15
∞
0.027
0.098
0.100
∞
0.57
6.98
20.00
∞
387.30
386.62
587.52
∞
385.17
609.25
4492.87
∞
0.005
0.052
0.113
∞
0.61
6.98
20.00
∞
387.12
387.66
387.14
386.69
357.97
350.53
353.21
711.65
0.002
0.005
0.011
0.017
0.432
0.547
0.97
1.886

2306

T.-H. Ahn et al. / Procedia Computer Science 4 (2011) 2297–2306

20

Distance

15

tau2

α=1, β=1, Poisson
α=1, β=0, Poisson
α=0.5, Poisson
α=1, β=1, 3−point
α=1, β=0, 3−point
α=0.5, 3−point

tau1 = 0.00500
tau2 = 0.00100
tau3 = 0.00020
tau4 = 0.00005

10
tau3
5
tau1
0

tau3
tau2

tau3
2

10

tau4
3

10

Log Scale CPU time (second)

Figure 3: The relationship between elapsed CPU time and the
distance of two distributions (the SSA and accelerated distributions) with the different stepsizes. This is from the results
of 10,000 individual runs for each method and each time step.

But the variance of α = 0.5 scheme also increase for very large stepsizes. Although simple A-stability analysis also
indicates that α = 1.0 should be stable, these results show that the second order weak Taylor schemes are unstable.
Figure 3 considers relationship between accuracy and computation time of the accelerated methods. It is evident from
the ﬁgure that the α = 0.5 scheme is more efﬁcient than other methods. 10,000 simulation of the original SSA took
1,226 CPU seconds, while 10,000 simulations of the implicit second order weak Taylor method of the α = 0.5 with
τ = 0.001 ﬁxed step took 57 seconds and produced similar solutions (distance value is smaller than 1). Three point
variables schemes are slightly faster with less accurate than Poisson variables schemes.
6. Conclusions and Future Work
In this paper, new implicit second order weak Taylor tau-leaping methods are proposed. These methods are
motivated by the theory of weakly convergent discretizations for stochastic differential equations, and by the fact
that Poisson variables with large mean are close to normal. Numerical experiments are carried out using a decayingdimerizing system with different stiffness levels. The accuracy of the results is evaluated by comparing the probability
densities obtained with the our proposed methods and with Gillespie’s SSA. The numerical results verify that our
proposed methods are accurate, with an efﬁciency comparable to that of the original implicit tau-leaping methods
for stepsizes below a stability threshold. But the results show that the implicit second order weak Taylor tau-leaping
methods are unstable especially for α = 1.0 when used with very large stepsize. Future work will consider the reason
of this instability and will construct counterpart methods for solving stochastic chemical kinetics stability and high
order accuracy properties.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]

H. H. McAdams, A. Arkin, Stochastic mechanisms in gene expression, Proc. Natl. Acad. Sci. 94 (3) (1997) 814–819.
D. T. Gillespie, A rigorous derivation of the chemical master equation, Physica A 188 (1–3) (1992) 404–425.
N. G. van Kampen, Stochastic Processes in Physics and Chemistry, North Holland, North Holland, Netherlands.
D. T. Gillespie, Exact stochastic simulation of coupled chemical reactions, The Journal of Physical Chemistry 81 (25) (1977) 2340–2361.
D. T. Gillespie, Approximate accelerated stochastic simulation of chemically reacting systems, Journal of Chemical Physics 115 (4) (2001)
1716–1733.
M. Rathinam, L. R. Petzold, Y. Cao, D. T. Gillespie, Stiffness in stochastic chemically reacting systems: The implicit tau-leaping method,
The Journal of Chemical Physics 119 (24) (2003) 12784–12794.
D. T. Gillespie, L. R. Petzold, Improved leap-size selection for accelerated stochastic simulation, Journal of Chemical Physics 119 (16) (2003)
8229–8234.
Y. Cao, H. Li, L. Petzold, Efﬁcient formulation of the stochastic simulation algorithm for chemically reacting systems, Journal of Chemical
Physics 121 (9) (2004) 4059–4067.
Y. Cao, L. Petzold, Trapezoidal tau-leaping formula for the stochastic simulation of biochemical systems, in: Proceedings of Foundations of
Systems Biology in Engineering (FOSBE 2005), 2005, pp. 149–152.
M. Rathinam, L. R. Petzold, Y. Cao, D. T. Gillespie, Consistency and stability of tau leaping schemes for chemical reaction systems, SIAM
Journal of Multiscale Modeling and Simulation 4 (3) (2005) 867–895.
P. E. Kloeden, E. Platen, Numerical Solution of Stochastic Differential Equations, Springer, New York, NY.
I. I. Gikhman, A. V. Skorokhod, Stochastic Differential Equations, Springer, New York, NY, 1972.
F. Emmert-Streib, M. Dehmer, Information Theory and Statistical Learning, Springer, New York, NY, 2008.

