The Roman Domination Problem in Unit Disk
Graphs
Weiping Shang and Xiaodong Hu
Institute of Applied Mathematics, Chinese Academy of Sciences
P. O. Box 2734, Beijing 100080, China
{shangwp, xdhu}@amss.ac.cn

Abstract. Unit disk graphs are the intersection graphs of equal sized
disks in the plane, they are widely used as a mathematical model for
wireless ad-hoc networks and some problems in computational geometry. In this paper we ﬁrst show that the Roman domination problem
in unit disk graphs is NP-hard, and then present a simple linear time
approximation algorithm and a polynomial-time approximation scheme
for this problem, respectively.
Keywords: Domination, approximation algorithm, unit disk graph.

1

Introduction

Let G = (V, E) be a simple and undirected graph. A set D ⊆ V is a dominating
set if every vertex in V \D is adjacent to at least one vertex in D. The domination
number, denoted γ(G), is the minimal cardinality of a dominating set in G. The
minimum dominating set problem is to compute a dominating set of minimal
cardinality for any given graph G. A Roman dominating function [1] of a graph
G is deﬁned as a function f : V (G) → {0, 1, 2} satisfying the condition that
every vertex u with f (u) = 0 is adjacent to at least one vertex v with f (v) =
2. The weight of a Roman dominating function is f (V ) =
v∈V f (v). The
Roman domination number, denoted γR (G), is the minimum weight of Roman
dominating functions in G. The minimum Roman domination problem is to
compute a minimum weight dominating function for any given graph G.
Minimum Roman domination problem is introduced in [1] as one of variants of
classical dominating set problem. It comes with a nice story: The Roman Empire
needs to defence itself by positioning some legions on the various parts of the
Empire in such a way that either (1) a speciﬁc region v is also the location of at
least one legion or (2) one region u neighboring v has two legions, so that u can
aﬀord sending oﬀ one army to the region v (in case of an attack) without loosing
self-defence capabilities. Since it is expensive to maintain a legion at a location,
the Emperor would like to station as few legions as possible, while still defending
This work was supported in part by the National Natural Science Foundation of
China under Grant No. 70221001 and 10531070.
Y. Shi et al. (Eds.): ICCS 2007, Part III, LNCS 4489, pp. 305–312, 2007.
c Springer-Verlag Berlin Heidelberg 2007

306

W. Shang and X. Hu

the Roman Empire. Roman domination problem has not only historical but also
mathematical interests, particularly in the ﬁeld of server placements [3].
In reality, it is desired that dispatching a legion from one location to another
location should not take too much time; In particular, it is desirable that a
legion from one location could be dispatched to another location if the Euclidean
distance between the two corresponding points is no more than a speciﬁed bound.
Unit disk graphs satisfy such a property. A undirected graph G = (V, E) is a
unit disk graph (UDG) if its vertices can be put in one-to-one correspondence
with disks of equal radius in the plane in such a way that two vertices are joined
by an edge if and only if the corresponding disks intersect. In other words, G
is a UDG if there exists a map f : V → R2 such that (u, v) ∈ E if and only if
f (u) − f (v) ≤ 1, where . denotes the Euclidean norm. Grid graphs compose
a subclass of unit disk graphs under such an intersection model that all the disks
have centers with integer coordinates and radius 1/2.
It has been shown in [7] that many graph related problems in unit disks
graphs are NP-hard, including the independent set problem, the dominating
set and connected dominating set problems; In fact, the dominating set problem is NP-hard even for grid graphs. Polynomial-Time Approximation Schemes
(PTASs) for these problems in unit disk graphs are presented in [10, 11]. Roman
domination problem in general graphs is proved to be NP-hard in [2], (2+2ln(n))approximation algorithms and a PTAS are proposed in [3] for general graphs and
for minimum planar Roman domination problem, respectively.
In this paper, we consider the Roman domination problem in unit disk graphs.
We will ﬁrst give some preliminaries about the problem in Section 2, and then we
will prove that the Roman domination problem in unit disk graphs is NP-hard
in Section 3, after that we will propose a simple linear-time approximation algorithm and a polynomial-time approximation scheme for the problem in Section
4. In Section 5 we conclude the paper.

2

Preliminaries

Let G be a graph with vertex-set V (G) and edge-set E(G). For any vertex v ∈ V ,
the closed neighborhood of v is denoted and deﬁned by N (v) ≡ {u ∈ V (G) : uv ∈
E(G)} ∪ {v}. For a subset S of V , let N (S) = v∈S N (v), and for a natural
number r, deﬁne the r−th neighborhood of v ∈ V as N r (v) ≡ N (N r−1 (v)), where
N 1 (v) = N (v).
A subset U ⊆ V is an independent set (IS) of G if all vertices in U are pairwise
non-adjacent, and a maximal independent set (MIS) U of G is such an IS that
each vertex V \ U is adjacent to at least one vertex in U . Clearly, an MIS I(G)
of G is also a dominating set of G. Thus any minimum dominating set D(G) of
G has size no more than that of an MIS I(G). In addition, a subset S of V (G)
is called a 2-packing if N (u) ∩ N (v) = ∅ for every pair of vertices u, v ∈ S.
Some useful facts on Roman dominating functions were proved in [1], which
will be used in our following discussions.

The Roman Domination Problem in Unit Disk Graphs

307

Proposition 1. For any graph G, γ(G) ≤ γR (G) ≤ 2γ(G).
Proposition 2. Let f be a minimum Roman dominating function of a graph
G without isolated vertices. Let Vi be the sets of vertices v with f (v) = i for
i = 0, 1, 2. Let f = (V0 , V1 , V2 ) be such a function that |V1 | is minimal. Then V1
is a 2-packing and there is no edge between V1 and V2 .
Proposition 3. For any non-trivial connected graph G, γR (G) = min{2γ(G \
S) + |S| : S is a 2-packing}.
Clearly, a function f = (V0 , V1 , V2 ) is a Roman dominating function if the set
V2 dominates the set V0 , and the weight of f is f (V ) = v∈V f (v) = 2|V2 | +
|V1 |. Moreover, a Roman dominating function f = (V0 , V1 , V2 ) deﬁnes a Roman
dominating set DR = (V1 , V2 ) since, for each vertex v ∈ V , we have either v ∈
V1 ∪V2 or v is dominated by some node in V2 . The weight of a Roman dominating
set DR is W (DR ) = 2|V2 | + |V1 |. If DR is a minimum Roman dominating set
(MRDS) of graph G, then W (DR ) = γR (G).

3

Complexity Study of Roman Domination Problem

Let V = {v1 , v2 , · · · , vn } be the set of points located in the Euclidean plane.
Denote the coordinates of vi by (xi , yi ) for i = 1, 2, · · · , n. For each vertex vi ∈ V ,
1
, yi ), and let U = {u1 , u2 , · · · , un }
there is a vertex ui with coordinates (xi + 10
denote the set associated with V . Now construct a graph G = (V , E ) with
1
vertex-set V = V ∪ U and edge-set E = {(u, v) : u, v ∈ V and uv ≤ 1 + 10
}.
It is clear that G is a unit disk graph, and N (vi ) = N (ui ) in graph G . Moreover,
the following lemmas give some other properties of graph G .
Lemma 1. Let f = (V0 , V1 , V2 ) be a minimal Roman dominating function of
G = (V , E ). Then |{ui , vi } ∩ V2 | ≤ 1, for i = 1, 2, · · · , n.
Proof. Suppose, by contradiction, that there exists a j such that {uj , vj } ⊆ V2 .
Let V0 = V0 ∪{uj }, V1 = V1 and V2 = V2 \{uj }. It is easy to verify that function
f = (V0 , V1 , V2 ) is a Roman dominating function satisfying f (V ) < f (V ),
a contradicting that f is minimal.
Lemma 2. Let f = (V0 , V1 , V2 ) be a minimal Roman dominating function
of G = (V , E ). Then there exists a minimal Roman dominating function
f = (V0 , V1 , V2 ) satisfying f (V ) = f (V ) such that V1 = ∅ and V2 ∩
{u1 , u2 , ..., un } = ∅.
Proof. Suppose that V1 = ∅. Then let vj ∈ V1 for some j. Thus we have
N (vj ) ∩ V2 = ∅ and N (uj ) ∩ V2 = ∅ since N (vj ) = N (uj ), which implies
uj ∈ V1 . Hence we have either |{ui , vi } ∩ V1 | = 0 or 2 for each i. Let V1 =
{vi1 , ui1 , vi2 , ui2 , ..., vik , uik } for some 1 ≤ k ≤ n, V0 = V0 ∪ {ui1 , ui2 , ..., uik },
V1 = ∅, and V2 = V2 ∪ {vi1 , vi2 , ..., vik }. Clearly, f ≡ (V0 , V1 , V2 ) is a Roman
dominating function satisfying f (V ) = f (V ).

308

W. Shang and X. Hu

Now suppose that V2 ∩ {u1 , u2 , · · · , un } = ∅. Assume, without loss of generality, that V2 ∩ {u1 , u2 , · · · , un } = {u1 , u2 , · · · , um } for some 1 ≤ m ≤ n.
Since |{ui , vi } ∩ V2 | ≤ 1 for each i, then {v1 , v2 , · · · , vm } ⊆ V0 . Let V0 = (V0 \
{v1 , v2 , · · · , vm }) ∪ {u1 , u2 , · · · , um }, V1 = V1 and V2 = (V2 \ {u1 , u2 , · · · , um })
∪{v1 , v2 , · · · , vm }. It is easy verify that f ≡ (V0 , V1 , V2 ) is a Roman dominating function satisfying f (V ) = f (V ) and V2 ∩ {u1 , u2 , ..., un } = ∅. The
lemma is then proved.
Theorem 1. The minimum Roman dominating set problem in unit disk graphs
is NP-hard.
Proof. The reduction is from the minimum dominating set problem in grid
graphs, which is known to be NP-hard. Given a grid graph G = (V, E), we
will construct a unit disk graph G = (V , E ) such that G has a dominating
set D with |D| ≤ k if and only if G has a Roman dominating set DR with
W (DR ) ≤ 2k.
Given any grid graph G = (V, E) with vertex-set V = {v1 , v2 , ..., vn }, where
each vi has integral coordinates (xi , yi ) and (vi , vj ) ∈ E if and only if vi vj = 1.
1
, yi ). Now
For each vertex vi ∈ V , we add a new vertex ui with coordinates (xi + 10
construct the graph G = (V , E ) with vertex-set V = {v1 , u1 , v2 , u2 , ..., vn , un },
and for any two vertices u, v ∈ V , (u, v) ∈ E if and only if uv ≤ 1 + 1/10. It
is clear that G is a unit disk graph, and for each 1 ≤ i ≤ n, vi and ui have the
same neighborhood N (vi ) = N (ui ), and the same degree dG (ui ) = dG (vi ) =
2dG (vi ) + 1.
Let DR be a minimal Roman dominating set of G . Then by Lemma 2, we can
assume, without loss of generality, that DR = (∅, V2 ) and V2 ∩ {u1 , u2 , · · · , un } =
∅. Suppose that D is a dominating set of G with |D| ≤ k. Let DR = (∅, D),
then DR is a Roman dominating set with W (DR ) ≤ 2k. Conversely, suppose
that G has a Roman dominating set DR = (∅, V2 ), V2 ∩ {u1 , u2 , ..., un } = ∅ and
W (DR ) ≤ 2k. Then V2 is also a dominating set of G, |V2 | = 12 W (DR ) ≤ k.
Let D = V2 , then G has a dominating set D with |D| ≤ k. Therefore, G has a
dominating set D with |D| ≤ k if and only if G has a Roman dominating set
DR with W (DR ) ≤ 2k. The proof is then completed.

4

Approximation Algorithms

It is well known that any maximal independent set D is also a dominating set.
Thus DR = (∅, D) is a Roman dominating set. One method of ﬁnding a Roman
dominating set in a graph is to ﬁnd a maximal independent set. A straightforward
method of ﬁnding a maximal independent set is as follows: Select an arbitrary
vertex v ∈ V , add v to the current independent set D, which is initially set to
be an empty set, and delete N (v) from the current graph G, and then repeat
the process until all vertices in V (G) have been deleted.

The Roman Domination Problem in Unit Disk Graphs

309

Algorithm A. 5-Approximation Algorithm for MRDS
Input: A unit disk graph G = (V, E)
Output: A Roman dominating set DR
1.
2.
3.
4.
5.
6.

S := V , D := ∅
while S = ∅ do
Choose v ∈ S
D := D ∪ {v}, S := S \ N (v)
end-while
return DR = (∅, D)

Theorem 2. Let G = (V, E) be a unit disk graph, Algorithm A returns a Roman
dominating set in time of O(|E|) whose size is at most ﬁve times that of the
minimum Roman dominating set.
Proof. It is clear that the algorithm returns a Roman dominating set in time of
∗
= (V1∗ , V2∗ ) denote an optimal Roman dominating set of G such
O(|E|). Let DR
that V1∗ is a minimal. By Proposition 2 we have V1∗ is a 2-packing and there is
no edge between V1∗ and V2∗ . Note that G is a unit disk graph and the returned
set D is an independent set. Moreover, no vertex in V2∗ can dominate more than
5 vertices in D \ V1∗ , and each vertex in V1∗ only can dominate itself. Hence we
have
|D| − |V1∗ ∩ D|
,
|V2∗ | ≥
5
and
W (DR )
2|D|
=
,
γR (G) = f (V ) = 2|V2∗ | + |V1∗ | ≥
5
5
and then the theorem follows.
In the following we will show that there exists an algorithm that can return a
better approximation solution at the expenses of increasing the time complexity.
For this purpose, we ﬁrst show the following lemma.
Lemma 3. If the maximum independent set I(G) of graph G = (V, E) has
cardinality |I(G)| no greater than a constant c. Then γR (G) can be computed in
polynomial time.
Proof. By |I(G)| ≤ c, we have γ(G) ≤ c since any maximal independent set
is also a dominating set. As γR (G) = min{2γ(G − S) + |S| : S is a 2-packing},
γ(G \ S) and |S| both are at most c. Thus to compute γR (G) we can ﬁrst choose
a 2-packing set S in G, and then ﬁnd a minimum dominating set in G \ S, ﬁnally
choose the set S such that |S| + 2γ(G − S) is minimal. Clearly we can compute
γR (G) by a brute-force method in time of O(|V |c ).
The basic idea of our polynomial time approximation scheme is as follows: First,
compute a local Roman dominating set for a neighborhood of a vertex, and

310

W. Shang and X. Hu

then expand this neighborhood until we have formed some sets that satisfy the
desired bound. Secondly, eliminate the current neighborhoods and repeat the
same operation for the remaining graph.

Algorithm B PTAS for MRDS
Input: A unit disk graph G = (V, E), ε > 0
Output: (1 + ε)-approximation MRDS DR
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.

V := V , DR := ∅
while V = ∅ do
choose a vertex v ∈ V
while W (DR (N r+2 (v))) > (1 + ε)W (DR (N r (v))) do
compute DR (N r (v))
end-while
compute r = min{r : W (DR (N r+2 (v))) ≤ (1 + ε)W (DR (N r (v)))}
V := V \ N r+2 (v)
DR := DR ∪ DR (N r+2 (v))
end-while
Return DR

Let k be the total number of executed iterations by Algorithm B. Let v1 , v2 ,
· · · , vk be the vertices chosen in step 3, and Ni , i = 1, 2, · · · , k, denote the corresponding neighborhoods, i.e., Ni = N ri +2 (vi ). By the rules of Algorithm B, it is
k
easy to verify that the returned set DR = i=1 DR (Ni ) is a Roman dominating
set of G. Moreover, we have the following lemma.
Lemma 4. Let G = (V, E) be a unit disk graph. Then W (DR (N r (v))) ≤ 8(r +
1/2)2 for every v ∈ V and any positive integer r.
Proof. From the deﬁnition of a unit disk graph, we know that for any w ∈ N r (v),
the Euclidean distance between w and v is at most r. Let I(N r (v)) denote
an independent set in N r (v). Then the sets of unit-diameter disks centered at
the nodes in I(N r (v)) are disjoint and their convex hull is contained in the
disk of radius r + 1/2. Then |I(N r (v))| ≤ 4(r + 1/2)2 , and W (DR (N r (v))) ≤
2|D(N r (v))| ≤ 2|I(N r (v))|. Thus the lemma follows.
Lemma 5. The obtained r in Step 7 of Algorithm B is no greater than constant
c = O( ε12 ln 1ε ).
Proof. Note that W (DR (N 0 (v))) = 1 and W (DR (N 1 (v))) = 2 since vertex v
dominates itself and all its neighbors. For an arbitrary value r < r, consider the
following two cases.
Case (1) r is an even number. By the rules of Algorithm B and Lemma 4 we
have
1
8(r + )2 ≥ W (DR (N r (v)))
2

The Roman Domination Problem in Unit Disk Graphs

311

> (1 + ε)W (DR (N r−2 (v)))
r

> (1 + ε) 2 W (DR (N 0 (v)))
r

= (1 + ε) 2 .
Case (2) r is an odd number. In this case we have
1
8(r + )2 ≥ W (DR (N r (v)))
2
> (1 + ε)W (DR (N r−2 (v)))
> (1 + ε)

r−1
2

= 2(1 + ε)

W (DR (N 1 (v)))

r−1
2

.

In both cases the above inequalities will not hold for suﬃciently large r, the
bound on r, which is achieved when these inequalities are violated the ﬁrst time,
only depends on ε and not on the order of graph G. By applying a similar
argument used in [10], we can show r ≤ c, where c = O( ε12 ln 1ε ). The proof is
then proved.
The number of independent sets in N r (v) is polynomially bounded in r, and r
is also polynomially bounded. By Lemma 3, a minimum Roman dominating set
2
DR (N r (v)) can be computed in polynomial time O(|V |c ), where c = O( ε12 ln 1ε ).
The following theorem shows the correctness and approximation guarantee of
the algorithm.
Theorem 3. Algorithm B returns a Roman dominating set DR =
whose weight is no more than (1 + ε)γR (G).

k
i=1

DR (Ni )

∗
Proof. Let DR
denote the optimal Roman dominating set. It is clear that
ri
N (N (vi )) and N (N rj (vj )) are mutually disjoint in G for i = j, and N (N ri (vi ))∩
∗
dominates N ri (vi ). Thus by Lemma 5 we have
DR
k
∗
)≥
γR (G) = W (DR

∗
W DR
∩ N (N ri (vi ))
i=1
k

≥

W DR (N ri (vi ))
i=1
k

≥
i=1

1
W DR (N ri +2 (vi ))
1+ε

1
W ∪ki=1 DR (N ri +2 (vi ))
1+ε
1
W (DR ).
=
1+ε
≥

Hence the theorem holds.

312

5

W. Shang and X. Hu

Conclusion

In this paper we ﬁrst show that the Roman domination problem in unit disk
graphs is NP-hard, and then present a 5-approximation algorithm of linear time
and a polynomial-time approximation scheme for this problem, respectively.
Grid graphs compose a subclass of unit disk graphs. However, hardness results
for the Roman domination problem in grid graphs are still unknown (to the best
knowledge of the authors). This raises an interesting problem for future work.

References
[1] E. J. Cockayne, P. A. Dreyer, S. M. Hedetniemi, and S. T. Hedetniemi: Roman
domination in graphs, Discrete Mathematics. 278 (2004) 11-22
[2] P. A. Dreyer: Applications and Variations of domination in graphs, PhD Thesis,
Rutgers University, New Jersey. (2000)
[3] A. Pagourtzis, P. Penna, K. Schlude, K. Steinhofel, D. Taylor, and P. Widmayer:
Server placements, Roman domination and other dominating set variants, In Proceedings of the Second International Conference on Theoretical Computer Science.
(2002) 280-291
[4] M. A. Henning: A characterization of Roman trees, Discuss. Math. Graph Theory.
22 (2) (2002) 325-334
[5] M. A. Henning and S. T. Hedetniemi: Defending the Roman Empire - A new
strategy, Discrete Mathematics. 266 (2003) 239-251
[6] I. Stewart: Defend the Roman Empire!, Scientiﬁc American. December (1999)
136-138
[7] B. N. Clark, C. J. Colburn, and D. S. Johnson: Unit disk graphs, Discrete Mathematics. 86 (1990) 165-177
[8] H. B. Hunt III, M. V. Marathe, V. Radhakrishnan, S. S. Ravi, D. J. Rosenkrantz,
and R. E. Stearns: NC-approximation schemes for NP-and PSPACE-hard problems for geometric graphs, Journal of Algorithms. 26 (2) (1998) 238-274
[9] M. V. Marathe, N. Breu, H. B. Hunt III, S. S. Ravi, and D. J. Rosenkrantz: Simple
heuristics for unit disk graphs, Networks. 25 (1995) 59-68
[10] T. Nieberg, J. Hurink, and W. Kern: A robust PTAS for maximun independent
sets in unit disk graphs, In Proceedings of the Thirtieth Workshop on Graph
Theoretic Concepts in Computer Science. (2004) 214-221
[11] T. Nieberg and J. Hurink: A PTAS for the minimum dominating set problem in
unit disk graphs, In Proceedings of the Third Workshop on Approximation and
Online Algorithms. (2005) 6-7

