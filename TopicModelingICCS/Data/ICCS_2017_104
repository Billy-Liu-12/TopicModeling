Available online at www.sciencedirect.com

ScienceDirect
Procedia
108CProcedia
(2017) 655–664
This space
isComputer
reservedScience
for the
header, do not use it

This space is reserved for the Procedia header, do not use it
This space is reserved for the Procedia header, do not use it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Efficient
Efficient
Efficient
1
1
1

Lyapunov Function computation for systems with
Lyapunov
Function computation
for systems with
multiple exponentially
stable equilibria
Lyapunov
Function computation
for systems with
multiple exponentially
stable
equilibria
1 ∗
Jóhann Björnsson
and Sigurdur
Hafstein2
multiple
exponentially
stableF. equilibria
Jóhann Björnsson1 ∗and Sigurdur F. Hafstein2

Reykjavik University, School of Science and
Reykjavik, Iceland
1 ∗ Engineering, Menntavegur 1, 101
Jóhann Björnsson
and Sigurdur F. Hafstein2
johannbj@ru.is
Reykjavik
University, School of Science and Engineering, Menntavegur 1, 101 Reykjavik, Iceland
2
University of Iceland, Faculty of Physical Sciences, Dunhagi 5, 107 Reykjavik, Iceland
Reykjavik University, School of Sciencejohannbj@ru.is
and Engineering, Menntavegur 1, 101 Reykjavik, Iceland
shafstein@hi.is
2
University of Iceland, Faculty of Physical
Sciences, Dunhagi 5, 107 Reykjavik, Iceland
johannbj@ru.is
2
shafstein@hi.is
University of Iceland, Faculty of Physical
Sciences, Dunhagi 5, 107 Reykjavik, Iceland
shafstein@hi.is

Abstract
Recently
Abstracta method was presented to compute Lyapunov functions for nonlinear systems with
multiple
attractors
[5]. This to
method
wasLyapunov
shown to functions
succeed infor
delivering
Recently local
a method
was presented
compute
nonlinearalgorithmically
systems with
Abstract
a
Lyapunov
function
giving
qualitative
information
on
the
system’s
dynamics,
including
multiple local
attractors
[5]. This to
method
wasLyapunov
shown to functions
succeed infor
delivering
algorithmically
Recently
a method
was presented
compute
nonlinear
systems lower
with
bounds
on
the
attractors’
basins
of
attraction.
We
suggest
a
simpler
and
faster
algorithm
a Lyapunov
function
giving
information
on to
thesucceed
system’s
lower
multiple
local
attractors
[5].qualitative
This method
was shown
in dynamics,
delivering including
algorithmically
to
compute
suchattractors’
a Lyapunov
function
if the attractors
question
are and
exponentially
stable
bounds
on the
of attraction.
We
a simpler
faster
algorithm
a
Lyapunov
function
givingbasins
qualitative
information
onsuggest
theinsystem’s
dynamics,
including
lower
equilibrium
points.
Just
as
in
[5]
one
can
apply
the
algorithm
and
expect
to
obtain
partial
to compute
suchattractors’
a Lyapunov
function
if the attractors
in question
are and
exponentially
stable
bounds
on the
basins
of attraction.
We suggest
a simpler
faster algorithm
information
theasystem
dynamics
if the
on in
thequestion
system
hand
are
only partially
equilibrium
points.
Just as
in function
[5] one
can
apply
the algorithm
and at
expect
to obtain
partial
to
compute on
such
Lyapunov
if assumptions
the
attractors
are
exponentially
stable
fulfilled.
We
give
four
examples
of
our
method
applied
to
different
dynamical
systems
the
information on
the system
dynamics
if the
on the system
hand are
only from
partially
equilibrium
points.
Just as
in [5] one
canassumptions
apply the algorithm
and at
expect
to obtain
partial
literature.
fulfilled. Weon
give
examples
of our
method
applied to
dynamical
systems
the
information
thefour
system
dynamics
if the
assumptions
on different
the system
at hand are
only from
partially
literature.
fulfilled.
give four
examples
of our
method applied
tosystem,
different
dynamical systems from the
Keywords:
Lyapunov
function,
multiple
equilibria,
nonlinear
algorithm
©
2017 TheWe
Authors.
Published
by Elsevier
B.V.
Peer-review
under responsibility of the scientific committee of the International Conference on Computational Science
literature.
Keywords: Lyapunov function, multiple equilibria, nonlinear system, algorithm
Keywords: Lyapunov function, multiple equilibria, nonlinear system, algorithm

1 Introduction
1
Introduction
We consider continuous time systems given by ordinary differential equations
1 Introduction

We consider continuous time systems given by ordinary differential equations
ẋ = f (x),
(1.1)
We consider continuous time systems given by ordinary differential equations
ẋ = f (x),
(1.1)
where f ∈ C 2 (Rd , Rd ) is two-times continuously differentiable. We denote the solution to (1.1)
ẋ = f (x),
(1.1)
startedf at
ξ 2at
0 by t →continuously
φ(t, ξ). A so-called
complete
for(1.1)
the
where
∈C
(Rdtime
, Rd )tis=two-times
differentiable.
We Lyapunov
denote thefunctions
solution to
system
(1.1)
function
from
the
state-space
to
the
real
numbers
that
characterizes
2is adcontinuous
d
startedf at
ξ at
0 by t →continuously
φ(t, ξ). A so-called
complete
for(1.1)
the
where
∈C
(R time
, R )tis=two-times
differentiable.
We Lyapunov
denote thefunctions
solution to
the
decomposition
of the
gradient-like
part andcomplete
chain-recurrent
[1,
7, 18].
system
(1.1)
continuous
fromξ).
theAstate-space
toa the
realLyapunov
numberspart
that
characterizes
started
at ξ is
ata time
t = flow
0 function
byinto
t →a φ(t,
so-called
functions
for For
the
a
more
accessible
overview
of
this afact,
sometimes
referred
asreal
thenumbers
Fundamental
Theorem
of
the
decomposition
of the flow
into
gradient-like
part
andtoato
chain-recurrent
part
7, 18]. For
system
(1.1)
is a continuous
function
from
the state-space
the
that[1,
characterizes
Dynamical
Systems
cf.
e.g.
[25,
26].
A
complete
Lyapunov
function
is
decreasing
along
solution
a more
accessible overview
of into
this afact,
sometimespart
referred
as the Fundamental
of
the
decomposition
of the flow
gradient-like
and ato
chain-recurrent
part [1,Theorem
7, 18]. For
trajectories
on theoverview
gradient-like
part
the flowLyapunov
and
constant
on the
the
transitive components
of
Dynamical
Systems
cf. e.g. [25,
26].
Aofcomplete
function
is Fundamental
decreasing
along
solution
a more accessible
of this
fact,
sometimes
referred
to as
Theorem
of
the
chain-recurrent
part.
trajectoriesSystems
on the gradient-like
partAofcomplete
the flowLyapunov
and constant
on the
transitive components
of
Dynamical
cf. e.g. [25, 26].
function
is decreasing
along solution
the∗ Björnsson
chain-recurrent
part.
trajectories
on
the
gradient-like
part
of
the
flow
and
constant
on
the
transitive
components
of
is supported by The Icelandic Research Fund, grant nr. 130677-052.
the∗ chain-recurrent part.
Björnsson is supported by The Icelandic Research Fund, grant nr. 130677-052.

∗ Björnsson

is supported by The Icelandic Research Fund, grant nr. 130677-052.
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.285

1
1
1

656	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

Whereas there have been numerous suggestions of how to compute Lyapunov function for
systems on a domain containing one stable equilibrium, cf. e.g. [14] for a recent review, there
have been much fewer publications on the numerical construction of Lyapunov functions with
a more complicated chain-recurrent set.
In [5] a method was presented to compute a function V resembling a complete Lyapunov
function for the system (1.1) on a compact subset of its state-space D ⊂ Rd , which is allowed to contain multiple attractors. In this method one first computes outer approximations
of the attractors using a graph theoretic method [19, 15] followed by a subsequent numerical
computation of a Massera-like Lyapunov function candidate [24], see [20] for an overview and
classification of the different construction methods. The candidate is then used to parameterize
a continuous and piecewise affine (CPA) Lyapunov function, of which the decrease condition
along solution trajectories can be verified exactly by checking a certain set of linear inequalities. This set of linear inequalities comes from the so-called CPA method to compute Lyapunov
functions, in which linear optimization is used to parameterize a CPA Lyapunov function satisfying these linear inequalities [23, 16, 13]. This method has been adapted to different kinds
of systems like differential inclusions [2] and discrete-time systems [12] and to systems with
different stability properties like ISS stability [21] and control systems [3]. The main advantage
of the CPA method is that it delivers a function that is guaranteed to satisfy the conditions for
a Lyapunov function exactly and its main drawback is that as it involves solving a large linear
programming problem it is not particularly fast. It has therefore been used in combination
with other faster methods to compute Lyapunov functions, the main idea being to compute
a Lyapunov function candidate by the faster method and then use the CPA method to verify
if the candidate indeed satisfies all conditions of a Lyapunov function. For this methodology
cf. e.g. [4, 17, 22, 11] and the paper [5], on which we base this work.

1.1

Notation:

We write vectors x ∈ Rd in boldface, x denotes the Euclidian norm of x, and Bε (x) := {y ∈
Rd : x − y < ε} is an open ball centered at x with radius ε > 0. We write subsets K ⊂ Rd
in calligraphic and its interior is denoted by K◦ and its closure by K. C m stands for the set
of all m-times continuously differentiable functions, the domain and codomain should always
be obvious from the context. We denote by A(y) := {x ∈ Rd : lim supt→∞ φ(t, x) − y = 0}
the basin of attraction of a stable equilibrium y. A Lipschitz constant L > 0 for f on a set K
is a constant such that f (x) − f (y) ≤ Lx − y for all x, y ∈ K. If there exists a Lipschitz
constant for f on every compact set K ⊂ Rd , f is said to be locally Lipschitz.

2

The Method

In [5] one first computes outer approximations Fi of the local attractors Ωi , i = 1, 2, . . . , N ,
of the system (1.1) contained in some predefined compact set D ⊂ Rd of interest. Then one
defines a sufficiently smooth functions γ : D → R+ (R+ := [0, ∞)) such that γ(x) = 0 whenever
N
x ∈ i=1 Fi and γ(x) > 0 otherwise. As shown in [5, Theorem 3.2] the function
 T
W (x) :=
γ(φ(t, x))dt
0

then has a negative orbital derivative
W  (x) := lim sup
h→0+

2

W (φ(h, x)) − W (x)
h



= ∇W (x) · f (x) if W ∈ C 1



	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

in a neighborhood of each of the Fi . Further, W (x) = 0 for all x ∈ Ωi and W (x) > 0 for all
other x in this neighborhood of Fi . Thus W resembles a complete Lyapunov function in the
sense that connected components of W −1 ([0, c]), c > 0, that are compact subsets of D◦ and
enclose an Fi completely, are necessary in the basin of attraction of Ωi . That is, if the system
is started in such a set W −1 ([0, c]), then φ(t, x) ends up in Ωi as t → ∞.
Clearly W (x) can only be computed in a finite number of points and one of the contributions
of [5] is to make the simple idea listed above into a useful algorithm by combining it with the
CPA method. Thus one first triangulates the set D of interest, i.e. subdivides it into a collection
T of d-simplices fulfilling certain properties [5, Definition 4.1]. Then W (ξ) is approximated at
every vertex ξ of every simplex S ∈ T by numerically solving the initial-value problem ẋ = f (x),
x(0) = ξ, and numerically integrate t → γ(φ(t, ξ)) over the interval [0, T ], where T > 0 is a
fixed constant.
In what follows we will show the following: If the attractors Ωi are exponentially stable
equilibrium points instead of more complicated attractors, then one can get similar results to
[5] by setting γ(x) := f (x). This not only simplifies the method but is considerably faster
because one does not have to identify the attractors and compute outer approximations.
More exactly, we show in Theorem 1 that if D contains one or multiple exponentially stable
equilibrium points, then the function
V (x) =



T
0

f (φ(τ, x))dτ

(2.1)

resembles a complete Lyapunov function in a neighborhood Ky ⊂ D of each equilibrium y ∈ D
if T > 0 is large enough. The fact that the CPA approximation of V , defined by computing
V (x) at every vertex x of every simplex of a triangulation of D and interpolating the values over
the simplices, also resembles a complete Lyapunov function is then delivered by [5, Theorem
4.2]. Note that since f (φ(τ, x)) = φ̇(τ, x) the formula (2.1) defines V (x) to be the length of the
trajectory piece {φ(τ, x) : τ ∈ [0, T ]}.
Before we state the main theoretical contribution of this paper, Theorem 1, we prove a
useful lemma.
Lemma 1. Assume y is an exponentially stable equilibrium of the system (1.1) and let Ky ⊂
A(y) be compact. Then there exist constants C ≥ 1 and λ > 0, such that
φ(t, x) − y ≤ Ce−λt x − y

for all x ∈ Ky and t ≥ 0.

(2.2)

Proof. Since y is exponentially stable there exists a ball Bε (y) and constants C ∗ ≥ 1 and λ > 0
such that
φ(t, x) − y ≤ C ∗ e−λt x − y for all x ∈ Bε (y) and t ≥ 0.
Pick an arbitrary ξ ∈ Ky \Bε (y). Then there exists an sξ > 0 such that φ(sξ , ξ)−y < ε/2. Fix
δξ∗ > 0 so small that Bδξ∗ ⊂ A(y). The set φ([0, sx ], Bδξ∗ ) is the image of the compact set [0, sx ]×
Bδξ∗ under the continuous mapping φ and is thus compact. Since f is C 2 it is locally Lipschitz
and there exists a Lipschitz constant Lξ > 0 for f on φ([0, sx ], Bδξ∗ ). For δξ , 0 < δξ < e−Lsx δξ∗ ,
small enough we can ensure that, cf. e.g. [27, §12.V], φ(sξ , x) − φ(sξ , ξ) ≤ x − ξeLξ sξ < ε/2
for all x ∈ Bδξ (ξ) ∩ [Ky \ Bε (y)]. The compactness of Ky \ Bε (y) now delivers the existence of
an s > 0 and an L > 0 such that φ(s, x) − y < ε for all x ∈ Ky \ Bε (y). Similarly we get for
these x that for all t, 0 ≤ t ≤ s, that φ(t, x) − y = φ(t, x) − φ(t, y) ≤ e(L+λ)s e−λt x − y
3

657

658	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

and for t ≥ s that (recall that x − y ≥ ε)
φ(t, x) − y = φ(t − s, φ(s, x)) − y ≤ C ∗ e−λ(t−s) φ(s, x) − y
≤ C ∗ eλs e−λt ε ≤ C ∗ eλs e−λt x − y.

Hence (2.2) holds for all x ∈ Ky with C := eλs max{C ∗ , eLs }.
Theorem 1. Assume y ∈ D is an exponentially stable equilibrium of the system (1.1) and let
Ky ⊂ D◦ be a compact neighborhood of y. Then there exists constants a, b, c, T > 0 such that
ax − y ≤ V (x) ≤ bx − y
V  (x) ≤ −cx − y

and

(2.3)
(2.4)

for all x ∈ Ky , where V is defined by the formula (2.1) on D using the T > 0 above.
Proof. By Lemma 1 there exists constants C ≥ 1 and λ > 0, such that
φ(t, x) − y ≤ Ce−λt x − y
Fix an x ∈ Ky . We calculate
V (x) =



T
0

f (φ(τ, x))dτ ≥ 



for all x ∈ Ky and t ≥ 0.

T
0

f (φ(τ, x))dτ  = 



0

T

φ̇(τ, x)dτ 

(2.5)

= φ(T, x) − x ≥ x − y − φ(T, x) − y ≥ (1 − Ce−λT )x − y.
Let L > 0 be a Lipschitz constant for f on the compact set CKy := {Cx ∈ Rd : x ∈ Ky }. Then
we get
V (x) =



T
0

f (φ(τ, x))dτ ≤

≤ LCx − y



T
0



T
0

e−λτ dτ =

Lφ(τ, x) − ydτ

(2.6)

LC
(1 − e−λT )x − y.
λ

Further
1
(V (φ(h, x)) − V (x))
h
h→0+


 T
T +h
1
f (φ(τ, x))dτ −
f (φ(τ, x))dτ
= lim sup
h→0+ h
h
0


 h
T +h
1
= lim sup
f (φ(τ, x))dτ −
f (φ(τ, x))dτ = f (φ(T, x)) − f (x)
h→0+ h
T
0

V  (x) = lim sup

≤ Lφ(T, x) − y − f (x) ≤ LCe−λT x − y − f (x)

(2.7)

Because f (y) = 0 and f ∈ C 2 we get by Taylor’s theorem that there is a compact neighborhood
Fy of y and a constant F > 0 such that
f (x) − Df (y)(x − y) ≤ F x − y2 for all x ∈ Fy .
4

	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

Since y is exponentially stable the matrix Df (y) is nonsingular and with µ > 0 as the squareroot of the smallest eigenvalue of the positive definite matrix Df (y)T Df (y) we get
1
µx − y
(2.8)
2
for all x ∈ Fy with x − y ≤ µ/(2F ). Thus, there is an ε-ball Bε (y) around y such that (2.8)
holds true for all x ∈ Bε (y). Set
f (x) ≥ Df (y)(x − y) − F x − y2 ≥ x − y(µ − F x − y) ≥

α∗ :=

inf

x∈Ky \Bε (y)

f (x)
.
x − y

Because Ky \ Bε (y) is compact this infimum is indeed a minimum and because Ky \ Bε (y) does
not contain equilibrium points of f we have α∗ > 0. Set α := min{α∗ , µ/2}. Then we have
f (x) ≥ αx − y for all x ∈ Ky
and it follows by (2.7) that
V  (x) ≤ −(α − LCe−λT )x − y.

(2.9)

Thus, for


 
1
L
ln(C) + ln
λ
α
we have T > 0 because clearly L ≥ α, C ≥ 1, and λ > 0. From T > ln(C)/λ we get from (2.5)
the existence of an a > 0, from T > 0 and (2.6) the existence of a b > 0, and from (2.9) and
T > ln(LC/α)/λ the existence of a c > 0 such that
T >

ax − y ≤ V (x) ≤ bx − y and

3

V  (x) ≤ −cx − y for all x ∈ Ky .

Examples

In this section we present four examples to demonstrate out method in action. In all the
examples we used the Runge-Kutta 4th order method RK4 to estimate the solution t → φ(t, x)
of the system (1.1) at all vertices x of all simplices of the triangulation. We use the following
notation throughout:
(I) T is the upper limit of integration, that is the Lyapunov function V is calculated at x by
 T
estimating
f (φ(τ, x)dτ .
0

(II) ∆t is the time-step used in the RK4 method. We used ∆t = 5 · 103 in all the examples.
(III) D is the domain on which we calculate the Lyapunov function.

(IV) N is the number of simplices used in the triangulation of D. We used the regular triangulations Tρstd , ρ > 0, cf. [11, Definition 4.8]. Their vertices are given by ρZd ∩ D.
We estimate V (x) at the vertices x of the triangulation by
V (x) =



T
0

f (x(t))dt ≈

T /∆t



∆tf (φ(i∆t, x).

i=0

In all our examples we normalize V such that max V (x) = 1.
x∈D

5

659

660	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

3.1

Example 1

We start by by examining the following equation that was also considered in [5, Example 2].
ẋ = y

(3.1)
3

ẏ = 0.3(4x − x − y).
A simple analysis of the system yields that it contains two stable equilibrium points at (−2, 0)
and (2, 0), and additionally an unstable equilibrium point at (0, 0). In this example we set
T = 128, D = [−4, 4]2 , and N = 819, 200. The resulting function is depicted in Figure 1, and in
Figure 2 we plot a few level curves for the function, as well as marking the simplices where the
orbital derivative is non-negative. In total there are 4,315 such simplices, or roughly 0.53% of
them. Any closed level curve which does not intersect such a simplex is a boundary of a forward
invariant set for the system. The results presented here are practically identical to the results
form [5, Example 2] and the omission of computing outer approximations of the attractors did
not deteriorate the results in any way.

Figure 1: The computed CPA Lyapunov
function for the system (3.1).

3.2

Figure 2: A few level curves for the Lyapunov function in Figure 1 for the system (3.1). The simplices where the orbital
derivative is non-negative are depicted with
a blue mark.

Example 2

Next we examine the following system taken from [9] and [8, §6.1].
α1

− x1
1 + xβ2
α2
x˙2 =
− x2 .
1 + xγ1

x˙1 =

(3.2)

This equation describes the genetic toggle switch in Escherichia coli and was constructed in
[10]. Here we have selected α1 = 1.3, α2 = 1.0, β = 3.0, and γ = 10.0 as in [9, 8] and we
6

	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

refer to these publications for an analysis of the dynamical properties of the system with these
parameters.
For our computations we choose T = 16, D = [−1, 3]2 and N = 204, 800. The resulting
function is depicted in Figure 3, and in figure 4 we plot a few level curves for the function,
as well as marking the simplices where the orbital derivative is non-negative. As before, any
closed level curve which does not intersect such a simplex is a boundary of a forward invariant
set for the system. The simplices where the orbital derivative is non-negative are depicted with
a blue marks in Figure 4. In total there are 586 such simplices, or roughly 0.28% of them.

Figure 3: The computed CPA Lyapunov
function for the system 3.2.

3.3

Figure 4: A few level curves for the Lyapunov function in Figure 3 for the system (3.2). The simplices where the orbital
derivative is non-negative are depicted with
a blue mark.

Example 3

In our third example, we look at the following system in R3 .
x˙1 = −x1 − x2 − x3
x˙2 = sin(x1 ) − 2x2 (1 + x1 ) + x3

(3.3)

x˙3 = x1 (1 + x1 ) + x2 − 2 sin(x3 ).

This system was previously examined in [17]. In this example we have chosen T = 32, D =
[−4, 4]3 , and N = 10, 368, 000. This system contains a stable equilibrium at the origin, and as
we can see in Figure 6 we obtain a forward invariant set containing it. The set of all simplices
with non-negative orbital derivative consists of 25,747 simplices, our roughly 0.25% of all the
simplices in the triangulation.

7

661

662	

Jòhann Björnsson et al. / Procedia Computer Science 108C (2017) 655–664
Lyapunov Function computation for systems with multiple equilibria
Björnsson and Hafstein

Figure 5: A level-surface for the Lyapunov
function computed for the system (3.3).
The simplices where the orbital derivative
is non-negative are marked with blue dots.
Since the level-surface does not intersect
the set of simplices with a non-negative orbital derivative, the surface is the boundary
of a forward invariant set for the system.

3.4

Figure 6: The level surface from Figure 6
viewed from another angle.

Example 4

Our final example is a simplified model of a repressilator [6] taken from [8, §6.3].
ẋ1 =
ẋ2 =
ẋ3 =

α
1 + xβ2
α
1 + xβ3
α
1 + xβ1

− x1

(3.4)

− x2
− x3 .

Here we pick α = 5.0 and β = 2.0 as in [8, §6.3]. Furthermore, we choose T = 16, D =
[−0.484, 3.516]3 , and N = 6, 000, 000. Level-surfaces of the computed Lyapunov function are
depicted in figures 7 and 8. The set of all simplices with possibly positive orbital derivative
consists of 526 simplices, our roughly 0.01% of all the simplices in the grid.

8

	

Jòhann Björnsson et al. / Procedia Computer Science 108C (2017) 655–664
Lyapunov Function computation for systems with multiple equilibria
Björnsson and Hafstein

Figure 7: A level-surface for Lyapunov
function computed for the system (3.4).
The simplices where the orbital derivative
non-negative are marked with blue dots.
Since the level-surface does not intersect
the set of simplices with a non-negative orbital derivative, the surface is the boundary
of a forward invariant set for the system.

4

Figure 8: The level surface from Figure 6
viewed from another angle.

Conclusions

We presented a novel numerical method to compute Lyapunov functions for non-linear systems
on compact domains. We showed in Theorem 1 that the computed Lyapunov functions deliver
essential information on the qualitative behavior of the dynamics if the domain includes one or
multiple exponentially stable equilibria. The proposed method is inspired by the method presented in [5] for systems with multiple local attractors, but is numerically much less demanding
because one does not have to compute outer approximations of the attractors initially. We gave
four examples in two- and three dimensions to demonstrate the power and applicability of our
method. It delivers a fast, simple, and easy to use analytical tool to extract important and
exact information on the system dynamics of non-linear systems with multiple equilibria..

References
[1] J. Auslander. Generalized recurrence in dynamical systems. Contr. to Diff. Equ., 3:65–74, 1964.
[2] R. Baier, L. Grüne, and S. Hafstein. Linear programming based Lyapunov function computation
for differential inclusions. Discrete Contin. Dyn. Syst. Ser. B, 17(1):33–56, 2012.
[3] R. Baier and S. Hafstein. Numerical computation of Control Lyapunov Functions in the sense of
generalized gradients. In Proceedings of the 21st International Symposium on Mathematical Theory
of Networks and Systems (MTNS), pages 1173–1180 (no. 0232), Groningen, The Netherlands, 2014.
[4] J. Björnsson, P. Giesl, S. Hafstein, C. Kellett, and H. Li. Computation of continuous and piecewise
affine Lyapunov functions by numerical approximations of the Massera construction. In Proceedings
of the CDC, 53rd IEEE Conference on Decision and Control, Los Angeles (CA), USA, 2014.

9

663

664	

Lyapunov Function computation
for Björnsson
systems with
Jòhann
et al. /multiple
Procedia equilibria
Computer Science 108C (2017) Björnsson
655–664 and Hafstein

[5] J. Björnsson, P. Giesl, S. Hafstein, C. Kellett, and H. Li. Computation of Lyapunov functions for
systems with multiple attractors. Discrete Contin. Dyn. Syst. Ser. A, 35(9):4019–4039, 2015.
[6] O. Buse, R. Pérez, and A. Kuznetsov. Dynamical properties of the repressilator model. Phys. Rev.
E, 81:066206–1–1066206–7, 2010.
[7] C. Conley. Isolated Invariant Sets and the Morse Index. CBMS Regional Conference Series no. 38.
American Mathematical Society, 1978.
[8] A. Doban. Stability domains computation and stabilization of nonlinear systems: implications for
biological systems. PhD thesis: Eindhoven University of Technology, 2016.
[9] A. Doban and M. Lazar. Computation of Lyapunov functions for nonlinear differential equations
via a Yoshizawa-type construction. IFAC-PapersOnLine, 49(18):29 – 34, 2016. 10th {IFAC}
Symposium on Nonlinear Control Systems {NOLCOS} 2016Monterey, California, USA, 23-25
August 2016.
[10] T. Gardner, C. Cantor, and J. Colloins. Construction of a genetic toggle switch in Escherichia
coli. Nature, 403:339–342, 2000.
[11] P. Giesl and Hafstein. Computation and verification of lyapunov functions. SIAM Journal on
Applied Dynamical Systems, 14(4):1663–1698, 2015.
[12] P. Giesl and S. Hafstein. Computation of Lyapunov functions for nonlinear discrete time systems
by linear programming. J. Difference Equ. Appl., 20(4):610–640, 2014.
[13] P. Giesl and S. Hafstein. Revised CPA method to compute Lyapunov functions for nonlinear
systems. J. Math. Anal. Appl., 410:292–306, 2014.
[14] P. Giesl and S. Hafstein. Review of computational methods for Lyapunov functions. Discrete
Contin. Dyn. Syst. Ser. B, 20(8):2291–2331, 2015.
[15] A. Goullet, S. Harker, K. Mischaikow, W. Kalies, and D. Kasti. Efficient computation of Lyapunov
functions for Morse decompositions. Discrete Contin. Dyn. Syst. - Series B, 20(8):2419–2451, 2015.
[16] S. Hafstein. An algorithm for constructing Lyapunov functions. Monograph. Electron. J. Diff.
Eqns., 2007.
[17] S. Hafstein, C. Kellett, and H. Li. Computing continuous and piecewise affine lyapunov functions
for nonlinear systems . Journal of Computational Dynamics, 2(2):227 – 246, 2015.
[18] M. Hurley. Lyapunov functions and attractors in arbitrary metric spaces. Proc. Amer. Math. Soc.,
126:245–256, 1998.
[19] W. Kalies, K. Mischaikow, and R. VanderVorst. An algorithmic approach to chain recurrence.
Found. Comput. Math, 5(4):409–449, 2005.
[20] C. Kellett. Converse Theorems in Lyapunov’s Second Method. Discrete Contin. Dyn. Syst. Ser.
B, 20(8):2333–2360, 2015.
[21] H. Li, R. Baier, L. Grüne, S. Hafstein, and F. Wirth. Computation of low-gain local ISS Lyapunov
functions via linear programming. Discrete Contin. Dyn. Syst. Ser. B, 2015.
[22] H. Li, S. Hafstein, and C. Kellett. Computation of continuous and piecewise affine Lyapunov
functions for discrete-time systems. J. Difference Equ. Appl., 2015.
[23] S. Marinósson. Lyapunov function construction for ordinary differential equations with linear
programming. Dynamical Systems: An International Journal, 17:137–150, 2002.
[24] J. Massera. On Liapounoff’s conditions of stability. Ann. of Math., 50(2):705–721, 1949.
[25] D. E. Norton. The fundamental theorem of dynamical systems. Comment. Math. Univ. Carolinae,
36:585–597, 1995.
[26] C. Robinson. Dynamical Systems: Stability, Symbolic Dynamics, and Chaos. Studies in Advanced
Mathematics. CRC Press, 2. edition, 1999.
[27] W. Walter. Ordinary Differential Equation. Springer, 1998.

10

