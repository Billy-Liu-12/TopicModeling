Nonlinear Internal Model Control Using Neural
Networks and Fuzzy Logic: Application to an
Electromechanical Process
1,2
1
1
3
Rodolfo E. Haber *, J.R. Alique , A. Alique , and R.H. Haber
1

Instituto de Automática Industrial (CSIC).
km. 22,800 N-III, La Poveda. 28500 Madrid.
SPAIN.
rhaber@iai.csic.es
2
Escuela Técnica Superior
Universidad Autónoma de Madrid.
Ciudad Universitaria de Cantoblanco.
Ctra. de Colmenar Viejo, km 15. 28049 Madrid
SPAIN.
3
Departamento de Control Automático.
Universidad de Oriente. 90400.
CUBA

Abstract. This study explores the use of the internal-model control (IMC)
paradigm using artificial neural networks (ANNs) and fuzzy logic (FL) to
consider a force-control problem involving a complex electromechanical
system, represented here by the machining process. The main goal is to control
a single output variable, cutting force, by changing a single input variable, feed
rate. This scheme consists of a dynamic model using ANNs to estimate process
output and a fuzzy-logic controller (FLC) with the same static gain as the
inverse model to determine the control inputs (feed rate) necessary to keep the
cutting force constant. Three approaches, the fuzzy-logic controller (FLC), the
internal-model controller (IMC) and a neuro-fuzzy controller (NFC), are
simulated and their performances are assessed in terms of several performance
measurements. The results demonstrate that the NFC strategy provides better
disturbance rejection than IMC and FLC for the cases analysed.

1 Introduction
Nowadays artificial neural networks (ANNs) and fuzzy logic (FL) are probably the
most widely used artificial intelligence techniques in model identification and controlsystem design. ANNs have shown an excellent capability to model any non-linear
function to a desired degree of accuracy [1]. Because of this property, ANNs are
suitable for the identification and control of non-linear plants [2,3]. Of all the different
classes of networks, feedforward neural networks and particularly multi-layer
*

Corresponding author

P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2657, pp. 351–360, 2003.
© Springer-Verlag Berlin Heidelberg 2003

352

R.E. Haber et al.

perceptrons (MLPs) are the most frequently used for non-linear control. Furthermore,
FL has proven useful in control and industrial engineering as a very practical
optimising tool. The growing number of successful industrial applications of fuzzy
logic worldwide really provides the best credentials the technique could hope for [4].
Through FL we can plug human knowledge, expressed in qualitative terms, into
control systems to provide us with an alternative mathematical tool for computation,
human reasoning, and the integration of qualitative and quantitative information.
Combining different AI approaches in the control field has yielded interesting and
efficient applications [5]. This paper pursues the same line and presents some
preliminary results regarding a control strategy that is a useful synergy of a dynamic
neural network trained from real-life data and used to predict process output and a
fuzzy-logic control (FLC) that enhances the overall performance of the closed-loop
system.
Internal-model control (IMC) is a well-established approach to controller design in
which the process model is explicitly used in the control-system design procedure
[6,7]. However, when an exact mathematical model is not available or is very
sophisticated, IMC can get around the lack of an explicit plant model by using an
experimental identification scheme. In such cases, ANNs can be used to produce an
efficient control scheme based on the IMC principle. The IMC-based ANNs consists
in training a network to learn the process’ dynamics. Another ANN can be trained to
learn the inverse dynamics so that it can be used as a non-linear controller [8]. If we
can synthesise an FLC with a static gain equal to the static gain of the inverse model,
and if the control system is stable with this controller, we obtain the offset-free
control for constant setpoints and output disturbances [9]. The neuro-fuzzy control
(NFC) scheme proposed here is inspired by IMC-based ANNs. The inverse of the
dynamic ANNs is replaced in the forward path by a fuzzy controller, aiming at
improving disturbance-rejection capability.
In this paper a complex electromechanical process, the machining process, is used
as the test bed [10]. The electrical portion of the system includes DC and AC
rotational motors, amplifiers, sensors and other components. The mechanical portion
includes the rigid structure and the body with its different shafts, gears and reducer.
The main goal is to implement machining-process optimisation through controlling a
single output variable, the cutting force, by changing a single input variable, the feed
rate. The effectiveness of the NFC scheme is demonstrated through simulations. The
comparison of FLC, IMC and NFC is assessed using several performance criteria
based on the given simulation results. The NFC can be inferred to make the control
system more effective in disturbance rejection.
This paper is organized as follows. Section 2 introduces the machining-process
models used in simulations. Section 3 explains the fuzzy approach in a simple
feedback system to control the cutting force. Section 4 presents the design of an IMC
based on ANNs. Section 5 addresses the NFC system’s design and the comparison of
the three control systems based on simulation results. The final section draws a
number of conclusions.

Nonlinear Internal Model Control Using Neural Networks and Fuzzy Logic

353

2 The Machining Process
The characteristics of the machining process as a complex electromechanical process
severely limit the use of classic mathematical tools for modelling and control. Even
so, a classic mathematical model could provide a characterisation of the dynamic
behaviour of the machining process that could help to investigate and analyse
machine-tool performance and limitations. The dynamics of the milling process
(cutting-force response to changes in feed rate) can be approximately modelled using
at least a second-order differential equation.
The following linear model is suggested in [11]:

G LU ( z ) =

0.019 z + 0.017
z 2 − 1.75 z + 0.77

.

(1)

Another model obtained using second-order differential equations [12] is

G RS (z ) =

0.052 z + 0.04
z − 1.42 z + 0.45
2

.

(2)

The structure of a first-order cutting-force process including cutting speeds and
non-linear depth-of-cut effects is proposed [13] thus:

G LA ( z ) =

0.11
a 0.65 f
z − 0.85

0.63

.

(3)

G P = {G LU ( z ), G RS ( z ), G LA ( z )} represents the machining process from the classical
viewpoint. Equations (1)-(3) are only valid over a narrow range; hence they cannot
trespass certain limits in representing the process’ complexity and uncertainty.
However, they do provide a rough characterisation of the dynamic behaviour of the
machining process and are used in Section 5 for simulations.

3 Fuzzy Approach to Controlling Cutting Force
The design of a fuzzy-logic controller (FLC) as detailed in [4] is introduced in this
section. The input variables are the cutting-force error ∆F and the change in cuttingforce error ∆2 F . The manipulated (action) variable selected is the feed-rate
increment ∆f , whereas the spindle speed is considered constant and preset by the
operator. The control scheme is depicted in Fig. 1.
The controller output is inferred by means of the compositional rule. The SupProduct compositional operator was selected for the compositional rule of inference.
For instance, applying the T2 norm (product) and applying S1 s-norm (maximum)
yields (4).

354

R.E. Haber et al.

Fig. 1. Fuzzy-control scheme for the machining process.

m× n

[ [

]

µ ( ∆F , ∆2 F , ∆f ) = S1 T2 µ ∆Fi (∆F ), µ ∆2 F (∆2 F ), µ ∆f i (∆f ) .
i =1

i

(4)

where T2 represents the algebraic-product operation and S1 represents the union
operation (max), m × n = 49 rules. The crisp controller output, used to change the
machine-table feed rate, is obtained by defuzzification employing the centre of area
(COA) method defined as

∑ µ (∆f ) ⋅ ∆f
∆f =
∑ µ (∆f )
i

R

i

R

(5)

i

.

i

i

where ∆f is the crisp value of ∆fi for a given crisp input ( ∆Fi , ∆2 Fi ).
The strategy used to compute f determines what type of fuzzy regulator is to be used.
In this case it is a PI regulator:
f * ( k ) = f ( k − 1) + ∆ f ( k ) .

(6)

4 IMC System Based on Neural Networks
First an ANN is trained to learn the dynamics of the process and is therefore given
known input and output data sets. Training with real-time data uses data obtained
from actual machining operations. So, one of the neural-network models developed in
[10] is selected as a basis for IMC control. The dynamic equation can be described in
reduced notation by

Fˆ (t ) = G M (F, f ) .

(7)

where G M is an unknown function to be identified, F is the cutting force exerted
during the removal of metal chips and f is the relative feed speed between tool and
worktable. Cast in vector form, f and F are the input and output respectively defined

Nonlinear Internal Model Control Using Neural Networks and Fuzzy Logic

355

as F = [F (t − 1) L F (t − n)] and f = [ f (t − 1), L , f (t − m)] , t is the discrete
time instant and n, m³Z. A successful identification scheme should insure Fˆ (t )
values as close as possible to those of F (t ) (actual output).
The training algorithm was developed using MATLAB. The topology was initially
chosen as follows: one input f and one output Fˆ , a linear activation function at the
output and one hidden layer using the hyperbolic tangent for the activation function.
The type of model was selected using a priori knowledge of the milling process and
the types of models considered in previous work. An ANN with four neurons in the
input, four neurons in the hidden layer and one in the output layer was selected. The
dynamic equation can be described in reduced notation by

Fˆ (t + 1) = G M ( f (t ) f (t − 1) F (t ) F (t − 1)) .

(8)

where G M = {w f , Wf } ,

 - 0.4355
 0.3790
wf = 
 0.5686

 - 0.2621

0.0901 0.7938 - 0.5570 - 0.4723
0.3895 - 0.2630 - 0.1079 0.1944 
- 0.3144 - 0.7093 0.8608 0.1641 

0.7771 - 0.3636 0.4915 0.9354 

Wf = [- 0.6189 0.2987 1.0114 1.1728 - 1.2777].

(9)

(10)

The inverse model was obtained on the basis of generalised training [8]. Therefore,
the network is trained off-line to minimise

J (θ ) =

∑ ( f (t ) − fˆ (t )) .
M

2

(11)

t =1

Another ANN is trained to learn the inverse dynamics of the process and to work
as a non-linear controller. The dynamic equation of the inverse model can be
described in reduced notation by
’
f (t ) = G M
( F (t + 1) F (t ) f (t − 1) f (t − 2) ) .

(12)

’
= {w i , Wi } ,
where G M

0.1020
1.5430
wi = 
 0.1216

 0.1328

- 0.0190 - 0.0096 - 0.1468 0.0670
0.6541 - 0.2669 - 0.7483 0.2376 
.
- 0.1247 0.0590 0.2472 - 1.1422 

- 0.0265 - 0.0356 0.1701 0.5677 

(13)

356

R.E. Haber et al.

Wi = [-3.3957 0.0569 2.0374 2.7758 0.4598] .

(14)

The bias vector (term) is represented by the last column of (9)-(10) and (13)-(14).

a)

b)

Fig. 2. a) Comparison between plant and model outputs, (b) Comparison between actual control
signal and prediction.

The result of the forward model for predicting cutting force in real time is shown in
Figure 2a. The behaviour of the inverse model is depicted in Figure 2b. Several
performance indices were used to evaluate the forward model and the inverse model,
defined as

NSSE =

FPE =

SSE
.
2N

(15)

NSSE ( N + p)
.
N−p

(16)

2 ⋅ N ⋅ NSSE
.
N−p

(17)

ENV =

SBC = N ⋅ log( SSE

N

) + p ⋅ log( N ) .

(18)

where SSE is the sum of squared errors, NSSE is the prediction error, FPE is the final
prediction error, p is the effective number of weights and N is the total number of
samples.
NSSEf=0.37, FPEf=0.39, ENVf=0.77 and SBCf=-3942.7 were yielded for the
forward model. NSSEi=0.0274, FPEi=0.0291, ENVi=0.0564 and SBCi=-2831.2 were
yielded for the inverse model.

Nonlinear Internal Model Control Using Neural Networks and Fuzzy Logic

357

5 Simulations and Results
Models (1)-(3) were used in a feedback-control structure as depicted in Figure 3. The
fuzzy-control surface with the same static gain as the inverse neural model G M ’ is
shown in Figure 4.

a)

b)
Fig. 3. a) IMC scheme, b) NFC diagram.

In the sequel, simulations were run based on linearised plant models (1)-(3)
representing approximate process models and using the control schemes depicted in
Figures 1 and 3.
The inclusion of a filter, G F (see Fig. 3 a), was found to reduce the high-frequency
gain and hence improve the robustness of the system. The filter also smoothes out
noisy/rapidly changing signals, reducing the transient response of the controller.
Therefore robustness is considered explicitly in the IMC design, although it can be
adjusted by choosing filter G F accordingly.
A common choice from classical literature is the low-pass filter. Using the ztransform G F ( z ) is given by

358

R.E. Haber et al.

GF ( z) =

1− k2
.
z − k1

(19)

where k1 , k 2 are design parameters and usually k 1 = k 2 .

Fig. 4. Fuzzy-control surface for the NFC scheme.

In order to analyse the disturbance-rejection capabilities of the control system,
additive noise plus the influence of unmodelled dynamics are considered in order to
estimate the dynamics that can be expected in real-time applications. The following
additive noise is assumed to corrupt the output:

d (t ) = 0.1 ⋅ (sin 8t + sin 12t + sin 23.66t + sin 35.49t ) .

(20)

Now, the more realistic model of the process, including unmodelled multiplicative
dynamics plus (20), is represented by

G P ( z ) = G∗ ( z ) ⋅

0.095
+ d ( z) .
z − 0.904

(21)

where G* ( z ) is an ideal process model represented by (1)-(3).
Figure 5 shows the simulation results with and without the influence of unmodelled
dynamics and disturbances. In order to evaluate the simulation results, various
performance indices were calculated such as integral absolute error (IAE), integral
square error (ISE) and integral of time-weighted absolute error (ITAE). The overshoot,
Mpt, was also computed.
A comparison of FLC, IMC and NFC is shown in Table 1. Both FLC and IMC are
able to regulate the process in the presence of noise. FLC gives a slightly better
transient response but more error and a bigger overshoot. The resulting NFC performs
well in both transient and steady-state conditions.

Nonlinear Internal Model Control Using Neural Networks and Fuzzy Logic

a)

359

b)

Fig. 5. Closed-loop response using (a) IMC, (b) NFC.

Table 1. Control strategy comparison.

ISE

Criterion

IAE

ITAE

Mpt [%]

Model

FLC IMC NFC FLC IMC NFC FLC

IMC NFC

FLC IMC NFC

(1)

12.4 20.0 10.5 21.9 28.5 21.5 12.7

31.7 18.1

NO

NO

2.41

(2)

13.9 15.4 13.8 20.2 30.4 29.0 16.9

57.4 53.4

NO

NO

NO

(3)

7.1

23.8 130.3 1.2

4.0

23.9

7.1

11.1 13.0 16.1 36.3 10.8

(21)-(1)

43.3 20.7 18.4 90.2 43.4 38.0 180.8 64.7 50.9

85.2 35.9

41.2

(21)-(2)

25.6 20.4 19.8 48.7 38.2 39.4 136.6 88.0 90.1

61.4 27.7

27.3

(21)-(3)

20.6 11.9 11.1 44.6 27.5 27.9 140.1 66.6 73.0

65.3 41.3

51.6

6 Conclusions
This paper presents some preliminary results of a control strategy based on the
internal-model control paradigm, which is a useful synergy of a dynamic ANN trained
from real-life data and used to predict process output and a fuzzy-logic control (FLC)
that enhances the control system’s overall performance. The proposed neuro-fuzzy
control (NFC) scheme is inspired by the non-linear IMC; the inverse model
represented by a dynamic ANN is replaced by a fuzzy controller in order to improve
disturbance-rejection capability. A dynamic ANN is trained to learn the process

360

R.E. Haber et al.

dynamics and another ANN is trained to learn the inverse dynamics. An FLC with the
same static gain as the inverse model is used in the forward path of the control loop.
The results shown here are still preliminary because only linear-process models
have been considered for simulation. Nevertheless, the simulation tests show that
NFC performs better than FLC and IMC on the basis of ISE, IAE and ITAE
performance measurements. However, FLC’s simplicity and satisfactory transient
response can make this scheme a good one for dealing with strict time-computing
requirements.
In this paper the ANN was trained off-line using actual data, but in future on-line
training as well as the real-time application of the NFC will be implemented in order
to enable adaptation and check actual plant behaviour.

References
1.
2.
3.
4.

5.
6.
7.
8.
9.
10.
11.
12.
13.

Hornik K., Stincheombe M., White H.: Multilayer feedforward networks are universal
approximators. Neural Networks 2 (1989) 359–366
Hunt K.J., Sbarbaro D., Zbikowski R., Gawthrop P.J.: Neural Networks for control
systems- A survey. Automatica 28(6) (1992) 1083–1112
Nelles O.: Nonlinear system identification: From classical approaches to neural networks
and fuzzy logic, Springer Verlag (2000)
Haber R.E., Haber R.H., Alique A., Ros S.: Application of knowledge-based systems for
supervision and control of machining processes. In: S.K. Chang (ed.): Handbook of
Software Engineering and Knowledge Engineering Vol. II. World Scientific Publishing
(2002) 327–362
Hung S.J., Lian R.J.: A hybrid fuzzy logic and neural networks algorithm for robot motion
control. IEEE Transactions on Industrial Electronics 44(3) (2000) 217–229
Morari M., Zafiriou E.: Robust process control. Prentice Hall, Englewood Cliffs, NJ,
(1989)
Goodwin G.C., Graebe S.F., Salgado M.E.: Control System Design. Prentice Hall, NJ,
USA, pp. 567–582 (2001)
Norgard M., Ravn O., Poulsen N.K., Hansen L.K.: Neural networks for modelling and
control of dynamics systems, Springer-Verlag, London, (2000)
Rivals I., Personnaz L.: Nonlinear internal model control using neural networks:
Application to processes with delay and design issues. IEEE Transactions on Neural
Networks 11(1) (2000) 80–90
Haber R.E., Haber R.H., Ros S., Alique A., Alique J.R.: Dynamic model of the machining
process on the basis of neural networks: From simulation to real time application. Lecture
Notes in Computer Science 2331 (2002) 574–583
Lauderbaugh L.K., Ulsoy A.G.: Model reference adaptive force control in milling. ASME
Journal Engineering of Industry 111 (1989) 13–21
Rober S.J., Shin Y.C.: Control of cutting force for milling processes using an extended
model reference adaptive control scheme. Journal of Manufacturing Science and
Engineering 118 (1996) 339–347
Landers R., Ulsoy A.: Model-based machining control, ASME Journal of Dynamics
Systems, Measurement and Control 122(3) (2000) 521–527

