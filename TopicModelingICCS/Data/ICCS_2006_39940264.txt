Development of Integrated Framework for the High
Temperature Furnace Design
Yu Xuan Jin1, Jae-Woo Lee2,*, Karp Joo Jeong3, Jong Hwa Kim4,
and Ho-Yon Hwang5
1 Graduate

Research Assistant, Department of Advanced Technology Fusion
2 Professor, Department of Aerospace Engineering
jwlee@konkuk.ac.kr
3 Professor, Department of Internet & Multimedia Engineering
4 Professor, Department of Industrial Engineering
5 Professor, Department of Aerospace Engineering, Sejong University,
Center for Advanced e-System Integration Technology (CAESIT)
Konkuk University, Seoul 143-701, Republic of Korea

Abstract. In this research the high temperature vacuum furnace design
framework with centralized database system, distributed middleware and
integrated graphic user interface(GUI), are developed with configuration
module(CAD), thermal analysis module, optimization modules, and database
management system. By considering the operation under the distributed
computing environment, the method of managing the analysis modules and the
optimization process is proposed and the integration method of database system
and CAD system under local PC environment is demonstrated by carrying out
example design problem.

1 Introduction
For the product design and development of the most small and medium enterprises,
the design, analysis and the production department are geographically and business
wise separated. Various software programs are scattered and need integration for the
efficient design and development. Therefore, dissimilar and distributed computational
environment and resources must be integrated seamlessly. Because the high
temperature vacuum (gas) furnace requires elaborate technology, low production cost,
and fast design cycle, an integrated design framework must be developed which can
integrate the database operation, the design automation, and the integrated analysis.
General process of furnace design may start with user’s requirements, such as
target temperature, ambient gas and uniform temperature zone size. Materials and
sizes of heater and insulator are decided based on the user’s requirements. Then, the
chamber size and type are determined. Thereafter, the vacuum system, the
temperature control system and the cooling system are consequently determined.
Finally, a sample-loading type is decided. Figure 1 shows the design process of a
vacuum furnace.[1]
*

Corresponding author.

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part IV, LNCS 3994, pp. 264 – 271, 2006.
© Springer-Verlag Berlin Heidelberg 2006

Development of Integrated Framework for the High Temperature Furnace Design

265

Fig. 1. Design Process

Since the design process is empirical and executed one after another, design issues
that occur in the middle of the design or manufacturing can not be properly
accounted. If the problems are not resolved within the design stage, whole design
process must be repeated again. When the problems occur at the production stage, the
development time and cost may be increased.
Existing method of design vacuum furnace is a trial and error method, which
before producing vacuum furnace it is impossible to make an estimation performance.
And it depends on experience. So when we produce vacuum furnace expense too
much cost and it is not efficient. Consequently development of the efficient vacuum
design technique with the optimization is necessary and the design framework which
provides development environment is necessary. Utilizing design function user can
judge the result with support data from GUI interface in the related design at the same
time[2].
In this research the high temperature vacuum furnace design framework with
centralized database system, distributed middleware and integrated graphic user
interface(GUI), shall be developed with configuration module(CAD), thermal
analysis module, optimization modules, and database management system.

2 Integration Architecture of High Temperature Vacuum Furnace
Design Framework
To obtain the framework architecture under the distributed computing environment,
framework’s requirements and commercial framework software’s architecture are to
be analyzed. Table 1 shows framework requirements[3].
The framework development is summarized with two objectives. First, it is a
design function which can efficiently accomplish MDO (Multidisciplinary Design

266

Y.X. Jin et al.

Optimization) at time and cost. Second, it is an integration design environment that
the field experts can participate in design at the same time. The framework meaning
of expandability is a possibility of trying to observe from two viewpoints. First, it is
the expandability that framework can apply design subject which is possible. Second,
it is the expandability that framework can add like analysis optimization codes which
is possible. Because framework aims an independent design environment for design
subject, link method and data flow of code will not be able to apply with fixed
pattern.
Table 1. Framework Requirements

 CAD/CAE tools integration method
 Management of analysis code data flow
Basic
Requirements  Management of analysis and optimization process
 Grasp the function in GUI






Essential

Requirements




Execute under the heterogeneous distributed environment
Centralized DBMS (Database Management System)
Detecting wrong data flow and process
Monitoring variables while process is executing
Delete, add, modify the design process
Create design variables for the complex design problem
Restart at wrong design point
The object oriented design for an expandability and standard
development tool and implementation

Additional  Manage execution with scheduler
Requirements  Parallel computing

The framework which considers expandability in distributed computing
environment, the design plan is materializing design, analysis resources as
'component', and locating above the distributed environment system Layer which
takes charge of a distributed environment. Considering this requirement, the high
temperature vacuum furnace design framework centralizes distributed
system(PLinda), integrated graphic user interface, configuration, database, analysis,
and optimization modules. The figure 2 shows the development concept in high
temperature furnace design framework.
2.1 High Temperature Vacuum Furnace Design Framework System
Architecture
The high temperature vacuum furnace design framework was constructed of 6
modules. Using distributed middleware for integrating distributed resource, select
Microsoft Access for managing data, and selecting Visual Basic language are easy to

Development of Integrated Framework for the High Temperature Furnace Design

Fig. 2. Framework Development Concept[4]

Fig. 3. System Integration Architecture

267

268

Y.X. Jin et al.

develop GUI. Selecting the AutoCAD for drawing vacuum furnace configuration, and
using DOT optimization Code(Gradient Method), thermal analysis code including
conduction, convection, radiation. The accuracy of analysis code can be confirmed in
final report of 'Development of High Temperature Vacuum Furnace Through
Integrated Design and Optimization Technology'. The figure 3 shows system
integration architecture [5].
2.2 High Temperature Vacuum Furnace System Design Framework
Integration Plan of Analysis Code
So far most integration method of analysis code is developed using I/O file.
Analysis codes which only offers executable program in ultra high temperature
vacuum furnace system are integrated using the in/output files and mixed language
is employed when the source file is available. For the integration using analysis
code’s I/O, standard I/O metadata file and analysis code input file based on the
parameter defined by the user are created. I/O file is displayed on GUI and is saved
according to the order of user’s selection and data type. Figure 4 is the structure of
code integration using file I/O.
Info.mtd

Meta Data File
Input Data File

Admin Program
Output Data File

Standard Communication Interface

Communication Protocal

Distribution System(Plinda)

File In/Output Infomation

Standard Communication Interface

Process ID

Analysis Code1
Agent
Analysis Code2
Agent
Analysis Code3
Agent
G

Fig. 4. Analysis Code Integration Architecture

Because the integration of analysis code is realized through file’s I/O in ultra high
temperature vacuum furnace system program, if analysis code’s I/O is not changed, it
required that a new version of analysis code is modified even if it is changed.
Integration of Optimization Code
When formulating the vacuum furnace system optimization problem, we read existing
database are drawn and carried out for the integration. In many cases the optimization
codes are written by Fortran[6]. As the Fortran language can not directly access the
database, C++ and Fortran are used together. Figure 5 shows the integration concept
of the optimization code and the analysis modules.

Development of Integrated Framework for the High Temperature Furnace Design

269

G

Fig. 5. Optimal Code Integration Architecture

Integration of Database
There were two kinds of methods in this system for integrating database system. First
method uses file’s I/O. Though analysis code is same with the integration method,
input file is realized in query and data values. When user needs data for executing
analysis code or optimal data, after create query and connect database, user can draw
out any data which user wants. Second method doesn’t directly pass middleware from
user interface GUI and input data or read data about vacuum furnace system products
through connecting database. Figure 3 shows the integration structure of database.
Integration of CAD
AutoCAD[7] cannot go through the distributed middleware for designing system
image, but realized GUI and integration directly. Figure 6 is the integration structure
of CAD and GUI. Standard vacuum furnace system design map was used and image
data was drawn out in AutoCAD. When vacuum furnace design using database
reaches optimal design, the fixed map make full use of AutoCAD Block function to
express detailed CAD image completely using seven design parameters.

Fig. 6. AutoCAD Integration Architecture

3 Experiments
High temperature vacuum furnace design framework was developed on November
2004, which is now being used for actually furnace design and manufacturing. The
following figures are the optimized result extracted by the iFuD(intelligent Furnace

270

Y.X. Jin et al.

Designer) system[4]. The first figure is the data representation by visualization toolFormula One. The data is represented by the form of graph, contour and data grid.
The fourth figure shows the final configuration of furnace represented by AutoCAD
program.

Fig. 7. Plot and Display -Graph

Fig. 8. Plot and Display -Contour

Fig. 9. Plot and Display –Data Grid

Fig. 10. Configuration for Manufacturing

4 Conclusions
From the research of high temperature design framework development, following
conclusions are made.
First, by utilizing the centralized database management system to manage and
integrate design data, and by using the distributive middle ware, each design analysis
module is integrated through the object oriented concept. Then, high temperature
design framework is developed by considering the expandability and easy
modification
Second, the analysis codes are integrated using the in/output files and mixed
language is employed when the source file is available.
Third, by considering the operation under the distributed computing environment,
the method of managing the analysis modules and the optimization process is
proposed and the integration method of database system and CAD system under local
PC environment is demonstrated by carrying out example design problem.

Development of Integrated Framework for the High Temperature Furnace Design

271

References
1. Min-Ji Kim, Ho-Girl Jung, Jae-Woo Lee, Changjin Lee and Yung-Hwan Byun, "Optimal
Design of an Energy Efficient Vacuum Furnace Using Thermal Analysis Database," Key
Engineering Materials, Vols 277-279, pp 732-740, Jan. 2005.
2. Sang-Oh Cho, Jae-Woo Lee, and Yung-Hwan Byun, "A Study on the Integration of
Analysis Modules and Optimization Process in the MDO Framework," KSAS Journal, Vol.
30, No. 7, Oct. 2002.
3. Salas, J. C. Townsend, “Framework Requirements for MDO Application Development,
AIAA-98-4740. 1998.
4. Jae-Woo Lee, “Development of High Temperature Vacuum Furnace Through Integrated
Design and Optimization Technology,” Final Report, Jun. 2004.
5. Shenyi Jin, Kwangsik Kim, Karp-Joo Jeong, Jae-Woo Lee, Jong-Hwa Kim, Hoyon Hwang,
Hae-Gok Suh, "MEDIC: A MDO-Enabling Distributed Computing Framework", Lecture
Notes in Artificial Intelligence, Vol. 3613 part 1, Springer-Verlag, pp. 1092-1101, Aug.
2005.
6. DOT Users Manual, Vanderplaats Researtch & Development Inc., 1995.
7. AutoCAD User Manual(ActiveX and VBA Developer's Guide), Autodesk Inc., 2002.

