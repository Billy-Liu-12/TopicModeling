Procedia Computer Science
Volume 80, 2016, Pages 1267–1278
ICCS 2016. The International Conference on Computational
Science

Uncertainty Quantiﬁcation of Parameters in SBVPs Using
Stochastic Basis and Multi-Scale Domain Decomposition
Victor Ginting1 , Bradley McCaskill1 , and Prosper Torsu1
University of Wyoming
Laramie, WY 82071
vginting@uwyo.edu
bmccaski@uwyo.edu
ptorsu@uwyo.edu

Abstract
Quantifying uncertainty eﬀects of coeﬃcients that exhibit heterogeneity at multiple scales is
among many outstanding challenges in subsurface ﬂow models. Typically, the coeﬃcients are
modeled as functions of random variables governed by certain statistics. To quantify their
uncertainty in the form of statistics (e.g., average ﬂuid pressure or concentration) MC methods
have been used. In a separate direction, multi-scale numerical methods have been developed
to eﬃciently capture spatial heterogeneity that otherwise would be intractable with standard
numerical techniques. Since heterogeneity of individual realizations can drastically diﬀer, a
direct use of multi-scale methods in MC simulations is problematic. Furthermore, MC methods
are known to be very expensive as a lot of samples are required to adequately characterize the
random component of the solution. In this study, we utilize a stochastic representation method
that exploits the solution structure of the random process in order to construct a problem
dependent stochastic basis. Using this stochastic basis representation a set of coupled yet
deterministic equations is constructed. To reduce the computational cost of solving the coupled
system, we develop a multi-scale domain decomposition method utilizing Robin transmission
conditions. In the proposed method, enrichment of the solution space can be performed at
multiple levels that oﬀer a balance between computational cost, and accuracy of the approximate
solution.
Keywords: Stochastic PDE, MC Simulation, Multi-scale Domain Decomposition

1

Introduction

Many physical and engineering phenomena involve parameters which cannot be precisely measured. This introduces uncertainty that propagates to quantities of interest that depend on the
parameters. To incorporate the uncertainty into realistic models, the parameters are modeled
as functions of random variables that follow certain statistical descriptions. To this end, the
original governing diﬀerential equations modeling the phenomena are reformulated as stochastic diﬀerential equations (SDEs). Standard practice is to use Monte-Carlo (MC) simulations
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.500

1267

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

[9, 7] whereby a set of samples of the parameters are created and the resulting statistics of the
quantities of interest can be gathered. For realistic statistical information, a lot of realizations
of the quantities of interest are needed. Although MC methods are direct, stable and easy to
use, they
√ can be extremely expensive. This is attributed to the slow convergence rate, namely,
O(1/ Nmc ), where Nmc is the number of samples committed to the simulation.
This drawback has given rise to some intrusive and nonintrusive methods. Nonintrusive
methods aim at providing alternative solution techniques whilst intrusive methods are designed
to accelerate the convergence rate of the MC method. For example, the Multilevel MC [4]
is a variance reduction technique geared toward achieving a high convergence rate of the MC
method. It utilizes the linearity property of the expectation operator to capture most of the
variability on coarse grids. This signiﬁcantly reduces the cost associated with the traditional
MC method as fewer samples are needed to achieve the same accuracy. Additionally, generalized
polynomial chaos [11], inspired by Wiener in the late thirties, is another novel solution method.
The idea is to characterize a random quantity with respect to another random variable with a
known distribution. In its earliest development the polynomial chaos is a spectral decomposition of Gaussian random variables in terms of orthogonal Hermite polynomials. However, the
Hermite expansion is limited to only random processes with ﬁnite second-order moments [2].
In lieu of recent eﬀorts to develop robust and eﬃcient methods, it remains a challenging task
to provide approximate solutions to SDEs. The situation is exacerbated when it is a necessity
to account for the parameters’ uncertainty in an optimization problem. A typical optimization
scheme utilizes some iterative procedure that is aimed at gathering certain variables by ﬁnding
extremal values of certain objective functions. Within this framework, the objective functions
are written in terms some statistics of the quantities of interest which depend on the uncertain
parameters. The obvious scenario is to place a MC simulation within the iterative procedure.
It is not diﬃcult to realize that the overall procedure can be intractable, especially when Nmc
is large enough to account for the uncertainty and many iterations are needed to drive the
optimization process to an acceptable convergence criterion.
This work is motivated by the aforementioned predicament. In particular, we propose and
test a systematic method to avoid MC simulations in optimization problems that require proper
incorporation of parameters’ uncertainty. While speciﬁc discussions of optimization procedures
is outside the scope of this paper, once the proposed method is available, its inclusion in the
optimization problems is straightforward. To ﬁx the idea in the proper setting, we consider
the problem of well optimization in a subsurface ﬂow simulation (e.g. [1]), in which given
uncertainty in the permeability and existing well conﬁguration, the end result is to derive the
optimal new location constrained by appropriate objective functions. The governing model is
−∇ · k(x, ω) ∇u(x, ω) = f (x)
−k(x, ω) ∇u(x, ω) · n = g(x)

x ∈ D, ω ∈ Ω
on ∂D,

(1)

where u is the subsurface pressure (the quantity of interest), D ⊂ R2 is a bounded domain and
ω is a random parameter and we assume that compatibility condition is satisﬁed; namely
f (x) dx =
D

g(x) dl.

(2)

∂D

The well location is represented by x in f (x), so within the optimization process, this is the
sought variable, which can be parametrized by certain conditions. As alluded to earlier, we will
not deal with the optimization itself, instead the focus is on the construction of a robust method
to replace the MC simulations in the optimization. We assume the availability of permeability
1268

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu
1.5

1

1

0.5

0.5

0

p

p

1.5

-0.5

0
-0.5

-1

-1

-1.5

-1.5
0.2
0.4

x1

0.6

0.8

0

0.2

0.4

0.6

x2

0.8

1

0.2
0.4

x1

0.6

0.8

0

0.2

0.4

0.6

0.8

1

x2

Figure 1: Average permeability solution vs Monte Carlo simulation (right)
Nmc

samples k(x, ωi ) i=1 that is obtained from prior subsurface characterization that honors past
measurement data.
As noted earlier, MC simulations can be extremely expensive because for every permeability
sample, (1) must be solved numerically for the corresponding pressure sample. Furthermore,
realistic geostatistical models from which permeability samples are obtained dictate spatial
heterogeneity of the realizations, culminating in high dimensional algebraic systems which must
be solved to get the pressure samples. An obvious but unreliable substitute for MC simulations
is a one time calculation of the pressure in (1) with the sample average of the permeability, k(x),
replacing k(x, ω). To illustrate potential discrepancy in the pressure statistics, in particular
average pressure p, we gather Nmc = 10000 permeability ﬁelds and set f (x) to be a combination
of Dirac Delta functions representing two wells. We assume homogeneous boundary conditions,
g(x) = 0, and solve (1) with this approach and compare it with the usual MC simulation.
Figure 1 illustrates this comparison. The left plot is the pressure proﬁle resulting from solving
(1) using k(x) as the data, while the right plot shows the average of pressure samples found
with a Monte Carlo simulation. We note that the plot on the left is not identically zero. Clearly,
this approach yields a result that completely deviates from the MC average.
The proposed method oﬀers two major features: (1) the avoidance of MC simulations
through construction of a deterministic system and (2) eﬃcient incorporation of spatial heterogeneity in the resulting system. Item (1) is accomplished in the framework of a stochastic
Galerkin approach which is described in Section 2. Item (2) is realized by employing a MsR
method which is presented in Section 3. The application of a multi-scale method in this framework is particularly appealing to tackle the curse of dimensionality that is commonly a major
drawback of the Stochastic Galerkin approach. Section 4 provides a set of numerical experiments to test the eﬃcacy of the proposed method. A conclusion is presented in Section 5.

2

A Stochastic Galerkin Formulation

The stochastic Galerkin approach is based on a variational formulation associated with (1). To
proceed, we consider the usual probability space (Ω, F, P ) where Ω denote the sample space,
F the σ-algebra of Ω and P , a probability measure on F. We shall work with second order
random ﬁelds, namely, all functions v : D × Ω → R such that

Ω

D

v 2 (x, ω) dxdP (ω) = E ||v||2L2 (D) < ∞.

In a variational framework, we assume that there exist constants kmin , kmax ∈ (0, ∞) such that
kmin ≤ k(x, ω) ≤ kmax a.e in D × Ω.

(1)
1269

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

Now, deﬁne
V = v :D×Ω→R:

v

V

< ∞,

v(x, ω) dx = 0

,

v

D

V

=

Also, deﬁne the bilinear form a : V × V → R and the linear functional
a(w, v) = E
D

(v) = E
D

k(x, ·)∇w(x, ·) · ∇v(x, ·) dx

E ||∇v||2L2 (D) .

(2)

: V → R by

and
(3)

f (x) v(x, ·) dx −

∂D

g(x)v(x, ·) dl .

Then, one can easily verify that V is a Hilbert space equipped with the inner product a(·, ·).
Assuming coercivity and boundedness of a(·, ·) and boundedness of in V , Lax-Milgram’s
theorem guarantees the existence of a unique u in V satisfying
a(u, v) = (v) for all v in V.

(4)

The stochastic Galerkin approach relies on the variational formulation (4). Speciﬁcally, it
depends on the construction of a subspace of V inside which (4) is imposed. To do this, given
a positive integer Nsb we ﬁrst set
W = v = (v0 , v1 , · · · , vNsb ) : vi ∈ H 1 (D),
Given a stochastic basis

Bi (ω)

Nsb
i=0

D

v(x) dx = 0

.

(5)

, we deﬁne V as

V = v : D×Ω → R; v = B(ω) · v, v ∈ W , with B(ω) = B0 (ω), B1 (ω), · · · , BNsb (ω) , (6)
where v · w is the usual Euclidian inner product in RNsb +1 . We note that if v is in V, then
v

2
V

Nsb Nsb

Nsb Nsb

E[Bi Bj ]

=
i=0 j=0

D

∇vi · ∇vj dx ≤

E[Bi Bj ] |vi |1 |vj |1 ,
i=0 j=0

where | · |1 is the usual semi-norm on H 1 (D). Therefore, as long as E[Bi Bj ] is ﬁnite, V is a
Nsb
subspace of V . In particular, if Bj j=0
are uncorrelated and E[Bi Bj ] = δij , then v 2V =
Nsb
j=0

|vi |21 . In light of the above variational setting, we seek uNsb in V such that
a(uNsb , v) = (v) for all v in V.

(7)

Two important facts that accompany this stochastic continuous Galerkin formulation are (1).
Galerkin Orthogonality which follows trivially; and (2). C´ea’s lemma that allows for establishing
the convergence of uNsb to u based on the quality of the approximation subspace, V.
Now, by setting uNsb = B · u for u in W and replacing v by Bj vj in V for every j =
0, 1, · · · Nsb , we see that (7) is transformed into ﬁnding u in W satisfying
A(u, v) = F (v)
1270

for all v in W,

(8)

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu
Nsb Nsb

where A(w, v) =
j=0 i=0

D

E kBi Bj ∇wj · ∇vi dx

Nsb

and

F (v) =

E Bi
i=0

D

f vi dx −

∂D

gvi dl .

Once the solution of (8) has been found, approximate value for E[u(x)] can be calculated. In
particular, by further assumming that E[Bi ] = δ0i , we have E[u(x)] ≈ E[uNsb ] = E[B · u] = u0 ,
where u0 is the ﬁrst entry in u of (8).
The approximation that we have developed in this section can be thought of as a semidiscretization of (4), i.e., discretization with respect to the probability/uncertainty space. However, it is circumstantially rare to ﬁnd the actual solution of (8), and thus (7). Consequently,
one has to devise a full-discretization for the approximate solution of (4). This is achieved by
employing a spatial discretizations on (8), which is discussed in the next section.

3
3.1

Numerical Approximations of uNsb
Continuous Galerkin Finite Element Method

We begin by assuming that the domain D is contained in R2 and is polygonal in shape. We
then construct a triangulation of D, denoted by Th , consisting of polygonal elements τ such that
D = ∪τ ∈Th τ . Furthermore, for each τ ∈ Th we require that 0 < diam(τ ) ≤ h, and τi ∩ τj = ∅
for every distinct τi , τj ∈ Th . Next we deﬁne a space Wh ⊂ W consisting of all continuous
functions that are linear on each polygonal τ ∈ Th . More speciﬁcally, we deﬁne
Wh = v h ∈ C(D)Nsb +1 : v h ∈ (P1 (τ ))Nsb +1 , ∀τ ∈ Th and

D

v h (x) dx = 0 ,

(9)

where P1 (τ ) is the space of linear functions in τ . The ﬁnite element approximation of the
solution to (8) is to ﬁnd uh ∈ Wh satisfying
A(uh , v h ) = F (v h )

3.2

for all v h in Wh .

(10)

Construction of the Multi-scale Robin (MsR) Solution Space

In practice a direct application of traditional ﬁnite elements to many physical and engineering
may be unsuitable. Particularly, porous media ﬂow models can present a distinct challenge
since many rock properties tend to be multi-scale in nature. For instance, if the magnitude
of a permeability proﬁle changes by many orders of magnitude over small distances, the ﬁnite
element approximation may require a very ﬁne triangulation Th . In such cases the resulting
system can be both ill-conditioned and computationally expensive to invert. To alleviate this
burden, we propose to use the MsR method to solve (8). The development of the MsR method
is deeply rooted in existing and well documented iterative substructuring domain decomposition
methods [6, 8]. In contrast, we avoid the traditional iteration by expressing the solution in terms
of multi-scale basis functions whose local variational formulation is discussed in this section.
Given Th described in section 3.1 we decompose the global domain D into a set of nonsd
overlapping subdomains NH = {Dm }N
m=1 , where h < H, and each Dm is the union of a subset
of Th . Consequently, each Dm maintains conformity with the underlying ﬁne scale discretization.
It is on this set of subdomains which we will construct a set of local variational formulations
governing the multi-scale basis functions. Let Nm,H ⊂ NH represent the set of subomains
1271

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

Dt
Dl

Dm

Dr

Γml = ∂Dm ∩ ∂Dl
Γmr = ∂Dm ∩ ∂Dr
Γmb = ∂Dm ∩ ∂Db
Γmt = ∂Dm ∩ ∂Dt

Db

Figure 2: A rectangular subdomain Dm and its neighbouring subdomains Nm,H
sharing a boundary with subdomain Dm . For example, the set Nm,H = {Dl , Dr , Db , Dt } is
associated with the subdomain presented in Figure 3.2.
For each Dn ∈ Nm,H we decompose the boundary Γmn = ∂Dm ∩ ∂Dn into a set of segments
i
i
j
i
mn
mn
, such that Imn
∩ Imn
= ∅ if i = j. Furthermore, we denote {zmn
}ki=0
to be the
{Imn }ki=1
set of points on the boundary which lie between these segments. It is worth noting that the
accuracy of the resulting MsR approximation will be dependent on the length of these segments
i
i
mn
}ki=1
. For later discussion we deﬁne h ∈ [h, H] to be such that 0 < |Imn
| ≤ h. In addition,
{Imn
for ease of notation we deﬁne
i
: i ∈ {0, 1, · · · kmn }, Dn ∈ Nm,H .
Sm = zmn

Designate the triangulation of Dm by Tm,h , the set consisting of the polygonal elements
τ ∈ Th such that Dm = ∪τ ∈Tm,h τ . Next we deﬁne a space Whm ⊂ H 1 (Dm )Nsb +1 consisting of
all continuous functions that are linear on each polygonal τ ∈ Tm,h . That is to say,
Whm = v h ∈ C(Dm )Nsb +1 : v h ∈ (P1 (τ ))Nsb +1 , ∀τ ∈ Tm,h

.

(11)

Next, set {ϕη }η∈Sm ⊂ Whm ⊆ Whm such that they are the usual tent functions associated
with Sm on their respective compact supports.
To characterize the MsR approximation we associate to each subdomain a set of multi-scale
basis functions {ψ ηk : k ∈ {0, . . . , Nsb }, η ∈ Sm } where each ψ ηk ∈ Whm satisﬁes
Am (ψ ηk , v) +
with

Dn ∈Nm,H

bmn (ψ ηk , v) = rkη (v)

∀v ∈ Whm ,

(12)

Nsb Nsb

Am (w, v) =
j=0 i=0

bmn (w, v) = −

Γmn

Dm

E kBi Bj ∇wj · ∇vi dx,
(13)

γmn w · v dl, and

rkη (v)

η

=
∂Dm

ϕ ek · v dl,

where ek is the k-th standard unit vector and γmn is some positive constant. In addition, we
ˆ m ∈ W m to be the shape function which satisﬁes
deﬁne ψ
h
m

m

ˆ , v) +
Am ( ψ

ˆ , v) = Fm (v)
bmn (ψ
Dn ∈Nm,H

1272

∀v ∈ Whm ,

(14)

UQ of Parameters in Stochastic BVPs

where

V. Ginting, B. McCaskill and P. Torsu

Nsb

E Bi

F (v) =

Dm

i=0

f vi dx −

∂D∩∂Dm

gvi dl .

(15)

m

ˆ , ψ η : k ∈ {0, . . . , Nsb }, η ∈ Sm } is inherited
Observe that linear independence of Whm = {ψ
k
η
from the structure of {ϕ }η∈Sm . Furthermore, since the multi-scale basis functions are found
in Whm we see that Whm ⊂ Whm . Consequently, the size of h, the resolution of the multi-scale
basis functions, has a direct eﬀect on the accuracy of the resulting approximate solution. We
will explore this relationship further in the numerical examples section.
On the global domain D, we now deﬁne the MsR solution space to be
Wh = {v = (v0 , v1 , · · · , vNsb ) : vi ∈ H 1 (D), v|Dm ∈ Whm }.

(16)

It is in this space of functions which we will seek the MsR approximation of the global solution
u which satisﬁes (8). To this end we choose to express the MsR approximation as
Nsd

Nsb

um χ Dm

u=

with

um =

m=1

3.3

k=0 η∈S

ˆ m.
αkη ψ ηk + ψ

(17)

The MsR Method

In the MsR method, local representations um are found in each space Whm which approximate the solution of (8). In order to construct an algebraic system governing the multi-scale
approximation we impose a sense of continuity of each local approximation across the subdomain boundaries. Speciﬁcally, on each boundary Γmn we choose to establish continuity of
both the local solutions and their ﬂuxes. This is accomplished by imposing the following Robin
transmission condition:
Nsb
i,j=0

Γmn

− E[kBi Bj ]∇um,j · n − γmn um,j vi dl
(18)

Nsb

=
i,j=0

Γmn

E[kBi Bj ]∇un,j · n − γmn un,j vi dl.

By requiring (18) to be satisﬁed on each interface boundary an appropriate representation of
the multiscale Robin approximation can be devised. Consequently, we observe that um will
satisfy
Am (um , v) +

bmn (um , v) =

∀v ∈ Whm ,

(19)

Dn ∈Nm,H

Dn ∈Nm,H

where

rmn (v) + Fm (v)

Nsb Nsb

rmn (v) =

Γmn j=0 i=0

E[kBi Bj ]∇un,j · n − γnm un,j vi dl.

(20)

Using the linearity of the forms (13) and (15) we ﬁnd that (19) is equivalent to
Nsb
k=0 η∈Sm

αkη rkη (v) dl =

rmn (v)

(21)

Dn ∈Nm

1273

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

Furthermore, with some algebraic manipulation rmn (v) can be rewritten as
Nsb

rmn (v) = −
k=0 ζ∈Sn

αkζ

Γmn

nϕζ ek · v dl
(22)

Nsb

−2
k=0 ζ∈Sn

αkζ

Γmn

γmn ψ ζk

· v dl − 2

n

Γmn

ˆ · v dl.
γmn ψ

As a result, we now have a condition on the coeﬃcients deﬁning um as well as un for each
Dn ∈ Nm,H . That is to say, we seek sets {αkη : k ∈ {0, · · · Nsb }, η ∈ Sm } and {αkζ : k ∈
{0, · · · Nsb }, ζ ∈ Sn } for all Dn ∈ Nm,H such that
Nsb
k=0 η∈Sm

αkη

Nsb

ζ

∂Dm

ϕ ek · v dl +
k=0 ζ∈Sn

Nsb

+2
k=0 ζ∈Sn

αkζ

Γmn

αkζ

Γmn

ψ ζk · v dl = −2

ϕζ ek · v dl
(23)
n

Γmn

ˆ · vdl
ψ

for all v ∈ Whm .
By construction, elements of {ϕη ek : k ∈ {0, . . . , Nsb }, η ∈ Sm } are elements of Whm so
it is permissible to use them as test functions. Thus an algebraic system can be constructed
governing the coeﬃcients of the local MsR approximation. Indeed by constructing similar
systems for each subdomain we observe that a algebraic system can be constructed which
governs the value of all coeﬃcients used to build the MsR approximation. Moreover, by our
choice of test functions the resulting global system will be low dimensional.

4

Numerical Examples

To illustrate the proposed method we consider an application to well placement in an oil reservoir. We consider a test problem in which an injection well is placed at a ﬁxed location. We then
quantify the eﬀect that choosing diﬀerent locations for the production well has on the pressure

1.0

9.5

0.8

9.0
8.5

x2

0.6

8.0

0.4

7.5
0.2

0.0
0.0

7.0
0.2

0.4

x1

0.6

0.8

1.0

6.5

Figure 3: Logarithmic plot of the average
permeability; the location of the injection
well (white) and discharge wells (black).
1274

h
2h
4h
8h
16h
32h

Time (min)
H = 32h H = 16h H
13.1
3.3
7.1
1.7
4.3
1.1
2.9
0.8
2.2
–
Reference: 1.3

= 8h
1.2
0.6
0.4
–
–

Table 1: Total time required to build multiscale basis functions and build global system
for the MsR approximation using various subdomain dimensions (H) and segment lengths
(h). The time required to construct the linear
algebra using CGFEM is used as reference.

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

proﬁle by calculating its sample average. The locations of the injector and four production
wells considered are presented in Figure 3.3. All calculations are performed on a 128 × 128
rectangular discretization of the domain D = [0, 1] × [0, 1] (i.e, h = 1/128), with homogeneous
Neumann boundary conditions. The permeability ﬁeld is assumed to follow a log-normal distribution and to be isotropic with correlation length of 0.3 units. For these simulations 10000
samples of these permeability ﬁelds were generated. The average of the permeability samples
is presented in Figure 3.3. Comparisons are made between the average of the pressure samples
obtained using MC simulations, umc , and the stochastic basis representation using continuous
Galerkin ﬁnite element, ufe , and the MsR method, umr .
Nsb
that can be used in Section 2.
We now discuss construction of a stochastic basis Bi (ω) i=0
The aim is to design a basis that reﬂects the uncertainty in the permeability. As mentioned
Nmc
in Section 1, this uncertainty has been relegated to the availability of k(x, ωi ) i=1 , which in
this case is generated with Nmc = 10000. Thus, it suﬃces to produce a stochastic basis that
reﬂect these permeability samples. However, a complication arises since the stochastic basis is
to be generated from the inverse of the diﬀerential operator −∇ · k(x, ω) ∇ . The approach
adopted here is sampling-based, i.e., MC simulation. It begins with generation of response
Nmc
samples w(x, ωi ) i=1 to the permeability samples above by solving (1) Nmc times. Then, we
calculate the samples covariance function
Rw (x, y) =

1
Nmc

Nmc

w(x, ωi ) − w(x)

w(y, ωi ) − w(y)

,

w(·) =

i=1

1
Nmc

Nmc

w(·, ωi ). (24)
i=1

Clearly Rw (x, y) = Rw (y, x) and it belongs to L2 (D × D). With this, we calculate the set of
Nsb
eigenpairs λj , φj j=1
that is governed by

D

Rw (x, y)φj (y) dy = λj φj (x).

(25)

We note that the above integral operator is compact and self-adjoint, and thus the resulting

h
2h
4h
8h
16h
32h

Time (min)
H = 32h H = 16h H = 8h
1.01
3.70
20.76
0.19
0.66
5.80
0.05
0.24
1.76
0.02
0.07
–
0.01
–
–
MC: 21.5
Reference: 16.8

Table 2: Average time to solve for the MsR
approximation using various subdomain dimensions (H), and segment lengths (h). As
a references we present the average time to
solve the linear algebra for the CGFEM, and
the average time to run each MC simulation.

h
2h
4h
8h
16h
32h

H = 32h
17136
9072
5040
3024
2016
Reference:

DOF
H = 16h H = 8h
42336
100800
23520
60480
14112
40320
9408
–
–
–
332820

Table 3: Dimensions of the algebraic system for the MsR approximate with various
subdomain dimensions (H), and segment
lengths (h). As a references we present the
dimension of the algebraic system for the
CGFEM approximation.
1275

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

H = 32h H = 16h
H = 8h
3.6
3.6
3.5
3.6
3.6
4.0
4.1
4.4
6.1
11.1
10.7
–
15.1
–
–
Reference: 3.6
|umc |H 1 = 2.1

h
2h
4h
8h
16h
32h

Table 4: Relative diﬀerence of the average of the pressure samples found with the proposed
method and MC simulation average using CGFEM average as reference.
eigenfunctions φj
Bj (ωi ) =

Nsb
j=1

D

are orthonormal. Next, we set B0 (ωi ) = 1 for i = 1, · · · , Nmc , and
w(x, ωi ) − w(x) φj (x) dx,

j = 1, · · · , Nsb , i = 1, · · · , Nmc .

(26)

N

sb
It is obvious that Bj = 0 for j = 0 and by orthonormality of φj j=1
, we have Bj Bl = δjl .
Construction of stochastic basis in this manner has been done in [3, 12] for solving multiquery problems. In our numerical experiments, Rw (x, y) is constructed with a forcing function
f (x) = (x1 − x21 )(x2 − x22 ) − 1/36. The resulting stochastic basis has Nsb = 35. The total
computational time required to run this MC simulation, construct the stochastic basis and
compute the coeﬃcients E[kBi Bj ] was approximately 58 minutes. In our experience this is the
most computationally demanding component of the proposed method. It is worth noting that
these calculations need only be performed once as a pre-processing step for the method. We
also generated more stochastic basis functions than may be required to recover appropriate
solutions for the simulation. This was done so that convergence rates of the method could be
studied. In practice if Nsb is small, the computational cost of this pre-processing stage will be
reduced. The values in the table correspond to the average over all four well conﬁgurations in
Figure 3.3. The last stage of the pre-processing step required by the proposed method is the
calculation of the multi-scale basis functions. It is worth noting that the calculation of these
multi-scale basis functions is an embarrassingly parallel process. In particular, each set of local
problems governing the multi-scale basis functions on a given subdomain is fully decoupled from
those on other subdomains. In Table 1 we present a comparison of the total pre-processing time
that was required for us to generate the multi-scale basis functions using various subdomain
conﬁgurations H, and segment lengths h.
The eﬀect of the forcing function to the system is fully contained in the multi-scale basis
ˆ m }Nsd . Thus, the construction of the global system governing the MsR approxifunctions {ψ
m=1
mation is a onetime computation. Indeed, when a new forcing function is considered one only

u¯fe

u¯mr

1.5

1

0.5

0.5

0.5

-0.5

u

1

0

0

-0.5

-1

-1

-1.5
0.2

0.4

x1

0.6

0.8

0

0.2

0.4

0.6

x2

0.8

1

0
-0.5

-1

-1.5

u¯mc

1.5

1

u

u

1.5

-1.5

0.2

0.4

x1

0.6

0.8

0

0.2

0.4

0.6

x2

0.8

1

0.2

0.4

x1

0.6

0.8

0

0.2

0.4

0.6

x2

0.8

1

Figure 4: Average solution found with Nsb = 20 using CGFEM (left), the MsR method (H =
h = 16h, middle), and MC simulation (right).
1276

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

ˆ m }Nsd and update the right hand side of
needs to compute a new set of shape functions {ψ
m=1
(23) appropriately. In Table 2 we present the average time required to update these multi-scale
basis functions and solve for the MsR approximation. Additionally, in Table 3 we present the
number of degrees of freedom associated with the MsR approximation for various conﬁgurations
of the method. Since the linear system governing the MsR approximation are typically low dimensional we choose to use a direct multi-frontal solver to invert the system (see for example
[5]). However, in order to invert the higher dimensional linear system governing the CGFEM
approximation we use a generalized minimum residual solver (see for example [10]).
During our numerical experiments we found that on average it takes approximately 22
minutes to complete one MC simulation with 10000 samples. If several well conﬁgurations need
to be tested (such as in well optimization problems for which a set of MC simulations must be
performed) then the overall computation time will be prohibitively long. In contrast for the
initial cost involved with the pre-processing step of the proposed method, simulations of each
well conﬁguration can be performed in a fraction of the time.
A comparison of the average of the pressure samples found using all three methods discussed
in this paper is presented in Figure 4. In all three cases we see considerable agreement of
the proﬁle structure. To demonstrate the performance of the MsR method we take the MC
simulation average as a bench mark with which to test against. Speciﬁcally, we compute the
magnitude of the diﬀerence between umc and umr in the H 1 semi-norm and divide the result
by the magnitude of umc in the H 1 semi-norm. In Table 4 we present the eﬀect that various
discretization choices can have on the resulting MsR approximation.
We observe that if h is resolved suﬃciently close to the ﬁne-scale the resulting diﬀerence
with the reference average is small. In these cases the error of the resulting average is dominated
by the stochastic basis representation of the probability space. However, as h is increased the
error of the proposed method becomes dominated by what we call up-scaling error. Essentially,
as fewer multi-scale basis functions are used to characterize the solution the eﬀect of ﬁne-scale
features in the elliptic coeﬃcients become poorly represented. However, at a practical level we
have seen in Tables 1 and 2 that the computational cost of this method can be signiﬁcantly reduced as h increases. Ultimately, there exists a balance between the accuracy and the eﬃciency
of the proposed method.
In what follows, we numerically examine the interplay between the two main sources of
error of the proposed method: the number of stochastic basis functions used to approximate
the uncertainty space, and the degree of upscaling error introduced to the MsR approximation.
In Figure 5 we summarize the results for one well conﬁguration. We observed that irrespective of
the amount of upscaling, the total error asymptotically decays as Nsb increases. Also conﬁrmed
by the ﬁgure is that the MsR approximation converges at a similar rate as the CGFEM method
provided that the degree of up-scaling is suﬃciently small. However, we do observe that as more
upscaling error is introduced to the MsR approximation the convergence rate of the method
deteriorates. Essentially, as the uncertainty space becomes better represented by the stochastic
basis, upscaling error can become the dominate source of discrepancy. We also ﬁnd that the
method is stable and the H1 relative diﬀerences decay monotonically.

5

Conclusion

An alternative method to the traditional MC simulations for quantifying uncertainty has been
studied. The method explores possible ways of optimizing computational cost and available
resources to produce accurate statistics of a stochastic quantity. In optimization problems, a
one-time stochastic basis is calculated through excitation of the diﬀerential operator. For every
stage of the optimization process, the stochastic basis and the multi-scale basis are reused. This
signiﬁcantly reduces computational cost and accelerates the rate of generating realizations to
1277

UQ of Parameters in Stochastic BVPs

V. Ginting, B. McCaskill and P. Torsu

Relative Difference (%)

50

u
¯ fe
˜ = 4h
u
¯ mr , h
˜ = 32h
u
¯ mr , h

40

30

20

10

0

0

5

10

15

20

25

30

35

Nsb

Figure 5: Relative H 1 -diﬀerence of CGFEM and MsR approximations.
describe statistical properties of random processes. The method also provides the ﬂexibility
to further reduce computational cost by introducing some level of upscaling while maintaining
accurate results. Our numerical examples have demonstrated that irrespective of other parameters, the MsR approximation gets more accurate as the number of stochastic basis increases.
Moreover, accuracy of the solution could be mildly sacriﬁced for a substantial computational
gain by adjusting the level of upscaling and number of subdomains.

References
[1] Vincent Artus, Louis J Durlofsky, J´erˆ
ome Onwunalu, and Khalid Aziz. Optimization of nonconventional wells under uncertainty using statistical proxies. Computational Geosciences, 10(4):389–404,
2006.
[2] Robert H Cameron and William T Martin. The orthogonal development of non-linear functionals
in series of fourier-hermite functionals. Annals of Mathematics, pages 385–392, 1947.
[3] Mulin Cheng, Thomas Y Hou, Mike Yan, and Zhiwen Zhang. A data-driven stochastic method
for elliptic pdes with random coeﬃcients. SIAM/ASA Journal on Uncertainty Quantiﬁcation,
1(1):452–493, 2013.
[4] KA Cliﬀe, MB Giles, Robert Scheichl, and Aretha L Teckentrup. Multilevel monte carlo methods
and applications to elliptic pdes with random coeﬃcients. Computing and Visualization in Science,
14(1):3–15, 2011.
[5] Timothy A. Davis. Direct methods for sparse linear systems, volume 2 of Fundamentals of Algorithms. Society for Industrial and Applied Mathematics (SIAM), Philadelphia, PA, 2006.
[6] J. Douglas, Jr., P. J. Paes-Leme, J. E. Roberts, and Jun Ping Wang. A parallel iterative procedure
applicable to the approximate solution of second order partial diﬀerential equations by mixed ﬁnite
element methods. Numer. Math., 65(1):95–108, 1993.
[7] Guillermo Marshall. Monte carlo methods for the solution of nonlinear partial diﬀerential equations. Computer physics communications, 56(1):51–61, 1989.
[8] Bradley McCaskill. A multiscale domain decomposition method and its application in conservation
problems. ProQuest UMI Dissertations Publishing, 2014.
[9] Nicholas Metropolis and Stanislaw Ulam. The monte carlo method. Journal of the American
statistical association, 44(247):335–341, 1949.
[10] Yousef Saad. Iterative methods for sparse linear systems. Society for Industrial and Applied
Mathematics, Philadelphia, PA, second edition, 2003.
[11] Dongbin Xiu and George Em Karniadakis. The wiener–askey polynomial chaos for stochastic
diﬀerential equations. SIAM journal on scientiﬁc computing, 24(2):619–644, 2002.
[12] Zhiwen Zhang, Maolin Ci, and Thomas Y Hou. A multiscale data-driven stochastic method for
elliptic pdes with random coeﬃcients. Multiscale Modeling & Simulation, 13(1):173–204, 2015.

1278

