Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1014–1020

International Conference on Computational Science, ICCS 2011

Two Complementary Approaches for Integrating a Lattice
Boltzmann Flow Solver into Simulation Frameworks
J¨org Bernsdorfa , Dinan Wangb , Guntram Bertic
a German

Research School for Simulation Sciences, Schinkelstr. 2a, 52062 Aachen, Germany (j.bernsdorf@grs-sim.de)
Institute at the University of Bonn, Auf dem H¨ugel 20, 53121 Bonn, Germany (dwang@uni-bonn.de )
c Dr. Guntram Berti CMM - Consulting mathematical methods, Aurelianastr 46, 53225 Bonn, Germany (kontakt@berti-cmm.de)
b Meteorological

Abstract
Computer simulation plays an increasingly important role in the area of medical physics. The coupled simulation
of blood ﬂow, species transport and biological processes in patient speciﬁc vessel geometries is a rapidly growing
ﬁeld with the ambitious goal to help clinicians with risk prediction and treatment planning, for example in the case of
cardio-vascular diseases.
In this paper we describe two complementary approaches of embedding a Lattice Boltzmann ﬂow solver into
environments requiring CFD-simulations in the framework of medical physics: a tool chain for performing blood
ﬂow simulation within cerebral aneurysms, and a framework for a coupled multi-physics multi-scale simulation of
ﬂow-induced biological processes.
While for the blood ﬂow simulation the challenge is to set-up an automated tool chain for performing a large
number of robust CFD-simulations with a minimum of human interaction, the coupling-framework requires the communication of the LB solver within a complex software environment. We compare both approaches and identify
possible synergies, leading towards powerful simulation systems.
Keywords: Lattice Boltzmann, coupled simulation, multi-scale, cerebral aneurysm

1. Introduction
The coupled simulation of blood ﬂow and thrombogenesis, the blood ﬂow simulation to support a rupture risk
assessment of cerebral aneurysms or the simulation of in-stent re-stenosis are just a few recent examples of computational ﬂuid dynamics (CFD) applications in the area of medical physics involving the Lattice Boltzmann technique.
Performing CFD simulations nowadays still requires a signiﬁcant contribution of a skilled expert’s hands-on work
to set up, run and evaluate a CFD simulation. As soon as the CFD software is integrated into a tool chain or a complex
coupled simulation environment, the amount of human interaction to specify the ﬂow solver’s boundary conditions
and to process the output has to be minimised.
The role of models such as these were investigated within two European research projects; @neurIST [1] and
COAST [2], which give the background for the ideas drafted in this publication.
Lattice Boltzmann CFD integration into an automated tool chain: the goal of the @neurIST project was to
develop a system assisting medical doctors in the diagnosis and treatment planning of cerebral aneurysm, using a
rupture risk assessment based on all available data.
1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.107

J¨org Bernsdorf et al. / Procedia Computer Science 4 (2011) 1014–1020

1015

One important source of data are mechanical forces originating from blood ﬂow, which can typically only be obtained
by simulation.
Thus, one task in @neurIST was to integrate a Lattice Boltzmann ﬂow solver into an automated tool chain, which
allows a non-CFD-expert (e.g. a medical doctor) to perform and evaluate such a simulation in the context of risk
assessment or treatment planning. The challenge for the developer of such a tool chain lies in the automatisation of
those processes that are typically performed manually by a CFD engineer.
Lattice Boltzmann CFD integration into a complex automata environment: the COAST project is setting up
a multi-scale multi-physics simulation environment (a complex automata) of coupled single-scale cellular automata
(CA) or agent based models (ABM) [3, 4]. The CAs and ABMs are sub-systems, operating on their individual spaceand time scales, coupled by exchanging information via deﬁned interfaces. The application case for COAST is the
medical problem of in-stent re-stenosis, the re-modelling of vessel walls after a stent insertion (this speciﬁc application
is not further discussed in this paper, for details see [5]).
Evidently, there are many more problems in medical physics and other ﬁelds that require multi-scale modelling
and that can beneﬁt from the COAST approach, one of them is brieﬂy outlined in the last section.
In the following, we want to ﬁrst brieﬂy describe the Lattice Boltzmann method considered as a ﬂow solver and
address issues for setting up an automated tool chain as required for blood ﬂow simulation in medical geometries,
and brieﬂy discuss a strategy to manage simulation data for future reuse in Section 3. Section 4 presents basic
considerations for integrating a Lattice Boltzmann ﬂow solver into a coupled multi-scale multi-physics environment.
The ﬁnal section outlines a concept for the simulation of blood clotting within cerebral aneurysms by a combination
of both approaches.
2. Numerical Method
2.1. Computational Problem Deﬁnition and Mesh Generation
The ﬁrst step in a tool chain (see Fig. 1) for CFD is to convert some input data describing the problem (in this
case, medical images) into suitable input for the simulation program. In the case of @neurIST, medical images are
ﬁltered, segmented, converted into a topologically correct, resolution-independent geometric description, which is
ﬁnally transformed e.g. into a voxel mesh suitable for the Lattice Boltzmann method. While all these tools have been
designed to reduce manual intervention, it is not possible to completely automate this part of the tool chain, as images
do not in general contain enough information to disambiguate topological errors. However, these operations are in the
realm of expertise of clinical specialists.
In a further step, realistic boundary conditions for the computational problem have to be generated. One of
several options that has been adopted by @neurIST is the use of a one-dimensional systemic model [6] that is mapped
(manually) to the full 3D model via use of a skeleton graph of the geometry. The latter is also used to perform adequate
trimming at the inlets and outlets. Except the mapping step, the generation of boundary conditions corresponding to
a cardiac cycle can be fully automated. It is interesting to note at this point that the coupling of a lower-dimensional
systemic model and a high-resolution 3D model could be considered a special case of coupling in the COAST sense.

Figure 1: Tool chain for automated blood ﬂow simulation in cerebral aneurysms.

1016

J¨org Bernsdorf et al. / Procedia Computer Science 4 (2011) 1014–1020

2.2. LB Flow Solver
For the ﬂow simulation, we adapted a performance optimised sparse Lattice Boltzmann ﬂow solver [7, 8] with
BGK or TRT collision operator [9, 10], which was extended with a Carreau-Yasuda model [11] to capture the nonNewtonian eﬀects of blood ﬂow [12].
All parameters aﬀecting the stability of the simulation are chosen in a safe way to avoid run-time errors of the
code. The speciﬁcation of the inlet and outlet boundaries is performed in a pre-processing step as described above. In
case of a transient ﬂow simulation (cardiac cycle), a discrete time series of (optionally measured patient speciﬁc) inlet
velocities is provided. The LB code runs 5-10 cycles until a stable oscillating proﬁle can be safely assumed. Another
option is the aforementioned coupling to a one-dimensional systemic model.
2.3. Post Processing
The requirements on post processing evidently depend on the concrete application. For a pure risk assessment,
it suﬃces to extract a number of ﬂow characteristics as input to a risk estimation module. Using the simulation
for evaluating several treatment options will need more detailed ﬂow information. Using the tool chain to evaluate
and comparing a large number of cases can become a challenge without supporting infrastructure. For instance, in
@neurIST, one task was to process a large number of cases in the order of several hundreds of an associated study in
order to derive statistically valid risk indicators. To ﬁt these needs, a data management and post processing system
must be architecturally ﬂexible and not just pipe bulk data into a CFD post-processor.
In the case of online post-processing (often called co-processing), the similarities of a coupled multi-model system
are again apparent, if the post-processing tools are considered as data sink models.
2.4. Grid Access to Remote Services
CFD simulations are complex and require large amounts of computing power and storage space. As it is not the
core business of hospitals to operate large-scale computing machinery, the resources required for ﬂow simulation are
likely to be outsourced to specialised service providers. The @neurIST implementation is therefore based on Grid
technologies which allow easy access to remote resources while ensuring privacy of transferred data.
3. Data management
If more than just a handful of cases need to be processed, additional eﬀort must be spent to manage the input
and output data in a way that records links between inputs and outputs (data provenance), and makes future reuse
and variations computational analysis possible, such as using diﬀerent modelling, change of applications or numerical
parameters. In @neurIST, this problem was paramount because of the large number of cases to be processed (several
hundred aneurysms), the fact that the chain should be ﬂexible enough to permit diﬀerent tools for each task (e.g. our
Lattice Boltzmann solver and the commercial CFD solver ANSYS CFX), and the observation that some modelling
choices were arbitrary, and hence future revisions should be supported.
Thus, an abstract data model was developed covering the key data entities used by the project (such as patient,
images, aneurysm, processed geometry, computational analysis, computational runs, and physical descriptors, such
as ﬂow characterisations). A key concept is the of an abstract problem description (APD) linked to computational
problems, which is a precise yet application-independent description of a biomechanical task such as a blood ﬂow
through an aneurysm. By implementing automatic preprocessors translating APDs into application-speciﬁc input, we
were able to support applications so diﬀerent as ANSYS CFX and our Lattice Boltzmann solver, without any need for
tool-speciﬁc manual data preparation (all manual work is conﬁned to geometry preparation, which is independent on
the simulation package) [13].
A particularly attractive feature of the @neurIST data management approach is that transformations of models can
often be formulated algorithmically and hence implemented to be performed automatically on the APDs of a large
number of cases. Thus, extensions like those described in Section 5 could be tested and run on those cases without
requiring prohibitive human eﬀort.

J¨org Bernsdorf et al. / Procedia Computer Science 4 (2011) 1014–1020

1017

4. Integration into a Complex Automata Environment
Complex physiological processes occur on diﬀerent time- and length scales and require a variety of physical and
biological models for simulation. Often it is not possible or reasonable to integrate all these processes into one single
code, or even into disjoint but closely coupled pieces of software. A good example is the simulation of milk- or blood
clotting, which requires the interaction of ﬂow simulation, advection-diﬀusion, biological processes (e.g. platelet
activation) and clotting of milk or blood (see e.g. [14, 15]).
The attempt to simulate this complex process within one code requires an enormous computational eﬀort, since
the advection-diﬀusion and clotting processes occur on a signiﬁcantly longer time scale than changes in the transient
ﬂow ﬁeld.
One approach to deal with this kind of problems is performed in the COAST framework by splitting up the whole
system into coupled single-scale cellular automata or agent based models.
4.1. Scale map
Usually, the process to be simulated has to be analysed by the help of a scale map (see Fig. 2), in which the
location and interaction of each of the sub-processes in terms of length- and time scale has to be identiﬁed.

Figure 2: Schematic scale map of three coupled processes.

If these sub-processes are suﬃciently disjoint in space and time, one speaks of ‘scale separation’. This scale
separation is one pre-condition for the implementation of a multi-scale environment.
After each sub-process is identiﬁed on the scale map, the interaction has to be speciﬁed. Since individual processes
might operate with individual clocks on diﬀerent co-ordinate systems (representing their relevant fraction of the total
system), the various options for exchanging information (synchronous vs. asynchronous, event- vs. time driven)
between individual CAs or ABMs require speciﬁc consideration when deﬁning the communication process.
Two examples for the case of coral growth and snow transport simulation can be found in [3], a detailed description
for in-stent re-stenosis is presented in [5].
4.2. Implementation Issues
The coupling of the individual single-scale models is technically achieved by embedding the various pieces of
software into a communication environment. A crucial part of this environment are the conduits, which perform the
data exchange and (if required) transformation of quantities and co-ordinate systems between the CAs and ABMs.
Also starting and terminating of the individual processes is determined by the coupling environment.

1018

J¨org Bernsdorf et al. / Procedia Computer Science 4 (2011) 1014–1020

For the Lattice Boltzmann ﬂow solver a coupling is achieved by providing the initial- and updated boundary
conditions by the environment. Detailed ﬂow quantities such as the pressure- and velocity ﬁelds (if required only in
certain sub-domains, e.g. near solid boundaries, where the interaction with other models occur) or averaged/derived
quantities as the oscillatory shear index will be provided as an output.
4.3. Distributed Simulation
In the framework of the COAST project, the LB ﬂow-solver required a huge fraction of the computational power.
This resulted in a long waiting time of the biological code (running on the same 8 CPU server) for new ﬂow data
after cell growth. A solution was to execute the performance critical part (the LB ﬂow solver) on a dedicated external
HPC-server, a 4-CPU NEC SX-8 vector-computer. For this purpose, the communication library and the LB front-end
were ported onto a separate workstation. The front-end workstation was communicating with the SX-8 over a shared
ﬁle-system and with the biological software running on the 8 CPU server via internet (see Fig. 3).

Figure 3: Distributed coupling scheme: LB ﬂow-solver on a 4 CPU NEC SX-8 vector-computer, biological model on a 8 CPU workstation.

This distributed simulation helped to reduce the typical overall compute time from days to below one hour.
5. Towards an Application in Cerebral Aneurysm
A combination of the two approaches outlined in the previous sections will allow one to perform a semi-automatic
simulation of complex coupled problems in the area of medical physics. An interesting challenge is the simulation of
blood clotting in cerebral aneurysms within an automated multi-scale environment as a part of the treatment planning.
The occlusion of the cerebral aneurysm is the desired outcome of a successful treatment by stenting (insertion of a
wire-frame to divert the ﬂow) or coiling (insertion of a wire to induce clotting).
5.1. Scale Map for a Simpliﬁed Blood Clotting Process
The processes to be considered in a ﬁrst simpliﬁed approach are ﬂow simulation, advection-diﬀusion (e.g., of
activated platelets and/or a tracer indicating the time past activation, see [15]), blood biology (platelet activation) and
clotting. A tentative scale map is sketched in Fig. 4.
In this ﬁrst approach, the Lattice Boltzmann ﬂow solver (box “ﬂow”, residing on a short time- and medium
length scale) as a sub-system for the CFD simulation provides the ﬂow ﬁeld to the advection-diﬀusion code, which
is operating at the same spatial but a much longer temporal scale. Another output from the ﬂow solver points to the
blood biology sub-system (box “blood biology”, here assumed to act on a small length and short time scale), since
biological processes might be triggered by certain ﬂow properties (e.g. platelet activation induced by high shear rates).

J¨org Bernsdorf et al. / Procedia Computer Science 4 (2011) 1014–1020

1019

Figure 4: Tentative scale map for a simpliﬁed blood clotting process.

From both sub-systems no direct feed-back points to the ﬂow-solver, since advection-diﬀusion can safely be treated
with a passive scalar approach, and the biological processes eventually leading to solidiﬁcation of the blood and such
to a modiﬁcation of the ﬂow boundary conditions are dealt with in another sub-system (the box “clotting”, operating
on a medium length and long time scale).
The clotting as well as the biology sub-system might exchange information in both ways with the advectiondiﬀusion sub-system, since knowledge about the concentration of certain species (e.g. thrombin or activated platelets)
produced or consumed by the blood biology or clotting process, is required.
The sub-system simulating the coagulation process provides the only input-link to the ﬂow solver, updating the
solid boundary conditions when parts of the ﬂow ﬁeld solidiﬁed through the clotting process.
A more complex approach might well identify further coupled processes behind the two sub-systems “blood
biology” and “clotting”. Also the “ﬂow” system can consist of a Lattice Boltzmann simulation with a non-Newtonian
model for the bulk ﬂow, and a closely coupled suspension code for a detailed modelling of red blood cells near the
wall boundaries. Also a back-link from the ﬂow solver to the clotting sub-system might be introduced, if certain ﬂow
properties (e.g. a high shear rate) will locally inﬂuence or even prevent the solidiﬁcation process.
5.2. The Combined Approach
The combined tool chain providing semi-automatic ﬂow simulation for clinical application (including pre- and
post-processing) with a complex automata for blood clotting simulation is drafted in Fig. 4.

Figure 5: Integration of a complex automata into an automated simulation tool chain.

The pre-processing step producing a mesh for the numerical simulation from medical image data is similar to that
of the automated tool-chain outlined in Chap.2. These data provide the initial geometric boundary conditions for the

1020

J¨org Bernsdorf et al. / Procedia Computer Science 4 (2011) 1014–1020

coupled multi-scale simulation of blood clotting, as described above. The geometry representation is then iteratively
updated by the interaction of the various agents of the multi-scale system simulating the clotting process (indicated
by the box within Fig.5). After a suﬃcient number of cycles, the ﬁnal steps of post-processing and data analysis are
again equivalent to those of the linear tool-chain.
6. Acknowledgments
This work was generated in the framework of the @neurIST Integrated Project, which was co-ﬁnanced by the
European Commission through the contract no. IST-027703 and of the IST Project COAST, which was co-ﬁnanced
by the European Commission through the contract no. 033664.
We thank our many partners in both projects whose work created the context for this work, namely the tool-chain
in @neurIST and the coupling environment and concepts in Coast.
Aspects of the approach described within Chap.5 of this publication will be realised within the ICT Project
THROMBUS, co-ﬁnanced by the European Commission through the contract no. 269966.
7. Conclusion
In this paper we described the embedding of a Lattice Boltzmann ﬂow solver into environments for semi-automatic
coupled CFD-simulations: a tool chain for performing blood ﬂow simulation within cerebral aneurysms, and a framework for coupled multi-physics multi-scale simulations.
Further we suggested a combined approach of both models to simulate the blood clotting process in cerebral
aneurysms by the integration of a complex automata into an automated simulation tool chain as part of the treatment
planning.
Although an implementation of this has not yet been achieved and might be called a rather visionary approach, we
believe once the tool chain and the complex automata are implemented, their combination is the next logical step to
go.
8. References
[1] http://www.aneurist.org
[2] http://www.complex-automata.org
[3] A.G. Hoekstra, B. Chopard, P. Lawford, R. Hose, M. Krafczyk, J. Bernsdorf: in Proceedings European Complex Systems Conference 2006,
(CD). European Complex Systems Society, Oxford, UK (2006)
[4] A.G. Hoekstra, E. Lorenz, J.-L. Falcone and B. Chopard, International Journal for Multiscale Computational Engineering 5: 491-502 (2007)
[5] D.J.W. Evans, P.V. Lawford, J. Gunn, D.R. Hose, R.H. Smallwood, B.Chopard, M. Krafczyk, J. Bernsdorf and A. Hoekstra, Philos Transact
A Math Phys Eng Sci. 366(1879): 3343-3360 (2008)
[6] P. Reymond, F. Merenda, F. Perren, D. R¨ufenacht and N. Stergiopulos, Am J Physiol Heart Circ Physiol. 2009 Jul; 297(1): 208-222 (Epub
2009)
[7] M. Schultz, M. Krafczyk, J. T¨olke and E. Rank in: M. Breuer, F. Durst.C. Zenger (Eds.), High Performance Scientiﬁc and Engineering
Computing, Lecture Notes in Computational Science and Engineering 21: 114-122 (2002)
[8] J. Bernsdorf, S.E. Harrison, S.M. Smith, P.V. Lawford and D.R. Hose, in: M.Resch et al. (Eds.), High Performance Computing on Vector
Systems 2006: 121-132 (2006)
[9] Y.H. Qian, D. d‘Humi`eres, P. Lallemand, Lattice, Europhysics Letters 17: 479-484 (1992)
[10] I. Ginzburg, F. Verhaeghe, D. d‘Humi`eres, Commun. Comput. Phys. 3(2): 427-478 (2008)
[11] S.S. Shibeshi and W.E. Collins, Appl. Rheol., 15(6): 398-405 (2005)
[12] D. Wang, J. Bernsdorf, Computers & Mathematics with Applications 58: 5: 1030-1034 (2009)
[13] M.C. Villa-Uriol, G. Berti, D.R. Hose, A. Marzo, A. Chiarini, J. Penrose, J. Pozo, J.-G. Schmidt, P. Singh, R. Lycett, I. Larrabide and A.F.
Frangi, Interface Focus, accepted for publication (2011)
[14] S.E. Harrison, S.M. Smith, J. Bernsdorf, D.R. Hose, and P.V. Lawford., Journal of Biomechanics (33): 3023-3028 (2007)
[15] S.E. Harrison, J. Bernsdorf, D.R. Hose, and P.V. Lawford: A lattice Boltzmann framework for simulation of thrombogenesis, Progress of
CFD 8(1-4): 121-128 (2008)

