Procedia Computer Science
Volume 80, 2016, Pages 1103–1113
ICCS 2016. The International Conference on Computational
Science

Supersonic Airfoil Shape Optimization by VariableFidelity Models and Manifold Mapping
Jacob Siegler1, Jie Ren1, Leifur Leifsson1,2, Slawomir Koziel2, and Adrian
Bekasiewicz2
1

Iowa State University, Ames, Iowa, USA*
Reykjavik University, Reykjavik, Iceland†
jsiegler@iastate.edu, jier@iastate.edu, leifur@iastate.edu, koziel@ru.is, bekasiewicz@ru.is
2

Abstract
Supersonic vehicles are an important type of potential transports. Analysis of these vehicles requires the
use of accurate models, which are also computationally expensive, to capture the highly nonlinear
physics. This paper presents results of numerical investigations of using physics-based surrogate models
to design supersonic airfoil shapes. Variable-fidelity models are generated using inviscid computational
fluid dynamics simulations and analytical models. By using response correction techniques, in
particular, the manifold mapping technique, fast surrogate models are constructed. The effectiveness of
the approach is investigated using lift-constrained drag minimization problems of supersonic airfoil
shapes. Compared with direct optimization, the results show that an order of magnitude speed up can be
obtained. Furthermore, we investigate the effectiveness of the variable-fidelity technique in terms of
speed and design quality using several combinations of medium-fidelity and low-fidelity models.
Keywords: Supersonic airfoils, computational fluid dynamics, gradient-based search, adjoint sensitivity, surrogate-based
optimization, variable-fidelity modeling, manifold mapping.

1 Introduction
Supersonic vehicles are currently being investigated as future civil transports. The analysis of these
vehicles requires the use of accurate computational fluid dynamics (CFD) models to capture the highly
nonlinear flow. Moreover, noise regulations for flight over land require aeroacoustic analysis of the
entire vehicle shape. The models involved in the computational analyses are very expensive.
Surrogate models are widely used to create fast approximate models (Koziel et al., 2011). Surrogate
modeling approaches can be roughly divided into two categories: (i) data-driven (or approximationbased) and (ii) physics-based. Data-driven surrogate models are constructed through approximations of
the high-fidelity model data obtained in the process of sampling the design space using appropriate
design of experiments (DOE) methodologies. Data-driven surrogates can be considered as generic
*
†

Simulation-Driven Optimization Laboratory, Dept. of Aerospace Engineering, 537 Bissel Road, Ames, IA 50011, USA.
Engineering Optimization & Modeling Center, School of Science and Eng., Menntavegur 1, 101 Reykjavik, Iceland.

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.416

1103

Supersonic Airfoil Shape Optimization

Siegler et al.

models that are independent of the physics or any other knowledge about the problem at hand. The other
class of models is based on exploitation of some knowledge about the system under consideration,
usually embedded in physics-based low-fidelity models (Koziel et al., 2011; Koziel and Leifsson, 2012).
In this work, we utilize physics-based surrogate-based optimization (SBO) techniques (Koziel et al.,
2011) for the design of supersonic aerodynamic surfaces at low computational cost. In particular, we
use variable-fidelity models and a response correction technique, recently applied to aerodynamic shape
optimization, namely, manifold mapping (MM) (Ren et al., 2016), to construct fast surrogate models
which are subsequently used within a SBO framework with trust regions. The approach is illustrated
through lift-constrained drag minimization of supersonic airfoil shapes with 6 design variables. We
investigate the effectiveness of the variable-fidelity techniques in terms of speed and design quality
using combinations of medium-fidelity and low-fidelity models.

2 Computational Modeling of Supersonic Flow Past Airfoils
This section describes two modeling approaches for supersonic flow past airfoil shapes. The approaches
are the shock expansion theory (low-fidelity), and computational fluid dynamics (CFD) analysis using
governing equations for inviscid flow (medium-fidelity). CFD analysis using governing equations for
viscous flow (high-fidelity) will be the subject of future work.

2.1 Shock Expansion Theory
The shock expansion model utilizes shock wave properties to solve pressure distribution around a
supersonic airfoil by applying the Prandtl-Meyer functions. The procedure of obtaining coordinates to
generate the biconvex airfoil is based on the geometry of a circle, illustrated below in Fig. 1. Assuming
c = 1, where c represents chord length, the radius of the circle necessary to obtain a segment of desired
z/c is found to be

r

§S
§
( z / 2)
0.52  ( z / 2) 2 sin ¨  arcsin ¨
¨ 0.52  ( z / 2) 2
¨2
©
©
§
§S
§
···
( z / 2)
¸¸¸
sin ¨ S  2 ¨  arcsin ¨
2
2
¨
¸¸
¨2
¨
© 0.5  ( z / 2) ¹ ¹ ¹¸
©
©

··
¸¸
¸¸ ,
¹¹

Figure 1: Geometric parameters for biconvex airfoil

1104

(1)

Supersonic Airfoil Shape Optimization

Siegler et al.

where z represents the maximum thickness percentage of the airfoil. Once this radius is known, it can
be used to find points around the airfoil, in particular the points above c, and assuming symmetry, the
dotted curve below c as well.
In order to perform a successful shock expansion analysis, the airfoil must be broken down into a
finite number of small segments, with length ݀‫ݏ‬௜ǡ௞ on each segment, and for the case of the biconvex
airfoil, equal turning angle ݀ߠ௜ǡ௞ , where i denotes the segment number and k the top or bottom of the
airfoil. Fig. 2 gives relevant shape parameters of supersonic flow past a biconvex airfoil. The supersonic
airfoil will encounter a shock wave, which forms at an angle ߚ௞ , measured as a positive angle from angle
of attack ߙ.
To start, the shock wave angle needs to be known. This allows us to solve for the Mach number
downstream of the shock wave. This is obtained from
cot T1,k

tan E k

J  1 M f2

2  M f2 sin 2 E k  1  1

,

(2)

where γ is the heat capacity ratio, assumed to be 1.4. Rather than solving this equation for β k, we utilize
the Newton-Raphson technique,
un 1

un 

f  un  ,
f '(un )

(3)

to obtain a solution for βk. The error criteria is set very low to ensure that an accurate shock wave angle
is obtained, otherwise the rest of the calculations will be incorrect. Once β k has been established, the
downstream Mach ‫ܯ‬ଵǡ௞ can be found with

M1,k

J  1 M f2 ,k sin 2 Ek  2
,
 2J M f2 ,k sin 2 Ek  J  1  sin 2  Ek  T1,k 

(4)

where ‫ܯ‬ஶ represents the free-stream Mach number. Also, once the shock angle is known, the pressure
relationship across the shock can be found as

Upper Shock Wave

Lower Shock Wave

Figure 2: A schematic of supersonic flow past a biconvex airfoil indicating relevant parameters.

1105

Supersonic Airfoil Shape Optimization

p1,k

Siegler et al.

2J M1,2k sin 2 E k   J  1 .

(5)

J 1

pf

This can be stored as the first pressure relation back to the free-stream, and is needed to calculate the
rest of the pressure distribution. Also, at this point, isentropic relations across the shock can be
calculated. This includes the stagnation pressure relationship ‫݌‬Ȁ‫݌‬௧ and the Prandtl-Meyer angle ߥ. To
continue the process along the airfoil, a new Prandtl-Meyer angle needs to be calculated simply by
adding the change in deflection angle at the next consecutive panel with

Q i ,k Q (i 1),k  dTi ,k .

(6)

At this point, the Newton-Raphson method is called once more to solve for Mach number from
§ J 1
·
J 1
M i ,k 2  1 ¸¸  arctan
arctan ¨¨

J 1
© J 1
¹

Q i ,k



M i ,k 2  1

.

(7)

This process is then repeated along the entire airfoil, storing each pressure relation along the way.
Once these pressure relations have been calculated, they can be used to determine pressure coefficient
at each panel from
pi ,k
pf

p(i 1),k pi ,k pt( i1),k ,
pf pti ,k p(i 1),k

(8)

and finally, to compute pressure coefficient, we use
C pi ,k

·
2 § pi ,k
 1¸ .
¨
¹

(9)

J M f2 © pf

Knowing the pressure distribution allows extra post processing of the data, such as obtaining the lift
coefficient ܿ௟ and drag coefficient ܿௗ . This is found by integrating the pressure about the airfoil surface.
To model this integration, the summation of normal and axial force coefficients are found by
2

Cn

n

¦¦ ds

i ,k

C pi ,k cos Ti ,k , Ca

k 1 i 1

2

n

¦¦ ds

i ,k

C pi ,k sin Ti ,k ,

(10)

k 1 i 1

and can finally be used to find lift and drag coefficients by converting to corresponding components
with
Cl

Cn cos D  Ca sin D , Cd

Cn sin D  Ca cos D .

(11)

2.2 Inviscid CFD Model
The Stanford University Unstructured (SU2) computer code is utilized for the inviscid fluid flow
simulations. The steady compressible Euler equations are solved with an implicit density-based
formulation. The convective fluxes are calculated using the second order Jameson-Schmidt-Turkel
(JST) scheme. Three multi-grid levels are used for solution acceleration. Asymptotic convergence to a
steady state solution is obtained in each case. The flow solver convergence criterion is the one that

1106

Supersonic Airfoil Shape Optimization

Siegler et al.

occurs first of the two: (i) the change in the drag coefficient value over the last 100 iterations is less than
104, or (ii) a maximum number of iterations of 1,000 is met.
An O-type computational mesh is generated using Pointwise (see Fig. 3). The farfield boundary is
set 55 chord lengths away from the airfoil surface. The mesh density is controlled by the number of cells
on the airfoil surface and the number of cells normal to the surface. The results of a grid convergence
study, given in Table 1, revealed that a 512 u 512 mesh (shown number 5 in the table) is required for
convergence within 0.1 drag count (1 drag count is 'Cd = 104) when compared with the next mesh.
Distance to the first grid point is 0.0004c. The flow simulation for Mesh 5 takes about 2.4 minutes. An
adjoint solution for the drag coefficient take approximately the same amount of time. It should be noted
that throughout an optimization run the airfoil shape may change significantly and the flow and adjoint
simulation times may vary depending on the particular shape. For the optimization studies, Mesh 4 will
be used as the medium-fidelity model f, and Mesh 1 as the low-fidelity model c (used only for manifold
mapping). For the low-fidelity model, the maximum number of solver iterations is set to 300. The
simulation time is less than 7 sec. Thus, the low-fidelity CFD model is about 20 times faster than the
medium-fidelity model.

(a)
(b)
Figure 3: An O-mesh used in the inviscid model: (a) farfield view, (b) a view close to the surface.

Table 1: Grid convergence study for the baseline airfoil shape using the inviscid CFD simulation model
at a free-stream Mach number of M = 2.0 and an angle of attack D = 0.0q.
Mesh
Grid Size
Cl
Cd
Simulation Time*
1
0.209288 0.050258
6.9 sec
64 u 64 x 0.002
2

128 u 128 x 0.001

0.209378

0.050279

19.4 sec

3

256 u 256 x 0.0006

0.209317

0.050256

58.7 sec

4

512 u 512 x 0.0004

0.209279

0.050241

2.4 min

1,024 u 1,024 x 0.0002

0.209332

0.050245

8.4 min

5
*

Computed on a high-performance cluster with 32 processors. Flow solution only.

1107

Supersonic Airfoil Shape Optimization

Siegler et al.

3 Supersonic Airfoil Shape Optimization
In this section, we describe the supersonic airfoil shape optimization. In particular, we describe the
problem formulation, design variables, and the optimization techniques. Those include direct
optimization using a gradient-based one with adjoint sensitivity information, and variable-fidelity
optimization using manifold mapping.

3.1 Problem Formulation
The aerodynamic design problems considered in this work involve lift-constrained drag minimization
of airfoils in two-dimensional flow where the simulations are performed using accurate, but
computationally expensive, computational fluid dynamics (CFD) models, denoted by f. In general,
nonlinear constrained optimization problems can be formulated as

x*

arg min H (f (x)) s.t. g(x) d 0, h(x) 0, l d x d u,
x

(12)

where x is the design variable vector of size p u 1, x* is the optimized design, H is a scalar valued objective
function, f(x) is a vector of size q u 1 with the figures of merit, g(x) is a vector of size M u 1 with the
inequality constraints, h(x) is a vector of size N u 1 with the equality constraints, and l and u are the design
variable lower and upper bounds, respectively, both vectors of the same size as x. The vectors f(x), g(x),
and h(x) are all obtained, or derived, from computationally expensive models.
In aerodynamic shape optimization, the high-fidelity model f calculates the figures of merit, e.g., in the
two-dimensional case f can be composed as follows: f(x) = [Cl.f(x) Cd.f(x) A(x)]T where Cl.f(x) is the
nondimensional lift coefficient, Cd.f(x) is the nondimensional drag coefficient, and A(x) the airfoil crosssectional area. The subscript f denotes the f model. In the case of a drag minimization problem, the
objective function in (12) is set as H(f(x)) = Cd.f(x). The inequality constraint is set as g1(x) = Amin – A(x)
≤ 0, where Amin is a minimum cross-sectional area, and A(x) the cross-sectional area of the design x. The
equality constraint is h1(x) = Cl.t – Cl.f(x) = 0, where Cl.t is the target lift coefficient, and Cl.f(x) is the lift
coefficient of the current design. Here, the angle of attack, D, is used as a dummy variable to find the
target lift coefficient value. All the constraints are handled directly in the optimization process.

3.2 Design Variables
The airfoil shape design variables are defined by the design variable vector x. In this work, we write
x = p, where p is a vector of size m u 1, with m being the total number of control parameters of B-spline
curves. The airfoil surfaces are written in parametric form as
n 1

x(t )

¦
i 1

n 1

X i N i , k (t ) , z (t )

¦Z N
i

i , k (t )

,

(13)

i 1

where (x,z) are the Cartesian coordinates of the surface, Ni,k is the B-spline basis function of order k,
(Xi,Zi) are the coordinates of the B-spline control polygon, and n+1 is the total number of control points.
The control points are used as design variables and allowed only to move freely vertically as shown in
Fig. 4 (the control points at the leading- and trailing-edges are fixed). Each designable control point is
free to move in the vertical direction only. Thus, we have x = p = [Z1 Z2 … Zn+1]T and the corresponding
Xi are fixed during the optimization. In this work, we use 3 free control points for each airfoil surface,
i.e., there a total of 6 design variables.

1108

Supersonic Airfoil Shape Optimization

Siegler et al.

Figure 4: B-spline parameterization for the supersonic airfoil shape.

3.3 Direct Optimization
Direct optimization of the model f using a gradient-based algorithm exploiting adjoint sensitivities
and trust regions is an iterative process

x(i 1)

arg

min

x , x  x( i ) d G ( i )

H (s(i ) (x)) ,

(14)

where x(i), i = 0, 1, …, is a sequence of approximate solutions to (12), whereas sk(i)(x) is a linear
expansion of f(x) at x(i) defined as
s(i ) (x)

f (x(i ) )  f (x(i ) )  (x  x(i ) ) .

(15)

The gradient of the model f (applies separately for the drag and lift coefficient) is obtained by the
adjoint equation. The linear model (15) satisfies the zero- and first-order consistency conditions with
the function s(i)(x) at x(i), i.e., s(i)(x(i)) = f(x(i)), and s(i)(x(i)) = f(x(i)). Optimization of the linear model
is constrained to the vicinity of the current design defined as ||x – x(i)|| d G(i), with the trust region radius
G(i) adjusted adaptively using the standard trust region rules (Conn et al., 2000). The termination
conditions for the algorithm (14) are: (i) ||x(i) – x(i-1)|| < Hx, (ii) |H(i) – H(i-1)| < HH, (iii) G(i) < HG, where Hx, HH,
and HG are user defined convergence tolerances. For direct optimization of the aerodynamics design
benchmark problems, we use: Hx = 10–6, HH = 10–7, and HG = 10–6. The solution of algorithm (14) with the
model (15) is carried out using MATLAB’s fmincon algorithm (MATLAB, 2015).

3.4 Variable-Fidelity Optimization by Manifold Mapping
A generic variable-fidelity optimization algorithm with trust regions produces a sequence x(i), i = 0,
1, …, of approximate solutions to (12) using (14) with a surrogate model s(i)(x) iteration i. The surrogate
model s is a suitably corrected low-fidelity model c. In this work, we use manifold mapping (MM)
(Echeverría-Ciaurri and Hemker, 2008; Ren et al., 2016).
In its basic version, the manifold mapping (MM) surrogate model is defined as (Ren et al., 2016)
s(i ) (x) f (x(i ) )  S(i )  c(x)  c(x(i ) )  ,

(16)

with S(i) being the 3u3 correction matrix in our case (in general, the size of S is equal to the number of
the components in c, f, and s)

1109

Supersonic Airfoil Shape Optimization

Siegler et al.

S(i ) ΔF  ΔC† ,

(17)

where

ΔF [f (x(i ) )  f (x(i 1) ) ... f (x(i ) )  f (x(max{i n,0}) )] ,

(18)

ΔC [c(x(i ) )  c(x(i 1) ) ... c(x(i ) )  c(x(max{i n,0}) )] .

(19)

and

The pseudoinverse, denoted by † , is defined as
ΔC†

VΔC Σ†ΔCUTΔC ,

(20)

where U'C, ¦'C, and V'C are the factors in the singular value decomposition of the matrix 'C. The matrix
¦'C † is the result of inverting the nonzero entries in ¦'C, leaving the zeroes invariant.
The solution of algorithm (14) with the surrogate model (16) is carried out using the pattern search
algorithm (Koziel, 2010), and the termination conditions are the same as for the direct optimization
algorithm, but with Hx = 10–3, HH = 10–4, and HG = 10–3.

4 Numerical Investigation
We investigate the effectiveness of the variable-fidelity optimization technique when applied to the
design of supersonic airfoil shapes. In particular, we compare supersonic airfoil shape optimization
using MM with optimization using the conventional approach, i.e., gradient-based search with adjoint
sensitivities. Moreover, we investigate how the fidelity of the lower fidelity model affects the
optimization results, both in terms of optimization time as well as design quality.

4.1 Description of Design Problem
The objective is to minimize the drag coefficient (Cd) of the biconvex airfoil at a free-stream Mach number
of Mf = 2.0, and a fixed lift coefficient Cl = 0.22. The task is to solve the following constrained optimization
problem:

min Cd (x) ,

(21)

Cl(x) = 0.22,

(22)

A(x) t Abaseline ,

(23)

l d x du

subject to the following constraints

where A(x) is the cross-sectional area of the current design, and Abaseline is the cross-sectional area of the
baseline biconvex airfoil shape. The constant lift coefficient constraint is implicitly satisfied in the flow solver
by using the angle of attack as a dummy parameter.
The B-spline parameterization approach, described in Sec. 3.2, is used for the upper and lower
surfaces. We use 6 control points, as shown in Fig. 4, where two are fixed at the leading- and trailingedges, and the other ones, 3 for each surface, can move in the vertical direction. This yields 6 design
variables. Based on a fit to the biconvex, we set the x-locations of the free control points as: X = [Xu;
Xl]T = [0.1 0.5 0.9 0.1 0.5 0.9]T. The initial design variable vector is x = [xu; xl]T = [0.0211 0.0646 0.0211
-0.0211 -0.0646 -0.0211]T. The lower bound of x is set as l = [0 0 0 -1 -1 -1]T, and the upper bound is
set as u = [1 1 1 0 0 0]T.

1110

Supersonic Airfoil Shape Optimization

Siegler et al.

The inviscid CFD model with a converged mesh (described in Section 2.2) is taken as the highest
fidelity model f. The problem is solved using three approaches: gradient-based search using f and
adjoints (described in Section 3.3), referred to here as Direct, manifold mapping (MM) (described in
Section 3.4) with variable-resolution inviscid CFD models (here the low-fidelity model c is take as the
coarsest mesh model described in Section 2.2), and MM with variable-fidelity physics models (here the
low-fidelity model c is taken as the shock expansion model described in Section 2.1).

4.2 Results
Table 2 summarizes the results of the optimization runs. Figure 5 shows the convergence history of
the algorithms. In particular, Fig. 5a shows the convergence of the argument x, and Fig. 5b shows the
evolution of the drag coefficient in this case. All the algorithms terminate on the argument.
In terms of design quality, MM with variable-fidelity physics models obtained the lowest drag
coefficient value of 493 counts. MM with variable-resolution models obtains a similar design (Fig. 6a).
The direct algorithm did not make significant progress in optimizing the shape. In terms of the pressure
coefficient distributions, shown in Fig. 6b, the shape obtained by multi-fidelity algorithms reduced the
shock strength significantly when compared to the baseline pressure distribution. Figure 7 shows the
Mach number contours for the baseline and the best optimized shape.
In terms of computational cost, the multi-fidelity algorithms need the least amount of simulations
and wall-clock time. In particular, MM with variable-physics models needs 9 evaluations of f (Nf), and
647 evaluations of c (Nc); which, in total, is equivalent to less than 10 evaluations of f (Ntot). The total
optimization time is about 25 minutes. MM with variable-resolution models needs to call c 123 times
and f 2 times, which is equivalent to less than 21 evaluations of f. Direct needed 54 evaluations of f
(includes both flow and adjoint solutions), and the total optimization time was about 326 min. Note that
the multi-fidelity methods used in this study only require the flow solutions, but not the adjoint solutions
like the gradient-based algorithm. Consequently, the MM algorithms are more efficient than the direct
one for this particular case study. The variable-fidelity physics approach is significantly faster than the
variable-resolution one due to a much faster lower fidelity model. The implementation of the variablefidelity physics approach can be improved by having the lower fidelity model feed the higher fidelity
one with information about the angle of attack needed to match the target lift coefficient (which is done
in the variable-resolution approach). This should reduce the evaluations of f to one per iteration.

Parameter/Method

Table 2: Optimization results.
Baseline Direct MM with variableresolution models
220.0
219.7
220.0
522.5
522.1
495.6
123


54*
2

54*
<
21

48.8


325.7
5.2

325.7
54.0


Cl (l.c.)
Cd (d.c.)
Nc
Nf
Ntot
tc (min)
tf (min)
ttot (min)
* Primary flow solutions as well as adjoint solutions.

MM with variablefidelity physics models
220.0
493.0
647
9
< 10
2.2
22.6
24.8

1111

Supersonic Airfoil Shape Optimization

Siegler et al.

(a)
(b)
Figure 5: Convergence histories of the optimization runs: (a) norm of the argument, and (b) evolution
of the drag coefficient.

(b)
(a)
Figure 6: Baseline and optimized characteristics: (a) shapes, (b) pressure coefficient distributions.

(a)
(b)
Figure 7: Mach number contours at Mf = 2.0 and Cl = 0.22 for (a) the baseline, and (b) optimized shape
with MM and variable-fidelity physics models.

1112

Supersonic Airfoil Shape Optimization

Siegler et al.

5 Conclusion
A robust and computationally efficient optimization methodology for aerodynamic design of supersonic
airfoils are presented. The approach uses low-fidelity models corrected by the response correction
techniques (the manifold mapping method) to create fast and reliable surrogates which are utilized to
search for approximate optimum designs of an expensive simulation model at a low CPU cost. The
results of numerical investigations show that, when considering a low-dimensional problem, optimized
designs are obtained at a significantly lower computational cost compared to direct gradient-based
search with adjoint sensitivity information. Future work will consider higher fidelity computational
models of supersonic flow past airfoils. In particular, we will use viscous flow simulations based on the
Reynolds-averaged Navier-Stokes (RANS) equations and an appropriate turbulence model. This will
significantly increase the computational cost compared to the inviscid model, by at least an order of
magnitude. We will investigate using variable-fidelity physics modeling where we have the RANS
model as the highest fidelity, and the inviscid and/or the shock expansion model as the lowest fidelity.

References
Bandler, J.W., Cheng, Q.S., Dakroury, S.A., Mohamed, A.S., Bakr, M.H., Madsen, K., Søndergaard,
J. (2004) “Space mapping: the state of the art,” IEEE Trans. Microwave Theory Tech., 52, pp. 337−361.
Conn, A.R., Gould, N.I.M., and Toint, P.L., Trust Region Methods, MPS-SIAM Series on
Optimization, 2000.
Echeverría-Ciaurri, D., and Hemker, P.W., “Manifold Mapping: a Two-Level Optimization
Technique,” Computing and Visualization in Science, 11, pp. 193-206, 2008.
Koziel, S., “Multi-fidelity multi-grid design optimization of planar microwave structures with
Sonnet,” International Review of Progress in Applied Computational Electromagnetics, Tampere,
Finland, 2010, pp. 719-724.
Koziel, S., and Leifsson, L. (2012) Knowledge-based airfoil shape optimization using space
mapping. AIAA Applied Aerodynamics Conference, New Orleans, Louisiana, June 25-28.
Koziel, S., Echeverría-Ciaurri, D., and Leifsson, L. (2011) “Surrogate-based methods,” in S. Koziel
and X.S. Yang (Eds.) Computational Optimization, Methods and Algorithms, Series: Studies in
Computational Intelligence, Springer-Verlag, pp. 33-60.
MATLAB V15.0, Mathworks Inc., Corporate Headquarters, 3 Apple Hill Drive, Natick, MA 017602098, USA.
Ren, J., Leifsson, L., Koziel, S., and Tesfahunegn, Y. (2016) “Multi-Fidelity Aerodynamic Shape
Optimization Using Manifold Mapping,” AIAA Aerospace Science and Technology Forum (AIAA
SciTech), San Diego, CA, Jan 4-8.

1113

