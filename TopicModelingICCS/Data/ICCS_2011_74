Available online at www.sciencedirect.com

Procedia Computer Science 4 (2011) 1306–1315

International Conference on Computational Science, ICCS 2011

3D Off-Line Path Planning For Aerial Vehicle Using Distance
Transform Technique
S Jaishankar* , R.N Pralhad #
#*Dept of Applied Mathematics, D.I.A.T (Deemed University), Pune India 411025

Abstract
Optimal Path Planning is a well-known problem and there are many approaches and techniques for solving this task, which are
mostly based on graph or grid representation of the environment. Such a representation can be very difficult to construct in the
real applications. This paper introduces the Distance Transform (DT) technique of image processing, which operates on the gray
level image representation of the 3D environment and its capability of planning optimized paths. The 3D environment is
modelled in the form of geo-located layered data, similar to the Geographic Information system (GIS). The spatial multicriteria
decision analysis (MCDA) techniques combined with distance transform technique have been used to arrive at the gray level
image representation of the environment and to generate the optimal path.
3D path planning; Distance transform technique; MCDA; Optimal path

1.

Introduction

General problem of planning of an optimal path is a highly explored topic in several scientific areas, especially
applicable in the context of ‘mission planning of military air vehicle’. Most of the techniques for solving this task
require either graph or grid representation of the environment, which can be very difficult to construct or obtain in
the real applications. In this paper the Distance Transform (DT) technique [1] of image processing, which operates
on the gray level image representation of the 3D environment has been implemented to generate optimal path. DT
technique uses the gray value as the cost of traversing the pixel, so if the image is viewed as a height map, low lying
path are generated such that it avoids the high obstacles like hills. In our application the 3D environment consisting
of terrain, enemy threat and weather has been modelled as layered geo-located data similar to any GIS system and
Multi Criteria Decision Analysis (MCDA) techniques introduced by Malczewski [2] have been used to arrive at the
consolidated gray level image. The main advantage of such an approach is that the consolidated gray level image
representing the 3D environment consisting of all factors is much simpler to obtain than a connected graph or a grid
representation.
The first section of this paper provides an overview of the existing approaches to the 3D path planning problem in
the context of air-mission planning. The second section details the DT concept, the third section shows the
implementation of the DT technique combined with MCDA for 3D path planning for a mission scenario. The final

* Jaishankar. Tel.: +918025952406;
E-mail address: sj_fauji@yahoo.com
# Dr Pralhad, rnpralhad@hotmail.com

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.141

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

1307

section discusses the results obtained and also highlights the advantages of the combined MCDA and DT technique
as compared to the other conventional techniques.
1.1
Related work
The mission planning function can be divided into two types, namely, Off-line and Real time planning. The purpose
of real time planning is for guidance control of an air vehicle. The focus of this paper is the off-line or far field
mission planning task, which involves generation of mission way-points for navigation planning. Path planning can
be divided into sub-tasks: mapping and modelling the environment and path planning and generation. Environment
can be represented in a variety of ways, dynamic/static or known/unknown, which implies a similar distinction of
path planning techniques according to the types of environment. Off line planners use the map of the environment to
produce a configured path.
In most of the successful approaches the general strategy is to use a graph or tree structure to represent the
environment and using standard graph search algorithms. These methods suffer from the problem of a rapid increase
in computation time and memory for large and complex maps. A* is the most popular algorithm of this kind, which
uses the weighted graph idea. Another approach similar to A* is called D* which is for applications in partially
known environments. Wan, Chen & Earnshaw [3] describe a path planning system using A* algorithm with
dynamic unknown environment. A general path planning technique based on combined graph and grid
representation along with Dijkstra’s algorithm is described in Broz [4]. Using an approximate grid based
discretization scheme for the environment and by combining graph search techniques with heuristic techniques
another approach has been described in Rippel, Gill and Shimkin [5]. An Evolutionary algorithm (EA) based off line
path planner for Unmanned Aerial Vehicle has been discussed by Nikolos and Tsourveloudis [6], which is a
departure from traditional graph search technique. Design and implementation of Multi-objective evolutionary
algorithms for efficient path planning and routing of swarm of UAV has been discussed in Pohl, A. J. and Lamont,
[7]. EAs for the Multi-objective Shortest Path Problem has been discussed by Maria, Pangilinan and Jansens [8]. A
Genetic Algorithm (GA) approach to Solve the Shortest Path problem for Road Maps has been discussed by sachith,
Baladasan and Sachuka [9]. Another similar work on 3d offline path planner for Unmanned Aerial Vehicles (UAVs)
using Multiobjective EAs for finding solutions corresponding to conflicting goals of minimizing length of path and
maximizing margins of safety has been presented by Shashi Mittal and Kalyanmoy Deb [10]. The curved path is
represented using B-Spline curves. The control points of the B-Spline curve are the decision variables in the genetic
algorithm. In their approach several optimal solutions are generated each with a different trade-off among multiple
objective functions and user intervention is required to choose a path which is best suited for the task.
The recent advancements in GIS systems have provided the users with convenient spatial analysis tools to approach
problems such as 3D flight planning. A 3D route planning system using ARCGIS engine has been described in Wei
and Chen [11] and Musliman, Rahman and Coors [12]. In a recent work, another approach was the combination of
multi objective decision making system with D* Lite graph search algorithm in finding a near optimal path has been
described in Wu, Clothier and Campbell [13]. Another approach has been to model the path planning problem as a
constraint satisfaction problem on the graph and resolving it using concurrent constraint programming, by Gualandi
and Tranchero [14]. In contrast, our approach is based on the layered representation of the 3D environment, similar
to grid based representation in a GIS system. Using this approach the environment related data can be stored in a
convenient and simple manner. We have used MCDA techniques to obtain the composite gray level image of the
environment. The composite image is processed by DT technique of image processing for resolving the optimal
path.
2.

Distance transform technique

2.1
Distance transformation
Distance is a fundamental concept in image analysis. The basic concepts of pixel neighbourhood and distance
metrics are given in Gonzalez [15]. Distance transformation is an operation, which transforms an image to a distance
image in which value of each pixel indicates its distance to the nearest reference pixel. The reference pixel maybe a
set of pixels belonging to features in the image or it may belong to the background. In practice distances are
approximated by summing local pixel steps, which form a digital path between the source and destination point. The
steps are defined between immediate pixel neighbourhoods based on distance metrics. The idea behind distance

1308

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

transformation is to propagate local distances defined within a small neighbourhood of a pixel. The most common
neighbourhood is the 3x3 neighbourhood, as shown below in figure 1. The pixels with value ‘a’ are called edge or
face neighbours and with value ‘b’ are called the vertex or diagonal neighbours. The distance metrics define the
distance between pixel pairs. For example if the chessboard distance is used then local distance values are a=b=1,
and for local Euclidean distance a=1 and b=
Pnw
b

a

Pn

Pne

b

Pw
a

0

a

b

a

b

(a)

.
Pc

Pe

Ps

Pse

Pc
Psw

(b) Mask M1

(c) Mask M2

Pnw

Pn

Pw

Pne
Pe

Psw

Ps

Pse

(d)

Fig 1. Pixel Neighbourhood and Masks

The reference pixel from which distances are calculated have distance value zero and other pixels value correspond
to their distance from nearest reference pixel, Fig 1(a). The best known approach to propagate local distances to
produce a DT is the Sequential Local Transformation (SLT) algorithm presented by Rosenfeld and Pfaltz [16],
which calculates the distance value of a pixel as the number of steps from the pixel to the nearest feature pixel in a
binary image. In the SLT, the pixel neighbourhood is divided into two masks as shown in Fig 1(b) & 1(c), and the
image is scanned sliding one mask at a time row-wise across the image. The first computation pass proceeds using
the mask M1= {pnw,pn,pne,pw} from the top left corner of the image, substituting the value of the centre pixel p c,
F(pc), with the distance value
F1*(pc) = min [F (pc), min(Δ(p) + F1*(p)]

(1)

The distance value propagates to pixel pc from one of the mask pixels. The local distance from centre to neighbours
depends on the distance definition used. An example of the forward iteration is shown in Fig 2. Here the centre
pixel value F(PC) = 4, the path length considering chessboard distance Δ(p) = 1 and the neighbouring pixel values
F1*(p), with mask M1 are as shown in Fig 2. The sum of path length and pixel value ie (Δ(p) + F 1*(p)) are (1+
1,1+2,1+4,1+6) or (2,3,5,7) which is shown below the arrow in Fig 2. Now, the minimum of [F(pc), min (Δ(p) +
F1*(p)] ie minimum of (4, min(2,3,5,7) is min (4,2) in which 2 is the lesser value. Therefore the centre pixel value is
changed to a new pixel value from 4 to 2 as shown in Fig 2.

Fig 2. Representation of forward iteration

The reverse pass which proceeds row-wise from the bottom right corner of the image with mask M 2= {pe, psw, ps,
pse} replaces the forward pass values F1*(pc) with,
F*(pc) = min [F1*(pc), min(Δ(p) + F*(p)]

(2)

1309

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

An example of the reverse iteration is shown in Fig 3. The process of changing the centre pixel value is the same as
explained in above para and is depicted in figure 3, except that the mask used is M2.

Fig 3.

Representation of Reverse Iteration

2.2
Distance transform of curved surfaces (DTOCS)
The DTOCS is calculated using the distance propagation mechanism explained above, with a slight modification
[1]. It uses a binary image F for the transformation in addition to the original gray level image G. The calculation
area in F is initialized to ‘max’ and complement area to zero. The original gray level image is used only for
calculating local distance between pixels. The binary image which originally defines the calculation area is
transformed into a gray level image containing distance values.
The propagated local distance values contain a horizontal component for shift in the image plane and a vertical
component defined by the gray level difference between the pixels. The definitions for the local distance values are:
D(Pi, Pi-1) = |G(Pi) – G(Pi-1)| +1

(3)

Where G(P) is the gray-value of pixel P, and Pi and Pi-1 are consecutive pixels on a digital path. The local distance
value which includes the pixel values of the consecutive pixels as explained above is shown in Fig 4. For example, if
G(Pi) = 15 and G(Pi-1) = 20, Then, D(Pi, Pi-1) = |15 -20| +1 = 6. The value 6, (consisting of horizontal distance 1 and
vertical distance 5), now represents the Euclidean distance between the consecutive neighbouring pixels. The
forward and backward passes are repeated several times until the distance values converge.

Fig 4. Local Distance based on pixel values

2.3
Route DTOCS
An extension of the DTOCS algorithm is the route DTOCS introduced by Toivanen and Ikonen [17]. The algorithm
is based on calculating two distance maps, one for each end point. The basic idea is that a minimal path consists of
minimal sub-paths. To find the shortest route, the lengths of all sub-paths starting from the end points, a and b, are
determined by calculating two DTs, Fa*(x) and Fb*(x). Summing the two distance images produces a route distance
image DR(x), where value of the pixel x is the sum of the lengths of the sub-paths between a and x and b and x, thus
the value of x is the length of the shortest path between a and b, which passes through the pixel x. This means that if
x has a minimum value in the route distance image, it lies in the minimal path between a and b. Thus, the route
R(a,b) is defined as the set of points, for which route distance value is minimal:
R(a,b) = { x | DR(x) = min DR(x)}

(4)

1310

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

An example of the route DTOCS algorithm is shown in Fig 5. The distance values of three pixels x, y and z is
calculated first with start point ‘a’ as reference and then with destination point ‘b’ as reference. Thus, the distance
image Fa*(x) has the distance values of pixels x,y,z from point ‘a’. The distance image Fb*(x) has distance values of
pixels x,y,z from the destination point ‘b’. The three paths from start point to destination point along the three pixels
are as shown in the Fig 5. By summing the two distance values, it can be seen that pixel x has the least value as
compared to y and z. Thus, the shortest route R (a,b) will be along pixel x.

Fig 5. Depiction of Route DTOCS algorithm

The route DTOCS cannot directly give as output a chain coded shortest path. The distinct path has to be extracted
from the route set, by backtracking from point b in distance image Fa*(x) towards decreasing distance values or by
using point ‘a’ and Fb*(x). There can be other approaches for back tracking as discussed in [13].
3.

Implementation of DTOCS and MCDA for 3D path planning

3.1
Physical environment representation
The layered data or flat data model format of GIS for representation data has been adopted for this application. The
total data has been modelled as a (M x N x P) dimensional matrix. The terrain elevation information forms the first
layer, next layer is the threat information, followed by the weather information. This type of representation is akin to
the raster format of spatial data. The different layers represent attribute data related to each location. The details of
representation of each layer are explained below.
(a)
Terrain representation:- The Digital terrain elevation data (DTED level 0) has been used to
represent terrain information. It is a matrix of terrain elevation data points converted into a numerical
format. In this format, the elevation points, in the form of a matrix are at precise increments of latitude and
longitude and expressed in meters.
(b)
Threat representation:In the second layer of the M x N matrix two types of threat have been
represented, the first is a threat whose radius of influence is constant in all directions accordingly aassigned
a constant pixel value of ‘256’. Such a threat could represent an enemy air defence gun post and so forth.
The second type is one in which the influence decreases with increasing radius, this type of threat could
represent an enemy sensor. Accordingly, the pixel values are assigned using a Gaussian normal function,
centred at the enemy location. Thus, the logic adopted is higher the pixel value higher is the enemy threat.
There can be several such representations to represent the presence of enemy or threat.
(c)
Weather representation:- The last layer represents the weather information wherein weather
information has been categorised into four levels, and modelled by assigning different ranges of pixel
values. The given geographic region or M x N matrix is divided into nine regions or M/3 x N/3 submatrices representing, geographic Northwest, North and so forth. Each region is assigned pixel values as
per the weather which is decided randomly. Thus, higher the pixel value, worse is the condition of weather
or more avoidable is the region.

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

1311

3.2

Multi-criteria decision making (MCDM)
MCDM problems can be classified into two broad classes’ multi attribute decision making (MADM) and
multi objective decision making (MODM). A detailed view of this field is given in [2]. In the context of our work
the attributes are terrain height, enemy effect and state of weather and the objective is to find the shortest path from
start to destination while taking the attributes into consideration. Thus, it can be classified as a MADM problem.
The MCDA process starts with problem definition, in the next step the attribute or criterion maps have to be
transformed to comparable scale. There are a number of approaches to make the criterion maps comparable,
depending on the type of data. In our work the terrain data has been transformed using maximum score procedure,
which can be represented as follows
x'i =

, where x’i is standardized value, xi is the raw value and xjmax is the max value.

The enemy effect and weather data have an inherent imprecision associated. Therefore, Fuzzy membership function
(MF) approach has been adopted to standardize the data. The Trapezoidal MF has been used to standardize the data,
which can be represented as M = (a,b,c,d), where a,b,c,d are the horizontal or base variable coordinates, representing
the trapezoid. An example of a trapezoidal fuzzy number is given in Fig 6, where M= (0.1,0.4,0.7,1.0).

Fig 6. Trapezoidal membership function
The standardization using fuzzy MF can be explained using a slope criterion map in Fig 7. The map displays the
slope of ground in a geographic region varying from 0 to 15. The map can be standardized using concept of ‘steep
slope’. The slope is assumed to be steep, if it is greater than 10. This statement can be represented by a trapezoidal
fuzzy number M = (0,1,1,1) as shown in Fig 7. Given this MF the original slope map can be standardized to fuzzy
map, where each location gets a value between 0 and 1 depending on degree of membership in the fuzzy set.

Fig 7. Standardization using fuzzy membership function

Similarly in our case the enemy effect has been standardized in terms of degree of “High Threat”. The areas with
pixel value more than 180 is considered to be “High Threat” and have a membership value of 1, and areas with less
than 180 have decreasing value of threat as per the trapezoidal membership function. Similarly, the weather has
been standardized in terms of degree of “Bad Weather”.
In next step decision maker’s preferences in the form of weights of relative importance are assigned to the attribute
data. The larger the weight the more important is the attribute or criteria. In case of n criteria, a set of weights is
defined as w= (w1, w2, w3, w4, ....) and Σwi=1. There are various methods to derive the criterion weights; in our
work the Pair wise comparison method or Analytic Hierarchy Process (AHP) developed by Saaty and explained in
detail in [2] has been adopted. This method takes as input the pair wise comparisons and produces the relative

1312

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

weights as output. Based on the underlying scale of preference an example of a relative comparison matrix is as
follows:
Table 1. Relative Comparison Matrix

Terrain

Threat

Weather

Terrain

1

3

7

Threat

1/3

1

6

Weather

1/7

1/6

1

The interpretation of the above table is that terrain has moderate importance or is assessed three times more
important than threat and (very strong importance) seven times more important than weather, threat is assessed as
six times more important (strong to very strong) as compared to weather. The next step involves integration of the
data layers by an appropriate aggregation function. The additive method of aggregation is the best known and most
widely used MADM method [2]. The simple additive weighting (SAW) [2] also called weighted linear combination
(WLC) method has been used to aggregate the data layers, wherein the scaled value of each attribute layer is
multiplied by the corresponding weight and summing the product over all the attributes. Formally it can be stated as
follows
Ai = Σj wj xij

(7)

Where, Ai is the total score of each alternative, wj is the normalized weight and xij is the score of ith alternative with
respect to jth attribute. The aggregate sum of the three layers gives a unidimensional output matrix (MxN), in which
the value at each location is the combination of the attribute layer values, scaled and weighted by the decision
maker’s preference. An example of aggregation of the data layers is shown in Fig 8. The figure shows three layers of
the MxNxP matrix with standardized values ranging from 0 to 1. Each layer is multiplied with the weighting factor
and the three layers are aggregated as explained in equation 7.

Fig 8. Aggregation of data layers

The output of MCDA process is a (MxN) matrix, which is viewed as a combined gray level image. The gray level
image is operated upon by the DTOCS algorithm to extract the optimal path.
4.

Results and analysis

4.1
The 3D path planning system using MCDA and DT technique was implemented with several sets of data
and the results were found to be satisfactory. One example mission scenario is presented as follows:(a)
Environment representation
An example mission scenario was taken for a hilly terrain. The DTED level 0 map for the region 84° East
(longitude), 19° North (latitude) was used. The terrain data is a (121x121) size matrix and the height values
in the matrix are in meters. The enemy threat picture was randomly generated in the above geographic
region. The threat consisted of five constant threat regions and one region with varying threat level with

1313

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

distance. The geographic region was randomly initialized with one of the type of weather, for each subregion.
(b)
MCDA implementation
The values of each layer were standardized, and the weights for each attribute were calculated as per the set
preference. The calculated weights for terrain, threat and weather were [0.632 0.298 0.069]. This represents
a weightage of 63% for terrain, 30% for enemy threat and 7% for weather.
(c)
Path planning output
The output path considering only terrain data is shown in Fig 9(a). The 3D output path for the combined
scenario is shown in Fig 9(b). The red line indicates the shortest path. The 3D shortest path visualized in
the enemy threat plane and weather plane is placed at Fig 10(a) and Fig 10(b). It shows that the algorithm
avoids the “high threat” region convincingly. However, in the weather scenario the destination point is in
bad weather region as indicated in the gray level image. But due to the low weightage given to the weather
attribute the result is satisfactory.

destination

start

Fig 9(a) shorest path with terrain only; (b) shortest path with combined data

Variable threat
Region

Constant threat
Region

Figure 11. Shortest path visualized in threat plane

Good Weather
Region

Bad Weather
Region

Figure 12. Shortest path visualized in weather plane

Fig 10(a) shortest path visualized in threat plane; (b) shortest path visualized in weather plane

4.2

Comparison with contemporary technique

In many of the contemporary work related to path planning, EA approach has been adopted. Therefore, it would be
pertinent to compare the combined technique of DTOCS and MCDA with EA approaches. The comparison is only a
theoretical comparison based on information available from the literature. EAs are adaptive heuristic search
algorithms based on the evolutionary ideas of natural selection and genetics. A broad review of multi-objective
shortest path problem (MSPP), the various approaches including application of multi-objective EA (MOEA) to a
practical problem of network optimisation has been described in [8]. With regard to the computational complexity
the MOEA is a polynomial complexity algorithm with respect to the number of nodes and edges [8]. A theoretical

1314

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

and empirical analysis of time complexity of GA on exponentially scaled problems has been given by Lobo,
Goldberg and Pelikan [18]. Genetic algorithm performance is usually measured by the number of fitness function
evaluations during the course of a run. For exponentially scaled problems, both population size and time to
convergence grow linearly with the problem length, giving an overall quadratic time complexity or polynomial
complexity in terms of fitness function evaluations [17]. It is shown in [8] that given the process to create a feasible
path, the problem of deciding the population size ‘N’ is a critical consideration and that the population size increases
exponentially with the number of objectives in the MSPP. Thus, in terms of complexity the approach adopted in this
work which has a complexity of (log2 N) would be better as compared to the MOEA approach.
Performance of an algorithm is usually represented in terms of complexity, which can be expressed in terms of
number of iterations taken to converge to a solution, which also depends on the size of the input data. Therefore, the
combined technique was initially tested with several sets of terrain data keeping the number of pixels or size of the
data (N=121*121) fixed. It was found that the number of iterations to arrive at the distance transform image varied
from low of 22 to high of 44, but was close to the complexity of order log (N) as suggested in [1]. As the size of the
input data ‘N’ was increased the variation in number of iterations increased drastically, in other words given an
input image of size ‘N’ the variation in count or number of iterations to converge was large. The large variation in
count was attributable to the difference in the complexity or texture of the images. Therefore, another factor namely
entropy (e) was also considered to indicate variation in image texture. Low entropy images have very little contrast
with large runs of pixels with the same or similar pixel values. An image that is perfectly flat will have entropy of
zero and high entropy images such as an image of heavily cratered areas on the moon have large contrast from one
pixel to the next. An example of low entropy and high entropy image is as shown below in fig 11(a) and 11(b).

Fig 11(a) low entropy image; (b) high entropy image

To estimate how the iteration count varies with size of input image, the combined technique was applied to a
number of images with entropy value used as a parameter to indicate complexity of the input data. This helped to
obtain the average number of iterations for a given input size. The technique was tested with increasing ‘N’ while
varying the entropy from low (0.83 average) to high (5.79). The average number of iterations versus log (N) was
plotted, which indicated a linear variation Fig 12, which was commensurate with theoretically assessed complexity.

Fig 12. Plot of algorithm complexity

1315

S Jaishankar et al. / Procedia Computer Science 4 (2011) 1306–1315

For a direct comparison of the path planning output, the work by [10] on 3d path planning using MOEA was
considered. The 3d path generated by the algorithm considered by [10] is on a terrain represented by a (50*50) mesh
with multiple hills and main parameters set are population size N = 50 and maximum number of iterations = 150
apart from other settings specific to their application. The optimal output path generated by the EA approach is as
shown in figure 17(a). The start point is approximately (1,100) and the destination point is (350,340). The same
input image was used to generate the optimal path using our technique and the optimal output path is shown in
figure 17(b). There is a close match between the output paths. However, the optimal path by our method was
generated in 75 iterations, which is considerably less as compared to the MOEA method. 







Fig 13 (a) Optimal path based on EA approach; (b) Optimal path based on combined method

5.

Conclusions

Finding an optimal path in a hilly terrain is a challenging task more so, if one has to take into account, multiple
objectives such as threat and weather avoidance. Although there are methods available using classical optimization
techniques, they have their own limitation. We feel that distance transform technique along with MCDM will be
best suited for off-line mission planning requirement. The main advantage of the method used is that the complete
data of terrain and other inputs are given in a matrix or grid form, and visualized as a gray level image. There is no
requirement of any pre-processing of the data, in terms of graph representation. However, the conventional methods
would require enormous amount of pre-processing to give a graph like representation along with connectivity
information. Using the technique, threat can be placed at random points or at identified point (once known) to obtain
the optimal path. In addition using the model combined with appropriate visualization tool, can be very useful.
References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.

Toivanen, New Geodesic Distance transform for gray scale images, PRL, 1996.
Malczewski, GIS and multicriteria decision analysis, John Wiley & sons, 1995.
Wan, Chen & Earnshaw, A motion constrained dynamic path planning algorithm for multiagent simulations.
Broz, Path planning in combined graph and grid environment, 2005.
Rippel, Gill and Shimkin Fast Graph search algorithm for general aviation flight trajectory generation, 2004.
Nikolos and Tsourveloudis, EA based Off-line path planner for UAV Navigation, Automatika 42, 2001.
Pohl and Lamont, Multi-objective UAV mission planning using evolutionary computation, ACM/SIGSIM, 2008.
Maria, Pangilinan and Jansens, EAs for the Multi-objective Shortest Path Problem, World Academy of Science, Engineering and
Technology 25, 2007.
Sachith, Baladasan and sachuk, Genetic Algorithm Approach to Solve the Shortest Path Problem for Road Maps, International
Conference on Information and Automation, Colombo, Sri Lanka, 2005.
Shashi Mittal and Kalanmoy Deb, Three-Dimensional Offline Path Planning for UAVs UsingMultiobjective Evolutionary Algorithms,
IEEE Congress on Evolutionary Computation, 2007.
Wei and Chen, Developing 3D-route planning using ArcGIS Engine.
Musliman, Rahman, Implementing 3D shortest Path analysis in 3D network, 2008.
Wu, Clothier and Campbell, Fuzzy multi objective mission flight planning in unmanned aerial systems, IEEE, MCDM, 2007.
Gualandi and Tranchero, Concurrent constraint programming-based path planning for uninhabited air vehicles.
Gonzalez & Woods, Digital image processing, second edition, Prentice hall.
Rosenfeld and Pfaltz, Sequential operations in digital image processing, ACM Journa1, 1966.
Toivanen & Ikonen, Shortest routes on varying height surfaces using gray-level distance transforms, Image and vision computing,
2005.
Lobo, Goldberg and Pelikan, Time complexity of genetic algorithms on exponentially scaled Problems, 2000.

