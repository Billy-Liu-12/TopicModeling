Procedia Computer
Science
ProcediaComputer
Computer Science
Procedia
Science001 (2010)
(2012)1–9
1231–1239

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Methods for Assimilating Blood Velocity Measures in
Hemodynamics Simulations: Preliminary Results
Marta D’Elia1 , A. Veneziani
Department of Mathematics and Computer Science, Emory University,
400, Dowman Dr. Atlanta, GA, 30322 - USA

Abstract
New measurement devices and techniques in biomedical images provide medical doctors with a huge amount of
data on blood ﬂow and vascular morphologies. These data are crucial for performing (and validating) individualbased simulations of hemodynamics (see e.g. [1]). Availability of velocity measures inside a region of interest
poses problems that are new to the community of computational hemodynamics and however well known in other
engineering ﬁelds. In particular, integration of data (measures) and numerical simulations has been an issue of utmost
relevance in the prediction of ﬂuid geophysics phenomena and, in particular, weather forecast. In computational
hemodynamics a mathematically sound assimilation of data and numerical simulations is needed, on one hand for
improving reliability of numerical results, on the other one for ﬁltering noise and measurements errors. In this paper
we consider and compare some possible methods for integrating numerical simulations and velocity measures in some
internal points of the computational domain. Preliminary numerical results for a 2D Stokes problem are presented
both for noise free and noisy data, investigating convergence rate and noise sensitivity.

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: Computational ﬂuid dynamics, Optimization techniques, Inverse problems, Data assimilation techniques,
Hemodynamics

1. Introduction and Motivation
The development of numerical methods in incompressible ﬂuid dynamics has received a strong impulse in the
last 15 years from cardiovascular applications (see e.g. [1, 2, 3]). Speciﬁc numerical techniques have been proposed
for the eﬀective solution of ﬂuid-structure interaction problems, the coupling of models featuring a diﬀerent level of
detail (lumped parameter, 1D, 3D), and the integration of medical images and numerical simulations. In particular,
the last topic is crucial for the development of numerical solvers with a clinical impact. It is well known that vascular
geometry plays a major role in the development of vascular pathologies. The combination of data coming from
medical images and numerical simulations is a fundamental step for performing individual-based simulations. This
integration process has been enhanced in the last years by the development of both new imaging devices and numerical
methods for processing medical images (see e.g. [1, 4, 5]). Measurements devices have been improved also for ﬂow
Email addresses: mdelia2@emory.edu (Marta D’Elia ), ale@mathcs.emory.edu (A. Veneziani)
author

1 Corresponding

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.137

1232

M. M.
D’Elia,
A.A.Veneziani
Science001(2010)
(2012)1–9
1231–1239
D’Elia,
Veneziani/ /Procedia
Procedia Computer
Computer Science

2

Figure 1: Blood velocity measured in the ascending aorta of a patient with MRI [6].
and pressure data; some of them make available measurements of the velocity ﬁeld in the region of interest (see Fig.
1).
Availability of these data opens the problem of a mathematically sound integration of measures and simulations
aiming at an overall improvement of reliability of numerical results. This problem is not new in other engineering
ﬁelds. In particular, we mention geophysics and meteorology, where data come from diﬀerent sources like Radar,
Lidar or satellite images and are currently used for enhancing the quality of weather forecast. The procedure of
including measured data into numerical simulations is called Data Assimilation (DA). Data are usually sparse, irregularly distributed in space and time and noisy for diﬀerent reasons (e.g. instrumental noise, sampling and interpretation
of instrumental measurements).
In this paper we present some possible methods for DA in computational hemodynamics and compare their performances on a simple test case. In particular, we move from velocity measurements in the computational domain (see
Fig. 1) and assimilate these data in the simulation of the incompressible ﬂuid dynamics in the region of interest. After
a brief overview of DA techniques during the last 50 years and of recent developments of this procedure in biomedical
applications, in Section 2 we report the mathematical formulation of the considered approaches. In Section 3 we
discuss the numerical results and we identify the most eﬀective methods; in Section 4 we draw conclusions and we
present future research guidelines.
1.1. State of the art
DA was ﬁrstly introduced in ﬂuid geophysics, where the aim was to use very sparse measurements of a physical
variable in order to predict the weather evolution. The basis of DA is an automated procedure based on interpolation
of the data, called simple analysis. This preliminary technique provided the ground for the development of new
methods where the physics of the data analyzed was taken into account. The ﬁrst proposed methods were based on
the Estimation Theory: the analysis step is performed combining information from physical models and statistical
correlations between observed data. The central method in this category is the Kalman ﬁlter introduced by Kalman in
1960; many variants of this technique have been lately introduced [7, 8]. In the meantime, the Dynamic Relaxation
method was considered for time independent DA, based on the fact that the solution of a steady problem can be seen
as the steady state of a time dependent problem. The basics of this method is the solution of the Partial Diﬀerential
Equations (PDEs) governing the system where some artiﬁcial source terms are added in order to force the solution
to match the observed data as time evolves. Later on, the numerical solution of PDEs was made simpler by the
introduction of eﬃcient discretization schemes; also, the theory of control and optimization became well known and
used in many practical applications [9]. These facts allowed several methods for control problems to be used in the
solution of DA problems. Nowadays, we can consider three groups of DA techniques:
• Kalman ﬁlter based approaches [8];
• control theory methods [9];
• stochastic methods [7].
The application of DA techniques to hemodynamics is a new ﬁeld of investigation; so far, some DA techniques have
been used in medicine in order to estimate model parameters (see [10]). More recently, DA has been taken into
account also for blood ﬂow: a control based approach has been chosen for recovering the velocity ﬁeld [11] in an

M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
1 (2012)
1231–1239
M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
00 (2010)
1–9

1233
3

unsteady simulation. The goal is to minimize a weighted diﬀerence of the predicted state variable and a measured
ﬁeld at a speciﬁc time, subject to the state equations using the initial condition as a control variable.
2. Proposed Approaches
In this Section we present the mathematical formulation of the problem and we describe several methods for its
numerical solution. For the sake of simplicity, at this preliminary stage, we focus on the steady Stokes equations; this
analysis will provide the ground for the solution of the Navier-Stokes (NS) equations for real applications, that will
be addressed in future works.
2.1. Mathematical formulation
We introduce some notations: let Ω ⊂ R2 represent the domain of interest, i.e. the vessel; Γw the vessel wall;
Γin and Γout the inﬂow and outﬂow sections. Let L2 (Ω) be the usual Hilbert space of square summable functions
and H1 (Ω) be the space of vector functions whose components are in L2 (Ω) together with their ﬁrst derivatives, H1Γ
the corresponding space of H1 functions with null trace on the portion Γ of ∂Ω . We denote by u(x) ∈ H1Γw (Ω) and
p(x) ∈ L2 (Ω) the velocity and pressure ﬁelds respectively. The general statement of the problem is as follows. Let us
denote by d ∈ RD (D ∈ N) the vector of the measured data s.t. di , i = 1, ..., D, is the measured velocity at point xi (we
assume measurement points to lie on some internal layers, which we denote Γd - see Fig. 2). We assume that Γin ⊂ Γd .
Velocity and pressure ﬁelds are assumed to fulﬁll in Ω the equations
−νΔu + ∇p = 0,

∇ · u = 0.

(1)

On the boundary Γw we assume u = 0, while on Γout we prescribe homogeneous Neumann boundary conditions. We
aim at solving the following problem: ﬁnd u and p so that u ﬁts the available measures d (in some sense) under the
constraints (1).
Diﬀerent methods can be devised for solving this problem, with diﬀerent ways for ﬁtting the data. Here, we address
in particular two techniques. The former is speciﬁcally devised for this problem and relies upon the assumption that
available measures are taken over internal sections of the domain of interest, i.e. points xi belong to a set of transversal
sections of the vascular district at hand (see Fig. 2). Although this is a quite restrictive assumption, it reﬂects the way
the measurements are actually taken (see Fig. 1). The latter method, on the contrary, is based on a more general
approach, relying upon the theory of control for distributed systems.
2.2. Splitting techniques
The idea is to split the domain into subdomains (see Figs. 1 and 2), where the measurement sections act as domain
interfaces. Measurements are used as boundary data for solving the global problem by subdomains. More precisely,
let us assume to have s subdomains Ωi (i = 0, . . . , s − 1), such that the measured data lie on the interfaces. Let us
denote by Γi the interface, with i = 0, 1, . . . s − 1 so that Γ0 = Γin and Γ s = Γout . Let di be the set of measures on
interface Γi , or more precisely an interpolating function over Γi of the data (we will use piecewise linear interpolation).
s−1
u0,i + Ei d where u ∈ H1Γw (Ω), u0,i ∈ H1∂Ωi (Ωi ), and Ei d ∈ H1 (Ωi ) is an arbitrary extension in Ωi of
Denote by u = i=0
the data di and di+1 . We want to solve the following problem. Find u such that for any vi ∈ H1∂Ωi (Ωi ), qi ∈ L2 (Ωi )
s−1
i=0

⎛
⎜⎜⎜
⎜⎜⎜
⎜⎜⎜
⎝

p∇ · vi dx −

ν∇u · ∇vi dx −
Ωi

Ωi

Ωi

⎞
⎟⎟⎟
⎟
qi ∇ · u dx⎟⎟⎟⎟⎟ = 0.
⎠

(2)

In principle, we can distinguish two approaches, according to the sequences “ﬁrst split then discretize” or “ﬁrst
discretize then split”. We focus on the latter approach, since the former has some strong drawbacks that prevent its
use, as we point out later on.

1234

M. M.
D’Elia,
A.A.Veneziani
Science001(2010)
(2012)1–9
1231–1239
D’Elia,
Veneziani/ /Procedia
Procedia Computer
Computer Science

4

Figure 2: Schematic representation of the domain with velocity measures (left) and its subdomain splitting (right).
Matrix Updating. In this case, we ﬁrst discretize problem (1) to the form AU = b where U is the vector of the nodal
unknowns. Then, the measurements are regarded as conditions in the form
cU(xi ) = cdi

(3)

where i ranges over the nodes where measures are available (which are assumed to be a subset of the discretization
nodes) and c is a suitable coeﬃcient. Conditions (3) are forced into the linear system similarly to Dirichlet conditions;
this means that the i-th equations of the linear system corresponding to measurements points are replaced by (3). In
practice, all the oﬀ-diagonal entries of the i-th rows are set to 0 and the diagonal one is set to c. The corresponding entries of the right hand side, bi are set equal to di . All the other entries b j are updated accordingly, by setting
b j = b j − i a ji di (i still ranging on the measurements nodes). This perturbation of the matrix is expected to aﬀect the
condition number of the system. The coeﬃcient c is tuned to minimize this eﬀect. In the following table we report
the condition number with the choice of c = 1 on two diﬀerent meshes.
mesh
40 × 10
80 × 20

no update
2.58e3
1.05e4

c=1
1.25e4
8.30e4

The condition number after the update is increased of about one order of magnitude (setting c = Δx or (Δx)2 yields
same results). This has the clear drawback of requiring a higher computational eﬀort in solving the linear systems.
Even more important is the fact that the solution of the system becomes more sensitive to the perturbations on the
data and in particular to the noise in the measures. Despite of its simplicity, this approach is therefore anticipated to
be extremely sensitive to the noise, as we see in the Numerical Results section.
Remark Domain Splitting We can split the problem by subdomains and then perform the numerical discretization
of subproblems separately. This corresponds to take in (2) alternatively all the test functions vi = 0, qi = 0 apart from
one. Then, we perform the discretization of each problem. Observe that in the ﬁrst s−1 subdomains we have Dirichlet
conditions over ∂Ωi . For this reason, we force the uniqueness of the pressure by taking a null average pressure or
ﬁxing the pressure in one node. Moreover, boundary data are supposed to be compatible with the incompressibility
constraint ∂Ω u · n dγ = 0. In principle, this method is fast and prone to parallelism, since each subproblem is solved
i
independently of the others. However, presence of the noise has two important drawbacks:
• the divergence compatibility condition is actually violated;
• measurements errors aﬀect the solution inside each domain, without ﬁltering.
Concerning the second point, it is known that perturbations on the boundary aﬀect the solution of a Stokes problem
with a decay featuring an exponential dependence on the distance from the boundary (see [12]). Presence of noise on
the interfaces brings therefore errors inside the domain, yielding extremely inaccurate results. For this reason we do
not dwell any longer with this approach, since it results more inaccurate than the others (errors are at least about ten
times larger than the others).

1235
5

M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
1 (2012)
1231–1239
M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
00 (2010)
1–9

2.3. Control based formulations
In this Section we present a diﬀerent, more general, approach based on the theory of control for distributed
systems. Let us introduce the problem: for all v ∈ H1Γw (Ω), q ∈ L2 (Ω)
p∇ · v dx −

ν∇u · ∇v dx −

S:
Ω

Ω

q∇ · u dx +

h v dγ = 0.

(4)

Γin

Ω

Here, h(x) ∈ H−1/2 (Γin ) is the Neumann data at the inﬂow boundary, while homogeneous Neumann boundary conditions are still assumed at the outﬂow. Let us denote by F the set of solutions to S as a function of the inﬂow Neumann
data h. Correspondingly, the discretized Stokes problem is denoted by Sh and the solution set by Fh . The basic
formulation of the problem reads: ﬁnd the inﬂow Neumann conditions such that the distance (to be deﬁned) between
velocity and data is minimal. As usual, we have two possible approaches, the Optimize then Discretize (OD) approach
and the Discretize then Optimize (DO) one.
Optimize then Discretize. We deﬁne the distance between solution and data as
J(u) =

1
2

u − d 2 dγ,

(5)

Γd

where d is here an extension of the vector data (for the sake of simplicity we do not change notation). We solve the
problem: ﬁnd h such that for the corresponding solution u to S, J(u) ≤ J(v), ∀v ∈ F . The Lagrangian of the problem
regarded as a constrained optimization procedure reads
L(u, p, λu , λ p , h) = J(u) +

Ω

ν∇u · ∇λu dx −

Ω

p ∇ · λu dx −

hλu dγ +
Γin

Ω

λ p ∇ · u dx;

(6)

where λu and λ p are the Lagrange multipliers associated with velocity and pressure. The necessary conditions for
optimality are (see [9])
⎧ ∂L
⎪
ν∇u · ∇vdx − p ∇ · vdx − hvdγ + q ∇ · u dx = 0 ∀v ∈ H1Γw , q ∈ L2
⎪
⎪
∂(λu ,λ p ) =
⎪
⎪
Γin
Ω
Ω
Ω
⎪
⎪
⎪
⎪
⎨ ∂L = (u − d) wdγ + ν∇ · λu ∇wdx + λ p ∇ · wdx − r ∇ · λu dx = 0 ∀w ∈ H1Γ , r ∈ L2
∂(u,p)
(7)
w
⎪
⎪
⎪
Γd
Ω
Ω
Ω
⎪
⎪
⎪
∂L
1/2
⎪
⎪
⎪
⎩ ∂h = − λu s dγ = 0 ∀ s ∈ H (Γin ).
Γin

Several methods are available for the discretization of this system; in this work we rely on the Finite Element (FE)
method. Let U ∈ RNu , P ∈ RN p and H ∈ RNh be the vectors representing the computed solutions on the grid points,
being Nu , N p and Nh the dimensions of the FE spaces they belong to, they solve the following linear system:
⎡
⎢⎢⎢ S O
⎢⎢⎢
⎢⎢⎣ J S
O NT

N
O
O

⎤
⎥⎥⎥
⎥⎥⎥
⎥⎥⎦

⎡
⎤
⎢⎢⎢ V ⎥⎥⎥
⎢⎢⎢
⎥
· ⎢⎢ Λ ⎥⎥⎥⎥ = F ,
⎣
⎦
H

S=

C BT
B O

,V =

U
P

,Λ =

Uλ
Pλ

.

(8)

Here, Uλ and Pλ represent the discrete lagrangian multipliers; C, B, J and N are the FE matrices coming from the discretization of the Laplacian, divergence, derivative of the functional J and boundary conditions; it is worth specifying
that the latter is associated with the integral on the inﬂow boundary and involves the control variable. Also, the right
hand side comes from the evaluation of the derivative of the functional and involves the data.
Remark A precise characterization of the set F is strictly related to the eﬃciency of using h as control variable.
In fact, the larger is F in the subset of solutions of the Stokes problem, the smaller can be the distance from the data.
This problem at the best of our knowledge is still open and will be subject of future works (see [13, 14]).

1236

M. M.
D’Elia,
A.A.Veneziani
Science001(2010)
(2012)1–9
1231–1239
D’Elia,
Veneziani/ /Procedia
Procedia Computer
Computer Science

6

Discretize then Optimize (DO). In this approach, we swap the discretization and optimization processes. We therefore
resort to the problem Sh that in the algebraic form reads SV = NH. The distance between the (discrete) velocity and
the data is deﬁned as
a
1
a
Jh (U) +
LH 22 = QU − d 22 +
LH 22 ;
(9)
2
2
2
being Q the selection matrix extracting the velocity U at the points where measures are available. Since data are
sparse and noisy and the problem can be ill-posed, a regularization term is added to the objective function, a is the
regularization parameter (chosen according to some suitable techniques) and L is a discretized diﬀerential operator
applied to the control variable H and will be speciﬁed later. In this discrete setting, we solve: ﬁnd H such that for
corresponding solution U ∈ Fh , Jh (U) ≤ Jh (V), ∀V ∈ Fh . For the solution of this minimization problem, we write the
Lagrangian, which reads
1
a
LH 22 + ΛT (SV − NH);
Lh (V, H, Λ) = DV − d 22 +
(10)
2
2
where D = [Q O] and all other terms are deﬁned as in (8). The set of necessary conditions for the optimality is given
by
⎧ ∂Lh
⎪
⎪
∂Λ = SV − NH = 0;
⎪
⎪
⎪
⎪
⎪
⎨ ∂Lh
T
T
(11)
⎪
⎪
∂V = D (DV − d) + S Λ = 0;
⎪
⎪
⎪
⎪
⎪
⎩ ∂Lh = aLT LH − NT Λ = 0.
∂H

Upon block elimination, we get the reduced system

(NT S−T DT DS−1 N + aLT L)H = NT S−T DT d.

(12)

By deﬁning Z=DS−1 N system (12) reduces to (ZT Z + aLT L)H = ZT d; Z is called sensitivity matrix, which is deﬁned
as Z=∂DV(H)/∂H and represents the derivative of the predicted data with respect to the control variable. The spectral properties of this matrix allow to determine the conditioning of the problem. Notice that, as long as the size of
Z remains small, we can compute it explicitly; as its dimension grows we can solve the system eﬃciently employing methods that require only matrix-vector multiplications for Z and ZT [15]. Finally, we point out that diﬀerent
techniques can be used for an optimal choice of the regularization parameter a. Among the others,we mention the
Discrepancy Principle (DP) and the Generalized Cross Validation (GCV) [16].
3. Numerical results
In this Section we report numerical results obtained performing the presented approaches on a 2D test case. All
the preliminary simulations presented in this work are based on the 2D Poiseuille ﬂow in the rectangular domain
Ω = [0, 5] × [−0.5, 0.5], whose analytical velocity reads: uex (x, y) = [1 − 4y2 , 0 ]T .
Data generation We assume data to be given on three internal layers and on the inﬂow boundary in correspondence of discretization nodes (in this way the space discretization step Δx and N, the number of measurement nodes,
are related). These data are generated adding to the exact solution a random noise uniformly distributed in space
(globally) and normally distributed point-wise (locally) in such a way that the Signal-to-Noise Ratio, SNR, is ﬁxed;
this fact determines the parameters of the error probability distribution in the generation process. In real applications
this value is strongly determined by the biomedical tools used to observe the data. In the case of noisy data from a 4D
scan of the aorta SNR is of the order of 10 for ﬂow measures.
Software details The preliminary comparison among the proposed approaches is performed combining two softwares: FreeFem++2 , for matrices generation, and Matlab, for the linear systems solution. Results presented in the last
2 Free

C++ like software available on www.FreeFem.org for the solution of 2D PDEs.

M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
1 (2012)
1231–1239
M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
00 (2010)
1–9

1237
7

Figure 3: Mean relative error for OD, DO, MU and D with SNR = 20 (left) and 8 (right).
paragraph on the DO approach are obtained with the C++ FE library lifeV 3 and displayed with the software ParaView.
Computational issues We implement the FE method with choice of compatible FE spaces P1bubble-P1 for the
velocity and pressure ﬁelds respectively. In the case of the DO method we choose the gradient as a smoothing regularizing operator and we generate the optimal parameter by means of DP and GCV methods (obtaining a parameter a
of the order of 10−9 , since the conditioning of the problem is not critical).
Comparison results We compare the results with a direct approach, which we call “Dirichlet” (D). This consists
in the solution of the forward Stokes problem with the prescription of the (noisy) velocity data only at the inﬂow and
it is a consistency benchmark. We expect data assimilation techniques to give more accurate results than this solution
(which is much cheaper). Fig. 3 reports the mean relative error
k=16

EU =
k=1

Uk − uex 2
,
ue x 2

(13)

being Uk the solution computed in correspondence of the k-th noise generation, out of 16 noise realizations with SNR
= 20 (left) and SNR = 8 (right). Even if much cheaper in terms of computational saving, the MU method is not
accurate enough since the sensitivity to the perturbation, incremented by the updating, makes it unreliable. For this
reason, this is not considered for any further investigation. The OD and DO approaches yield better accuracy than the
D one; the main issue related to them is the computational eﬀort.
Error analysis for the OD and DO approaches According to numerical results presented, we focus on the control
based techniques and we investigate in more details the dependence of the discretization error (with respect to the exact
solution) on the discretization parameter Δx and on the amount of noise. In correspondence of noise free data and
decreasing values of Δx we test the consistency of the method; in Fig. 4 we report for the OD and the DO approach
the l2 relative error versus Δx (in a logarithmic scale) and a quadratic reference curve; both methods preserve the
O(Δx2 ) behavior predicted by the FE theory: embedding our problem into the optimization scheme does not aﬀect
the FE convergence rate. Also, numerical simulations have been performed in correspondence of diﬀerent values of
SNR. We obtain a linear behavior of the discretization error as the amount of noise increases.
DO simulations with noise free and noisy data Among the methods presented, the DO technique results to be
the most accurate and cheaper than the OD one in terms of computational eﬀort. We present more speciﬁc results
3 Free

C++ library, which the authors are developers of, available on www.lifev.org.

1238

M. M.
D’Elia,
A.A.Veneziani
Science001(2010)
(2012)1–9
1231–1239
D’Elia,
Veneziani/ /Procedia
Procedia Computer
Computer Science

Figure 4: Relative error vs Δx =

1
1
1
10 , 20 , 40

8

in a loglog scale for OD (left) and DO (right).

Figure 5: Pressure and velocity assimilated with noise free data (in black).
employing noise free and noisy data. In this analysis we are mainly interested in the velocity error behavior; never1
, the
theless, in the noise free case, we also report the pressure error behavior. In Fig. 5, in correspondence of Δx = 20
recovered pressure and velocity vector ﬁeld is displayed together with the noise free data: in correspondence of the
internal layers the velocity matches the data (exact solution). Fig. 6 reports the computed velocity ﬁeld and a noisy
data generated with SNR = 10. We note the presence of the noise especially in the vertical component (zero in the
exact solution). Notice in Fig. 6 that even if the data features a non-zero vertical component as a by-product of the
noise, DA yields an almost horizontal velocity ﬁeld. This points out the role of DA as a ﬁltering process of noisy data.

4. Conclusion and future work
The present work represents an exploratory analysis of DA possible methods for incompressible ﬂuid dynamics, with particular emphasis on cardiovascular applications. In particular, the comparison among diﬀerent methods
showed that control based approaches are robust and accurate, even if computationally expensive. Despite their
straightaway implementation and low complexity, splitting methods are inaccurate because of their sensitivity to
noise. The focus of the ongoing work is the implementation of an eﬃcient solver for the nonlinear NS equations as a
combination of the DO method introduced in the present paper and and the common Newton method for the treatment
of the nonlinearity. In addition, we plan to analyze the dependence of the accuracy of the solution on the noise. In
fact, preliminary results show that the problem at hand is highly sensitive to the noise nature. Another issue to be
considered is the eﬀectiveness of the control variable h over the entire minimization process and, more in general, its
well posedness as a function of the data and of the control variable h. Finally, the ultimate goal consists in applying
these techniques to real 3D geometries in order to used the recovered velocity ﬁeld for the prediction of physical
variables of medical relevance.

M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
1 (2012)
1231–1239
M. D’Elia,
A. Veneziani
/ Procedia
Computer
Science
00 (2010)
1–9

1239
9

Figure 6: Velocity assimilated with noisy data (in black) with SNR = 10.
The authors wish to thank M. Perego (Emory University) and C. Vergara (University of Bergamo, Italy) for useful suggestions and comments in
preparing this work.
[1] L. Formaggia, A. Quarteroni, A. Veneziani (Eds.), Cardiovascular Mathematics, Springer, 2009.
[2] C. A. Taylor, M. Draney, Experimental and Computational Methods in Cardiovascular Fluid Mechanics, Ann Rev Fluid Mech 36 (2004)
197–231.
[3] L. Formaggia, A. Quarteroni, A. Veneziani (Eds.), Complex systems in Biomedicine, Springer, 2006.
[4] D. Steinman, Image-based CFD modeling in realistic arterial geometries., Annals Biomed. Eng. 30 (4) (2002) 483–497.
[5] M. Picinelli, A. Veneziani, D. A. Steinman, A. Remuzzi, L. Antiga, A framework for geometric analysis of vascular structures: Applications
to cerebral aneurysms, IEEE Trans Biomed Imag 28 (2009) 1141–1155.
[6] P. van der Velden, D. Sallee, E. Zaaijer, W. J. Parks, S. Ramamurthy, T. Q. Robbie, J. Huckaby, S. Chochua, M. E. Brummer, Systolic ﬂow
jet is an indicator of aortic root dilation for bicuspid aortic valves (2008).
[7] A. R. Robinson, P. F. Lermusiaux, Over view of data assimilation, Tech. Rep. 62, Harvard University, Cambridge, Massachusetts (Aug. 2000).
[8] K. Ide, P. Courtier, M. Ghil, A. Lorenc, Uniﬁed notation for data assimilation: Operational, sequential and variational, Journal of Meteorological Society of Japan 75 (Special) (1997) 181–189.
[9] M. D. Gunzburger, Perspectives in Flow Control and Optimization, Society for Industrial Mathematics, 2002.
[10] M. Sermesant, P. Moireau, O. Camara, J. Sainte-Marie, R. Andriantsimiavona, R. Cimrman, D. Hill, D. Chapelle, R. Razavi, Cardiac function
estimation from MRI using a heart model and data assimilation: advances and diﬃculties., Med Image Anal 10 (4) (2006) 656, 642.
[11] J. Lundvall, V. Kozlov, P. Weinerfelt, Iterative methods for data assimilation for burgers’ equation, Journal of inverse and ill-posed problems
14 (5) (2006) 505–535.
[12] A. Veneziani, C. Vergara, An approximate method for solving incompressible Navier-Stokes problem with ﬂow rate conditions, Comp Meth
Appl Mech Engr 196 (9-12) (2007) 1685–1700.
[13] J. L. Lions, On the controllability of distributed systems, PNAS 94 (1997) 4828–4835.
[14] E. Zuazua, Handbook of Diﬀerential Equations:Evolutionary Diﬀerential Equations, Vol. 3, Elsevier Science, 2006, Ch. Controllability and
Observability of Partial Diﬀerential Equations: Some results and open problems, pp. 1389–1417.
[15] E. Haber, U. M. Ascher, D. Oldenburg, On optimization techniques for solving nonlinear inverse problems, Inverse Problems 16 (5) (2000)
1263–1280.
[16] P. C. Hansen, Rank-deﬁcient and discrete ill-posed problems: numerical aspects of linear inversion, Society for Industrial and Applied
Mathematics, Philadelphia, PA, USA, 1998.

