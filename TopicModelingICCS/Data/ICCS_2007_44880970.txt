Fuzzy-Aided Syntactic Scene Analysis
Marzena Bielecka1 and Marek Skomorowski2
1

Department of Goeinformatics and Applied Computer Science,
AGH University of Science and Technology,
Al. Mickiewicza 30, 30-059 Krak´
ow, Poland
bielecka@agh.edu.pl
2
Institute of Computer Science, Jagiellonian University,
Nawojki 11, 30-072 Krak´
ow, Poland
skomorowski@ii.uj.edu.pl

Abstract. In syntactic pattern recognition a pattern can be described
by a graph. The problem of recognition is to determine if a pattern,
represented by a describing graph, belongs to a language L(G), generated
by a graph grammar G. The so-called IE graphs are used for pattern
description. They are generated by so-called ETPL(k) graph grammars.
The purpose of this paper is to present an idea of a new approach to
syntactic recognition of fuzzy patterns represented by fuzzy IE graphs,
followed the example of random IE graphs. This methodology can be
used in embodied multi-agent systems for a scene analysis.
Keywords: Syntactic pattern recognition, distorted patterns, graph
grammars.

1

Introduction

Agents are entities capable of taking account of what surrounds them. In referring to an embodied cognitive multi-agent system this means, among others,
that agents are managed to analyze the scene they act on. In particular, an
agent has got a symbolic and explicit representation of the surrounding world
([2], page 17). Syntactic pattern recognition based on graphs is one of the classical approach to this task.
In a node replacement graph grammar, a node of a derived graph is replaced
by a new subgraph, which is connected to the remainder of the graph. A node replacement is controlled by a production of a given graph grammar. An example of
a node replacement graph grammar is an ETPL(k) (embedding transformationpreserving production-ordered k-left nodes unambiguous) grammars introduced
in [3]. The so-called IE (indexed edge-unambiguous) graphs have been deﬁned in
[3] for a description of patterns (scenes) in syntactic pattern recognition. Nodes
in an IE graph denote pattern primitives. Edges between two nodes in an IE
graph represent spatial relations between pattern primitives. An idea of a probabilistic improvement of syntactic recognition of distorted patterns represented
This work was partially supported by the AGH grant number 1010140461.
Y. Shi et al. (Eds.): ICCS 2007, Part II, LNCS 4488, pp. 970–973, 2007.
c Springer-Verlag Berlin Heidelberg 2007

Fuzzy-Aided Syntactic Scene Analysis

971

by graphs is described in [4] and [6]. A random IE graph approach ([4,6]) is
proposed for such a description and an eﬃcient parsing algorithm for IE graphs
(the computational complexity is O(n2 )) is presented in [6].
In this paper we present an idea of approach to syntactic recognition by
fuzzy IE graphs, followed the example of random IE graphs. Fuzziness allows us
describe in proper way patterns that can not be presented univocally.

2

Fuzzy IE Graphs for Fuzzy Patterns Representation

Let us remind deﬁnition of an IE graph ([3]). An indexed edge-unambiguous
graph, an IE graph over Σ and Γ is a quintuple
g = (V, E, Σ, Γ, Φ),
where
V - is a ﬁnite, nonempty set of nodes to which indices have been ascribed in
an unambiguous way,
Σ - is a ﬁnite, nonempty set of node labels,
Γ - is a ﬁnite, nonempty set of edge labels,
E - is a set of edges of the form (v, λ, w), v, w ∈ V, λ ∈ Γ , such that index of
v is less than index of w,
Φ : V → Σ - is a node labeling function.
Assume that both labeled objects in nodes of a graph and spatial relations are
represented by fuzzy sets of a ﬁrst order with membership functions μi and νi
respectively. Let, furthermore, the set of all objects Σ be n-elemental and the set
of all spatial relations be k-elemental. Let us deﬁne, informally, a fuzzy IE graph
as an IE graph in which nodes labels are replaced by a vector μ = [μ1 , . . . , μn ] of
values of membership functions μi , i ∈ {1, . . . , n} and edges labels are replaced
by vector ν = [ν1 , . . . , νk ] of values of membership functions νj , j ∈ {1, . . . , k} see Fig.1.
The fuzzy measure of an outcome IE graph, obtained form a given fuzzy IE
graph, is equal to the value of a T -norm T of the values components of the node
and edge vectors. An axiomatic deﬁnition of T -norms is given in [5], deﬁnition
4.22, page 80. Having a fuzzy IE graph R the fuzzy measure λr of an outcome
graph r is calculated as
P

λr = T

T

p=1

S

μpfr (p) , s=1
T νgsr (s)

where
p - is a number of a regarded node,
s - is a number of an edge,
fr (p) - is a chosen component number of a vector μp whereas
gr (s) - is a chosen number of component of a vector ν s .

972

M. Bielecka and M. Skomorowski

If the arithmetic product is used as a T -norm then the presented parsing algorithm (see Section 3) is identical to the random parsing algorithm described
in [6].

2
b(0.8)
d(0.3)
{p(0.2), r(0.9)}

1

{t(1.0)}
{s(0.8), t(0.3)}

a(1.0)

5

{r(0.2), s(0.7)}

c(0.9)
a(0.2)
{r(1.0)}

3
d(0.7)
b(0.4)

{s(0.7), t(0.2)}

6
e(0.8)
g(0.3)

{t(0.9), u(0.2)}
{t(1.0)}

4

7

g(0.9)
a(0.2)

f(1.0)

{s(0.3), t(0.8)}

{v(1.0)}

{t(0.2), u(0.9)}

8
h(0.8)
b(0.3)
Fig.1. An example of fuzzy IE graph representing an unknown pattern

3

Parallel Parsing of Fuzzy IE Graphs

Given an unknown pattern represented by a fuzzy IE graph R, the problem of
recognition of a pattern under study is to determine if an outcome IE graph r,
obtained from the fuzzy IE graph R, belongs to a graph language L(G) generated
by an ETPL(k) graph grammar G. In the proposed parallel and cut-oﬀ strategy
of fuzzy IE graph parsing a number of simultaneously derived graphs is equal to
a certain number limit. In this case, derived graphs spread through the search
tree, but only the best, that is with maximum measure value, limit graphs are
expanded.
Let us introduce the following notations: Z - a starting graph of an ETPL(k)
graph grammar G, P - is a set of productions of the grammar G, R - an analyzed
fuzzy graph. The idea of the proposed parsing algorithm is the following:

Fuzzy-Aided Syntactic Scene Analysis

973

1. Apply to the starting graph Z productions belonging to the set P , which
are admissible for further derivations. If such productions do not exist then
stop the parsing algorithm.
2. For subgraphs obtained in the point 1, compute values of their membership
functions using a given T -norm.
3. For further derivation choose a number (limit) of derived subgraphs with the
biggest values of membership function.
4. To the chosen subgraphs apply these productions from P which are admissible for further derivations. If such productions do not exist then stop the
parsing algorithm.
5. Repeat the points 3 and 4 until fuzzy-outcome graph R is obtained.
6. Stop the parsing algorithm.
An example of the introduced algorithm application can be found in [1].

4

Concluding Remarks

In this paper we have proposed an idea of a new approach to recognition of
fuzzy patterns represented by graphs. To take into account variations of a fuzzy
pattern under study, a description of the analyzed pattern based on fuzzy sets
of the ﬁrst order was introduced. The fuzzy IE graph has been proposed here for
such a description. It should be stressed that informal introduction of this class
of graphs has been forced by the volume limitation of the paper. The parsing
algorithm, having the computational complexity O(n2 ), presented in [3,6], is
extended in such a way that fuzzy patterns, represented by fuzzy IE graphs,
can be recognized. In the algorithm a T -norm is used for calculation of value of
membership measure of output graphs. Such solution makes that the algorithm
is very ﬂexible. In particular, if arithmetic product is used as a T -norm then the
algorithm is the same as the random one described in [6].

References
1. Bielecka M., Skomorowski M., Bielecki A.: Fuzzy-syntactic approach to pattern
recognition and scene analysis, under revision.
2. Ferber J.: Multi-Agent Systems. An Introducing to Distributed Artiﬁcial Intelligence. Addison-Wesley, Harlow (1999)
3. Flasi´
nski M.: On the parsing of deterministic graph languages for syntactic pattern
recognition. Pattern Recognition, Vol. 26 (1993) 1-16
4. Flasi´
nski M., Skomorowski, M.: Parsing of random graph languages for automated
inspection in statistical-based quality assurance systems. Machine Graphics and
Vision, Vol. 7 (1998) 565 - 623
5. Rutkowski L.: Artiﬁcial Intelligence Techniques and Methods. PWN, Warszawa
(2005) (in Polish)
6. Skomorowski, M.: Use of random graph parsing for scene labeling by probabilistic
relaxation. Pattern Recognition Letters, Vol. 20 (1999) 949-956

