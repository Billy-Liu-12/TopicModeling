Procedia Computer Science
Volume 51, 2015, Pages 1033–1042
ICCS 2015 International Conference On Computational Science

Multi-variant Planing for Dynamic Problems
with Agent-based Signal Modeling
Szymon Szomi´
nski, Wojciech Turek,
˙
Malgorzata Zabi´
nska, and Krzysztof Cetnarowicz
AGH University of Science and Technology
{szsz,wojciech.turek,zabinska,cetnar}@agh.edu.pl

Abstract
The problem of planning for groups of autonomous beings is gaining attention over the last
few years. Real life tasks, like mobile robots coordination or urban traﬃc management, need
robust and ﬂexible solutions. In this paper a new approach to the problem of multi-variant
planning in such systems is presented. It assumes use of simple reactive controllers by the
beings, however the state observation is enriched by dynamically updated model, which contains
planning results. The approach gives promising results in the considered use case, which is the
Multi Robot Task Allocation problem.
Keywords: planning, agent systems, mobile robot management

1

Introduction

Planning for groups of beings coexisting in common environment is becoming a very important
research area. New solutions can improve eﬀectiveness of many real-life systems, where large
number of independent beings execute their tasks, causing conﬂicts or collaboration needs. In
many cases the behavior of the beings cannot be precisely predicted or controlled, which signiﬁcantly complicates the planing tasks. Moreover, many processes require very fast execution,
leaving little time for planning or re-planning.
Real-life examples of such processes include network routing, urban traﬃc management or
mobile robot coordination. In network routing systems large number of devices collaborate
to provide the highest possible quality of service. Unexpected situations concerning device
failures, delay or traﬃc intensity cannot be precisely predicted and should be handled within
milliseconds. In case of urban traﬃc control the need for detecting and handling unexpected
situations is even more important, as safety of traﬃc participants depends on it.
The problem of mobile robots coordination can be considered in diﬀerent applications, like
motion planning, formation control or task assignment [4]. All these problems share similar
features. Planning algorithms are typically complex and time consuming and the plan execution
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2015
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2015.05.251

1033

Multi-variant Planing for Dynamic Problems

S. Szomi´
nski et al.

process is often altered by unexpected situations. The problem of Multi-Robot Task Allocation
(MRTA) will be used as an example in this paper.
Classical artiﬁcial intelligence [8] does not provide dedicated solutions to the described class
of problems. Typically planning for multiple beings is reduced to the classical planning problem
with large dimensionality of the search space. Detailed analysis of existing approaches to the
problem of planning for multiple beings (presented in the next section) leads to the following
conclusions:
• The problems of planning actions of multiple beings are complex, therefore ﬁnding
(sub)optimal plans is a time-consuming process.
• Scalability of the solutions based on complex algorithms is very limited.
• Most of the solutions return only one, (sub)optimal plan, which results in signiﬁcant
problems with robustness. When the plan execution fails the system can become very
ineﬃcient because of the need of costly replanning.
These issues suggest looking for diﬀerent approach to the speciﬁed problem, which is designing a reactive (behavioral) controllers [1] for the beings. The controller is a set of rules
which are triggered by observation of the environment. Subsequent decisions allow the beings
to eventually reach desired state. Reactive controllers make it possible to create large scale,
robust systems, which can successfully cope with inaccurate execution of orders or unexpected
changes in the problem itself.
Putting ﬂexibility over performance, the reactive systems suﬀer from diﬀerent set of issues,
like inability to guarantee completeness or predict task execution time. Moreover, it is not
always possible to create a reactive controller for a complex coordination problem – simple
observation of current environment state may be insuﬃcient.
In this paper we propose a new approach to the problem of controlling the behavior of
multiple coexisting beings. It aims at providing ﬂexibility of behavioral controllers together with
the ability of using intelligent planning. The approach is based on the concept of using intelligent
model of the environment at the decision making stage. The intelligent model is composed of
software agents, which represent, exchange and expand knowledge about the environment and
the problem to be solved. The software agent paradigm applied widely in various domains [2],
seems very well suited for solving problems of managing multi-robot systems [11, 10].
The agent system constructing the environment model represents the distributed planning
intelligence of the system. A set of dedicated agents knows possible actions in particular states of
the beings. Interactions in the agent system itself lead to spreading information about possible
actions’ evaluation. This information is used by the beings for making decisions. Diﬀerent
decisions in particular state are available, resulting in multiple variants of behavior for each
entity. Therefore, the agent system provides the beings with the multi-variant plans.
The mechanism of spreading information in the agent system is inspired by biological signals
observed in the real world, like smell or sound. Te concept has been used in [15, 9], where
simpliﬁed signal spreading algorithm has been presented.
In this paper we introduce the new concept of model intelligence represented by various
types of agents creating the model. We also present the application of the method for the
Multi-Robot Task Allocation problem, which has been implemented and tested using a 3D
mobile robot simulation system.
1034

Multi-variant Planing for Dynamic Problems

2

S. Szomi´
nski et al.

Planing for Dynamic Problems

The considered problem of planning for multiple beings actions can be addressed with various
methods. Classical approach comprises AI planning, domain-independent planning as in [8],
where the search space is related to planning for all beings at once making the joined state.
Domain-independent planning has received signiﬁcant attention since the 1980s [13]. It Is
still being researched focusing on heuristic functions and methods for constructing new heuristic
functions [5]. These approaches are often used in the robotics domain wher simple path panning
problems are considered [6]. Diﬀerent planning algorithms provide optimal or sub-optimal
solutions to the given problem, however, they deliver one plan only, which does not include
variants.
There is also a group of methods which assume the partial lack of knowledge needed for
a planning being to establish the optimal plan. Such an approach is called planning under
uncertainty, and it takes into consideration dynamic changes in the problem conﬁguration.
Uncertainty modeling is the basis of solutions in this case, and the way of modeling can fall
into one of four categories as proposed in [7]: conceptual models, analytical models, AI-based
models and simulation models. Probabilistic reasoning, predicting possible situations using
probability distributions are usually used to solve the above-mentioned problems.
The particular problem considered in this paper, which is Multi-Robot Task Allocation
(MRTA) has been solved mostly using centralized and distributed methods.
There are two basic types of approaches towards MRTA problems: centralized and decentralized ones. Complexity of the problem, which results from the considered variant, decides
on diﬀerent optimization algorithms to be used for calculating the best allocation.
The algorithm needs knowledge about the environment, as well as robots and tasks, which
require intensive communication. Centralized solutions use single algorithm executed on a single
computer to make all decisions concerning the allocation of robots to tasks. In most cases this
includes choice of a leader of the group [3]. Centralized approach can in theory give the best i.e.
closest to optimal results. However several properties of this method, e.g. single point of failure,
very intensive communications and inability to react fast for changes, have implied focusing
on decentralized approach. There are many variants of distributed algorithms that have been
proposed to conquer these problems They are mostly based on predeﬁned negotiation protocols,
which determine what information is to be exchanged and what robots’ reaction should be in
given situations [17]. Such solutions do not possess a single failure point, but they still suﬀer
from compound communication protocols and do not react on changes quickly.
There is a group of solutions that solve the allocation task with no obvious communication
between robots. Then, decisions of them are based on observation of other robots and an
environment, as e.g. the low-level task assignment in [16])). Such swarm solutions are more
robust. Functioning of the system is not endangered by a single robot failure. However creation
of a fully autonomous algorithm for a complex task of the class of MRTA is not direct.
The method presented in this paper uses a behavioral controller for calculating decisions
of particular entities in given situations. However the input for the controller is not fully
determined by observation of the real environment surrounding the being. It is also derived
from a model of the environment created and updated by an agent system. The model represents
multi-variant plans keeping ﬂexibility, durability and scalability. Introducing intelligent agents
into the model makes it possible to include complex planning.
1035

Multi-variant Planing for Dynamic Problems

3

S. Szomi´
nski et al.

Agent-based Model of Information Transfer

One of application areas of intelligent systems is management of groups of collaborating mobile
robots (mobile robots systems) or more general mobile beings systems.
We can consider two basic elements in such systems - a group of mobile beings and an
environment, where these beings act. The mentioned beings may move in the environment and
change it, what enables execution of tasks which occur in the environment. We assume that
tasks appear at random in the environment and their parameters are also unpredictable. It
creates a situation, that environment of mobile being actions changes dynamically what makes
planning actions of mobile beings much more diﬃcult.
Management of mobile beings may be considered as realization of two tasks, namely a
strategic aim concerning actions of beings’ group as a whole and tactical goals concerning
actions of a given being (or beings’ subgroup) within a group.
Strategic management should be realized as an intelligent one, with planning complex tasks
and applying global view on an environment, while tactical approach requires to be reactive,
behavioral and based on simple observations of the environment. A system using a model driven
approach should be considered to realize such a management. This model-driven approach is
based on the following idea: in the cyberspace there is a model of the mentioned system of
mobile-beings acting in the real space. This model in the cyberspace comprises an environment
model and models of beings that are realized as agents. So, the whole mobile-beings system
(e.g. mobile-robots system) is modeled in the cyberspace as an agent system.
As a result we have a real environment and mobile beings acting in it and its model composed
of a virtual environment in the cyberspace, and agents modeling beings’ behavior.
The virtual environment created this way may be enriched with properties which do not
occur in the real environment i.e. we build the so-called enhanced model. Introducing the
enhanced model enables easier and more eﬃcient management of the mobile beings in the real
environment.
Since parameters of the real environment change in an unpredictable and dynamic way, to
realize the strategic goals, it is necessary to prepare several versions of a plan which leads to
the multi-variant planning approach.
The most often used models of robots’ environments are diﬀerent types of graphs. The
nodes are places where agents may reside and where resources are located, as well as tasks for
realization. The edges deﬁne a structure of the graph environment, creating relation between
nodes (neighborhood) or transition between states.
To realize strategic planning by tactical actions, agents should have ability of acquiring the
more detail information. This information is about this part of environment where a given
agent remains and in a more general form about its neigbourhood.
To acquire such information we propose the method of signals spreading. The signal can
be used to carry information between agents, and between agents and environment resources.
We can observe diﬀerent ways of realization of transfer of signals in a given environment. The
domain of robotics has already aplied some methods using signal dissemination in the virtual
space like a diﬀusion of medium such as odor (pheromone in the ant systems) [9] or sounds
(ultrasounds in bat systems [14]).
The medium may be generated by some elements of the system (e.g. tasks) and received
by others elements (e.g. agents) which are going to manage tasks execution. Distribution of
medium is deﬁned by appropriate rules, like diﬀusion deﬁned in physics, resulting in the medium
is transferred from a part of the environment where there is higher intensity of the medium to
neighbor places where the intensity of the medium is lower. Such approach can be compared to
1036

Multi-variant Planing for Dynamic Problems

S. Szomi´
nski et al.

concept of gradient or potential ﬁeld methods. However, simple rules are insuﬃcient in complex
coordination problems because they do not guarantee completeness.
The idea presented in this work involves more intelligent rules of transferring information,
which can be compared to ”gossiping”. For this purpose it is necessary to provide the system
with entities realizing operation of ”gossiping”. In the virtual environment an appropriate
agent, called ai , plays such a role (index i enables identiﬁcation of the agent in the agent
system).
Summarizing the dissemination of the information may be realized as follows (ﬁg. 1):
• Agent ai is responsible for particular fragment of the environment.
• Given agent ai obtains information (a signal) sent by one of neighboring agents.
• Agent ai decides when and where to send this information (a signal).

a4

a6
a9

a3

a5
a2

a1

a8
a7

Figure 1: Schema of exemplary transfer of gossip among agents.
Such a way resembles dissemination of a gossip in a society. Agent ai choosing a receiver for
the transferred signal can realize a kind of ”intelligence” of the process of information distribution in the system. It results in non-uniform distribution of information in the environment
which is a multi-variant plan. Every agent can have several diﬀerent variants of information
received from diﬀerent sources.

4

Implementation for the Multi-Robot Task Allocation
Problem

The exemplary problem used for testing the proposed approach is the Multi-Robot Task Allocation, where a group of mobile robots has to be assigned to a set of tasks located in the
environment. Various variants of the problem have been considered by researchers [4], diﬀering
in the level of dynamics. In our tests we assume that the tasks can appear on random basis
in random locations in the environment. Such assumption makes all time-demanding planning
solution useless.
The agent system, representing the model of the environment, covers the workspace of
robots by assigning equal square areas to individual agents. Each agent has 8 direct neighbors
it can communicate with (agents on at the edge of the environment can have less). Each agent
processes signals of eight directions, each pointing a neighbor area. The direction with the
1037

Multi-variant Planing for Dynamic Problems

S. Szomi´
nski et al.

highest value of signal is considered most attractive for robots. There are two basic sources of
signal: tasks and robots.
Depending on the type of the environment fragment and its current state, the agent will
have a diﬀerent strategy concerning signal propagation, generation and attenuation. Once an
agent detects a task in the assigned environment area, it starts to generate attracting signal to
all its neighbors (Figure 2a.). When a robot enters the area, the agent emits negative (repelling)
signal.
Over the time the agents exchange (propagate) the information about the signal. The basic
signal propagation rules in the lattice of agents is presented in Figure 2b.



























































	



Figure 2: Basic signal generation (a.) and propagation (b.) rules.
The normal signal (vertical and horizontal directions) is passed forward, while the diagonal
signal spreads to three directions. Putting the propagation rules more formally, we can say that
each agent an,m ∈ A representing cell n, m of the lattice, stores a vector as of eight signiﬁcant
real-valued signal information:
asx,y
n,m

f or x ∈ {−1, 0, 1}, y ∈ {−1, 0, 1}

(as0,0
n,m is skipped)

(1)

The value asi,j
n,m represents the attractor strength of the agent an+i,m+j .
The basic propagation rule, presented in in Figure 2b. can be reduced to the following
propagation function P :
P (asx,y
n,m ) =

asx,y
x=0∧y =0
n+x,n+y ,
x,y
x−y,y−x
asn+x,n+y + asx+y,x+y
n+x,n+y + asn+x,n+y

(2)

This method of exchanging the signal between agents results in uniform distribution of the
signal in the model. The eﬀect of signal diﬀerentiation has been achieved by adding signal
memory and attenuation. The propagated value from a neighbor agent is added to the current
value of the agent. Calculated value is reduced according to a given attenuation factor. This
results in signal strength distribution dependent on distance from detected tasks.
The problem of obstacles in the environment has been addressed using the application
of diﬀerent propagation strategies. A disabled agent representing inaccessible fragment if the
environment neither accepts nor distributes signal propagation information (Fig. refﬁg:difract).
The above-mentioned algorithm for signal propagation needs additional rules for distributing
signals behind obstacles. The proposed solution is inspired by the diﬀraction phenomenon and
1038

Multi-variant Planing for Dynamic Problems



S. Szomi´
nski et al.































































Figure 3: Diagonal (a.) and normal (b.) signal diﬀraction (the dotted arrows) implemented by
agents propagation behaviors.
is implemented by an agent located next to a disabled agent. The simple rules of adding one
diagonal propagation message (marked as dotted arrow in Figure 3) is suﬃcient to cover whole
environment with signal.
The presented rules of signal generation, propagation and attenuation are suﬃcient for
solving the MRTA problem successfully, which will be shown in the next section. Each of the
robots executes the same, fully reactive algorithm. In the ﬁrst stage of each step the robot checks
distance sensors readings to ﬁnd out if a sudden turn or emergency stopping is required. If not,
the agent representing the robot contacts the agent responsible for the current robot’s location
and collects its as vector. The angular velocity of the robot is set for a value proportional to
the angle between robot’s orientation and the direction of the strongest attractor signal.
The agent-based environment model has been further enriched with additional behaviors of
agents. In order to improve distribution of robots in the environment the repeller pushing
behavior has been proposed. When an agent detects a robot in its assigned area it generates a
repelling signal in order to discourage other robots. The repeller pushing behavior also analyze
the velocity of the robot and notiﬁes agents in front of the robot to generate proper repelling
signal. The diﬀerence is presented in Figure 4a.

Figure 4: The repeller pushing behavior (a.): one the left no pushing is used, on the right the
signal is generated in front of the moving robot. The signal generated by a directional emitter
located (b.)
1039

Multi-variant Planing for Dynamic Problems

S. Szomi´
nski et al.

Another interesting behavior which has been tested was the directional emitter. The
strategy of an agent located in a narrow passage has been modiﬁed so that it constantly generated attracting signal from one side of the passage and repelling from the other. The generated
is presented in Figure 4b. Properly located emitters encourage robots to circulate in the environment, which turned out to improve the performance of the MRTA solution.
Many other behaviors of the agents in the environment model can be easily added in order to
improve the performance or solve particular situations in the system. The greatest advantage
of the approach is that the robot controller remains very simple and fully reactive, which
guarantees ﬂexibility and robustness of the system.

5

Experiments and Results

The experiments on the created implementation of the solution have been carried out using
the RoBOSS simulator [12]. The simulator makes it possible to deﬁne arbitrary shape of
the environment and various types of mobile robots. It can cooperate with client programs
connected via network interfaces, which simpliﬁed implementation of reactive controllers and
the agent system.
In order to compare he developed solution with other approaches, two other algorithms have
been implemented. The ﬁrst, fully distributed algorithm with autonomous greedy approach,
where each robot pursuits the closest task. The algorithm continuously leads to situations
where several robots approach the same task, which is far from optimal. The second algorithm
was fully centralized wich allocated tasks to robots calculating minimal sum of distances.
Both algorithms are provided as reference points for the tested solution. The proposed
reactive approach cannot be better than the centralized planner and should not be worse than
the distributed greedy algorithm.
The ﬁrst test environment was a single rectangular room (Figure 5a.), where four robots
were supposed to reach locations of appearing tasks. There were four tasks simultaneously
present in the environment. After a task was ﬁnished, a new one was immediately created in a
random location.

Figure 5: Two environments used in the experiments. On the left: two visualizations of the
basic scenario with four robots. On the right: the environment divided into four connected
spaces.
Each experiment has been conducted until 1000 tasks were fulﬁlled. The average time of
1040

Multi-variant Planing for Dynamic Problems

S. Szomi´
nski et al.

reaching a task for all three methods is shown in Table 1.

time

autonomous-greedy
5,9 s

centralized-planning
2,8 s

multi-variant
4,8 s

Table 1: Results of the MRTA experiments with four robots.

The multi-variant method provided results signiﬁcantly better than the autonomous greedy
approach. During the execution proper behaviors of robots splitting a group in order to reach
diﬀerent tasks were often observed.
More complicated environment with four rooms (Figure 5b.) showed the advantages of the
solution even better. Both the autonomous-greedy and centralized-planning method failed to
provide proper operation because of lack of required navigation method – ﬁnding doorways
leading to desired tasks would require another algorithm. On the other hand it turned out
that the multi-varant method provides a robust navigation method automatically, without any
modiﬁcations to the algorithm.
Table 2 shows the results of two versions of the multi-variant algorithm. The basic version
is compared to the version enriched with directional four emitter located in all doors, which
provoked robots’ circulation.

time

basic multi-variant
4,9 s

multi-variant with emitters
4,2 s

Table 2: Results for the multi-variant method in complex environment.

The results show two interesting features of the solution. The ﬁrst is that the presence of
the obstacles does not inﬂuence the results signiﬁcantly. The second is the improvement of the
performance after adding the directional emitters. It turned out that constantly moving robots
locate tasks faster than robots waiting for tasks to appear. Further experiments are needed to
explain this phenomenon.

6

Conclusions

Planning for multiple beings coexistent in common environment is a signiﬁcant problem which
will probably gain importance. Scalable and robust solutions will be needed to solve real-life
problems of robot coordination or traﬃc management.
The approach presented in this paper gives very promising results. Combination of behavioral controllers of autonomous beings, planning intelligence in separated model layer and
agent-based implementation oﬀer a set of very desirable features. Obtaining coordinated behaviors of beings without continuous and explicit communication seem a signiﬁcant achievement.

Acknowledgement
The research leading to these results has received founding from the Polish National Science
Centre under the grant no. DEC-2011/01/D/ST6/06146.
1041

Multi-variant Planing for Dynamic Problems

S. Szomi´
nski et al.

References
[1] Rodney Brooks. Intelligence without representation. Artiﬁcial Intelligence, 47:139–159, 1991.
[2] A. Byrski and R. Schaefer. Formal model for agent-based asynchronous evolutionary computation.
In Evolutionary Computation, 2009. CEC ’09. IEEE Congress on, pages 78–85, May 2009.
[3] M. Dias and A. Stentz. A market approach to multirobot coordination. Technical report, 2001.
[4] Brian P. Gerkey and Maja J. Matari´c. A formal analysis and taxonomy of task allocation in
multi-robot systems. The International Journal of Robotics Research, 23(9):939–954, 2004.
[5] Emil Keyder and H. Geﬀner. Trees of shortest paths vs. Steiner trees: Understanding and improving delete relaxation heuristics. In Proceedings of the 21st International Joint Conference on
Artiﬁcial Intelligence (IJCAI 2009), pages 1734–1749, 2009.
[6] Konrad Kulakowski, Piotr Matyasik, and Sebastian Ernst. Modeling indoor lighting inspection
robot behavior using concurrent communicating lists. Expert Systems with Applications, 41(4,
Part 1):984 – 989, 2014.
[7] J. Mula, R. Poler, J.P. Garc´ıa-Sabater, and F.C. Lario. Models for production planning under
uncertainty: A review. International Journal of Production Economics, 103(1):271 – 285, 2006.
[8] S. J. Russell and P. Norvig. Artiﬁcial Intelligence: A Modern Approach. Prentice Hall, 3rd edition
edition, 2009.
[9] T. Sosnicki, W. Turek, K. Cetnarowicz, and M. Zabinska. Dynamic assignment of tasks to mobile
robots in presence of obstacles. In Methods and Models in Automation and Robotics (MMAR),
2013 18th International Conference on, pages 538–543, Aug 2013.
[10] Wojciech Turek, Krzysztof Cetnarowicz, and Wojciech Zaborowski. Software agent systems for
improving performance of multi-robot groups. Fundam. Inf., 112(1):103–117, January 2011.
[11] Wojciech Turek, Robert Marcjan, and Krzysztof Cetnarowicz. Agent-based mobile robots navigation framework. In VassilN. Alexandrov, GeertDick van Albada, PeterM.A. Sloot, and Jack
Dongarra, editors, Computational Science – ICCS 2006, volume 3993 of Lecture Notes in Computer
Science, pages 775–782. Springer Berlin Heidelberg, 2006.
[12] Wojciech Turek, Robert Marcjan, and Krzysztof Cetnarowicz. A universal tool for multirobot
system simulation. In Knowledge-Driven Computing, volume 102 of Studies in Computational
Intelligence, pages 289–303. Springer Berlin Heidelberg, 2008.
[13] David E Wilkins. Domain-independent Planning: Representation and Plan Generation. Artiﬁcial
Intelligence, 22(3):269–301, 1984.
[14] Xin-She Yang. A new metaheuristic bat-inspired algorithm. In Nature Inspired Cooperative Strategies for Optimization (NICSO 2010), volume 284 of Studies in Computational Intelligence, pages
65–74. Springer Berlin Heidelberg, 2010.
[15] Malgorzata Zabinska, Tomasz Sosnicki, Wojciech Turek, and Krzysztof Cetnarowicz. Robot task
allocation using signal propagation model. Procedia Computer Science, 18(0):1505 – 1514, 2013.
2013 International Conference on Computational Science.
[16] D. Zhang, Guangming Xie, Junzhi Yu, and Long Wang. An adaptive task assignment method for
multiple mobile robots via swarm intelligence approach. In Computational Intelligence in Robotics
and Automation, pages 415–420, June 2005.
[17] Xiaoming Zheng and Sven Koenig. K-swaps: Cooperative negotiation for solving task-allocation
problems. IJCAI’09, pages 373–378, San Francisco, CA, USA, 2009.

1042

