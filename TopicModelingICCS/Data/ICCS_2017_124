Available online at www.sciencedirect.com

ScienceDirect
This
spaceComputer
is reserved
for108C
the Procedia
header, do not use it
Procedia
Science
(2017) 1773–1782
This
space
is
reserved
for
the
Procedia
header,
This
space
is
reserved
for
the
Procedia
header, do
do not
not use
use it
it
This
space
is
reserved
for
the
Procedia
This space is reserved for the Procedia header,
header, do
do not
not use
use it
it
This space is reserved for the Procedia header, do not use it

International Conference on Computational Science, ICCS 2017, 12-14 June 2017,
Zurich, Switzerland

Feynman
loop numerical
integral expansions
Feynman
Feynman loop
loop numerical
numerical integral
integral expansions
expansions
for
3-loop
vertex
diagrams
Feynmanfor
loop
numerical
integral
expansions
3-loop
vertex
diagrams
for
3-loop
vertex
diagrams
1
de Doncker
and Fdiagrams
Yuasa222
1
for EEE3-loop
vertex
1
de
Doncker
and
F
1
1
de Doncker and F Yuasa
Yuasa22
1
1
1
1
1

E de Doncker and F Yuasa

Western Michigan University, Kalamazoo MI 49008, U.S.A.
1 Kalamazoo MI 49008,
2
Western
Michigan
University,
U.S.A.
Western
University,
Kalamazoo
MI 49008,
U.S.A.
E
de Doncker
and
F Yuasa
elise.dedoncker@wmich.edu
Western Michigan
Michigan
University,
Western
Michigan
University, Kalamazoo
Kalamazoo MI
MI 49008,
49008, U.S.A.
U.S.A.
elise.dedoncker@wmich.edu
2
elise.dedoncker@wmich.edu
High
Energy
Accelerator
Research
Organization
(KEK),
Tsukuba,
Ibaraki,
305-0801, Japan
elise.dedoncker@wmich.edu
elise.dedoncker@wmich.edu
2
1
2 High Energy Accelerator
Research
Organization
(KEK),
Ibaraki,
Western Michigan
University,
Kalamazoo
MI 49008,
U.S.A.305-0801,
2
High Energy
Energy Accelerator
Accelerator
Research
Organization
(KEK), Tsukuba,
Tsukuba,
Ibaraki,
305-0801, Japan
Japan
2 High
fukuko.yuasa@kek.jp
Research
Organization
(KEK),
Tsukuba,
Ibaraki,
High Energy Accelerator Research
Organization (KEK), Tsukuba, Ibaraki, 305-0801,
305-0801, Japan
Japan
fukuko.yuasa@kek.jp
elise.dedoncker@wmich.edu
fukuko.yuasa@kek.jp
fukuko.yuasa@kek.jp
fukuko.yuasa@kek.jp
2
High Energy Accelerator Research Organization (KEK), Tsukuba, Ibaraki, 305-0801, Japan
fukuko.yuasa@kek.jp
Abstract

Abstract
Abstract
The
inclusion of higher order corrections by multi-loop diagrams is required in perturbation methods
Abstract
Abstract
The
inclusion
of
highercalculations
order corrections
multi-loop
diagrams
is
required
perturbation
methods
The
inclusion
of
by
multi-loop
diagrams
is
in
perturbation
methods
for precise
theoretical
of highby
interactions.
address in
3-loop
vertex Feynman
The
inclusion
of higher
higher order
order corrections
corrections
byenergy
multi-loop
diagramsWe
is required
required
in
perturbation
methods
The
inclusion
of
higher
order
corrections
by
multi-loop
diagrams
is
required
in
perturbation
methods
Abstract
for
precise
theoretical
calculations
of
high
energy
interactions.
We
address
3-loop
vertex
Feynman
for
precise
theoretical
calculations
of
high
energy
interactions.
We
address
3-loop
vertex
Feynman
diagrams
with
masslesscalculations
internal lines,
and
which
may
exhibit ultra-violet
(UV) 3-loop
singularities.
The
comfor
precise
theoretical
of
high
energy
interactions.
We
address
vertex
Feynman
for
precise
theoretical
calculations
of
high
energy
interactions.
We
address
3-loop
vertex
Feynman
The
inclusion
of
higher internal
order corrections
by
multi-loop
diagrams
is required
insingularities.
perturbationThe
methods
diagrams
with
massless
lines,
and
which
may
exhibit
(UV)
comdiagrams
with
massless
lines,
and
which
may
exhibit
ultra-violet
(UV)
singularities.
The
computational
methods
targetinternal
automatic
numerical
integration
andultra-violet
extrapolation
to approximate
the
leading
diagrams
with
massless
internal
lines,
and
which
may
exhibit
ultra-violet
(UV)
singularities.
The
comdiagrams
with
massless
internal
lines,
and
which
may
exhibit
ultra-violet
(UV)
singularities.
The
comfor
precise
theoretical
calculations
of
high
energy
interactions.
We
address
3-loop
vertex
Feynman
putational
methods
target
automatic
numerical
integration
and
extrapolation
to
approximate
the
leading
putational
methods
target
automatic
numerical
integration
and
extrapolation
to
approximate
the
leading
coefficients
of the integral
expansionnumerical
with respect
to the dimensional
regularization
parameter.
Converputational
methods
target
automatic
integration
and
extrapolation
to
approximate
the
leading
putational
methods
target
automatic
numerical
integration
and
extrapolation
to
approximate
the
leading
diagrams
with
massless
internal
lines,with
and respect
which may
exhibit
ultra-violet
(UV) singularities.
The
comcoefficients
of
the
integral
expansion
to
the
dimensional
parameter.
Convercoefficients
of
the
integral
expansion
with
respect
to
the
dimensional
regularization
parameter.
Convergence
acceleration
is achieved
by applying
linear extrapolation
on theregularization
integral expansion.
Multivariate
coefficients
of
expansion
with
to
regularization
parameter.
Convercoefficients
of the
the integral
integral
expansion
with respect
respect
to the
the dimensional
dimensional
regularization
parameter.
Converputational
methods
target
automatic
numerical
integration
and
extrapolation
to
approximate
the
leading
gence
acceleration
is
achieved
by
applying
linear
extrapolation
on
the
integral
expansion.
Multivariate
gence
acceleration
is
achieved
by
applying
linear
extrapolation
on
theover
integral
expansion.
Multivariate
integration
is performed
with the
AR I NT software
package, layered
MPI (Message
Passing
Intergence
acceleration
is
by
applying
linear
on
integral
expansion.
Multivariate
gence
acceleration
is achieved
achieved
byP
applying
linear extrapolation
extrapolation
on the
theover
integral
expansion.
Multivariate
coefficients
ofperformed
the integral
expansion
with
respect
topackage,
the dimensional
regularization
parameter.
Converintegration
is
with
the
P
AR
I
NT
software
layered
MPI
(Message
Passing
Interintegration
is
performed
with
the
P
AR
I
NT
software
package,
layered
over
MPI
(Message
Passing
Interface) to speed
up the computations.
Integrand
transformations
result inover
diminishing
the effect
of singular
integration
is
performed
with
the
P
AR
II NT
package,
layered
MPI
(Message
Passing
Interintegration
is
performed
with
the
P
AR
NT software
software
package,
layered
over
MPI
(Message
Passing
Intergence
acceleration
is
achieved
by
applying
linear
extrapolation
on
the
integral
expansion.
Multivariate
face)
to
speed
up
the
computations.
Integrand
transformations
result
in
diminishing
the
effect
of
singular
face)
to
speed
up
the
computations.
Integrand
transformations
result
in
diminishing
the
effect
of
singular
behavior
in theup
integrand.
face)
to
speed
the
computations.
Integrand
transformations
result
in
diminishing
the
effect
of
singular
face)
to
speed
up
the
computations.
Integrand
transformations
result
in
diminishing
the
effect
of
singular
integration
isthe
performed
behavior
in
integrand.
behavior
in
the
integrand.with the PAR I NT software package, layered over MPI (Message Passing Interbehavior
in
the
behavior
inFeynman
theupintegrand.
integrand.
Keywords:
integrals,
automatic
parallel
numerical integration,
expansions
and extrapolation,
face)
to The
speed
theloop
computations.
Integrand
transformations
result inintegral
diminishing
the effect
of singular
© 2017
Authors.
Published
by Elsevier
B.V.

Keywords:
Feynman
loop
integrals,
automatic
numerical
expansions
and
extrapolation,
Keywords:
loop
integrals,
automatic
parallel
numerical
integration,
integral
expansions
and
extrapolation,
Peer-review
under
responsibility
of the
scientificparallel
committee
of the integration,
Internationalintegral
Conference
on Computational
Science
transformations
Keywords:
Feynman
loop
automatic
parallel
numerical
integration,
integral
expansions
and
behavior
inFeynman
the integrand.
Keywords:
Feynman
loop integrals,
integrals,
automatic
parallel
numerical
integration,
integral
expansions
and extrapolation,
extrapolation,
transformations
transformations
transformations
transformations
Keywords: Feynman loop integrals, automatic parallel numerical integration, integral expansions and extrapolation,
transformations

1
Introduction
1
1 Introduction
Introduction
In high energy physics, the door to exploring new physics has been opened with the discovery of the
In
high
energy
physics,
door
to
exploring
new
physics
has
been
opened
with
the
discovery
of
the
1
Introduction
In
high
energy
physics,
the
door
tophysics
exploring
new
physics
has
been
opened
with
the
discovery
of
the
Higgs
2012. Inthe
probing
beyond
standard
both precise
experimental
In
energy
the
door
new
physics
has
been
with
discovery
of
In high
highparticle
energyinphysics,
physics,
the
door to
to exploring
exploring
newthe
physics
hasmodel,
been opened
opened
with the
the
discovery analyof the
the

Higgs
in
2012.
In
physics
the
standard
model,
both
precise
analyHiggs
particle
in
2012.
In probing
probing
physics
beyond
the
standard
model,
both
precise
experimental
analyses
andparticle
accurate
calculations
forbeyond
high energy
reactions
are required.
Thisexperimental
leads us to include
Higgs
particle
in theoretical
2012.
probing
physics
beyond
the
standard
model,
both
experimental
analyHiggs
particle
2012. In
Inthe
probing
beyond
the
standard
both precise
precise
experimental
analyIn
high
energyinphysics,
door tophysics
exploring
new
physics
hasmodel,
been
opened
with
the
discovery
of the
ses
and
accurate
theoretical
calculations
for
high
energy
reactions
are
required.
This
leads
us
to
include
ses
and
accurate
theoretical
calculations
for
high
energy
reactions
are
required.
This
leads
us
to
include
higher
order
corrections
by
perturbation
methods
in
theoretical
calculations,
that
is,
it
is
necessary
to
ses
and
accurate
theoretical
calculations
for
high
energy
reactions
are
required.
This
leads
us
to
include
ses
and
accurate
theoretical
calculations
for
high
energy
reactions
are
required.
This
leads
us
to
include
Higgs
particle
in 2012. Inby
probing
physicsmethods
beyond the
standard model,
both precise
experimental
analyhigher
order
corrections
perturbation
in
theoretical
calculations,
that
is,
it
is
necessary
to
higher
order
corrections
by
perturbation
methods
in
theoretical
calculations,
that
is,
it
is
necessary
evaluateorder
multi-loop
diagrams
as well as tree
diagrams.
higher
order
corrections
by perturbation
perturbation
methods
in theoretical
theoretical calculations,
calculations, that
that is,
is, it
it is
is necessary
necessary to
to
higher
corrections
by
methods
in
to
ses
and accurate
theoretical
calculations
for high
energy reactions are required. This leads us to include
evaluate
multi-loop
diagrams
as
well
as
tree
diagrams.
evaluate
multi-loop
diagrams
as
well
as
tree
diagrams.
The purpose
of our
work is
to
develop
computer
programs which evaluate multi-loop Feynman inevaluate
multi-loop
diagrams
as
well
as
tree
diagrams.
evaluate
multi-loop
diagrams
as
well
as
tree
diagrams.
higher
order
corrections
by perturbation
methods
in programs
theoreticalwhich
calculations,
that
is, it is Feynman
necessaryinto
The
our
work
is
to
develop
evaluate
multi-loop
The
purpose
of
our
work
is
to
develop
computer
programs
which
evaluate
multi-loop
Feynman
integrals
inpurpose
a fullyof
numerical
manner
even ifcomputer
they have
ultra-violet
(UV)
or infrared
(IR) singularities.
The
purpose
of
our
work
is
to
develop
computer
programs
which
evaluate
multi-loop
Feynman
inThe
purpose
of
our
work
is
to
develop
computer
programs
which
evaluate
multi-loop
Feynman
inevaluate
multi-loop
diagrams
as
well
as
tree
diagrams.
tegrals
in aa fully
fully
numerical to
manner
even
if massive
they have
have
ultra-violet
(UV)
or infrared
infrared
(IR) singularities.
singularities.
tegrals
in
numerical
manner
even
if
they
ultra-violet
(UV)
or
(IR)
Our
approach
is applicable
massless
and
particles
without
changing
the algorithm,
and we
tegrals
in
aa fully
numerical
manner
even
if
they
ultra-violet
(UV)
or
(IR)
tegrals
inpurpose
fully
numerical
manner
even
ifcomputer
they have
have
ultra-violet
(UV)
or infrared
infrared
(IR) singularities.
singularities.
The
of
our workto
ismassless
to develop
programs
which
evaluate
multi-loop
Feynman
inOur
approach
is
applicable
and
massive
particles
without
changing
the
algorithm,
Our
approach
is
applicable
to
massless
and
massive
particles
without
changing
the
algorithm,
and
we
have
succeededis
in
implementing
the dimensional
regularization
technique
to deal
with
UV andand
IR we
diOur
approach
applicable
to
massless
and
massive
particles
without
changing
the
algorithm,
and
we
Our
approach
is
applicable
to
massless
and
massive
particles
without
changing
the
algorithm,
and
we
tegrals
in
a
fully
numerical
manner
even
if
they
have
ultra-violet
(UV)
or
infrared
(IR)
singularities.
have
succeeded
implementing
dimensional
technique
to
deal
with
UV
and
dihave
succeeded
in
implementing
the
dimensional
regularization
technique
to
dealincludes
with
UV
and
IR
divergences
in ourin
The the
classic
literatureregularization
on dimensional
regularization
5,IR
have
succeeded
inprograms.
implementing
the
dimensional
regularization
technique
to
with
UV
and
IR
dihave
succeeded
implementing
the
dimensional
regularization
technique
to deal
deal
with
UV[28,
andand
IR27].
diOur
approach
is in
applicable
toThe
massless
and
massive
particles
without
changing
the
algorithm,
we
vergences
in
our
programs.
The
classic
literature
on
dimensional
regularization
includes
[28,
5,
27].
vergences
in
our
programs.
classic
literature
on
dimensional
regularization
includes
[28,
5,
27].
The
integral
isour
expanded
as a The
seriesclassic
in the literature
dimensional
regularization
parameter, and
it is our[28,
goal5,
to27].
apvergences
in
programs.
on
dimensional
regularization
includes
vergences
in
our
programs.
The
classic
literature
on
dimensional
regularization
includes
[28,
5,
27].
have
succeeded
in implementing
thein
dimensional
regularization
technique
to deal
with
UV
and IR
diThe
integral
expanded
as
aa series
the
dimensional
regularization
parameter,
and
it
is
our
goal
apThe
integral
is
expanded
as
in
the
dimensional
regularization
parameter,
and
it
is
our
goal
to
approximate
theis
leading
expansion
coefficients.
Inspired by
the sector decomposition
technique
[3, 4,to
12],
The
integral
is
expanded
as
aa series
series
in
the
dimensional
regularization
parameter,
and
it
is
our
goal
to
apThe
integral
is
expanded
as
series
in
the
dimensional
regularization
parameter,
and
it
is
our
goal
to
apvergences
in
our
programs.
The
classic
literature
on
dimensional
regularization
includes
[28,
5,
27].
proximate
thealeading
leading
expansion
coefficients.
Inspired
by the
the sector
sector
decomposition
technique
[3, 4,
4, 12],
12],
proximate
the
coefficients.
Inspired
by
decomposition
technique
[3,
we
presented
methodexpansion
of numerical
dimensional
regularization
for IR
divergent integrals
in [11].
proximate
the
expansion
coefficients.
Inspired
by
the
decomposition
technique
[3,
proximate
theisaleading
leading
coefficients.
Inspired
by
the sector
sector
decomposition
technique
[3, 4,
4,to12],
12],
The
integral
expanded
a series
indimensional
the dimensional
regularization
parameter,
it is our
apwe presented
presented
methodexpansion
ofasnumerical
numerical
dimensional
regularization
for IR
IR
divergentand
integrals
in goal
[11].
we
a
method
of
regularization
for
divergent
integrals
in
[11].
we
presented
aa method
of
numerical
dimensional
regularization
for
IR
divergent
integrals
in
[11].
we
presented
method
of
numerical
dimensional
regularization
for
IR
divergent
integrals
in
[11].
proximate the leading expansion coefficients. Inspired by the sector decomposition technique [3, 4, 12],
1
we presented a method of numerical dimensional regularization for IR divergent integrals in [11].
111
1
1877-0509 © 2017 The Authors. Published by Elsevier B.V.
Peer-review under responsibility of the scientific committee of the International Conference on Computational Science
10.1016/j.procs.2017.05.253

1

1774	

Doncker
et al.
/ Procedia Computer Science 108C (2017) 1773–1782
Feynman loop integral expansions E
forde3-loop
vertex
diagrams
E. de Doncker, F. Yuasa

In previous work [7, 10, 18], we further reported precise numerical results for 2-, 3- and 4-loop
Feynman integrals using numerical multi-dimensional integration and linear extrapolation with respect
to the dimensional regularization parameter. These include results for 2-loop self-energy, vertex and
box diagrams, 3-loop massless and massive self-energy diagrams, and 4-loop massless self-energy diagrams [10]. It may be noted that 3-loop vertex problems are generally more complicated than, e.g.,
2-loop vertex problems. Furthermore the complexity of loop integrals increases with the number of
internal legs and the resulting integral dimension.
In this paper we focus on massless 3-loop, 3-point (vertex) integrals. These integrals are relevant
for higher order corrections to the quark and gluon form factors, which have been evaluated by many
authors using several approaches [21, 22, 15, 14, 17]. More recently, analytic results for massless threeloop vertex integrals with up to 9 propagators were obtained in [16, 1, 19, 20, 13]. Here we confine
ourselves to 3-loop vertex diagrams with one off-shell and two on-shell legs and and up to 7 propagators
to compare with analytic results in [17, 14].
Our numerical integration procedures avoid reliance on detailed knowledge of the integrand behavior, leading to a black-box type of approach for producing an approximation Q to an integral I, as well as
an estimate Ea of the absolute error |I − Q|. The corresponding relative error estimate is Er = Ea /|Q|
(assuming Q = 0). Imposing the least strict of given absolute and relative error tolerances ta and tr ,
respectively, results in a requirement of the form
|I − Q| ≤ Ea ≤ max{ta , tr |I|}
Difficult integration problems arise from the occurrence of singularities on the boundaries of the integration domain, and we apply transformations to improve the behavior of the integrand in order to ease
the numerical integral approximation.
The integral I expressed as a function of a parameter (dimensional regularization parameter) ε
satisfies an asymptotic expansion

C k εk
(1)
I(ε) ∼
k≥κ

as ε → 0. Using a sequence of approximations Q(ε) ≈ I(ε) for decreasing ε = εi , a linear extrapolation
method [6, 26] is applied by solving a linear (ν × ν) system of equations
ν−1

j=0

C̃κ+j εi κ+j = Q(εi ),

i = 0, . . . , ν − 1

(2)

in the approximate coefficients C̃κ+j . Numerically we solve a linear system AC̃ = b where A = (aij ),
aij = εi j , and bi = εi −κ Q(εi ), for 0 ≤ i, j ≤ ν − 1.
For the multivariate integral approximations we make use of the ParInt package, which is layered
over MPI (Message Passing Interface) [24] and runs on distributed processors of an MIMD platform,
such as a computer cluster [8]. We use ParInt’s adaptive integration strategy, where each participating
process implements a region partitioning strategy on its part of the domain while maintaining a priority
queue structure on the region task pool according to the estimated error of its subregions. Regions
may be transferred between processes in order to keep the overall work load balanced. This strategy
supports a scalable solution for region partitioning on a hybrid platform. The multivariate cubature rule
of polynomial degree 9 from [2] is applied for the local integration over the subregions.
The numerical results are computed on the thor cluster of the Center for High Performance Computing and Big Data at WMU, using cluster nodes with Intel(R) Xeon(R) E5-2670, 2.6 GHz dual processors
and 128 GB of memory, and the Infiniband interconnect for message passing via MPI.
This paper is organized as follows. The concrete expressions of the integrals are given in Section 2.
Section 3 shows the numerical results and variable transformations used in the numerical integration.
2

	

Doncker
et al.
/ Procedia Computer Science 108C (2017) 1773–1782
Feynman loop integral expansions E
forde3-loop
vertex
diagrams
E. de Doncker, F. Yuasa

p3
x4

p1

x1
x3

p3

p3
x1

x2

x3

x4

x5

p2

(a)

x5
x7

p1

x1

x2

x2

x3 x5

x6
p2

(b)

x6 x
4
x7

p1

p2

(c)

Figure 1: 3-loop vertex diagrams with massless internal lines, (a) cf., Gehrmann et al. [14] diagram A 5,2 (N = 5);
(b) Heinrich et al. [17] diagram A 7,3 (N = 7); (c) Heinrich et al. [17] diagram A 7,5 (N = 7). The incoming
momentum is p3 = p1 + p2 and outgoing lines are on-shell and massless, p21 = p22 = 0.

2

3-loop vertex

The integral corresponding to a Feynman diagram with L loops and N internal lines is
Γ(N − nL/2)(−1)N
I=
(4π)nL/2
Γ(N − nL/2)(−1)
=
(4π)nL/2

N




N
1 

0 r=1
1

dx1
0

dxr δ (1 −


1−x1



xr )

dx2 . . .
0



C N −n(L+1)/2
(D − iC)N −nL/2

1−x1 ...−xN −2
0

dxN −1

C N −n(L+1)/2
(D − iC)N −nL/2

(3)

where C and D are polynomials determined by the topology of the diagram and physical parameters [23,
4], and n = n(ε) = 4 − 2ε where ε is the dimensional regularization parameter. In the absence of
singularities in the interior of the integration domain we set  = 0. The integral (3) is taken over the
d-dimensional unit simplex
Sd = {x ∈ Rd |

d

r=1

xr ≤ 1 , xr ≥ 0 for 1 ≤ r ≤ d }

For the 3-loop vertex diagrams in Fig 1, with L = 3 we consider the integrals of the form IaV 3 for
V3
for N = 7 given by
N = 5, and Ib,c

C −3+4ε
dx
IaV 3 (ε) = −Γ(−1 + 3ε)
−1+3ε
S4 D
V3
(ε) = −Γ(1 + 3ε)
Ib,c



S6

(4)

C −1+4ε
dx
D1+3ε

Here p21 = p22 = 0, so −q 2 = −p23 = −(p1 + p2 )2 = −2p1 p2 (which gives rise to a separate factor
outside of the computed integral).
We compare our results for the integral denoted IaV 3 to an analytic expression given in [14],
−Γ3 (1 − ε) IaV 3 (ε) = −

Γ7 (1 − ε) Γ(ε) Γ(3ε) Γ(1 − 3ε)
,
(1 − 2ε) Γ(2 − 2ε) Γ(3 − 4ε)

(5)
3

1775

1776	

Feynman loop integral expansions E
forde3-loop
vertex
diagrams
E. de Doncker, F. Yuasa
Doncker
et al.
/ Procedia Computer Science 108C (2017) 1773–1782

which we expand using Mathematica as
1
5
− Γ3 (1 − ε) IaV 3 (ε) ∼ −( ε−2 + ε−1 + . . .)
(6)
6
3
≈ −0.16666667 ε−2 − 1.6666667 ε−1 − 11.4891337 − 59.817128 ε + O(ε2 )
V3
For the integrals denoted Ib,c
in (4) an expansion in integer powers of ε is given by [17],

31
π 2 ζ3
119π 6
+ 10ζ5 ) ε−1 − (
+ ζ32 ) + O(ε)
6
2160
2
≈ −12.34658 ε−1 − 75.3620 + O(ε)

− Γ3 (1 − ε) IbV 3 (ε) ∼ −(

− Γ3 (1 − ε) IcV 3 (ε) ∼ (2π 2 ζ3 + 10ζ5 ) + (12π 2 ζ3 + 60ζ5 +

11π 6
+ 18ζ32 )ε + O(ε2 )
162

(7)

(8)

≈ 34.0969298 + 295.8700 ε + O(ε2 )
Note that the (−) sign on the left of Eqs (5)-(8) accounts for a difference in the sign with the definitions
of [14, 17]. Below we list the C and D functions (Ca , Da ), (Cb , Db ), (Cc , Dc ) for the integrals IaV 3 ,
IbV 3 and IcV 3 , respectively, as derived from the corresponding diagrams in Fig 1.
Ca = x1 x 2 x 3 + x 1 x 3 x 4 + x 2 x 3 x 4 + x 1 x 2 x 5 + x 1 x 3 x 5 + x 1 x 4 x 5 + x 2 x 4 x 5 + x 3 x 4 x 5
D a = x1 x 2 x 3 x 4 + x 1 x 2 x 4 x 5

(9)

C b = x1 x 3 x 5 + x 2 x 3 x 5 + x 1 x 4 x 5 + x 2 x 4 x 5 + x 3 x 4 x 5 + x 1 x 3 x 6 + x 2 x 3 x 6 +
x1 x 4 x 6 + x 2 x 4 x 6 + x 3 x 4 x 6 + x 1 x 5 x 6 + x 2 x 5 x 6 + x 3 x 5 x 6 + x 1 x 3 x 7 +
x2 x 3 x 7 + x 1 x 4 x 7 + x 2 x 4 x 7 + x 3 x 4 x 7 + x 1 x 5 x 7 + x 2 x 5 x 7 + x 3 x 5 x 7
D b = x1 x 2 x 3 x 5 + x 1 x 2 x 4 x 5 + x 2 x 3 x 4 x 5 + x 1 x 2 x 3 x 6 + x 1 x 2 x 4 x 6 +
x 2 x3 x4 x6 + x 1 x2 x5 x6 + x1 x3 x5 x6 + x 1 x4 x5 x6 + x 2 x4 x5 x6 +

(10)

x 3 x4 x5 x6 + x 1 x2 x3 x7 + x1 x2 x4 x7 + x 2 x3 x4 x7 + x 1 x2 x5 x7
C c = x1 x 3 x 4 + x 2 x 3 x 4 + x 1 x 4 x 5 + x 2 x 4 x 5 + x 3 x 4 x 5 + x 1 x 3 x 6 + x 2 x 3 x 6 + x 3 x 4 x 6 +
x 1 x5 x6 + x2 x5 x6 + x3 x5 x6 + x4 x5 x6 + x1 x3 x7 + x2 x3 x7 + x1 x4 x7 + x2 x4 x7 +
x3 x4 x7 + x1 x5 x7 + x2 x5 x7 + x3 x5 x7 + x1 x6 x7 + x2 x6 x7 + x4 x6 x7 + x5 x6 x7
D c = x1 x 2 x 3 x 4 + x 1 x 2 x 4 x 5 + x 2 x 3 x 4 x 5 + x 1 x 2 x 3 x 6 + x 1 x 3 x 4 x 6 +
x1 x2 x5 x6 + x2 x3 x5 x6 + x1 x4 x5 x6 + x3 x4 x5 x6 + x1 x2 x3 x7 +

(11)

x 1 x2 x4 x7 + x 1 x2 x5 x7 + x2 x3 x5 x7 + x 1 x2 x6 x7 + x 1 x4 x6 x7

3

Numerical results

The integrands have severe singularities as the C and D functions vanish at the boundaries of the simplex
domain. For example, Da = x1 x2 x4 (x3 +x5 ) = x1 x2 x4 (1−x1 −x2 −x4 ) vanishes when x1 x2 x4 = 0
or x1 + x2 + x4 = 1. For the integral IaV 3 of Eq (4) we perform a transformation (see also [10]) to deal
4

	

Feynman loop integral expansions for 3-loop vertex diagrams
E. de Doncker, F. Yuasa
E de Doncker et al. / Procedia Computer Science 108C (2017) 1773–1782

Table 1: Results 3-loop vertex integral −Γ3 (1 − ε) IaV 3 by ParInt (on 4 nodes with 16 procs. per node of the thor
cluster, in long double precision), tr = 10−13 , max. # evals = 10 B, ε = ε = 1.2− . Successive columns list ,
rel. error estimate Er , time T in seconds, and approximate expansion coefficients Cκ+j , κ = −2, j ≥ 0.

22
23
24
25
26
27

I NTEGRAL Fig 1(a)
Er
T [s] R ES . C−2
1.1e-07
55.3
1.9e-07
55.3 -0.16291495
3.2e-07
55.5 -0.16692074
4.7e-07
55.6 -0.16665448
7.2e-07
55.8 -0.16666720
1.3e-06
56.1 -0.16666683
(6): -0.16666667

R ES . C−1
-2.103254
-1.616737
-1.670242
-1.666470
-1.666626
-1.666667

R ES . C0

-14.650
-11.106
-11.519
-11.494
-11.489

with the singularity,
x1
x3
x5

=

y1m y3m y4

x2 = y1m y3m y4m

=

y1 y2m

x4 = y1m y3

=

y1 y 2

(12)

where yim = 1 − yi , 1 ≤ i ≤ 4. This transformation maps the unit 4-dimensional simplex S4 in Eq (3)
2
y3m , and also reduces the singular integrand behavior.
to the 4D unit cube, with Jacobian J = y1 y1m
In general it is the goal with this type of transformation to introduce factors in the Jacobian and the
resulting numerator, that may cancel out vanishing factors in the denominator.
Numerical results are given in Table 1 for a sequence of ε = 1.2− , where 10 B (Billion) evaluations
are allowed per iteration. Each iteration gives rise to a row of the table and involves an integration for a
value of ε = ε . The integral approximation corresponding to the i-th row (i = 0, 1, . . .) is used as an
element Q(ε) in the right hand side of the linear system constructed for the extrapolation, and row i of
the table (for i > 0) shows solutions of a system of size (i + 1) × (i + 1). For the integral of Table 1,
κ = −2 in Eqs (1)-(2), and the columns labeled C−2 , C−1 , C0 are results of the system solver for the
leading coefficients in the expansion of Eq (6).
Each integration is performed in parallel by 64 processes running on four cluster nodes, in time
T [s] ≈ 56 seconds per iteration in Table 1. The relative error estimate Er , obtained from the integration
software, is intended to bound |(I − Q(ε))/I| and ranges here between 1.1 × 10−7 and 1.3 × 10−6
(increasing as ε decreases).
More accuracy is obtained for this integral with the longer run of Table 2, which gives results for a
sequence of ε = 1.11− , allowing 50 B evaluations performed in under 332 seconds per iteration, and
yielding relative error estimates between 6.2 × 10−11 and 8.3 × 10−10 . We use long double precision
in the C language, which provides us with a relative machine precision of around 5 × 10−20 in a timeefficient manner for the massive function evaluations and partial integral accumulations.
For IbV 3 and IcV 3 of Eq (4) we transform the (d = N − 1 = 6)-dimensional unit simplex domain of
Eq (3) to the (N − 1)-dimensional unit cube, using
x1 = x̃1
x2 = (1 − x1 ) x̃2

x3 = (1 − x1 − x2 ) x̃3

(13)

...

xN −1 = (1 − x1 − x2 − . . . − xN −2 ) x̃N −1

5

1777

1778	

Feynman loop integral expansions for 3-loop vertex diagrams
E. de Doncker, F. Yuasa
E de Doncker et al. / Procedia Computer Science 108C (2017) 1773–1782

Table 2: Results 3-loop vertex integral −Γ3 (1 − ε) IaV 3 by ParInt (on 4 nodes with 16 procs. per node of the thor
cluster, in long double precision), tr = 10−13 , max. # evals = 50 B, ε = ε = 1.11− . Successive columns list ,
rel. error estimate Er , time T in seconds, and approximate expansion coefficients Cκ+j , κ = −2, j ≥ 0.

38
39
40
41
42
43
44

I NTEGRAL Fig 1(a)
Er
T [s] R ES . C−2
6.2e-11 324.7
1.1e-10 326.2 -0.159493974
1.6e-10 327.7 -0.167414029
2.2e-10 329.2 -0.166606927
3.3e-10 330.1 -0.166670468
6.1e-10 330.4 -0.166666467
8.3e-10 331.4 -0.166666675
(6): -0.166666667

R ES . C−1
-2.2785290
-1.5629825
-1.6784806
-1.6656668
-1.6667337
-1.6666632
-1.6666667

R ES . C0

-16.11779
-10.62839
-11.59303
-11.47985
-11.48974
-11.48913

Table 3: Results 3-loop vertex integral −Γ3 (1 − ε) IbV 3 by ParInt (on 4 nodes with 16 procs. per node of the thor

cluster, in long double precision), tr = 10−13 , max. # evals = 125 B, ε = ε = 1.11− . Successive columns list ,
rel. error estimate Er , time T in seconds, and approximate expansion coefficients Cκ+j , κ = −1, j ≥ 0.
I NTEGRAL Fig 1(b)
Er
T [s]
R ES . C−1
7.4e-06
972
1.2e-05
972
-10.98454
1.7e-05
972
-12.11262
2.4e-05
972
-12.22893
3.4e-05
972
-12.34703
(7):
-12.34658


25
26
27
28
29

R ES . C0
-31.1676
-63.5043
-71.5243
-75.2208
-75.3620

with Jacobian (1 − x1 ) (1 − x1 − x2 ) . . . (1 − x1 − x2 − . . . − xN −2 ), i.e.,


1

dx1
0

=



1
0



1−x1

dx2
0

dx̃1 (1 − x1 )



1−x1 −x2 −...−xN −2
0



dxN −1 f (x1 , x2 , . . . , xN −1 )

1
0

dx̃2 (1 − x1 − x2 ) . . .



1
0

dx̃N −1 (1 − x1 − x2 − . . . − xN −2 )

f (x1 , (1 − x1 ) x̃2 , . . . , (1 − x1 − x2 − . . . − xN −2 ) x̃N −1 )

To decrease the singularity at x̃i = 0, the transformation (13) is combined with a power transformation
x̃i = yi4 with Jacobian (4yi3 ) in each coordinate direction i = 1, . . . , N − 1. This type of transformation
was used in predecessors of QuadPack code [25]. Extrapolation results for the coefficients C−1 and C0
of Eq (7) and coefficients C0 and C1 of Eq (8) are given in Tables 3 and 4, respectively.
To assess the effect of the power transformation let us consider the function behavior near the origin,
e.g., on lines through the origin, x̃i = ai t for constants ai , i = 1, . . . , 6. For the C and D functions
in Eq (10) and Eq (11), the integrand function behaves there as C −1+4ε /D1+3ε ∼ t−5−ε . With yi ∼
t4 applied after the transformation, the transformed function multiplied with the Jacobian behaves as
t−2−4ε . Note also that the extrapolation as ε → 0 can be applied with ε replaced by −ε, changing
6

	

Feynman loop integral expansions for 3-loop vertex diagrams
E. de Doncker, F. Yuasa
E de Doncker et al. / Procedia Computer Science 108C (2017) 1773–1782

Table 4: Results 3-loop vertex integral −Γ3 (1 − ε) IcV 3 by ParInt (on 4 nodes with 16 procs. per node of the thor
cluster, in long double precision), tr = 10−13 , max. # evals = 80 B, ε = ε = 1.2− . Successive columns list ,
rel. error estimate Er , time T in seconds, and approximate expansion coefficients Cκ+j , κ = 0, j ≥ 0.

25
26
27
28
29

I NTEGRAL Fig 1(c)
Er
T [s]
R ES . C0
1.3e-07
631
1.1e-07
631
33.8889518
9.7e-08
631
34.1049441
8.4e-08
631
34.0967036
8.2e-08
631
34.0969222
(8): 34.0969298

R ES . C1
338.4550
293.1244
295.9858
295.8739
295.8700

the behavior to t−2+4ε . A result without the transformation was shown for IcV 3 in [9]. The results in
Tables 3 and 4 are computed for IbV 3 and IcV 3 with the power transformation, and improve on results
obtained without the transformation.

4

Conclusions and future work

This work is part of an effort to provide numerical methods in the field of Feynman loop integrals, where
many solutions rely on problem-specific analytic and symbolic manipulations. A numeric solution
is not straightforward as it needs to address higher-dimensional integrals that may be plagued with
severe singularities. Our approach leads to the approximation of expansion coefficients for UV-divergent
problems, using an extrapolation on the integral expansion with respect to the dimensional regularization
parameter. For the numerical integrations we have been able to resort to adaptive region partitioning,
enhanced with transformations to counter singular integrand behavior. A study of transformations to
fit classes of singular behavior without compromising the generality of the approach considerably is
subject of future work.
In view of intensive region partitioning required for multivariate approximations, the computations
are performed in parallel, supported by the adaptive load balancing strategy of the ParInt integration
package. Other methods such as parallel Monte Carlo on GPUs have not led to viable results for the
type of problem at hand. Future work with respect to the integration methods and parallelizations should
help increase the scale of the computations further.

Acknowledgments
We acknowledge the support from the National Science Foundation under Award Number 1126438.
This work is further supported by Grant-in-Aid for Scientific Research (15H03668) of JSPS, and the
Large Scale Simulation Program No.16/17-21 of KEK. We appreciate the former contributions of K.
Kato and T. Ishikawa to our work with respect to the transformations.

References
[1] P. A. Baikov, K. G. Chetyrkin, A. V. Smirnov, V. A. Smirnov, and M. Steinhauser. Quark and gluon form
factors to three loops, 2009. doi:10.1103/PhysRevLett.102.212002.

7

1779

1780	

Feynman loop integral expansions for
3-loop
vertex
diagrams
E. de Doncker, F. Yuasa
E de
Doncker
et al.
/ Procedia Computer Science 108C (2017) 1773–1782

[2] J. Berntsen, T. O. Espelid, and A. Genz. An adaptive algorithm for the approximate calculation of multiple
integrals. ACM Trans. Math. Softw., 17:437–451, 1991.
[3] T. Binoth and G. Heinrich. An automized algorithm to compute infrared divergent multi-loop integrals. Nuclear Physics B, 585:741–759, 2000. hep-ph/0004013v2.
[4] T. Binoth and G. Heinrich. Numerical evaluation of multi-loop integrals by sector decomposition. Nucl. Phys.
B, 680:375, 2004. hep-ph/0305234v1.
[5] C. G. Bollini and J. J. Giambiagi. Dimensional renormalization: the number of dimensions as a regularizing
parameter. Nuovo Cimento, B 12:20, 1972.
[6] C. Brezinski. A general extrapolation algorithm. Numerische Mathematik, 35:175–187, 1980.
[7] E. de Doncker, J. Fujimoto, N. Hamaguchi, T. Ishikawa, Y. Kurihara, Y. Shimizu, and F. Yuasa. Quadpack computation of Feynman loop integrals. J. Computational Science (JoCS), 3(3):102–112, 2011.
doi:10.1016/j.jocs.2011.06.003.
[8] E. de Doncker, J. Kapenga, F. Yuasa, and O. Olagbemi. Scalable software for multivariate integration on
hybrid platforms. Journal of Physics: Conf. Ser. (JPCS), IOP Series, 640(012062), 2015. doi:10.1088/17426596/640/1/012062.
[9] E. de Doncker, F. Yuasa, K. Kato, and T. Ishikawa. Numerical integration and extrapolation for UV-divergent
3-loop Feynman integrals. Workshop on Computational Particle Physics (CPP 2016), Hayama, Japan. 2016.
In preparation.
[10] E. de Doncker, F. Yuasa, K. Kato, T. Ishikawa, J. Kapenga, and O. Olagbemi.
Regularization
with numerical extrapolation for finite and UV-divergent multi-loop integrals, 2017. arXiv:[hep-ph]
https://arxiv.org/abs/1702.04904.
[11] E. de Doncker, F. Yuasa, and Y. Kurihara. Regularization of IR-divergent loop integrals. Journal of Physics:
Conf. Ser., 368(012060), 2012.
[12] J. Fujimoto and T. Ueda. New implementation of the sector decomposition on FORM. In XII Adv. Comp. and
Anal. Tech. in Phys. Res., 2008. PoS (ACAT08) 120; ArXiv:0902.2656v1 [hep-ph].
[13] T. Gehrmann, E. W. N. Glover, T. Huber, N. Ikizlerlib, and C. Studerus. Calculation of the quark and gluon
form factors to three loops in QCD, 2010. doi:10.1007/JHEP06(2010)094.
[14] T. Gehrmann, G. Heinrich, T. Huber, and C. Studerus.
Master integrals for massless threeloop form factors: One-loop and two-loop insertions.
Physics Letters B, 640:252–259, 2006.
doi:10.1016/j.physletb.2006.08.008.
[15] T. Gehrmann, T. Huber, and D. Maı̂tre. Two-loop quark and gluon form factors in dimensional regularisation,
2005. doi:10.1016/j.physletb.2005.07.019.
[16] G. Heinrich, T. Huber, D.A. Kosower, and V. A. Smirnov. Nine-propagator master integrals for massless
three-loop form factors, 2009. doi:10.1016/j.physletb.2009.06.038.
[17] G. Heinrich, T. Huber, and D. Maı̂tre. Master integrals for fermionic contributions to massless three-loop
form factors. Physics Letters B, 662:344–352, 2008. doi:10.1016/j.physletb.2008.03.028.
[18] K. Kato, E. de Doncker, T. Ishikawa, J. Kapenga, O. Olagbemi, and F. Yuasa. High performance and increased
precision techniques for Feynman loop integrals, 2016. 012070, iopscience.iop.org/article/10.1088/17426596/762/1/012070.
[19] R. N. Lee, A. V. Smirnov, and V. A. Smirnov. Analytic results for massless three-loop form factors. J. High
Energy Physics, 20, 2010. doi:10.1007/JHEP04(2010)020.
[20] R. N. Lee and V. A. Smirnov. Analytic epsilon expansion of three-loop on-shell master integrals up to fourloop transcendentality weight. J. High Energy Physics, 102, 2010. doi:10.1007/JHEP02(2011)102.
[21] S. Moch, J. A. M. Vermaseren, and A. Vogt. The quark form factor at higher orders. J. High Energy Physics,
2005. http://jhep.sissa.it/archive/papers/jhep082005049.pdf/jhep082005049.pdf.
[22] S. Moch, J. A. M. Vermaseren, and A. Vogt. Three-loop results for quark and gluon form factors. Physics
Letters B, 625(3-4), 2005. doi:10.1016/j.physletb.2005.08.067.
[23] N. Nakanishi. Graph Theory and Feynman Integrals. Gordon and Breach, New York, 1971.
[24] Open-MPI. http://www.open-mpi.org.

8

	

Feynman loop integral expansions for
3-loop
vertex
diagrams
E. de Doncker, F. Yuasa
E de
Doncker
et al.
/ Procedia Computer Science 108C (2017) 1773–1782

[25] R. Piessens, E. de Doncker, C. W. Überhuber, and D. K. Kahaner. QUADPACK, A Subroutine Package for
Automatic Integration, volume 1 of Springer Series in Computational Mathematics. Springer-Verlag, 1983.
[26] A. Sidi. Practical Extrapolation Methods - Theory and Applications. Cambridge University Press, 2003.
ISBN 0-521-66159-5.
[27] G. ’t Hooft. Dimensional regularization and the renormalization group. Nucl. Phys. B, 61:455–468, 1973.
[28] G. ’t Hooft and M. Veltman. Regularization and renormalization of gauge fields. Nucl. Phys. B, 44:189, 1972.

A

Appendix: Integrand functions

A C code representation for the integrand functions of IaV 3 and IcV 3 of Eq (4) is given below and
illustrates the implementation of the transformations. The code for IbV 3 is similar to that of IcV 3 . The
integration variables are supplied to the function in the array x and the function value is returned via
funvls[0]. The constant factor is not accounted for in the function value, as it can be multiplied with
the integral in the main program. The main program also sets the powers cPow and dPow of cc (C)
and dd (D) as a function of the current ε.

A.1

Integrand for IaV 3

#define DIMS 6
funvls[0] = 0;
y1
y2
y3
y4
y1m
y2m
y3m
y4m

=
=
=
=

x[0];
x[1];
x[2];
x[3];
=
=
=
=

1-y1;
1-y2;
1-y3;
1-y4;

y1my3m = y1m*y3m;
x1 = y1my3m*y4;
x2 = y1my3m*y4m;
x3 = y1*y2m;
x4 = y1m*y3;
x5 = y1*y2;
jac = y1*y1m*y1m*y3m;
if(jac <= 0) return 0;
cc = x1*x2*x3 + x1*x3*x4 + x2*x3*x4 + x1*x2*x5 + x1*x3*x5 +
x1*x4*x5 + x2*x4*x5 + x3*x4*x5;
dd = x1*x2*x3*x4 + x1*x2*x4*x5;
if(cc > 0 && dd > 0)
funvls[0] = sqeps*jac*powl(cc,cPow)/powl(dd,dPow);
return 0;

9

1781

1782	

E de Doncker et al. / Procedia Computer Science 108C (2017) 1773–1782
Feynman loop integral expansions for 3-loop vertex diagrams
E. de Doncker, F. Yuasa

A.2

Integrand for IcV 3

#define DIMS 6
funvls[0] = 0;
jac = 1;
for(i = 0; i < DIMS; i++) { // power transformation
xi3 = x[i]*x[i]*x[i];
u[i] = xi3*x[i];
jac = jac*4*xi3;
}
x1 = u[0];
// simplex transformation
x2 = (1-x1)*u[1];
x3 = (1-x1-x2)*u[2];
x4 = (1-x1-x2-x3)*u[3];
x5 = (1-x1-x2-x3-x4)*u[4];
x6 = (1-x1-x2-x3-x4-x5)*u[5];
x7 = 1-x1-x2-x3-x4-x5-x6;
jac = jac*(1-x1)*(1-x1-x2)*(1-x1-x2-x3)*(1-x1-x2-x3-x4)
*(1-x1-x2-x3-x4-x5);
if(jac == 0) return 0;
x1x2
x3x4
x3x7
x4x5
x4x7
x5x6
x5x7
x6x7

=
=
=
=
=
=
=
=

x1*x2;
x3*x4;
x3*x7;
x4*x5;
x4*x7;
x5*x6;
x5*x7;
x6*x7;

cc = x1*x3x4 + x2*x3x4 + x1*x4x5 + x2*x4x5 + x3x4*x5 + x1*x3*x6 +
x2*x3*x6 + x3x4*x6 + x1*x5x6 + x2*x5x6 + x3*x5x6 + x4*x5x6 +
x1*x3x7 + x2*x3x7 + x1*x4x7 + x2*x4x7 + x3*x4x7 + x1*x5x7 +
x2*x5x7 + x3*x5x7 + x1*x6x7 + x2*x6x7 + x4*x6x7 + x5*x6x7;
dd = x1x2*x3x4 + x1x2*x4x5 + x2*x3x4*x5 + x1x2*x3*x6 +
x1*x3x4*x6 + x1x2*x5x6 + x2*x3*x5x6 + x1*x4*x5x6 +
x3x4*x5x6 + x1x2*x3x7 + x1x2*x4x7 + x1x2*x5x7 +
x2*x3*x5x7 + x1x2*x6x7 + x1*x4*x6x7;
if(cc > 0 && dd > 0)
funvls[0] = jac*powl(cc,cPow)/powl(dd,dPow);
return 0;

10

