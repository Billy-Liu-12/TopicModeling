Procedia Computer Science
Volume 29, 2014, Pages 1027–1038
ICCS 2014. 14th International Conference on Computational Science

Fast graph transformation based direct solver
algorithm for regular three dimensional grids
1

Marcin Sieniek1*
AGH University of Science and Technology, Krakow, Poland
msieniek@agh.edu.pl

Abstract
This paper presents a graph-transformat ion-based multi-frontal direct solver with an optimizat ion
technique that allows for a significant decrease of time co mplexity in some multi -scale simulations of
the Step and Flash Imprint Lithography (SFIL). The mu lti-scale simulat ion consists of a macro-scale
linear elasticity model with thermal expansion coefficient and a nano -scale mo lecular statics model.
The algorith m is exemp lified with a photopolimerization simulat ion that involves densification of a
polymer inside a feature followed by shrinkage of the feature after removal of the temp late. The solver
is optimized thanks to a mechanis m of reusing sub-domains with similar geometries and similar
material properties. The graph transformation fo rmalis m is used to describe the algorith m - such an
approach helps automatically localize sub-domains that can be reused.
Keywords: step-and-flash imprint lithography, multi-scale, graph transformations, multi-frontal solver

1 Introduction
The paper presents a mult i-scale, graph-transformation-system-powered approach to modeling of
the Step-and-Flash Imp rint Lithography (SFIL). SFIL is a modern pattering process that uses
photopolymerizat ion in order to replicate a template onto a substrate (Co lburn et al. 2001) andprocess
can be simulated in macro -scale as linear elasticity with thermal expansion coefficient (Hughes 2000).
In some areas of the computation domain though, the molecular statics model is employed to
complement fin ite elements and thus - improve the solution (Paszynski et al. 2005). Since three
dimensional finite element method simulations are co mputationally expensive (Demkowicz at al.
2007), a mult i-frontal solver algorith m is used in this study. A reuse technique is proposed to benefit
from some of the regularities that problems from this domain present.
Multi-frontal solvers are considered some of the most advanced direct solvers suited for solving
linear systems of equations (Geng et al. 2006, Duff and Reid 1983, Duff and Reid 1984). Graph
transformation systems have been previously used to model mesh generation and for mu lti-frontal
*

corresponding author

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.092

1027

Fast graph transformation...

Marcin Sieniek

solvers for examp le in (Paszynska et al. 2008, Paszynska et al. 2012b, Paszynski et. al 2009a,
Paszynski et al. 2009b, Paszynska et al. 2012a). However in this work, a new graph transformation
system, allowing for efficient reuse of identical sub-branches of the elimination tree is introduced.
The graph transformation system presented in this paper for reuse of identical sub-trees has been
also utilized for modeling mesh generation and adaptation with CP-graphs (Paszynska et al. 2012a,
Paszynska et al. 2012b, Paszynska et al. 2009, Strug et al. 2013) and hyper-graphs (Slusarczyk et al.
2013). Th is graph model can be also used for expressing the classical mult i-frontal solver algorithm
(Paszynski and Schaefer 2010, Paszynski et al. 2010).
Finally, it is also possible to obtain the linear co mputational cost direct solver using some other
topological features of the refined meshes (Szymczak et al. 2013, Paszynski et al. 2013).

2 Step-and-Flash Imprint Lithography
Step and flash imp rint lithography (SFIL) is a patterning process utilizing photopolymerizat ion to
replicate the topography of a template onto a substrate (Bailey et al. 2002, Co lburn et al. 2001, Bu rns
et al. 2004).
The SFIL process can be described in the following six steps, as it is illustrated in Figure 1.
1) dispense. The SFIL process employs a template / substrate alignment scheme to bring a rigid
template and substrate into parallelis m, trapping the etch barrier in the relief structure of the
template,
2) imprint. The gap is closed until the force that ensures a thin base layer is reached,
3) exposure. The template is then illuminated through the backside to cure etch barrier,
4) separate. The template is withdrawn, leaving low-aspect ratio, high resolution features in the
etch barrier,
5) breakthrough etch. The residual etch barrier (base layer) is etched away with a short halogen
plasma etch,
6) transfer etch. The pattern is transferred into the transfer layer with an anisotropic o xygen
reactive ion etch, creating high-aspect ratio, high resolution features in the organic transfer
layer.

Figure 1: Step and Flash Imprint Lithography

Figure 2: Shrinkage of the feature
after removal of the template

Photopolymerizat ion is often acco mpanied by densification. The interaction potential between
photopolymer precursors undergoing free radical poly merization changes from van der Waals’ to
covalent. The average distance between molecules decreases and causes volumetric contraction.
Densificat ion of the SFIL photopolymer (the etch barrier) may affect both the cross sectional shape of
the feature and the placement of relief patterns. The exemp lary shrin kage of the feature measured after
removing the template is presented in Figure 2.

1028

Fast graph transformation...

Marcin Sieniek

2.1 Macro scale model
The linear elasticity model with thermal expansion coeff icient is used to verify the
material response of poly merized networks in cu red etch-barrier layers that are formed
during the third step of the SFIL process.

Strong formulati on. Given gi : *Di 
 x o gi x  0  R , T , D kl and V ij0 , find ui : : o R the

displacement vector field such that
V ij , j 0 in :

(1)

gi in *Di

(2)

ui

where V ij is the stress tensor, defined in terms of the generalized Hooke’s law

V ij

cijkl H kl  T D kl   V ij0

(3)

cijkl elastic coefficients (known for a g iven material), V ij0 init ial stress. H ij0 initial strain, T
temperature,
D kl thermal expansion coefficients, H ij is the strain tensor, defined to be ui , j  , the symmetric part of
the displacement gradients

H ij

ui , j  u j ,i

ui , j 

where ui displacement vector, ui , j

(4)

2
displacement gradients.

Weak formulati on. The weak formu lation is obtained by multip lying (1) by test functions wi  Vi
and integrating by parts over : .
(5)
 ³ wi, jV ij d:  ³ wiV ij n j d: 0
:

*

Since V ij is symmetric tensor, then wi, jV ij
get

wi, j V ij (compare Hughes 2000), and wi

³ wi, j V ij d: 0

0 on * , we

(6)

:

Finally, we substitute (3) into (6) and get
³ w(i, j ) cijkl uk ,l  d:
since H ij

:

T ³ w(i , j ) cijklD kl d:  ³ wi , j V ij0 d:
:

(7)

:

ui, j  .

Abstract index-free notation. For imp lementation issues, the most convenient is the following
form:
Find u  V such that
(8)
aw, u Αw   Σw  for all w  V
Where

aw, u 

T
³ εw  Dεu  d:

(9)

:

Αw  T ³ εw T Dα d:

(10)

Σw 

(11)

:

T 0
³ εw  σ d:

:

Here

1029

Fast graph transformation...

Marcin Sieniek

εu 

α

­ u1,1 ½
°
°
® u 2, 2 ¾ , εw 
°u  u °
2,1 ¿
¯ 1, 2

­ D11 ½
°
°
® D 22 ¾
°2D °
¯ 12 ¿

(12)

(13)

where we have assumed the symmetry of D12

σ0

­ w1,1 ½
°
°
® w2, 2 ¾
°w  w °
2,1 ¿
¯ 1, 2

D 21 , thus D12  D 21

0 ½
­V 11
° 0 °
®V 22 ¾
°V 0 °
¯ 12 ¿

2D12 ,

(14)

and
D

­ D11
°
® D12
°D
¯ 13

D12
D22
D23

D13 ½
°
D23 ¾
D33 °
¿

(15)

and the coefficients of D IJ are related to coefficients of cijkl as illustrated in Table 1.
I/J
1
3
3
2

i/k
1
1
2
2

Table 1. Coefficients of

D IJ

j/l
1
2
1
2
cijkl tensor.

2.2 Molecular statics model
Let us consider a regular rectangular 3D grid with interacting particles , as presented in Figure 3a.

(a)

(b)

Figure 3: (a) 3D domain with interacting particles. (b) pair of interacting particles in the initial and
equilibrium configurations

Each particle interacts with its 26 neighbours. For each pair of interacting particles D and E , we
can distinguish their in itial configurations pD , p E and (unknown) equilibriu m configurations xD , x E ,
compare Figure 3b.
The following molecular statics models are considered:
x Linear model assuming small deformations and quadratic potentials. In this model the force
between pair of interacting particles D and E is given by

1030

Fast graph transformation...

Fαβ

Marcin Sieniek



kDE rDE  'rDE  rDE o

 pp

β

 pα

β

 pα



where kDE is the spring stiffness coefficient, rDE  'rDE

(16)
x β  x α is the length of the spring in the

equilibriu m configuration, x α , x β represents the (unknown) equilibriu m configuration of particles, rDE 0
is the length of the un-stretched spring, p α , p β represents the initial configuration o f part icles. The
small deformat ions are observed here, which imp lies the direction of the interparticle forces along the
initial spring aligments p β  p α .
x

Non-linear model allowing for large deformations, with quadratic potentials. In this model the
force between pair of interacting particles D and E is given by
Fαβ



kDE rDE  'rDE  rDE o

 xx

β

 xα

β

 xα



(17)

The large deformat ions are observed here, which imp lies the direct ion of the interpart icle forces
along the resulting spring alignments x β  x α .
x

Non-linear model allowing for large deformations, with Lennard -Jones potentials. In this model
the force between pair of interacting particles D and E is given by
ª
§ V
CDE «
DE
mDE ¨
«
¨ x x
V DE
α
«¬
© β

Fαβ

·
¸
¸
¹

mDE 1

§ V
DE
 nDE ¨
¨ x x
α
© β

·
¸
¸
¹

nDE 1 º



» xβ  xα
» x x
α
»¼ β



(18)

which results from Lennard-Jones potential

 

VDE rDE

where

V DE , nDE

and

§§ V
¨ DE
CDE ¨ ¨
¨ ¨© rDE
©

·
¸
¸
¹

nDE

§ V DE
¨
¨ rDE
©

·
¸
¸
¹

mDE

·
¸
¸
¸
¹

(19)

mDE are Lennard-Jones potential parameters.

The mo lecular statics problem consists in finding the equilib riu m configuration of part icles
satisfying
(20)
¦ Fαβ 0
E

for D =1,...,N (total nu mber of particles). More mathematical details of the molecular statics model
formulation are presented in (Paszynski et al. 2005).

2.3 Coupling between the macro-scale and nano-scale models
The macro-scale and nano-scale models are coupled by identifying the particles located on the
interface of the nano-scale domain with the corresponding nodes of the FEM mesh, located on the
interface of the macro-scale mesh.
In such the case, we solve the mo lecular statics equations inside the nano-scale domain, and the
linear elasticity with thermal expansion coefficient discretized by FEM inside the macro-scale do main,
while the interface between macro- and nano-scales is treated in the special way. The nodes of the
FEM mesh, fro m the point of v iew of the nano-scale model are identified with particles represented by
their positions x α , while fro m the point of view of the macro-scale model, the nodes are understood in
the classical way like degrees of freedo m, representing the displacements u α . It implies the additional
coupling equations
uα 'pα

xα  pα

(21)

1031

Fast graph transformation...

Marcin Sieniek

for each particle (FEM mesh node) D located on the interface between nano- and macro-scales.
In practice, it is not necessary to add the coupling equations (21) to the system, but only to
aggregate the FEM and MS equations to the same global matrix.

3 Numerical solver with a graph transformation system
description
In this section a mu lti-frontal solver is described. In order to present the algorith m performed by
the solver, graph transformation systems are used. Such a formalis m allows for describing steps of an
algorith m as a set of transformations that alter a graph representing a computational mesh and attribute
it with computational data. As a result it's easier to determine the algorith m's properties, time
complexity and determine whether a given algorithm is legal.
The first step of the solver algorith m is to generate the computational mesh. It is done by executing
a sequence of graph transformations that generate a graph structure representing computational mesh.
The first graph transformat ion is presented on left panel in Figure 2. The productions replace the
starting graph containing only a single vertex S with a graph representing a single hexahedral element
with eight nodes. The following graph transformations replace some nodes by sub-graphs that
represent smaller elements. Graph nodes as well as graph transformations are attributed by the location
over a rectangular domain. The transformation (P)TNW fro m right panel in Figure 2 is replicated for
different locations, fo r {TNW,TNE,TSW,TS E,B NW,B NE,BSW,BS E} where T and B stands for top
and bottom, and N, S, W, E stand for north, south, west, east.

Figure 4: Exemplary graph transformations for generating of the structure of the mesh

The exemp lary derivation of an eight-element mesh is presented in Figure 4. In the first step,
production (P1) is executed, in the second step, productions (P)TNW - (P)TNE - (P)TSW - (P)TSE - (P)B NW
- (P)B NE - (P)B SW - (P)B SE are executed to obtain the eight fin ite element mesh. The graph representing
the mesh has hierarchical tree -like structure storing the history of graph transformat ions derivation. To
obtain larger meshes, it is necessary to add graph transformations for locations like
{T,B ,N,S,W,E,TN,TS,TW,TE,B N,BS,BW,B E,NE,NW,S E,SW}, co mpare labels of the left bottom
sub-graph at Figure 5.

1032

Fast graph transformation...

Marcin Sieniek

Figure 5: Derivation of eight finite element mesh

Figure 6: Graph transformations for identification of macro- and nano-scale elements

The next step of the solver algorith m consists in identification of macro -scale and nano-scale
elements. Notice that graph nodes labeled with N actually represent particles (over nano-scale
elements) or finite element method nodes (over macro -scale elements). Thus, the elements are
represented by patches of eight nodes. In the exemp lary mesh presented in Figure 5 there are eight
elements denoted by different colors.
This identification is performed by graph transformation presented in Figure 6. The macro-scale
elements are attributed by Young modulus and Poisson ratio values. The nano -scale elements are
attributed by parameters of the spring force parameters kDE .

Figure 7: Exemplary graph transformation for identification of macro-scale elements with identical material data

1033

Fast graph transformation...

Marcin Sieniek

Figure 8: Exemplary graph transformation for partial identification of macro-scale with identical material data

The resulting tree structure can be directly utilized by the mu lti-frontal solver algorith m (Paszynski
et al. 2010, Paszynski and Schaefer 2010). Ho wever, in th is work a more sophisticated approach,
featuring a re -use optimization technique, is proposed. It is based on an observation, that if we
postpone the resolution of the domain boundary to the top of the elimination tree, given a regular mesh
with equal coefficients, the LU factorized local matrices for different finite elements are the same and
hence can be reused.
Thus, the third step of the solver algorith m consists in an identification of identical sub-branches of
the elimination tree, fo r the reuse of part ially LU factorized matrices. An exemplary graph
transformation for such an identification is presented in Figure 7. Such a graph transformation checks
if all eight son elements are macro-scale elements and whether the corresponding Young modulus and
Poisson ratios are identical. If this is the case, the eight son element nodes are reduced to one
representative node, so the LU factorization can be perfo rmed only once and father node can merge
eight identical matrices from the same representative son node.
Another, more co mp licated case for the identification is presented in Figure 8. In this example only
four son elements are macro-scale with identical Young modulus and Poisson ratio values. The four
identical macro -scale elements are reduced to one representative element, however the nano-scale
elements are stochastic in their nature and cannot be reduced.
Finally, on a modified elimination tree, the multi-frontal solver algorithm can be executed:
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

function frontal_elimination(node)
if new_schur_matrix already computed for the node then
return schur_matrix
if node is a leaf then
generate local system assigned to node
excluding boundary conditions
else
loop through son_nodes
schur_matrix = frontal_elimination(son_node)
merge schur_matrix into new_system
end loop
end if
find fully assembled nodes and eliminate them
return new_schur_matrix
end function

Notice that in case of representative nodes in line 9, the same node of the elimination tree is
actually called many times and line 2 p revents from re-co mputing the identical Schur co mp lement
matrices many times. The fo rward elimination algorithm is fo llo wed by analogous backward
substitution.

1034

Fast graph transformation...

Marcin Sieniek

4 Numerical results
In this section numerical results presenting the shrinkage of the feature after removal of the
template. It is assumed that the polymer network has been damaged during the removal of the
template, and thus the inter-particle forces are weaker in one part of the mesh.
The problem has been solved first by using pure nano-scale approach, with non-linear model
allo wing for large deformat ions, with quadratic potentials (17). The resulting equilibriu m
configurations of polymer network part icles are presented in Figure 9 and 10. The damage has been
modeled here by assuming smaller values of the spring stiffness coefficients kDE .
Then, the problem has been solved again by using the mult i-scale approach. The part of the mesh
with undamaged poly mer has been modeled by the macro -scale approach, with Finite Element
Method. The part o f the mesh with the damaged polymer, denoted in Figure 11 by red co lor, has been
modeled by the nano-scale approach with linear model assuming small deformat ions and quadratic
potentials. The results – the x, y and z co mponents of the vector displacement field are presented in
Figures 8, 9 and 10. The damage of the poly mer, modeled by weakening the inter-part icle forces
results in slight lean of the feature, illustrated in Figure 5 fo r the nano-scale model, and in Figure 8, for
the macro-scale model. The displacement fields are similar in both nano -scale and macro-scale
simulations.

Figure 9: X, Y and Z components of the displacement vector field for the interior modeled by linear elastictity
with thermal expansion coefficient

Figure 10: Results of the non-linear model allowing
for large deformations, with quadratic potentials

Figure 11: 3D mesh for multi-scale simulations. The
blue color denotes the macro-scale domain with FEM
model, the red color denotes the nano-scale domain
with M S model

To conclude this section, let us look at the co mparison of the execution t imes of the graph
transformation based multi-frontal solver executed with and without the reuse technique. The
computations have been performed sequentially on a cluster node with Dual-Core AMD Opteron
processor clocked at 2.6 GHz with 32 GB using a Fortran 90 implementation.
The results are presented in Figures 12-13. The horizontal axis denotes different polynomial orders
of appro ximations utilized over the macro-scale do main (p parameter). Different lines correspond to
different number o f elements in each direction (n parameter). The resulting speedup of the reuse solver
algorithm is presented in Figure 13.

1035

Fast graph transformation...

Marcin Sieniek

Figure 12: Left panel: Execution time of the solver without reuse
Right panel: Execution time of the solver with reuse

Figure 13: Speedup of the reuse solver

5 Conclusions & future work
In this paper a fast multi-frontal solver algorithm with a reuse technique has been presented along
with a theoretical description using graph transformation systems. The benefits from this technique
have been exemp lified on a problem fro m nano-lithography domain, however the technique can be
used on a wider class of problems defined on a regular domain with equal material coefficients and
should offer significant savings especially in setups where parallel processing is not an option.
The technique is limited to sequential execution though. The single-point coupling method used is
also known to have limitations (Bau man et al. 2008) so the future work could include imp lementin g
the Arlequin interface instead. Apart fro m that, it would be desirable to define the boundaries of
applicability of the re-use technique formally and define the conditions of a problem that help
maximize the outcome.

6 Acknowledgement
The work has been supported by the AGH University of Science and Technology dean grant.

References
Bailey, T. C., Colburn, M. E., Choi, B. J., Grot., A., Ekerdt, J. G., Sreenivasan, S. V., Willson C. G.
(2002) Step and Flash Imprint Lithography: A Low-Pressure, Room Temperature Nanoimprint
Patterning Process. Alternative Lithography. Unleashing the Potentials of Nanotechnology. C.
Sotomayor Torres (editor) Elsevier

1036

Fast graph transformation...

Marcin Sieniek

Bau man, P.T., Ben Dhia, H., Elkhodja, N., Oden, J.T., Prudhomme, S. (2008). On the application of
the Arlequin method to the coupling of particle and continuum models, Computational
Mechanics, vol. 42, pp. 511-530
Burns, R. L., Johnson, S. C., Sch mid, G. M ., Kim, E. K., Dickey, D. M . D., Meiring, J., Burns, S. D.,
Stacey, N. A., Willson C. G. (2004). Mesoscale modeling for SFIL simu lating poly merization
kinetics and densification, Proceedings of SPIE
Colbu m, M . E., Suez, I., Choi, B. J., Meissi, I., Bailey, T., Sreenivasan, S. V., Ekerdt, J. E., Willson,
C. G. (2001). Characterization and modeling of volumetric and mechanical propert ies for SFIL
photopolymers. Journal of Vacuum Science and Technology B, vol. 19, pp. 6-20.
Demkowicz L., Ku rtz J., Pardo D., Paszynski M., Zdunek A. (2007). Co mputing with hp-Adaptive
Finite Element Method. Vol. II. Frontiers: Three Dimensional Elliptic and Maxwell Problems .
Chapmann & Hall / CRC Applied Mathematics and Nonlinear Science
Demkowicz, L., Kurtz, J., Pardo, D., Paszyński, M., Rachowicz, W., Zdunek A. (2008). Computing
with hp Adaptive Finite Elements. Volume 2. Frontiers: Three Dimensional Elliptic and Maxwell
Problems with Applications
Duff I. S., Reid J. K. (1984). The mu ltifrontal solution of unsymmetric sets of linear systems, SIAM
Journal of Scientific and Statistical Computing, vol. 5, pp.633-641.
Duff I. S., Reid J. K. (1983). The mu lt ifrontal solution of indefinite sparse symmetric linear equations,
ACM Transations on Mathematical Software, vol. 9, pp. 302-325
Geng P., Oden T. J., van de Geijn R. A. (2006) . A Parallel Multifrontal Algorith m and Its
Implementation, Computer Methods in Applied Mechanics and Engineering , vol. 149, pp.289301.
Hughes T. J. R. (2000). The Finite Element Method. Linear Statics and Dynamics Finite Element
Method Analysis, Dover
Paszynska, A., Grabska, E. and Paszynski, M. (2012a). A graph grammar model of the hp adaptive
three dimensional finite element method. part I, Fundamenta Informaticae, vol. 114 (2), pp. 149182.
Paszynska, A., Grabska, E. and Paszynski, M. (2012b). A graph grammar model of the hp adaptive
three dimensional finite element method. part II, Fundamenta Informaticae vol. 114 (2), 183-201.
Paszynska, A., Paszynski, M., Grabska, E. (2008). Graph transformations for modeling hp-adaptive
fin ite element method with t riangular elements, Lecture Notes in Computer Science, vol. 5103
pp. 604–613.
Paszynska, A., Paszynski, M., Grabska, E. (2009). Graph Transformations for Modeling hp-Adaptive
Fin ite Element Method with Mixed Triangular and Rectangular Elements , Lecture Notes in
Computer Science, vol. 5545, pp.875-884
Paszynski, M . (2009a). On the parallelization o f self adaptive hp -finite element methods part I.
composite programmable graph grammar model, Fundamenta Informaticae, vol. 93 no. 4, pp.
411–434.
Paszynski, M. (2009b). On the parallelizat ion of self -adaptive hp-fin ite element methods part ii.
partitioning co mmunication agglo merat ion mapping (PCAM) analysis, Fundamenta Informaticae,
vol. 93 no. 4, pp. 435–457.
Paszynski, M., Barabasz, B., Schaefer R. (2007). Efficient Adaptive Strategy for Solving Inverse
Problems, Y. Shi et al. (Eds.): ICCS 2007, Part I, Lecture Notes In Computer Science 4487,
pp.342–349
Paszynski, M., Pardo, D., Paszynska, A. (2010). Parallel mu lti-frontal solver for p adaptive fin ite
element modeling of mu lti-physics computational problems, Journal of Computational Science,
vol. 1, no. 1, pp. 48-54.
Paszynski, M., Pardo, D., Calo, V. M. (2013). A direct solver with reutilization of LU factorizations
for h-adaptive finite element grids with point singularities , Computers & Mathematics with
Applications, vol. 65 (8), pp.1140-1151

1037

Fast graph transformation...

Marcin Sieniek

Paszynski, M., Ro mkes, A., Collister, E., Meiring, J., Demkowicz, L.F., W illson, C. G. (2005). On the
modeling of Step-and-Flash Imprint Lithography using molecular statics models. ICES Report,
vol. 05-38
Paszynski, M., Schaefer R., (2010). Graph grammar driven partial differential eqautions solver,
Concurrency and Computations: Practise and Experience, vol. 22, no. 9, pp.1063-1097.
Strug, B., Paszynska, A., Paszynski, M . (2013). Using a graph grammar system in the finite element
method, International Journal of Applied Mathematics and Computer Science, vol. 23(4), pp.839853
Slusarczy k, G., Paszynska, A. (2013). Hypergraph Grammars in hp-adaptive Finite Element Method,
Procedia Computer Science, vol. 18 pp.1545-1554
Szy mczak, A., Paszynska, A., Gurgul, P. (2013). Graph Grammar Based Direct Solver for hp-adaptive
Fin ite Element Method with Po int Singularities , Procedia Computer Science, vol. 18, pp. 15941603

1038

