Harmonic Variation of Edge Size in Meshing
CAD Geometries from IGES Format
Maharavo Randrianarivony
Institute of Computer Science
Christian-Albrecht University of Kiel, 24098 Kiel, Germany
maharavo@informatik.tu-chemnitz.de

Abstract. We shall describe a mesh generation technique on a closed
CAD surface composed of a few parametric surfaces. The edge size function is a fundamental entity in order to be able to apply the process of
generalized Delaunay triangulation with respect to the ﬁrst fundamental form. Unfortunately, the edge size function is not known a-priori in
general. We describe an approach which invokes the Laplace-Beltrami
operator to determine it. We will discuss theoretically the functionality
of our methods. Our approach is illustrated by numerical results from the
harmonicity of triangulations of some CAD objects. The IGES format is
used in order to acquire the initial geometries.
Keywords: Geometric modeling, IGES, mesh generation, CAD models,
edge size, Delaunay.

1

Introduction

The importance of meshes in computer graphics and geometric modeling has
become evident in the past decades [1],[6],[8]. In this paper, we address the
problem of creating a mesh [7] on a surface Γ of a CAD model. We report on the
results of our intensive implementation using IGES (Initial Graphics Exchange
Speciﬁcation) format as CAD exchange. Our main goal focus on the fact that
we want the variation of lengths of the neighboring edges to be smooth. That
will result in meshes composed of nicely shaped triangles. The generation of a
surface mesh by means of the generalized Delaunay technique [4],[6] with respect
to the ﬁrst fundamental form [2] requires the knowledge of the edge size function
which is unfortunately unknown a-priori [10].
In [1], the authors triangulate planar domains using the Delaunay technique.
A method for evaluating the quality of a mesh is given in [6]. Some upper bound
of the Delaunay triangulation has been investigated in [4]. In this document, our
main contribution is the determination of the edge size function for the Delaunay triangulation with respect to the ﬁrst fundamental form. Additionally, we
examine theoretically the functionality of our method. Furthermore, our description is supported by numerical results produced from real IGES data where we
investigate mesh harmonicity.
In the next section, we will state our problem more speciﬁcally and we will
introduce various important deﬁnitions. After quickly giving a motivation for
M. Bubak et al. (Eds.): ICCS 2008, Part II, LNCS 5102, pp. 56–65, 2008.
c Springer-Verlag Berlin Heidelberg 2008

Harmonic Variation of Edge Size in Meshing CAD Geometries

57

planar problems in section 3, we will detail the meshing of a single parametric
surface by using generalization of Delaunay triangulation in section 4. Since the
edge size function is known on the boundary, the treatment of the LaplaceBeltrami problem becomes a boundary value problem which we propose to solve
numerically in section 5 which contains also the theoretical background of the
mesh generation approach. In section 6, we focus on practical aspect and intuitive
description for practitioners. Toward the end of the paper, we report on some
benchmarks of CAD objects from IGES ﬁles and we compare our method with
other approaches.

2

Deﬁnitions and Problem Setting

In our approach, the input is a CAD object which is bounded by a closed surface
Γ that is composed of n parametric surfaces {Sk }nk=1 . Each Sk is given as the
image of a multiply connected domain Dk ⊂ R2 by the following function
xk : (u1 , u2 ) ∈ R2 −→ (xk,1 (u1 , u2 ), xk,2 (u1 , u2 ), xk,3 (u1 , u2 )) ∈ R3

(1)

which is supposed to be bijective and suﬃciently smooth [5]. The surfaces Sk
will be referred to as the patches of the whole surface Γ . Every patch of the
surface Γ is bounded by a list of curves Ci . The CAD models come from IGES
format where the most important nontrivial entities are enlisted in Table 1.
Table 1. Most important IGES entities
IGES Entities
ID numbers IGES-codes
Line
110
LINE
Circular arc
100
ARC
Polynomial/rational B-spline curve
126
B SPLINE
Composite curve
102
CCURVE
Surface of revolution
120
SREV
Tabulated cylinder
122
TCYL
Polynomial/rational B-spline surface
128
SPLSURF
Trimmed parametric surface
144
TRM SRF
Transformation matrix
124
XFORM

A mesh Mh is a set of triangles Tk ⊂ Rd (d = 2, 3) such that the intersection
of two nondisjoint diﬀerent triangles is either a single node or a complete edge.
If d is 2 (resp. 3), then we will call Mh a 2D (resp. 3D) mesh. For a node A in
a mesh Mh , its valence η(A) is the number of edges which are incident upon A.
The set of nodes which are the endpoints of edges incident upon A, and which
are diﬀerent from A, will be denoted by ν(A). Our objective is to generate a 3D
mesh Mh such that all nodes of Mh are located on the surface Γ . Additionally,
we want that the edge lengths vary slowly implying that the lengths of the three
edges in any triangle T ∈ Mh are proportional.

58

M. Randrianarivony

We will need the matrix I(xk ) := [gij (xk )] which represents the ﬁrst fundamental
form where
3

gij (xk ) :=<

3

∂xk ∂xk
∂xk,p ∂xk,p
,
>=
∂ui ∂uj
∂ui ∂uj
p=1

i, j ∈ {1, 2}.

(2)

Motivation for the Planar Case

In this section, we want to treat brieﬂy the mesh generation problem in the planar
case (see Fig. 1) that should provide both motivation and intuitive ideas which
facilitate the description of the general case of parametric surfaces. For that
matter, we want to triangulate a planar multiply connected domain Ωh ⊂ R2
with polygonal boundaries Ph . Note that the boundary edge sizes are generally
nonuniform (see Fig. 1). That is usually caused by adaptive discretization of
some original curved boundaries P according to some error criteria. In order to

(a)

(b)

(c)

(d)

Fig. 1. Selected steps in mesh recursive reﬁnement

obtain a few of triangles while keeping their good quality shape (Fig. 1(d)), the
variation of sizes of neighboring edges should be small. Let us introduce the edge
size function
(3)
ρ : Ωh −→ R+ .
If this function is explicitly known, then a way to obtain the mesh is to start
from a very coarse mesh (Fig. 1(a)) and to apply node insertion [2] in the middle of every edge [a, b] whose length exceeds the value of ρ at the midnode of
[a, b]. Delaunay edge ﬂipping is simultaneously applied to achieve better angle
conditions. Unfortunately, the value of ρ is not known in practice. Since the edge

Harmonic Variation of Edge Size in Meshing CAD Geometries

59

size function ρ is known at the boundaries ∂Ωh = Ph , we consider the following
boundary value problem:
Δρ :=

∂2ρ
∂2ρ
+
=0
2
∂u1
∂u22

in Ωh ,

(4)

with the nonhomogeneous Dirichlet boundary condition given by the edge sizes
at the boundary. That means the edge size function is required to be harmonic.
A harmonic function satisﬁes in general the mean value property:
ρ(a1 , a2 ) =

1
2π

2π

ρ(a1 + r cos θ, a2 + r sin θ)dθ.

(5)

0

That is, ρ(a) is ideally the same as the average of the values of ρ in a circle
centered at a = (a1 , a2 ). In that way, the edge size function ρ has practically
small variation. Meshes with small edge size variation have advantages [10] in
graphics and numerics. First, they use few triangles while not loosing shape
quality. Second, they prevent numerical instabilities which are not desired in
simulations.

4

Meshing Using the First Fundamental Form

In this section, we summarize the meshing of a single patch Sk speciﬁed by the
smooth parametric function xk given in (1). To simplify the notation, we will
drop the index k in the sequel. The approach in triangulating S is processed in
two steps. First, a 2D mesh on the parameter domain D is generated according
to the ﬁrst fundamental form. Afterwards, the resulting 2D mesh is lifted to the
parametric surface S by computing its image by x. We will call an edge of a
mesh in the parameter domain a 2D edge and an edge in the lifted mesh a 3D
edge. For that purpose, one starts from a coarse 2D mesh of D and a generalized
two dimensional Delaunay reﬁnement is used as summarized below. Similarly to
the planar case, we introduce an edge size function ρ which is deﬁned now on
the parametric surface ρ : S −→ R+ . By composing ρ with the parameterization x of S, we have another function ρ˜ := ρ ◦ x which we will call henceforth
”parameter edge size function” because it is deﬁned for all u = (u, v) in the parameter domain. Let us consider a 2D edge [a, b] ⊂ D and let us denote the ﬁrst
fundamental forms at a and b by Ia and Ib respectively. Further, we introduce
the following average distance between a and b
dRiem (a, b) :=

−
→T −
→
ab T ab

T := 0.5(Ia + Ib ).

(6)

The 2D edge [a, b] is split if this average distance exceeds the value of the parameter edge size function ρ˜ at the midnode of [a, b]. Note that no new boundary
nodes are introduced during that reﬁnement because only internal edges are allowed to be split. Consider now a 2D edge [a, c] shared by two triangles which
form a convex quadrilateral [a, b, c, d]. Denote by T the average values of the

60

M. Randrianarivony

ﬁrst fundamental forms Ia , Ib , Ic and Id at those nodes. The edge [a, c] is ﬂipped
into [b, d] if the next generalized Delaunay angle criterion is met
−
→ −
→ −
→T −
→
−
→ −
→ −
→T −
→
bc × ba (da T dc) < da × dc (cb T ba).

(7)

We would like now to describe the procedure of obtaining the initial coarse
triangulation. Suppose that we have a 2D domain P which may contain some
holes and which has polygonal boundaries. We may think of P as a polygonal
discretization of the parameter domain D. First, the polygon P is split into a
N
few simply connected polygons P = i=1 P(i) . Afterwards, we do the following
for every simply connected polygon P(i) . One initializes its set of triangles as
(i)
empty set Th = ∅. Then, one ﬁnds a triangle T which can be chopped oﬀ from
(i)
(i)
P(i) . We apply some updating P(i) := P(i) \ T and Th := Th ∪ T . We repeat
the same chopping until Pi has no vertices left. Finally, the triangulation of P
(i)
is the union of all triangulations: Th := ∪N
i=1 Th .

5

Edge Size and Theoretical Discussion

Let us consider a parametric surface S and a diﬀerentiable function F : S −→ R.
The Laplace-Beltrami operator is deﬁned by
1 ∂
ΔS F = − √
g ∂uj

√
∂F
ggij
∂ui

(8)

in which we use Einstein notation in indexing and g is the determinant of I which
we introduced in (2). The function F is said to be harmonic if ΔS F = 0. Since
the edge size function ρ should be harmonic, we have the following problem
−ΔS ρ = 0
ρ = ρbound

in S
on ∂S .

(9)

The values of ρ at the boundary which are denoted by ρbound are known because
they are described by the boundary discretization. We will sketch in this section
how to numerically solve the boundary value problem (9) by means of the ﬁnite
element method. For that end, we take a temporary mesh Mh on S and we
denote its boundary by ∂Mh . For a smooth function φ which takes value zero
at the boundary we have
−

< ∇S ρ, ∇S φ >=: a(ρ, φ) .

ΔS ρφ =
S

(10)

S

Let us deﬁne the following set of approximating linear space Vh := {f ∈ C0 (Mh ) :
f|T ∈ P1 ∀ T ∈ Mh }, where C0 (Mh ) denotes the space of functions which are
globally continuous on Mh and P1 the space of linear polynomials. For a function
g we deﬁne the set Vhg := {f ∈ Vh : f = g on ∂Mh } which is not in general a
linear space. The approximated solution ρh will reside in the set Vhρbound . In order

Harmonic Variation of Edge Size in Meshing CAD Geometries

61

to ﬁnd ρh , we pick an element ρ˜ of Vhρbound and deﬁne μh by setting ρh = ρ˜ + μh .
The function ρh is therefore completely determined if we know the new unknown
function μh which resides interestingly in Vh0 . Observe that Vh0 is a linear space
in which we choose a basis {φi }i∈I . As a consequence, the function μh is a linear
combination of {φi }i∈I : μh =
i∈I μi φi . By introducing the following bilinear
form ah (·, ·)
ah (ψ, φ) :=

aT (ψ, φ)

with

aT (ψ, φ) :=< ∇T ψ, ∇T φ >,

(11)

T ∈Mh

we have ah (ρh , φ) = 0
∀φ ∈ Vh0 or equivalently ah (μh , φ) = −ah (˜
ρ, φ)
0
∀φ ∈ Vh . Since φi builds a basis for Vh0 , this leads to a linear equation
ah (φi , φj )μi = −ah (˜
ρ, φj )

∀j ∈ I .

(12)

i∈I

One can assemble the stiﬀness matrix Mij := ah (φi , φj ) and solve (12) for μi
which yields the value of μh . For every triangle T in Mh with internal angles
α1 , α2 and α3 , its contribution to the stiﬀness matrix M is
⎡
⎤
− cot α3
− cot α2
cot α2 + cot α3
MT = 0.5 ⎣ − cot α3
cot α1 + cot α3
− cot α1 ⎦ .
(13)
− cot α2
− cot α1
cot α1 + cot α2
We want now to theoretically discuss the applicability of the former triangulation to a given CAD model. We will only emphasize on the main points but the
complete detail can be seen in [10]. The main critical aspects which we want to
clarify are twofold. First, it has been shown that from every simply connected [9]
polygon P, one may remove two triangles T1 and T2 (called ears) by introducing
internal cuts. Thus, if we suppose that the polygon has n vertices, we need to
chop oﬀ triangles (n − 2) times in order to obtain the initial coarse mesh. As
a consequence, a simply connected polygon can be triangulated by using only
boundary nodes. For triangulation of multiply connected polygons, we need to
split them ﬁrst into several simply connected polygons [9],[10].
Now, we will show that the linear system from (12) is uniquely solvable.
Consider a triangle T = [A, B, C] of the mesh Mh . Let N 3 be the unit normal
vector of T . Generate two unit vectors N 1 and N 2 perpendicular to N 3 such
that (N 1 , N 2 , N 3 ) is an orthonormal system which can be centered at A. Since
the triangle T is located in the plane spanned by (N 1 , N 2 ), every point x ∈ T
−→
can be identiﬁed by (v1 , v2 ) ∈ R2 such that Ax = v1 N 1 + v2 N 2 .
Consider the triangle t := [(0, 0), (1, 0), (0, 1)] and let ϕ be the parameterization which transforms t into T :
V1 W1
u1
ϕ1 (u1 , u2 )
:=
,
(14)
ϕ2 (u1 , u2 )
V2 W2
u2
−−
→
−→
where (V1 , V2 ) and (W1 , W2 ) are the components of W := AB and V := AC in
(N 1 , N 2 ). Denote by M the above matrix and let θ be the inverse of ϕ:
1
θ1 (v1 , v2 )
=
θ2 (v1 , v2 )
det M

W2 −W1
−V2 V1

v1
.
v2

(15)

62

M. Randrianarivony

Let ψ be the linear polynomial which transforms ψ(0, 0) = μ(A), ψ(1, 0) = μ(B),
ψ(0, 1) = μ(C). Its exact expression is ψ(u1 , u2 ) = [μ(B) − μ(A)]u1 + [μ(C) −
μ(A)]u2 + μ(A). We want to compute aT (·, ·) in terms of (u1 , u2 ). By introducing aij := ∂vj θi , the integrand for aT (·, ·) involves I(u1 , u2 ) := (a11 ∂u1 ψ +
a21 ∂u2 ψ)2 + (a12 ∂u1 ψ + a22 ∂u2 ψ)2 . Because of (15), we have a11 = W2 /D, a12 =
−W1 /D, a21 = −V2 /D and a22 = V1 /D where D = det M . By using the fact
that cos α =< V, W > /( V · W ) and sin α = det M/( V · W ), we obtain
1
{[μ(B)−μ(C)]2 cot α+[μ(C)−μ(A)]2 cot β +[μ(B)−μ(A)]2 cot γ}.
I(u1 , u2 ) = D
We have therefore
aT (μ, μ) =

I(u1 , u2 )(det M )du1 du2

(16)

t

= 0.5{[μ(B) − μ(C)]2 cot α + [μ(C) − μ(A)]2 cot β +
[μ(B) − μ(A)] cot γ}.
2

(17)
(18)

By introducing Ψ (μ) := aT (μ, μ), the system in (13) can be obtained by aT (μ, ν) =
˜ := 1 (∂u1 ψ)W and V˜ := 1 (∂u2 ψ)V ,
0.5[Ψ (μ + ν) − Ψ (μ) − Ψ (ν)]. Denote by W
D
D
˜ 2−2 < W
˜ , V˜ > + V˜ 2 . Thus, I(u1 , u2 ) = 0 iﬀ W
˜ = λV˜
we have I(u1 , u2 ) = W
0
for some λ ∈ R. Since μ ∈ Vh is globally continuous and it takes zero values at
the boundary, we have μ = 0. The form ah (·, ·) is thus symmetric positive deﬁnite.
Hence, the linear system from (12) is solvable and the edge size function can be
deduced.

6

Practical Aspect and Intuitive Description

In this section, we describe a realistic approach which is interesting for practitioners. Intuitively, our meshing approach is similar to the standard 2D Delaunay
but we replace the usual Euclidian distance by the one given in (6). That means,
the 2D parameter mesh which might be very anisotropic corresponds to a surface
mesh that is very well shaped. In the previous discussions, the triangulation of a
single trimmed surface [3] was provided. In practice, an IGES ﬁle contains several trimmed surfaces. Therefore, we will describe brieﬂy how to triangulate the
whole surface Γ composed of the patches S1 , · · · , Sn . First, we discretize (Fig.
˜ i in which we aim at
2) the curved boundaries Ci by piecewise linear curves C
both accuracy and smoothness: curves which are almost straight need few vertices while those having sharp curvatures need many vertices [10]. Afterwards,
˜ i back to the
we map the 3D nodes of the relevant piecewise linear curves C
2
parameter domain Dk ⊂ R for each patch Sk . Thus, we may apply the former
approach to the polygons formed by the 2D preimages of the 3D nodes. In other
words, a mesh Mk is created by using the technique in section 4 for each surface
patch Sk . Finally, one merges the meshes M1 ,· · ·, Mn in order to obtain the
ﬁnal mesh of Γ . Since we use no boundary nodes other than those corresponding to the preimages, no new nodes are inserted during the reﬁnements. As a
consequence, nodes at the interface of two adjacent patches align.

Harmonic Variation of Edge Size in Meshing CAD Geometries

(a)

63

(b)
Fig. 2. (a)Boundary nodes (b)Surface mesh

7

Numerical Results and Comparison

In this section, we illustrate our former approach numerically. Additionally, we
compare our results with other meshing approaches. The CAD objects whose
surfaces have to be triangulated are given as input in IGES ﬁles. We consider
four CAD objects which have respectively 30, 25, 24 and 26 patches. We used
the former method to generate meshes on their surfaces. The resulting meshes,
having respectively 11834, 7944, 7672 and 8932 elements, as portrayed in Fig.
3. We would like to investigate the harmonicity of the meshes which we want to
deﬁne now. For any considered node A ∈ R3 of a mesh Mh , we deﬁne
ρ(A) :=

1
η(A)

−
−
→
AB

(19)

B∈ν(A)

to be the average edge length. Now we deﬁne r(A) to be the length of the shortest
edge incident to a node A and we let si (A) be the intersection of the i-th edge
[A, Bi ] incident upon A and the sphere centered at A with radius r(A). We deﬁne
the discrete mean value ρmean (A) to be
ρmean (A) :=

1
η(A)

η(A)

ρ(si (A))

(20)

i=1

in which ρ(si (A)) is the following convex combination of ρ(A) and ρ(Bi )
−
→
Asi
ρ(si (A)) := −−→ ρ(Bi ) +
ABi

−
→
Asi
1 + −−→
ABi

ρ(A).

64

M. Randrianarivony

(a)

(b)

(c)

(d)

Fig. 3. Four meshes generated from CAD objects
Table 2. Harmonicity of the four meshes

mesh1
mesh2
mesh3
mesh4

Average harmonicity Smallest harmonicity Largest harmonicity
0.997292
0.738332
1.263884
0.997050
0.724865
1.231922
0.997709
0.755730
1.239204
0.997353
0.745304
1.270894

We have a discrete mean value property if ρ(A) = ρmean (A). We deﬁne the harmonicity of a node A to be the ratio ξ(A) := ρ(A)/ρmean (A). If the value of the
harmonicity approaches the unity, the discrete mean value property is valid. We
have computed the average harmonicity of the four meshes and the results can be
found in the next table. As one can note in Table 2, the mesh sizes in our tests
practically satisfy good harmonicity. That can equally be observed in Fig. 3.

Harmonic Variation of Edge Size in Meshing CAD Geometries

65

Most mesh generation approaches do not take harmonicity into consideration. For the sake of comparison, we have generated four meshes for the same
CAD data but with another meshing technique where the harmonicity is neglected. The resulting average harmonicities are respectively 1.603, 1.909, 1.512
and 1.802. That means that neighboring edges are not guaranteed to have proportional edge size.

8

Conclusion and Future Work

We have described a method for generating a triangular surface mesh on a CAD
model which is given by an IGES format. Neighboring edges have proportional
lengths. That was achieved by imposing that the edge size function is conform
with the Laplace-Beltrami operator. In the future, we will improve the implementation by including more IGES entities. Since many people move now from
the graphic standard IGES to STEP, we intend also to accept STEP ﬁles. Additionally, we will develop quadrilateral meshes since they are appropriate for
some graphical or numerical tasks.

References
1. Borouchaki, H., George, P.: Aspects of 2-D Delaunay Mesh Generation. Int. J.
Numer. Methods Eng. 40(11), 1957–1975 (1997)
2. Bossen, F., Heckbert, P.: A Pliant Method for Anisotropic Mesh Generation. In:
5th International Meshing Roundtable Sandia National Laboratories, pp. 63–76
(1996)
3. Brunnett, G.: Geometric Design with Trimmed Surfaces. Computing Supplementum 10, 101–115 (1995)
4. Edelsbrunner, H., Tan, T.: An Upper Bound for Conforming Delaunay Triangulations. Discrete Comput. Geom. 10, 197–213 (1993)
5. Farin, G.: Curves and Surfaces for Computer Aided Geometric Design: A Practical
Guide. Academic Press, Boston (1997)
6. Frey, P., Borouchaki, H.: Surface Mesh Quality Evaluation. Int. J. Numer. Methods
Eng. 45(1), 101–118 (1999)
7. Graham, I., Hackbusch, W., Sauter, S.: Discrete Boundary Element Methods on
General Meshes in 3D. Numer. Math. 86(1), 103–137 (2000)
8. Kolingerova, I.: Genetic Approach to Triangulations. In: 4th International Conference on Computer Graphics and Artiﬁcial Intelligence, France, pp. 11–23 (2000)
9. O’Rourke, J.: Computational Geometry in C. Cambridge Univ. Press, Cambridge
(1998)
10. Randrianarivony, M.: Geometric Processing of CAD Data and Meshes as Input of
Integral Equation Solvers. PhD thesis, Technische Universit¨
at Chemnitz (2006)

