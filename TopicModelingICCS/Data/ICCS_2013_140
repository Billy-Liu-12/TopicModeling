Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1495 – 1504

International Conference on Computational Science, ICCS 2013

Evacuation simulation supporting high level
behaviour-based agents
Pablo Cristian Tisseraa,∗, Alicia Castroa , A. Marcela Printistaa,b , Emilio Luquec
a Laboratorio

de Investigaci´on y Desarrollo en Inteligencia Computacional
Universidad Nacional de San Luis -Argentina
b CONICET CCT-San Luis
c Departamento de Arquitectura de Computadores y Sistemas Operativos
Universidad Aut´onoma de Barcelona - Espa˜na

Abstract
Computer based models describing pedestrian behaviour in an emergency evacuation play a vital role in the development
of active strategies that minimise the evacuation time when a closed area, with a relatively small number of ﬁxed exits, must
be evacuated for a large number of people. The proposed model has a hybrid structure where the dynamics of ﬁre and smoke
propagation are modelled by mean of Cellular Automata and for simulating peoples behaviour we use Intelligent Agents. Each
agent will possess certain psychological, physiological and social characteristics and based on information that is capable of
receiving from its sensors, it may perceive what is happening around, and then take a decision that will reﬂect its ability to
cope with the emergency evacuation, called in this work, behaviour. The simulation model consists of two sub-models, called
pedestrian and environmental. As part of the pedestrian model, we have prototyped a methodology that is able to model some
of the frequently observed human behaviours in evacuation exercises. In order to test the developed behaviours, we choose
simple exercises where the model is applied to slightly diﬀerent situations of an evacuation due to a potential hazard, such as
ﬁre, smoke or some kind of collapse.

© 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
c 2013 The Authors. Published by Elsevier B.V.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational
Selection and/or peer-review under responsibility of the 2013 International Conference on Computational Science.
Science
Keywords: evacuation simulation; emergency evacuation; intelligent agents; behaviour-based architecture; cellular automata

1. Introduction
In the last years, several modelling approaches have been proposed to deal with the emergency evacuations
because the prediction of the peoples behaviour is of great public interest. An emergency is an unplanned event
with the capability of disrupting operations, causing environmental damage and especially endangering life.
People, who face a situation of evacuation, can react in many diﬀerent ways. For example, for a given environment, the traces and times evacuation of people familiar with the place and another who completely ignores it,
∗ Corresponding

author. Tel.: +54-266-4614369
E-mail address: ptissera@unsl.edu.ar.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.317

1496

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

may diﬀer greatly, especially in the ﬁrst minutes of the evacuation considered critical to the success of an evacuation. These diﬀerent ways of reacting of the pedestrian and its impact at the time of evacuation of a building is the
object of study of this work.
The simulation of evacuation of many individuals requires models which nevertheless provide an accurate
description of reality. One type of models is the microscopic approach, which allows to investigate the evolution
of an evacuation while the model runs.
Within this category there is a diversity of models, among them we have: a) Social Forces Model(SFM) [1],
where the pedestrians are treated as particles subject to long ranged forces induced by social behaviour of the
individuals; b) Cellular Automata (CA) Model [2, 3, 4, 5] deﬁned as a discrete dynamic system that oﬀers an
appealing alternative because its capacity to develop complex behaviours from a simple set of rules and c) MultiAgent System (MAS) [6, 7], where we explicitly describe the making-decision process of simulated actors at
the micro-level and the structures emerge at the macro level as a result of the actions of the agents, and their
interactions with other agents and the environment. Models based on the concept of social forces and cellular
automata, can represent individuals as basic units of the system but they have the limitation of assuming that the
individuals depicted are homogeneous, i.e. their behaviour will be governed by the same rules [8]. In particular,
cellular automata allow to generate local and uniform behaviours that resemble the dynamics observed in real
processes of ﬁre and smoke propagation. However, these local features were not suitable for representing certain
aspects of peoples behaviours that require a more speciﬁc and diﬀerentiated perspective. We have developed a
model where peoples behaviours are modelled by mean of intelligent agents (IA) and for simulating the ﬁre and
smoke propagation we use CA concept. In the proposed hybrid model, the space is discretised into small cells
which have certain dynamic characteristics (e.g. level of smoke or ﬁre) and can either be empty or occupied
by exactly one pedestrian. Each pedestrian is an agent that will have its own thread of control and be able to
run independently appropriate actions according to their own state, the perceived environment and the messages
provided by the system (external stimuli).
An important aspect of our project was the choice of the appropiate agent approach. A deliberative strategy
relies on a centralised world model for verifying sensory information and generating actions in the world [9]. The
information is used by the making-decision process to produce the most appropriate sequence of actions for the
agent. A purely reactive strategy maintains no internal models and performs no search [10, 11, 12]. Typically,
they apply a simple functional mapping between stimuli and appropriate responses, usually in the form of a look
up in a table or in a set of rules. In [13, 14] was proposed an architecture that falls between purely reactive and
deliberative called behaviour-based approaches. We used this type of architecture because it allowed us to express
processed further behaviour than those purely reactive. In our model each agent will be determined by their current
perceptions and behaviour. This type of system provides solutions in dynamic and uncertain environments, where
the agent has only a partial view of the problem. At ﬁrst, the agent must observe the environment and gather the
state of outside world with its inner world. With this information the agent updates its knowledge, analyses the
situation and acts running the rules of its active behaviour or changing to a new state (new behaviour).
This paper is organised as follows. Section 2 describes the simulation model. The sub-section 2.1 explains
the sub-model called pedestrian (PsM) and addresses the agent architecture adopted in this work. The section 3
explains the implementation of four primitive behaviours commonly observed in emergency evacuation. In section
4 we describe our work with diﬀerent instances of the problem we are concerned and report the performance
analysis of each case. Finally, the section 5 presents the conclusions.
2. Simulation Model
We have developed a simulation model in which all funcionalities needed can be included in this self made
simulation environment. The output of the model is ﬂexible and can be used for diﬀerent kinds of analysis.
The model consists of two sub-models, called environmental (EsM) and pedestrian (PsM). This model along
with the computational methodology allow us to build an artiﬁcial environment populated with autonomous agents,
which are capable of interacting with each other. The Fig. 1 shows the hybrid model.
The EsM, based on CA, describes the spatial conﬁguration of the environment (geometry of space, exit doors,
internal barriers, etc.) and models the processes of diﬀusion of smoke and ﬁre. The cellular space is a ﬁnite

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

1497

Fig. 1. Hybrid Model consisting of environmental and pedestrian sub-models

bi-dimensional array (grid) with closed boundaries. Each cell of the cellular space represents 40 × 40 cm2 . The
neighbourhood considered in the model is Moore’s Neighbourhood, that includes the eight cells surrounding the
central cell. With this choice we aim to provide to each individual in the system with all possible movement
directions. The simulation takes an updating time of 0.3 seconds by time-step. This value is the estimated time
required by a pedestrian for walking 0.4 m (size of a cell side). For lack of space, we do not extend into the
environment model and recommend to see [15] for a more detailed description.
The PsM uses the concept of intelligent agents to describe the cognitive processes of individual agents and
interactions among multiple agents in a speciﬁc environment. Through interaction and coordinated evolution of
these two sub-models it is possible to obtain a model capable of simulating indoor environments with a ﬁnite
number of outputs that must be evacuated by a group of people due to the threat of ﬁre and the eﬀect of the smoke.
The evacuation exercises adopts the CA model for advancing the simulation time.
In the next subsection we extend the pedestrian model, given its relationship with goals of this work.
2.1. Pedestrian Model
Intelligent agents (IA) have been used successfully in a wide range of applications. In artiﬁcial intelligence,
an intelligent agent is an autonomous entity that observes and acts upon an environment and directs its activity
towards achieving goals. The PsM is the part of the hybrid model focuses on representing the human behaviours.
In the proposed model an agent is within an environment described by a bi-dimensional grid where they can ﬁnd
diﬀerent elements such as walls, internal obstacles, exits, presence of smoke, ﬁre and other agents. During the
simulation, the environment is presented to the agent as partially observable, stochastic, sequential, and discrete
dynamic [16].
The agent architecture is illustrated in Fig. 2. Each agent has a set of psychological (memory and stress level),
physiological (age, sex, speed and level of health) and social (level of training and knowledge) characteristics that
describe it, which can also be classiﬁed as static (age, sex, etc. ) or dynamic (level of health, speed, etc. ). Besides
of all previously mentioned, each agent has a set of sensors which allows it to determine its location, proximity to
the heat, the presence of obstacles, distance to known exits, approximate congestion in each exit and detection of
signs. As we will explain later in this section, these sensors can be active or not in each agent depending on its
current behaviour. An agent can also move in any of eight directions given by the proximity of Moore (actions),
i.e. depending on its behaviour, an agent in a central cell can select any of the eight cells in their neighbourhood
to move, considering that the movement is validated.
In our model, agents respond to a behaviour-based architecture, this type of architecture tries to compensate
for the limitations of purely reactive approaches while maintaining its strengths.
In addition to incorporating some of the properties of the purely reactive systems, these systems based on
behaviour enable us to maintain an internal representation of the state of the world that is used in conjunction
with the perceptual inputs to determine the action to be performed. Normally this type of system is composed
of a collection of behaviours that are more than atomic actions that an agent can make and have the advantage
of being able to provide quick responses to dynamic environments [17, 18], allowing also carry out incremental
developments and it is relatively simple to implement. Perhaps one of the major drawbacks of this type of system

1498

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

Fig. 2. Agent architecture

is that multiple behaviours with diﬀerent objectives may be attempting to take control of the agent at the same
time. To solve this problem, known as the action selection problem [19], it is necessary to develop a mechanism
that allows us to select the appropriate behaviour in a given situation. In our model each agent has an associated
behaviour engine that manages decision-making processes. As can be seen in Fig. 3, this engine is a nondeterministic ﬁnite automaton, where each node represents the implementation of a behaviour while the transitions
represent the event for which the individual can change the state (behaviour). Besides having an original behaviour,
during the execution of a simulation, each agent will be associated an active behaviour, i.e. the automaton state
associated to the agent during the current simulation step.

Fig. 3. Example of transitions between nodes in the behaviour engine

Now, the making-decision concerns with combining new facts with existing knowledge for solving diﬀerent
situations. This arbitration state-based mechanism [20], selects an appropriate behaviour to deal with the current
situation from a determinate event detected in the environment [19]. In this way, an agent can change its behaviour
during execution of the model according to a predetermined set of rules that serve as triggers for this change. For
example, an agent unfamiliar with the environment will try to follow the signs placed in the environment to go to
an exit. In case the agent could not detect indications in its proximity, it will change its behaviour to explore the
environment and will continue in this behaviour up to detecting a sign, moment in which it will take again its initial
behaviour to be able to follow it. In this paper, the agent behaviour will be determined by their current perceptions
and attitudes of reaction. This type of system provides fast solutions in dynamic and uncertain environments,
where the agent has only a partial view of the problem.
3. Primitive Behaviours
In the current state of development, the simulator has the capability to implement three behavioural category. The
ﬁrst category is aimed at testing the behaviour of an individual who has decided to follow the signs as a strategy

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

1499

to leave the place, called Signalled Exit behaviour. An agent belonging to this behaviour will obey the signs until
leaving the place or some special situation occurs that forces him to make a decision not expected in that category.
The second category is designed to test the behaviour of an individual who does not take into account the signs.
This behaviour represents environments not signalled, and/or behaviours of individuals habituated to a place. In
this category we have implemented two types of behaviours called the Nearest Exit and the Best Predicted Exit
[21]. The last category represents the state of the agent when its strategy, at time, is interrupted by some fact. The
behaviour adopted by the agents who are in this situation is called Explore Environment.
In the Signalled Exit behaviour, the environment is unknown and the path is signalled, i.e. the cell has a sign to
indicate the direction to an exit. The agent sees the sign in a cell and moves in direction determined by sign until it
ﬁnds an exit. The agent could get out of this behaviour by the occurrence of any of the following situations: (a) it
can not see any sign; (b) the path to the exit is blocked for the presence of ﬁre, smoke, obstacles, etc. and (c) the
agent receives several signs to follow in opposite directions and it has doubt about which path to choose. In any
situation, the agent will change its behaviour to Explore Environment. The situation (c) can happen when signs are
placed too close to each other, overlapping the direction. However, in the case that the signs do not conﬂict (e.g.
go ahead and turn left), the agent will choose randomly between them and continue normally in this behaviour.
In the Nearest Exit behaviour, the agent will try to get out the exit closest to its current position. In this
behaviour the decision process will take into account the position of the agent, the direction toward the nearest
exit, the state of its environment in relation to the progress of ﬁre and smoke, but it ignores information from
other alternative solutions, the behaviour of other agents and it will not take unexpected or altruistic decisions.
The decision-making process selects the exit with the shortest PredDist j . This measure represents the estimated
distance from current position to the exit j.
In the Best Predicted Exit behaviour, the agent will analyse diﬀerent exits and choose one that it predicts the
fastest exit to evacuate. The decision process will take into account the position of the agent, the state of its
environment in relation to the progress of ﬁre and smoke, the distance to alternative exits, the density of crowd
trying to evacuate for each exit (only if the agent can see the exit) and the stress level in relation to its tolerance
to it. Under this behaviour, the agent does not follow the actions of others, i.e. remains in the category of
individual behaviour but it only checks the orientation of the other agents to choose its way toward the best exit.
As the evacuation progresses, the agent is predicting the cost (in time) to evacuate by each of the exits that are
available in the environment. The inferred lower cost will indicate the best exit. For that, the decision-making
process evaluates the following cost function: Cost j = MinPredT ime.T o j ∗ PredDist j ∗ I j ; if MinPredT ime.T o j >=
EvacPredT ime j . In other case, Cost j = EvacPredT ime j ∗ MinPredT ime.T o j ∗ PredDist j ∗ I j .
where:
• I j represents the estimated number of agents who intend to evacuate through the exit j;
• EvacPredT ime j represents the evacuation estimated time of exit j. This factor takes into account the intentions of other
agents to escape by the door j;
• MinPredT ime.T o j represents the minimum estimated time needed by the agent to reach the exit j considering a free
path (unobstructed) and
• PredDist represents the estimated distance from current position to the exit j. This calculus is made using the Dijkstra
algorithm.

Note that for the case where MinPredT ime.T o j >= EvacPredT ime j it does not take into account the value of
EvacPredT ime j , because if the spent time by the agent to reach the door ” j” is greater than the time taken to
dislodge the door, then when the agent arrives at the door, it would ﬁnd it empty.
In this behaviour, there are three parameters that control the behaviour of an agent: the re-evaluations number that
the agent can perform (EvaluationNi ), the elapsed time between each one of these re-evaluations (ElapsedT i ) and
the stress level of the agent (S tressLi ). The value of EvaluationNi controls the quantity of times that the agent i
can observe the environment and decide which exit is better for evacuating, changing or not its previous decision.
The objective of this parameter is to prevent the agent from falling into a state of permanent indecision. The
ElapsedT i controls the amount of time-steps that must occur until the agent i can perform its next re-evaluation.
The combined use of these two parameters enable us to investigate what happens with the agents if the same take
more or fewer decisions by varying the time between each one of them. Previous empirical results show that a
shorter time between re-evaluations works better for small environment, since the evacuation process is faster and

1500

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

therefore it requires that the agent has the ability to change its decision rapidly. The parameter S tressLi will be
increasing as the model evolves and it is responsible to act as a trigger for a change of behaviour. For the case
where S tressLi > HighestS tressLi (Maximum stress level), the agent i in Best Predicted Exit behaviour must change
to Nearest Exit behaviour. With this change of behaviour we intend to model the situation where an agent due to
its stress level stops evaluating the diﬀerent options that the environment oﬀers and decides to head toward the
nearest exit. The resulting procedure instructs the agent which exit to go. This parameters limits the eﬀect of
indecision of the agents that occurs when simultaneously multiple agents make the same prediction of fastest exit
to evacuate.
Finally, Explore Environment represents the state of agents who do not know either an objective exit or its next
position in a signalled environment. Its intuitive action is to keep moving until ﬁnding an exit or an event happens
changing its behaviour. To decide where to move, the agent can use the information stored in its memory enabling
it to remember the path followed by the latest movement. The probability of returning to the original behaviour
decreases as the simulation progresses.
3.1. Path to the Selected Objective
Each agent knows the objective, either its exit door or its next position in a signalled environment. Based on
the perception of its environment, the agent must select at each time step, a position on the path to its objective.
If in the neighbourhood there are free cells that come near the objective, the agent will choose the one that
most beneﬁts grants (leave it closer). If there are more than one, the choice of the position is random. If in the
neighbourhood there is no free cell, following the approach described above, the agent will select a cell that is
currently occupied by another agent. This can cause multiple agents trying to occupy the same physical location
belonging to an exit way. To solve the problem, after the agents expressed their desire to move to the nominated
cell, they should delay their movement until a conﬂict resolution process is executed. To solve the collisions we
changed the approach commonly used: instead of being the agent who decide, the selected cell is carrying out the
agents competition process. The hosting decision is concentrated in each nominated cell.
The conﬂict resolution process must solve two types of situations:
• The conﬂict occurred when multiple agents chose the same free cell. In this case the process gives priority to the
selection of agents with greater speed and fewer points of damage (agent parameter). If the conﬂict persists, the selection
will be random.
• The conﬂict occurred when multiple agents requested a cell occupied by another agent. The process must check if the
cell will be free in the next time step. If it will be free, the procedure of the same free cell is executed. Otherwise, the
agent will not move from its current cell.

In spite of failing to advance in the desired direction, it is reasonable to keep moving until some way towards
the objective is found. For this reason, it is important to point out that after a prudential time, if an agent remains
without advancing, it will try to move to any neighboring cell although, for the time being, it moves away from its
objective.
4. Test-Case Scenarios and Results
The experiments were carried out with EVAC Simulator [2], an integrated simulation system. EVAC is a
system developed in Java that allows the design and simulation of spatial environments in an explicit way. EVAC
simulator oﬀers a friendly graphical interface which can be easily used by non expert users.
We performed a series of experiments in order to test the behaviours we study focusing on showing the results
of the interaction of the two sub-models.
We consider four types of individuals, everyone associated with diﬀerent behaviours: AS E for Signalled Exit
(SE), AEE for Explore Environment (EE), ANE for Nearest Exit (NE) and ABPE for Best Predicted Exit (BPE).
With the purpose of obtaining acceptable statistical data, the results shown in all cases correspond to the
average of 50 independent replications of each experiment. The corresponding conﬁdence intervals were obtained,
for the total evacuation time (TET) (seconds), mean evacuation time (METxA) (seconds) and mean travelled
distance (MDxA) (meters) per agent to the exit. #Ei indicates mean the number of pedestrian exiting door Ei .

1501

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

In the ﬁrst set of tests, an environment of 10 x 20 m2 with 104 individuals (AS E ) and two exits are considered:
the emergency exit, E1 of 1.2 m. (on the upper right-side) and the main exit, E2 of 2.4 m. (at the bottom). The
environment recreates a cinema with individuals placed in the seats, observed in Fig. 4.
With the aim to study how the system of signs impacts on the environment, the test compares not only a well
signalled environment but also a poorly one.
• Case CN1 : the environment is poorly signalled, since there is no sign indicating to the agents the existence
of an emergency exit.
• Case CN2 : the signs have been placed correctly, therefore the agents are able to determine the existence of
the emergency exit.

Table 1. Cases of study: Signalled Environment
Case
TET (sec)
CN1
38.89-39.71
CN2
20.76-33.92

METxA (sec)
14.34-14.47
8.98-9.00

MDxA (m)
17.12-17.28
10.70-10.73

#E1
24.52
40.30

#E2
79.48
63.70

In our implementation, the radius of vision of agents is speciﬁed by parameter. In both experimental cases, the
agents are outside of the speciﬁed radius and therefore when the simulation begins, the agents can not see signs
in their closeness. The behaviour engine associated with each agent solves this situation changing its state. So,
agents change their original behaviour to explore the environment in order to locate the sign to guide them toward
the exit, that is, the agents AS E behave like agents AEE . At the time the agents visualise a sign, they return to their
original behaviour. As we can see in the Table 1, the number of people who were evacuated using the emergency
exit, E1 , was approximately increased from 25.5% (Case CN1 ) to 41.91% (Case CN2 ). In addition to, it that is
also possible to view that the evacuation times and the average distance travelled to exit have been decreased for
the Case CN2 . These evacuation processes can be graﬁcally observed in Fig. 4.

Fig. 4. Snapshot of a simulation at intermediate times: poorly (left) and well (right) signalled exits

In the second set of tests, the environment recreates the post-graduating area of the San Luis Sciences School.
It is considered an environment of 40 x 30 m2 with 610 individuals (randomly distributed) and four exits of 2 m.
each one located in opposite ends of the environment: E1 and E2 (on the upper and lower right-side); E3 and E4
(on the upper and lower left-side respectively). The environment is not signalled (Fig. 5). In the experiments
called A and B, we consider that all the people (agents) behaviour should be of type ANE . The Cases C and D are
analogous to the previous ones but all the people (agents) behaviour should be of type ABPE . The Cases E and F
describe an intermediate situation. It is important to note that in Cases A, C and E, the environment is not aﬀected
by the spread of ﬁre and heat, but in Cases B, D and F the agents must adapt to a dynamic environment due to the

1502

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

spread of ﬁre and heat. In these cases, the ﬁre spreads along the corridor and cause that two exits are blocked (E3
and E4 ).
Table 2. 610 agents distributed evenly in the building. 4 Exits.
Case
TET (sec)
METxA (sec)
MDxA (m)
A
51.25-51.74
22.41-22.42
26.88-26.89
B
79.58-80.42
25.79-25.81
30.94-30.96
C
63.82-83.30
26.14-26.26
31.34-31.52
D
77.20-91.99
30.32-30.53
36.34-36.67
E
54.15-77.94
24.20-24.25
29.01-29.10
F
80.68-83.64
30.23-30.27
36.27-36.32

#E1
140.00
276.00
136.94
283.25
136.70
274.00

#E2
164.00
334.00
177.43
326.75
173.40
336.00

#E3
170.00
0
163.73
0
165.60
0

#E4
136.00
0
131.90
0
134.30
0

The Table 2 shows the result. For the Cases A and B, the diﬀerence observed in the values obtained for TET,
METxA and MDxA is due to the appearance of the ﬁre in the vicinity of the exits E3 and E4 . This situation has as
consequence that all the agents, in Case B, must evacuate through the exits E1 and E2 , resulting in an increase in
the evacuation times and naturally also in the average distance travelled to the exit, due to the fact that the agents
who previously evacuated through the exits E3 and E4 they cannot just do it.

Fig. 5. (left) Case E: without ﬁre. (right) Case F: with ﬁre (in red). 50% ANE , 50% E1 for both cases

In an analogous way, the same results can be observed in Cases C and D, with the diﬀerence that all the agents
try to infer the fastest exit now. However, the experiments C and D show TET higher than experiments A and B.
This is because agents travelled a greater distance on average. In the experiments C and D we observed that many
agents, who in the ﬁrst instance were going to a particular exit, decide to go to other one, since they have been
able to detect a less congestion. While it is reasonable to think that agents ABPE should yield better results than the
cases with ANE , we were able to observe using our animation tool that agents with Best Predicted Exit behaviour
generate greater disruption in the environment, with agents who go from an exit to another and even intersect or
exceed each other following their path to the exit. This phenomenon can be considered as a type of emergent
behaviour due to the fact that it arises spontaneously from the interaction of the agents in the environment.
Table 3. ANE
—
Case
A
B
C
D
E
F

and ABPE indicate the type of the agent
#E1
ANE
ABPE
ANE
140.00
0
164.00
276.00
0
334.00
0
136.94
0
0
283.25
0
70.00
66.70
82.00
138.00
135.70
167.00

#E2

#E3
ABPE
0
0
177.43
326.75
91.40
169.30

ANE
170.00
0
0
0
85.00
0

#E4
ABPE
0
0
163.73
0
80.60
0

ANE
136.00
0
0
0
68.00
0

ABPE
0
0
131.90
0
66.30
0

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

1503

It should be noted that if the environmental conﬁguration were diﬀerent or location of the agents were not
evenly distributed in the environment, it would be possible to see results opposite to those mentioned above. To
verify this situation, please refer to the section Test-Case Scenarios and Results of [21].
Finally the Cases E and F show an intermediate situation (Figs. 5 and 6), where half the individuals are ANE
and the remaining are ABPE . Comparing the last two tests, as mentioned earlier the values of TET, METxA and
MDxA are increased due to the occurrence of ﬁre in the exits E3 and E4 (Case F, Fig. 6).
Furthermore, it is also possible to compare the cases A, C and E since they show the same environment without
the presence of ﬁre, where what varies is the conﬁguration of the people (agents) in the environment.
Here we can see that as we increase the amount of agents of type ABPE , the phenomenon of disruption in the
environment increases, resulting in an increase in the values of TET, METxA and MDxA. The lowest values were
obtained for the Case A (100% ANE ), while for Case C (100% ABPE ) were greatest. As an intermediate situation
is the Case E.

Fig. 6. (left) Case E. Without ﬁre, (right) Case F. With ﬁre (in red). 50% ANE , 50% E1 for both cases. Approximately at half of the evacuation
process

Table 3 shows for each case of study, the number of agents of every type that evacuated for each exit. Comparing cases A vs. B, C vs. D and E vs. F, we can see how the agents in the presence of the ﬁre they decide to go
to the exits further away from the danger.
5. Conclusions
We have presented a model to perform simulation studies of evacuations aimed at observing people in emergency situations. The proposed model consists of two sub-models, called Environmental Model (EsM) and Pedestrian Model (PsM). The EsM, based on CA, manages the spatial conﬁguration of the environment and models the
processes of diﬀusion of smoke and ﬁre. In this paper, we extend the pedestrian model and propose a behaviourbased agents approach that has the particularity of each behaviour is deﬁned as high-level actions that a person
can take as a strategy to follow during an evacuation. Furthermore, extending this concept and considering that
for a dynamic evacuation, people can change their strategy originally chosen, now the agent will be equipped with
a deterministic ﬁnite automaton to reﬂect these changes of strategies. The implementation of both, the high-level
primitive behaviours along with the behaviours engine, is able to model in a representative way the observed phenomena in real evacuations. The current engine is composed of four high-level behaviours, which are conceived
as more than simple atomic actions that the agent can perform.
This resultant hybrid model along with the computational methodology allows us build an artiﬁcial environment populated with autonomous agents and to experiment with diﬀerent conﬁgurations of agents which are
capable of interacting with each other.
The paper develops a series of experiments. First, we ran experiments with agents not familiar with the
environment and therefore they had to follow the signs to make the evacuation process.These experiments intended

1504

Pablo Cristian Tissera et al. / Procedia Computer Science 18 (2013) 1495 – 1504

to show some of the problems that can arise when a public environment has not been carefully signalled. In the
second series of experiments we used the same environment for all cases, but with and without ﬁre; varying
conﬁgurations of the individuals placed in it. The goal was to know the impact of performing an evacuation where
some of the exits are blocked by ﬁre along the evolution of the model.
It was observed that in certain situations, the emergent behaviour that arises from the interaction between the
agents generates a certain degree of disorganisation in the evacuation, which causes an increase in the evacuation
times.
The experiments not only checked the impact of individual behaviour in the time of evacuation, but also
analysed some of the events that act as trigger for a change of behaviour in the agent. Among others, it was
examined the impact of distance, population density and width of the exits.
One of the main advantages of the proposed model with respect to current CA models, is that we can describe
a set of individuals with heterogeneous behaviours and provide a framework that will allow us to enhance and add
new behaviours to the existing ones, as we plan as future work.
Acknowledgements
We appreciate the guidance received from the IA research group of National University of San Luis. This
research has been supported by the CONICET Argentina, the MICINN Spain under contract TIN2007-64974 and
the MINECO (MICINN) Spain under contract TIN2011-24384.
References
[1] D. Helbing, P. Moln´ar, Social force model for pedestrian dynamics, Phys. Rev. E 51 (1995) 4282–4286.
[2] P. C. Tissera, A. M. Printista, M. Errecalde, Evacuation simulations using cellular automata, Journal of Computer Science & Technology
7 (1) (2007) 14–20.
[3] V. J. Blue, J. L. Adler, Emergent fundamental pedestrian ﬂows from cellular automata microsimulation, Transportation Research Record
1644 (1998) 29–36.
[4] H. Kl¨upfel, T. Meyer-K¨onig, J. Wahle, M. Schreckenberg, Microscopic simulation of evacuation processes on passenger ships, in:
Proceedings of the Fourth International Conference on Cellular Automata for Research and Industry: Theoretical and Practical Issues on
Cellular Automata, Springer-Verlag, London, UK, 2000, pp. 63–71.
[5] C. Burstedde, K. Klauck, A. Schadschneider, J. Zittartz, Simulation of pedestrian dynamics using a 2-dimensional cellular automaton,
Physica A: Statistical Mechanics and its Applications 295 (3-4) (2001) 507–525.
[6] N. K. Pan, C. S. Han, K. Dauber, K. H. Law, A multi-agent based framework for the simulation of human and social behaviors during
emergency evacuations, AI and Society. The Journal of Human-Centred Systems 22 (2) (2007) 113–132.
[7] S. Sarmady, F. Haron, A. Z. H. Talib, Multi-agent simulation of circular pedestrian movements using cellular automata, in: Proceedings
of the 2008 Second Asia International Conference on Modelling & Simulation (AMS), IEEE Computer Society, Washington, DC, USA,
2008, pp. 654–659.
[8] D. Helbing, A. Johansson, Pedestrian, crowd and evacuation dynamics, in: R. A. Meyers (Ed.), Encyclopedia of Complexity and Systems
Science, Springer, 2009, pp. 6476–6495.
[9] G. Giralt, R. Chatila, M. Vaisset, An integrated navigation and motion control system for autonomous multisensory mobile robots, in:
M. Brady, P. Pauls (Eds.), First International Symposium on Robotics Research, MIT Press, Cambridge MA, 1983.
[10] R. A. Brooks, J. H. Connell, Asynchronous distributed control system for a mobile robot, in: Storage and Retrieval for Image and Video
Databases, 1986.
[11] J. H. Connell, Minimalist Mobile Robots, Academic Press, Boston, 1990.
[12] P. E. Agre, D. Chapman, Pengi: An implementation of a theory of activity, in: AAAI, Morgan Kaufmann, 1987, pp. 268–272.
[13] R. A. Brooks, A robust layered control system for a mobile robot, IEEE Journal of Robotics and Automation 2 14–23.
[14] P. Maes, The dynamics of action selection, in: IJCAI-89, MI, 2089, pp. 991–997.
[15] P. C. Tissera, A. M. Printista, E. Luque, Implementing sub steps in a parallel automata cellular model, in: Computer Science and
Technology Series-XVII Argentine Congress of Computer Science-Selected Paper, 2012, pp. 81–93.
[16] S. Russell, P. Norvig, J. Canny, I. Bratko, Artiﬁcial Intelligence: A Modern Approach, Pearson Education, Limited, 2005.
[17] M. J. Mataric, Behavior-based control: Examples from navigation, learning, and group behavior, Journal of Experimental and Theoretical
Artiﬁcial Intelligence 9 (1997) 323–336.
[18] M. N. Nicolescu, M. J. Matari´c, A hierarchical architecture for behavior-based robots, in: Proceedings of the ﬁrst international joint
conference on Autonomous agents and multiagent systems: part 1, AAMAS ’02, ACM, New York, NY, USA, 2002, pp. 227–233.
[19] P. Pirjanian, Behavior coordination mechanisms - state-of-the-art, Tech. rep., USC Robotics Research Laboratory, University of Southern
California (1999).
[20] A. Saﬃotti, The uses of fuzzy logic in autonomous robot navigation, Soft Computing 1 (4) (1997) 180–197, online at
http://www.aass.oru.se/˜asaﬃo/.
[21] P. C. Tissera, A. M. Printista, E. Luque, A hybrid simulation model to test behaviour designs in an emergency evacuation, Procedia
Computer Science 9 (0) (2012) 266–275, proceedings of the International Conference on Computational Science, ICCS 2012.

