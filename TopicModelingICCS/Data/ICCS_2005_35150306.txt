Adaptive Surface Modeling Using a Quadtree of
Quadratic Finite Elements
G. P. Nikishkov
University of Aizu, Aizu-Wakamatsu 965-8580, Japan
niki@u-aizu.ac.jp
http://www.u-aizu.ac.jp/∼niki

Abstract. This article presents special quadrilateral quadratic reﬁnement elements, which provide geometry and ﬁeld continuity across Tjunctions where two elements are connected to one side of a larger quadrilateral. The main idea in element reﬁnement is to place one or more
nodes outside the element area and to modify element shape functions
in order to maintain continuity at reﬁnement edges. Special reﬁnement
elements allow one to adaptively reﬁne a mesh in such a way that it ﬁts
a quadtree data structure. An algorithm of surface modeling starts with
a coarse mesh of quadratic quadrilateral elements. Adaptive mesh reﬁnement is done in an iterative manner. At each iteration, the ﬁnite element
equation system is solved to provide nodal locations with minimization
of global approximation error. Elements with excessive local errors are
split into four new elements. The mesh reﬁnement iteration process is
terminated when no element splits occur. The created mesh of quadratic
quadrilaterals can be used directly in ﬁnite element analysis.

1

Introduction

Surface modeling is important for many ﬁelds of activity ranged from industrial
CAD to animation in computer art. This paper is focussed on surface modeling
for engineering applications, which use ﬁnite element analysis. The basic objective of this type of surface modeling can be stated as follows: generate a surface
mesh that approximates a surface with speciﬁed accuracy and that can be used
for ﬁnite element analysis.
Speciﬁed accuracy of surface approximation can be achieved with the use
of adaptive algorithms. Adaptive mesh optimization algorithms for surface approximation have been considered in [1, 2, 3]. Duchineau et al. [1] presented an
adaptive algorithm for constructing triangular meshes with guaranteed error
bounds. Parajola [2] constructed restricted quadtrees for storing blocks of triangles in quadtree leafs. Minimization of global approximation error was done by
Grosso et al. [3] using solution of a variational problem. However, the authors
of these publications employed triangular elements. While triangular elements
can be used in the ﬁnite element analysis, quadrilateral elements are preferable
because of their better properties for solution of variational problems [4]. It is
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp. 306–313, 2005.
c Springer-Verlag Berlin Heidelberg 2005

Adaptive Surface Modeling Using a Quadtree of Quadratic Finite Elements

307

known that quadrilaterals with quadratic interpolating functions are more efﬁcient than linear quadrilateral elements. Generation of a topologically regular
quadrilateral mesh by a mapping technique is relatively easy [5]. However, performing local mesh reﬁnement for a quadrilateral mesh is considered a diﬃcult
task [6]. For example, a subdivision scheme for quadrilateral meshes proposed
by Kobbelt [7] produces regular meshes with some singular vertices.
A natural process of local reﬁnement for quadrilateral meshes is subdivision
of one quadrilateral element into four smaller quadrilaterals. However, so-called
”T-junctions” where two elements are connected to one side of a larger element
are created after such subdivisions. Such meshes cannot be employed in visualization and modeling because of geometrical and functional discontinuity across
T-junctions. Forting and Tanguy [8] considered connection of two Lagrangian
9-node elements to one side of the same type larger element. Displacement compatibility was enforced by introduction of additional constraints in the global
ﬁnite element equation system. This provides convergence of the ﬁnite element
solution but the ﬁnite element mesh remains geometrically incompatible. Sederberg et al. [9] dealt with T-junction meshes using a generalization of B-splines,
which they call T-splines.
The main contribution of this article is an introduction of special quadrilateral
reﬁnement elements, which provide continuity across element T-junctions. In
reﬁnement elements, one or more midside nodes are placed outside the element
area and element shape functions are modiﬁed in order to maintain continuity at
reﬁnement edges. Shape functions for reﬁnement elements are derived in Section
2. In Section 3, a ﬁnite element procedure for surface modeling with global error
minimization is presented. Section 4 describes an iterative algorithm for adaptive
surface approximation, which produces a quadtree of quadratic quadrilaterals
with guaranteed local approximation error. In Section 5, an example of surface
modeling is given.

2

Reﬁnement Quadrilaterals

An isoparametric quadratic quadrilateral element [4] with eight nodes is depicted
in Fig. 1,a. Any ﬁeld (including coordinates) speciﬁed at element nodes is interpolated inside the element with the use of shape functions Ni , which are deﬁned
in local coordinates ξ, η (−1 ≤ ξ, η ≤ 1):
u(ξ, η) =
Ni (ξ, η)ui ,
1
Ni = (1 − ξ 2 )(1 + ηηi ) , i = 2, 6 ,
2
(1)
1
Ni = (1 + ξξi )(1 − η 2 ) , i = 4, 8 ,
2
1
1
Ni = (1 + ξξi )(1 + ηηi ) − (Ni−1 + Ni+1 ) i = 1, 3, 5, 7 ,
4
2
where u(ξ, η) is a ﬁeld value at some point inside the element; ui are ﬁeld values
at element nodes; ξi and ηi are values of the local coordinates ξ and η at the
node i.

308

G.P. Nikishkov

6

7

h

8

5
x

y
1

2

s1

4

s2

x=-1

s1
p (m)

3

c

x
a

r=-1

s2

x=1

x
n
c

r

m
r=1

c

b

Fig. 1. a) Quadratic isoparametric quadrilateral element; b) Mesh reﬁnement 1:2; c)
Conﬁguration of special elements

Using ordinary quadrilateral elements it is diﬃcult to make mesh reﬁnement.
We present here special reﬁnement elements that allow T-junctions as shown in
Fig. 1,b. In special reﬁnement elements, some midside nodes are moved outside
the element area in order to provide geometry and ﬁeld continuity. An idea of
mesh reﬁnement with special elements is illustrated in Fig. 1,c. Mesh T-junction
is created using two reﬁnement elements s1 and s2 , which have nodes located
outside of the element area.
Shape functions in the reﬁnement element should provide continuity across Tjunction. In order to have continuity along the element edge p − n − m (Fig. 1,c)
the ﬁeld value at point ξ = 0 in the special element s1 should be equal to
the ﬁeld value at point ρ = −0.5 in the conventional neighboring element c:
u(ξ = 0) = u(ρ = −0.5). Using interpolation (1), a compatibility equation can
be written as:
3
1
3
(2)
u(ξ = 0) = u(ρ = −0.5) = up + un − um .
8
4
8
It is possible to demonstrate that the compatibility equation can be satisﬁed if
the shape functions Ni in the reﬁnement element are modiﬁed as follows:
3
1
3
(3)
Np = Np + Nm , Nm = − Nm , Nn = Nn + Nm .
8
8
4
Interpolation of a ﬁeld, which is equal to 1 just at one corner node of the conventional element, is shown in Fig. 2,a. Same ﬁeld interpolation in the reﬁnement
element is depicted in Fig. 2,b. Reﬁnement elements preserve quadratic interpolation for both geometry and ﬁeld modeling.

a

b

Fig. 2. Corner shape function in an ordinary quadratic quadrilateral (a) and in a
reﬁnement element

Adaptive Surface Modeling Using a Quadtree of Quadratic Finite Elements

309

n2
m2
p

n m p

m n

p

m 1 n1

Fig. 3. Typical conﬁgurations of special reﬁnement elements

Conﬁgurations of special reﬁnement elements useful for quadtree mesh subdivision are shown in Fig. 3. If a special element contains two outside nodes as
shown in Fig. 3 on the right, then modiﬁcation (3) is applied twice using nodes
m1 and m2 :
3
1
Np = Np + (Nm1 + Nm2 ) , Nm1 = − Nm1 ,
8
8
1
3
Nm2 = − Nm2 , Nn2 = Nn2 + Nm2 .
8
4

3

3
Nn1 = Nn1 + Nm1 ,
4

(4)

Global Error Minimization

Global error minimization of surface approximation can be done with the use
of the variational approach to functional minimization. It is assumed that a
surface that should be approximated is deﬁned explicitly or by a point cloud.
An element approximation error Ee for a surface segment covered by element e
can be deﬁned as:
(f − u)2 dA =

Ee =
Ae

(f −

Ni ui )2 dA ,

(5)

Ae

where f is the speciﬁed surface height; u is the height approximated by the
eth element; ui are nodal values of u; Ni are the shape functions and Ae is
the element area. Element error can serve as a local error indicator for mesh
reﬁnement. Global approximation error is the sum of element errors:
(f − u)2 dA =

E=
A

(f −

Ee =
e

e

Ni ui )2 dA .

(6)

Ae

Minimization of the global error functional E results in the following global ﬁnite
element equation system:
KU = R,

e
=
kij

Ni Nj dA,
Ae

rie =

Ni f dA ,

(7)

Ae

where K is a global ”stiﬀness” matrix; U is a vector of nodal height values and R
is a right-hand side vector. The global matrix K and the right-hand side vector
R are composed of element ”stiﬀness” matrices ke and element vectors re using
element connectivity information.

310

G.P. Nikishkov

Iterative methods can be eﬃciently used for solution of the ﬁnite element
equation system (7) since good initial approximation for the solution vector U
is available in the beginning of each reﬁnement step.

4

Surface Modeling Algorithm

Surface modeling starts with a coarse mesh consisting of usual quadrilaterals.
If the approximation domain is a quadrilateral area then it is possible to employ just one quadratic quadrilateral element in the beginning. According to the
adaptive mesh reﬁnement procedure, reﬁnements are carried out for elements
where an error indicator (5) is greater than a speciﬁed error tolerance.
The quadrilateral element that should be reﬁned, is replaced by four quadrilaterals. Some or all of these new quadrilaterals are special reﬁnement elements.
Examples of one element reﬁnement for the case of regular element surrounding
and for the case of a partially reﬁned mesh are shown in Fig. 4

Fig. 4. Examples of 1:4 element reﬁnement for the case of regular element surrounding
and for the case of a partially reﬁned mesh

Mesh data after any number of 1:4 element reﬁnements is stored in a quadtree
data structure. If to adopt that a quadtree root can be depicted as a square then
each quadtree node corresponds to a smaller square. Internal nodes have exactly
four children. Leafs (nodes without children) represent actual elements, which
can be usual elements or special reﬁnement elements. After splitting elements
with excessive errors, the reﬁned mesh can contain places where one element
have a connection to more than two elements. This makes impossible to provide
continuity across element boundaries. A quadtree where large squares can be
adjacent to more than two smaller squares at any edge is called unbalanced [10].
Quadtree balancing is performed by additional element subdivisions. For any
balanced quadtree, the geometry and ﬁeld continuity can be ensured by using
reﬁnement elements with outside nodes.
An adaptive algorithm of surface modeling is organized as an iterative procedure. During each iteration, ﬁrst, the ﬁnite element equation system (7) is
assembled and solved. The height surface values are obtained for all mesh nodes.
Then local element errors Ee (5) are estimated and 1:4 splits of elements with
excessive errors are performed. The element quadtree is balanced at the end of
each iteration. Mesh reﬁnement process is terminated if no splits occur during

Adaptive Surface Modeling Using a Quadtree of Quadratic Finite Elements

311

current iteration. Pseudo code of the surface modeling algorithm is presented
below.
Initialize Quadtree Q
do
Assemble and solve equation (7)
Number of splits s= 0
for Element e=1 to Number of Elements
Compute approximation error Ee (5) for Element e
if Ee > Error Tolerance then
s=s+1
Split Element e into four elements
Put new elements into Quadtree Q
end if
end for
if s > 0 balance Quadtree Q
while s > 0 .
The algorithm of surface modeling has been implemented in Java. Surface is
visualized using Java 3D.

5

Example

The proposed algorithm of adaptive surface modeling with a quadtree of quadratic
quadrilaterals is demonstrated on the approximation of the following surface deﬁned on a square domain:
f = 0.5e−0.16(x

2

+y 2 )

sin(2x) cos(2y),

−5 ≤ x ≤ 5,

−5 ≤ y ≤ 5 .

The height range for the above height function is [−0.5, 0.5] and the size in height
direction is 1. The following error measure is used for mesh reﬁnement:
¯e =
E

1
Ae

(f − u)2 dA ,
Ae

where f is the speciﬁed surface height; u is the height approximation and Ae is
¯e is the modiﬁed element error (5): Ee is
the element area. This error measure E
¯e
divided by the element area and the square root is taken. The error indicator E
is measured in length units and can be treated as some averaged absolute error
over an element.
Results of surface approximation by quadtrees of quadratic quadrilateral elements are presented in Figures 5 and 6. Fig. 5 shows element quadtrees for error
tolerance values 0.0005 (6 iterations) and 0.0001 (7 iterations). Visualization of
the approximated surface (error tolerance 0.0005) with the use of Java 3D is
presented in Fig. 6.

312

G.P. Nikishkov

Error = 0.0005

Error = 0.0001

Fig. 5. Quadtrees of quadratic quadrilaterals characterized by diﬀerent height approximation errors

Fig. 6. Visualization of a surface approximated by quadratic quadrilaterals

6

Conclusion and Future Work

We have introduced special quadratic quadrilateral elements for adaptive surface
modeling. Two special quadrilateral elements can be connected to one ordinary
edge of a quadrilateral quadratic element. The special reﬁnement elements are
created by placement of one or two midside nodes outside the element area
and by modiﬁcation of element shape functions. The modiﬁed shape functions
maintain geometry and ﬁeld continuity across element T-junctions. It is worth
noting that the reﬁnement elements do not diﬀer from standard quadratic ﬁnite
elements and can be incorporated into existing ﬁnite element codes.

Adaptive Surface Modeling Using a Quadtree of Quadratic Finite Elements

313

Ordinary and special quadratic quadrilateral elements are used for surface
approximation. Global approximation error is minimized by solution of a variational problem using the ﬁnite element method. A local element error indicator
is utilized for adaptive mesh reﬁnement. Elements with excessive local errors are
subdivided into four elements each. At any reﬁnement stage the element mesh
is topologically equivalent to a quadtree. The quadtree data structure is used
to store element data and to navigate through the mesh. Quadtree balancing
is performed after each mesh reﬁnement step in order to provide conforming
connections of special and ordinary elements.
The proposed algorithm of surface modeling with a quadtree of quadratic
quadrilaterals is demonstrated on the surface height approximation for a square
domain. A surface mesh produced by the algorithm can be directly used in ﬁnite
element analysis, where quadrilateral elements are considered more suitable than
triangles.
Quadrilateral reﬁnement elements can be employed for general surface modeling and for problems of the ”surface on surface” type. For general surface
modeling, a coarse starting mesh of quadrilateral elements topologically consistent with the modeled surface is created. Quadtree subdivisions are performed
inside each element of the starting mesh. Mesh balancing should include balancing of quadtrees inside each starting element and balancing elements on the
interelement boundaries of the starting mesh. Future research will follow this
direction.

References
1. Duchineau, M. et al.: ROAMing terrain: real-time optimally adapting meshes.
Procs of the IEEE Visualization 97 (1997) 81-88.
2. Pajarola, R.: Large scale terrain visualization using the restricted quadtree triangulation. Procs of the IEEE Visualization 98 (1998) 19-24.
3. Grosso, R., Lurig, C., Ertl, T.: The multilevel ﬁnite element method for adaptive
mesh optimization and vizualization of volume data. Procs of the IEEE Visualization 97 (1997) 387-395.
4. Bathe, K.-J.: Finite Element Procedures. Prentice-Hall (1996).
5. Frey, P.J., George, P.-L.: Mesh Generation. Application to Finite Elements. Hermes
(2000).
6. Zorin, D., Schr¨
oder, P.: Subdivision for modeling and animation. SIGGRAPH’00
Course Notes (2000).
7. Kobbelt, L.P.: A subdivision scheme for smooth interpolation of quad-mesh data.
Procs of EUROGRAPHICS’98, Tutorial (1998).
8. Fortin, M., Tanguy, P.: A non-standard mesh reﬁnement procedure through node
labelling. Int. J. Numer. Meth. Eng. 20 (1984) 1361-1365.
9. Sederberg, T.W., Zheng, J., Bakenov, A., Nasri, A.: T-splines and T-NURCCs.
ACM Trans. on Graphics, 22 (2003) 477-484.
10. de Berg, M., van Kreveld, M., Overmars, M. Schwarzkopf, O.: Computational
Geometry. Algorithms and Applications. Springer (2000).

