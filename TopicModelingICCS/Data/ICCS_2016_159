Procedia Computer Science
Volume 80, 2016, Pages 1191–1201
ICCS 2016. The International Conference on Computational
Science

Formal analysis of an energy-aware collision resolution
protocol for wireless sensor networks
M.C. Ruiz1 , H. Maci`a1 , J.A. Mateo2 , and J. Calleja2
1

Escuela Superior de Ingenier´ıa Inform´atica, Universidad de Castilla-La Mancha, Albacete, Spain
MCarmen.Ruiz@uclm.es, Hermenegilda.Macia@uclm.es
2 Instituto de Investigaci´
on en Inform´atica, Universidad de Castilla-La Mancha, Albacete, Spain
JoseAntonio.Mateo@uclm.e, Javier.Calleja@uclm.ess

Abstract
This paper provides a comprehensive and rigorous study of a novel collision resolution algorithm for
wireless sensor networks: 2CS-WSN. It is speciﬁcally designed to be used during the contention phase
of IEEE 802.15.4. This algorithm has been modelled in terms of discrete time Markov chains (DTMCs)
and, using the probabilistic symbolic model checker PRISM, correctness properties and different operation modes of the algorithm have been studied. Moreover, different model abstractions have been used
in order to identify any inconsistencies or ambiguities, and to prove interesting properties for non-trivial,
practical and relevant scenarios. Finally, since the biggest source of energy waste is the collision, this
paper conducts a wide study of energy saving in this algorithm.
Keywords: Modelling and simulation, Probabilistic model checking, Markov chains, Performance Evaluation,
Wireless Sensor Networks, Collision resolution algorithms

1

Introduction

Wireless sensors are highly energy constrained and the energy consumed individually by each node will
directly impact in system lifetime. Especially, one of the biggest issue is a collision, that is, when more
than one node attempts to transmit data at nearly the same time. A collision involves retransmissions
that increase energy consumption and latency as well. Therefore, there is a real need for designing
systems and algorithms to minimize as much as possible the number of collisions in order to reduce this
energy consumption, but providing quick mechanism to solve this collision in order to not degrade the
correct operation of the network.
In this work, we study 2CS-WSN (Two Cells Sorted Wireless Sensor Network) algorithm [21, 20],
a simple, fast and effective collision resolution method, speciﬁcally designed to be used during the
contention phase of IEEE 802.15.4. as alternative to the CSMA/CA. 2CS-WSN uses probability and
sorted transmissions for quick collision resolution. Moreover, due to the presence of probabilities and
diverse parameters that can be optimized in 2CS-WSN, we will inspect how those parameters can be
Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.461

1191

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

tuned so as to achieve performance improvements. In 2CS-WSN, only the nodes involved in each
collision are considered. The probability of collision depends on several factors such as the collision
avoidance algorithm, the size of the network and, especially, the application that is intended for the
network of sensors. To frame our work, according to the study presented in [12], collision probability
is 60-70% for networks composed of 50 nodes. In this work we have obtained results assuming up to
40 nodes involved in the collision, meaning that the results are valid for networks with 57 to 66 nodes.
Furthermore, these studies have been always done under saturated trafﬁc condition (with a trafﬁc load
of 0.6) which is not an usual load situation. For a standard load, the percentage of collisions decreases
considerably to 20%, which means that our study is suitable for networks up to 200 nodes. In fact, some
real scenarios where testing is being conducted do not exceed 50 nodes, namely, the IntellBuilding
network (31 nodes) [15], the Wisevine Project (22 nodes) [16] and the I3A SensorBed (43 nodes) [17].
Tests and simulations are the usual validation techniques used for WSN algorithms and protocols,
but we advocate for the use of formal methods as a complement to simulation due to the obtained results
depend on the simulator used and, therefore, different results can be obtained for the same experiments.
Moreover, testing and simulation can only show the presence of errors, not their absence. As opposite
to this, the full behaviour of the system can be described using formal methods. We use here probabilistic model checking (a formal method for the automatic veriﬁcation of probabilistic systems) and
we describe 2CS-WSN algorithm in terms of discrete time Markov chains (DTMCs) [19]. Furthermore,
the probabilistic symbolic model checker PRISM [9] is used to verify correctness properties, compare
different operation modes of the protocol, and analyze performance evaluation and accuracy of different
model abstractions. It is important to note also that although model checking is sometimes limited by
the state space explosion problem, in this work we are able to work with large networks that ﬁt sizes
with real networks.
The rest of the paper is organized as follows. First, some related works are introduced. Next, a brief
overview of the 2CS-WSN algorithm is presented and its formal model in Section 3. The analysis of
the formal model and performance evaluation about energy consumption is shown in Section 4. Finally,
some conclusions and possible future directions are presented in Section 5.

2

Related Works

Recently, WSNs analysis has gained increasing attention from research community. Thus, many works
providing new algorithms and protocols for wireless sensor networks have been presented, where they
could be divided in two main categories: simulation-based and formal veriﬁcation-based (we focus in
this section on the second one).
Formal veriﬁcation is used to ensure the correctness of a design by constructing a complete model
of the system. For example, in [5], LMAC [24] is modelled and analyzed by using timed automata and
the popular model checker UPPAAL [11]. In [5], they are able to analyse networks with up to 5 nodes,
whereas we are able here to analyze bigger networks (up to 40 nodes). In [2], LMAC is studied as a
case study to present a new version of UPPAAL, SMC-UPPAAL. The novelty here is that they apply
statistical model checking to LMAC. Roughly speaking, the substantial difference between simulation
and statistical model checking is that the latter one obtains the probability that the system behaves in
such a manner. Again, small networks (up to 10 nodes) are studied.
In addition, a probabilistic model for the network set-up phase of LMAC is presented in [4] where,
although the abstracted model has also a state space limited, bigger networks can be studied (19 sensors
considering 3 maximum back off or 38 sensors considering 2 maximum back off).
Next, we cite two works fairly related to the present one. On the one hand, Duﬂot et al. [3] evaluate
CSMA/CD by using probabilistic timed automata and two well-known tools, PRISM and APMC [7].
With PRISM, they study the system using probabilistic model checking, whereas with APMC they
1192

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

approximate other properties. On the other hand, Kwiatkowska et al. [10] pose the automatic veriﬁcation
of a medium access control protocol of the IEEE 802.11 WLAN standard using probabilistic model
checking. They use probabilistic timed automata as modelling formalism and PRISM as model checker.
Regarding energy modeling in WSNs, G. Anastasi et al. provide in [1] a wide study of energy
conservation schemes for sensor networks, starting from components energy consumption and, then,
presenting the different algorithms to reduce the energy consumption in WSNs. As they authors pointed
out in this paper, it is quite important to accelerate the collision resolution time in order to reduce
the energy consumption. In [8], a formal declarative model for data collection is proposed, where
mobile entities are in charge of collecting and moving data between group leaders using short-range lowpower data transmission. The authors use probabilistic rewriting logics and PMaude (the probabilistic
extension of the well-known language Maude). In contrast to our work, they cannot verify quantitative
properties due to the limitations of PMaude. Finally, let us note that we have previous experience
analysing algorithms for wireless sensor networks. For instance, we studied a recent role-based routing
algorithm (NORA) in [22], and its fuzzy-logic based version in [14]. Moreover, we would like to note
that our paper is, to the best of our knowledge, the ﬁrst work that achieves to apply probabilistic model
checking to networks up to 40 nodes in conﬂict since most of the related works presented in this section
only success to model networks with at most 10 nodes.

3

The 2CS-WSN protocol

In this section, we do not make an attempt to explain in depth the technical features of 2CS-WSN
protocol. In contrast, we present a short explanation (as intuitive as possible) of how the algorithm
works with the aim to help readers in the understanding of the study conducted in next sections. The
interested reader can refer to [21] for further information.
2CS-WSN is partially derived from the deﬁnition of stack protocols such as the ones described in
[18] and [23]. Stack protocols perform collision resolution by using random access (probabilities) to
the medium and they are called stack protocols because its time evolution can be easily visualized as a
group of stations moving up and down in a cell stack as their counters decrease or increase, respectively.
There exists a version of 2CS-WSN where the counter is not allowed to grow beyond 1. In this case
contending stations may be either transmitting or waiting and the two states can be represented using
only two cells in a stack. The transmission cell (TC) represents the group of transmitting stations (i.e.
ct = 0) and the waiting cell (WC) the group of stations that have deferred transmission (i.e. ct = 1).
Although the 2C protocol has many desirable features it may incur in signiﬁcant access delays when a
large number of stations contend for channel access.
In stack protocols, time is slotted and stations are allowed to transmit only at the beginning of a
time slot. A time slot basically equals the time it takes to transmit a packet and receive a feedback
message from a central station. The feedback message is binary, i.e. it is a C (collision) message when
a collision was detected and an NC (no collision) message otherwise. If only one station transmitted,
the corresponding packet will be successfully transmitted. On the other hand, if there were several
transmission attempts in the same slot, there will be a collision and its resolution will begin in the
following slot. The collision resolution procedure ends when all stations can successfully transmit their
packets. This time interval is known as a Collision Resolution Interval (CRI). Each station participating
in a CRI maintains a counter that controls its channel access. Let us denote by ci the value of this counter
at the beginning of slot i. A station is allowed to attempt channel access in slot i only when ci = 0. Let
fi ∈ {C, NC} be the feedback message corresponding to the transmission in slot i and received at the
end of the same time slot. If the transmission was unsuccessful fi = C, otherwise the feedback message
fi is NC.
If the channel is sensed to be free (i.e. a CRI is not in progress), stations with new transmission
1193

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

requests will set their counter to 0 and will attempt channel access in the following slot t. Depending on
the feedback messages each station updates its counter as follows:
• If ct = 1 and ft = NC, then ct+1 = ct − 1.
• If ct ≥ 1 and ft = C, then ct+1 = ct + 1.
• If ct = 0 and ft = C, then ct+1 will change to 1 with probability 0.5.
On the other hand, the original description of 2C ([18]) is not tied to any speciﬁc transmission
medium and, therefore, it has to be adapted to the particularities of wireless communications. For
instance, it can be assumed that there is a central station that is continuously monitoring the channel
and providing feedback messages. However, in self-conﬁguring wireless ad-hoc networks, it cannot be
assumed that there is such infrastructure. In this case, the same network nodes have to play this role
by monitoring the transmission medium and reacting accordingly. As a consequence, whereas in wired
networks it is rather easy to detect collisions, in wireless networks this is not a trivial matter. 2C-WSN
proposes that, instead of detecting a collision, network nodes infer that a collision has happened. A
wireless node can infer that its transmission has collided if the reply to its request does not arrive. In
this case, and according to the stack algorithm, the station has to randomly choose whether to retransmit
(i.e. to remain in TC) or to join the waiting group (WC).

3.1

2CS-WSN Formal Model

Now, we are going to introduce the mathematical model description in order to obtain the corresponding
DTMC. We denote by TC the transmission cell, WC j the j-waiting cell, n the number of nodes in
collision and m the number of waiting cells and pTC the probability of a node to remain in TC when
there are more nodes in TC. Then, a state is deﬁned as a tuple in this way
(TC, WC1 , WC2 , . . . , WCm )

where initially WC j = 0,

∀ j ∈ {1, . . . , m}.

Therefore, the initial state is (n, 0, 0, . . . , 0). If TC = k, with k ∈ {2, . . . , n} there are k + 1 different
possibilities for the number of nodes that remain in the transmission cell, then the behaviour of variable
TC follows a binomial distribution B(k; p), where p = pTC . Whenever k ≥ 2, nodes in WCi move to
WCi+1 with i ∈ {2, . . . , m − 1} in the next step. Nodes in the last waiting cell make no movement and
held therein. Nodes in collision, namely nodes in TC, choose to retransmit with probability pTC , or
move to WC1 with probability 1 − pTC . Let α be the number of nodes that remain in TC and β the
number of nodes that move to WC1 , where α + β = k. The probability that α nodes remain in TC is
deﬁned as αk ∗ (pTC )α (1 − pTC )β with α ∈ {0, . . . , k} and β = k − α. If pTC = 0.5, the probability is
k
k
α · (0.5) . Whenever k ≤ 1 nodes in WC i move to WCi−1 with i ∈ {2, . . . , m} and the last waiting cell
must be empty. Therefore, next state z is deﬁned as follows:
z=

if k ≤ 1
(WC1 , WC2 , ... , WCm , 0)
(α, β , WC1 , ..., WCm−2 , WCm−1 + WCm ) i f k ≥ 2

where k is the number of nodes in TC and k = α + β .
Probabilistic model checking focuses on proving correctness of systems that exhibit stochastic behaviour, that is, it is a procedure for establishing if a desired property holds (or with what probability)
in a stochastic model. It is based on the construction and analysis of a stochastic mathematical model of
the system (in our case, DTMC). In an our previous paper [13], the model of the 2CS-WSN algorithm
1194

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

in terms of DTMCs was developed in PRISM [9] with the aim to check some correctness properties and
different operating modes. Now, our aim is to measure the energy consumption of the whole system in
all its possible scenarios instead of a set of scenarios (simulation) as in [20], that is, we use PRISM to
evaluate different conﬁgurations in order to obtain the best option for lower energy consumption.
To develop the DTMC model in PRISM, we have considered the parameters described in Table 1.
In particular, considering n = 40 (number of nodes in collision), m = 5 (number of waiting cells) and
pTC = 0.5 (probability of a node to remain in TC), the PRISM model consists of 8.996.429 states and
61.435.101 transitions. The required time to build this model is about 20 secs on a 3.2GHz PC with
16GB RAM.
Parameter

Initial Value

Final Value

Step Value

n

5

40

5

pTC

0.1

0.9

0.1

m

1

5

1

Table 1: Parameter values

4

Analysis and Performance Evaluation

PCTL [6] logic has been used here for expressing correctness properties. Three different parameters:
number of nodes in collision, transmission probability and the number of waiting cells are tuned in
our study . In Table 1, n is the number of nodes in collision, pTC is transmission probability and m is
the number of waiting cells. Thus, we are able to check which parameter inﬂuences more the energy
consumption as well as what is the best setting.
In our study, the ﬁrst step was to conduct the veriﬁcation (exploration of the whole paths) of the
system which was presented in [13]. Now, we focus our attention on obtaining performance measures
about collision resolution time and energy consumption (quantitative properties). In PRISM, this is
encoded as rewards within the model. Roughly speaking, a reward is a real value associated with
certain states or transitions of the model. Following designers indications, we deﬁne a time slot of 1.6
ms., meaning that each state has a reward associated of 1.6. In PRISM, the reward associated is deﬁned
as follows:
rewards “time”
[ ] true: 1.6
endrewards
As we are studying the energy consumption, it is necessary to incorporate the radio consumption
into our PRISM model. As in [21], we use a CC2420 chip radio. Table 2 shows the energy consumption
for each radio mode. Again, we have to establish a reward for each state, modelling this consumption.
This reward is deﬁned in PRISM as:
rewards “consumption”
[ ] true: TC * 0.08352 + (WC1 + WC2 + . . . + WCm ) * 0.09024 + ﬁnish * 0.00672;
endrewards

1195

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

Mode

Intensity

Power Consumption

Energy Consumption

Transmission

17.4 mA

52.2 mW

0.08352 mJ

Reception

18.8 mA

56.4 mW

0.09024 mJ

Listening

18.8 mA

56.4 mW

0.09024 mJ

Idle

1.4 mA

4.2 mW

0.00672 mJ

Table 2: Energy consumption of CC2420

To obtain performance results, we deﬁned the properties φ2 and φ3 . With φ2 , we study the total
collision resolution time, whereas with φ3 we show the total energy consumed when all the nodes have
successfully transmitted.
φ2 ≡ [R{“time } = ? [F( f inish = n)]]

(1)

φ3 ≡ [R{“consumption } = ? [F( f inish = n)]]

(2)

Next, we wanted to evaluate different conﬁgurations, that is, how each algorithm parameter inﬂuences energy consumption. To this end, we have ranged the transmission probability (pTC ) and the
number of waiting cells according to Table 1. The different scenarios are generated automatically by a
tool we designed for this purpose. Then, we ran PRISM experiments over φ2 and φ3 , with veriﬁcation.
Note that we use the total resolution time to validate our model with the results obtained (using the
Castalia simulator) by the designers in [21]. For instance, considering 40 nodes in collision, 5 waiting
cells and pTC = 0.5 the difference between our model and Castalia model is less that 0.6 ms. As the
aim of this work is to study energy consumption (in [21] only resolution time is studied), we focus here
on the results we have obtained in PRISM. Fig. 1 shows the expected energy consumption ranging the
parameters according to Table 1. For the sake of readability, only the values from 0.3 to 0.6 are depicted.
Furthermore, let us note that the results omitted in Fig. 1 do not inﬂuence our study since we will focus
on the best parameter conﬁgurations.
As it can be observed in Fig. 1, the more waiting cells, the lower battery consumption. This is
due to the more waiting cells are used, the nodes are better distributed in these cells and, therefore,
less nodes are competing simultaneously in the transmission cell, reducing the transmission time and,
consequently, the energy consumption.
Moreover, it can be seen that up to 5 waiting cells, the energy consumption is lower if the transmission probability (pTC ) is less than or equal to 0.5. This result is related with the previous statement
since if pTC is less than or equal to 0.5 more nodes shall move down to the waiting cells and, therefore,
a better nodes distribution is reached. In detail, Table 3 shows the optimal transmission probabilities
depending on the number of colliding nodes and the number of waiting cells. Here, one must pay attention to two important details. First, looking at the ﬁrst row of the table, one can check the results
related to the original deﬁnition of the algorithm 2C [18]. Thus, the best transmission probability up
to 40 nodes in collision is not 0.5, and, therefore, we can ensure that this ﬁrst version of the algorithm
might be improved. Note that 2C is intended to be used in wired networks and, consequently, the energy consumption is not as restrictive as in the case of WSNs. Furthermore, it can be observed that the
transmission probability (pTC = 0.5) is not the best choice in many cases. Finally, let us note that our
results are not directly comparable with the ones obtained in [21] as they consider no limitation on the
number of waiting cells and, moreover, they did not evaluate the energy consumption.
1196

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

Energy consumption (mJ)

30

25

1 Wcs
2 WCs
3 WCs
4 WCs
5 WCs

20

15
0.25

0.3

0.35

0.4
0.45
0.5
Transmission probability

0.55

0.6

0.65

(a) n=10, Energy Consumption

Energy consumption (mJ)

160
140
1 WCs
2 WCs
3 WCs
4 WCs
5 WCs

120
100
80
60
0.25

0.3

0.35

0.4
0.45
0.5
Transmission probability

0.55

0.6

0.65

(b) n=20, Energy Consumption

Energy consumption (mJ)

400
350
300

1 Wcs
2 WCs
3 WCs
4 WCs
5 WCs

250
200
150
100
0.25

0.3

0.35

0.4
0.45
0.5
Transmission probability

0.55

0.6

0.65

(c) n=30, Energy Consumption

Energy consumption (mJ)

700
600
1 Wcs
2 WCs
3 WCs
4 WCs
5 WCs

500
400
300
200
0.25

0.3

0.35

0.4
0.45
0.5
Transmission probability

0.55

0.6

0.65

(d) n=40, Energy Consumption

Figure 1: PRISM with n= 10, 20, 30 y 40

1197

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

As we cannot model inﬁnite waiting cells, we decided to evaluate what is the gain of increasing the
number of waiting cells, that is, starting with just one waiting cell as in [18] and adding more waiting
cells up to the problem of “state explosion” arises in our model. As we can see in Table 4, the energy
saving is quite signiﬁcant when we consider 2 waiting cells instead of 1 waiting cell, and less in the rest
of the cases.

5 Nodes

10 Nodes

15 Nodes

20 Nodes

25 Nodes

30 Nodes

35 Nodes

40 Nodes

1 WCs

0.4

0.3

0.3

0.3

0.3

0.3

0.3

0.2

2 WCs

0.5

0.5

0.4

0.4

0.4

0.4

0.4

0.4

3 WCs

0.5

0.5

0.4

0.4

0.4

0.4

0.4

0.4

4 WCs

0.5

0.5

0.5

0.4

0.4

0.4

0.4

0.4

5 WCs

0.5

0.5

0.5

0.5

0.5

0.5

0.5

0.5

Table 3: The best pTC according to the number of nodes and WCs

5 Nodes

10 Nodes

15 Nodes

20 Nodes

25 Nodes

30 Nodes

35 Nodes

40 Nodes

1 WCs

5.2006

23.8377

58.3489

109.5717

178.4713

266.2472

373.8131

501.7857

2 WCs

4.0409

16.4418

37.4452

67.4752

106.8283

155.7033

214.2724

282.6928

3 WCs

4.0355

15.9202

35.7888

63.5791

99.6051

143.9828

196.7901

258.0899

4 WCs

4.0311

15.6305

35.1071

61.8411

96.1781

138.1822

187.9117

245.4161

5 WCs

4.0293

15.5046

34.3001

61.2783

94.1059

135.2535

183.9756

240.3197

Table 4: Energy consumption (for the best pTC ) varying the number of colliding nodes and WCs (mJ)

Table 5 shows the absolute error (ε) and the percentage error (δ ) in terms of considering k instead
k + 1 waiting cells (k = 1, 2, 3, 4). Let wi, j be the element of Table 4 that represents the energy consumption considering i waiting cells and j nodes ( j = 5, 10, ..., 40). Then, we calculate for each j the
corresponding absolute error ε(i,i+1), j and its percent error δ(i,i+1), j , considering wi+1, j as exact value
and wi, j as approximate value:
ε(i,i+1), j = |wi+1, j − wi, j | ,

1198

δ(i,i+1), j = 100 ·

ε(i,i+1), j
wi+1, j

Formal analysis of an energy-aware collision resolution protocol for WSNs
5 Nodes

10 Nodes

15 Nodes

20 Nodes

M.C. Ruiz et al.

25 Nodes

30 Nodes

35 Nodes

40 Nodes

ε12

1.1597

7.3959

20.9037

42.0965

71.643

110.5439

159.5407

219.0929

δ12

28.6991

44.9823

55.8248

62.3881

67.0637

70.9965

74.4570

77.5021

ε23

0.0054

0.5216

1.6564

3.8961

7.2232

11.7205

17.4823

24.6029

δ23

0.1338

3.2763

4.6283

6.1280

7.2518

8.1402

8.8837

9.5327

ε34

0.0044

0.2897

0.6817

1.7380

3.4270

5.8006

14.8784

12.6738

δ34

0.1092

1.8534

1.9418

2.8104

3.5632

4.1978

7.9178

5.1642

ε45

0.0018

0.1259

0.8780

0.5628

2.0722

2.9287

3.9361

5.0964

δ45

0.0447

0.8120

2.5598

0.9184

2.2020

2.1653

2.1395

2.1207

Table 5: Absolute error and percent error of energy consumption for best pTC by increasing one unit the
number of WCs

As commented previously, the most signiﬁcant improvement is obtained by increasing the number
of cells waiting from 1 to 2. This is due to the fact that, with only one waiting cell it takes a long time
(and, therefore, higher energy consumption) to randomly distribute the nodes in such a way only one
of them is in the transmission cell. Moreover, increasing the number of cells in the rest of the cases do
not provide a great energy saving. For instance, using 5 waiting cells instead of 4 only saves a 2.6% of
energy in the best case (15 nodes). Consequently, this study taking into account up to 5 waiting cells is
relevant enough for the designers.
In addition, it is possible to ﬁt the data obtained for the energy consumption by using a quadratic
function. The plot considering 5 waiting cells and pTC = 0.5 is shown in Fig. 2. Thus, we can easily
use interpolation to estimate the energy consumption for any conﬁguration from 5 to 40 nodes.

250
quadratic
data
0.15x2 + 0.013x + 0.34
200

Consumption energy (mJ)

R-square = 0.99999871

150

100

50

0
5

10

15

20
25
Number of nodes

30

35

40

Figure 2: Fitted curve: energy consumption (mJ) vs number of nodes

1199

Formal analysis of an energy-aware collision resolution protocol for WSNs

5

M.C. Ruiz et al.

Conclusions

A formal study of the 2CS-WSN algorithm, which is a collision resolution algorithm for wireless sensor
networks especially designed to be used during the contention phase of IEEE 802.15.4, is presented.
First, we provide a DTMCs model of 2CS-WSN since it is the formal model used in the well-known
tool PRISM. Then, we have evaluated some properties, written in PCTL, that are of great interest of the
algorithm designers. We have used rewards to model energy consumption in each of the states.
Moreover, we have analyzed algorithm energy consumption for different conﬁgurations. We discovered that the original algorithm can be in principle improved choosing a different transmission probability and we have concluded that increasing the number of waiting cells (in the best conﬁguration) does
not suppose a great advance since, in the best case, the energy saving is about 2.6%.
To sum up, this work provides serious insights about the correctness of the algorithm 2CS-WSN
since we have proven that the algorithm eventually ends and, in addition, we provide the designers with
the best parameters to save energy in different scenarios.
Now, we intend to continue working in the development of future version of 2CS-WSN. Our main
lines of future work are addressed in two directions. On the one hand, we are interested in evaluating
the effect of using adaptive probabilities. Thus, each node could adapt its parameters regarding to other
measures such as number of retransmissions, in which waiting cell is it and so on. On the other hand,
we think it is of great interest to study how to adapt the probabilities according to the number of nodes
in the transmission cell in each moment.

6

Acknowledgments

This work has been supported by the Spanish MEC under project TIN 2015-65845-C3-2-R.

References
[1] Giuseppe Anastasi, Marco Conti, Mario Di Francesco, and Andrea Passarella. Energy Conservation in Wireless Sensor Networks: A Survey. Ad Hoc Netw., 7(3):537–568, May 2009.
[2] Peter E. Bulychev, Alexandre David, Kim Guldstrand Larsen, Marius Mikucionis, Danny Bøgsted Poulsen,
Axel Legay, and Zheng Wang. UPPAAL-SMC: Statistical Model Checking for Priced Timed Automata. In
QAPL, pages 1–16, 2012.
[3] Marie Duﬂot, Laurent Fribourg, Thomas H´erault, Richard Lassaigne, Fr´ed´eric Magniette, St´ephane Messika,
Sylvain Peyronnet, and Claudine Picaronny. Probabilistic Model Checking of the CSMA/CD Protocol Using
PRISM and APMC. Electr. Notes Theor. Comput. Sci., 128(6):195–214, 2005.
[4] Luz Judith R. Esparza, Kebin Zeng, and Bo Friis Nielsen. A Probabilistic Model of the LMAC Protocol for
Concurrent Wireless Sensor Networks. In ACSD, pages 98–107, 2011.
[5] Ansgar Fehnker, Lodewijk van Hoesel, and Angelika Mader. Modelling and Veriﬁcation of the LMAC Protocol for Wireless Sensor Networks. In IFM, pages 253–272, 2007.
[6] Hans Hansson and Bengt Jonsson. A Logic for Reasoning about Time and Reliability. Formal Asp. Comput.,
6(5):512–535, 1994.
[7] Thomas H´erault, Richard Lassaigne, Fr´ed´eric Magniette, and Sylvain Peyronnet. Approximate probabilistic
model checking. In VMCAI, pages 73–84, 2004.
[8] Fatemeh Kazemeyni, Einar Broch Johnsen, Olaf Owe, and Ilangko Balasingham. MULE-Based Wireless
Sensor Networks: Probabilistic Modeling and Quantitative Analysis. In IFM, pages 143–157, 2012.
[9] Marta Z. Kwiatkowska, Gethin Norman, and David Parker. PRISM 4.0: Veriﬁcation of Probabilistic RealTime Systems, In Proc. of CAV 2011. pages 585–591, 2011.

1200

Formal analysis of an energy-aware collision resolution protocol for WSNs

M.C. Ruiz et al.

[10] Marta Z. Kwiatkowska, Gethin Norman, and Jeremy Sproston. Probabilistic Model Checking of the IEEE
802.11 Wireless Local Area Network Protocol. In Proceedings of the Second Joint International Workshop
on Process Algebra and Probabilistic Methods, Performance Modeling and Veriﬁcation, PAPM-PROBMIV
’02, pages 169–187, London, UK, UK, 2002. Springer-Verlag.
[11] Kim Guldstrand Larsen, Paul Pettersson, and Wang Yi. UPPAAL in a Nutshell. STTT, 1(1-2):134–152, 1997.
[12] Bih-Hwang Lee, Ruei-Lung Lai, Huai-Kuei Wu, and Chi-Ming Wong. Study on Additional Carrier Sensing
for IEEE 802.15.4 Wireless Sensor Networks. Sensors, 10(7):6275–6289, 2010.
[13] J. A. Mateo, H. Maci`a, M. C. Ruiz, J. Calleja, and F. Royo. Probabilistic Model Checking: One Step Forward
in Wireless Sensor Networks Simulations. International Journal of Distributed Sensor Networks, 2015:1–11,
2015.
[14] J. A. Mateo, H. Maci`a, M. C. Ruiz, J. J. Pardo, and A. M. Ortiz. Formal Study of a Novel Network Role-Based
Routing Intelligent Algorithm. In Proceedings of 2013 International Conference on Computational Science
(ICCS 2013), Procedia Computer Science, 18, pages 2525–2528. Elsevier, 2013.
[15] Teresa Olivares, Jose arlos Castillo, Fernando Royo, Luis Orozco, Vivente L´opez, and Paz Pedr´on. La red
Sensor IntellBuilding. Actas de las XVII Jornadas de Paralelismo, pages 20–28, 2006.
[16] Teresa Olivares, Luis Orozco, Vivente L´opez, and Paz Pedr´on. WISEVINE: Wireless Sensor Network applied
to Vineyards. ACM International Workshop on Real-World Wireless Sensor Networks, pages 222–248, 2006.
[17] Antonio M. Ortiz, Fernando Royo, Ra´ul Galindo, and Teresa Olivares. I3ASensorBed: a testbed for wireless
sensor networks . Technical report, Technical Report DIAB-11-12-1, Departamento de Sistemas Inform´aticos.
UCLM, 2011.
[18] M. Paterakis and P. Papantoni-Kazakos. A simple window random access algorithm with advantageous properties. IEEE Transactions on Information Theory, 35:1124–1130, 1989.
[19] S.M. Ross. Stochastic Processes. Wiley Series in Probabiliy and Mathematical Statistics, 1996.
[20] Fernando Royo. Improving Performance on MAC Protocols for Wireless Sensor Networks. PhD thesis,
Albacete Research Institute of Informatics, University of Castilla-la Mancha, Spain, April 2012.
[21] Fernando Royo, Miguel L´opez-Guerrero, Luis Orozco-Barbosa, and Teresa Olivares. 2C-WSN: A Conﬁguration Protocol Based on TDMA Communications over WSN. In Global Telecommunications Conference,
GLOBECOM . IEEE, pages 1–6, 2009.
[22] M. Carmen Ruiz, Jose Antonio Mateo, Hermenegilda Macia, Juan Jose Pardo, and Teresa Olivares. Formal Modelling and Performance Evaluation of a novel Role-Based Routing Algorithm for Wireless Sensor
Networks. In Proceedings of the 18th annual International Conference on Advanced Computing and Communications, ADCOM 2012, pages 98–104. IEEE, 2012.
[23] B. S. Tsybakov and N. D. Vvedenskaya. Random Multiple-Access Stack Algorithm. Problemy Peredachi
Informatsii, 16:80–94, 1980.
[24] LLodewijk F. W. van Hoesel and P. J. M. Havinga. A lightweight medium access protocol for wireless sensor
networks. Technical report, 2004.

1201

