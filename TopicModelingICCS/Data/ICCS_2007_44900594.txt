An Adaptive Mobile System to Solve Large-Scale
Problems in Wireless Networks*
Jehwan Oh and Eunseok Lee**
School of Information and Communication Engineering, Sungkyunkwan University
300 Chunchun jangahn Suwon, 440-746, Korea
{hide7674,eslee}@selab.skku.ac.kr

Abstract. In this paper, we propose an adaptive mobile system that uses mobile
grid computing to achieve infeasible work in mobile device. Recently, grid
computing has gained significance for its ability to achieve certain goals by
sharing the idle resources of computing devices, and thus overcoming the various constraints of the mobile computing environment. In the mobile environment, it is very important for mobile devices to recognize correctly their
resource state. The proposed system includes a Grid Inference Engine, which
decides on the resource state by using fuzzy logic. In this paper, a prototype is
implemented to evaluate the proposed system. The effectiveness of the system
is confirmed through experiment.

1 Introduction
In the development of wireless network technology, the diffusion of mobile devices is
spreading, which is further increasing their availability. The mobile devices are continually developing in terms of technology and capability. However, mobile devices
do not always satisfy user requests effectively, because they are limited by small
display, low speed CPU, and low capacity memory. Therefore, applications executed
on mobile devices should be very lightweight, and large-scale applications that require complicated operations are difficult or impossible to execute. Users' desire to be
offered applications with service quality comparable to desktop computers on mobile
devices is increasing, but programmers can only develop just applications that provide
restrictive services to user. To effectively solve these issues, grid computing[1] was
introduced, which uses the idle resources of many computers connected in a network,
and therefore, yields results similar to traditional wired networks. Grid computing
produces very high efficiency super-computing resources, which can easily be used to
solve work requiring high efficiency, and large-scale calculation ability, while operating in a cooperative environment.
*

This work was supported in parts by Ubiquitous Autonomic Computing and Network Project,
21th Century Frontier R&D Program, MIC, Korea, ITRC IITA-2006-(C1090-0603-0046),
Grant No. R01-2006-000-10954-0, Basic Research Program of the Korea Science & Engineering Foundation, and the Post-BK21 Project.
**
Corresponding author.
Y. Shi et al. (Eds.): ICCS 2007, Part IV, LNCS 4490, pp. 594–597, 2007.
© Springer-Verlag Berlin Heidelberg 2007

An Adaptive Mobile System to Solve Large-Scale Problems in Wireless Networks

595

In existing mobile grid research[2][3][4][5], mobile device nodes use the resources
of wired grid networks. In the proposed system, mobile devices can offer their own
resources as well as use the resources of wired grid networks. It is very important for
mobile devices to recognize correctly their own resource state. Therefore, we propose
the Grid Inference Engine (GIE) for this purpose. The GIE decides whether the module can provide resources, and if possible, it decides on the resources to provide. Also,
it decides whether the resource of Grid computing is required, according to resource
state and requested jobs. If it is required, it decides the number of jobs to request. We
used fuzzy logic to make this decision.
In this paper, a prototype is implemented. The effectiveness of the system is confirmed through experiment.

2 Proposed System
We consider the technological and functional constraints of mobile devices. We propose a method to monitor mobile resources and to decide on the resources to provide.
This system creates new possibilities in mobile devices. The proposed system is based
on mobile grid computing, which is an extension of traditional grid computing.
2.1 System Architecture
The overall architecture of the proposed system is composed of two components: the
Client Module, embedded in the client device, and the Server Module, which operates
on the server side.

Fig.1. Components of the Proposed System

- Context Observer: gathers dynamically changing context information such as CPU
state, battery life and creates Application profile and Resource profile
- Grid Inference Engine: decides the resource state of the device
- Integration Agent: integrates the received job results from other devices, and delivers the integrated results to the application
- Task Executor: executes the jobs required for an external peer
- Communicator: performs the interaction between modules

596

J. Oh and E. Lee

2.2 Grid Inference Engine
We propose the GIE to decide the resource state of a mobile device. The GIE uses
fuzzy logic to make this decision. The GIE decides whether the module can provide
resources. If possible, the module decides how much resources can be supported.
Also, it decides whether a Grid is required according to resource state and requested
jobs. If it is required, it decides the number of jobs to request.
System Profile: The proposed system recognizes changes in resources. Information
regarding resources may be divided into static resources and dynamic resources.
Static resources represent information that does not change, such as CPU type, RAM
size, storage size, and so on. Dynamic resources represent information that changes in
response to varying environments, such as CPU load, free RAM, remaining battery,
usable storage, and so on. The proposed system describes static and dynamic resource
information using XML, and maintains a list of varying resources.
Application Profile: The application is programmed in Java. Java is an object-oriented
language, meaning that data is encapsulated and applications consist of a collection of
objects. The application is designed so that distributed classes execute independently
of each other. The application profile describes the required information for class
execution.
In the proposed system, the level of the Membership function is divided into five
levels: MH(Max High), H(High), N(Normal), L(Low) and ML(Max Low). The system developer or user has to input directly the level of membership. We generate the
125 rules for fuzzy inference. Fuzzy logic has four levels, which are, fuzzy matching,
inference, combining fuzzy conclusion, and defuzzification [6].

3 System Evaluation
The effectiveness of the proposed system is achieved by applying it to an ‘Application
for Emergency-situation’ using mobile devices. The Application for Emergencysituation has functions such as identifying a patient, searching medical records,
enabling video-conferencing, etc. This application consists of objects that execute
independently.
The capability and utility of the system were validated using mobile devices developed for the Personal Java runtime environment on iPAQ Pocket PCs. Two Pocket
PCs were used for performance evaluation. The Pocket PC used was an iPAQ h5450,
equipped with a 400 MHz processor, 64 MB of RAM and 11-Mbps IEEE 802.11b
wireless card. The experiment assumes same bandwidth values for communication.
The experiment was conducted to test the system’s execution time. Pocket PC A
used the proposed system, and Pocket PC B used the raw resource state. For evaluation, each Pocket PC executes the ‘Application of Emergency’ application, and is
compared in terms of execution time. We continually executed the same service to
create overhead on Pocket PC A and B. The execution time is the processing time
taken, from receiving an initial user task request, to completing the task.
Initially the result of the execution time of Pocket PC A is similar to the result of
the execution time of Pocket PC B. However, without the GIE, the application on

An Adaptive Mobile System to Solve Large-Scale Problems in Wireless Networks

597

Pocket PC B crashed when the service was executed 10 times. The application on
Pocket PC A crashed when the service was executed 15 times. The GIE secured stable
execution time operating on mobile devices. This confirms the efficiency of the proposed system in terms of deciding on the most effective resource state.

4 Conclusion
This paper presented an adaptive mobile system using mobile grid computing to overcome the constrained performance of mobile devices, and proposed the Grid Inference Engine which monitors resources and decides on the resource state.
A prototype was implemented in order to evaluate the proposed system in terms of
deciding on the most efficient resource state. The effectiveness of this system is confirmed through experiment.

References
1. Foster, I., Kesselman, C., Nick, J.M., Tuecke, S.: The Physiology of the Grid: An Open
Grid Services Architecture for Distributed Systems Integration.OPEN Grid Service Grid
Services Architecture for Distributed Systems Integration. Open Grid Service Infrastructure
WG, Global Grid Forum, 6(2002)
2. Chan, A.T.S., Chuang, S.N.: MobiPADS: A Reflective Middleware for Context-Aware
Mobile Computing. IEEE Transaction on Software Engineering. vol.29, no.12(2003)10721085
3. Gu, X.H., Nahrstedt, K., Messer, A., Greenberg, I., Milojicic, D.: Adaptive offloading for
pervasive computing. Pervasive Computing, IEEE vol.3, no.3, (2004)66-73
4. Hwang, J., Aravamudham, P.: Middleware Service for P2P Computing in Wireless Grid
Networks. IEEE Internet Computing vol.8, no.4, (2004)40-46
5. Phan, T., Huang, L., Dulan, C.: Challenge: Integrating Mobile Wireless Devices into the
Computational Grid. Proceedings of the 15th Annual ACM Symposium on Principles of
Distributed Computing, ACM Press, MOBICOM’02, 9(2002)271-278
6. Lee, K.H.: First Course on Fuzzy Theory and Applications. Advances in Soft Computing.
Springer(2005)
7. Lum, W.Y., Lau, F.C.M.: User-Centric Content Negotiation for Effective Adaptation Service in Mobile Computing. IEEE Transaction on Software Engineering. vol.29, no.
12(2003)1100-1111

