Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1036 – 1045

International Conference on Computational Science, ICCS 2013

Initialization of lattice Boltzmann models with the help of the
numerical Chapman–Enskog expansion
Ynte Vanderhoydonca,∗, Wim Vanroosea
a Department

of Mathematics and Computer Science, Universiteit Antwerpen, Middelheimlaan 1, 2020 Antwerpen, Belgium

Abstract
We extend the applicability of the numerical Chapman–Enskog expansion as a lifting operator for lattice Boltzmann models to
map density and momentum to distribution functions. In earlier work [Vanderhoydonc et al. Multiscale Model. Simul. 10(3):
766-791, 2012] such an expansion was constructed in the context of lifting only the zeroth order velocity moment, namely the
density. A lifting operator is necessary to convert information from the macroscopic to the mesoscopic scale. This operator
is used for the initialization of lattice Boltzmann models. Given only density and momentum, the goal is to initialize the
distribution functions of lattice Boltzmann models. For this initialization, the numerical Chapman–Enskog expansion is used
in this paper.
Keywords: Numerical Chapman–Enskog expansion; lifting operator; lattice Boltzmann models; Chapman–Enskog
expansion; Constrained Runs; macroscopic partial diﬀerential equations; macroscopic velocity moments.

1. Introduction
The dynamics of a system of colliding particles can typically be described by diﬀerent levels of accuracy. One
distinguishes between micro-, meso- and macroscopic scales. Macroscopic partial diﬀerential equations (PDEs)
model only a few low order velocity moments and are therefore not that accurate to describe interactions between
particles. When a detailed description is necessary, a microscopic model is used. These individual-based models
can take into account the particle collision physics. Kinetic equations are ubiquitous to model at this scale. The
Boltzmann equation can be used to describe such kinetic models by modelling distribution functions in phase
space.
We will focus on lattice Boltzmann models (LBMs) that are space, time and velocity discretizations of the
Boltzmann equation [1, 2]. LBMs are used for hydrodynamic simulations of complex ﬂuids [1, 2, 3] and are based
on a streaming and collision process. The initialization of such an LBM is performed by using a lifting operator.
Such an operator deﬁnes a mapping between macroscopic and mesoscopic variables such that the distribution
functions of the LBM can be built from the given macroscopic information. The concept of a lifting operator in
a multiscale context was ﬁrst introduced by Kevrekidis et al. in the equation-free framework to couple diﬀerent
scales in a dynamical system [4].
Lifting operators for LBMs are considered in [5, 6, 7, 8, 9, 10] where density is mapped to distribution functions. The Chapman–Enskog expansion is built for such model problems in [5]. This expansion is ﬁrst introduced
∗ Corresponding

author. Tel.: +3232653859 ; fax: +3232653777.
E-mail address: ynte.vanderhoydonc@ua.ac.be.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.269

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

1037

in [11] to solve the Boltzmann equation. Furthermore, [5], [6], [9] and [10] apply the Constrained Runs (CR)
algorithm to LBMs. Originally, the CR algorithm is introduced by Gear et al. [12] to map macroscopic initial
variables to missing microscopic variables for stiﬀ singularly perturbed ordinary diﬀerential equations (ODEs).
This algorithm is based on the attraction of the dynamics toward the slow manifold. Since the dynamics on this
slow manifold can be parametrized by only macroscopic variables such as the density, the higher order velocity
moments become slaved functionals of the density in the LBM context with conserved density. [7] compares
the Chapman–Enskog expansion with the CR algorithm for model problems with given initial density. However,
both of these methods have some serious drawbacks. The Chapman–Enskog expansion needs to be constructed
analytically while the CR algorithm is computationally expensive, especially for higher dimensional problems.
Because of these drawbacks, [8] constructs the numerical Chapman–Enskog expansion as a lifting operator for
these model problems. This numerical Chapman–Enskog expansion is based on a combination of the Chapman–
Enskog expansion and the CR algorithm. It ﬁnds the coeﬃcients of the Chapman–Enskog expansion numerically
based on the CR algorithm. This reduces the number of unknowns in the lifting since it only ﬁnds the coeﬃcients
of the expansion rather than the full state of the distribution functions.
So far, the numerical Chapman–Enskog expansion has been constructed for model problems with equilibrium
distribution functions that only depend on the density. They appear in LBMs where the collisions only conserve the
density. The goal of this paper is to generalize it to models where both density and momentum are conserved. We
borrow the concept of the numerical Chapman–Enskog expansion constructed in [8] and use it to map both density
and momentum to distribution functions of the LBM. The proposed algorithm is an extension that shows that the
numerical Chapman–Enskog expansion can be generalized for the considered model problems. These model
problems still face limiting assumptions but are an intermediate step towards more general physical problems.
The remainder of this paper is organized as follows. Section 2 starts with the outline of the models with
diﬀerent levels of accuracy in which we are interested. Both lattice Boltzmann models and more macroscopic
PDEs are brieﬂy discussed. Section 3 describes the numerical Chapman–Enskog expansion to map density to
distribution functions. We then proceed to the construction of the numerical Chapman–Enskog expansion to map
both density and momentum to distribution functions in Section 4. Numerical results for academic test problems
are considered in Section 5. There the proposed lifting operator is tested in a setting of restriction and lifting. We
conclude and give an outlook in Section 6.
2. Models with diﬀerent levels of accuracy
This section introduces models that will be used throughout this paper. The mesoscopic scale is described by
a lattice Boltzmann model (LBM) and will be discussed in Section 2.1. The macroscopic scale will use partial
diﬀerential equations (PDEs) to describe the evolution of the macroscopic velocity moments in Section 2.2.
2.1. Lattice Boltzmann models
An LBM [1, 2] describes the evolution of a one-particle distribution function fi (x, t) = f (x, vi , t) discretized in
space x ∈ Rn , time t ≥ 0 and velocity vi ∈ Rn with n ∈ {1, 2, 3} for practical applications. The velocities are taken
from a discrete set deﬁned by the geometry of the grid. The functions are represented as fi : X×T → R with X×T
the space-time grid with space steps Δxi in the direction of velocity vi , time step Δt and T = {0, Δt, 2Δt, . . .}∩[0, T ].
Representation DdQq used for the description of LBMs stands for d dimensions and q velocity directions. D1Q3,
for example, considers a one-dimensional spatial domain with only three values for the velocity vi = ci Δx/Δt in
which ci = i, i ∈ {−1, 0, 1} represents the dimensionless grid velocities. The remainder of this section contains the
description of the D1Q3 lattice Boltzmann equation (LBE). This equation can however easily be generalized to
more dimensions.
The lattice Boltzmann equation describing the evolution of the distribution functions with BGK approximation
[13] and no external forces is
fi (x + ci Δx, t + Δt) = (1 − ω) fi (x, t) + ω fieq (x, t),
fieq (x, t)

i ∈ {−1, 0, 1}.

(1)

are deﬁned to satisfy the conservation laws. For example, when the
The equilibrium distribution functions
LBM only conserves the density ρ(x, t), equilibrium distribution functions can be deﬁned by fieq (x, t) = 13 ρ(x, t).
The relaxation time τ = 1/ω represents the time scale associated with the relaxation towards equilibrium.

1038

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

2.2. Macroscopic partial diﬀerential equations
At the macroscopic scale the evolution is described by a PDE for the moments of the particle distribution
functions. Density ρ(x, t) = i fi (x, t), momentum φ(x, t) = ρ(x, t)u(x, t) = i vi fi (x, t) and energy ξ(x, t) =
1
2
i vi fi (x, t) are respectively the zeroth, ﬁrst and second order velocity moments.
2
For the D1Q3 problem, discussed in this section, the transformation between the distribution functions and the
moments is straightforward since the matrix M below is invertible.
⎛
⎞ ⎛
⎞⎛
⎞
⎛
⎞
⎜⎜⎜ ρ ⎟⎟⎟ ⎜⎜⎜ 1 1 1 ⎟⎟⎟ ⎜⎜⎜ f1 ⎟⎟⎟
⎜⎜⎜ f1 ⎟⎟⎟
⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟
⎜⎜⎜
⎟
(2)
⎜⎜⎝ φ ⎟⎟⎠ = ⎜⎜⎝ 1 0 −1 ⎟⎟⎠ ⎜⎜⎝ f0 ⎟⎟⎠ = M ⎜⎜⎝ f0 ⎟⎟⎟⎟⎠ .
1
1
ξ
f
f
0
−1
−1
2
2
When we look at these functions in a point x at time t, they can be represented either as ( f1 , f0 , f−1 )T ∈ R3 or as
(ρ, φ, ξ)T ∈ R3 .
Low order velocity moments are used to describe macroscopic PDEs. For example, it can be shown that the
diﬀusion PDE and the LBM are macroscopic equivalent [5] when considering the following.
∂2 ρ
∂ρ
= D 2,
∂t
∂x

D=

2 − ω Δx2
,
3ω Δt

fieq (x, t) =

1
ρ(x, t),
3

i ∈ {−1, 0, 1}.

(3)

Figure 1 clariﬁes the intention of this paper, namely the initialization of LBMs. From a given density ρ(x, 0),
or density and momentum, determine the distribution functions fi (x, 0), i ∈ {−1, 0, 1} of the LBM at time t = 0.
This will include some arbitrariness. To fully characterize the distribution functions fi (x, 0) at time t = 0 all three
moments — ρ(x, 0), φ(x, 0) and ξ(x, 0) — are necessary. For this, a lifting operator is necessary that deﬁnes a
mapping between macroscopic and mesoscopic variables such that the distribution functions of the LBM can be
built from the given macroscopic information.
Macroscopic scale

Mesoscopic scale

Macroscopic PDE
ρ density

LBM
fi , i ∈ {−1, 0, 1} distribution functions
f1 (x − Δx, 0)

f1 (x, 0)

f1 (x + Δx, 0)

f0 (x − Δx, 0)

f0 (x, 0)

f0 (x + Δx, 0)

Lifting
ρ(x − Δx, 0)

ρ(x, 0)

ρ(x + Δx, 0)

f−1 (x − Δx, 0) f−1 (x, 0) f−1 (x + Δx, 0)

Fig. 1. To initialize an LBM from a given density ρ(x, 0), or density and momentum, we need to characterize the distribution functions fi (x, 0),
i ∈ {−1, 0, 1} at time t = 0. A lifting operator is then used to map the macroscopic variables to the mesoscopic variables, namely the distribution
functions of the LBM.

The aim is then to ﬁnd lifting methods that predict the missing moments so that steep initial layers that occur
in ill-initialized problems are avoided [14]. The focus of this paper is to initialize LBMs from a given density and
momentum, the zeroth and ﬁrst order velocity moments, using a numerical Chapman–Enskog expansion. Such an
expansion combines the ideas of the Chapman–Enskog expansion [11] and the Constrained Runs (CR) algorithm
[12]. Both methods are used in the literature as lifting operators for LBMs. The Chapman–Enskog expansion for
LBMs is outlined in [5] and the application of CR to LBMs is considered in [9]. The numerical Chapman–Enskog
expansion was ﬁrst proposed in [8] for LBMs that only conserve the density.
3. Numerical Chapman–Enskog expansion for LBMs to map density to distribution functions
This section describes the numerical Chapman–Enskog expansion for problems where the equilibrium distribution functions only depend on the density. The goal of this paper is to generalize this to a dependence of both
density and momentum. The description is based on D1Q3 problems but this can easily be generalized to higher
dimensional problems.

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

1039

3.1. Chapman–Enskog expansion
The Chapman–Enskog expansion expands distribution functions around the equilibrium as
f = f (0) + ε f (1) + ε2 f (2) + . . . ,
where f (1) and f (2) are correction terms [11]. For D1Q3 problems, where the equilibrium only depends on the
density, the correction terms form a series of the density and its derivatives [5, 6]. Thus this expansion can be used
to map the density to the distribution functions.
However, the derivation of the correction terms requires tedious analytical work, especially higher order terms
for multidimensional problems are not straightforward to obtain.
3.2. Constrained Runs algorithm
The CR algorithm is a numerical alternative based on the attraction of the dynamics toward the slow manifold.
It was ﬁrst introduced by Gear et al. to map macroscopic initial variables to missing microscopic variables for stiﬀ
singularly perturbed ordinary diﬀerential equations (ODEs) [12]. Applied to LBMs, the CR algorithm initializes
the missing velocity moments such that the evolution of these moments is smooth of order m. The smoothness
condition is deﬁned by
dm+1 φ(t)
dm+1 ξ(t)
=
0
and
= 0.
(4)
dtm+1 t=0
dtm+1 t=0
The higher the order of smoothness, the more accurate the method.
In practice the smoothness condition is approximated by a ﬁnite diﬀerence relation between the moments in
successive time steps. There are two possible ways to ﬁnd the moments that satisfy the smoothness condition.
Via an explicit iteration but this can become unstable for the higher order smoothness condition [5, 10]. Or via a
Newton iteration that solves the ﬁxed point problem
⎛
⎞
k+1
k⎟
⎜⎜⎜
⎟⎟⎟
φ
φ
= Cm ⎜⎜⎝ρ0 ,
⎟,
ξ
ξ ⎠
where Cm is a backward extrapolation formula derived from the smoothness condition and ρ0 is the given density
[10]. More stability and accuracy details concerning the application of CR to LBMs can be found in [5, 9, 10].
This CR algorithm has a serious computational cost since it searches for the missing moments in every grid
point of the spatial domain. Especially for high dimensional problems this leads to large Jacobian matrices that
need to be estimated through additional LBM steps. This makes the CR algorithm prohibitively expensive for 2D
problems.
3.3. Numerical Chapman–Enskog expansion
Instead of using CR to ﬁnd for each grid point the missing moments φ and ξ, the numerical Chapman–Enskog
expansion uses CR to ﬁnd the unknown coeﬃcients of the expansion [8]. The major advantage is that it leads
to much smaller systems since it ﬁnds the expansion coeﬃcients that satisfy the smoothness condition rather
than the full state of the velocity moments. This reduces the number of unknowns signiﬁcantly. The numerical
Chapman–Enskog expansion is described in this section for one-dimensional problems, with equilibrium distribution functions that only depend on the density. This can also easily be generalized to more dimensions.
The expansion expresses the distribution functions as
fi (x, t) = fieq (x, t) + αi ∂ x ρ + βi ∂2x ρ + . . . + γi ∂t ρ + ζi ∂2t ρ + . . . + ηi ∂ x ∂t ρ + . . . ,
where

⎛
⎜⎜⎜ α1
⎜
i ∈ {−1, 0, 1} and α = ⎜⎜⎜⎜ α0
⎝
α−1

⎞
⎟⎟⎟
⎟⎟⎟
3
⎟⎟⎠ ∈ R ,

⎛
⎜⎜⎜ β1
⎜
β = ⎜⎜⎜⎜ β0
⎝
β−1

⎞
⎟⎟⎟
⎟⎟⎟
3
⎟⎟⎠ ∈ R , . . . ,

(5)

are vectors of constants that only depend on ω, Δx and Δt. This expansion is valid for an LBM on an inﬁnite
domain with parameters Δx, Δt and ω and equilibrium distribution functions that only depend on ρ(x, t). It requires

1040

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

some smoothness condition for the expansion to be valid. The derivation of this expansion and the necessary
conditions are outlined in [8].
Once the constants are determined, the lifting operator — that is necessary to initialize the LBM — can
be applied repeatedly for the full domain to lift all the missing moments at a minimal cost of estimating the
derivatives of the density with ﬁnite diﬀerence approximations. How these constants are found is discussed below
as a summary of [8].
To simplify the discussion and notation we limit ourselves to a truncated series
fi (x, t) = fieq (x, t) + αi ∂ x ρ + βi ∂2x ρ + γi ∂t ρ,

i ∈ {−1, 0, 1}.

(6)

If a PDE in closed form exists that describes the evolution of ρ in the form of ∂t ρ + a∂ x ρ = D∂2x ρ, then
it is possible to eliminate ∂t ρ from the expansion. The distribution functions are now series with only spatial
derivatives.
(7)
fi (x, t) = fieq (x, t) + αi ∂ x ρ + βi ∂2x ρ, i ∈ {−1, 0, 1}.
Bear in mind that it considers diﬀerent coeﬃcients for αi and βi in Eq. (6) and Eq. (7).
We can extract the coeﬃcients αi and βi from the linear system
⎛
⎜⎜⎜ ∂ x ρ(x j )
⎜⎜⎜
∂ x ρ(x j )
⎜⎜⎜
⎜⎜⎜
⎜⎜⎜
⎜⎜⎜ ∂ x ρ(xk )
⎜⎜⎜
∂ x ρ(xk )
⎜⎜⎝

∂2x ρ(x j )
∂ x ρ(x j )
∂ x ρ(xk )

∂2x ρ(xk )

∂2x ρ(x j )
∂2x ρ(xk )

⎞⎛
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟ ⎜⎜
2
∂ x ρ(x j ) ⎟⎟⎟⎟⎟ ⎜⎜⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎠ ⎜⎝
2
∂ x ρ(xk )

α1
α0
α−1
β1
β0
β−1

⎞ ⎛
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎟⎟ = ⎜⎜⎜
⎟⎟⎟⎟ ⎜⎜⎜⎜
⎟⎟⎟ ⎜⎜⎜
⎟⎠ ⎜⎝

f1 (x j , t) − f1eq (x j , t)
f0 (x j , t) − f0eq (x j , t)
eq
(x j , t)
f−1 (x j , t) − f−1
eq
f1 (xk , t) − f1 (xk , t)
f0 (xk , t) − f0eq (xk , t)
eq
(xk , t)
f−1 (xk , t) − f−1

⎞
⎟⎟⎟
⎟⎟⎟
⎟⎟⎟
⎟⎟⎟
⎟⎟⎟ ,
⎟⎟⎟⎟
⎟⎟⎟
⎟⎠

(8)

once the distribution functions are close to the slow manifold since on the slow manifold the distribution functions
are parametrized by the density [8]. x j and xk represent grid points of the spatial domain.
To reach the slow manifold we combine CR with the extraction of the coeﬃcients. Consider a numerical
function h(α, β; ρ, m) as described in Function 1. This function takes as input α and β, the vectors of coeﬃcients
of expansion (7), and as parameters the ﬁxed density ρ and an integer m, the order of the smoothness condition. It
ﬁrst constructs, with this input, a state ( f1 , f0 , f−1 )T with the help of series (7). This state is then used as an initial
state to perform a sequence of multiple LBM steps. For each of these steps we ﬁnd the corresponding moments
φ and ξ using Eq. (2). With these moments and the smoothness condition we ﬁnd a new guess for φ and ξ that is
closer to the slow manifold. These new moments result in new vectors of coeﬃcients α and β, by applying the
linear system in Eq. (8) on the distribution functions fi , i ∈ {−1, 0, 1}.
The idea is now to determine α and β such that they are invariant under this numerical function h(α, β; ρ, m).
Indeed, if the initial and ﬁnal state can be described by the same α and β then the lifted distribution function is
close to the slow manifold since the evolution of the corresponding φ and ξ satisﬁes the smoothness condition.
The vectors of coeﬃcients α and β that are invariant under the numerical function h(α, β; ρ, m) are found
through a Newton iteration [8].
Function 1 h(α, β; ρ, m)
Require: Guess on vectors of coeﬃcients α, β, given density ρ, order m to use in Eq. (4).
1: Construct lifting operator in Eq. (7).
2: Compute corresponding moments φ and ξ by applying Eq. (2).
3: Perform m + 1 LBM time steps to compute the ﬁnite diﬀerence approximations of Eq. (4). This results in new
moments φ and ξ that are closer to the slow manifold.
4: Revert back to distribution functions ( f1 , f0 , f−1 )T by applying Eq. (2).
5: Select grid points x j and xk to construct the linear system in Eq. (8).
6: Solve the system for α and β.
7: return α, β.

1041

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

4. Numerical Chapman–Enskog expansion for LBMs to map density and momentum to distribution functions
This section generalizes the idea of the numerical Chapman–Enskog expansion of Section 3 where the LBM
only conserves the density and the dynamics are described by the density as the only macroscopic variable. Now,
we will look at LBMs where both density and momentum are conserved and both need to be considered as
macroscopic variables. An important question is how this aﬀects the numerical Chapman–Enskog expansion?
The notation in this section is also based on D1Q3 problems. Again, this can easily be generalized to more
dimensions.
4.1. Numerical Chapman–Enskog expansion
We recall the derivation of the numerical Chapman–Enskog expansion in [8] to show that the generalized
expansion is given by
eq
(2)
(1) 2
(2) 2
(1)
(2)
fi (x, t) = fi (x, t) + α(1)
i ∂ x ρ + αi ∂ x (ρu) + βi ∂ x ρ + βi ∂ x (ρu) + . . . + γi ∂t ρ + γi ∂t (ρu) + . . . ,

where
i ∈ {−1, 0, 1}

and α(1)

⎛
⎜⎜⎜ α1
⎜
= ⎜⎜⎜⎜ α0
⎝
α−1

⎞(1)
⎟⎟⎟
⎟⎟⎟
3
⎟⎟⎠ ∈ R ,

α(2)

⎛
⎜⎜⎜ α1
⎜
= ⎜⎜⎜⎜ α0
⎝
α−1

⎞(2)
⎟⎟⎟
⎟⎟⎟
3
⎟⎟⎠ ∈ R , . . . ,

(9)

(10)

are vectors of constants that only depend on ω, Δx and Δt.
Indeed, if the functions fi (x, t) are inﬁnitely diﬀerentiable, a Taylor expansion can be constructed and the
distribution functions in point x + iΔx, i ∈ {−1, 0, 1} at time t + Δt are given by
fi (x + iΔx, t + Δt) = fi (x, t) +

∂ fi (x, t)
∂2 fi (x, t) i2 Δx2 ∂ fi (x, t)
∂2 fi (x, t) Δt2 ∂2 fi (x, t)
iΔx +
+
Δt
+
+
iΔxΔt + . . . .
∂x
2
∂t
2
∂x∂t
∂x2
∂t2

Combined with the assumption that fi is a solution of the LBE (1) on an inﬁnite domain, we end up with expansion
fi (x, t) = fieq (x, t) −

iΔx ∂ fi (x, t) i2 Δx2 ∂2 fi (x, t) Δt ∂ fi (x, t) Δt2 ∂2 fi (x, t) iΔxΔt ∂2 fi (x, t)
−
−
− ...,
−
−
ω
∂x
2ω
ω ∂t
2ω ∂t2
ω
∂x∂t
∂x2

and higher order terms. With the notation Li for the functional
Li := −

i2 Δx2 ∂2
iΔx ∂
Δt ∂ Δt2 ∂2
iΔxΔt ∂2
−
−
− ...,
−
−
ω ∂x
2ω ∂x2 ω ∂t 2ω ∂t2
ω ∂x∂t

(11)

we can rewrite the LBE into a set of three coupled PDEs for the distribution functions
(1 − Li ) fi (x, t) = fieq (x, t),

∀i ∈ {−1, 0, 1},

(12)

that holds for x ∈] − ∞, ∞[ and t ∈ [0, ∞[.
The solution can be found by performing a Picard or ﬁxed point iteration
fi(n+1) (x, t) = Li fi(n) (x, t) + fieq (x, t),

(13)

k eq
with initial guess fi(−1) (x, t) = 0. The solution is then fi (x, t) = ∞
k=0 Li fi (x, t). This series converges if the error
between subsequent iterations goes to zero. This can be satisﬁed when smoothness on fieq is guaranteed such that
fieq = 0 [8].
limn→∞ Ln+1
i
This derivation shows that Eq. (9) is valid when the derivatives of fieq are easily expressible as derivatives of
the conserved moments.
If a PDE in closed form exists that describes the time derivatives of ρ and ρu in only spatial derivatives of ρ
and ρu, then it is possible to eliminate ∂t ρ and ∂t (ρu) from the expansion. The distribution functions can then be
approximated by a truncated series with only spatial derivatives and becomes
(2)
(1) 2
(2) 2
fi (x, t) = fieq (x, t) + α(1)
i ∂ x ρ + αi ∂ x (ρu) + βi ∂ x ρ + βi ∂ x (ρu).

(14)

1042

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045
(2)
(1)
(2)
The coeﬃcients α(1)
i , αi , βi and βi can then be extracted from a linear system analogous to the one in
Eq. (8) (extended for the multiple conserved moments). The algorithm to obtain the coeﬃcients from this linear
system is similar to the one in the previous section.
The construction of the numerical Chapman–Enskog expansion is based on an expansion that expresses the
distribution functions as a series of the macroscopic moments. The CR algorithm is the underlying method to
determine the coeﬃcients of this series. In order to generalize the numerical Chapman–Enskog expansion for
density and momentum we also need to generalize the CR algorithm. This is outlined in Section 4.2.

4.2. Constrained Runs algorithm
The original CR algorithm is performed on the velocity moments. The intention of this generalization is
to perform the algorithm directly on the distribution functions. Initially, we start from distribution functions
0 T
( f10 , f00 , f−1
) . The CR algorithm is based on a backward extrapolation in time of the missing moments. For this,
1 T
2 T
) , ( f12 , f02 , f−1
) , . . ..
we need to evolve the distribution functions over some time steps. This results in ( f11 , f01 , f−1
−1
M and M are applied to convert distribution functions to moments and vice versa. Then, the CR algorithm resets
the conserved moments, namely density and momentum, and applies the smoothness condition on the remaining
moment. To reset the conserved moments density and momentum and apply the smoothness condition on the
distribution functions, we use
⎛⎛
⎛
⎞next ⎛
⎞ prev
⎞ ⎛
⎞ ⎞
⎛
⎞
⎜⎜⎜⎜⎜ f1 ⎟⎟0 ⎜⎜ f1 ⎟⎟ prev ⎟⎟⎟
⎜⎜⎜ f1 ⎟⎟⎟
⎜⎜⎜ f1 ⎟⎟⎟
⎜⎜⎜ 1 1 1 ⎟⎟⎟
⎜
⎟
⎟
⎜
⎜⎜
⎟
⎟ ⎜
⎟ ⎟
⎜
⎜
⎟
⎜⎜⎜⎜ f0 ⎟⎟⎟⎟
= ⎜⎜⎜⎜ f0 ⎟⎟⎟⎟
+ M−1 M0 ⎜⎜⎜⎜⎜⎜⎜⎜⎜ f0 ⎟⎟⎟⎟ − ⎜⎜⎜⎜ f0 ⎟⎟⎟⎟ ⎟⎟⎟⎟⎟ where M0 = ⎜⎜⎜⎜ 1 0 −1 ⎟⎟⎟⎟ ,
(15)
⎜⎝
⎟⎠
⎝
⎠
⎠ ⎝
⎠ ⎠
⎝
⎝
⎠
⎝
f−1
f−1
f−1
f−1
0 0 0
prev T
) contains the backward extrapolation in time applied on the distribution functions. For
and ( f1prev , f0prev , f−1
prev T
1 T
2 T
) = 2( f11 , f01 , f−1
) − ( f12 , f02 , f−1
) . The distribution
example, for a linear extrapolation in time ( f1prev , f0prev , f−1
functions are then eventually determined via an iterative method performed on Eq. (15).

Here, we return to the derivation of the numerical Chapman–Enskog expansion. We need to determine α(1) ,
α(2) , β(1) and β(2) such that they are invariant under the numerical function h(α(1) , α(2) , β(1) , β(2) ; ρ, ρu, m) given in
Function 2.
Function 2 h(α(1) , α(2) , β(1) , β(2) ; ρ, ρu, m)
Require: Guess on vectors of coeﬃcients α(1) , α(2) , β(1) , β(2) , given density ρ and momentum ρu, order of smoothness condition m.
1: Construct lifting operator in Eq. (14).
2: Apply Eq. (15). This results in new distribution functions closer to the slow manifold.
3: Select grid points to construct a similar linear system as in (8).
(1)
(2)
4: Solve the system for α(1) , α(2) , β and β .
(1)
(2)
(1)
(2)
5: return α , α , β , β .
Function 1 and 2 mostly correspond to each other. Although, Function 2 is more general. It contains multiple conserved moments, the extended numerical Chapman–Enskog expansion and a generalized step of the CR
algorithm.
This section shows that the numerical Chapman–Enskog expansion can be generalized in this setting. However, for this to be possible, the derivatives of the equilibrium distribution should be easily expressible as derivatives of the conserved moments.
5. Numerical results
5.1. Example 1: D1Q3
As a model problem, we consider a D1Q3 lattice Boltzmann model with equilibrium distribution
f1eq (x, t) =

1
1
+ u(x, t) ρ(x, t),
3 2c

f0eq (x, t) =

1
ρ(x, t),
3

eq
f−1
(x, t) =

1
1
− u(x, t) ρ(x, t),
3 2c

1043

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

where c = Δx/Δt. Note that the equilibrium depends on the density and momentum as opposed to only the
density in [8]. This equilibrium is built such that the zeroth and ﬁrst order velocity moments are conserved. It
just represents a simple model problem to test the numerical Chapman–Enskog expansion on such an extended
problem.
The considered model problem has the following parameters for a one-dimensional domain of length L with n
spatial grid points.
L = 10, n = 200, Δx = L/n = 0.05, Δt = 0.001, ω = 0.9091,
ρ(x, 0) = exp(−(x − L/2)2 ) + 0.1, u(x, 0) = 0.03 sin(2πx/L).

(16)

Furthermore, periodic boundary conditions are taken into account.
The lifting operator can be tested against a reference distribution function fc . This reference solution is calculated by performing 1000 lattice Boltzmann steps starting from an initial state that corresponds to the equilibrium
distribution function with given macroscopic variables ρ(x, 0) and u(x, 0).
The lifting operator can be evaluated by restricting the reference distribution function fc to its macroscopic
variables and lift them back to a distribution function f by using the numerical Chapman–Enskog expansion. The
resulting f is compared with fc with the help of the 2-norm f − fc . These results are included in Table 1 for
various orders of the expansion and diﬀerent orders of the underlying CR algorithm. As a comparison, lifting with
the corresponding equilibrium distribution has a 2-norm of f eq − fc = 0.0415.
We calculate the lifting operator as a ﬁxed point for the coeﬃcients and thus perform a Newton iteration on
the coeﬃcients of the numerical Chapman–Enskog expansion by using the underlying CR algorithm to ﬁnd the
distribution functions closer to the slow manifold. As in [8], we know that the coeﬃcients can be determined
for every density and momentum as long as the problem has similar parameters Δx and Δt. Thus, we choose
macroscopic variables such that the linear system from which the coeﬃcients are determined is not singular.
Table 1. Test lifting operator against a reference distribution function fc . The error f − fc is presented in which f is determined via the
numerical Chapman–Enskog expansion. The reference distribution function fc is obtained by performing 1000 LBM time steps on the initial
state with parameters listed in (16). These results are listed for increasing number of terms in the expansion, implying an increasing number
of considered coeﬃcients. The order of the underlying CR algorithm also increases for every considered expansion.
Order CR
0
1
2
3
4
5
6
f eq , ∂ x ρ, ∂ x (ρu)
f − fc
0.0679
0.0320
0.0071
0.0074
0.0073
0.0073
0.0073
f eq , ∂ x ρ, ∂ x (ρu), ∂2x ρ, ∂2x (ρu)
0.0861
0.0026
2.6378e-004
6.7372e-005
3.7216e-005
3.6750e-005
3.6798e-005
f − fc
f eq , ∂ x ρ, ∂ x (ρu), ∂2x ρ, ∂2x (ρu), ∂3x ρ, ∂3x (ρu)
f − fc
0.0861
0.0027
5.6094e-004
8.2239e-005
4.2439e-006
5.0278e-006
5.3527e-006
f eq , ∂ x ρ, ∂ x (ρu), ∂2x ρ, ∂2x (ρu), ∂3x ρ, ∂3x (ρu), ∂4x ρ, ∂4x (ρu)
0.0861
0.0027
3.8770e-004
1.6050e-005
2.1631e-006
2.6841e-007
6.5869e-008
f − fc

Note that taking more terms into account in the expansion increases the accuracy but brings down the beauty
of this method since the number of coeﬃcients increases signiﬁcantly.
As a comparison we show the CR results for this model problem. For the results in Table 2 we apply CR on
the distribution functions. In order to avoid instabilities, the CR algorithm is combined with Newton’s method.
This results in a Jacobian of size 600 × 600. For this small test problem, it is still possible to apply the original CR
algorithm so it is nice to compare these results with those obtained via the numerical Chapman–Enskog expansion.
However — as the size of the Jacobian clariﬁes — the CR algorithm can not be applied for higher dimensional
problems.
Table 2. Test Constrained Runs algorithm combined with Newton’s method directly applied on distribution functions against a reference
distribution fc . The error f − fc is presented in which f is the lifting operator obtained via the CR algorithm. The reference distribution
function fc is obtained by performing 1000 LBM time steps on the initial state with parameters listed in (16). The results are presented for
diﬀerent orders of the smoothness condition for the CR algorithm.
Order CR
0
1
2
3
4
5
6
f − fc
0.0861
0.0027
3.8573e-004
1.9192e-005
2.5547e-006
2.8042e-007
2.1958e-008

1044

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

5.2. Example 2: D2Q5
The model problem for this example contains ﬁve velocity directions in a two-dimensional spatial domain.
These are given by v0 = (0, 0), v1 = (+c, 0), v2 = (0, +c), v3 = (−c, 0) and v4 = (0, −c) with c = Δx/Δt = Δy/Δt.
The following equilibrium distribution conserves density and average ﬂow velocities in the x and y direction.
f eq (x, y, v0 , t)

=

f eq (x, y, v2 , t)

=

f eq (x, y, v4 , t)

=

1
1
1
ρ(x, y, t), f eq (x, y, v1 , t) =
+ u x (x, y, t) ρ(x, y, t),
5
5 2c
1
1
1
1
+ uy (x, y, t) ρ(x, y, t), f eq (x, y, v3 , t) =
− u x (x, y, t) ρ(x, y, t),
5 2c
5 2c
1
1
− uy (x, y, t) ρ(x, y, t).
5 2c

The considered model problem has the following parameters for a two-dimensional domain of size L × L with
n2 spatial grid points.
L = 10,

n = 200,

Δx = L/n = 0.05,

Δy = L/n = 0.05,

ρ(x, y, 0) = exp(−(x − L/2) − (y − L/2) ) + 0.4,
uy (x, y, 0) = 0.03 sin(2πy/L).
2

2

Δt = 0.001,

ω = 0.9091,

u x (x, y, 0) = 0.03 sin(2πx/L),
(17)

Furthermore, periodic boundary conditions are taken into account.
Again we test the numerical Chapman–Enskog expansion in a setting of restriction and lifting. A reference
distribution function fc (x, y, vi , t), i ∈ {0, 1, 2, 3, 4} is obtained by performing 1000 LBM time steps on the initial
state given in Eq. (17). A possible lifting strategy that we can compare with is lifting with the corresponding
equilibrium distribution. The 2-norm errors for the speciﬁc velocities are listed below.
f eq (x, y, v0 , t) − fc (x, y, v0 , t)
f eq (x, y, vi , t) − fc (x, y, vi , t)

=

0.0470,

=

0.0550,

i ∈ {1, . . . , 4}.

Lifting with the numerical Chapman–Enskog expansion is listed in Table 3.
Table 3. Test lifting operator against a reference distribution function fc . The errors f (x, y, vi , t) − fc (x, y, vi , t) for i ∈ {0, . . . , 4} are presented
in which f is determined via the numerical Chapman–Enskog expansion. The reference distribution function fc is obtained by performing 1000
LBM time steps on the initial state with parameters listed in (17). These results are listed for increasing number of terms in the expansion,
implying an increasing number of considered coeﬃcients. The order of the underlying CR algorithm also increases for every considered
expansion.
Order CR
0
1
2
3
4
5
6
f eq , ∂ x ρ, ∂y ρ, ∂ x (ρu x ), ∂y (ρu x ), ∂ x (ρuy ), ∂y (ρuy )
f (x, y, v0 , t) − fc (x, y, v0 , t)
0.6618 0.9794 0.1189
0.1179
0.1179
0.1179
0.1179
f (x, y, v1 , t) − fc (x, y, v1 , t)
0.1530 0.2294 0.0143
0.0140
0.0140
0.0140
0.0140
0.1779 0.2603 0.0452
0.0450
0.0450
0.0450
0.0450
f (x, y, v2 , t) − fc (x, y, v2 , t)
f (x, y, v3 , t) − fc (x, y, v3 , t)
0.1530 0.2294 0.0143
0.0140
0.0140
0.0140
0.0140
0.1779 0.2603 0.0452
0.0450
0.0450
0.0450
0.0450
f (x, y, v4 , t) − fc (x, y, v4 , t)
f eq , ∂ x ρ, ∂y ρ, ∂ x (ρu x ), ∂y (ρu x ), ∂ x (ρuy ), ∂y (ρuy ), ∂2x ρ, ∂2y ρ, ∂2x (ρu x ), ∂2y (ρu x ), ∂2x (ρuy ), ∂2y (ρuy )
f (x, y, v0 , t) − fc (x, y, v0 , t)
0.1928 0.0176 5.2067e-004
9.7954e-005 9.9099e-005
f (x, y, v1 , t) − fc (x, y, v1 , t)
0.0483 0.0044 1.2264e-004
6.2397e-005 6.2491e-005
0.0483 0.0044 1.4786e-004
5.7104e-005 5.7140e-005
f (x, y, v2 , t) − fc (x, y, v2 , t)
f (x, y, v3 , t) − fc (x, y, v3 , t)
0.0483 0.0044 1.2264e-004
6.2397e-005 6.2491e-005
0.0483 0.0044 1.4786e-004
5.7104e-005 5.7140e-005
f (x, y, v4 , t) − fc (x, y, v4 , t)

9.8667e-005
6.2455e-005
5.7129e-005
6.2455e-005
5.7129e-005

9.8663e-005
6.2452e-005
5.7129e-005
6.2452e-005
5.7129e-005

f eq , ∂ x ρ, ∂y ρ, ∂ x (ρu x ), ∂y (ρu x ), ∂ x (ρuy ), ∂y (ρuy ), ∂2x ρ, ∂2y ρ, ∂2x (ρu x ), ∂2y (ρu x ), ∂2x (ρuy ), ∂2y (ρuy ), ∂3x ρ, ∂3y ρ, ∂3x (ρu x ), ∂3y (ρu x ), ∂3x (ρuy ), ∂3y (ρuy )
f (x, y, v0 , t) − fc (x, y, v0 , t)
0.1928 0.0178 6.7160e-004
2.1868e-004 5.4479e-005 5.4150e-005 5.4292e-005
f (x, y, v1 , t) − fc (x, y, v1 , t)
0.0483 0.0045 1.4442e-004
7.0300e-005 1.7193e-005 1.7206e-005 1.7215e-005
0.0483 0.0045 1.9339e-004
4.1264e-005 2.6411e-005 2.6403e-005 2.6416e-005
f (x, y, v2 , t) − fc (x, y, v2 , t)
f (x, y, v3 , t) − fc (x, y, v3 , t)
0.0483 0.0045 1.4442e-004
7.0300e-005 1.7193e-005 1.7206e-005 1.7215e-005
0.0483 0.0045 1.9339e-004
4.1264e-005 2.6411e-005 2.6403e-005 2.6416e-005
f (x, y, v4 , t) − fc (x, y, v4 , t)

Again, we see an increase in the accuracy when more terms of the expansion are taken into account. However,
the increase in terms of the expansion brings down the beauty of this method. Especially since all the cross terms
between the diﬀerent spatial directions should also be considered to obtain a better accuracy.

Ynte Vanderhoydonc and Wim Vanroose / Procedia Computer Science 18 (2013) 1036 – 1045

6. Conclusions
This paper constructs a numerical Chapman–Enskog expansion that can be used as a lifting operator for LBMs
that conserve density and momentum during the collision. This is an extension of [8] where the idea of a numerical
Chapman–Enskog expansion was ﬁrst introduced and applied to LBMs that only conserve the density. This
method is an alternative to the Chapman–Enskog expansion that requires a tedious analytical derivation.
The new method was shown to converge for some simple benchmark problems in 1D and 2D. The numerical
results show that the method is computationally much cheaper than the Constrained Runs algorithm, an alternative
numerical lifting operator for LBMs. The latter becomes so expensive that it is too prohibitive to apply in 2D.
The extension of the numerical Chapman–Enskog expansion proposed in this paper required a generalization of
the CR algorithm that forms the basis of the method. Unfortunately, it is necessary to assume that the derivatives
of the equilibrium distribution of the LBM are easily expressible as derivatives of the conserved moments.
In addition, we saw a signiﬁcant increase in the number of coeﬃcients that need to be determined when the
numerical Chapman–Enskog expansion includes higher order terms. Similarly, an expansion in 2D requires many
additional cross terms that appear when these higher order terms are used in the expansion. Each additional term
introduces new unknown coeﬃcients that need to be determined by Newton’s method. However, the resulting
system is still much smaller than the system constructed in the original CR algorithm.
In future research we will try to remove the limiting assumptions and generalize the expansion to kinetic
models that use Maxwell–Boltzmann equilibrium distributions that are frequently used in physical applications.
Acknowledgements
This work is supported by research project Hybrid macroscopic and microscopic modelling of laser evaporation and expansion, G.017008N, funded by ‘Fonds Wetenschappelijk Onderzoek’ together with an ‘ID-beurs’ of
the University of Antwerp.
References
[1]
[2]
[3]
[4]
[5]
[6]
[7]
[8]
[9]
[10]
[11]
[12]
[13]
[14]

D. A. Wolf - Gladrow, Lattice-gas cellular automata and lattice Boltzmann models, Springer, 2000.
S. Succi, The lattice Boltzmann equation for ﬂuid dynamics and beyond, Oxford University Press, 2001.
C. K. Aidun, J. R. Clausen, Lattice-Boltzmann method for complex ﬂows, Annu. Rev. Fluid Mech. 42 (2010) 439–472.
I. G. Kevrekidis, C. W. Gear, J. M. Hyman, P. G. Kevrekidis, O. Runborg, C. Theodoropoulos, Equation-free, coarse-grained multiscale
computation: enabling microscopic simulators to perform system-level analysis, Commun. Math. Sci. 1 (4) (2003) 715–762.
P. Van Leemput, Multiscale and equation-free computing for lattice Boltzmann models, Ph.D. thesis, K.U. Leuven (2007).
P. Van Leemput, C. Vandekerckhove, W. Vanroose, D. Roose, Accuracy of hybrid lattice Boltzmann/ﬁnite diﬀerence schemes for
reaction-diﬀusion systems, Multiscale Model. Simul. 6 (2007) 838–857.
Y. Vanderhoydonc, W. Vanroose, Lifting in hybrid lattice Boltzmann and PDE models, Comput. Vis. Sci. 14 (2011) 67–78.
Y. Vanderhoydonc, W. Vanroose, Numerical extraction of a macroscopic PDE and a lifting operator from a lattice Boltzmann model,
Multiscale Model. Simul. 10 (2012) 766–791.
P. Van Leemput, W. Vanroose, D. Roose, Mesoscale analysis of the equation-free Constrained Runs initialization scheme, Multiscale
Model. Simul. 6 (2007) 1234–1255.
C. Vandekerckhove, I. Kevrekidis, D. Roose, An eﬃcient Newton-Krylov implementation of the Constrained Runs scheme for initializing
on a slow manifold, J. Sci. Comput. 39 (2009) 167–188.
S. Chapman, T. G. Cowling, The mathematical theory of non-uniform gases, Cambridge University Press, 1953.
C. W. Gear, T. J. Kaper, I. G. Kevrekidis, A. Zagaris, Projecting to a slow manifold: singularly perturbed systems and legacy codes,
SIAM J. Appl. Dyn. Syst. 4 (2005) 711–732.
M. Junk, A. Klar, L. Luo, Asymptotic analysis of the lattice Boltzmann equation, J. Comput. Phys. 210 (2005) 676–704.
R. Mei, L. Luo, P. Lallemand, D. d’Humi`eres, Consistent initial conditions for lattice Boltzmann simulations, Comput. & Fluids 35
(2006) 855–862.

1045

