Procedia Computer Science
Volume 29, 2014, Pages 343–353
ICCS 2014. 14th International Conference on Computational Science

Naïve Creature with Fear and Desire Learning to Cross
a Highway
Anna T. Lawniczak1*, Jason B. Ernst2 and Bruno N. Di Stefano 3
1,2

University of Guelph, Guelph, Ontario, Canada
Nuptek Systems Ltd., Toronto, Ontario, Canada
1
alawnicz@uoguelph.ca, 2jernst@uoguelph.ca,
3
bruno.distefano@nupteksystems.com
3

Abstract
We describe a model of simp le cognitive agent (naïve creature) learning to cross a highway. The naïve
creature may experience fear and/or desire when crossing a highway and is capable of evaluating
crossing strategies for adoption or rejection. Our simu lations show that the creatures’ population
success of crossing a single lane unidirectional traffic highway is influenced by the conditions of the
environment; i.e. the cars density, the presence or absence of the "erratic drivers", and by the levels of
the fear and/or desire each creature may experience. Creatures’ ability to move along the highway and
preservation of the knowledge base fro m one learning environment to another one imp roves creatures’
population success of crossing the highway.
Keywords: Autonomous Robots; Agents; Cognitive Agents; Learning; Knowledge Base; Cellular Automata;
Nagel-Schreckenberg M odel; Software Implementation

1 Introduction
Autonomous robots are intelligent machines exh ibiting a predefined behavior, such that, once they
are deployed, they can perform tasks by themselves (autonomously), without human intervention or, if
required and possible, with occasional remote hu man short intervention. To avoid costly mistakes,
engineers and designers model and simu late the robots that they want to build before they build them,
“as many times as necessary to feel confident of the final result ”, [1]. Th is is an iterat ive process
common to other branches of engineering and computer science. At the end of each step of the
iteration, the result of the simu lation is carefully examined; the theoretical model is modified to
account for the difference between expected results (i.e., the desired behavior of the autonomous
robot) and the actual results (i.e., the actual behavior of the modeled autonomous robot). Once the
overall desired behavior is achieved, the entire design is reviewed and optimized and the robot is built
and deployed.

*

Corresponding author

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2014
c The Authors. Published by Elsevier B.V.
doi:10.1016/j.procs.2014.05.031

343

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

Whenever possible, it is better to replace structurally and architecturally co mp lex mach ines with
simp ler ones. There are two reasons for this. First of all, while co mp lex machines such as Spirit and
Opportunity have allowed the achievement of remarkable results in un manned space exp loration, as
described by Bajracharya et al., [2], if one of these complex machines suffers an irreparable failure
during a mission, the entire mission fails, at great economic cost. A possible solution is to replace a
complex robot with a large nu mber of less expensive, simp ler robots, capable of performing the same
mission either individually or as a team. If a robot fails, the other robots can continue their mission.
The second reason for replacing structurally and architecturally comp lex machines with simp ler ones
is that modeling and simu lation of the simp ler robots is much easier and the results are more accurate.
Advances in the areas of autonomous agents, mu lti-agent systems, swarm intelligence, and sensor
networks, have lead to the simu lation o f large number of simp le robots acting autonomously and
exhibit ing a co mplex collective behavior co mparable or better than the behavior of a single co mplex
robot.
For the purpose of modeling and simu lation, structurally and architecturally simp le autonomous
robots can be identified with autonomous cognitive agent. A cognitive agent is an abstraction of an
autonomous entity capable of interacting with its environment and other agents, [3], [4], [5], [6], [7].
With the goal in mind of possible hardware imp lementations, there is an obvious interest in identifying
the simp lest possible architecture still capable of producing meaningful results for the desired task. In
this context we have researched two problems: the use of autonomous robots, modeled as autonomous
cognitive agents, to explo re an unknown territory; i.e. Agents Exploring an Unknown Territory, [8];
the possibility of defining autonomous cognitive agents capable of learning fro m and adapting to their
environment and providing results in a multi-agent setting; i.e. Simulated Naïve Creature Crossing a
Highway, [9], [10].
The goal of modeling and studying Naïve Creature Learning to Cross a Highway is to identify a
simp le examp le that could be used as an experimental plat form to identify a minimal cognitive a gent.
Looking at the work on Agents Exploring an Unknown Territory, [8], it is possible to see that the key
of the entire research is to define appropriate min imal data structures rich in semantics, so that by
performing a large number of simple operations it is possible to run a very large number of iterations
of the model, [11], [12], [13], [14], [15]. Ho wever, each iteration consists of very simp le operations.
We steered away on purpose from formal methods and from established algorith ms such as
reinforcement learning algorithms. We are pursuing the route of biomimicry, with emphasis on
minimal entit ies, both in terms of storage and in terms of logical primit ives (e.g., conjunction,
disjunction, and negation). We are interested in studying the behavior of an entity (a “ creature”)
unable to express concepts analytically and unable to use crisp values (i.e., p recise or even
approximate nu mbers). We believe that at various points of evolution in t ime various entities were/are
unable to deal with crisp values and were/are unable to express or compute complex mathematical
formulas. While in the future we will apply rigorous mathemat ical learning algorith ms, we are
researching how far the naïve methods can take us. In the presented work we develop cognitive agents,
which we call naïve creatures, able to operate in a mu lti-agent and mu lti-species agent reality and
capable of surviv ing by learning the dangers of the universe of the experiment and of developing a
simple strategy of survival, as a species.
This paper is structured as follo ws. Section 2 describes our model of simp le naïve creatures
learning to cross a highway and their experimental virtual universe. The creatures may experience fear
and/or desire to cross the highway and we investigate how these feelings may affect the creatures’
ability to learn to successfully cross the highway. Also, we investigate how the creatures’ mobility
along the highway affects their success of crossing. We present selected simu lation results for one lane
unidirectional t raffic h ighway in Section 3. Ho wever, our model and its software imp lementation are
more general and they allow considering roads that are mult i-lane unidirectional traffic highways or
mu lti-lane bidirectional traffic highways. The simulat ion results for these types of highways will be
reported elsewhere. Our conclusions and future work are outline in Section 4.

344

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

2 Naïve Creature Learning to Cross a Highway
A cognitive agent is an agent capable of performing cognitive acts; i.e. a sequence of the follo wing
activities: “Perceiving” informat ion in the environ ment and provided by other agents, “Reasoning”
about this information using existing knowledge, “Judging” the obtained information using existing
knowledge, “Responding” to other cognitive agents or to the external environment, as it may be
required, and “Learning”; i.e. changing (and, hopefully aug menting) the existing knowledge if the
newly acquired information allows it.
We present a model o f a simple cognitive agent (naïve creature) capable of evaluating if a strategy
has been applied successfully and capable of applying this strategy again with s mall changes to a
similar but new situation. Our model has been developed under several assumptions about the naïve
creatures, their abilities to learn and their environ ment. The presented research is an extension of our
previous works, [9], [10]. Here, we provide a detailed description of the model and consider the effects
of a creature fear and/or desire on creatures’ population success of crossing a unidirectional one lane
highway. Also, we investigate how the creatures’ mobility along the edge of the highway and the
preservation of knowledge base from one environ ment to another one affects creatures’ population
ability to learn and to cross successfully a unidirect ional one-lane highway. In our experimental virtual
universe we assume that: (1) the environment is a highway characterized by unidirect ional vehicular
traffic, without any intersection; (2) a cognitive agent is “an autonomous entity capable of interacting
with its environment and other agents”; (3) the cognitive agent under consideration is a naïve creature
with a strong instinct to forage for food and a strong instinct to survive ; (4) all creatures are born on
one side of the highway and the food is on the opposite side; (5) each creature must cross the highway
without being struck by the oncoming vehicles in order to reach food .
We assume that all creatures, after the first one, witnessed what happen to the creatures that
previously crossed the road. This allows a simplification o f the problem. There is only one knowledge
base that is built during the experiment that is available to all creatures . This allows using a single
agent learning perspective in a mult i-agent perspective. Alonso et al. write: “we cannot talk about
multi-agent learning if what an agent learns neither affects nor is affected by other neighbouring
agents.”, [17]. However, because all agents share the same knowledge base, because all agents
contribute to create this knowledge base, and because this knowledge base is the communication
channel between all agents, we can say that we have imp lemented a simp lified mu lti-agent learning
algorithm founded on a single-agent learning algorithm.
We assume that each creature is capable of: (1) matching simple patterns ; (2) evaluating distances
in an approximate way; (3) evaluating the velocity of moving vehicles in an approximate way ; (4)
assigning a discrete number (i.e., class identifiers) to an approximate class ; (5) understanding when
another creature has been successful in crossing the road; (6) repeating the action that has previously
resulted in success. We equip each creature with a simple mechanis m to evaluate the outcome of the
crossing of creatures that crossed previously. Each creature will try to imitate the successful crossings.
If a crossing has not been successful, then under similar circu mstances the creature will not cross and
wait for better conditions.

2.1 Naïve Creature Virtual Universe
We model the highway traffic by adopting the Nagel-Schreckenberg model, [16]. The model
consists of four steps that are applied simu ltaneously to all cars: acceleration, safety distance
adjustment, randomizat ion, and change of position. For our investigation the implementation of the
Nagel-Schreckenberg model requires to modify the Cellular Automata (CA) paradig m and to make the
evolution of the CA not only dependent on the state of the neighborhood but also on the current
velocity of each vehicle.

345

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

In our model the highway may have mu ltiple lanes, with cars travelling in both direct ions. As
customary in the traffic modeling literature, we model each lane of unidirectional traffic of a highway
as a large nu mber of adjacent cells, with each cell representing a segment of a highway of 7.5m in
length, [16]. Such representation has been chosen because it corresponds on average to the space
occupied by the typical car plus the distance to the preceding car in a situation of dense traffic jam of
cars of more or less homogeneous length (i.e., trucks and busses are excluded). The cars are generated
at each lane of the highway independently of each other with car creation probability p; i.e. each lane
has its own “starting cell” with which is associated a random nu mber generator. In the present
simu lator it is not possible for d ifferent lanes to have different car creat ion probabilit ies, but this can
be simp ly modified in the future. When cars are created, they are assigned a random speed between
zero and the maximu m allowed speed for cars that is set in the configuration file. Because of this
randomness, some cars start faster than others and so a buildup of cars may occur at the starting
points. The newly generated car enters the highway only if it does not collide with other cars on the
highway. To avoid potential collisions a queue is used to hold any backlogged cars until they are able
to actually move into the highway without colliding with another car. If a max nu mber of cars is
defined in the configuration file, once this nu mber is reached no new cars will be generated. However,
the simu lation will still continue to run to process the cars or creatures still left in the system, even
while no new cars are generated.
After a car enters a highway it speeds up until it reaches the allowed maximu m velocity or until it
encounters another car in front of itself. If another car is encountered, the faster car may attempt to
pass the slower car in the case of multi-lane highway. Depending on the simulat ion parameters, the car
may be more inclined to pass on the left and return to the rightmost lane as soon as possible.
In the case of multi-lane highway the cars’ speeds are updated one lane at a time. Within a lane,
each cell is examined. The direction of this operation depends on the direction of motion in the lane. It
is best to start at the end point and work backwards to avoid cars colliding with each other. So for a
lane with direction of mot ion left to right, we start at the right end and work left wards. If the current
cell contains a car, we accelerate the car. Th is just increases the current speed by one as defined in the
Nagel-Schrekenberg approach. If random deceleration has been enabled in the configuration file, it
means that a random decelerat ion can be applied to each car to simu late “erratic drivers”. In this case
one decreases randomly, with probability 0.5, each car speed by one. This is done to make the learning
task of the creatures more realistic. At this time, the value of this probability is fixed at 0.5; however,
it could be converted into a configuration parameter easily.
Creatures are generated in the similar way as cars. The crossing locations of the creatures are set in
the configuration file; i.e. mult iple crossing points are possible. At each crossing point, the creatures
are generated with the same creature creation probability and each crossing point has its own random
number generator that will generate creatures at the set probability value. So far, most of the reported
simu lation results [9], [10], and those presented here were obtained when one crossing point was
considered at the initialization step. As creatures are generated, they are placed into a queue at the
crossing point.
Creatures attempt to cross the highway given a limited set of in formation about the environment
around them. Creatures have a limited horizon of v ision and are able to perceive fuzzy levels of speed
and distance of cars within this horizon. The d istances and speeds that each creature is able to perceive
are also set in the configuration file. For examp le, in the described simulat ion results the creatures
perceive their distance to the cars as “close” if the d istance is between 0 to 2 cells away, as “med iu m”
if it is between 3 to 5 cells away and as “far” if it is 6 or 7 cells away. Any car beyond 7 cells is out of
the perceptive range of the creature. The speeds classificat ion is similar to the distance classification in
the presented simu lation results; i.e. cars moving with speeds between 0 to 2 cells per simu lation step
are considered as “slow” ones, cars moving with speeds between 3 to 5 cells per simu lation step are
considered as moving with “mediu m” speed, and cars moving with speeds more than 5 cells p er
simulation step are considered as “fast” moving cars.

346

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

In the event that a creature at some instance of time does not cross the highway because it has
become “afraid”, creatures will build up in the queue until the creature at the top of the queue decid es
to finally cross, or move to a d ifferent location. Depending on the configuration, it is also possible for
creatures to move randomly with probability 0.5 up stream o r down stream the traffic along the edge
of the highway in order to attempt to find a s afer crossing point to cross from. The number of
horizontal cells a creature may move in one time step is configurable and in the presented simulation
results it is 1. Additionally, the maximu m d istance a creature may deviate fro m its original crossing
point is also configurable and in the presented simu lation results it is 5. If the creature at the top of a
queue moves up stream or down stream the traffic, the creature that was behind moves to the top of the
queue, but cannot make a decision to move onto the highway, or up stream or down stream until the
next t ime step. Thus, the act of moving up a position in the queue takes one time step. When the
creatures are allowed to move up stream or down stream the traffic along the edge of the highway, it
may happen that every cell of the lane of the h ighway, along wh ich the creature wait to cross, may
become a crossing point and it may have a queue of waiting creatures. Ho wever, new creatures will be
generated only at the crossing points selected in the in itializat ion step. In the simu lator the function of
moving the creatures fro m a crossing point queue onto the highway loops through all of the creature
queues looking for any creature wait ing to cross. If there is such a creature, it must update its estimate
of the pro ximity and speed based on its fuzzy perception of d istance and speed. It must then use the
intelligence algorith m to determine if the conditions are favorable to move or not to move. If the
creature decides to move, then it tries to move fro m the queu e into the cell on the first lane. If the cell
is empty, the route for the creature is updated and the cell is set to “occupied” by the creature.
Otherwise the creature’s wait time is increased by one time step.

2.2 Knowledge Base and Learning Algorithm of Naïve Creature with
Fear and/or Desire
When a creature crosses the highway, information is recorded into the knowledge base of all the
creatures. In this way, creatures in the queues waiting to cross begin to learn the conditions under
which they may cross, or they should avoid crossing. We assume that the columns of the knowledge
base table store information about verbal descriptions of velocity (e.g., such as “fast” “mediu m” and
“slow”) and that the ro ws of the table store information about verbal descriptions of the d istance (e.g.,
such as “close distance”, “mediu m d istance”, and “far distance”). The knowledge base table is
initialized as “tabula rasa”; i.e. a “blank slate”, represented with “0” at each location. In other words,
the mental table at the beginning is populated with 0s in the assumption that all possible (distance,
velocity) co mbinations allow crossing. If a creature successfully crosses the road, the perceived
(distance, velocity) score in the knowledge base table is increased by one point. On the other hand, if
the result is negative, it is decreased by one point. When a new creature arrives at the front of the
queue, the creature consults the knowledge base table to determine if it is safe or not to cross. The
details of how exactly this is acco mplished depends on the intelligence algorith m implemented for the
decision. The learning algorith m of the naïve creature with fear and/or desire to cross the highway,
described below, is implemented for the presented simulation results in this paper.
In the “naïve” learning algorithm o f creatures without fear and/or desire, described in [9]and [10],
each creature would keep track of the knowledge base table in which the ro ws represented the distance
(e.g., “close”, “med iu m”, and “far”) and co lu mns represented velocity (e.g., “slow”, “mediu m”, and
“fast”) and when a creature successfully crossed the highway in a particu lar configuration of (dis tance,
velocity), the counter was increased for this (distance, velocity) pair. When a creature failed to cross
the highway under the same (distance, velocity) co mbination, the counter was decreased. This learning
algorith m is modified, as described below, in the case when a naïve creature may experience fear
and/or desire to cross the highway. Each creature may experience simu ltaneously fear and des ire with
different probabilities which may be but do not have to be complementary; i.e. sum up to 1.

347

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

In the case when a creature may experience fear and/or desire, in order to encourage creatures to
cross the highway at the start of the simulat ion, we impose for each (distance, velocity) pair a special
initial condition. Namely, creatures pay no attention to their knowledge base table or to their fear
and/or desire at the start of the simulat ion. For each (distance, velocity) co mb ination this lasts until t he
first successful crossing of a creature, or five consecutive unsuccessful crossing of the creatures,
whichever co mes first. After this initialization, for each (distance, velocity) pair the creatures co mbine
their “success ratio” of crossing the highway for each (distance, velocity) pair with the fear and/or
desire probabilities. For example, if a randomly generated creature has both fear and desire, then it
will base its decision of attempting to cross the highway on the fo llo wing formu la “ success ratio +
probability of desire – probability of fear”. If a randomly generated creature has only fear then it will
base its decision on the formu la “success ratio – probability of fear”. If a randomly generated creature
has only desire then it will base its decision on the formu la “success ratio + probability of desire”. If
for a given (distance, velocity) combination the value of the respective formula is less than zero, then
the creature will not attempt to cross the highway under this condition and it will wait for a
configuration for which a value of the formu la is non -negative. For the (distance, velocity)
combination for wh ich the value of the respective formula is negative the creature will again attempt
to cross the highway only after this value becomes non-negative.
For each (distance, velocity) pair the numerator in the success ratio is the value from the
knowledge base table corresponding to this (distance, velocity) pair; i.e. it is the number o f “successful
crossing” minus the number of “unsuccess ful crossings” up to this time. The denominator is the total
number of creatures who have crossed successfully the highway regardless of the (distance, velocity)
combination; i.e. it is the number describing the global success. This implies that as the number of
successful crossing increases overall, the creatures may avoid crossing the highway under some
(distance, velocity) configurations, even though under these conditions they were able to cross
successfully. Th is may happen if the nu mbers of successful crossing under these (distance, velocity)
configurations are growing more slowly than for other configurations. One way to solve this problem
would be to consider individual cross counters for each scenario, but at this time it is not implemented.
If fo r some (d istance, velocity) configuration at the start, all creatures are struck/killed then the
ratio becomes ͆ -5/0”. In this case, we set the success ratio to zero since “division by zero” is
undefined. It should be noticed that for some (d istance, velocity) configurations we may see ratios like
͆-4/1”; i.e. if 4 creatures were struck/killed and one creature successfully crossed the highway under
this configuration. Fo r this (distance, velocity) configuration even when the success ratio is co mbined
only with the desire probability of ͆1͇, the creature will not attempt to cross the highway for some
time; i.e. until the ͆success ratio + probability of desire͇ becomes non-negative for this (distance,
velocity) pair. Since the creatures may successfully cross the highway under some other (distance,
velocity) configurations, over time the ͆success ratio + probability of desire͇ can become nonnegative for the (distance, velocity) pair for wh ich “-4/1” was observed initially. For instance, if other
(distance, velocity) configurations yield 50 successes, the ratio will change to ͆-4/51͇. Th is will
allo w the desire to take over and the creatures will attempt to cross the highway under the discussed
configuration. At the same time, regardless of their fear and desire, creatures will continue to consider
suitable for crossing configurations that yield high numbers of successful crossings.

2.3 Main Simulation Loop of the Model
The main simu lation loop of the model of the naïve creature learn ing to cross the highway executes
after the program reads in the configuration and knowledge base files described above. The main loop
executes once for every time step in the simulat ion. At each t ime step there are several tasks that have
been broken down into functions to make the code modular and readable. These tasks are:
1. to generate cars at each lane of the highway using the car creation probability;
2. to generate creatures at each crossing point using the creature creation probability;

348

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

3.

to update the car speeds. This accelerates the cars according the Nagel-Schrekenberg model,
[16];
4. to move the creatures fro m the crossing point queues into the highway (if the decision
algorithm indicates this should occur);
5. to move the cars on the highway. Th is includes passing other cars. It also includes the logic to
check if any creature have been hit;
6. to advance the current time step.
After the simu lation has been completed, the results are written to output files using an output
function.

3 Selected Simulation Results
We present results of selected experiments showing learning performance of a population of naïve
creatures that may experience various levels of fear and/or desire when they learn to cross a single lane unidirectional traffic highway. We consider various levels of cars’ traffic density, measured by
the car creation probability, p (i.e., p=0.1, 0.3, 0.5, 0.7, and 0.9, respectively). Also, we consider the
cases when “erratic” drivers are not present on the highway, Figure 1, and next when they are present,
Figure 2, to study how traffic type may affect creatures’ ab ility to learn to cross successfully the
highway. We focus on the experiments showing how the creatures mobility along the edge of the
highway and the preservation of the knowledge base fro m one experi ment to the next one, indexed by
car creation probability p, in fluence the creatures ability to learn how to successfully cross a
unidirectional single-lane highway. By considering the preservation of the knowledge base fro m one
environment to a different one (indexed by car creation probability) we test if the prior acquired
knowledge in one environ ment can help creatures to learn in a new one. The results of the experiments
are shown in Figure 1 and Figure 2. These figures display the histograms of the numbers of successful
(green colour), killed (red colour) and queued (blue colour) creatures at the crossing point 45,
respectively, for the car creation probability p=0.1, 0.3, 0.5, 0.7, and 0.9, at the end of a simu lation
run. The crossing point 45 corresponds to cell nu mber 45 in the highway. Given that each cell
represents a segment of a highway of 7.5m in length the crossing point is 337.5m fro m the beginning
of the highway. In each of these figures the first column displays results for fear probability equal to
0.0 and desire probability equal to 1.0, the second column d isplays results for fear probability equal to
0.5 and desire probability equal to 0.5, the third column d isplays the results for fear probability equal
to 1.0 and desire probability equal to 0.0. In each of these figures the rows A and B display the results
in the case when the knowledge base fro m one experiment to the next one is not preserved. In each
simu lation experiment indexed by the car creat ion probability p the naïve creatures are born “tabula
rasa”, i.e. “blank slate”. They do not have built-in knowledge base of their environment at the start of
each simulat ion and they have to build it as the simulation progresses. In both figures the rows A
display the results when the creatures are not allowed to leave their crossing point at 45, wh ile the
rows B and C d isplay the results when creatures are allo wed to leave the crossing point, if they wait
for too long, to search for a better one. In both figures the rows C display the results when
additionally, the knowledge base from one experiment to the next one, indexed by the car creation
probability p, is preserved, except for the first one corresponding to the car creation probability p=0.1.
In the experiment with the car creation probability p =0.1 the creatures are born “tabula rasa” and they
have to build their knowledge base as the simulation progresses. At the end of the simulat ion this
knowledge base is passed to the population of creatures created at the begin ning of the next
experiment under consideration in this paper; i.e. to the creatures in the experiment with the car
creation probability p=0.3. Th is process is being repeated for the subsequent experiments; i.e. the ones
with probability p=0.5, 0.7, and 0.9. We conduct these experiments to see if the fact of acquiring a

349

Learning to Cross a Highway

Fear prob. = 0.0
Desire prob. = 1.0

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

Fear prob. = 0.5
Desire prob. = 0.5

Fear prob. = 1.0
Desire prob. = 0.0

A

B

C

Figure 1. Histograms showing numbers of successful (green colour), killed (red colour) and queued
(blue colour) creatures at the crossing point 45, when cars are not allowed to dri ve “erratically”, for car
creation probabilities p=0.1, 0.3, 0.5, 0.7, 0.9, respectively, at the end of the simulation. The values of fear
and desire probabilities are listed at the top of each column. Row A displays results when creatures are not
allowed to move along the highway. Row B displays results when creatures are allowed to move along the
highway. Row C displays results when creatures are allowed to move along the highway and additionally
the knowledge base from one experiment to the next one indexed by car creation probability p is preserved.
In the experiments of row A and B the knowledge base is not preserved.

350

Learning to Cross a Highway

Fear prob. = 0.0
Desire prob. = 1.0

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

Fear prob. = 0.5
Desire prob. = 0.5

Fear prob. = 1.0
Desire prob. = 0.0

A

B

C

Figure 2. Histograms showing numbers of successful (green colour), killed (red colour) and queued
(blue colour) creatures at the crossing point 45, when cars are allowed to dri ve “erratically”, for car
creation probabilities p=0.1, 0.3, 0.5, 0.7, 0.9, respectively, at the end of the simulation. The values of fear
and desire probabilities are listed at the top of each column. Row A displays results when creatures are not
allowed to move along the highway. Row B displays results when creatures are allowed to move along the
highway. Row C displays results when creatures are allowed to move along the highway and additionally
the knowledge base from one experiment to the next one indexed by car creation probability p is preserved.
In the experiments of row A and B the knowledge base is not preserved.

351

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

prior knowledge in one environ ment helps creatures to learn to be more successful in another
environment.
The presented simulation results show that, for the naïve creatures learning to cross the highway,
fear has negative effect on the creatures’ population success of crossing the highway. Even though
there are a s maller nu mber of creatures killed than when the fear probability is zero, many creatures
are still queuing to cross the highway at the end of the simulatio n. Th is conclusion is drawn fro m
comparing the results of the middle colu mn with those of the left column and fro m co mparing the
results of the right column with those of the left and middle colu mn fo r row A and B, respectively, in
both figures. If the creatures wait longer than a predefined time to cross the highway, they can
improve their population success by finding a new and safer location to cross from. Thus, creatures’
mobility imp roves creatures’ population success of crossing successfully. Th is can be seen by
comparing the results of the row A with those of the row B for each colu mn in both figures. By
comparing the results of the row B with those of the row C fo r each colu mn in both figures we observe
that the knowledge acquired in one environment (i.e., with lower car traffic density) can help creatures
to be more successful in a new environment (i.e., with higher car traffic density). In both figures this
is particularly pronounced in the case when creatures experience some degree of fear (i.e., the results
displayed in the middle and the right colu mn). By co mparing the results of the row A with those of the
row C for each colu mn in both figures we observe that the best strategy for the creatures to learn to
cross successfully the h ighway is the mobility along the edge of the highway co mb ined with the
creatures’ preservation of the knowledge base from one environ ment to another one (i.e., fro m one
experiment to the next one indexed by car creation probability).
By co mparing the results of Figure 1 with the corresponding ones of Figure 2, we observe that the
“erratic driving” may affect negatively creatures’ ability to cross successfully the highway.
We presented here simulation results for selected probabilit ies of fear and desire. However, similar
conclusions hold for other values of fear and desire probabilities. Namely, the fear effects negatively
creatures’ population cumulative success in crossing the highway. However, the creatures’ mobility
along the edge of the highway and knowledge base acquired in one learn ing environ ment applied to
another one (under consideration) improves creatures’ population success in crossing the highway.

4 Conclusions and Future Work
We presented a model of simu lated naïve creature learning to cross a highway by “imitating what
works and avoiding what does not work". We presented selected simulation results. Our simu lations
show that the creatures' success when crossing a single lane unid irectional highway is influenced by
the conditions of the environment; i.e. the cars density, the presence or absence of the “erratic drivers”,
and by the levels of the fear and/or desire the creatures may experience. Creatures’ ability to move
along the edge of the highway and preservation of the knowledge base fro m one learning environment
to another one improves creatures’ population success of crossing the highway. We reported some
results, while more extensive and detailed results involving multip le runs and their statistical analysis
will be reported elsewhere. Additionally, we plan to do sensitivity analysis of fear and desire by
keeping one factor fixed. A lso, we plan on experimenting with several more formal learning
algorithms.
ACKNOWLEDGEMENTS
A.T. L. & B.N. Di S. acknowledge hospitality of The Fields Institute for Research in Mathematical
Sciences where part of this research was conducted. A.T. L. acknowledges partial financial support
fro m the NSERC of Canada. B.N. Di S. acknowledges full financial sup port from Nuptek Systems
Ltd., J.E. acknowledges full financial support from a SHARCNET Research Fellowship provided by
A.T. L.

352

Learning to Cross a Highway

A.T. Lawniczak, J.B. Ernst and B.N, Di Stefano

References
[1] Booker, PJ. Written Contribution In: Conference on the Teaching of Engineering Design;
Booker, PJ. editor; London Institution of Engineering Designers, 1964.
[2] Bajracharya, M., Maimone, MW. Helmick, D. Autonomy for mars rovers: Past, present, and
future; Computer, 41(12), 2008, p 44-50.
[3] Ferber J. Multi-Agent Systems. An Introduction to Distributed Artificial Intelligen ce; Addison
Wesley, London 1999.
[4] Di Stefano, BN, Lawniczak, AT. Cognit ive agents: functionality & performance requirements
and a proposed software architecture. Proc. of Science and Technology for Humanity (TICSTH), 2009 IEEE Toronto International Conference, 2009, p. 509 – 514.
[5] Lawniczak, AT, Di Stefano, BN. Co mputational intelligence based architecture for cognitive
agents. Proc. of ICCS 2010, A msterdam, Holland, May 31 - June 2, 2010, Elsevier Procedia
Computer Science, Volume 1, Issue 1, May 2010, p. 2221-2229.
[6] Wooldridge, M. An Introduction to MultiAgent Systems, John Wiley & Sons, Ltd., Ch ichester,
West Sussex, UK, 2009.
[7] Uhrmacher, AM., Weyns, D. (2009). Multi-Agent Systems Simulation and Applications, CRC
Press, Taylor & Francis Group, Boca Raton, Fl., USA, 2009.
[8] Di. Stefano, BN, Lawniczak, AT. Autonomous Roving Object’s Coverage of its Universe.
Proc. 19th IEEE CCECE 2006-CCGEI 2006, Ottawa, Ontario, Canada (May/mai 2006)
[9] Di Stefano, BN, Lawn iczak, AT. Modeling a Simple Adaptive Cognitive Agent. Acta Physica
Polonica B Proc. Supplement, Vol. 5, No. 1, pp 21-29, 2012.
[10] Lawniczak, AT, Ernst, JB, Di Stefano, BN. Simulated Naïve Creature Crossing a Highway.
Proceedia Computer Science 18, 2611-2614, 2013.
[11] Halbach, M, Hoffmann, R. Optimal Behaviour of a Moving ͒ Creature in the Cellular
Automata Model. V. Malyshkin (Ed.): PaCT 2005, LNCS 3606, pp 129-140, 2005. ©
Springer-Verlag Berlin Heidelberg, 2005.
[12] Halbach, M, Heenes, W, Hoffmann, R, Tisje, J. Optimizing the Behavior of a Moving
Creature in Software and in Hardware. Sloot, PMA, Chopard, B, Hoekstra A G (Eds).
ACRI2004, LNCS 3305, pp 841-850, 2004.© Springer-Verlag Berlin Heidelberg, 2004.
[13] Hoffmann, R., Sambharaju, S. Optimal Algorithm for Checking the Environment by a Moving
Creature, Report RA-1-2003, Fachgebiet Rechnerarchitektur – Fachbereich Informatik –
Technische Uniiversität Darmstadt, 2003.
[14] Hochberger, C, Hoffmann, R, Waldschmidt, S. C DL++ for the Description of Moving Objects
in Cellular Automata. Malyshkin V. (Ed.): PaCT-99, LNCS 1662, pp. 428-435, 1999.©
Springer-Verlag Berlin Heidelberg, 1999.
[15] Hoffmann, R, Ulmann, B, Vö lkmann, KP, Waldschmidt, S. A Stream Processor Architecture
Based on the Configurable CEPRA-S. R.W.Hartenstein, H. Grünbacher (Eds.) FPL 2000,
LNCS 1896, pp. 822-825, 2000 © Springer-Verlag Berlin Heidelberg, 2000.
[16] Nagel K., Schreckenberg M. A cellular automaton model fo r freeway traffic, J. Physique I, 2,
2221 – 2229, 1992
[17] Alonso, E, d'Inverno, M, D. Kudenko, Luck M, Noble, J. Learning in multi-agent systems.
Knowledge Engineering Review, 16(3), 277-284, 2001.

353

