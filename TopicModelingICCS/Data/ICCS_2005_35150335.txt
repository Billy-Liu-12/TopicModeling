Remeshing Triangle Meshes with Boundaries
Yong Wu, Yuanjun He, and Hongming Cai
Department of Computer Science & Technology, Shanghai Jiao Tong University, China
wuyong916@sjtu.edu.cn

Abstract. This paper proposes a spherical parameterization based remeshing
approach to converting a given unstructured triangle mesh with boundaries into
one having subdivision connectivity. In order to preserve the boundaries of
original meshes, some special strategies are introduced into the remeshing
procedure.

1 Introduction
Triangle meshes with subdivision connectivity are important for many multiresolution
applications in graphics field. However, most meshes haven’t this feature. So there
are demands to transform an arbitrary mesh into one with subdivision connectivity.
This transformation is called remeshing, which can be understood as an approximation operator M → S that maps from a given irregular mesh M to a regular mesh S
with subdivision connectivity. The resulting mesh is called a remesh of the original
one. In this section we will give an overview of the most important work.
In [1], Eck et al. have presented a remeshing algorithm. The resulting parameterization is optimal for each base triangle but not smooth across the boundary between two
base triangles. Moreover, runtimes for this algorithm can be long due to a lot of harmonic map computations. Lee and co-workers [2] develop a different approach to
remeshing irregular meshes. Their method can be used to remesh meshes with
boundaries, but the authors don’t discuss how to preserve the boundaries.
In this paper, we present an approach for remeshing triangle meshes with boundaries. In order to preserve the boundaries, some special strategies are introduced into
the subdividing procedure.

2 Remeshing
2.1 Framework of Our Remeshing Method
As described in Fig.1, our remeshing method contains seven steps.
Step 1: Closing boundaries. Before mapping M onto the unit sphere, we triangulate
all boundary regions to generate a genus-0 triangle mesh MΨ .
Step 2: Spherical parameterization. After obtaining MΨ , we use Praun’s method
[3] on MΨ to generate a spherical parameterization mesh.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp. 335 – 338, 2005.
© Springer-Verlag Berlin Heidelberg 2005

336

Y. Wu, Y. He, and H. Cai

Step 3: Simplifying. We iteratively execute half-edge contraction operation on CΨ
to generate the initial base mesh C t0 .
Step 4: Optimizing. To reduce the distortion of the remesh, we insert some new interior vertices to C t0 so as to obtain an optimal base mesh C 0 with triangles
of similar size.
Step 5: Subdividing. The subdivision operation is iterated on C 0 until the error between SΨm and MΨ is below the user specified threshold ε . Here SΨm is the
remesh corresponding to the spherical subdivision mesh C m .
Step 6: Sampling. After obtaining C m , we find the corresponding spatial point in
original surface MΨ for each vertex of C m . The resulting mesh is SΨm .
Step 7: Reconstructing boundaries. After deleting all the vertices and triangles inside the boundary regions from SΨm , we obtain the remesh S m .

Fig.1. Frame of our remeshing method

2.2 Closing Boundaries
Since Praun’s method [3] is only adapted to genus-0 meshes, all the boundaries of M
have to be closed before parameterizing. In order to convenience further subdividing
operation, we close the boundaries by a new strategy instead of traditional triangulation method. Fig.2 illustrates the new strategy, which inserts one new vertex vB inside
the region decided by a boundary that consists of a set of vertices B = {B0 , B1 ,h , Bn = B0} .
Here vB is called one BIV (Boundary Interior Vertex) of M .
While inserting vB , we have to find an appropriate spatial position for vB to prevent triangles from overlapping each other. Since it is impossible to develop a universal method to decide vB for the boundaries with arbitrary shape, we simply specify vB to the average value of positions of all the boundary vertices. Then we scan
each boundary edge e(Bi , B j ) and construct a triangle f (vB , Bi , B j ) by anticlockwise
order. After all boundary edges have been visited, we examine if some triangles of
T (vB ) overlap each other. If yes, we relocate the spatial position of vB . Since the
boundary number of a mesh is generally small, the users can complete the relocation operation manually.

Remeshing Triangle Meshes with Boundaries

(a)

(b)

Fig. 2. Our triangulation strategy. (a)
Open boundary. (b) Close boundary

(b) C t0

(a) CΨ

337

(c) C 0

Fig. 3. Constructing process of the spherical base
mesh

2.3 Constructing the Spherical Base Mesh
After mapping the closed mesh MΨ onto the unit sphere by Praun’s method [3],
we obtain the spherical parameterization mesh CΨ with the same connectivity as
MΨ .
We start the construction of the base mesh C 0 by marking some special vertices of
CΨ , which will be kept undeleted during the following mesh simplification. Then
Gardland’s half-edge contraction method [4] is used iteratively on CΨ to generate the
initial base mesh C t0 with only marked vertices (Fig 3). Since Gardland’s method
selects the contraction edge by Quadric Error Metric, which doesn’t consider how to
optimize the triangle size, C t0 should be further optimized so as to generate a better
base mesh C 0 (Fig 3-(c)).
2.4 Subdividing
After obtaining C 0 , we iteratively execute subdividing operation on C 0 to generate
the spherical subdivision mesh C m . The subdivision level m should satisfy the inequality Η ( SΨm , MΨ ) ≤ ε , where ε is the user specified threshold and Η ( SΨm ,MΨ ) is the
Hausdorff distance between the remesh SΨm and the original mesh MΨ (cf. Fig.1).
Since SΨm is generated by using C m to sample CΨ and MΨ , we use a vertex relocation
operation to adapt the vertex distribution of C m to that of CΨ , which will improve the
visual appearance of SΨm .
2.5 Sampling the Original Surface
After obtaining the spherical subdivision mesh C m , we need to find the corresponding
spatial point in original surface M Ψ for each vertex of C m . This procedure is named as
sampling the original surface. And the resulting mesh is

SΨm .

In this paper, we use the

barycentric coordinates method to compute the corresponding spatial positions of
vertices in C m . After replacing each vertex of C m by the corresponding spatial point,
we obtain the spatial mesh SΨm . Then the remesh S m is generated by deleting all BIVs
and their 1-ring neighbor triangles from

SΨm .

338

Y. Wu, Y. He, and H. Cai

3 Experimental Results
We have implemented the remeshing approach and applied it to several triangle models with different number of boundaries. The original meshes are mapped onto the
unit sphere by Praun’s method. Fig 4 shows the remeshes of the Mask model (8,288
triangles, 7 boundaries) and the Bunny model (69,630 triangles, 2 boundaries).
M

S3

S4

S5

Fig. 4. The remeshing process of two different models

4 Conclusion
We have proposed an algorithm for remeshing triangle meshes with arbitrary number
of boundaries. The experimental results show that our method can not only make the
number of irregular vertices in the remesh as small as possible, but also preserve the
boundaries of the original mesh well.

References
1. M. Eck, T. DeRose, T. Duchamp, H. Hoppe, M. Lounsbery, and W. Stuetzle. Multiresolution Analysis of Arbitrary Meshes. In ACM Computer Graphics (SIGGRAPH ’95 Proceedings), pages 173–182, 1995.
2. A. Lee,W. Sweldens, P. Schr¨oder, L. Coswar, and D. Dobkin. Multirelosution Adaptive
Parameterization of Surfaces. In ACM Computer Graphics (SIGGRAPH ’98 Proceedings),
pages 95–104, 1998.
3. Praun, E., and Hoppe, H. Spherical Parameterization and Remeshing. In ACM Computer
Graphics (SIGGRAPH ’03 Proceedings), pages 340-349, 2003.
4. M. Garland and PS Heckbert. Surface Simplification Using Quadric Error Metrics. In ACM
Computer Graphics (SIGGRAPH ’97 Proceedings), pages 209-216, 1997.

