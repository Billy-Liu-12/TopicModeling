Computer Aided Symbolic Linear Algebra
Juan M. de Olaz´
abal
Universidad de Cantabria, Dpto. de Matem´
aticas 39005 Santander , SPAIN
jm.olazabal@unican.es
http://www.matesco.unican.es/%7Eolazabal

Abstract. The aim of this communication is to present a Symbolic Linear Algebra package, written in MAPLE V.5 and working also in the
release 7, with general but especially educational purpose. Its goal is to
run over MAPLE the diﬀerent Linear Algebra algorithms developped in
[OJ]. The implemented algorithms are also valids over ﬁnite characteristic and, for educational purpose, may be runned interactively. Three
topics are covered by the package: equivalent matrices (echelon matrices,
rank, LU decomposition, linear systems,. . . ), similar matrices (Eigenvalues and eigenvectors, Rational or Frobenius form, Irreducible form,
Jordan form,. . . ), and congruent matrices (Symmetric and Hermitian
matrices, Cholesky and QR decomposition, SVD, Gram-Schmidt over
arbitrary euclidean metrics, ortogonal matrices, quadric surfaces. . . )

1

Introduction

Maple is an excellent computer algebra system of general purpose, allowing user
to write procedures in order to build diﬀerent packages on his own. In this
way and for educational purpose, we have “packaged” several procedures with
additional possibilities to classic Maple jobs.
For instance, as it is well known, function rank(A) computes the rank of the
matrix A; so if you consider the matrix


t 11
A = 1 t 1
11t
> linalg[rank](A);
computes over the ﬁeld Q(t) and its output is 3.
But if you prefers to compute, as it is usual in the ﬁrst courses of Linear
Algebra, the diﬀerent values of the rank when t runs over rationals, you may
use the package CASLA, presented in this communication; it has a upper-cased
function RANK which allows diﬀerent parameters.
In this way, RANK(A,t) produces the output in ﬁgure 1
Moreover, from an educational point of view, if the user wants to learn the
computation of the rank of any matrix, function linalg[rank] does not help him.
By passing the argument <inter> to upper-case function RANK, we have
the interactive job in ﬁgure 2.
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2657, pp. 718–727, 2003.
c Springer-Verlag Berlin Heidelberg 2003

Computer Aided Symbolic Linear Algebra

719

> A:=matrix(3,3,[t,1,1,1,t,1,1,1,t]);
 t 1 1


A := 1 t 1
1 1 t 
> RANK(A,t);
[ [ t ≠ ( -2, 1 ), rank = 3 ], [ t = -2, rank = 2 ], [ t = 1, rank = 1 ] ]
>
Fig. 1. RANK of parametric matrices
> A:=matrix(3,3,[1,2,3,4,5,6,7,8,9]);
1 2 3


A := 4 5 6
7 8 9
> RANK(A,inter);
Input the characteristic of the field and after a semicolon: 0;
"You have choosen:"
0
Answer Y; to confirm and N; to change it: Y;
Input the amount of rows in the matrix, and after a semicolon: 3;
"O.K."
Input the amount of columns in the matrix, and after a semicolon: 3
;
"O.K."
Is a parametric matrix? Answer Y; or N; N;
"We echelon by rows the input matrix:"
"Obtaining:"
1 2 3


0 1 2


0 0 0
"More?"
Answer Y; to confirm and N; in other case: Y;
Input the amount of not zero rows in this matrix: 3;
"You are wrong"
You have another chance: 2;
"O.K."
"The rank is:"
2

Fig. 2. Interactive job of RANK

Most functions of this package allow the reserved parameter inter. When
functions are called with this parameter, MAPLE executes interactively the
procedures, asking the user for diﬀerent situations throughout the computation.
This feature has been succesfully used, from the educational point of view.
You may download the MAPLE code from
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/english/
casla.zip
Next you must name the downloaded ﬁle1 and read it over MAPLE. If you
compute with MAPLE 7, in order that function splits works it is necessary to
include previously the command
> with(polytools):
1

I suggest “casla” or “psalmo”

720

J.M. de Olaz´
abal

The following in this paper consider the diﬀerents sections of the package
CASLA in relation to diﬀerent topics in Linear Algebra: Equivalent, similar and
congruent matrices

2

Procedures for Equivalent Matrices

Recall that two matrices are equivalent iﬀ they have the same rank; so the basic
topic covered is the above mentioned computation of the rank of any matrix
over the symbolic ﬁeld F = K(x1 , . . . , xn ), where K = Q or the prime ﬁeld Zp .
Computation is made by elementary operations in the rows of the matrix, so
Echelon matrices are previously considered; it is straightforward to obtain the
LU decomposition. Finally, all is ready to consider linear systems over F .
2.1

Main Procedures

There are several procedures for this topic; for the sake of simplicity and shortness reasons we will expose only procedures to compute the LU decomposition
of any matrix and the procedure for linear systems AX = B.
For examples with function RANK, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/
english/equivalence/rank/rank.html
LU Decomposition
Function LU may be called by means of:
– LU(A)
– LU(A,p)
– LU(A,inter)

Returns the LU decomposition of any matrix

This command also works over any characteristic. Its interest may be seen
in ﬁgure 3.
For another examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/
english/equivalence/LU/LU.html
Linear Systems
CASLA solves linear systems by means of one of
–
–
–
–
–

GAUSS(A,B)
GAUSS(A,B,p)
GAUSS(A,B,unknown)
GAUSS(A,B,unknown,p)
GAUSS(A,B,inter)

in honour to the egregious mathematicien.

where A and B must be matrices with the same amount of rows.

Computer Aided Symbolic Linear Algebra

721

> A:=matrix(3,4,[0,2,3,4,5,6,7,8,5,-5,10,0]);
0

A := 5

5

2
6
-5

3
7
10

4

8

0

> LU(A);
0

"P=", 1
0

1

0
0

0, "L=", 

 1
1


1
0
0

0
1
-11
2

0
5


0
0

,
,
"U="


0
1



6
2
0

7
3
39
2

8

4

14


3
3
0

4

1
0

> LU(A,5);
1

"P=", 0
0

0
1
0

1

0
1

0, "L=", 
 2
1
0

0
1
0

0

0


0, "U=", 0

0
1

2
0
0

Fig. 3. LU decomposition in characteristic 5

Function GAUSS implements the procedure in [OJ, p. 58], by discussing
and solving the linear system AX = B.
Figure 4 shows a CASLA Maple job discussing and solving a parametric
system
> A:=matrix(3,3,[t,1,1,1,t,1,1,1,t]):B:=matrix(3,1,[1,t,t^2]):
> op(A),op(B);
 t 1 1  1 


1 t 1,  t 


1 1 t   t2 
> GAUSS(A,B,t);
t + 1 



 −



t + 2  







1





  t ≠ ( -2, 1 ), 
 , [ t = -2, { } ],  t = 1, 


 t + 2 


2




t + 2 t + 1







 t + 2 





1 -1 -1  
 

0,  1 0  
0  0 1  




Fig. 4. Parametric systems

For another examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/
english/equivalence/ Systems/systems.html

722

3

J.M. de Olaz´
abal

Procedures for Similar Matrices

Recall that two square matrices A and B are similar iﬀ ther exists an invertible
matrix P such that B = P AP −1 . So det(xI − A) is an invariant for similar
matrices, being its roots the known eigenvalues and for each t, ker(tI − A) is
the subspace of eigenvectors. Moreover, it is well known that for any square
matrix A there exists P, R, S regular matrices such that
– F = P −1 AP is a diagonal-block of companion matrices C(fi ), where fi are
the called invariant polynomials of the class. F is called the Rational or
Frobenius form.
– G = R−1 AR is a diagonal-block of companion matrices C(gi ), where the gi
are a power of irreducible polynomials. G is called the Irreducible form.
– If det(xI − A) splits, J = S −1 AS is the known Jordan form of the class.
Several procedures to compute P, R, S and F, G, J build this part of the
package. About its new features we remember of the introduction that they work
on any characteristic and, for educational purpose, they may be interactively
runned.
3.1

Main Procedures

Eigenvalues

It computes the eigenvalues of A

CASLA computes eigenvalues, over diﬀerent extensions of the basis ﬁeld, by
means of :
–
–
–
–

EIGENVALUES(A)
EIGENVALUES(A, K)
EIGENVALUES(A, cerrado)
EIGENVALUES(A, p, cerrado)

computation in the ﬁeld Q
computation in the ﬁeld K
in Spanish “closed”, computation in C
computation in the closure of Zp

For eﬃciency reasons, EIGENVALUES(A, cerrado) calls linalg[eigenvalues]
of MAPLE. In the other cases, function EIGENVALUES returns a list of pairs
[[t1 , m1 ], . . . , [t2 , m2 ]]
where the ti ’s are the diﬀerent eigenvalues and mi their multiplicity in the characteristic polynomial.
For examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/
english/similarity/autov/autov1.html

Computer Aided Symbolic Linear Algebra

723

Eigenvectors
It computes the eigenvectors of A
CASLA computes eigenvectors, over diﬀerent extensions of the basis ﬁeld, by
means of :
– EIGENVECTS(A)
– EIGENVECTS(t,A)
– EIGENVECTS(t,A,K)

(note the UPPERCASES)

where t is a candidate to eigenvalue and K any ﬁeld in Maple sintaxys.
Figure 5 shows a jop computing the eigenvalues and corresponding eigenvectors of the same matrix on diﬀerent ﬁelds
> A := matrix([[-91, 72, 0], [88, -84, 49], [0, 0, 0]]);
-91

A :=  88

 0

72
-84
0

0

49
0

> EIGENVALUES(A);
[ [ 0, 1 ] ]

0 is a simple eigenvalue of A over rationals
> EIGENVECTS(0,A);
 294

 109

4459
1308


1


> EIGENVALUES(A,3);
[ [ 0, 2 ], [ 2, 1 ] ]

0 is a double eigenvalue of A over Z/3Z
> EIGENVECTS(0,A,3)
[0

1

0]

But now, the geometric multiplicity of 0 is 1
Fig. 5. Eigenvalues and eigenvectors over diﬀerent characteristic

More examples visiting the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/
english/similarity/autov/autov1.html
Minimum Polynomial
It computes the minimumpolynomial of A
CASLA computes the minimum polynomial of a matrix by means of :
–
–
–
–
–

MINIMUM(A,unknown)
MINIMUM(A, q, unknown) perhaps diﬀerent from the MINIMUM mod p
MINIMUM(A, P, unknown)
MINIMUM(A, P, q, unknown)
MINIMUM(A, inter)

where q is a prime number, and P an unbounded symbol diﬀerent from inter,
to allocate the transformation matrix.

724

J.M. de Olaz´
abal

Function MINIMUM implements the procedure in [OJ, p. 99], computing
C(p) 0
a matrix M =
similar to the input matrix, where p is its minimum
0 G
polynomial. If A = (aij )
– MINIMUM(A,unknown) returns p(unknown) of A , computing in the extension ﬁeld Q(aij ).
– MINIMUM(A, P, unknown) returns the minimum polynomial and it allocates in P the regular matrix such that P −1 AP = M . It may be asked by
means evalm(P) or op(P). This is a new feature.
For examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin
/english/similarity/frobenius/frobenius.html
Rational or Frobenius Form
For A it computes P, F with P −1 AP = F the Rational form
There are several possibilities for input the command which compute Frobenius form:
–
–
–
–
–

FROBENIUS(A)
FROBENIUS(A,P)
FROBENIUS(A, p)
FROBENIUS(A, P, p)
FROBENIUS(A, inter)

where the parameters have the same meaning as above.
Function FROBENIUS implements the procedure in ([OJ], p. 100), computing the (only one) matrix F = diag[C(f1 ), . . . , C(fr )] similar to the input matrix,
where fr | · · · |f1 , and it allocates in P the transformation matrix.
For examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin
/english/similarity/frobenius/frobenius.html
Irreducible Form. This is all new to MAPLE
For A it computes R, G with R−1 AR = G the irreducible form
This function may be called by means of:
–
–
–
–
–

IRREDUCIBLE(A)
IRREDUCIBLE(A, K)
IRREDUCIBLE(A, P)
IRREDUCIBLE(A, P, K)
IRREDUCIBLE(A, inter)
where the parameters are as usually in CASLA.

Computer Aided Symbolic Linear Algebra

725

Function IRREDUCIBLE implements the procedures in [OJ, p. 116], computing, for a matrix A, a matrix G = diag[C(p1 ), . . . , C(pr )] similar to the input
matrix, where the C(pi ) are the companion matrices of the elementary divisors
of A. Moreover it allocates in P a regular matrix such that P −1 AP = G. If
A = (aij ).
– IRREDUCIBLE(A) and IRREDUCIBLE(A,P) compute in the extension
ﬁeld Q(aij ).
– If K= {α1 , . . . , αn } is a set of algebraic numbers, the procedures IRREDUCIBLE(A,K) and IRREDUCIBLE(A,P,K) compute in the extension ﬁeld
Q(aij , α1 , . . . , αn ).
– As usually in the package, IRREDUCIBLE(A, inter) runs the procedure
interactively, asking the user for diﬀerent situations throughout the computation, specially with educational purpose.
Next ﬁgure 6 shows a CASLA Maple job, computing the irreducible form of
a matrix over an appropriate extension of the rationals.

> A:=companion((x**2-2)*(x**2-3),x):
> G:=IRREDUCIBLE(A,Q,{sqrt(2)});
0 3

1 0
G := 
0 0
0 0

0
0
− 2
0

0 

0 
0 

2

Fig. 6. Irreducible form of a matrix

For another examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin
/english/Jordan/irreducible/irredu.html
Jordan Form.

For A it computes S, J with S −1 AS = J the Jordan form

Casla computes the Jordan form of a matrix A as Maple V; i.e., ﬁrst it
computes a cyclic2 form C of A and after the Jordan form J of C, (see [OJ, pp.
121, 123], and [OJ2]).
As usually in CASLA user may choose among diﬀerent parameters:
– JORDAN(A)
– JORDAN(A, p)
2

a similar diagonal-block of companion matrices

(note the UPPERCASES)

726

J.M. de Olaz´
abal

– JORDAN(A, P)
– JORDAN(A, P, p)
– JORDAN(A, inter)
where p is a prime number in order to work on ﬁnite characteristic and P an
unbounded symbol to allocate the matrix transformation.
Next ﬁgure 7 shows a small interactive job, asking the user for diﬀerent
situations throughout the computation, specially with educational purpose.
> JORDAN(A,inter);
Input the characteristic of the field and after a semicolon: 0;
"You have choosen:"
0
Answer Y; to confirm and N; to change it: Y;
"Do you want the change matrix?"
Input Y to confirm, N in another case and after a semicolon: N;
"You have not asked for a change matrix"
"We map the procedure CYCLIC and obtain:"
0 0 5


1 0 7


0 1 -1
"More?"
Answer Y; to confirm and N; in other case: Y;
"As you see there is only one block companion"
"We map to such blok the procedure"
jordan
"and we obtain:"
−1 − λ1 − λ2 0
0



0
λ2 0 


0
0 λ1
> op(lambda1),op(lambda2);
−5 − 7 _Z + _Z2 + _Z3, _Z2 + ( 1 + λ1 ) _Z + λ1 + λ12 − 7

Fig. 7. An interactive job for Jordan form

For another examples, please visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin
/english/Jordan/jordan/jordan.html

4

Procedures for Congruent Matrices

In order to avoid a tedious exposition, we are going to set the main procedures:
DIAGONAL: It computes a diagonal congruent to any symmetric matrix
over rationals or Zp . For hermitian matrices it computes over gaussian numbers.
CHOLESKY: Over Q, Zp or gaussian numbers returns the Cholesky decomposition of any symmetric (hermitian) matrix.
GRAM SCHMIDT: Computes a basis ortonormal. It allows a positive deﬁnite matrix as a metric.

Computer Aided Symbolic Linear Algebra

727

QR: Computes over reals or complex numbers the QR decomposition.
DVS: Computes over reals or complex numbers the DVS decomposition.
For a more complete explanation and examples, please, visit the url:
http://www.matesco.unican.es/%7Eolazabal/software/maples/algelin/
english/index.html

5

Educational Experience

At the end of the last academic course, I have surveyed my students about
diﬀerent aspects of learning Linear Algebra. Every student had to choose from
1 to 6 its conformity with the assertion. One of them was:
Using CASLA package has been very useful to learn Linear Algebra.
18% of students have choose the answer 4, 54% have choose 5 and 28% have
marked 6. So, I think the experience was very positive.

References
[D]

Danilevski, A.: On a numerical solution of Vekua’s equation . Mat. Sb. 2 (Russian) (1937) 169–171.
[GF] Gantmacher, F.R.: Theory of Matrices I. Chelsea Publishing Company. New
York (1977).
[MB] Monagan M.B. et al: MAPLE V. programming Guide. Springer. New York
(1996).
[ML] Mulders T.M.L., Levelt, A.H.M.: A package for the computation of several matrix normal forms. Share Library. MAPLE V (1993).
´
[OJ] Olaz´
abal, J.M.: Procedimientos simb´
olicos en Algebra
Lineal . Servicio de Publicaciones de la Universidad de Cantabria. Santander. SPAIN (1998).
[OJ2] Olaz´
abal, J.M.: A uniﬁed method to determine the canonical forms of any matrix. SIGSAM Bulletin, Issue 127, 33, number 1, (1999), 6–20.

