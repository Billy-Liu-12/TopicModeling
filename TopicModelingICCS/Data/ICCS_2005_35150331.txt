On the Impulse Method for Cloth Animation
Juntao Ye, Robert E. Webber, and Irene Gargantini
The University of Western Ontario, London, Ontario, N6A 5B7 Canada
{juntao, webber, irene}@csd.uwo.ca
Abstract. Computer animation of cloth is often plagued by springs
being overstretched. Our approach addresses this problem and presents
some preliminary results.

1

Introduction

Cloth animation faces two major challenges: realism and speed. The way these
two issues are addressed and resolved largely depends on the model adopted. So
far the most successful system for creating realistic folds and creases as cloth is
subject to various forces (gravity, for instance) has been the mass-spring model.
Here the fabric is represented as a 2D array of nodes, each with a given mass, and
each being related to its neighbors by mutual stretching, shearing and bending.
Overstretching, however, appears in all the work presented in the literature. It is
counteracted, but not completely eliminated, in diﬀerent ways, such as adjusting nodes position [Pro95], adjusting nodes velocity [VSC01], using momentum
transfer [VCM95], and applying impulses to the nodes [BFA02]. We present a
new method based on the linearization of a nonlinear formulation of impulse
calculation. Applying this new impulse approach to cloth animation solves satisfactorily both overstretching and overcompression. Although not shown here, it
turns out that it can be proven [Ye05] that the matrix of the linearized system
is symmetric, positive deﬁnite. This allows more eﬃcient solvers to be used —
thus decreasing the computational burden always present in cloth animation,
especially in the instances of collision detection and resolution.

2

The Mass-Spring Model

Our cloth model consists of three kinds of springs: stretching springs to model the
response of the cloth when pulled in the direction of its threads; shearing springs
to simulate the response of the cloth when pulled diagonally; bending springs to
model cloth resistance to out-of-plane forces (see Figure 1 and 2). The stretching
spring is linear, while both shearing and bending are angular. The bending spring
(not shown) is mounted on the common edge of every pair of adjacent triangles,
its movement taking place in a plane normal to both triangles. Note that our
bending model is borrowed from Bridson et al. [BMF03], and that the shear
force f h exerted on three nodes in Figure 1 is deﬁned as
fih = k h cos θ ui , for i = 1, 2, 3
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp. 331–334, 2005.
c Springer-Verlag Berlin Heidelberg 2005

332

J. Ye, R.E. Webber, and I. Gargantini
f1

x3

f1

θ
f3

x1

x1

θ

x3
x2

f2

f3
f2

x2

Fig. 2. An isotropic cloth
mesh, each right-angle arc
represents a shear spring

Fig. 1. The shear force model
with rest angle θ0 = π/2

where k h is the shear coeﬃcient and
u1 =

1 r1 × (r1 × r2 )
,
|r1 | |r1 × (r1 × r2 )|

u3 = −u1 − u2 ,

u2 =

1 (r1 × r2 ) × r2
,
|r2 | |(r1 × r2 ) × r2 |

r1 = x1 − x3 ,

r2 = x2 − x3 .

Thus one angular spring generates three forces (one for each node in the angle).
If k d is the damping coeﬃcient, the shear damping f d for these nodes is
fid = −k d

dθ
ui ,
dt

where

dθ
= u1 · v1 + u2 · v2 + u3 · v3 .
dt

Thus the shearing model is a 2D version of the bending model [BMF03].

3

Constructing the Impulse Equation System

Since Fδt = mδv, using impulses instead of forces oﬀers an advantage. Whenever
forces are used, in fact, we need to know their magnitude and the time during
which they are in eﬀect. Impulse, on the other hand, is directly related to velocity
change. The strain limits for the stretching and compression, Lc and Ls , are set
ahead of time by the user. A spring is neither allowed to stretch more than Ls ,
nor allowed to shrink less than Lc . Whenever L ∈ [Lc , Ls ], the spring tension is
0 xj −xi
a linear function of the spring length according to f = k(|xj − xi | − lij
) |xj −xi | ,
0
where lij is the rest length of the spring connecting xi and xj . When a spring
is, or potentially will be, out of the limits, impulses are generated and applied
to the two end-nodes so that the spring length after the next time step is within
the given range. This method works as if there were a massless string and a
massless rod passing through the spring (see Figure 3). This string with length
Ls is non-stretchable and this rod with length Lc is non-compressible.
A spring xij , connecting node xi and xj with i < j, generates impulses Iij
to xi and −Iij to xj , their directions being collinear with that of xij . This way,
the impulses are considered to be created exclusively by internal forces. When
there is no external force acting on a system, both the linear momentum and the

On the Impulse Method for Cloth Animation

333

ˆ ij , where
angular momentum of the system are conserved. We deﬁne Iij = sij x
ˆ ij = |xxij
x
and
s
is
the
magnitude
of
the
impulse
which
we
want
to
compute.
ij
ij |
Thus node xi receives velocity change
ˆ
s x
− ijmjij ,

ˆ ij
sij x
mi

and node xj receives velocity change

the positive sign being attributed to the node having smaller index. A
node receives impulses from all its incident springs. Consider now seven springs
connecting eight nodes, with the node indices satisfying f < g < h < i < j <
k < l < n (see Figure 4). The velocity changes for nodes xi and xj are
ˆ ij + sil x
ˆ il − sf i x
ˆ f i − shi x
ˆ hi )/mi ,
δvi = (sij x

(1)

ˆ ij − sgj x
ˆ gj + sjk x
ˆ jk + sjn x
ˆ jn )/mj .
δvj = (−sij x

(2)

Suppose at time t0 , the spring length is Lt0 = |xj − xi |. Once the ODE solver
computes the new velocities vi and vj , the nodes will move to new positions
˜ t0 +h =
accordingly. We can predict the spring length at time t0 + h to be L
t
+h
c
s
˜ 0 ∈ [L , L ], the spring will be overstretched or
|(xj + vj h) − (xi + vi h)|. If L
overcompressed and we use impulses to change the node velocities so that the
new spring length
Lt0 +h = |xj − xi + (vj + δvj )h − (vi + δvi )h|

(3)

satisﬁes Lt0 +h ∈ [Lc , Ls ]. We can choose the value for Lt0 +h according to the
˜ t0 +h :
value of L
⎧ s
˜ t0 +h > Ls ;
if L
⎨L
t0 +h
c
˜ t0 +h < Lc ;
L
= L
if L
⎩ ˜ t0 +h
L
otherwise .
Since each stretching spring corresponds to one equation like Equ. 3, we get a
system of nonlinear equations. Using Equ. 1 and 2, Equ. 3 becomes a function of
sij terms. If an appropriate method can solve this nonlinear system of equations,
then it is guaranteed that none of the springs will be over-stretched or overcompressed. Methods for solving such nonlinear systems tend to be very slow
so a linearization is in order. This approximation is not guaranteed to result in
every spring being within the limits after the impulse application, but in our
experiments, it always produced springs that are within the limits. Details of
the linearization can be found in [Ye05].

f

h

Iij

Iij

Fig. 3. Spring with string and rod

i

l

g

j

k

n

Fig. 4. Seven neighboring springs

334

J. Ye, R.E. Webber, and I. Gargantini

Fig. 5. Cloth suspended from two corners

4

Fig. 6. Cloth swinging down

Results and Conclusion

Figure 5 shows the cloth suspended from two corners held 75.2 cm apart. Excessive stretching in mass-spring cloth models would typically appear near the top
corners of the cloth. Notice that the cloth around these corners in this ﬁgure does
not appear overstretched. Figure 6 shows the cloth 1.6 seconds after releasing
the top-right corner, while it is still swinging. With the cloth suspended from
only one corner, even more force is being applied to the springs at the top-left
corner, but they are still not overstretched.

References
[BFA02]

Robert Bridson, Ronald Fedkiw, and John Anderson. Robust treatment of
collisions, contact and friction for cloth animation. ACM Transactions on
Graphics (SIGGRAPH ’02), 21(3):594–603, 2002.
[BMF03] Robert Bridson, S. Marino, and Ronald Fedkiw. Simulation of clothing with
folds and wrinkles. In Proceedings of SIGGRAPH/Eurographics Symposium
on Computer Animation (SCA 2003), pages 28–36, 2003.
[Pro95]
Xavier Provot. Deformation constraints in a mass-spring model to describe
rigid cloth behavior. In Graphics Interface ’95, pages 147–154, 1995.
[VCM95] Pascal Volino, Martin Courchesne, and Nadia Magnenat Thalmann. Versatile and eﬃcient techniques for simulating cloth and other deformable
objects. In Proceedings of SIGGRAPH ’95, pages 137–144, 1995.
[VSC01] T. Vassilev, B. Spanlang, and Y. Chrysanthou. Fast cloth animation on
walking avatars. In EUROGRAPHICS ’01, volume 20, pages 260–267, 2001.
[Ye05]
Juntao Ye. Computational Aspects of the Dynamics of Cloth. PhD thesis,
Department of Computer Science, The University of Western Ontario, in
progress 2005.

