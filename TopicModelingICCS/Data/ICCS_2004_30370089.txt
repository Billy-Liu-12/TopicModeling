Recent Advances in Semi-Lagrangian Modelling
of Flow through the Strait of Gibraltar
Mohammed Sea¨ıd1 , Mofdi El-Amrani2 , and Ahmed Machmoum3
1

Fachbereich Mathematik AG8, TU Darmstadt, 64289 Darmstadt, Germany
seaid@mathematik.tu-darmstadt.de
2
Dpto. Matem´
aticas, Univ. Rey Juan Carlos, 28933 Mostoles-Madrid, Spain
mofdi@escet.urjc.es
3
Facult´e des Sciences, LIMI, Universit´e Ibn Zohr, B.P. 28/S Agadir, Morocco

Abstract. Two aspects of work are addressed in this paper. The ﬁrst is
concerned with a mathematical model for mean ﬂow and hydraulics in
the strait of Gibraltar. The model is based on the two-dimensional shallow water equations. The second aspect of work is devoted to developing
a robust numerical method for solving such equations. We introduce a
fully implicit semi-Lagrangian method which maintains stability even if
large time steps are used in computations and reduces artiﬁcial numerical dispersion. Preliminary results obtained for a dam-break problem
show that our method is able to provide stable and accurate solutions.

1

Introduction

During the last decade, enormous amount of work on mathematical modelling
has been performed. The advent of more capable computation machines has
proved the way to the use of mathematical models in all aspects of engineering,
including ocean circulation, hydraulics and also ﬂoods. In this work, we try to
build a numerical method to approximate solutions for the partial diﬀerential
equations used to model the mean ﬂow of water in the strait of Gibraltar and,
consequently, determining their dynamics.
The strait of Gibraltar connects the Atlantic ocean with the Mediterranean
sea. The diﬀerences on density, salinity and temperature of the two water bodies lead to a ﬂow exchange through the strait. This ﬂow exchange consists of
two counter-ﬂowing layers: (i) an upper layer of Atlantic water ﬂowing into the
Mediterranean sea and (ii) a lower layer of Mediterranean water ﬂowing into the
Atlantic ocean. For comprehensive contributions on oceanography of the strait
of Gibraltar we refer the reader to the proceeding book for a seminar on studies
conducted in the strait of Gibraltar [2]. In this paper, we are interested on the
mean ﬂow exchange in the water free surface to which the shallow water equations can be a suitable model. Particularly, we are concerned with numerical
study of inﬂow contributed by the Atlantic ocean into the Mediterranean sea
which takes place on the free water surface.
The main diﬃculties in solving numerically the shallow water equations used
to model mean ﬂow in the strait of Gibraltar are the nonlinearity structure of
M. Bubak et al. (Eds.): ICCS 2004, LNCS 3037, pp. 89–96, 2004.
c Springer-Verlag Berlin Heidelberg 2004

90

M. Sea¨ıd, M. El-Amrani, and A. Machmoum

the equations and the coupling through a source function. Furthermore, it is
the presence of the convective term in the shallow water equations that makes
ﬁnding solutions to these equations diﬃcult, this convective term is a source of
serious computational problems and oscillations.
Eulerian methods use ﬁxed grids and incorporate some upstream weighting
in their formulations to stabilize the schemes. Among the class of Eulerian methods are the Petrov-Galerkin methods, the streamline diﬀusion methods and also
include many other methods such as the high resolution methods from computational ﬂuid dynamics, in particular, the Godunov methods and the essentially
non-oscillatory methods. All of these Eulerian methods are easy to formulate and
to implement. However, time truncation errors dominate their solutions that introduce numerical diﬀusion and are subject to the CFL stability conditions that
put a restriction on the size of the time steps taken in numerical simulations.
Semi-Lagrangian methods, on the other hand, make use of the transport
nature of the governing equations. They combine the ﬁxed Eulerian grids with
a particle tracking along the characteristic curves of the governing equations.
The Lagrangian treatment in these methods greatly reduces the time truncation errors in the Eulerian methods. In addition, these methods alleviate the
restrictions on the Courant number, thus allowing for large time steps in the
simulations and reduce artiﬁcial numerical dispersion. Obviously, any explicit
term in semi-Lagrangian formulation is computed at the characteristic feet by
interpolation that might introduce extra dissipation. In order to eliminate this
drawback, we propose a fully implicit semi-Lagrangian method. The discretized
system can be formulated as a compact ﬁxed point problem in ﬂow alone. As a
nonlinear solver we apply a Newton-Gmres algorithm.
The purpose of this work is to develop a robust semi-Lagrangian method
to approximate solutions to the equations governing mean ﬂow in the strait of
Gibraltar. In the present paper, we discuss only the formulation of a fully implicit
semi-Lagrangian method for mean ﬂow model and results are given for a dambreak problem. As part of an ongoing project, this method will be implemented
for the full model and obtained results will be compared to measurements done
in the strait of Gibraltar.

2

Mathematical Model

In this section, we brieﬂy set the governing equations for mean ﬂow in the strait of
Gibraltar. For more details on the modelling and related physical studies we refer
to [2] and further references are cited therein. The derivation of the equations is
based on Navier-Stokes problem with the assumption that the dynamics of mean
ﬂow on continental shelves is such that the vertical advection of momentum can
be assumed to be small and the pressure to be approximately hydrostatic. If
these hypotheses are applied to the Navier-Stokes equations, we obtain the wellknown shallow water equations in two space dimensions given by the continuity
and momentum equations:
∂t η + ∂x (η + h)U + ∂y (η + h)V = 0,

(1)

Recent Advances in Semi-Lagrangian Modelling of Flow

r
U
η+h
r
V
∂t V + U ∂x V + V ∂y V + f U = −g∂y η −
η+h
∂t U + U ∂x U + V ∂y U − f V = −g∂x η −

91

U 2 + V 2 + KH ∇2 U,

(2)

U 2 + V 2 + KH ∇2 U,

(3)

where η is the free surface height, U = (U, V )T is the vertically integrated
velocity, h is the water depth measured from the mean sea level, g is the gravity
acceleration, KH is the horizontal eddy viscosity, r denotes the drag coeﬃcient
on the bottom, f is the Coriolis parameter deﬁned by f = 2ω sin φ, with ω is the
angular velocity of the earth and φ is the geographic latitude, and ∇2 denotes
the two-dimensional Laplace operator.
Equations (1)-(3) are deﬁned in a spatial domain bounded by TangierBarbate line at the west and Sebta-Gibraltar at the east as shown in Fig. 1.
This domain contains the Camarinal Sill (interface that separates the Mediterranean sea and the Atlantic ocean) where exchange of the water body takes
place.

Computational domain

Strait of Gibraltar

ο
36 15‘

Barbate

•

Barbate

Spain

Gibraltar

•
Gibraltar

ο

36 05‘

Tarifa

•Tarifa
ο

35 55‘

Sebta

•
Sebta

Tangier

•

ο

35 45‘
ο
6 05‘

ο

5 55‘

Morocco
ο

5 45‘

ο

5 35‘

ο

5 25‘

ο

Tangier

5 15‘

Fig. 1. Schematic diagrams for the strait of Gibraltar and the computational domain

In order to obtain a well-posed problem, initial data has to be provided and
boundary conditions have to be imposed. A detailed mathematical study on
these issues can be found in [2]. The overall problem is complicated one and
it includes certain physical processes which are not yet fully understood. Also,
the numerical methods for simulating solutions of the problem which are of key
importance have not yet been well established. Theoretical considerations can
provide some ideas, concerning stability, convergence rates, restriction on time
stepsizes, or qualitative behavior of the solution, but a complete quantitative
analysis is not possible today. Therefore, the only way to make a judgment
is to perform numerical tests, at least for some problems which seem to be
representative. However, looking into the literature, it seems that there have not
been many studies of this type which can give satisfactory answers.

M. Sea¨ıd, M. El-Amrani, and A. Machmoum
30 m

92

95 m

200 m

10 m

95 m
400 m

Fig. 2. Geometry of the rectangular strait in the dam-break problem

3

Numerical Method

The semi-Lagrangian method we consider in this paper consists on two fractional
steps. The ﬁrst step is the Lagrangian interpretation of the advective part in
equations (1)-(3) by the modiﬁed method of characteristics, while the second
step uses the Eulerian coordinates for discretization of the remaining part. In
vector-valued form, the equations (1)-(3) can be rewritten as
Dt η + U · ∇h + γ∇ · U = 0,
(4)
Dt U + g∇ · η − KH ∇2 U = S(γ, U),
where the total depth γ = η + h, the source term is deﬁned by
S(γ, U) =

fV −

r
U
γ

U 2 + V 2 , −f U −

T

r
V
γ

U2 + V 2

,

(5)

the gradient vector ∇ = (∂x , ∂y )T , and Dt w = ∂t w + U · ∇w is the material
derivative of the function w in direction of the ﬂow U. The fundamental idea
of semi-Lagrangian methods is to impose a regular grid at the new time level,
and to backtrack the ﬂow trajectories to the previous time level. At the old time
level, the quantities that are needed are evaluated by interpolation from their
known values on a regular grid.
Let the time interval be divided into subintervals [tn , tn+1 ] of length ∆t such
that tn = n∆t. Following [3], the characteristics curves of the equations (4) are
the solution of initial value problem
dX(τ ; tn+1 , x)
= U (τ, X(τ ; tn+1 , x)) ,
dτ

τ ∈ [tn , tn+1 ],
(6)

X(tn+1 ; tn+1 , x) = x.
T

Note that X(τ ; tn+1 , x) = (X(τ ; tn+1 , x), Y (τ ; tn+1 , x)) is the departure point
at time τ of a ﬂuid particle that will arrive at x = (x, y)T at time τ = tn+1 . The
semi-Lagrangian methods do not follow the ﬂow particles forward in time, as
the Lagrangian schemes do, instead their trace backwards the position at time
tn of particles that will reach the points of a ﬁxed mesh at time tn+1 . By so

Recent Advances in Semi-Lagrangian Modelling of Flow

93

doing, the semi-Lagrangian methods avoid the grid distortion diﬃculties that
the conventional Lagrangian schemes have. In this paper, to solve the ordinary
diﬀerential equations (6), we used a method ﬁrst proposed in the context of
semi-Lagrangian schemes to integrate the weather prediction equations [5].
Once the characteristics feet X(tn ; tn+1 , x) are known, the material derivatives in (4) are approximated by
Dt U =

ˆn
Un+1 − U
,
∆t

Dt η =

η n+1 − ηˆn
,
∆t

(7)

ˆ n = U (tn , X(tn ; tn+1 , x)) and
where Un+1 = U(tn+1 , x), η n+1 = η(tn+1 , x); U
n
ηˆ = η (tn , X(tn ; tn+1 , x)). In general, the departure points X(tn ; tn+1 , x) do not
coincide with the spatial position of a grid point. A requirement is then that the
scheme to compute X(tn ; tn+1 , x) be provided with a search-locate algorithm to
ﬁnd the host element where such point is located. A general, eﬃcient and easy
to implement scheme to perform this step in arbitrary grids is presented in [1].
Assuming that a suitable approximation is made for X(tn ; tn+1 , x), then
ˆ n and ηˆn in (7) must be obtained by interpolation from known
the functions U
values at the grid points. The interpolation procedure we used in this paper is
the bicubic spline most commonly used in practice.
Using the assumption that the total water depth γ is approximately constant
within the time interval [tn , tn+1 ], and an implicit time integration method, the
semi-discretization of (4) is
η n+1 − ηˆn
+ Un+1 · ∇h + γ n ∇ · Un+1 = 0,
∆t
ˆn
Un+1 − U
+ g∇ · η n+1 − KH ∇2 Un+1 = S(γ n , Un+1 ).
∆t

(8)
(9)

Note that the bottom, h, is assumed to be time-independent (so there is no
time-level superscript associated with it). A simple way to solve the equations
(8)-(9), is to use the ﬁrst equation (8) to eliminate the divergence term ∇ · η n+1
from the second equation (9). These procedure yields to a ﬁxed point problem
U = H(U),

(10)

in U only. In (10), we have dropped the n + 1 superscript for ease of notation.
Newton’s method applied to (10) results in the following iteration
U(k+1) = U(k) − R U(k)

−1

R U(k) ,

(11)

where R(U) = U−H(U) is the nonlinear residual and R is the system Jacobian
approximated by a forward diﬀerence quotient of the form
R U(k) w ≈

R U(k) + δw − R U(k)
.
δ

(12)

If Gmres method is used to compute the Newton direction then, at each time
step, the following algorithm (Newton-Gmres) has to be called in the time loop:

94

M. Sea¨ıd, M. El-Amrani, and A. Machmoum
Algorithm 1: Ngmres(H, U(0) , ε)
Given H, tolerance ε and initial guess U(0) , the Newton-Gmres algorithm for
solving (10) uses the following steps: (we denote by Gmres(A,b,z(0) ,ε) the
result of Gmres algorithm applied to linear system Az = b with initial guess
z(0) and tolerance ε)
do k = 0, 1, . . .
Compute the residual R(k) = U(k) − H(U(k) )
Solve using Gmres, d(k) = Gmres R (U(k) ), −R(U(k) ), d(0) , ε(k)
Update the solution U(k+1) = U(k) + ξd(k)
If U(k+1) L2 ≤ ε stop
end do

The free surface height η n+1 can be updated by back-substituting Un+1 in
the ﬁrst equation (8) as
η n+1 = ηˆn − ∆tUn+1 · ∇h − γ n ∆t∇ · Un+1 .

(13)

To discretize the equations (4) in space, we use the ﬁnite diﬀerence discretization. Thus, the spatial domain is divided into cells with nonuniform sizes
and centred at grid points (xi = i(∆x)i , yj = j(∆y)j ). We use the notation
n
= w(tn , xi , yj ) and we deﬁne the following centred diﬀerence operators
wi,j
Dx wi,j =

wi+1,j − wi−1,j
,
2(∆x)i

Dx2 wi,j =

wi+1,j − 2wi,j + wi−1,j
(∆x)i

2

,

similarly for Dy w and Dy2 w. Using the semi-discrete formulation (8)-(9), the
fully-discrete approximation for the equations (4) can be directly written as
n+1
n
ηi,j
− ηˆi,j
n+1
n+1
n+1
n+1
+ Ui,j
= 0,
Dx hi,j + Vi,j
Dy hi,j + γi,j Dx Ui,j
+ Dy Vi,j
∆t
n+1
ˆn
−U
Ui,j
i,j
n+1
n
˜ x2 U n+1 − S1 (γi,j
+ gDx ηi,j
− KH D
, Un+1
i,j
i,j ) = 0, (14)
∆t
n+1
n
− Vˆi,j
Vi,j
n+1
n
˜ x2 V n+1 − S2 (γi,j
− KH D
, Un+1
+ gDy ηi,j
i,j
i,j ) = 0,
∆t
˜ 2 = D2 + D2 . The
where S1 , S2 are the entries of the source term S in (5) and D
x
x
y
implementation of the semi-Lagrangian algorithm to solve (4) is carried out in
the following steps. Given {η n , Un }, we compute {η n+1 , Un+1 } via:

Algorithm 2: Semi-Lagrangian algorithm
Step 1. Compute the departure point X(tn+1 ; tn , x) in (6) and identify the element of the grid where such a point is located
ˆ n employing the bicubic spline inStep 2. Evaluate the approximations ηˆn and U
n
n
terpolation from the values of η and U , respectively
Step 3. Formulate the ﬁxed point problem (10) for the ﬂow Un+1 only
Step 4. Call the Newton-Gmres algorithm Ngmres(H, Un , ε) to obtain Un+1
Step 5. Update the free surface height η n+1 using (13)

It is worth saying that, the time integration method used in (8)-(9) is ﬁrst
order accurate. A second order time discretization can be formulated in similar
way by considering the Crank-Nicolson method.

Recent Advances in Semi-Lagrangian Modelling of Flow

Fig. 3. Water surface elevation (left column) and velocity ﬁeld (right column)

95

96

4

M. Sea¨ıd, M. El-Amrani, and A. Machmoum

Test Problem

To validate our algorithm we consider a prototype test of dam-break problem
formulated by the equations (4). We consider a 200 m long and 400 m wide
rectangular strait with two diﬀerent constant levels of water separated by a
dam. At t = 0 s part of the dam breaks instantaneously. The dam is 10 m thick
and the breach is assumed to be 75 m wide. Fig. 2 shows a sketch of the strait
and dimensions of the dam. The initial water level is 10 m at upstream and
5 m at downstream and water is initially at rest. For the other parameters in
equations (4) we use similar values as those provided for mean ﬂow in the strait
of Gibraltar [2]. Thus, the gravity acceleration g = 9.81 m/s2 , the friction of
the bottom r = 3 × 10−3 , the Coriolis parameter f = 8.55 × 10−5 s−1 , and the
viscosity coeﬃcient KH = 4 × 10−4 kg/ms.
In the left column of Fig. 3 we plot the water surface elevation, while the
right column contains the corresponding velocity vectors. All computations are
made on an uniform Cartesian grid with ∆x = ∆y = 40 m and ﬁxed time step
∆t = 0.5 s. We used a tolerance ε = 10−5 to stop iterations in Newton algorithm
(Algorithm 1), and we have observed that the number of iterations required to
reach this tolerance was between 8 and 13 during the time integration process.
The duration of simulation is 32 s.
The semi-Lagrangian scheme captured correctly the discontinuity and the
shock without need for very ﬁne mesh. The monotonicity of the scheme is preserved and no nonphysical oscillations or extra numerical diﬀusion have been
detected during the computations. Note that the performance of our semiLagrangian scheme is very attractive since the computed solution remains, stable, monotone and highly accurate even on coarse grids without requiring special
front tracking techniques. We can see that the small complex structures of the
water ﬂow being captured by our semi-Lagrangian scheme.

References
1. Allievi, A., Bermejo, R.: A Generalized Particle Search-Locate Algorithm for Arbitrary Grids. J. Comp. Physics, 132 (1997) 157–166
2. Almaz´
an, J.I., Bryden, H., Kinder, T., Parrilla, G. (eds.): Seminario Sobre la
Oceanograf´ıa F´ısica del Estrecho de Gibraltar. SECEG, Madrid (1988)
3. Robert, A.: A stable Numerical Integration Scheme for the Primitive Meteorological
Equations. Atmos. Ocean 19 (1981) 35–46
4. Sea¨ıd, M.: Semi-Lagrangian Integration Schemes for Viscous Incompressible Flows.
J. Comp. Methods in App. Math. 4 (2002) 392–409
5. Temperton, C., Staniforth, A.: An Eﬃcient Two-Time-Level Semi-Lagrangian SemiImplicit Integration Scheme. Quart. J. Roy. Meteor. Soc. 113 (1987) 1025–1039

