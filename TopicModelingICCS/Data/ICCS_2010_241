∗

Procedia Computer
Science

Procedia Computer Science 1 (2012) 781–790
Procedia Computer Science 00 (2010) 1–10

www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2010

Application of the numerical density-enthalpy method to the
multi-phase ﬂow through a porous medium
Ibrahim∗, 1 , F.J.Vermolen∗,2 , C.Vuik∗,3
Faculty EEMCS, Delft Institute of Applied Mathematics, Delft University of Technology, Mekelweg 4, 2628 CD, Delft, The Netherlands

Abstract
In this paper we apply a new method to solve multi-phase ﬂuid ﬂow problem for 1D and 2D ﬂuid systems.
This method is developed at TNO and presented in [1] for spatially homogeneous systems. We call this method the
numerical density-enthalpy method (or ρ-h method) because density-enthalpy phase diagrams (or ρ-h diagrams) play
an important role in it. Finite elements are used for spatial discretization along with the streamline upwind PetrovGalerkin method. In contrast to conventional methods, the ρ-h method eliminates the requirement of separate sets
of equations for various phases and necessitates fewer parametric assumptions. Therefore, it is aimed at a simple
formulation and at an increase of eﬃciency.
c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
⃝

Keywords: multi-phase, porous medium, ﬁnite elements, density-enthalpy phase diagram
1. Introduction
Physical models for multi-phase ﬂuid systems in porous media have applications in industrial processes such as
drying, steam production, and freezing. These models are meant to simulate the processes to enhance the quality
of products. Food items, in general, can be considered as a porous medium (bread, potato etc). In the context of
the ρ-h method, Arendsen has presented many applications in his work [1, 2, 3] (a boiler system, potato drying etc).
Since several types of phases are present, the interface between adjacent phases has to be tracked. The so called
moving interface problems or free boundary problems, are typically solved by methods such as the level-set, movinggrid, and the phase-ﬁeld model [6, 7, 8]. Level-set and moving-grid models use a sharp interface between adjacent
phases. In contrast, the phase-ﬁeld model allows a diﬀuse region where, for example, the mass density between the
two coexisting phases varies smoothly from one phase to the other [7]. In this paper, we present and use a diﬀerent
method, namely the numerical density-enthalpy method. In [1, 2] a comparison is made of the ρ-h method and standard
approaches for modeling thermal processes with phase change. It is a common practice to solve the energy or mass
The author is indebted to HEC, Pakistan and NUFFIC, The Netherlands for their ﬁnancial and logistic support.
address: {d.ibrahim, f.j.vermolen, c.vuik}@tudelft.nl
1 corresponding author, Faculty EEMCS, Delft Institute of Applied Mathematics, Delft University of Technology, Mekelweg 4, 2628 CD, Delft,
The Netherlands
2 Faculty EEMCS, Delft Institute of Applied Mathematics, Delft University of Technology, Mekelweg 4, 2628 CD, Delft, The Netherlands
3 Faculty EEMCS, Delft Institute of Applied Mathematics, Delft University of Technology, Mekelweg 4, 2628 CD, Delft, The Netherlands
∗ email

c 2012 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
1877-0509 ⃝
doi:10.1016/j.procs.2010.04.084

782

Ibrahim
et al. / Procedia Computer Science 1 (2012) 781–790
Ibrahim / Procedia Computer Science 00 (2010) 1–10

2

balance equations alone or to assume constant boiling pressure and temperature. Arendsen also explained that only
taking the energy or mass balance is valid for a limited range and that their physical basis is incomplete. Furthermore,
the assumption of constant ambient pressure and a ﬁxed phase-change temperature proﬁle cannot always be justiﬁed
[1, 4]. Another drawback of the aforementioned approaches is that they keep track of the phase change boundary,
which might take place only for a small time interval as compared to the whole process. Then these methods switch
to another set of equations with a change in phase, which might cause numerical instabilities.
1.1. Density-enthalpy phase diagrams
In this paper we use the mass and energy balances together and use density ρ and enthalpy h as our state variables.
These coupled partial diﬀerential equations are solved by using ﬁnite elements, with a Streamline Upwind PetrovGalerkin approach. A set of ρ-h diagrams is then used to determine temperature T , pressure P, and mass fractions
[1]. In Figure 1, three such diagrams are shown for Propane (C3 H8 ), where XG is the gas mass fraction. Each curve is
(b) 10log(P)

(a) T

(c) XG
6.6

360
10

6

300
280

1

5.6

260
0

1

2

h

3

0

4

2

10

0.6
L+G
0.4

5.8
1

10

10

0.8

6.2

ρ

ρ

320

2

ρ

2

10

L

6.4

340

5

x 10

1

2

h

3

0.2

1

10

G

5.4

4
5

x 10

0

1

2

h

3

4
5

x 10

Figure 1: ρ-h diagrams for C3 H8 , (a) Plots of isotherms, (b) isobars, and (c) constant gas mass fraction curves.

obtained through constrained minimization of the total Gibbs free energy as a function of T , P, and mass distribution
at given ρ and h [1]. For a given substance (e.g., C3 H8 ) we have a unique set of ρ-h diagrams. These diagrams work
in a similar way as lookup tables (in the solution algorithm), where ρ and h act as row and column, respectively,
whereas the curve color serves as the the table entry for the corresponding variable (i.e., P, T , or XG ). In Figure 1(c),
liquid and gas phases are labeled as ’L’ and ’G’ respectively. The transitional zone is marked with ’L + G’ which
is noticeably larger than the ’L’ and ’G’ zones. Other sets of phase diagrams are also available, which provide, for
example, a transformation from (T , XG ) to (ρ, h, and P). In Section 4, numerical results are given as obtained by
solving the mass and energy balances for ρ and h and computing P, T , and XG from ρ-h diagrams. The obtained
results are explained qualitatively on the basis of physical laws. This method does not require a constant ambient
pressure or a constant phase change temperature. In our view, the ρ-h method is potentially a better approach to model
multi-phase ﬂuid systems. Furthermore, it is a multiphysics system in the sense that thermodynamics is considered
alongside convection and diﬀusion aspects in a porous medium. The multiscale aspect is mentioned in Section 5.
2. Problem Deﬁnition
We consider the ﬂow of propane (C3 H8 ) in a unit square (porous medium) where the interior is represented by
Ω and the boundary is designated by Γ. The mathematical model for the two-dimensional system is given by the
following partial diﬀerential equations.
∂ρ
+ ∇ · (ρv) = 0,
∂t
∂(ρh)
+ ∇ · (ρhv) = ∇ · (λ∇T ) + q,
∂t
K
v = − ∇P,
μ

x ∈ Ω, t > 0, (mass conservation),

(1)

x ∈ Ω, t > 0, (energy conservation),

(2)

(Darcy s Law).

(3)

783
3

IbrahimIbrahim
et al. / /Procedia
Computer Science 1 (2012) 781–790
Procedia Computer Science 00 (2010) 1–10

where the permeability K, dynamic viscosity μ, and heat diﬀusivity λ are assumed to be constants and q is a heat
source. We neglected gravitational eﬀects. Density (ρ) and enthalpy (h) are taken as state variables. Other variables
such as temperature (T ), pressure (P), and gas mass fraction (XG ) are computed by using ρ-h diagrams. Initial
conditions are given by
x ∈ Ω,

ρ(x, 0) = ρ0
h(x, 0) = h0

(4)

x ∈ Ω.

(5)

From a practical point of view, it is more convenient to have initial conditions in terms of T and XG . Initial conditions
for other variables (ρ, h, and P) can be computed from them through phase diagrams. Furthermore, we use Robin
boundary conditions. The external mass transfer is proportional to the diﬀerence in the internal density (ρ) and the
ambient density (ρa ),
ρv · n = km (ρ − ρa ), t > 0, x ∈ Γ,

(6)

where km is a mass transfer coeﬃcient and n is an outward unit vector normal to Γ. Equation (6) is the boundary
condition for the mass equation. The energy transport across the boundaries takes place if there is a diﬀerence in
temperature or a diﬀerence in density, across boundaries,
t > 0, x ∈ Γ.

−λ∇T · n + (ρh)v · n = kh (T − T a ) + ha km (ρ − ρa ),

(7)

where kh is a heat transfer coeﬃcient.
3. Method description
We solve equations (1) and (2) for ρ and h. The ρ-h diagrams are then used to determine T , P, and XG . Once
the pressure P is obtained, equation (3) is used to ﬁnd v. To solve the ﬂuid system with ﬁnite elements, we start with
the standard Galerkin algorithm. Later on the streamline upwind Patrove-Galerkin part of the solution procedure is
added.
3.1. Discretization of the mass equation with standard Galerkin approach
In order to get the weak formulation, we discretize equation (1) in time (the Euler backward scheme), multiply it
by a test function η(x), and integrate over Ω

Ω

ρτ − ρτ−1
ηdΩ = −
Δt

Ω

∇ · (ρτ vτ−1 )ηdΩ, 1 ≤ τ ≤ τmax ,

(8)

where τ is a time index. Note that the velocity v is taken at the previous time step τ − 1. The number of time iterations
τmax depends on the value of the time step (Δt) between successive iterations. The choice of Δt is discussed later. Now
using a vector product rule ∇ · (ρvη) = η∇ · (ρv) + ρv · ∇η, and the divergence theorem Ω ∇ · FdΩ = Γ F · ndΓ, in
equation (8) we have

Ω

ρτ − ρτ−1
ηdΩ = −
Δt

Γ

ρτ ηvτ−1 · ndΓ +

Ω

ρτ vτ−1 · ∇ηdΩ.

(9)

We choose a set of basis functions {φi (x)}1≤i≤Nd , where Nd , is the number of mesh nodes for unknowns. The solution is
d
ρτj φ j (x). After substitution in the weak form, and choosing η(x) = φi , for i = 1, ..., Nd ,
approximated by ρτ (x) = Nj=1
we obtain
Nd
j=1

Nd

ρτj − ρτ−1
Δt

φi φ j dΩ = I1 +
Ω

j=1

Ω

φ j vτ−1 · ∇φi dΩ ρτj ,

where I1 incorporates boundary conditions for an inward velocity, i.e.,
⎧
Nd
τ
⎪
⎪
⎨− j=1 Γ km φi φ j dΓ ρ j + Γ km φi ρa dΓ
I1 = ⎪
N
⎪
τ−1
d
⎩−
· ndΓ ρτj
j=1 Γ φi φ j v

if vτ−1
· n < 0,
i
if vτ−1
· n ≥ 0.
i

(10)

(11)

784

Ibrahim
et al. / Procedia Computer Science 1 (2012) 781–790
Ibrahim / Procedia Computer Science 00 (2010) 1–10

4

The problem domain is discretized by using bilinear elements [10]. This gives a system of diﬀerence equations of the
form
ρτ − ρτ−1
= S 1τ−1 ρτ + f1τ−1 ,
M
(12)
Δt
where the mass matrix M = {Mi j }, for i, j ∈ {1, ..., Nd }, is given by
(13)

φi φ j dΩ,

Mi j =
Ω

}, for i, j ∈ {1, ..., Nd }, is
and the stiﬀness matrix S 1τ−1 = {S 1τ−1
ij
=
S 1τ−1
ij

Ω

φ j vτ−1 · ∇φi dΩ + I2 .

The integral I2 includes boundary conditions for an inwards velocity.
⎧
⎪
⎪
if vτ−1
· n < 0,
⎨− Γ km φi φ j dΓ,
i
I 2i j = ⎪
⎪
τ−1
⎩− φi φ j v · ndΓ, if vτ−1 · n ≥ 0.
i
Γ

(14)

i, j = 1, 2,

(15)

}, for i ∈ {1, ..., Nd }, is
The vector f1τ−1 = {f1τ−1
i

⎧
⎪
⎪
⎨ Γ km φi ρa dΓ,
f1τ−1 = ⎪
⎪
⎩0,

if vτ−1
· n < 0,
i
· n ≥ 0.
if vτ−1
i

(16)

Global matrices [M]Nd ×Nd and [S 1 ]Nd ×Nd and the vector [f1 ]Nd ×1 are easier to determine through their respective element
matrices (and element vector). For the assembly procedure from element matrices to global matrices, we refer to [10].
3.1.1. Computation of element matrices
By using equation (13), we can determine the element mass matrix for the kth element ek , k = 1, 2, .., Ne (Ne =
number of elements, whereas Nd is the number of node points)
Δk
, i, j = 1, 2, 3, 4,
(17)
4
where δi j represents the Kronecker delta and Δk is the area of the kth element. In this paper we use the following
Newton-Cotes quadrature rule (for a rectangle)
Mei j = δi j

ek

I(x, y)dxdy ≈

1
4

4

I(xi , yi ).

(18)

i=1

where {(xi , yi ), i = 1, 2, 3, 4} are the corner points of an individual element ek . In this case, the use of a higher order
quadrature rule (e.g., Gaussian quadrature) does not decrease the order of the error because the accuracy is already
determined by the nature of the currently used bilinear basis functions for the spatial discretiaztion. The stiﬀness
matrix S 1 is assembled from 2 element matrices, S Ωe and I3e . The matrix [S Ωe ]4×4 is related to inner rectangular
elements whereas [I3e ]2×2 takes care of boundary elements (line segments). We compute them by using equation (14)
and (15)
Δk
,
S Ωei j = (∇ j φi · vτ−1
j )
4
⎧
⎪
⎪
· n if viτ−1 · n ≥ 0,
⎨δi j L2 vτ−1
i
I3i j = ⎪
⎪
⎩−δi j km L
if vτ−1
· n < 0,
i
2

i, j = 1, 2, 3, 4,

(19)

i, j = 1, 2,

(20)

for each element at Γ
where L is the length of a boundary element. Using equation (16) to compute f1τ−1
e
⎧
⎪
⎪
if vi · n ≥ 0,
⎨0
f1ei = ⎪
⎪
⎩km ρa L if vi · n < 0, i = 1, 2.
2
The global vector f1 is updated after computation of the element vector f1e .

(21)

785
5

IbrahimIbrahim
et al. / /Procedia
Computer Science 1 (2012) 781–790
Procedia Computer Science 00 (2010) 1–10

3.2. Discretization of the energy equation with standard Galerkin approach
We take s = ρh and follow a similar procedure as carried out for the mass equation. The time discretized form of
equation (2) is given by
sτ − sτ−1
= ∇ · (sτ vτ−1 ) + ∇ · (λ∇T τ−1 ) + qτ ,
Δt
where v and T are taken at the previous time step τ − 1. The weak form is given by
Ω

sτ − sτ−1
ηdΩ = −
Δt

Ω

∇ · (sτ vτ−1 )ηdΩ +

Ω

(22)

∇ · (λ∇T τ−1 )ηdΩ +

qτ ηdη.

(23)

Ω

Substituting

Ω

∇ · (sv)ηdΩ = −

Γ

sηv · ndΓ +

Ω

sv · ∇ηdΩ,

and
Ω

∇ · (λ∇T )ηdΩ =

λ
Γ

∂T
ηdΓ −
∂n

Ω

λ∇T · ∇ηdΩ,

into equation (23) we get

Ω

sτ − sτ−1
ηdΩ = −
Δt
λ
Γ

Γ

sτ ηvτ−1 · ndΓ +

∂T τ−1
ηdΓ −
∂n

Ω

Ω

sτ vτ−1 · ∇ηdΩ+

λ∇T τ−1 · ∇ηdΩ +

qτ ηdΩ.

(24)

Ω

Depending on the velocity direction, two boundary⎧integrals in equation (24) can be written as
⎪
⎪− ha km (ρτ − ρa )dΓ − kh (T τ−1 − T a )dΓ,
∂T τ−1
⎨
Γ
Γ
ηdΓ = ⎪
− sτ ηvτ−1 · ndΓ + λ
⎪
⎩− sτ ηvτ−1 · ndΓ − kh (T τ−1 − T a )dΓ,
∂n
Γ
Γ
Γ
Γ

v·n<0
v·n≥0

The system of diﬀerence equations corresponding to equation (24) is given as

sτ − sτ−1
= S 2τ−1 sτ + f2τ−1 ,
(25)
Δt
where M is the same as in the previous subsection. The stiﬀness matrix S 2 is assembled from two element matrices,
S Ωek and I4e . The matrix [S ek ]4×4 is given earlier and [I4e ]2×2 is given as
⎧
⎪
⎪
· n if vτ−1
· n ≥ 0, i, j = 1, 2
⎨δi j L2 vτ−1
i
i
I4ei j = ⎪
(26)
⎪
⎩0
· n < 0.
if vτ−1
i
M

The R.H.S. vector f2τ−1 , for k ∈ {1, ..., Nd } is given by

= − kh (T τ−1 − T a )φi dΓ −
f2τ−1
i
⎧ Γ
⎪
⎪
⎨0,
I5 = ⎪
⎪
⎩− km ha (ρτ − ρa ) φi dΓ,
Γ

Ω

λ∇T τ−1 · ∇φi dΩ +

qτ φi dΩ + I5 ,

(27)

Ω

if vτ−1 · n ≥ 0,
if vτ−1 · n < 0.

(28)

In our algorithm, the R.H.S. vector [f2 ]Nd ×1 is assembled from two element vectors [fΩe ]4×1 and [fΓe ]2×1 , corresponding
to inner elements ek and boundary elements, respectively.
fΩei = −

e xy
4

=−

λ∇T τ−1 · ∇φi dxdy +
4

j=1 l=1

e xy

qτ φi dxdy,

λ τ−1 ∂φi ∂φl ∂φi ∂φl
1
T
+
Δk +
4 k
∂x j ∂x j ∂y j ∂y j
4

i = 1, 2, 3, 4

(29)

4

qτj Δk .
j=1

(30)

786

Ibrahim
et al. / Procedia Computer Science 1 (2012) 781–790
Ibrahim / Procedia Computer Science 00 (2010) 1–10

fΓei

⎧
⎪
⎪
⎨ Ie
=⎪
⎪
⎩−km ha L (ρτ − ρa ) + Iei
2 i

if vτ−1 · n ≥ 0,
if vτ−1 · n < 0,

6

i = 1, 2,

(31)

where Ie comes from the ﬁrst integral on the R.H.S. of equation (27) and it is given by
Iei = −

eΓ

kh (T τ−1 − T a )φi dΓ

L
= −kh (T iτ−1 − T a ).
2

(32)

3.3. Calculation of the velocity from Darcy’s law
Once ρ and h have been determined, ρ-h diagrams are used to compute T , P, and XG . Subsequently, Darcy’s law
is used to calculate v from P. To this extent, we use a weak form of Darcy’s law, which reads as

Ω

v x ηdΩ = −

Ω

Ω

vy ηdΩ = −

Ω

for both components of the velocity v. We write v x (x) =
to obtain
Nd
j=1

Ω

φi φ j dΩ = −

Ω

φi φ j dΩ = −

Nd

j=1

=

Nd
j=1 vy j φ j (x),

and P(x) =

Nd
j=1

P j φ j (x)

i = 1, 2, ..., Nd ,

(35)

i = 1, 2, ..., Nd .

(36)

Ω

K ∂φ j
φi dΩ,
μ ∂y

Nd
∂
Let mi j = Ω φi φ j dΩ, f xi = − Ω Kμ ∂x
j=1 P j φ j dΩ, and fyi = −
bled from the following element matrices

m2i j =

(34)

Ω

Pj
j=1

(33)

K ∂φ j
φi dΩ,
μ ∂x

Pj
Nd

vy j
j=1

Nd
j=1 v x j φ j (x), vy (x)

Nd

vx j

K ∂P
ηdΩ,
μ ∂x
K ∂P
ηdΩ,
μ ∂y

K ∂
Ω μ ∂y

Nd
j=1

P j φ j dΩ, then these matrices assem-

Δk
δi j ,
4

f xi = −

Δk K
4 μ

fyi = −

Δk K
4 μ

(37)
4

Pj

∂φ j
,
∂xk

(38)

Pj

∂φ j
.
∂yk

(39)

j=1
4
j=1

Since M2 = [mi j ]Nd ×Nd is a diagonal matrix, the solution procedure of the system of equations is trivial.
3.4. Streamline Upwind Petrov-Galerkin method
We use this method to avoid numerical oscillations caused by a convection dominant problem. In this method,
the test function η(x) includes another term p(x) alongside the classical part (say w(x)). The classical part ensures
consistency of the scheme and p(x) introduces some artiﬁcial diﬀusion (and hence some loss of accuracy). In our case
p(x) =

D v · ∇φi
,
2 |v|

|v| > 0.

(40)

The value of D depends on the direction of the velocity and element dimensions [10]. With the modiﬁed test function,
η(x) = w(x) + p(x), we need to repeat all the steps carried out in the preceding subsections to determine element and
global matrices [10].

IbrahimIbrahim
et al. / /Procedia
Computer Science 1 (2012) 781–790
Procedia Computer Science 00 (2010) 1–10

Symbol
K
ha
Δt
μ
λ

value
10−10
3.5 × 104
1/16000
5 × 10−5
0.05

787
7

comments/units
[m2 ]
[J/Kg]
(with Δx =0.025)[s]
Pa.s
[W/m/K]

Table 1: Parametric values.

4. Numerical Experiments
For the simulation results of this section, the 2D domain is divided into 40×40 elements (and 1D into 40 elements).
We assume no heat source (q = 0) for the given examples. Few other parameter values are provided in Table 1
4.1. Case Study 1. Inwardly insulated system
We start with a simpler case, where no mass and heat is allowed to enter the ﬂuid system by setting km = kh = 0.
The model and the solution procedure still allow an outﬂow of the mass and energy. To ensure a positive initial
velocity, we take the following initial conditions
T (x, 0) = 292 − 2x,
XG (x, 0) = 0.1,

x ∈ Ω,

x ∈ Ω,

where Ω is a unit length line segment for 1D and a unit square for 2D model. An exact relation between T and P
is not known in the context of the numerical ρ-h method. However, in our case, it is known experimentally (and
partially supported by Van der Waals equation), that a linear temperature proﬁle results in an almost linear pressure.
The simulation results for all solution variables, ρ, ρh, T , P, XG , and v (1D case) are given in Figure 2. The 2D

Figure 2: Case Study 1. Inwardly insulated system, (km = 0, kh = 0). Solution variables at t = 0, 0.25, 5.0 [s], (a) density, (b) total enthalpy ρh,
(c) temperature T , (d) pressure P, (e) gas mass fraction XG , and (f) velocity v.

788

Ibrahim
et al. / Procedia Computer Science 1 (2012) 781–790
Ibrahim / Procedia Computer Science 00 (2010) 1–10

8

Figure 3: Case Study 1. (a) total mass, (b) total energy, (c) mass ﬂow rate, and (d) energy ﬂow rate.

results are given in Figure 4 and 5 with a similar initial conditions. A higher pressure value in the left part of the
domain, as compared to the right part (Figure 2(d)), forces a positive velocity (Figure 2(f)). The mass cannot enter
from the left boundary (km = 0), therefore, the velocity at the left boundary node goes to zero immediately. A positive
velocity means that the density in the left side decreases with time (Figure 2(a)). It also means that the mass and the

Figure 4: Case Study 1. Inwardly insulated system (km = 0, kh = 0), 2D model with 1D conditions, (left) density ρ, (middle) total enthalpy ρh, and
(right) temperature T .

Figure 5: Case Study 1. 2D model with 1D conditions. Solution variables at t = 3.0 (left) pressure P, (middle) gas mass fraction XG , and (right)
velocity v x in x-direction.

energy are ﬂowing out from the right boundary. A decreasing density in the left side implies that the gas mass fraction
(relative to liquid mass fraction) is increasing in that section (Figure 2(e)). Figure 3(a) shows that the total mass in the
ﬂuid system ( Ω ρdΩ) decreases with time, before reaching to a steady-state value. The total energy ( Ω ρhdΩ) is also
shown in Figure 3(b). The total energy decreases because of the outward mass transportation. The mass and energy
ﬂow rates are given by equations (6) and (7) (analytically). For their eﬃcient numerical computation, see [4]. These
ﬂow rates (as given in Figure 3(c) and 3(d)) are also used to check for the mass and energy conservation conditions.
In accordance with Fourier’s law, the temperature (and pressure) decreases in the left part and as the time proceeds

789
9

IbrahimIbrahim
et al. / /Procedia
Computer Science 1 (2012) 781–790
Procedia Computer Science 00 (2010) 1–10

Figure 6: Case 1. Inwardly insulated system (km = 0, kh = 0), comparison of 1D density plots with graphs taken from cross-section of 2D plots.
(a) density values at t = 0.3 [s] (b) density values at t = 3.0 [s] (c) the relative diﬀerence of two density curves given in (a), i.e.,
i ≤ 41 and (d) the relative diﬀerence of two density curves given in (b).

ρτi

− ρτi
2D
1D
ρτi
2D

, 1≤

the temperature (and pressure) gradient decreases (Figure 2(c) and 2(d)). A decreasing pressure gradient lowers the
magnitude of the velocity. Both, the mass and heat, ﬂow from left to right, therefore, the total enthalpy also decreases
in the left part and increases, relatively, in the right side as shown in Figure 2(b). Apart from the comparison of
ρ, h, T , and P values in left and right sides, they always decrease in absolute terms due to the mass outﬂow. The
transport of mass and energy continues until the temperature (and pressure) gradient becomes zero. It is obvious that
the temperature and pressure are the main drivers for all transport. Other variables (ρ, h, XG , and v) depend on T and P
whereas T and P tend to a steady state. The transfer of mass and heat stops as soon the system reaches its steady state
value (thermal equilibrium). A comparison for density graphs of 1- and 2D calculations is given in Figure 6, where
cross-sections of 2D density graphs (along the x-axis) are provided along with 1D graphs for given time instances.
(ρτ ) −(ρτ )
There is no signiﬁcant relative diﬀerence ( i (2Dρτ ) i 1D , 1 ≤ i ≤ 41) between the two models for this example.
i 2D
4.2. Case Study 2. Mass and energy ﬂowing into the system

Figure 7: Case Study 2. Mass and energy are ﬂowing into the system, (km = 1.5, kh = 105 ). Solution variables at t = 0, 2, 20 [s], (a) density, (b)
total enthalpy ρh, (c) temperature T , (d) pressure P, (e) gas mass fraction XG , and (f) velocity v.

In this Case Study, we set initial conditions (T (x, 0) = 290 [K], XG = 0.1 [kg/kg]) and the ambient temperature

790

Ibrahim
et al. / Procedia Computer Science 1 (2012) 781–790
Ibrahim / Procedia Computer Science 00 (2010) 1–10

10

(T a = 293) for an inward initial velocity and hence an inward transport of mass (km = 1.5 [m/s]) and heat (kh = 105 ).
Simulation results (1D model) are given in Figure 7. Again, the temperature (and pressure combination) is the main
driver of the system dynamics. For more explanations, we refer to the subsection for Case Study 1 and [10]. Note that
the system (Figure 7) approaches a steady state as soon the temperature T approaches T a (=293).
5. Conclusions
The numerical ρ-h method can be successfully applied to multi-phase ﬂuid systems where we have certain spatial
proﬁles for the system variables. The solution of 1D and 2D models leads to comparable results for problems with a
1D solution proﬁle. At this moment, the time step Δt should be chosen very small. This leads to excessive amounts
of computing times. For this model we do not have an analytic upper bound for Δt in order to obtain a stable time
integration. The upperbound is determined experimentally. Currently, we are investigating the origin of the small
Δt requirement. In our view, multiple time scales are involved in this model, which makes the resulting system of
discretized partial diﬀerential equations very stiﬀ. The physical background of the multi time scales are the timescale of the convection diﬀusion process and the time-scale of the phase change process. In the future we plan to
investigate the cause of the stiﬀness. Thereafter we consider a fully implicit time integration, an adaptive Δt strategy,
and an adaptation of the thermodynamic model in the neighborhood of phase changes in order to reduce the computing
times.
References
[1] A. R. J. Arendsen, A. I. van Berkel, A. B. M. Heesink, and G. F. Versteeg. Dynamic modelling of thermal processes with phase transitions by
means of a density-enthalpy phase diagram. 7th World Congress of Chemical Engineering, Glasgow, Scotland, 2005.
[2] A. R. J. Arendsen and G. F. Versteeg. Dynamic modelling of refrigeration cycles using density and enthalpy as state variables. 17th International Congress of Chemical and Process Engineering, Prague, The Czech Republic, 2006.
[3] A. R. J. Arendsen and G. F. Versteeg. Dynamic Thermodynamics with Internal Energy, Volume, and Amount of Moles as States: Application
to Liqueﬁed Gas Tank. Ind. Eng. Chem. Res. 2009, 48, 3167-3176.
[4] Abdelhaq Abouhafc¸. Finite Element Modeling Of Thermal Processes With Phase Transitions. Master Thesis, 2007, Delft University of
Technology.
[5] Ibrahim, C. Vuik, F.J. Vermolen, D. Hegen. Numerical Methods for Industrial Flow Problems. Delft University of Technology 08-13, 2008.
[6] E. Javierre, C. Vuik, F. J. Vermolen, S. van der Zwaag. A comparison of numerical models for one-dimensional Stefan problems. J. Comp.
Appl. Math., 2006, 192, 445-459.
[7] Heike Emmerich. The Diﬀuse Interface Approach in Materials Science, Thermodynamic Concepts and Applications of Phase-Field Models.
Springer, Berlin, 2003.
[8] J.H. Brusche, A. Segal, and C. Vuik. An eﬃcient numerical method for solid-liquid transitions in optical rewritable recording. International
Journal for Numerical Methods in Engineering, 77, pp. 702-718, 2009.
[9] O.C. Zienkiewicz, R.L. Taylor, & J.Z. Zhu. The Finite Element Method, Its Basis & Fundamentals. 6e, Butterworth-Heinemann, 2005.
[10] Ibrahim, C. Vuik, F.J. Vermolen, D. Hegen. Numerical Methods for Industrial Flow Problems. Delft University of Technology 09-10, 2009.

