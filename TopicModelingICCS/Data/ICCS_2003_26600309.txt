DDEMA: A Data Driven Environment for
Multiphysics Applications
John Michopoulos1 , Panagiota Tsompanopoulou2 , Elias Houstis3,2 ,
John Rice3 , Charbel Farhat4 , Michel Lesoinne4 , and Frederic Lechenault4
1

4

U.S. Naval Research Laboratory, Special Projects Group, Code 6303
Washington, DC 20375, U.S.A.
john.michopoulos@nrl.navy.mil
2
University of Thessaly, Dept. of Comp. Eng. and Telecommunications
38221 Volos, Greece
yota@inf.uth.gr
3
Purdue University, Computer Sciences Department
W. Lafayette, IN 47906, U.S.A.
{enh, jrr}@cs.purdue.edu
University of Colorado at Boulder, Dept. of Aerospace Engineering Sciences
Boulder, CO 80309-0429, U.S.A.
{farhat, michel, lechenault}@colorado.edu

Abstract. In this paper we present the design of a multidisciplined
problem solving environment (MPSE) for supporting an efficient prediction capability for the response of multiscale interdisciplinary continuous interacting systems. This design takes into consideration information technologies, coupled multiphysics sciences, and data-driveness
to steer adaptive modelling and simulation of the underlying systemic
behavior. The paper describes the design objectives and software architecture of DDEMA in the context of two multidisciplinary applications related to material/structure design of supersonic platforms and
fire/material/environment interaction monitoring, assessment and management.

1

Introduction

Continuous interacting systems under the influence of coupled multifield loading
can exhibit static and dynamic behavior that is highly variable in space and time,
spans multiple scales, and sometimes has intense nonlinear interaction and response. This is true especially for material/structural systems embedded in host
continua as in the case of structures interacting with surrounding fluids under
generalized loading conditions. The development of the multiphysics science and
technology that allows predicting behavioral characteristics of such interacting
systems is of utmost importance when it comes to their applications in contexts
driven by human needs. Examples of such applications are: a) Energy storing
and dissipating composite materials for supersonic and hypersonic multi-mission
conventional or uninhabited air vehicles for civil and defense applications. b) Materials and structures for the civil and defense infrastructure life extension and
P.M.A. Sloot et al. (Eds.): ICCS 2003, LNCS 2660, pp. 309−318, 2003.
 Springer-Verlag Berlin Heidelberg 2003

310

J. Michopoulos et al.

maintainability, such as smart materials and systems that can self-adjust when
a scheduled or unexpected restriction of their state space occurs. An example
would be high temperature structural composites that can change their mechanical properties when exposed to sudden temperature gradients due to explosion
or mechanical damage.
Specific vertical industries must comply with consumer driven quality standards
and/or demands that introduce implicit requirements for reducing uncertainty
of simulated behavior. This has increased the crucial aspect of the validation and
verification of predictions, rendered by the computational environments used for
this purpose, up to the point of becoming one of the main areas if intensive work.
The main objective of our project is to develop a framework for applying specific Multidisciplinary Problem Solving Environments (MPSEs) to multidisciplinary applications. An instantiation of this framework will be a particular
MPSE, which will provide simulation based behavior prediction of fully identified systems as a consequence of applying inverse approaches along with massive
automated data acquisition during tests of continuous systems where the tests
are exhaustive of multidimensional stimulus-response spaces. Such a data-driven
framework will allow the experimental capturing of the multiphysics behavioral
characteristics of the continuous system, thus intrinsically ensuring the verifiability and validity of simulations based on the testing. To develop and validate,
within the framework provided by this objective, the proposed data driven distributed MPSE will employ appropriate methodologies that will demonstrate
two main features. The first feature is a software encapsulation of multiphysics
data-driven constitutive characterization and model selection and encapsulation.
The second feature is heavy- and light-weight computational solution implementations and comparison for solving of multi domain coupling (i.e. aero-structural
interaction) problems. We will be referring to this data-driven MPSE as a Data
Driven Environment for Multiphysics Applications (DDEMA) thereafter.

2

MPSE Overview and DDEMA Specifications

Progress towards the solution of coupled multiphysics and multi-continua interaction both from the constitutive and the field equation perspectives has
been scarce. There is significant progress however, when focus has been given to
computational implementations for a small number (mostly three) of interacting fields and a number of active projects exist. Among them one can include
our development of the GasTurbLab [1], [2] multidisciplinary problem solving
environment (MPSE) that addresses the interactions between a stator, rotor,
and combustor in a gas turbine engine that has been implemented on a mobile
agent platform, utilizing a collaborating partial differential equations (PDEs)
methodology [3], [4]. In the area of fluid-structure-control interaction, we can
mention the advanced AERO computational platform. This platform comprises
the AERO-F, AERO-S, AERO-C and MATCHER suite of codes, [5],[6], developed at the University of Colorado for the solution on nonlinear transient
aeroelastic problems. They are portable, and run on a large variety of comput-

DDEMA: A Data Driven Environment for Multiphysics Applications

311

ing platforms ranging from Unix workstations to shared as well as distributed
memory massively parallel computers. A generalization of AERO to an aerothermoelastic implementation was recently achieved [7]. The case of aerostructural
coupling with an energy dissipative non-linear material response under a virtual
wind tunnel environment has also been initiated recently [8], [9]. The DDEMA
system will provide high confidence prediction capability through its data-driven
system modeling capability.
The DDEMA system will use network based distributed computing infrastructures and data and will provide a web-accessible user’s environment. The envisioned computing infrastructure will have the following properties: (1) Computation will be partitioned into coarse-grain and fine-grain components and will
be executed in a loosely coupled fashion for the lightweight implementation, and
in tightly coupled fashion for the heavyweight implementation. (2) The system
will distribute dynamically the various components in order to adapt according to resource availability and performance variations. (3) To enable automatic
adaptive modelling, the system will be minimizing the difference between stored
behavioral datasets and predicted behavioral datasets, in a design optimization
fashion, where the objective function and the potential constraints will be user
or system definable. (4) To enable optimal user customization and history maintenance of user-system interaction, a visual problem definition editor (VPDE)
will be developed and its user-invoked states will be archiveable and unarchiveable (or serializable and deserializable) upon request. (5) To enable collective
and dynamic knowledge transfer among distributed points of entry and achieve
auto enhancement of simulation due to historical collective user experience, abstractions of successful simulations and/or problem solutions as well as their
least upper bound (as a representation of the non conflicting historic common
asserted knowledge) will be maintained for all users with appropriate authorization/authentication. (6) The system will deal with machine and programming
language heterogeneity problems while it will preserve platform independent
component communication by leveraging efficient and ubiquitous data exchange
formats and methodologies.
The proposed work will borrow design concepts from or build on top of: (1)
existing agent systems (e.g. [10]), (2) communications tools that achieve interoperability between different platforms (e.g. Java-RMI-IIOP [11]), (3) symbolic
algebra systems and sub systems for automating the field equation generation
process (e.g. MathTensor [12]), (4) flexible APIs for visual editing of user controlled problem definition as well as 2D and 3D visualization (e.g. PTOLEMY-II
[13]), (5) high performance Java implementations for parallel computation over
distributed and shared memory architectures focused on intra-paradigm compatibility (e.g. ProactivePDC [14]) or message passing efficiency (e.g. Hyperion
[15]). Many of these technologies have already been proven to be appropriate for
rapid prototyping, involving traditional multiphysics and multi-scale models developed from different disciplines and organizations. What is crucially important
for this project is the clean, simple and flexible programming model of mobile or
static component systems, which is expected to facilitate the development of the

312

J. Michopoulos et al.

overall envisioned system. Besides making necessary adjustments/extensions to
such systems, our IT development work will also focus on transforming proven
but largely monolithic legacy codes into a set of well integrated, interoperable
components (via wrappers based on the Java Native Interface (JNI) [16]) that
can be distributed over the network.

3

Software Architecture of DDEMA Based on
Data-Driveness Time Modalities

The application domain for the validation of utility for DDEMA will be that
a) of composite material structures in their linear and nonlinear behavioral
regimes when they interact with surrounding fluids under multiphysics loading
conditions primarily for material/structural design of supersonic platform and b)
fire-material-environment interaction, monitoring, assessment and management
system.
The two application scenarios considered can be characterized by the following data-driveness time modalities which influence the software architecture of
DDEMA. We have identified the following two time modalities:
– Real time (unpredictable) data driveness where data, originating from sensor networks, effect systemic operational assessment of integrity and utility
measures (i.e. fire effects on environment and structural/material health).
– Prior time (operator controllable) data driveness where massive data from
automated experimentation are used to select, calibrate and construct behavioral models for materials/structures and fluids related to design, qualification and prediction scenarios (i.e. design of a nonlinear supersonic platform).
This can also have a real time component as well especially if model selection is left to be determined by incoming sensor data both on laboratory
and on-board platform (ships, submarines etc) situations.
Throughout, we will use these modalities to describe the two proposed DDEMA
application architectures.
3.1

Real-Time System

In this system configuration, we assume that the on-board user has the many
operational objectives some of which are:
– Monitor the health state of the area (e.g. entire platform, substructure, component) of interest by observing continuous field distributions guided by incoming sensor datastreams originating from a distributed sensor network
that can be monitored from multiple points of entry.
– Simulate potential future states (“what-if” scenarios) of the system given certain hypothetical battle or situational escalation scenarios. This requires auto
conversion of actual operating conditions to corresponding boundary/initial
conditions, exploitation pre-computed field states to synthesize potential
field evolutions quickly for ”what-if” scenarios.

DDEMA: A Data Driven Environment for Multiphysics Applications

313

– Based on input from the previous two items, the on-board users will be able
to make decisions and implement them by activating actuation mechanisms.
These require a dynamic analysis of simulated scenarios based on controllability of the systems,an impact analysis via a system that implements heuristic knowledge management techniques, and an archival capability for future
re-usage and recording evaluative experiences of implemented decisions.
A high level schematic view of the so called real-time system architecture is depicted in Fig. 1, where the coarse grain functionality modules have been shown
from a data association perspective only. This diagram should be implementable
within the VPDE. Space limitations require that we do not expand on the definition of each one of the modules presented.

Fig. 1. A real-time system architecture.

3.2

Prior-Time System

In this system configuration, we assume that the laboratory or off-board user,
who can be a structural designer or system qualifier who needs accurate systemic
state behavior prediction, has similar operational objectives to that of the realtime modality. The only difference will be that the real-time component will not
be present. The role of the incoming data will be played by the multidimensional
material testing data-streams for identifying constitutive behavior of materials
that may also guide model selection and implementation.
This requirements specification represents the structural system design and qualification utilization of the system. The high level schematic view of the so called
prior-time system architecture is depicted by appropriate adjustments of the
architecture depicted in Fig. 1.

314

4

J. Michopoulos et al.

The Design of Middleware and User Interface

The plethora of available choices on computational infrastructure (hardware,
software, networking), see Sec. 2, along with specific domain of application and
user specific backgrounds and needs have introduced a large number of research
issues associated with the computational implementation of any MPSE. The
major of these issues are: (1) ability and optimization for computation over distributed resources, (2) ability for dynamic migrating component distribution, (3)
adaptive modeling capability, (4) user dependent customization, (5) collaborative knowledge representation and interactivity, (6) dealing with heterogeneity of
legacy and new code, and finally (7) ability to sustain component fault tolerance.
To address several of the above issues, in the context of the data-driveness and
the two time modalities scenarios considered, the following middleware design is
proposed.
4.1

DDEMA Middleware

The design of the middleware is based on our experience from previous projects
implementation, such as GasTurbinLab [1]. It is presented in the context of
an agent-based middleware. New packages (e.g. Ptolemy II, [13]) are based on
a combination of computational domain “director” and “actor” dual concepts.
Actors can be thought as metamorphic agents with a visual incarnation in a
GUI, and therefore include the concept of the agent and accordingly we promote
their use in DDEMA.
Based on the issues, requirements, and data associations between functional
abstractions as they have been described above, we have decided on proposing
the following set of actors. A Director (or General Control Actor (GCA)), a
Finite Element Tear and Interconnect Actor (FETIA), a Communication Actor
(CA), Domain Actors (DA), Database Actor (DBA), and many I/O Actors (e.g.
Display Actor, Printer Actor, Sensor Actor, User Actor), see Fig. 2.
Each Actor has specific tasks and interactions with some of the other Actors.
However, we will not discuss here the individual responsibilities of each actor/agent due to the lack of space and we will allow the reader to infer some of
this functionality through the associations depicted in Fig. 2
In many cases the actors to be developed will have to be constructed such as they
encapsulate of existing codes like the AERO suite [5],[6] or their subcomponents.
4.2

DDEMA Realization and User Interface/VPDE

DDEMA’s realization will be based on two main operational modes: The applications design and the application use modes.
In the application design mode the designer will utilize the VPDE for designing
the actual application architecture in terms of data flow and message passing
diagram. In particular, a visual representation of the linguistic components available for composition through their visual incarnations within the VPDE will be
used. This is exactly why we plan to utilize an appropriately modified version

DDEMA: A Data Driven Environment for Multiphysics Applications

315

Fig. 2. Middleware design in Ptolemy’s Vergil used as a VPDE.

of the “Vergil” visual editor paradigm provided by the Ptolemy II ([13]), system
which already contains a well documented specification for creating new actors
and directors. In this mode of usage DDEMA’s GUI will be that of the VPDE
based on Ptolemy-II.
In the application use mode, the user will take action to initiate the automatic
generation of java source code or bytecode that implements the application functionality intended. Upon execution of the bytecode, the user will be presented
with a stand alone custom made application that is the result of the previous
mode to perform the activities associated with the corresponding usage requirements. During this phase secondary process will be spawned on the appropriate
lightweight and heavyweight computational infrastructure available at hand. In
order to address issues of parallelism, distribution, concurrency, security and process mobility, we will first attempt to introduce an intermediate layer between
the actual mission functional and actor view layers, that provides a unified set
of resources for this goal such as Inria’s ProActive library [14]. In this case the
GUI will be the one defined by the user in terms of the previous stage.

5
5.1

Case Studies
Coupled Multiphysics of Continua: Material/Structural Design
of Supersonic Platform

Our experience with continuous multiphysics field theories [17], [18] suggests
that the design process of a structure often requires the usage of a tool such as
DDEMA for establishing optimal material characteristics like fiber-matrix properties, fiber orientation, and laminate layup properties, and the shape tailoring
for an aircraft - or an aircraft component such as a fuselage, a wing, or a control

316

J. Michopoulos et al.

surface - under high temperature and mechanical loading conditions inflicted
from a supersonic mission requirement.
Intrinsic to the validity and confidence of any aero-structural simulation are the
utilized continuous models of material behavior. It is exactly this area of where
NRLs robotic testing capability along with historical exhaustive data pertaining to identification of material behavior, will be used as the springboard to
launch an effort for automating model selection, implementation and verification methodologies. This will be done by considering all intrinsic and extrinsic,
wanted and unwanted factors (uncontrolled biasing, noise, repeatability, history
dependence etc) effecting data quality for the intended usage of model formation. Information theoretic, statistical and certainly deterministic techniques for
model selection and/or generation in the context of continuous system identification and inverse approaches will be encapsulated in DDEMA. This will exercise
the prior time data-driveness aspect of the system.
We have already demonstrated that it is possible to deal with most of these issues
from a single physics rapid modeling perspective [8], [9]. Currently, the University
of Colorado members of our team are part of a research consortium investigating the development of a supersonic aircraft shaping technology for reducing the
initial shock pressure rise characterizing the ground signature. However, such a
Quiet Supersonic Platform (QSP)requires a lightweight airframe, and will exhibit an aero-structural behavior. Its feasibility depends not only on the ability
to design a shape that generates a low-boom ground signature, but most importantly on the ability to build a lightweight high-stiffness and damage tolerant
structure that can withstand the expected aerodynamic and thermal loadings
for long-range missions at a sustained rate. Therefore, the final design of a QSP
will have to rely on a multidisciplinary aero-thermo-structural optimization. The
DDEMA provides a unique opportunity to complement our current QSP effort.
From the real time modality perspective, an on board version of a particular
runtime version of DDEMA can be utilized to exploit sensor originated datastreams for helping responsible personnel to take decisions about restrictions or
extensions of the platform operational envelope based on data driven simulation of potential outcomes of structural health metrics such as dissipated energy
density. More details of how this expression of DDEMA can evolve is further
expanded below for the case of our second application.
5.2

Monitoring, Assessment, and Management of Fire-MaterialEnvironment Interaction

The ability to deal with the consequences of fire, extend over a wide range of
application areas that have a direct effect on the survivability, ability to repair,
maintainability, life extension and mission goals attainment of the environments
and structural platforms effected by it. Some of these application areas can
involve time critical situations that when they arise, demand decision-making
support for an accurate monitoring capability supplemented by fire damage assessment and management and control countermeasures capabilities. A point in
case are navy vessels build with a great variety of materials under extremely

DDEMA: A Data Driven Environment for Multiphysics Applications

317

demanding threat conditions such as possible catastrophic events due to fuel
tanks proximity, limited oxygen supply (i.e. submarines), fire byproducts toxicity, structural and atmospheric damage.
To demonstrate the value of the core ideas behind the development of DDEMA,
we plan develop a proof of concept instantiation of DDEMA within the context
of managing all required activities of an accidental fire induced crisis scenario.
More specifically, this application of DDEMA should be able to provide assistance to the users by employing the following features: (1) Ability to receive
real time datastreams from multiple redundant distributed sensor networks that
allow capturing of multimodal point or continuous distributions of various field
quantities such as area/volume of live flames, temperature, chemical byproducts
concentrations etc; (2)ability for multi-point-of-entry monitoring where this can
be accomplished in multiple locations synchronously or asynchronously; (3) copresentation of reactive flow and reactive phase transformation simulation capability with multiphysics fluid-structure interaction simulation capability that
allows “what-if” prediction exploration in order to be able to evaluate validity
of decisions and alternative countermeasures; (4) a decision support subsystem,
in order to combine sensor inputs, simulation results analysis and user choices
based on experience and knowledge and form a course of action countermeasures
that can also be simulated; (5) an interface to a control system of an existing
countermeasure distributed actuation network, in order to implement the decided management strategy.
A system with these capabilities allows for portability and wide applicability.

Acknowledgement. The authors acknowledge the support by the National
Science Foundation under grants EIA-0205663 and EIA-0203958.

References
1. Fleeter, S., Houstis, E.N., Rice, J.R., Zhou, C., Catlin, A.: GasTurbnLab: A Problem Solving Environment for Simulating Gas Turbines. Proc. 16th IMACS World
Congress, (2000) No 104-5.
2. Houstis, E.N., Catlin, A.C., Tsompanopoulou, P., Gottfried, D., Balakrishnan, G.,
Su, K., Rice, J.R.: GasTurbnLab: A Multidisciplinary Problem Solving Environment
for Gas Turbine Engine Design on a Network of Non-Homogeneous Machines. To
appear in the Proceedings of 15th Toyota Conference, October 2001 and special
issue on the J. of Computational Engineering and Mathematics.
3. Rice, J.R., Tsompanopoulou, P., Vavalis, E.A.: Interface Relaxation Methods for
Elliptic Differential Equations. Applied Numerical Mathematics 32 (1999) 219–245.
4. Tsompanopoulou, P.: Collaborative PDEs Solvers: Theory and Practice. PhD thesis,
Mathematics Department, University of Crete, Greece (2000).
5. Farhat, C., Lesoinne, M.: Two Efficient Staggered Procedures for the Serial and
Parallel Solution of Three-Dimensional Nonlinear Transient Aeroelastic Problems.
Computer Methods in Applied Mechanics and Engineering, 182, (2000) 499-516.
6. Farhat, C., Lesoinne, M., Stern, P., Lanteri, S.: High Performance Solution of ThreeDimensional Nonlinear Aeroelastic Problems Via Parallel Partitioned Algorithms:
Methodology and Preliminary Results. Advances in Engineering Software, 28 (1997)
43-61.

318

J. Michopoulos et al.

7. Tran, H., Farhat, C.: An Integrated Platform for the Simulation of Fluid-StructureThermal Interaction Problems, AIAA J. (in press.)
8. Michopoulos, J., Badaliance, R., Chwastyk, T., Gause, L., Mast, P., Farhat C.,
Lessoine, M.: Coupled Multiphysics Simulation of Composite Material Softening in
a Virtual Wind Tunnel Environment, invited paper in Proceedings of Sixth U.S. National Congress on Computational Mechanics, U.S. Association for Computational
Mechanics, Dearborn MI, (2001) pp. 521.
9. Michopoulos, J., Farhat, C., Lesoinne, M., Mast, P., Badaliance, R., Chwastyk, T.,
Gause, L.: Material Softening Issues in a Multiphysics Virtual Wind Tunnel Environment, AIAA Paper 2002-1095, 40th Aerospace Sciences Meeting and Exhibit,
Reno, Nevada, (2002).
10. The Grasshopper Agent Platform, IKV++ GmbH, Kurfurstendamm 173-174, D10707 Berlin, Germany. http://www.ikv.de
11. Java-RMI-IIOP: http://java.sun.com/products/rmi-iiop/
12. Parker, L., Christensen, S.M.: MathTensor: A System for Doing Tensor Analysis
by Computer, by Addison-Wesley, (1994)
13. Davis II, J., Hylands, C., Kienhuis, B., Lee, E.A., Liu, J., Liu, X., Muliadi, L., Neuendorffer, S., Tsay, J., Vogel, B., Xiong, Y.: Heterogeneous
Concurrent Modeling and Design in Java, Memorandum UCB/ERL M01/12,
EECS, University of California, Berkeley, CA USA 94720 March 15, 2001,
http://ptolemy.eecs.berkeley.edu/ptolemyII/
14. Caromel, D., Klauser, W., Vayssiere, J.: Towards Seamless Computing and
Metacomputing in Java, pp. 1043–1061 in Concurrency Practice and Experience,
September-November 1998, 10(11–13). Editor Geoffrey C. Fox, Published by Wiley
& Sons, Ltd., http://www-sop.inria.fr/oasis/proactive/
15. Antoniu, G.L., Bouge, l., Hatcher, P., MacBeth, M., McGuigan, K., Namyst, R.:
Compiling multithreaded Java bytecode for distributed execution. In Euro-Par 2000:
Parallel Processing. Lecture Notes in Comp. Science, Vol. 1900. Springer-Verlag,
Munchen, Germany, (2000) 1039–1052.
16. Java Native Interface Specification.
http://web2.java.sun.com/products/jdk/1.1/docs/guide/jni.
17. Sih, G.C., Michopoulos, J.G., Chou S.C.: Hygrothermoelasticity. Martinus Nijhoff
Publishers (now Kluwer Academic) (1986).
18. Michopoulos, J.G., Sih, G.C.: Coupled Theory of Temperature Moisture Deformation and Electromagnetic Fields. Institute of Fracture and Solid Mechanics report
IFSM-84-123, Lehigh University, (1984).

