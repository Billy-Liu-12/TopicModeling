Strong Fault-Tolerance:
Parallel Routing in Networks with Faults�
Jianer Chen and Eunseuk Oh
Department of Computer Science, Texas A&M University,
College Station, TX 77843-3112, USA
Email: {chen,eunseuko}@cs.tamu.edu

Abstract. A d-regular network G is strongly fault-tolerant if for any
copy Gf of G with at most d − 2 faulty nodes, every pair of non-faulty
nodes u and v in Gf admits min{df (u), df (v)} node-disjoint paths in
Gf from u to v, where df (u) and df (v) are the degrees of the nodes u
and v in Gf . We show that popular network structures, such as hypercube and star networks, are strongly fault-tolerant. We develop eﬃcient
algorithms that construct the maximum number of node-disjoint paths
of optimal or nearly optimal length in these networks with faulty nodes.
Our algorithms are optimal in terms of their running time.

1

Introduction

Routing on large size networks with faults is an important issue in the study of
computer interconnection networks. In this paper, we introduce a new measure
for network fault tolerance: the strong fault-tolerance. Consider a network G
and let Gf be a copy of G with a set Sf of faulty nodes. Let u and v be two
non-faulty nodes in Gf . Based on local information, we know the degrees df (u)
and df (v) of the nodes u and v in Gf and are interested in constructing the
maximum number of node-disjoint paths between u and v in Gf . Obviously, the
number of node-disjoint paths between u and v in Gf cannot be larger than
min{df (u), df (v)}. We are interested in knowing the precise bound on the size
of the faulty node set Sf such that for any two non-faulty nodes u and v in Gf ,
there are min{df (u), df (v)} node-disjoint paths between u and v.
Clearly, if the network G is d-regular (i.e., all of its nodes have degree d),
then in general the number of faulty nodes in the set Sf should not exceed d − 2
to ensure min{df (u), df (v)} node-disjoint paths between any two nodes u and v
in Gf . This can be seen as follows. Let u and v be two nodes in G whose distance
is larger than 3. Pick any neighbor u� of u and remove the d − 1 neighbors of
u� that are not u. Note that no neighbor of u� can be a neighbor of v since the
distance from u to v is at least 4. Let the resulting network be Gf . The degrees
of the nodes u and v in Gf are d. However, there are obviously no d node-disjoint
paths in Gf from u to v since one of the d neighbors of u in Gf , the node u� ,
leads to a “dead-end”. This motivates the following deﬁnition.
�

This work is supported in part by NSF under Grant CCR-0000206.

V.N. Alexandrov et al. (Eds.): ICCS 2001, LNCS 2074, pp. 609–618, 2001.
c Springer-Verlag Berlin Heidelberg 2001
�

610

J. Chen and E. Oh

Deﬁnition 1. A d-regular network G is strongly fault-tolerant if for any copy
Gf of G with at most d − 2 faulty nodes, every pair of non-faulty nodes u and
v admits min{df (u), df (v)} node-disjoint paths from u to v in Gf .
Strong fault-tolerance characterizes the property of parallel routing in a network with faulty nodes. Since one of the motivations of network parallel routing
is to provide alternative routing paths when failures occur, strong fault-tolerance
can also be regarded as the study of fault tolerance in networks with faults.
To authors’ knowledge, there has not been a systematic study on parallel routing on networks with faults. In this paper, we will concentrate on the
discussion on strong fault-tolerance of two extensively studied interconnection
network structures, the hypercube networks and the star networks. We ﬁrst give
a brief review on the previous related research on these networks.
The hypercube networks are among the earliest and still remain as one of the
most important and attractive network models. A large number of fault-tolerant
algorithms dealing with single-path routing in the hypercube networks have been
proposed (see, for example, [8,7,12]). Parallel routing on hypercube networks
without faulty nodes was studied in [18]. The general fault tolerance properties of
the star networks were ﬁrst studied and analyzed in [1,2,3]. Algorithms for singlepath routing in star networks with faults were developed in [4,11,17]. Parallel
routing algorithms on the star networks were studied in [10,9]. In particular, an
eﬃcient algorithm has been developed [6] that constructs the maximum number
of node-disjoint paths of optimal length for any two nodes in the star networks.
A randomized algorithm, based on the Information Dispersal Algorithm [15], for
parallel routing in the star networks with faults was proposed in [16].
We will ﬁrst study the strong fault-tolerance for the star networks. Taking
the advantage of the orthogonal decomposition of the star networks, we develop
an eﬃcient algorithm that constructs node-disjoint paths between any two nonfaulty nodes in the n-star network Sn with at most n − 3 faulty nodes: for
any two non-faulty nodes u and v, our algorithm constructs min{df (u), df (v)}
node-disjoint paths of minimum length plus a small constant between u and v.
Since the hypercube networks do not have a similar orthogonal decomposition
structure, the techniques in parallel routing for the star networks with faults are
not applicable to the hypercube networks. In order to eﬀectively route parallel
paths in the hypercube networks with faults, we develop a new technique called
“neighbor pre-matching”. Based on this technique, an algorithm is developed
that constructs min{df (u), df (v)} node-disjoint paths of optimal length for any
pair of nodes u and v in the n-cube network with at most n − 2 faulty nodes.
Our algorithms have optimal running time.

2

Strong Fault-Tolerance of the Star Networks

The n-star network Sn is an undirected graph consisting of n! nodes labeled
with the n! permutations on symbols {1, 2, . . . , n}. There is an edge between
two nodes u and v in Sn if and only if the permutation v can be obtained from

Strong Fault-Tolerance: Parallel Routing in Networks

611

the permutation u by exchanging the positions of the ﬁrst symbol and another
symbol. The n-star network is (n − 1)-regular. The star networks have received
considerable attention as an attractive alternative to the widely used hypercube
network model [2].
Each node u in the n-star network Sn , which is a permutation on the symbols {1, 2, . . . , n}, can be given as a product of disjoint cycles (called the cycle
structure for u) [5]. For each 2 ≤ i ≤ n, an operation ρi on the permutations
of {1, 2, . . . , n} is deﬁned such that ρi (u) is the permutation obtained from the
permutation u by exchanging the ﬁrst symbol and the ith symbol in u.
Denote by ε the identity permutation �12 · · · n�. Since the n-star network S n
is vertex-symmetric [2], a set of node-disjoint paths from a node w to a node v can
be easily mapped to a set of node-disjoint paths from a node u to ε. Therefore,
we only need to concentrate on the construction of node-disjoint paths from u
to ε in Sn . Let dist(u) denote the distance, i.e., the length of the shortest paths,
from u to ε in Sn . The value dist(u) can be easily computed using the formula
given in [2]. We say that an edge [u, v] (in this direction) in S n does not follow
the Shortest Path Rules if dist(u) ≤ dist(v) [6]. It is also easy to check whether
an edge follows the Shortest Path Rules [6].
Lemma 1. If an edge [u, v] in Sn does not follow the Shortest Path Rules, then
dist(v) = dist(u) + 1. Consequently, let P be a path from u to ε in which exactly
k edges do not follow the Shortest Path Rules, then the length of the path P is
equal to dist(u) + 2k.
For the n-star network Sn , let Sn [i] be the set of nodes in which the symbol 1
is at the ith position. It is well-known [1] that the set Sn [1] is an independent set,
and the subgraph induced by the set Sn [i] for i � = 1 is an (n − 1)-star network.
Our parallel routing algorithm is heavily based on the concept of bridging
paths that connect a given node to a speciﬁc substar network in the n-star
network. The following lemma will serve as a basic tool in our construction.
Lemma 2. Let u be any non-faulty node in the substar Sn [i] with ki ≤ n − 3
faulty nodes, i � = 1. A fault-free path P from u to ρi (ε) can be constructed in
Sn [i] in time O(ki n + n) such that at most two edges in P do not follow the
Shortest Path Rules. In case u has a cycle of form (i1), the constructed path P
has at most one edge not following the Shortest Path Rules.
Deﬁnition 2. Let u be a node in the n-star network Sn and u� be a neighbor of
u in the substar Sn [i], i � = 1. For each neighborv of u� , v � =u, a (u� , j)-bridging
path (of length at most 4) from u to the substar Sn [j], j � = 1, i, is deﬁned as
follows: if v is in Sn [1] then the path is [u, u� , v, ρj (v)], while if v is in Sn [i] then
the path is [u, u� , v, ρi (v), ρj (ρi (v))].
Thus, from each neighbor u� in Sn [i] of the node u, i � = 1, there aren − 2
(u , j)-bridging paths of length bounded by 4 that connect the node u to the
substar Sn [j].
Since no two nodes in Sn [i] share the same neighbor in Sn [1] and no two
nodes in Sn [1] share the same neighbor in Sn [j], for any neighbor u� of u, two
�

612

J. Chen and E. Oh

(u� , j)-bridging paths from u to Sn [j] have only the nodes u and u� in common.
Moreover, for any two neighbors u� and u�� of u in Sn [i] (in this case, the node
u must itself be also in Sn [i]), since u� and u�� have no other common neighbor
except u (see, for example, [9]), a (u� , j)-bridging path from u to Sn [j] and a
(u�� , j)-bridging path from u to Sn [j] share no nodes except u.
Deﬁnition 3. Let u be a node in Sn and let u� be a neighbor of u in Sn [i],
i � = 1. A (u� , j)-bridging path P from the node u to the substar Sn [j] is divergent
if in the subpath of P from u to Sn [1], there are three edges not following the
Shortest Path Rules.
Note that the subpath from u to Sn [1] of a (u� , j)-bridging path P contains
at most three edges. In particular, if the subpath contains only two edges, then
the path P is automatically non-divergent.
In case there are no faulty nodes in the n-star network, each divergent (u� , j)bridging path can be eﬃciently extended into a path from u to ρj (ε), as shown
in the following lemma. A detailed proof for the lemma can be found in [13].

Star-PRouting
Input: a non-faulty node u in Sn with at most n − 3 faulty nodes.
Output: min{df (u), df (ε)} parallel paths of length ≤ dist(u) + 8 from u to ε.
1. if the node u is in Sn [1]
1.1. then for each j � = 1 with bothρj (u) and ρj (ε) non-faulty do
construct a path Pj of length ≤ dist(u) + 6 in Sn [j] from u to ε;
1.2. else (* the node u is in a substar Sn [i], i � = 1 *)
1.2.1. if the node ρi (ε) is non-faulty
then pick a non-faulty neighbor v of u and construct a path P v of
length ≤ dist(u) + 4 from u to ε such that all internal nodes
of Pv are in Sn [i] and Pv does not intersect a (u� , j)-bridging
path for any non-faulty neighbor u� � =v of u;
1.2.2. if the neighbor u1 = ρi (u) of u in Sn [1] is non-faulty
then ﬁnd j � = 1, i, such that both ρj (u1 ) and ρj (ε) are non-faulty;
extend the path [u, u1 , ρj (u1 )] from ρj (u1 ) to ρj (ε) in Sn [j]
to make a path of length ≤ dist(u) + 8 from u to ε;
2. maximally pair the non-faulty neighbors of u and ε that are not used
in step 1: (u�1 , ρj1 (ε)), . . ., (u�g , ρjg (ε));
3. for each pair (u� , ρj (ε)) constructed in step 2 do
3.1.
if there is a non-divergent (u� , j)-bridging path P with neither
faulty nodes nor nodes used by other paths
then pick this (u� , j)-bridging path P
else pick a divergent (u� , j)-bridging path P with neither faulty
nodes nor nodes used by other paths;
3.2.
extend the path P into a fault-free path Pu� of length ≤ dist(u) + 8
from u to ε such that the extended part is entirely in Sn [j];
Fig. 1. Parallel routing on the star network with faulty nodes

Strong Fault-Tolerance: Parallel Routing in Networks

613

Lemma 3. There is an O(n) time algorithm that, for a divergent (u� , j)-bridging
path P from a node u to a substar Sn [j], extends P in Sn [j] into a path Q from u
to ρj (ε), in which at most 4 edges do not follow the Shortest Path Rules. Moreover, for two divergent (u� , j)-bridging paths P1 and P2 , the two corresponding
extended paths Q1 and Q2 have only the nodes u, u� , and ρj (ε) in common.
Based on the above discussion, we are now ready to present our parallel
routing algorithm on star networks with faults, which is given in Figure 1.
Step 1 of the algorithm constructs certain number of paths between nonfaulty neighbors of the node u and non-faulty neighbors of the node ε, Step 2
of the algorithm maximally pairs the rest non-faulty neighbors of u with the
rest non-faulty neighbors of ε. It is easy to see that the number of pairs constructed in Step 2 plus the number of paths constructed in Step 1 is exactly
min{df (u), df (ε)}. Since Step 3 of the algorithm constructs a path from u to ε
for each pair constructed in Step 2, the algorithm Star-PRouting constructs
exactly min{df (u), df (ε)} paths from u to ε. In fact, we can prove the following
theorem (a detailed proof of the theorem can be found in [13]).
Theorem 1. If the n-star network Sn has at most n − 3 faulty nodes and the
node ε is non-faulty, then for any non-faulty node u in Sn , in time O(n2 ) the
algorithm Star-PRouting constructs min{df (u), df (ε)} node-disjoint fault-free
paths of length bounded by dist(u) + 8 from the node u to the node ε.
The following example shows that the bound on the path length in Theorem 1
is actually almost optimal. Consider the n-star network Sn . Let the source node
be u = (21), here we have omitted the trivial cycles in the cycle structure. Then
dist(u) = 1. Suppose that all neighbors of u and all neighbors of ε are nonfaulty. By Theorem 1, there are n − 1 node-disjoint fault-free paths from u to
ε. Thus, for each i, 3 ≤ i ≤ n, the edge [u, ui ] leads to one Pi of these nodedisjoint paths from u to ε, where ui = (i21). Note that the edge [u, ui ] does not
follow the Shortest Path Rules. Now suppose that the node (i2)(1) is faulty, for
i = 3, 4, . . . , n − 1 (so there are n − 3 faulty nodes). Then the third node on
the path Pi must be vi = (ji21) for some j � = 1, 2, i, and the edge [ui , vi ] does
not follow the Shortest Path Rules. Since the only edge from vi that follows the
Shortest Path Rules is the edge [vi , ui ], the next edge [vi , wi ] on Pi again does
not follow the Shortest Path Rules. Now since all the ﬁrst three edges on P i do
not follow the Shortest Path Rules, by Lemma 1, dist(wi ) = dist(u) + 3 = 4,
and the path Pi needs at least four more edges to reach ε. That is, the length of
the path Pi is at least 7 = dist(u) + 6. Thus, with n − 3 faulty nodes, among the
n − 1 node-disjoint paths from u to ε, at least n − 3 of them must have length
larger than or equal to dist(u) + 6.
The situation given above seems a little special since the distance dist(u)
from u to ε is very small. In fact, even for nodes u with large dist(u), we can
still construct many examples in which some of the node-disjoint fault-free paths
connecting u and ε must have length at least dist(u) + 6 (see [13] for details).

614

3

J. Chen and E. Oh

Strong Fault-Tolerance of the Hypercube Networks

The construction of parallel routing paths in the star networks in the previous
section heavily takes the advantage of the orthogonal decomposition structure
{Sn [1], Sn [2], . . . , Sn [n]} of the star networks. In particular, the (u� , j)-bridging
paths route a node u through the substar Sn [1] to the substar Sn [j] so that extension of the paths can be recursively constructed in the substar S n [j]. Unfortunately, the hypercube networks do not have a similar orthogonal decomposition
structure so the above techniques are not applicable. We need to develop new
techniques for parallel routing in the hypercube networks with faults. Because
of space limit, some details are omitted. Interested readers are referred to [14].
Recall that an n-cube network Qn is an undirected graph consisting of 2n
nodes labeled by the 2n binary strings of length n. Two nodes are adjacent if
they diﬀer by exactly one bit. An edge is an i-edge if its two ends diﬀer by the
ith bit. The (Hamming) distance dist(u, v), i.e., the length of the shortest paths,
from u to v is equal to the number of the bits in which u and v diﬀer. Since
the n-cube network Qn is vertex-symmetric, we can concentrate, without loss
of generality, on the construction of node-disjoint paths from a node of form
u = 1r 0n−r to the node ε = 0n . Deﬁne dist(u) = dist(u, ε).
The node connected from the node u by an i-edge is denoted by ui , and the
node connected from the node ui by a j-edge is denoted by ui,j . A path P from
u to v can be uniquely speciﬁed by a sequence of labels of the edges on P in
the order of traversal, denoted by u�i1 , . . . , ir �v. This notation can be further
extended to a set of paths. Thus, for a set S of permutations, u�S�v is the set
of paths of the form u�i1 , . . . , ir �v, where �i1 , . . . , ir � is a permutation in S.
Our parallel routing algorithm is based on an eﬀective pairing of the neighbors
of the nodes u and ε. We ﬁrst assume that the nodes u and ε have no faulty
neighbors. We pair the neighbors of u and ε by the following strategy.
prematch-1
pair ui with εi−1 for 1 ≤ i ≤ r,1 and pair uj with εj for r + 1 ≤ j ≤ n.
Under the pairing given by prematch-1, we construct parallel paths between
the paired neighbors of u and ε using the following procedure.
procedure-1
1. for each 1 ≤ i ≤ r, construct n − 2 paths from ui to εi−1 , r − 2
of them are of the form ui �S1 �εi−1 , where S1 is the set of all cyclic
permutations of the sequence (i + 1, . . . , r, 1, . . . , i − 2); and n − r
of them are of the form ui �h, i + 1, . . . , r, 1, . . . , i − 2, h�εi−1 , where
r + 1 ≤ h ≤ n.
2. for each r + 1 ≤ j ≤ n, construct n − 1 paths from uj to εj , r
of them are of the form uj �S2 �εj , where S2 is the set of all cyclic
permutations of the sequence (1, 2, . . . , r), and n − r − 1 of them are
of the form uj �h, 1, 2, . . . , r, h�εj , where h � =j, and r + 1 ≤ h ≤ n.
1

The operations on indices are by mod r. Thus, ε0 is interpreted as εr .

Strong Fault-Tolerance: Parallel Routing in Networks

615

The paths constructed by cyclic permutations of a sequence are pairwisely
disjoint(see, for example [18]). It is easy to verify that for each pair of neighbors
of u and ε, the paths constructed between them are pairwisely disjoint.
Lemma 4. Let (uh , εg ) and (us , εt ) be two pairs given by prematch-1. Then,
there is at most one path in the path set constructed by precedure-1 for the
pair (uh , εg ) that shares common nodes with a path in the path set constructed
by precedure-1 for the pair (us , εt ).
Since the n-cube network Qn may have up to n − 2 faulty nodes, there
is a possibility that for a pair (ui , εi−1 ) constructed by prematch-1, where
1 ≤ i ≤ r, all n − 2 paths constructed by precedure-1 from ui to εi−1 are
blocked by faulty nodes. In this case, we can directly construct n node-disjoint
paths from u to ε, as follows.
Assumption. there is a pair (ui , εi−1 ) given by prematch-1, 1 ≤ i ≤ r,
such that all n − 2 paths constructed by prematch-1 for the pair are
blocked by faulty nodes.
prematch-2
1. pair ui with εi−2 , ui−1 with εi , and ui+1 with εi−1 ;
2. for other neighbors of u and ε, pair them as in prematch-1;
procedure-2
1. from ui to εi−2 : ui �i − 1, . . . , r, 1, . . . , i − 3�εi−2 ;
2. from ui−1 to εi : ui−1 �i + 1, . . . r, 1, . . . , i − 2�εi ;
3. from ui+1 to εi−1 : ui+1 �i + 2, . . . , r, 1, . . . , i − 2, i�εi−1 ;
4. for g � =i − 1, i, i + 1, 1 ≤ g ≤ r: ug �g + 1, . . . , r, 1, . . . , g − 2�εg−1 ;
5. for r + 1 ≤ j ≤ n: if i = 1 then uj �2, . . . , r, 1�εj else uj �1, . . . , r�εj .
Lemma 5. Under the conditions of prematch-2, the algorithm procedure-2
constructs n fault-free parallel paths of length ≤ dist(u) + 4 from u to ε.

Now we consider the case in which the nodes u and ε have faulty neighbors.
We apply the following pairing strategy, which pairs the edges incident on the
neighbors of the nodes u and ε, instead of the neighbors of u and ε.
prematch-3
for each edge [ui , ui,i� ] where both ui and ui,i� are non-faulty do
1. if 1 ≤ i, i� ≤ r and i� = i + 1, then pair [ui , ui,i� ] with the edge
[εi−1,i−2 , εi−1 ], if εi−1,i−2 and εi−1 are non-faulty;
2. if 1 ≤ i, i� ≤ r and i� = i − 1, then pair [ui , ui,i� ] with the edge
[εi� −1,i� −2 , εi� −1 ], if εi� −1,i� −2 and εi� −1 are non-faulty;
3. otherwise, pair [ui , ui,i� ] with the edge [εj,j � , εj ] if εj,j � and εj are
non-faulty, where the indices j and j � are such that prematch-1
pairs the node ui� with εj , and the node ui with εj � .

Note that it is possible that an edge [ui , ui,i� ] with both ui and ui,i� non-faulty
is not paired with any edge because the corresponding edge in prematch-3
contains faulty nodes. For each pair of edges given by prematch-3, we construct
a path as follows.

616

J. Chen and E. Oh

procedure-3
1. for 1 ≤ i, i� ≤ r, i� = i + 1, and paired edges [ui , ui,i� ], [εi−1,i−2 , εi−1 ],
construct the path ui �i� , . . . i − 2�εi−1 ;
2. for i ≤ i, i� ≤ r, i� = i − 1, and paired edges [ui , ui,i� ],
[εi� −1,i� −2 , εi� −1 ], construct a path by ﬂipping i and i� in the path
ui� �i, . . . , i� − 2�εi� −1 ;
3. Otherwise, for paired edges [ui , ui,i� ], [εj,j � , εj ], if i < i� , construct a
path by ﬂipping j and j � in the path ui �i� , . . . j�εj � ; if i > i� , construct
a path by ﬂipping i and i� in the path ui� �i, . . . j � �εj .

Now we are ready to present our main algorithm for parallel routing in the
hypercube networks with faults. The algorithm is given in Figure 2.

Cube-PRouting
input: non-faulty nodes u = 1r 0n−r and ε = 0n in Qn with ≤ n − 2 faults.
output: min{df (u), df (ε)} parallel paths of length ≤ dist(u) + 4 from u to ε.
1. case 1. u and ε have no faulty neighbors
for each pair (ui , εj ) given by prematch-1 do
1.1.
if all paths for (ui , εj ) by procedure-1 include faulty nodes
then use prematch-2 and procedure-2 to construct n parallel
paths from u to ε; STOP.
1.2.
if there is a fault-free unoccupied path from ui to εj by procedure-1
then mark the path as occupied by (ui , εj );
1.3.
if all fault-free paths constructed for (ui , εj ) include occupied nodes
then pick any fault-free path P for (ui , εj ), and for the pair (ui� , εj � )
that occupies a node on P , ﬁnd a new path;
2. case 2. there is at least one faulty neighbor of u or ε
for each edge pair ([ui , ui,i� ], [εj,j � , εj ]) by prematch-3 do
2.1.
if there is a fault-free unoccupied path from ui to εj by procedure-3
then mark the path as occupied by the pair ([ui , ui,i� ], [εj,j � , εj ]);
2.2.
if all fault-free paths for the pair include occupied nodes
then pick any fault-free path P for the edge pair, and for the edge
pair that occupies a node on P , ﬁnd a new path.
Fig. 2. Parallel routing on the hypercube network with faulty nodes

Lemma 5 guarantees that step 1.1 of the algorithm Cube-PRouting constructs n fault-free parallel paths of length ≤ dist(u) + 4 from u to ε. Step 1.3
of the algorithm requires further explanation. In particular, we need to show
that for the pair (ui� , εj � ), we can always construct a new fault-free path from
ui� to εj � in which no nodes are occupied by other paths. This is ensured by the
following lemma.
Lemma 6. Let (ui , vj ) and (ui� , vj � ) be two pairs given by prematch-1 such
that two paths constructed for (ui , vj ) and (ui� , vj � ) share a node. Then the algorithm Cube-PRouting can always ﬁnd fault-free paths for (ui , vj ) and (ui� , vj � ),
in which no nodes are occupied by other paths.

Strong Fault-Tolerance: Parallel Routing in Networks

617

A similar analysis shows that step 2.2 of the algorithm Cube-PRouting can
always construct a new fault-free path without nodes occupied by other paths.
Let us summarize all these discussions in the following theorem.
Theorem 2. If the n-cube network Qn has at most n − 2 faulty nodes, then
for each pair of non-faulty nodes u and v in Qn , in time O(n2 ) the algorithm
Cube-PRouting constructs min{df (u), df (v)} node-disjoint fault-free paths of
length bounded by dist(u, v) + 4 from u to v.

4

Conclusion

Network strong fault-tolerance is a natural extension of the study of network
fault tolerance and network parallel routing. In particular, it studies the fault
tolerance of large size networks with faulty nodes. In this paper, we have demonstrated that the popular interconnection networks, such as the hypercube networks and the star networks, are strongly fault-tolerant. We developed algorithms of running time O(n2 ) that for two given non-faulty nodes u and v in
the networks, constructs the maximum number (i.e., min{df (u), df (v)}) of nodedisjoint fault-free paths from u to v such that the length of the paths is bounded
by dist(u, v) + 8 for the star networks, and bounded by dist(u, v) + 4 for the hypercube networks. The time complexity of our algorithms is optimal since each
path from u to v in the network Sn or Qn may have length as large as Θ(n),
and there can be as many as Θ(n) node-disjoint paths from u to v. Thus, even
printing these paths should take time O(n2 ). We have shown that the length of
the paths constructed by our algorithm for the star networks is almost optimal.
For the n-cube network Qn , the length of the paths constructed by our algorithm
is bounded by dist(u, v)+4. It is not diﬃcult to see that this is the best possible,
since there are node pairs u and v in Qn with n − 2 faulty nodes, for which any
group of min{df (u), df (v)} parallel paths from u to v contains at least one path
of length at least dist(u, v) + 4.
We should mention that Rescigno [16] recently developed a randomized parallel routing algorithm on star networks with faults, based on the Information
Disersal Algorithm (IDA) [15]. The algorithm in [16] is randomized thus it does
not always guarantee the maximum number of node-disjoint paths. Moreover, in
terms of the length of the constructed paths and running time of the algorithms,
our algorithms seem also to have provided signiﬁcant improvements.

References
1. S. B. Akers, D. Harel, and B. Krishnamurthy, The star graph: an attractive
alternative to the n-cube, Proc. Intl. Conf. of Parallel Proc., (1987), pp. 393-400.
2. S. B. Akers and B. Krishnamurthy, A group-theoretic model for symmetric
interconnection networks, IEEE Trans. on Computers 38, (1989), pp. 555-565.
3. S. B. Akers and B. Krishnamurthy, The fault tolerance of star graphs, Proc.
2nd International Conference on Supercomputing, (1987), pp. 270-276.

618

J. Chen and E. Oh

4. N. Bagherzadeh, N. Nassif, and S. Latifi, A routing and broadcasting scheme
on faulty star graphs, IEEE Trans. on Computers 42, (1993), pp. 1398-1403.
5. G. Birkhoff and S. MacLane, A Survey of Modern Algebra, The Macmillan
Company, New York, 1965.
6. C. C. Chen and J. Chen, Optimal parallel routing in star networks, IEEE
Trans. on Computers 46, (1997), pp. 1293-1303.
7. M.-S. Chen and K. G. Shin, Adaptive fault-tolerant routing in hypercube
multi-computers, IEEE Trans. Computers 39 (1990), pp. 1406-1416.
8. G. -M. Chiu and S. -P. Wu, A fault-tolerant routing strategy in hypercube
multicomputers, IEEE Trans. Computers 45 (1996), pp. 143-154.
9. K. Day and A. Tripathi, A comparative study of topological properties of
hypercubes and star graphs, IEEE Trans. Parallel, Distrib. Syst. 5, (1994), pp.
31-38.
10. M. Dietzfelbinger, S. Madhavapeddy, and I. H. Sudborough, Three disjoint path paradigms in star networks, Proc. 3rd IEEE Symposium on Parallel and
Distributed Processing, (1991), pp. 400-406.
11. Q.-P. Gu and S. Peng, Fault tolerant routing in hypercubes and star graphs,
Parallel Processing Letters 6, (1996), pp. 127-136.
12. T. C. Lee and J. P. Hayes, Routing and broadcasting in faulty hypercube
computers, Proc. 3rd Conf. Hypercube Concurrent Computers and Applications
(1988), pp. 625-630.
13. E. Oh and J. Chen, Strong fault-tolerance: parallel routing in star networks
with faults Tech. Report, Dept. Computer Science, Texas A&M University (2001).
14. E. Oh and J. Chen, Parallel routing in hypercube networks with faulty nodes,
Tech. Report, Dept. Computer Science, Texas A&M University (2001).
15. M. O. Rabin, Eﬃcient dispersal of information for security, load balancing, and
fault tolerance, Journal of ACM 36, (1989), pp. 335-348.
16. A. A. Rescigno, Fault-tolerant parallel communication in the star network,
Parallel Processing Letters 7, (1997), pp. 57-68.
17. A. A. Rescigno and U. Vaccaro, Highly fault-tolerant routing in the star
and hypercube interconnection networks, Parallel Processing Letters 8, (1998), pp.
221-230.
18. Y. Saad, M. H. Schultz, Topological properties of hypercubes, IEEE Transactions on Computers, 37, (1988), pp. 867-872.

