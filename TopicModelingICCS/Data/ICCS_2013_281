Available online at www.sciencedirect.com

Procedia Computer Science 18 (2013) 1446 – 1455

2013 International Conference on Computational Science

Fostering the creative development of computer science students
in programming and interaction design
Deller James Ferreira*
Informatics Institute – Federal University of Goiás, Campus Samambaia – Caixa postal 131, Goiânia – 74001-970, Brazil

Abstract
This study explores the enhancement of creativity in undergraduate students studying computer science.
We assume that everybody has creative potential. As a teacher, we can explicitly encourage creative
thinking, providing space to let students collaboratively discover and explore their creativity. This paper
presents a dialogical framework to help the teacher fostering creativity among students of computer
science in programming and interaction design. The framework presented here involves underlying
dialogic processes from seven collaborative and creative dimensions that allow students to develop
creativity. The use of the pedagogical framework makes it possible to teachers create significant
interaction design and computer programming experiences to students, motivating them to activate
mental processes underlying creativity. Students can simultaneously activate two or more ideas, images,
or thoughts and have them interact, prompt thought experiments, change cognitive perspectives, raise
new points of view, and risk category mistakes.
©
© 2013
2013 The
The Authors.
Authors. Published
Published by
by Elsevier
Elsevier B.V.
B.V. Open access under CC BY-NC-ND license.
peer
review under
responsibility
of the
organizers
of the
International
Conference
on Computational
Selection and
and/or
peer-review
under
responsibility
of the
organizers
of 2013
the 2013
International
Conference
on Computational
Science
Keywords: creativity; programming; interaction design

1. Introduction
To stay competitive in the 21st century, the global community is valuing creativity and innovation as driving
forces in many sectors of our society. Governments around the world are seeking people who can think
creatively and be innovative. There is an increasing recognition of the economic value of people’s creative
ideas. Creative thinking not only reveals the nature of things and its internal relationships, but also produces
innovations, bringing new, new interpretations and valuable products. When a person is able to elaborate
* Deller James Ferreira. Tel.: +55-62-35211181; fax: +55-62-35211182.
E-mail address: deller@inf.ufg.br.

1877-0509 © 2013 The Authors. Published by Elsevier B.V. Open access under CC BY-NC-ND license.
Selection and peer review under responsibility of the organizers of the 2013 International Conference on Computational Science
doi:10.1016/j.procs.2013.05.312

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

creative ideas, he can take the initiative to innovate, producing, for example, new understandings, new theories,
and new methods.
It has been widely acknowledged that while creativity is advantageous to any form of study, the perceived
lack of creativity, and its expression, in computer science students severely hampers their ability to
accommodate the skills necessary to successfully perform within the information technology industry. To
develop students’ creativity thinking has important significance and is an essential mission for educators,
especially for the computer science educators. The importance of creative thinking in computer science field is
very evident. Computer science is one of the most active fields, where new knowledge, new technologies, and
new theories continually emerge. Computer science is an arena where creative people display their talent.
Moreover, creativity is an important issue for the future of new technology systems. There are expanding
opportunities for the designers of new technologies to develop new tools and innovative applications.
Therefore, computer science education should reflect this strong sense of innovation. The relation of computer
teaching and innovation should be close, in order to foster the student's creative thinking.
In traditional education, teachers tend to focus on transmitting knowledge, and neglect fostering student's
creative thinking idea. This causes that students are passive recipients of knowledge, rather than proactive
thinking, student's creative thinking idea become indifferent, and student's creative thinking ability is weak [1].
Traditionally the mind-set of a typical computer science student is focused on embracing, in the best possible
way, the instructed rules, knowledge, and goals. Creative thinking is rarely supported or encouraged. Teachers
should enable students to gradually enhance their creative thinking ability.
In order to o develop students’ creativity, teachers should be aware that creative thinking drive development
of computer science and understand creative processes underling computer science subjects. In this work, we
focus on a pedagogical framework to support undergraduate computers science students to develop creative
applications and interfaces in our courses. Here, we provide a pedagogic alternative of how educators can move
beyond the rhetoric to effective practices for teaching and fostering creativity in programming and interaction
design. The aim of this work is to explore understanding of human creativity to better inform to teachers how to
teach creativity in the design of interactive computer systems and program design.
For helping teachers to understand the close relationship between programming and interaction design and
creative thinking, we propose a framework containing seven dimensions that impart dialogic processes that has
the potential to trigger creativity. There are two framework contextualizations to meet the constraints of the
programming and interaction design domains. In human-computer interaction context we identify guidelines
and interaction patterns and anti-patterns as relevant factors. In programming context we approach
programming patterns, programming anti-patterns, and programming language features as key elements in
programming. The contextualized frameworks serve as a tool for teachers to develop activities to promote
creativity.
2. A Framework to Foster Creative Development of Computer Science Students
Facilitating the development of creative thinking presupposes that creativity is teachable and learnable.
Creativity was once considered to be an entirely innate, not teachable ability. This view is developed based on
the recognition of the role of genes in determining individual differences in creative potential, but also
recognizes the students potential for growth and development. It is now a widely accepted assertion that
creative abilities can evolve [2]. But, to teach creativity, the teacher needs to know creative thinking emerges.
Creativity is often defined as the ability to produce work that is both original and useful, including some
requirements as to change one’s approach to a problem, to produce ideas that are both relevant and adaptive
regarding task constraints, to see beyond the immediate situation, and to redefine the problem or some aspect of
it [3]. Nevertheless, the word ‘creativity’ evokes many different interpretations. Related concepts such as
novelty, innovation and originality are just components of a larger and more complex scenario. Overall, there is

1447

1448

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

a strong agreement amongst creativity researchers that creativity is the result of the combined effects of
multiple mental processes.
Lenk [4] advocates that creativity cannot be reduced to a set of antecedent elements and their principles and
rules, cannot be deduced logically or causally from such a given set of elements, is known to be quite
spontaneous, is unpredictable, and is characterized by multiple collisions, discontinuities, collusions,
confounding phenomena, interconnections, and interstimulations of many kinds and planes. As Boden [5]
points out, novel, creative results emerge from the application of diverse mental operations. She argues that
new mental representations emerge from elaborating the problem, elaborating the design, and assessing the
current state of the design. A central part of creative thinking is the creation of novel mental structures through
the combination of elements of different mental spaces (sets of objects and relationships), a process so
ubiquitous and fast that it is largely invisible.
According to Abel [6] creativity is related to thinking strategies such as generating multidimensional
associations, coupling predicates and subjects to unusual judgments, building analogies between remote realms
or referents only remotely associated with each other, producing metaphors and transferring them from one
area to another in order to organize material in a new and informative way, simultaneously activating two or
more ideas, images, or thoughts and having them interact, prompting thought experiments, breaking common
and established patterns of observation, modifying and violating traditional ideas, changing cognitive
perspectives, raising new points of view, risking category mistakes, modifying hidden collusions, modifying,
transforming, and violating established rules, principles, patterns, and worldviews.
Although creativity is a complex phenomenon, there has been recognized that the social and collaborative
dimensions are crucial in the creative production [7] Innovations are co-constructions that emerge from interpersonal relationships. In collaborative learning, the main goal is to create some knowledge that might answer a
question posed or to solve a problem, providing group members a deeper understanding of a subject. In
knowledge building discourse, ideas, theories, hypotheses, and other similar intellectual artefacts are objects of
inquiry. They are scrutinized, improved, and put to new uses as participants engage in progressive discourse [8]
But it only happens if students engage themselves in productive discussions.
Considering that while teachers want to encourage student’s creativity, they are commonly uncertain how to
do this [9] and regarding that collaborative and creative problem-solving skills involves more than just a mere
application of a model and it’s accompanied by associated thinking strategies and requires flexibility [10] how
the teacher can foment productive discussions?
To overpass this problem we propose here a pedagogical framework that provides an understanding about
processes that triggers creativity and particularities of the subject domain to be taught. The framework is
theoretically supported by the collaborative learning approach with the aim to promote productive discussions.
The framework is theoretically based on Wegerif’s dialogic theory of thinking and teaching thinking. Wegerif
[11] introduces a dialogic theory of thinking and teaching thinking, that considers the metaphor of thinking as
dialogue. Under this perspective, thinking is understood as a function that describes a way of responding to
other´s ideas and to new possibilities. He argues in favor that when students engage more effectively in
complex and meaningful dialogues with others we are teaching them the essence of thinking and proposes an
approach to teaching thinking as opening, widening and deepening a dialogic space. Opening of a dialogic
space allows many voices to enter in and inter-animate each other in a way which creatively opens up new
possibilities. Students are engaged in a widen dialog space when they are better acquainted with the range of
positions that are possible and they deepen a debate when they are able to go deeper into a single bit of the
argument to explore its assumptions and implications.
The framework to facilitate collaborative creative learning involves dialogic processes that explicitly prompt
teachers to be aware of possible ways to create and improve an idea, opening, deepening and widening the
dialogic space. The framework enables the teacher models tasks that flexibilize discussions, directing students’
attention to specific features of the problem in order to arrive at the solution. The dialogic processes

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

encompasses discussions that trigger problem solving processes. The framework embraces seven kinds of
transformations of dialogic space: immersing, unpacking opportunities, exploring complementary paths,
overcoming boundaries, expanding, discovering unpredictable places, and developing. These seven
dimensions compose a scheme to organize dialogic processes according to its effects propelling the dialogic
space. We consider here that the axis that ranges from adaptive to innovative perspectives is a realm that
covers a huge spectrum of the dialogic space. Some of these perspectives are addressed as creative dimensions
that have the potential to deepen and widen the dialogic space.
2.1. Immersing
This dimension concerns with the enhancement of the analogical and metaphorical thinking.
Analogical reasoning is one of the most important problem-solving heuristics. It is related to the transfer of
solutions from previously known problems to novel ones and the ability to abstract similarities and apply
previous productive experiences to new situations. According to Jonassen [12], when students scrutinize
similar problems for their structures, they gain more robust conceptual knowledge about the problems,
constructing stronger problem schema. This dimension is also concerned with the search for information. To be
successful at discovery and innovation students should be aware of previous and related work and should be
aware of principles and techniques to be applied in the development of their work. The more diverse your
knowledge, the more interesting the interconnections. Students widen the dialogic space while jointly search
information having an objective in mind and search information for inspiration, detect relevant and irrelevant
information, recognize familiar information and cope with new information, reapply techniques and adapt
techniques, experience having an open mind and experience having an objective, state goals and brainstorm,
adapt hypothesis and make conjectures, explore similarities and differences of a metaphor, and explore
similarities and differences of an analogy.
2.2 Unpacking Opportunities
This dimension is related to the divergent thinking ability elaboration and fluency. Guilford advocates that
elaboration and fluency are two fundamental components of the creative process [13]. The teacher can boost
the students´ improvement of these abilities to explicit what is already there but hidden and also to deal with
the who, what, why, and how elements of solution ideas. Students unpack opportunities collaboratively looking
for attributes and relationships among concepts and new ideas, and try to organize the information, deepening
the dialogic space. They recognize dependence and independence relations, necessary and sufficient
conditions, causes and effects, similarities and differences, correspondences and oppositions, class inclusion
and exclusion, associations and dissociations, hierarchy ascendant and descendant relations, order and
disorder, generalities and specificities, abstract and concrete features, potential and non-potential
uses/functions, and examples and counter-examples.
2.3 Exploring complementary paths
This dimension involves complementarities. Here, we elaborate dialogic processes based on MerleauPontian notion of “chiasm” [14], allowing a broader understanding and use of the dialogic processes. In
Merleau-Pontian notion of “chiasm,” two concepts emerge as complementary ways of referring to an idea. For
example, both sides, figure and ground, depend upon each other and can reverse around each other. This
divergence is considered to be a necessary and constitutive factor in allowing subjectivity to be possible at all.
However, he suggests that rather than involving a simple dualism, the divergence between touching and being
touched, or between the sentient and the sensible, mind and body, subject and object, self and other also allows
for the possibility of overlapping and encroachment between these two terms. For all dialog process we address
its complementary to address more possibilities of exploration of an idea and to achieve better awareness of

1449

1450

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

students.
2.4. Overcoming Boundaries
This dimension is related to an attempt to overcome it and visualize concepts and ideas in an open
minded way. Seeing an idea in different contexts and also seeing ideas in a bigger scenario is a way to
overcome conceptual barriers. Considering ideas in new contexts is a way of gaining insight about other
possible uses and meanings. This dimension is related to the divergent thinking ability flexibility. Guilford
advocates that flexibility is a fundamental component of the creative process [13]. Students widen the dialogic
space while jointly overcome a field of dialog situating the ideas in a bigger and context, performing
contextual shifting. They jointly search for relationships with “neighbor” ideas outside a given context, scope
and limitations, and constraints.
2.5 Expanding
This dimension entangles constructive interactions among students related to innovative construction of a
complex system of ideas. The main premise in this dimension is that unexpected and new arrangements and
other´s interpretation trigger new interpretations and ideas. Previous opinions and concepts are co-constructed
and students´ understandings expanded. Students integrate answers from many places in diverse ways, in a
process of transcending and exchanging different perspectives and constructing new ideas. Here, it is evoked
Dewey´s [15] notion of transactional inquiry to elaborate the creativity concept in a dialogic way. When
participants engage in inquiry together, new meanings are created as a co-production. The students widen the
dialogic space making together recombination and combination of similar or distinct concepts and ideas,
building on other´s ideas, and re-thinking their previous ideas. The students also try to make combinations of
possible disparate or unconnected ideas. They derive new knowledge on the basis of a lack of similarity
between two or more past constructs or elements from domains which are far apart.
2.6. Discovering Unpredictable Places
This dimension capitalizes on often way in which bad ideas become beneficial detours to good ideas.
The exploration of good ideas allows a local exploration of the dialogic space, which leaves unexplored large
areas of this space [16]. The exploration of bad ideas pulls the students to new unpredictable places, facilitating
a movement to far away areas, which thus overcome the drawbacks of the limited exploration of that good
ideas entail. Students widen the dialogic space, when they have the opportunity to explore a bad idea. They do
not only reflect about positive impacts, relevant implications or good features, but also reflect upon why a
failure occurred, about negative impacts, features and implications, why an idea did not have impact, and
problems created. They do not just eliminate the wrong paths, but reflect and take advantage of it. Students
turn ideas and concepts in new interpretations, also thinking about misconceptions.
2.7. Developing
This dimension encompasses the evaluation, critics, and bringing together of ideas. By means of
evaluations of ideas students are able to carry out decision making processes based on criteria application and
improve ideas considering its bad features. One important aspect of this dimension is that when students
evaluate and critique different perspectives and ideas they must be confronted with uncertainty and conceptual
conflict. Both are states of disequilibrium that activate a process of conflict resolution and a quest for certainty
[15]. Students deepen and widen the dialog space evaluating, comparing, selecting concepts and ideas,
considering different alternatives, pointing positive and negative outcomes based in criteria application,
starting a search for a more adequate cognitive perspective and reasoning process aiming to resolve conflict and
uncertainty.

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

3. Framework Contextualization in Programming
The dialogic framework for programming focuses on both programming language features and program
design issues in an integrated way and takes advantage of students´ discussions. During program design, the
teacher evokes dialogic processes to trigger exploratory discussions among students. Such students´ discussions
have the potential to facilitate the formation of various connections among different programming aspects that
propitiate the emergence of creative programmers.
Programs are computational solutions for real world problems. Learning programming demands abilities to
combine language features to create computational solutions. Both understanding static and dynamic
programming language features and knowing how to combine it are essential for developing computer
programs. Here, we go beyond language features and its combinations. The dialogic pedagogical approach
embraces the application of programming patterns and anti-patterns as an important aspect of creative
processes during program design. Under this perspective, programming design skills also involves the ability to
deal with programming patterns and algorithmic abilities to blend patterns and language features to construct
programs. Alexander [17] was the first researcher to approach design patterns. He originally defined design
patterns as reusable solutions to address frequently recurring problems in architecture. Design patterns have
been adopted in various computer science fields such as software engineering, human-computer interaction, elearning, and computer science education Some studies [18]-[19] show that programming expertise is partly
represented by a knowledge base of pattern-like chunks. Programming patterns are simple design patterns that
must be learned by programming novices. They are solutions to basic recurring algorithmic problems and form
the building blocks for the development of programs.
When students learn programming patterns they can “stand on the shoulders of giants”. Thus, students
possess a repertory of building blocks to exercise their creativity combining these blocks in an unlimited way.
Besides, they know many pieces of solutions becoming able to solve more interesting and complex problems.
Some patterns examples are: declare-use pattern, highlights that every programming language uses declared
identifiers to represent different kinds of entities in a program; encapsulation pattern, brings to focus the need
to build and utility tool; read-process-write pattern, focuses on the fact that any program segment may be
specified by describing the input that is needed, the process that will transform the input, and the output data
that will be generated; sequential choices pattern, applied in a situation where each action depends on a single
testable condition; loop with sentinel pattern, used when the programmer wants to repeat a set of actions while
a condition is true; counting loop pattern, used when the programmer wants to repeat a set of actions a
determined number of times; flag variable pattern, a flag is a variable you define to have one value until some
condition is true, in which case you change the variable's value, it is a variable you can use to control the flow
of a function or statement, allowing you to check for certain conditions while your function progresses;
accumulator pattern, an accumulator is a variable that need to be initiated by zero and be inside a loop to
accumulate values; and linear traversal pattern, it is a design process that allows to look at all relevant data
items one at a time.
The dialogic approach for programming also explores programming anti-patterns as a beneficial detour to
programming patterns. Programming anti-patterns are examples of how students inappropriately use their
algorithmic problem solving knowledge. Programming anti-patterns reflect learners’ naive thinking when they
stumbled over programming complexities. Dialogic approach anticipates programming anti-patterns in order to
encourage a better critical analysis of programs. Programming anti-patterns also help the programming patterns
understanding serving as springboards for programming patterns. Examples of programming anti-patterns are:
failure to combine patterns, for example, failure to combine linear traversal pattern and flag variable pattern to
search a given value in a uni-dimensional array, optimization problem, optimization can be attempted
inappropriately, specialization problem, patterns may not be adapted to specific situations, analogy problems,

1451

1452

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

prior experience may be applied inappropriately or wrong analogies may be drawn from natural language,
failure to set boundaries, when building a program boundary points may not be set right, unexpected cases,
uncommon cases may not be considered, details failure, minor parts of patterns may be overlooked, sequence
problems, students do not realize the program execution flow, failure to decompose a problem in sub-problems,
failure to test and fix the program, interpretation problem, students cannot understand program code, neither
making step-by step dynamic simulations nor visualizing patterns combinations, inconsistency problem,
students assume that a construct will work in the same manner in all situations, and flexibility problem,
students cannot be flexible in understanding new code, being aware that there are many different right solutions
to a problem.
The use of the pedagogical dialogic framework presented here makes possible to explore both innovative
creativity, that is original, transformational, and expressive and adaptive creativity that is logical, adequate, and
well-crafted. Programmers can be able to adapt and combine programming patterns, making use of pieces of
knowledge well-crafted done by experts, but also be able to create their own new solutions or new patterns for
a computational problem blending programming patterns and programming language knowledge development
in many creative directions. The dialogic approach is oriented towards an emphasis of students’ engagement in
different collaborative and creative dimensions that allows them to experience program design under different
perspectives enhancing their creative potential.
3. Framework Contextualization in Interaction Design
Design patterns are increasingly being used in software engineering education. Many pattern libraries have
been published [20]-[21] and more are appearing every year. A pattern focuses on the relationship between
problem, solution and context. The solution can be realized in different ways but has an invariant core, which
captures all the possible solutions to the problem given. Solutions described in patterns are proved to work in
practice, they are a proven solution for a common user interface or usability problem that occurs in a specific
context of work. Patterns communicate insights into design problems capturing the essence of problems and
designs in a compact form. They describe the problem in depth, the rationale for the solution, how to apply the
solution and some of the trade-offs in applying the solution [22].
Some research shows that the use of interaction patterns is successful [23]. It was shown that designers who
made more use of the available interaction patterns were able to produce better results than those not using the
patterns. Anti-patterns are also used to convey the knowledge in HCI. An anti-pattern is a solution that seems
like a good idea, but backfires badly when applied, and can cause an interface to fail. Anti-patterns are
literature written in pattern form to encode practices that do not work or that are destructive.
Guidelines, patterns, and anti-patterns exist to capture experts’ expertise and to communicate knowledge.
Design guidelines and patterns can be used to help the interface design, being used to aid the production of
usable design solutions. These design aids however, encourage and foster creativity or the generation of new
metaphors or alternative designs in a limited way. A trade-off exists between enforcing the use of standard
design guidelines or patterns and encouraging the development of creative design solutions. It is very difficult
to students to learn how to apply guidelines and patterns during interaction design. This work explores the
possibilities for developing a combined approach to teaching creative interface design. This approach proposes
the combined use of guidelines, patterns, and anti-patterns and the proposed framework to facilitate productive
discussions among students with the aim to produce usable and creative design solutions. Following we provide
an example of the framework application.
This task pays attention to Dimensions 1, 2, 4 and 5. In this example, the teacher follows the steps:
1. Choose a Web or desktop interface;
2. Ask the students to discuss while collaboratively decompose the interface, detecting the patterns used
in its design;

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

3. Change the application context;
4. Ask the students to discuss while collaboratively integrate, adapt, and elaborate the patterns to create a
new design in the new application context.
The dialogic processes took into account were “Decompose ideas”, “Combine ideas”, and “Recombine
ideas” from Dimension 5; “Perform contextual shifting” from Dimension 4; “Elaborate an idea” from
Dimension 2, and “Adapt techniques” from Dimension 1.
4. Framework Evaluation
Two preliminary case studies were conducted during one semester of an HCI course and one semester of an
introductory programing course.
4.1 The Programming Study
First, the teacher presented some program exemplifying programming patterns, presented examples of
programming patterns adaptation and combination, provided problems that requires minor and major patterns
adaptations and combinations, and motivated students to discuss the solutions that emerged from the group.
This mediation process focuses mostly on adaptive creativity in programming. Second, the teacher presented
and analysed some anti-patterns related to students’ misconceptions of students concerning program efficiency.
The teacher provided some examples of programs that perform the same tasks comparing their efficiency.
Afterwards, the teacher asked for each student in the group to solve new kinds of problems and motivated the
group to discuss the partial solutions. This mediation process focuses mostly on innovative creativity in
programming. Following, we present three examples of tasks based on the framework. These tasks were used
in the research.
In the first task, the students were asked to compile and execute the some programs, and discuss about their
good and bad features, for example, discuss if the counter and the accumulator patterns were properly designed
and if the repetitions occurred appropriately or not. The students were also asked to jointly explain why. Here,
the students had the opportunity to analyse programming anti-patterns, formulate and check hypothesis about
syntactic and semantic programming errors, analyse programming codes, make correlations among patterns
and kinds of problems, detect and correct programming errors, and apply debugging techniques. In the second
task, the students were asked to discuss in their group forum if a given program could be used in another realworld situation. They were also asked to build the new program code concerning another situation, evaluate
and compare the different solutions. In the third task, the students were asked to discuss in their group forum
how a program could be modified aiming a more interesting user interface. They were also asked to build the
new program code concerning another situation, evaluate and compare the different solutions.
The programs were evaluated considering students success in adapting and innovating program codes. First,
the observed data was students´ manifestation of language-based anti-patterns, such as sequence, interpretation,
inconsistency, and analogy problems. Second, we analysed pattern problems, i. e., students´ inability to
properly combine, specialize, optimize, and visualize details during patterns adaptations. Third, we checked
students´ skills to develop solutions to new problems, measured by means of innovative program code
generated. Students solved alone and in group 75 problems before framework application and 75 problems
after framework application. The experiment results showed that after the teacher application of the dialogic
framework language-based anti-patterns and patterns problems decreased while innovative program code
generated increased.
4.2 The Interaction Design Study
One class containing forty-eight under graduate students from human computer interaction course was

1453

1454

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

subdivided in 8 (eight) groups, each group containing 6 (six) students. The students were analysed considering
interaction and participation patterns in online discussion forums in Moodle Platform. There were assigned 7
(seven) collaborative tasks based on the framework dimensions to the students. The tasks are described
following.
Task 1. The students were asked to analyse 16 (sixteen) Websites, considering good and bad usages of
affordances and metaphors. The students were also invited to evaluate and critique other students’ ideas.
Task 2. The students were asked to analyse 7 (seven) Websites, considering usability guidelines. The
students were also invited to evaluate and critique other students’ ideas.
Task 3. First, each group must choose a good and bad Website. Second, the groups must justify your
choices, taking into account good and bad usages of affordances, good and bad usages metaphors, and usability
guidelines.
Task 4. The teacher presented usability guidelines and interaction patterns for mobile applications. The
students were asked to create a mobile version for a given Website, obeying the usability guidelines and
performing patterns adaptations and combinations.
Task 5. Make a collaborative paper interrelating the usability guidelines presented. Discuss in your group
forum.
Task 6. Criticize the Website of the Institute of Informatics. Discuss in your group forum.
Task 7. Make a re-design of the Institute of Informatics’ Website. Consider the interaction patterns
presented and discuted in class.
Interaction and participation patterns were analysed based on Newman, Webb and Cochrane’s adapted
model [24]. Successful interactions require broad and active students’ participation. The total number of
students’ posts was 773. So, there was a substantial participation of the students. The results indicated that
online interactions were cohesive. The students engaged critically or constructively in other students’ ideas in
50% of the posts. They asked and clarified doubts in 40% of the posts and acted solo in 10% of the posts. The
students used the guidelines as criteria to judge what is good and bad. In Task 1 the students did not know how
to judge what was a good or bad usage. In tasks 2, 3, and 6, the students justified their ideas by means of the
guidelines. Each group provided a distinct integration scheme for the guidelines. Each group had a different
interpretation. However, they provided designs as examples for their connections. It proofs that IHC is a
complex and ill-structured subject. The teacher should had confronted the different schemes and promoted
discussions involving the whole class in order to converge to a solution.
There was 70% of relevant posts and 30% of diversions. Also, in the relevant posts, were discussed
important points and issues. Task 4 was successfully and easily performed by the students. Due to the fact that
the great majority of students possessed i-phones or android interface mobile phones, the students could draw
on personal experience to design the mobile interface. The students successfully adapted and combined
interaction patterns, being able to apply previous information to solve a problem during the Website re-design.
There were widen discussions, containing many different points and aspects being analysed.
5. Conclusions
The preliminary results indicated that the framework presented here have the potential to allow students
collaboratively and creatively explore important creative strategies. By means of the dialogic framework, the
teacher is called to pay attention in a great repertoire of dialogic processes that enables him/her to promote
creative programming activities. Teachers are able to present activities that explore distinct collaborative and
creative dimensions that scaffold students in their creative process. The framework helps and challenges
teachers to be aware of how complex students´ activities can be elaborated during collaborative learning.
Teachers are invited to visualize creativity as a complex, multi-faced process that results from collaborative
tasks elaborated from framework dimensions. By using the framework the teacher is able to produce tasks that
fosters students’ dialogs in order to boost an active and relational state of thinking. The application of the
dialogic framework allows students’ flexibly exercise and discuss.
To ensure that the framework combined to usability guidelines, interaction design patterns and anti-patterns

Deller James Ferreira / Procedia Computer Science 18 (2013) 1446 – 1455

can indeed provide an effective connected approach to teaching HCI, we intend to further investigate its
application as future work. For at least four semesters of an HCI undergraduate course, there will be one class
taught considering collaborative learning, but not the dialogic framework (control group) and another one
taught by the proposed method (treatment group). Students performance will be investigated by discourse
analysis in order to check if there is knowledge co-construction and advancement as well as the achievement of
a deeper and wider knowledge in the collaborative settings. The discourse analysis will focus on analysis of
interaction and participation Patterns [24]. We will also analyze and compare the students´ designs by means of
an instrument to measure Website creativity [25] and indicators of creativity in solutions [26]. We also aim to
further investigate the framework contextualization in programming considering a similar approach.
Acknowledgements
This research is partially supported by FAPEG and CNPq.
References
[1] Jian, S. On the cultivation of creative thinking college students. China Higher Education Research 2000;10: 32–33.
[2] Do, E. Y., Gross, M. D. 2007. Environments for creativity – a lab for making things,” Seventh Creativity and Cognition Conference
Washington, DC, ACM Press, 27-36.
[3] Kneller, G. F. The art of science and creativity. New York, NY:Holt, Rinehart & Winston, Inc; 2005.
[4] Lenk, H. Creativity-multidimensioal associative or chaotic process? Methodological remarks concerning creative processes and
metaphors. In: Aesthetics and Innovation. In Aesthetics in contemporary philosophy: proceedings of the International Institute of
Philosophy conference. Tokyo. LIT Verlag Münster, 2009, p. 129-160.
[5] Boden, M. A. Dimensions of Creativity. MIT Press; 1996.
[6] Abel, G. The riddle of creativity: philosophy's view. Milieus of Creativity; 2: 53-72.
[7] Buckingham, D. Media Education – literacy, learning and comtemporary culture. Polity Press, Cambridge, UK 2003.
[8] Bereiter, C., Scardamalia, M. Learning to work creatively with knowledge. In: E. D. Corte, L. Verschaffel, N. Entwistle, & J. V.
Merriënboer (Eds.), Powerful learning environments: Unravelling basic components and dimensions Oxford: Elsevier Science. 2003,
p. 73-78.
[9] Sternberg, R. J. Successful intelligence: how practical and creative intelligence determine success in life. Simon & Schuster, New
York; 1996.
[10] Lazakidou, G., Retalis, S. Using computer supported collaborative learning strategies for helping students acquire self-regulated
problem-solving skills in mathematics. Computers and Education 2010, 54: 3-13.
[11] Wegerif, R. The Role of Dialog in Teaching Thinking in Technology. Dialogue and Development 2010; 338-357.
[12] Jonassen, D. H. 2010. Research issues in problem solving, The 11th International Conference on Education Research New
Educational Paradigm for Learning and Instruction.
[13] J. P. Guilford, The nature of human intelligence. New York: McGraw-Hill, 1967.
[14] Ponty, M. The visible and the invisible. Evanston: Northwestern U Press, 1968.
[15] Dewey, J. The quest for certainty: a study of the relation of knowledge and action. London: George Allen e Unwin, 1929.
[16] Dix, A., Ormerod, T., Twidale, B., Michael, B., Sas, C., Silva, A. P. G. , McKnight, L. 2006. “Why bad ideas are a good idea”,
Proceedings of the HCI Educators' Workshop HCIEd.2006-1 Inventivity: teaching theory, design and innovation in HCI, p. 24-28.
[17] Alexander, C. A. Pattern language: towns, buildings, construction. Oxford: Oxford University Press, 1977.
[18] Muller, O., Haberman, B., Averbuch, H. (2004). (An Almost) Pedagogical pattern for pattern-based problem-solving instruction. In:
2004 Proc. ItiCSE ACM Conf. , p. 102-106.
[19] Soloway, E, & Ehrlich, K. Empirical studies of programming knowledge. IEEE Transactions on Software Engeneering 1985; 10: 595609.
[20] Tidwell, J. Designing interfaces. 2nd Edition. O’Reilly, 2010.
[21] V. Welie, Patterns of Interaction Design. http://www.welie.com/. [retrieved: January, 2012]
[22] Brown, W. J., Malveau, R. C. Architectures. anti-patterns: refactoring software and projects in crisis. John Wiley and Sons, 1998.
[23] Schach, S. R. Object-oriented and classical software engineering. New York: McGraw Hill Higher Education, 2005.
[24] Sing, C. CKhine, M. S. An Analysis of Interaction and Participation Patterns in Online Community. Educational Technology &
Society 2006, 250-261.
[25] Cropley, D., Cropley, A. Recognizing and Fostering Creativity in Technological Design Education. International Journal of Design
and Education 2010, p. 345-358.
[26] Zeng, L., Salvendy, G., Zhang, M. Factor Structure of Website Creativity. Computers in Human Behavior 2009, p. 568-577.

1455

