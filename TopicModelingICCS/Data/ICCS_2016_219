Procedia Computer Science
Volume 80, 2016, Pages 233–244
ICCS 2016. The International Conference on Computational
Science

A Cylindrical Basis Function
for Solving Partial Diﬀerential Equations on Manifolds
E.O Asante-Asamani1 , Lei Wang2 , and Zeyun Yu3∗
1
2

Department of Mathematical Sciences, University of Wisconsin Milwaukee , U.S.A
eoa@uwm.edu
Department of Mathematical Sciences, University of Wisconsin Milwaukee, U.S.A
wang256@uwm.edu
3
Department of Computer Science, University of Wisconsin Milwaukee, U.S.A
yuz@uwm.edu

Abstract
Numerical solution of partial diﬀerential equations (PDEs) on manifolds continues to generate
a lot of interest among scientists in the natural and applied sciences. On the other hand, recent
developments of 3D scanning and computer vision technologies have produced a large number
of 3D surface models represented as point clouds. Herein, we develop a simple and eﬃcient
method for solving PDEs on closed surfaces represented as point clouds. By projecting the
radial vector of standard radial basis function(RBF) kernels onto the local tangent plane, we are
able to produce a representation of functions that permits the replacement of surface diﬀerential
operators with their Cartesian equivalent. We demonstrate, numerically, the eﬃciency of the
method in discretizing the Laplace Beltrami operator.
Keywords: Radial basis function, closed manifolds, large point clouds, Laplace-Beltrami operator,
partial diﬀerential equations

1

Introduction

Many applications in the natural and applied sciences require the solution of partial diﬀerential
equations on manifolds. Such applications arise in areas such as computer graphics[18, 10, 1],
image processing[20, 2, 9, 21], mathematical physics[5], biological systems[17, 8], and ﬂuid
dynamics[11, 12, 19].A lot more interest, especially in computer graphics, has been generated
around solution of PDEs on closed 2D manifolds, as these arise as boundaries of 3D objects.
The development of high resolution 3D scanning devices, which capture these surfaces as point
clouds, have made numerical methods that can be applied directly to point clouds very attractive.
∗ Corresponding

Author

Selection and peer-review under responsibility of the Scientiﬁc Programme Committee of ICCS 2016
c The Authors. Published by Elsevier B.V.

doi:10.1016/j.procs.2016.05.316

233

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

A class of numerical methods that have been developed to solve PDEs on closed surfaces,
involve the expression of diﬀerential operators as projections of their Cartesian equivalents
onto local tangent planes via a projection operator (I − nnT ). The resulting operators are
then discretized using, for example, ﬁnite element methods[6]. Recently, the projection method
has been extended to PDEs deﬁned on manifolds represented as point clouds [4]. For such
methods, functions deﬁned on the manifold are represented using radial basis functions (RBF).
The surface diﬀerential operators are obtained by applying a projection operator to the RBF
discretization of the Cartesian equivalent.
While the projection methods modify Cartesian diﬀerential operators, another class of methods embed the surface PDE into 3 so that solutions to the embedded problem when restricted
to the surface provide the solution on the surface[7]. Because these methods result in embeded
PDEs posed in 3 , spatial complications arise when the PDEs have to be solved on a restricted
surface domain. The closest point method, developed in [16], attempts to resolve this problem
by extending the functions into 3 in a way that makes them constant in the normal direction.
This allows the simple replacement of surface diﬀerential operator by their Cartesian equivalent.
The method however requires a high order interpolation at each time step in order to obtain
solutions on the surface.
Recently, the orthogonal gradient method presented in[13], was introduced to extend this
idea to point clouds. Here, 2N additional nodes are introduced during the construction of a
distance function, to force the function deﬁned on the surface to be constant in the normal
direction. The 2N nodes are chosen according to an oﬀset parameter δ which controls their
distance from the surface. The accuracy of the method and condition number of the resulting
diﬀerential matrix is however sensitive to the choice of δ. The use of 2N additional nodes, to
enforce derivative constraints, increases the computational complexity of forming the interpolation and diﬀerential matrices.
In this work we propose a modiﬁed RBF kernel, the Cylindrical Basis Function (CBF), which
is intrinsically constant in the normal direction at each point of a surface. The modiﬁed kernel,
when used in the representation of smooth functions deﬁned on a closed surface, allows surface
diﬀerential operators to be replaced by their Cartesian equivalent without the need to impose
additional constraints on the function or have an implicit representation of the surface. We
also avoid inherent challenges in performing higher order interpolation, typical of embedding
techniques, by discretizing operators directly on the manifold. The proposed method is simple
and requires the solution of a much smaller linear system, compared to the orthogonal gradient
method.

2

The Radial Basis Function

N
Given function data {fk }N
k=1 at the node locations {xk }k=1 ∈
the data is given as

d

, the RBF interpolant s(x) to

N

λi φ( x − xi ),

s(x) =

(1)

i=1

where φ( x − xi ) is the RBF kernel centered at the node xi , and λi are coeﬃcients chosen
to satisfy the interpolation conditions
s(xi ) = f (xi )

i = 1 · · · N,

(2)

which is equivalent to solving the linear system
Aλ = f .
234

(3)

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

A is the matrix with entries aij = φ( xi − xj ) i, j = 1 · · · N , usually referred to as the
interpolation matrix. The norm . is taken to be the Euclidean norm. Some common kernels
are presented in Table 1.
Name of RBF
Multiquadric
Inverse Multiqudric
Inverse Quadric
Gaussian

Abbreviation
MQ
IMQ
IQ
GA

Deﬁnition
√
1 + cr2
√ 1
1+cr 2
1
1+cr 2
−cr 2

e

Table 1: Common radial basis functions with shape parameter c

3

RBF Discretization of Cartesian Diﬀerential Operators

Given a point cloud P = (x1 , x2 , · · · , xN ) and data from a smooth function {fk }N
k=1 deﬁned on
these points, an RBF interpolation of f satisﬁes,
N

f (xi ) =

λj φ(||xi − xj ||)

i = 1, 2, · · · , N.

(4)

j=1

Let L be a diﬀerential operator acting on f and g(xi ) the value of Lf at the point xi then,
N

g(xi ) =

λj Lφ(||x − xj ||)|x=xi

i = 1, 2, · · · , N,

(5)

j=1

which deﬁnes a linear system and can be represented in matrix form as,
B λ = g,

(6)

where the diﬀerential matrix B has entries bij = Lφ(||x − xj ||)|x=xi i, j = 1, · · · N .
The interpolation matrix A in Eq.(3) is non-singular (see [4]) and permits the substitution
of λ = A−1 f into Eq.(6) leading to g = BA−1 f . The diﬀerentiation matrix BA−1 gives the
RBF discretization of L with respect to the point cloud P.

4

Construction of Surface Diﬀerential Operators

Let f be a smooth function deﬁned on an arbitrary surface Γ. The gradient of f expanded in
the normal, ﬁrst and second tangent orthogonal coordinates {n, t1 , t2 } at some point x ∈ Γ can
be expressed as
(7)
∇f = ∂n f n + ∂t1 f t1 + ∂t2 f t2 .
The surface gradient operator ∇Γ is the projection of the regular gradient onto the local tangent
plane at x. Thus,
(8)
∇ Γ f = ∂t 1 f t 1 + ∂ t2 f t2 .
235

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

Two approaches are typically used in the literature [4, 13] to obtain surface operators from
regular operators. The ﬁrst involves projecting the Cartesian gradient operator onto the local
tangent plane of the surface at some surface point. The surface gradient becomes,
∇Γ f = ∇f − ∂n f n
= (I − nnT )∇f.
Such methods are classiﬁed as projection methods. The second approach involves extending the
function f, into d such that it is constant in the normal direction at each point on the surface.
As pointed out by [16] under such conditions the surface gradient and Cartesian gradient agree
on the surface. Surface diﬀerential operators can then be replaced with the simpler Cartesian
operators. The Orthogonal Gradient Method enforces this requirement by extending an RBF
approximation of the function outside of the surface Γ, originally having N points, using 2N
additional points. This increases the complexity of the resulting linear system from N to 3N .
Also the accuracy of the method is inﬂuenced by the choice of an oﬀset parameter δ which
controls the proximity of the 2N points to the surface.
In order to avoid the increased complexity of introducing 2N additional points to enforce
the null gradient condition we propose a modiﬁed kernel which projects all radial vectors in the
traditional RBF kernel onto the local tangent plane. We refer to this as the Cylindrical Kernel.
Our modiﬁed kernel is intrinsically constant in the normal direction and greatly simpliﬁes the
construction of surface diﬀerential operators.

5

Cylindrical Basis Function (CBF)

Deﬁnition 1. Given a point cloud P = (x1 , x2 , · · · , xN ) sampled from a smooth manifold, Γ
and data from a smooth function {fk }N
k=1 deﬁned at these points, a CBF interpolant of f is
deﬁned as
N

c(x) =

λj φ(rj (x))

(9)

j=1

where,
rj (x) = (x − xj ) − nj [(x − xj ) · nj ]

.

(10)

λj and φ are the interpolation coeﬃcients and kernel respectively, nj is the unit normal vector
at the point xj and Eq.(10) is the “cylindrical distance”with respect to the Euclidean norm.
Lemma 1. Let P = (x1 , x2 , · · · , xn ) be a point cloud on a 2D-manifold Γ embedded in
the CBF kernel satisﬁes for all x ∈ Γ
∇φ(ri (x)) · nyi = 0 ∀i = 1, 2, · · · , N and x ∈

3

.

3

then
(11)

Consider the Laplacian of f on Γ,
f = (∂n f n + ∂t1 f t1 + ∂t2 f t2 ) · (∂n f n + ∂t1 f t1 + ∂t2 f t2 )

(12)

expanding out the operator it is clear that the surface Laplacian, S f is equivalent to the
regular Laplacian f if ∂n f = ∂n2 f = 0. Therefore the following corollary is a consequence of
Lemma 1
236

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

Corollary 1. On a smooth 2D manifold Γ the CBF interpolation, c(x) of a smooth function,
f : Γ → satisﬁes that,
∇c(x) = ∇Γ c(x)
c(x) = Γ c(x)

(13)
(14)

This implies that surface diﬀerential operators can now be discretized by simply discretizing
their corresponding Cartesian operators. We illustrate the great simplicity of this approach by
computing the Laplacian of the cylindrical kernel. We present the main result as follows; Given
φ(r), the cylindrical kernel, the surface Laplacian is given as,
φ(rij ) = φ (||rij ||)(1 − (rˆij · nj )2 ) + φ (||rij ||)

1 + (rˆij · nj )2
||rij ||

(15)

where rij = (xi − xj ) − nj [(xi − xj ) · nj is the projected radial vector computed from the
r
is the normalized projected
point xi to the center of the basis function xj . Also rˆij = ||rij
ij ||
vector.

6

Implementation

We outline the algorithm for discretizing the Laplace-Beltrami Operator on a 2D-manifold.
1. Obtain the surface normals. Surface normals can be computed for every point in the
point cloud P using Principal Component Analysis(PCA). At any point pi ∈ P the goal
is to ﬁnd the coordinate system consisting of the normal and two tangential directions to
the local coordinate plane within a neighborhood of pi . Let X be a matrix whose rows
xj (j = 1 · · · k) represent the k nearest neighbors of pi . Denote by c the mean of all the
neighbors i.e
c=

1
k

k

xj
j=1

and let yj = xj − c be j th row of the matrix Y . It is well know that the eigen vectors of
the covariance matrix Y Y T form an orthogonal basis which are the principal components
[22]. The eigen vector corresponding to the smallest eigen value is the desired normal
direction to the local plane at pi .
2. Assemble the collocation matrix,
⎡
⎤
φ(r11 ) φ(r12 ) . . . φ(r1n )
⎢ φ(r21 ) φ(r22 ) . . . φ(r2n ) ⎥
⎥
A=⎢
⎣. . . . . . . . . . . . . . . . . . . . . . . . . . . . .⎦
φ(rn1 ) φ(rn2 ) . . . φ(rnn )
where
φ(rij ) := φ(||(xi − xj ) − nj [(xi − xj ) · nj ]||)
corresponds to the basis function centered at the j th node and evaluated at node i.

237

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

3. Assemble the diﬀerential matrix,
⎛
⎞
φ(r11 )
φ(r12 ) . . .
φ(r1n )
⎜ φ(r21 )
φ(r22 ) . . .
φ(r2n ) ⎟
⎟
B=⎜
⎝. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ⎠
φ(rn2 ) . . .
φ(rnn )
φ(rn1 )
where Δφ(rij ) is as deﬁned in Eq.(15)
4. The discrete LB operator is then given as LB = BA−1 .

7
7.1

Numerical Experiments
Eigenvalues of LB Operator

The eigenvalues and eigen functions of the LB operator provide intrinsic global information
that can be used in characterizing the structure of surfaces[15, 14]. We therefore tested the
performance of our method in obtaining the spectra of the LB operator on the unit sphere by
solving the eigenvalue problem
ΔS u = −λu,
(16)
and compared our ﬁrst 100 eigenvalues to the exact values. Our discrete operator was computed
using a uniform sampling of the unit sphere with nodes ranging from 258-16386. We used a local
implementation of the Gaussian radial basis function by choosing the shape parameter c, such
that the function vanished outside the support radius. We performed the same experiment using
Finite Element method and compared the convergence of both methods using the Euclidean
distance as a measure of errors (Figure 2). As we reﬁne the nodes we see from Figure 1 that our
computed eigenvalues line almost perfectly with the true values. With 4098 nodes our computed
eigenvalues are at a distance of 1.4 from the true values while the FEM values are 11.8 units
away. Our results indicate that 4 times the number of nodes used for CBF would be required
for FEM in order to achieve similar accuracy. We also observed a decline in the accuracy of
our solution at 16386 nodes from 4098 nodes. This we believe is as a result of the signiﬁcantly
higher condition number of the collocation matrix. We had to consistently increase the size of
the support domain as the number of nodes increased to achieve optimum results. We show
the computational time with increasing numbers of nodes. Computations were performed using
Matlab R2013a with an intel core i3-4130 8.40 GHZ processor with 8GB of ram.

7.2

Heat Diﬀusion on Sphere and Molecule

To verify that our discrete operator accurately captures the heat diﬀusion of the LB operator
we solved the heat equation
ut = ΔΓ u
(17)
on a unit sphere as well as a more complicated molecular surface. We used a Forward Euler
time discritization scheme with Δt = 0.1Δx2 . In Figure 3 we show that the diﬀusion, using
our CBF discrete operator, matches well with the exact solution obtained using the spherical
harmonics Y10 =
238

1
2

3
πx

across a time duration of 1 sec.

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

Figure 1: First 100 eigenvalues of the Laplace Operator on a unit sphere. Number of nodes
from left to right 258, 1026, 4098, 16386

Figure 2: Superior convergence of CBF and computational eﬃciency. CPU time was measured
in secs.

We used total of 7718 point on the molecule surface and allowed the heat to diﬀuse for 5
secs. As shown in Figure 4, The heat diﬀuses as expected from the heat source to neighboring regions. The initial heat distribution was chosen as a Gaussian bell, f (x, y, z) =
2
2
2
10e−4(x−x1 ) +(y−y1 ) +(z−z1 ) centered at a point (x1 , x2 , x3 ).
239

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

Figure 3: Heat evolution on unit sphere with initial condition, the spherical harmonic Y10 and
diﬀusion coeﬃcient = 1 over 1sec duration. (Above) Numerical solution using 4098 nodes.
(Below) Exact evolution of spherical harmonic Y10 .

Figure 4: Heat equation on a molecule with the gaussian bell as initial distribution centered at
one of its nodes

240

Cylindrical Basis Function

7.3

Asante-Asamani, Wang and Yu

Laplace Smoothing

Laplace smoothing is a common technique used to smooth surface meshes [3]. Here the Laplace
operator acts as a weighted average of the coordinates of each point and its one ring neighbors
to draw them towards the barycenter of their common region. To test the applicability of
our CBF Laplacian, we used it in smoothing a noisy meshed sphere having 258 nodes. The
nodes of the mesh were used as initial condition for the heat equation and updated for 60
iterations. The smoothing equation used was in the form ui+1 = ui + μδLBui where μδ acts as
the smoothing scale factor with μ being the diﬀusion coeﬃcient and k the time step size. LB is
our CBF approximation to the Laplace Beltrami Operator. In Figure 5 we show the smoothing
of the triangular mesh on sphere over 60 steps. To measure the eﬀectiveness of our smoothing
technique we measured the angle between the point normals at each stage of smoothing to the
true normals of the perfectly smooth sphere. Both normals were computed using PCA with 6
neighbours. We choose not to use the position vectors of the point clouds on the perfect sphere
as true normals in order to permit a more uniform comparison with the smoothed sphere. We
see in Figure 6(a) and Figure 6(b) that the normals converge to the perfect sphere normals as
we iterate to 60 steps. We didn’t notice any remarkable improvement in the smoothing after 60
steps. We ﬁnd the method scales very well with size of mesh nodes as demonstrated in Figure
6(c).

(a) Rough Mesh

(b) After 10 steps

(c) After 30 steps

(d) After 60 steps

Figure 5: Laplacian smoothing on a sphere with cylindrical RBF operator. Smoothing was
carried out for 60 steps in 0.4 secs including time for computing the Laplacian

8

Conclusion

In this paper we have introduced a new technique for discretizing surface diﬀerential operators
on closed manifolds. By projecting the radial vector used in standard RBF kernels onto the
local tangent plane of the manifold, we produce a modiﬁed kernel which is constant in the
241

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

(a) Histogram of mesh angles

(b) Mean angle trend

(c) Mesh smoothing time

Figure 6: (a) Histogram of angles (in radians) between normals of smoothed sphere (after 10, 30
and 60 steps) and original perfect sphere with 258 points.(b) Trend in mean angles of smoothed
sphere. (c) Trend in computational time (in seconds) for 100 steps of CBF smoothing of spheres
having nodes ranging between 66-16386.
normal direction to the surface. Our modiﬁed kernel, when used to represent functions deﬁned
on manifolds, permits the simple replacement of surface diﬀerential operators by Cartesian
operators. We have demonstrated through numerical experiments the superior performance
of CBF in discretizing the Laplace Beltrami operator on the sphere by comparing the ﬁrst
100 eigenvalues with the exact values. We also solved the heat equation on the sphere and a
molecule and also showed that the discrete operator can be used to eﬀectively smooth noisy
surface meshes. Here we worked primarily with the Gaussian kernel. We will consider the eﬀect
of other basis functions such as the matern kernel in future eﬀorts. We will also investigate the
approximation of other diﬀerential operators such as divergence operator.

References
[1] B.Levy, editor. Laplace-Beltrami eigenfunctions towards an algorithm that ’understands’ geometry,
Matsushima, June 2006. International conference on shape modeling and applications, IEEE.
http://dx.doi.org/10.1109/SMI.2006.21.

242

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

[2] U. Diewald, T. Preusser, and M Rumpf. Anisotropic diﬀusion in vector ﬁeld visualization on
euclidean domains and surfaces. Visualization and Computer Graphics, IEEE Transactions on,
6(2):139–149, 2000. http://dx.doi.org/10.1109/2945.856995.
[3] David A. Field. Laplace smoothing and delaunay triangulations. Communications in Applied
Numerical Methods, 4:709–712, 1988.
[4] Natasha Flyer and Grady B. Wright. A radial basis function method for the shallow water equations on a sphere. Proc R. Soc. A, 465:1949–1967, 2009. http://dx.doi.org/10.1098/rspa.
2009.0033.
[5] Yiming Fu, Jin Zhanga, and Liangjiao Wana. Application of the energy balance method to a
nonlinear oscillator arising in the microelectromechanical system (mems). Current Applied Physics,
11(3):482–485, 2011. http://dx.doi.org/10.1016/j.cap.2010.08.037.
[6] G.Dziuk and C.Elliot. Surface ﬁnite elements for parabolic equations. Journal of Computational
Mathematics, 25(4):385–407, 2007.
[7] John B. Greer. An improvement of a recent eulerian method for solving pdes on general geometries. Journal of Scientiﬁc Computing, 29(3):321–352, 2006. http://dx.doi.org/10.1007/
s10915-005-9012-5.
[8] Michael Hofer and Helmut Pottmann. Energy-minimizing splines in manifolds. ACM Trans.
Graph., 23(3):284–293, 2004. http://doi.acm.org/10.1145/1015706.1015716.
[9] J.Dorsey and P.Hanrahan. Digital materials and virtual weathering. Scientiﬁc American, 282:64–
71, 2000. http://dx.doi.org/10.1038/scientificamerican0200-64.
[10] Rongjie Lai, Yonggang Shi, K. Scheibel, S. Fears, R. Woods, A.W. Toga, and T.F Chan. Metric
induced optimal embedding for instrinsic 3d shape analysis. In Computer Vision and Pattern
Recognition (CVPR), 2010 IEEE Conference on, pages 2871–2878, 2010. http://dx.doi.org/
10.1109/CVPR.2010.5540023.
[11] J. C. Misra, A. Sinha, and G. C. Shit. A numerical model for the magnetohydrodynamic ﬂow of
blood in a porous channel. Journal of Mechanics in Medicine and Biology, 11(03):547–562, 2011.
http://www.worldscientific.com/doi/abs/10.1142/S0219519410003794.
[12] T.G Myers and J.P.F.Charpin. A mathematical model for atmospheric ice accretion and water
ﬂow on a cold surface. http://dx.doi.org/10.1016/j.ijheatmasstransfer.2004.06.037, 2004.
[13] Cecile Piret. The orthogonal gradients method: A radial basis function method for solving partial
diﬀerential equations on arbitrary surfaces. Journal of Computational Physics, 231(14):4662–4675,
2012. http://dx.doi.org/10.1016/j.jcp.2012.03.007.
[14] Martin Reuter, Silvia Biasotti, Daniela Giorgi, Giuseppe Patan, and Michela Spagnuolo. Discrete
laplace-beltrami operator for shape analysis and segmentation. Computers & Graphics, 33(3):381
– 390, 2009. http://dx.doi.org/10.1016/j.cag.2009.03.005.
[15] Martin Reuter, Franz-Erich Wolter, and Niklas Peinecke. Laplace-beltrami spectra as ’shape-dna’
of surfaces and solids. Computer Aided Design, 38(4):342–366, 2006. http://dx.doi.org/10.
1016/j.cad.2005.10.011.
[16] Steven J. Ruuth and Barry Merriman. A simple embedding method for solving partial diﬀerential
equations on surfaces. Computational Physics, 227(3):1943–1961, 2008. http://dx.doi.org/10.
1016/j.jcp.2007.10.009.
[17] Klaus Schittkowski. Parameter identiﬁcation and model veriﬁcation in systems of partial diﬀerential equations applied to transdermal drug delivery. Mathematics and Computers in Simulation,
79(3):521–538, 2008. http://dx.doi.org/10.1016/j.matcom.2008.02.025.
[18] Jian Sun, Maks Ovsjanikov, and Leonidas Guibas. A consise and provably informative multiscale signature based on heat diﬀusion. In Proceedings of the Symposium on Geometry Processing,
pages 1383–1392, Aire-la-Ville, Switzerland, Switzerland, 2009. Eurographics Association. http:
//dl.acm.org/citation.cfm?id=1735603.1735621.
[19] J.P.F.Charpin T.G Myers. The ﬂow and solidiﬁcation of a thin ﬂuid ﬁlm on an arbitrary threedimensional surface. http://dx.doi.org/10.1063/1.1488599, 2002.

243

Cylindrical Basis Function

Asante-Asamani, Wang and Yu

[20] Greg Turk. Generating textures on arbitrary surfaces using reaction-diﬀusion. SIGGRAPH Comput. Graph., 25(4):289–298, 1991. http://doi.acm.org/10.1145/127719.122749.
[21] Andrew Witkin and Michael Kass. Reaction-diﬀusion textures. SIGGRAPH Comput. Graph.,
25(4):299–308, 1991. http://dx.doi.org/10.1145/127719.122750.
[22] Hongkai Zhao. Geometric understanding of point clouds using laplace-beltrami operator. In Proceedings of the 2012 IEEE Conference on Computer Vision and Pattern Recognition (CVPR),
pages 214–221, Washington, DC, USA, 2012. IEEE Computer Society. http://dl.acm.org/
citation.cfm?id=2354409.2354735.

244

