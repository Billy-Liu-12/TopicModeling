Numerical Methods for Reacting Gas Flow
Simulations
S. van Veldhuizen1 , C. Vuik1 , and C.R. Kleijn2
1

Delft University of Technology, Delft Institute of Applied Mathematics and J.M.
Burgers Center, Mekelweg 4, 2628 CD Delft, The Netherlands
{s.vanveldhuizen, c.vuik}@tudelft.nl
2
Delft University of Technology, Department of Multi Scale Physics and J.M.
Burgers Center, Prins Bernardlaan 6, 2628 BW Delft, The Netherlands
c.r.kleijn@tudelft.nl
Abstract. In this study various numerical schemes for simulating 2D
laminar reacting gas ﬂows, as typically found in Chemical Vapor Deposition (CVD) reactors, are proposed and compared. These systems are
generally modeled by means of many stiﬄy coupled elementary gas phase
reactions between a large number of reactants and intermediate species.
The purpose of this study is to develop robust and eﬃcient solvers for
the stiﬀ heat-reaction system. The velocities are assumed to be given.
For non-stationary CVD simulation, an optimal combination in terms of
eﬃciency and robustness between time integration, nonlinear solvers and
linear solvers has to be found. Besides stability, which is important due
to the stiﬀness of the problem, the preservation of non-negativity of the
species is crucial. It appears that this extra condition on time integration
methods is much more restrictive towards the time-step than stability.

1

Introduction

In Chemical Vapor Deposition (CVD) literature, and also other reactive ﬂow
literature, one is usually looking for the steady state solution of the species
equations (1). The usual procedure to ﬁnd this steady state solution is to perform a (damped/relaxed) Newton iteration with an (arbitrary) initial solution.
Hopefully, the Newton iteration converges to the steady state. If this is not the
case one performs some (artiﬁcial) time stepping in order to ﬁnd a better initial
solution for the next Newton iteration. In this paper we present suitable time integration methods for stiﬀ problems. Furthermore, we compare these integration
methods by their performance, in terms of eﬃciency.
In our research we are not looking for the steady state solution only, but we
also want the transient solution. In order to simulate this transient, we have to
use a time integration method that can handle stiﬀ problems.

2

Model for CVD Simulation

The mathematical model describing the CVD process consists of a set of PDEs
with appropriate boundary and initial conditions, which describe the gas ﬂow,
the transport of energy, the transport of species and reactions in the reactor.
V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 10–17, 2006.
c Springer-Verlag Berlin Heidelberg 2006

Numerical Methods for Reacting Gas Flow Simulations

11

The gas mixture in the reactor is assumed to behave as a continuum. The gas
ﬂow in the reactor is assumed to be laminar. Since no large velocity gradients
appear in CVD gas ﬂows, viscous heating due to dissipation will be neglected.
We also neglect the eﬀects of pressure variations in the energy equation. The
composition of the N component gas mixture is described in terms of the dimenN
sionless mass fractions ωi = ρρi , i = 1, . . . , N , having the property i=1 ωi = 1.
The transport of mass, momentum and heat are described respectively by the
continuity equation , the Navier-Stokes equations and the transport equation for
thermal energy expressed in terms of temperature T . See for instance [4, 6].
We assume that in the gas-phase K reversible reactions take place. For the
mole
k th reaction the net molar reaction rate is denoted as Rkg m
3 ·s . For an explicit
description of the net molar reaction rate, we refer to [4, 6]. The mass diﬀusion
ﬂux is decomposed into concentration diﬀusion and thermal diﬀusion. In this
study we describe ordinary diﬀusion in terms of eﬀective diﬀusion coeﬃcients
Di , such that we obtain
∂(ρωi )
= −∇ · (ρvωi ) + ∇ · (ρDi ∇ωi ) + ∇ · (DTi ∇(ln T )) + mi
∂t

K

νik Rkg , (1)
k=1

where DTi the multi-component thermal diﬀusion coeﬃcient for species i.
The main focus of our research is on eﬃcient solvers for the above species
equation(s) (1). Typically the time scales of the slow and fast reaction terms
diﬀer orders of magnitude from each other, and from the time scales of the
diﬀusion and advection terms, leading to extremely stiﬀ systems.
Simpliﬁed System. Since our research focuses on solving the species equations
(1), we will only solve the coupled system of N species equations, where N denotes the number of gas-species in the reactor. The velocity ﬁeld, temperature
ﬁeld, pressure ﬁeld and density ﬁeld are computed via another simulation package developed by Kleijn [5]. Other simpliﬁcations are the omission of surface
reactions and thermal diﬀusion.
We consider a CVD process,which is a simpliﬁcation of the CVD process
considered in [5], that deposits silicon Si from silane SiH4 . The gas-mixture
consists of 7 species and the reaction mechanism
G1 :
SiH4
G2 :
Si2 H6
G3 :
Si2 H6
G4 : SiH2 +Si2 H6
G5 :
2SiH2

SiH2 + H2
SiH4 + SiH2
H2 SiSiH2 + H2
Si3 H8
H2 SiSiH2 .

The studied reactor conﬁguration is illustrated in Figure 1. As computational
domain we take, because of axisymmetry, one half of the r−z plane. The pressure
in the reactor is 1 atm. From the top a gas-mixture, consisting of silane, with
mass fraction fin,SiH4 = 0.001, and helium (the rest), enters the reactor with a
uniform temperature Tin = 300 K and a uniform velocity uin . At a distance of

12

S. van Veldhuizen, C. Vuik, and C.R. Kleijn
Inflow

z
10 cm.

r

30 cm.
substrate
Outflow
35 cm.

Fig. 1. Reactor geometry

10 cm. below the inlet a non rotating susceptor with temperature T = 1000 K
and a diameter 30 cm. is placed.
We emphasize that this test-problem is not representing a practical process,
but representing its computational problems. Further details on the test-problem
can be found in [6].

3

Properties of Numerical Methods for Solving the
Species Equations

As seen in the previous section the species eqns. (1) are PDEs of the advectiondiﬀusion-reaction type. In order to have a unique solution appropriate boundary
conditions and initial values have to be chosen.
To approximate the solution we use the Method of Lines (MOL), i.e., we ﬁrst
discretize in space, resulting into the ODE system
w (t) = F (t, w(t)),

0 < t ≤ T,

w(0) given.

(2)

The next step is to integrate the ODE system (2) with an appropriate time
integration method. We remark that the stiﬀ reaction terms in CVD motivates
to integrate parts of F (t, w(t)) implicitly. In general, due to the nonlinearities in
the reaction term, (huge) nonlinear systems have to be solved.
The topic of this research is to ﬁnd the best combination of time integration,
nonlinear and linear solvers in terms of eﬃciency. Note that if the computational
cost of one time step is (very) expensive, then a time integration method that
needs more, but computational cheaper, time steps is better in terms of eﬃciency.
Besides the eﬃciency criteria, also some other properties are desired for the
numerical methods. As already mentioned in Section 2 the system of species
equations is stiﬀ. Following [2], we say that stiﬀness indicates a class of problems
for which implicit methods perform (much) better than explicit methods. The
eigenvalues of the Jacobian δf
δy play certainly a role in this decision, but quantities
such as the dimension of the system and the smoothness of the solution are also
important.

Numerical Methods for Reacting Gas Flow Simulations

13

Positivity. A natural property for mass fractions is that they are non-negative.
As a consequence, it should also hold for the mathematical model, spatial discretization and time integration of the process. While the ﬁrst one is obvious,
the latter two should not introduce any (small) negative components causing
blow up of the solution. It appears that this extra condition on time integration methods is much more restrictive towards the time step than stability. We
remark that positivity for spatial discretization can be assured by locally ﬁrst
order upwinding.
An ODE system w (t) = F (t, w(t)), t ≥ 0, is called positive if w(0) ≥ 0 implies
w(t) ≥ 0 for all t > 0. It is easy to prove that linear systems w (t) = Aw(t) are
positive if and only if aij ≥ 0 for i = j. See [7]. For general nonlinear semidiscretizations w (t) = F (t, w(t)), it appears that unconditional positivity is a
very restrictive requirement. Suppose that F (t, w(t)) satisﬁes the condition :
Condition 1. There is an α > 0, with α as large as possible, such that ατ ≤ 1
and
v + τ F (t, v) ≥ 0 for all t ≥ 0, v ≥ 0.
(3)
Application of Euler Forward to the nonlinear system w (t) = F (t, w(t)) gives
wn+1 = wn + τ F (tn , wn ).

(4)

Provided that wn ≥ 0, Condition 1 guarantees positivity for wn+1 computed via
Euler Forward (4). Furthermore, assume that F (t, w(t)) also satisﬁes :
Condition 2. F (t, v) is continuously diﬀerentiable and
I − τ JF (t, v) ≤ C,

for any v ∈ Rn , t ≥ 0 and τ > 0,

(5)

whereby C is a positive constant, I the identity matrix and JF (t, v) the Jacobian
matrix of derivatives of F (t, v) with respect to v.
In [2] it has been proven that Condition 1 and 2 imply positivity for Euler
Backward for any step-size τ . However, in practice the solutions of the resulting
nonlinear systems have to be approximated, which might introduce small negative components. In the case the negative components of the solution are the
result of rounding errors, then it is justiﬁed to set them to zero. In the case one
has negative components in the solution as consequence of the nonlinear (Newton) solver, then the most common method to avoid negative concentrations is
clipping. Clipping has the disadvantage that mass is not longer preserved. In
practice it is desired not to use clipping. In our experience, the implementation of variable time step size algorithm, see [6], avoids negative concentrations
without the use of clipping.
We conclude this section with the claim that Euler Backward is the only time
integration that is unconditionally positive. For a proof we refer to [1]. This
means that for any higher order (implicit) time integration method a time step
criterion is needed to ensure preservation of non-negativity.

14

4

S. van Veldhuizen, C. Vuik, and C.R. Kleijn

Suitable Time Integration Methods (TIM)

In this section we brieﬂy present integration methods that are suitable, from a
theoretic point of view, for the time integration of the species equations. More
comprehensive descriptions are given in [2, 6]. At the end of this section we will
also make some remarks on the linear and nonlinear solvers.
From the previous section it is clear that the Euler Backward method is
a suitable method to perform time integration. It has the advantage of being
unconditionally positive. Disadvantages are the ﬁrst order consistency and the
probably high computational costs for one time step. The latter is due to the
fact that the succeeding approximations are computed in an implicit manner.
4.1

Time Integration Methods

We will discuss a selection of time integration methods that have good properties
in both stability and positivity, or TVD.
Rosenbrock Methods. The two stage Rosenbrock method
wn+1 = wn b1 k1 + b2 k2
k1 = τ F (wn ) + γτ Ak1
k2 = τ F (wn + α21 k1 ) + γ21 τ Ak1 + γτ Ak2 ,

(6)

with A = F (wn ) is the Jacobian matrix of F , and b1 = 1 − b2 , α21 =
1
and γ21 = − bγ2 , is interesting. The method is of order two for arbitrary γ
2b2
as long as b2 = 0 . The stability function is given as
R(z) =

1 + (1 − 2γ)z + (γ 2 − 2γ + 12 )z 2
.
(1 − γz)2

(7)

√
For γ ≥ 14 the method is unconditionally stable. For γ+ = 1 + 12 2, we have the
property that R(z) ≥ 0, for all negative real z. For diﬀusion-reaction problems,
which have negative real eigenvalues, this property ensures positivity of the solution. It appears that the second order Rosenbrock method performs quite well
with respect to the positivity property, as has been shown in [8]. In [8] it is
conjectured that the property R(z) ≥ 0 for all negative real z plays a role.
Backward Diﬀerentiation Formulas (BDF). The k-step BDF methods are
implicit, of order k and deﬁned as
k

αj wn+j = τ F (tn+k , wn+k ),

n = 0, 1, . . . ,

(8)

j=0

which uses the k past values wn , . . . , wn+k−1 to compute wn+k . Remark that
the most advanced level is tn+k instead of tn+1 . The 1-step BDF method is
Backward Euler. The 2-step method is
3
1
wn+2 − 2wn+1 + wn = τ F (tn+2 , wn+2 ),
2
2
and the three step BDF is given by

(9)

Numerical Methods for Reacting Gas Flow Simulations

11
3
1
wn+3 − 3wn+2 + wn+1 − wn = τ F (tn+3 , wn+3 ).
6
2
3

15

(10)

Remark 1. A disadvantage of linear multi-step methods is that the ﬁrst k − 1
approximations cannot be computed with the linear k-step scheme. To compute
the ﬁrst (k − 1) approximations, one could use for the ﬁrst step a BDF 1-step
method, for the second approximation a BDF 2-step method, . . . and for the
(k − 1)st approximation a BDF (k − 1)-step scheme.
For the 2-step BDF method we obtain positivity, under Conditions 1 and 2, of
w (t) = F (t, w(t)) whenever ατ ≤ 12 , provided that w1 is computed from w0 by a
suitable starting procedure, i.e., w1 has been computed such that w1 ≥ 0 holds.
For a derivation we refer to [2, 6].
IMEX Runge-Kutta Chebyshev Methods. The second order Runge-Kutta
Chebyshev method is given as
wn0 = wn ,
wn1 = wn + μ
˜1 τ F (tn + c0 τ, wn0 ),
wnj = (1 − μj − νj )wn + μj wn,j−1 + νj wn,j−2 +

j = 1, . . . , s

+˜
μ1 τ F (tn + cj−1 τ, wn,j−1 ) + γ˜j τ F (tn + c0 τ, wn0 ),

(11)

wn+1 = wns .
The coeﬃcients ω0 , ω1 , bj , cj , μ
˜j , . . . can be found in [6]. In Figure 2 its stability
region is given. The parameter β(s) moves to −∞ when the number of stages s
increases.
The IMEX extension of the above scheme is as follows. Suppose we have an
ODE system w (t) = F (t, w(t)), where F (t, w(t)) can be split as
F (t, w(t)) = FE (t, w(t)) + FI (t, w(t)).

(12)

In (12) the term FI (t, w(t)) is the part of F which is (supposed to be) too stiﬀ
to be integrated by an explicit Runge-Kutta Chebyshev method. Obviously, the
term FE (t, w(t)) is the moderate stiﬀ part of F that can be integrated in an
explicit manner using RKC methods. The ﬁrst stage of (11) becomes in the
IMEX-RKC scheme
wn1 = wn + μ
˜1 τ FE (tn + c0 τ, wn0 ) + μ
˜1 τ FI (tn + c1 τ, wn1 ),
Second Order Chebyshev Polynomial
5

0

−5
−20

β(s)

−18

−16

−14

−12

−10

−8

−6

−4

−2

0

Fig. 2. Stability region of (11) with s = 5

2

(13)

16

S. van Veldhuizen, C. Vuik, and C.R. Kleijn

with μ
˜1 as deﬁned before. Note that the highly stiﬀ part of F is treated implicitly.
The other (s − 1) subsequent stages of (11) will be modiﬁed in a similar way.
With respect to stability of this IMEX extension of (11) we remark that the
implicit part is unconditionally stable, whereas the stability condition for the
explicit part remains unchanged.
4.2

Nonlinear and Linear Solvers

In all suitable TIM nonlinear systems F (x) = 0, x ∈ Rn have to be solved. The
Newton iteration is, with its second order convergence, an obvious choice. The
disadvantage of having local convergence will disappear if one uses a line-search
algorithm, such that
F (xk+1 ) ≤ F (xk )

k = 0, 1, 2, . . . ,

(14)

for some norm in Rn . More background information can be found in [3, 6].
In the Newton iteration linear systems have to be solved. In most 2D applications direct solvers like LU factorization are still applicable. To reduce the
amount of work one usually re-arranges the unknowns, in order to reduce the
bandwidth of the matrix. Also in our case it is possible to reduce the bandwidth
of the Jacobian considerably. The way to do this is described in [7].
For 3D problems direct solvers (LU factorization) are no longer applicable.
To approximate the solution of the linear systems one has to switch to iterative
linear solvers like, for instance, Krylov Subspace methods.

5

Numerical Results

In this section we compare the performance of the TIM of Section 4.1 for solving
the species equations. If necessary, nonlinear systems will be solved by the full
Newton iteration. Linear systems will be solved using the LU factorization with
rearranging, as mentioned in Section 4.2. Since the solutions diﬀer not much, we
are only interested in the performance of the TIM.
For a comparison between the workloads of the various TIM, we look to the
amount of CPU time, the number of time steps and the workload per time step
it takes to reach steady state. We say that steady state is reached when the
norm of the right hand side of (1) is below a threshold, in our case 10−4 , and
the ﬂuxes at the boundaries are constant. The threshold is equal to the accuracy
Table 1. Workloads of various TIM (performed on a Pentium IV 3.2 GHz)
TIM
CPU time
# time steps Average CPU time / time step
Euler Backward
600 CPU sec
163
3 CPU sec
2nd order Rosenbrock 375 CPU sec
100
3 CPU sec
BDF-2
600 CPU sec
63
8 CPU sec
IMEX-RKC(5)
> 5000 CPU sec
> 500
25 CPU sec

Numerical Methods for Reacting Gas Flow Simulations

17

of the solution of the system of Navier Stokes eqns., pressure eqn., etc. For the
diﬀerent TIM mentioned in Section 4.1 the workloads are given in Table 1.

6

Conclusions

Based on Table 1, we conclude that for this 2D test-problem Rosenbrock is the
cheapest TIM to solve (1). The ‘bad’ performance of the IMEX RKC scheme
is due to that per time step more than one nonlinear system has to be solved.
Although these nonlinear systems are cheaper to solve, it did not pay oﬀ in this
2D test case. However, this property can become interesting in 3D simulations.

References
1. C. Bolley and M. Crouzeix, Conservation de la Positivit´e Lors de la
´
Discr´etisation des Probl`emes d’Evolution
Paraboliques, RAIRO Anal. Numer. 12,
pp. 237-245, (1973)
2. W. Hundsdorfer and J.G. Verwer, Numerical Solution of Time-Dependent
Advection-Diﬀusion-Reaction Equations, Springer Series in Computational Mathematics, 33, Springer, Berlin, (2003)
3. C.T. Kelley, Solving Nonlinear Equations with Newton’s Method, Fundamentals
of Algorithms, SIAM, Philadelphia, (2003)
4. C.R. Kleijn, Transport Phenomena in Chemical Vapor Deposition Reactors, PhD
thesis, Delft University of Technology, (1991)
5. C.R. Kleijn, Computational Modeling of Transport Phenomena and Detailed
Chemistry in Chemical Vapor Deposition- A Benchmark Solution, Thin Solid Films,
365, pp. 294-306, (2000)
6. S. van Veldhuizen, Eﬃcient Solution Methods for Stiﬀ Systems of AdvectionDiﬀusion-Reaction Equations, Literature Study, Technical Report at the Delft University of Technology, TWA-05-05 , (2005)
7. S. van Veldhuizen, Time Integration for Reacting Gas Flow Simulations, Technical
Report at the Delft University of Technology, to appear, (2006)
8. J.G. Verwer, E.J. Spee, J.G. Blom and W. Hundsdorfer, A Second-Order
Rosenbrock Method Applied to Photochemical Dipersion Problems, SIAM Journal
on Sci. Comp., 20, pp.1456-1480, (1999)

