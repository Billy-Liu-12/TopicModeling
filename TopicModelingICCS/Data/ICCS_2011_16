Available
onlineonline
at www.sciencedirect.com
Available
at www.sciencedirect.com

Procedia
Computer
(2011) 000–000
Procedia
Computer
ScienceScience
4 (2011)001937–1943

Procedia
Computer
Science
www.elsevier.com/locate/procedia

International Conference on Computational Science, ICCS 2011

Teaching Computing to STEM Students via Visualization Tools
Hongmei Chi*, Harsh Jain
Department of Computer &Information Sciences
Florida A&M University
Tallahassee, FL 32307

Abstract
Information technology is evolving fast and steady over the years providing more and more tools for society to use. There is an
increasing need and implementation of computation in the conduct of modern scientific research and experimentation.
Computational thinking has been scarcely understood by STEM undergraduates if their majors are not computer sciences. We
explore computation projects into existing courses via visualization computational tools to increase the number of STEM
students who graduate with discipline specific computational skills. The goal of this paper was to report our efforts for increasing
the number of students with experience using computation in science. Discipline specific tools were chosen and implemented in
the respective courses, for example Chemsketch in chemistry. Hands-on labs were designed to familiarize instructors and
students so it can be helpful to smooth the learning curve in STEM undergraduate students
Keywords: Visualization; ChemSketch;ParaView; Computation;STEM education;

1. Introduction
Computation is playing ever increasing role in the conduct of modern scientific inquiry and experimentation.
The goal of our paper is to report the increasing number of STEM students who graduate with discipline-specific
computational skills in STEM education. The results of this project strengthen existing STEM programs through
course enhancement and faculty development, and lay a solid foundation for cross-disciplinary education and
research among STEM disciplines.
We discuss the potential to effect long-term improvement in science and engineering education at Florida A&M
University through increased use of computation in the teaching of STEM disciplines, also promote the use of open
source visualization tools in teaching computation at the STEM freshman level through the involvement of faculty
developments [8, 9]. Activities include the following: (1) identify requisite computing competencies for STEM
graduates pursuing advanced study; (2) develop instructional modules and course assignments requiring the use of
computation in STEM courses; (3) enhance and develop foundational computing courses for STEM majors; (4)

* Corresponding author. Tel.: +01-850-412-7355; fax: +01-850-599-3221.
E-mail address: hchi@cis.famu.edu.

1877–0509 © 2011 Published by Elsevier Ltd. Open access under CC BY-NC-ND license.
Selection and/or peer-review under responsibility of Prof. Mitsuhisa Sato and Prof. Satoshi Matsuoka
doi:10.1016/j.procs.2011.04.211

1938 	

Hongmei Chi et al. / Procedia Computer Science 4 (2011) 1937–1943
Author name / Procedia Computer Science 00 (2011) 000–000

explore opportunities for cross-disciplinary computation-based courses and curricula. All activities are involved
computational thinking via visualization.
This work is motivated by our belief that there is a better way for STEM students to learn computation and coding
[3,4,6]. The challenges faced by STEM students worldwide are magnified for our students who lack professional IT
role models, whose academic readiness belie nascent ability, and whose history of achievement dampens confidence.
However, we believe that active learning will increase the engagement of students and foment a community of
learners that provides the social and academic support to enable students turn the challenges of learning computation
and coding into learning experiences instead of opportunities to bail out. This paper shows how we target the
retention of the forgotten majority, the “average” student already in a STEM program.
This project is based upon a simple idea drawn from the natural world: for centuries, humans have learned easily
from pictures than words, typically “a picture is worth a thousand of words”. Mastery of the skills of computational
languages included repetition of language elements (starting with words), followed by the application of language in
the appropriate context.
In this paper, we introduce computing projects via visualization, one of active learning methods, as a pedagogical
approach for STEM education and provide several case studies to demonstrate its usefulness. This technique has been
successful applied in Information Assurance education [5]. In addition, we address faculty development for
implementing this program as well.
This paper is organized as follows: Section 2 gives an overview of the existing visualization tools for STEM
education and present current status of computational projects at FAMU. Section 3 proposes detail cases for the
current STEM education: this includes curriculum development for other disciplines of STEM education at FAMU,
and faculty development at FAMU. Section 4 describes student feedbacks from our implementations. Conclusions
are made in Section 5.
2. Visualization
Visualization is a process of taking raw data and converting it to a form that is viewable and understandable to
humans. It is becoming a basic building block in our daily life. The amount of information required to process by a
human brain can be overwhelming. Visualization [1,2] is a technique for creating images, diagrams, or animations to
communicate a message. Primitive drawings on buildings and monuments are part of visualization technique
proving that visualization is been around since the dawn of man. Advances in technology have made visualization
very informative and easy to practice technique. The use of computer models as tools for furthering scientific
knowledge is fast becoming a key component of current scientific research.

Fig.1: Raw data file is the format in which computer reads a file which is of very little or no importance to us but the image produced from the same raw data
shows us some useful picture and can be manipulated and data can be extracted.
Active learning refers to developing and implementing planned activities to engage the participant as a “partner” in
the activity. In short, students are learning by doing. That means that while students are doing an active learning
exercise (such as hands-on lab), 90% of the students are actively engaged with the material and getting practice in
the skills an instructor is trying to teach them. Active learning results in a deeper and more integrated understanding

Hongmei Chi et al. / Procedia Computer Science 4 (2011) 1937–1943
Author name / Procedia Computer Science 00 (2011) 000–000

1939

of concepts, as well as significant improvement in student retention in degree programs. Engaged students
remember concepts longer, enjoy the learning process more, and are more likely to continue.
Active learning techniques can help students to increase mastery of foundational skills, improve technical
communication skills, and enhance critical thinking. Visualization is one aspect of active learning. We use
visualization tools to help STEM students to master fundamentally computational concepts and skills
Instead of showing students abstract codes for computational projects, STEM instructors can implement
various visualization tools to help the students understand the concepts better. Visualization tools have been around
for a while but with the advances in computer technology visualization has become more realistic and more
informative. It uses classroom technology to help the learners create a visual picture of concepts and make
connections to the images and theory that is being taught in the classrooms (see Figure 1). Visualization tools have
been around, a perfect example is graphing calculator. Graphic calculator is used to visualize the relationship
between different variables. With advances in technology one can now construct a 3-D model of an atom to
visualize it in all directions. Visualization tools are available which are very simple to implement and are quiet
effective. Simple models can be generated in a fast and effective way. Once the models are generated a lot more
information can be extracted by manipulating the model.
General overview of some visualization tools revealed the importance of visualization. It enables users to
better explain complex data. Images produced can be manipulated to extract intrinsic information. Visualization is
very useful in teaching the complex systems in our day-to-day life and it is a cost effective and practical approach in
designing projects and products.
3. Case Study
All Visualization plays a key role in understanding ideas, concept and properties intrinsic to the data given in
computational projects/assignments or hand-on labs. For STEM education various visualization tools were
implemented in the classrooms to provide students with a better understanding of the theory they are being taught.
Some of the tools implemented are ParaView, ChemSketch, DecisionTools suite, Maxima, Yacas etc. Hands-on
labs were designed for instructors to familiarize them with the visualization tools so they can incorporate them in
their ongoing classes. We will briefly describe a general overview tool and then a discipline specific tools lab.
3.1. General Labs
The nature of a computational algorithm makes a planned method of delivery for the students somewhat difficult.
Most times students do not understand the algorithm even after the instructor has explained it several times. Handson labs are designed to aid the learning process. We will try to give students a firsthand experience in the use of
those algorithms in visualization environment which will encompass the use of visualization to enhance students
learning experiences
A typical of our lab will include the following:
Case Description:
Given application/specific problem, students will solve this problem by using specific algorithm and tool.
Lab goal:
What’s the purpose of this lab? What new techniques/codes in will the student learn ?
Some guidance as to how to go about the investigation:
Small hints guide the student in the right direction. Hints will be minimized as lab difficulty increases.
For the general visualization lab, a very powerful visualization tool, ParaView was implemented. ParaView is an
open source, freely available program for interactive scientific visualization. It can be used to visualize extremely
large datasets. The data exploration can be done interactively in 3-D or programmatically using ParaView’s batch
processing capabilities. ParaView is simple to use and users can build visualizations to analyze their data. Users
learned how to start a source from scratch or how to load and view existing data. They were also able to utilize
various features of ParaView to further explore the data.

1940 	

Hongmei Chi et al. / Procedia Computer Science 4 (2011) 1937–1943
Author name / Procedia Computer Science 00 (2011) 000–000

The image shown in Fig. 2 represents the crushing of a can by a brick. Students were given the data set for
the images shown below. They were able to explore and visualize the given data using the features available in
ParaView. The color-mapping feature allows the users to understand the intensity of the impact.

Fig.2: The images above show three different screenshots at different times from the simulation that shows the crushing of a can by a brick.

3.2. Computational Chemistry Lab
A more discipline specific visualization tool ChemSketch [6,7,8] was implemented in a general chemistry lab.
ChemSketch is a freeware from ACD labs. It is a chemical structure drawing program. It is capable of drawing,
structure searching, chemistry and reporting. It is a very simple program to use with a convenient interface design.
We implemented ChemSketch to help students better understand molecular bonding and structures.
We implemented ChemSketch in a three hour general chemistry lab. Students were able to design their own
molecules since the interface is simple and easy to use. Students recorded the required data for the lab such as bond
angles, bond lengths, dihedral angles etc. The 3-D capability of ChemSketch allowed students to get a better
understanding of Lewis dot structures and also how molecules bond with each other in general. It also helped
students to understand the geometry of various different molecules. Some screen shots from ChemSketch are shown
in Figure 3. Those labs are available on our website (http://www.cis.famu.edu/~cstem).
3.3. Other Labs
In Table 1, we list visualization tools have been used in our STEM educations. Those tools have been used in
Calculus I—III, partial differential equation, and modeling and simulation classes. The simulation class offers to
senior undergraduate and graduate students, and this is an introductory course on simulation and Modeling meant for
Graduate/senior undergraduate students in CIS, Physics, aspects of simulation and/or visualization skills for Robot,
rocket, network security, weather prediction, stock, social networking, etc. This course focuses on (1)
Simulation/Modeling Tools (2)Methods/Algorithms for real-case Projects, and (3) Visualization Techniques and
Issues. During the semester for simulation class, students are required to complete a real-world project by using
OpenModelica or other simulation tools.

Hongmei Chi et al. / Procedia Computer Science 4 (2011) 1937–1943
Author name / Procedia Computer Science 00 (2011) 000–000

1941

Table 1 Open-source Visualization Tools
Tools
Maxima

OpenModelica
Yacas
Wolfram Alpha

ChemSketch

Kepler Project
Protoviz

Vizster

Features
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•
•

System for manipulation of symbolic and numerical
expressions
High precision numerical results
Available for Windows, Linux, and Macos X
Good for Calculus I—III and Algebra
modelling and simulation environment
Good for Simulation and modelling
Symbolic manipulation of mathematical expressions
Arbitrary -precision numerical computation
Good for Calculus I--III
Web-based answer engine developed by Wolfram Research
Capable of responding to increasingly complex, naturallanguage fact-based questions
Include elementary mathematical function library
comprehensive chemical drawing package,
Offer drawing of polymers, organometallics, and Markush
structures
Good for Chemistry
Scientific workflow application
Create, execute and share models
Good for Simulation and modelling
Custom views of data with simple marks such as bars and
dots.
allows inheritance, scales and layout to simplify construction
uses Java script and SVG
Good for Simulation and modelling
Interactive tool for online social networks
Sociogram for exploring the links between network members.

Fig. 3: The left figure shows the simple GUI for ChemScketch, the right figure shows a molecule uploaded in ChemSketch. From this image
students were able to calculate bond lengths, bond angles etc.

1942 	

Hongmei Chi et al. / Procedia Computer Science 4 (2011) 1937–1943
Author name / Procedia Computer Science 00 (2011) 000–000

4. Student Feedback
After one-year implementation, we collected data from pre-survey and post-survey. Pre-survey was done at the
beginning of each semester; while the post-survey was conducted at the end of each semester. Feedback from
students has been very positive. The pre-survey and post-survey contain more than 10 questions. One of question
is shown pre-survey and post-survey data that we collect responses from students who took Chemistry course in
Fig.4. The following question was asked: Did this lab assist you in visualization?
The responses are based on 200 freshmen whose major are STEM disciples and have little background for
computations. In pre-survey, almost 70% of students do not think that computation /visualization would be
important. However, in post-survey, 85% of students consider that computation /visualization is important. This is
55% increase. The other question is “Which of the items below are most helpful for you to understand concepts in
your class? (a) Lectures (b) Computational/Hands-on Labs (c) Assignment (d) Group projects/assignments”. In postsurvey, more than 55% students select (b) and 30% increase in comparing with pre-survey.
The main finding so far suggests that the active learning activities via visualization are welcomed by students
and they have a sense of being involved in their learning experience. Of course, this survey is preliminary. The
findings from other STEM disciplines such as mathematical courses and computer simulation and modelling course
are positive as well.
One lesson we have learned from the past year is that choosing a good and open source tool and stick with it.
Do not try to teach students to use more one tool in one semester. Keep the same computational tool/software
through the semester so that students do not have to spend more time to be familiar to different software.

+RZFRPSXWDWLRQDOWRROVKHOSXQGHUVWDQGFRXUVHFRQWHQW



(YDOXDWLRQ
([SHFWDWLRQ





9HU\+HOSIXO

6RPHZKDW
KHOSIXO

1RWKHOSIXODW 8QDQZHUVHG
DOO

Fig. 4: The students’ feedback for one of computational project by using ChemSketch

5. Conclusion
Students came in with a very little background in computational science. Students were able to learn and complete
computational project by visualization. Overall, implementation of visualization was very exciting, useful and
successful as teachers and students were able to get hands-on experience. We will use two to three projects every
class every semester to implement these techniques and hence provide students with tools to better understand the

Hongmei Chi et al. / Procedia Computer Science 4 (2011) 1937–1943
Author name / Procedia Computer Science 00 (2011) 000–000

1943

ideas presented to them. Instructors will also receive tutorials on these tools so they can use them to explain ideas
better. In future, we need to develop more discipline specific hands-on projects for undergraduates.
So far, more than 300 STEM undergraduate students have experiences in using computational tools to complete
their projects/assignments. With the more instructors are involved, the more number of STEM students will be
familiar with computational tools and thinking.
Acknowledgements
This work has been supported in part by U.S. Department of Education grant P120A090122 and NSF grant
0939138. Any opinion, finding, conclusion or recommendation does not represent the views of NSF or the policy of
the Department of Education.
References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.

Riccardo Mazza. Introduction to Information Visualization. 2009. Springer-Verlag London. ISBN: 978-1-84800-218-0
Sandia National Labs, Kitware Inc, and Los Alamos National Labs. Paraview: Parallel Visualization application. www.paraview.org
ACD/ChemSketch Freeware, version 10.00, Advanced Chemistry Development, Inc., Toronto, ON, Canada, www.acdlabs.com, 2006.
Andrew Fitz Gibbon, David A. Joiner, Henry Neeman, Charles Peck, and Skylar Thompson. 2010. Teaching high performance
computing to undergraduate faculty and undergraduate students. In Proceedings of the 2010 TeraGrid Conference (TG '10). ACM,
New York, NY, USA, Article 7 , 7 pages.
Xiaohong Yuan, Percy Vega, Yaseen Qadah, Ricky Archer, Huiming Yu, and Jinsheng Xu. 2010. Visualization Tools for Teaching
Computer Security. Trans. Comput. Educ. 9, 4, Article 20 (January 2010), 28 pages
Philip A. Smith and Geoffrey I. Webb, 2000, The Efficacy of a Low-Level Program Visualization Tool for Teaching Programming
Concepts to Novice C Programmers, Journal of Education Computing Research, 22(2) 187-215
Clifford A. Shaffer, Thomas L. Naps, Susan H. Rodger, and Stephen H. Edwards. 2010. Building an online educational community
for algorithm visualization. In Proceedings of the 41st ACM technical symposium on Computer science education (SIGCSE '10).
ACM, New York, NY, USA, 475-476.
Bransford, J.D., Brown, A.L., & Cocking, R.R. (1999). How people learn: Brain, mind, experience, and school. Washington, DC:
National Academy Press.
National Commission on Mathematics and Science Teaching for the 21st Century (The). (2000). Before it’s too late: A report to the
nation from The National Commission on Mathematics and Science Teaching for the 21st Century.
[Online:http://www.ed.gov/americacounts/glenn/]
Maxima http://maxima.sourceforge.net/
OpenModelica http://www.openmodelica.org/
Yacas http://yacas.sourceforge.net/homepage.html
The Kepler Project https://kepler-project.org/
Protoviz http://vis.stanford.edu/protovis/
Vizster http://hci.stanford.edu/jheer/projects/vizster/

