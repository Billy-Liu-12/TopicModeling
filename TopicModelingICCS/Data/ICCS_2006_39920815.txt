Robustness of Greedy Type Minimum
Evolution Algorithms
Takeya Shigezumi
c/o Prof. O. Watanabe,
Dept. of Mathematical and Computing Sciences,
Tokyo Institute of Technology
Takeya.Shigezumi@is.titech.ac.jp

Abstract. For a phylogeny reconstruction problem, Desper and Gascuel
[2] proposed Greedy Minimum Evolution algorithm (in short, GME) and
Balanced Minimum Evolution algorithm (in short, BME). Both of them
are faster than the current major algorithm, Neighbor Joining (in short,
NJ); however, less accurate when an input distance matrix has errors.
In this paper, we prove that BME has the same optimal robustness to
such errors as NJ but GME does not. Precisely, we prove that if the
maximum distance error is less than a half of the minimum edge length
of the target tree, then BME reconstruct it correctly. On the other hand,
there is some distance matrix such that maximum distance error is less
than √2n of the minimum edge length of the target tree, for which GME
fails to reconstruct the target tree.

1

Introduction

A phylogeny reconstruction problem is to determine an evolutionary tree representing relationships between a set of species from a distance matrix expressing
the “closeness” of each pair of species. Recently, the phylogeny reconstruction
is not only used for biology, but also for clustering various kinds of data, such
as languages[10], music, etc.[11] To state the phylogeny construction problem
formally, we need some notations. For any n, we use L = {1, . . . , n} to denote a
set of n species. A distance matrix D = (dij ) over L , for each pair i and j in L,
a distance dij ≥ 0. Note that dij = dji and that dii = 0. An evolutionary tree
over L is a tree such that its set of leaves is L and all internal vertices are of
degree three. For any tree T and for any i and j in L, let dTij denote the length
of the unique path between i and j, i.e., the sum of the length of edges on the
path. Now the phylogeny construction problem is stated as follows.
Instance: A distance matrix D = (dij ) over L = {1, . . . , n}.
Question: Find a tree T ∗ minimizing the following square error:
∗

dij − dTij

2

i<j

V.N. Alexandrov et al. (Eds.): ICCS 2006, Part II, LNCS 3992, pp. 815–821, 2006.
c Springer-Verlag Berlin Heidelberg 2006

816

T. Shigezumi

Day [8] showed that this problem is NP-hard in general. It is, however, possible
to “reconstruct” a tree in polynomial time if a distance matrix is suﬃciently close
enough to the one for a given tree. Note that for any tree T , this T itself is the
unique solution for the phylogeny construction problem on the distance matrix
DT = (dTij ). Several polynomial time algorithms have been proposed for reconstructing the original tree T from DT . Among them, Neighbor-Joining[4], its
variants BIONJ [5] and WEIGHBOR[6], and Fitch-Margoliash as implemented
by Felsenstein [9] are well known. NJ and its variants run in O(n3 ) for reconstructing a tree of n leaves. Though polynomial, this running time is not sufﬁcient enough for constructing a large evolutionary trees, and several attempts
have been made to improve the eﬃciency .
Recently, Desper and Gascuel [2] introduced Greedy Minimum Evolution
(GME) algorithm based on the ordinary least squares (OLS) branch length estimation and Balanced Minimum Evolution (BME) algorithm based on a branch
length estimation scheme of Pauplin [3]. BME runs in O(n2 diam(T )) where
diam(T ) is a diameter of the target tree, and GME runs in O(n2 ), which is optimal considering that the size of the input distance matrix is O(n2 ). Moreover,
BME has an important property that the output tree has no edge with negative
length [1]. Since edges with negative length are biologically meaningless, this
property is also an advantage of BME.
In practice, a distance matrix has errors, that is, some distance δij diﬀers from
the original distance dTij . For measuring such errors, Atteson [7] introduced the
notation of “l∞ radius.” We say that a distance matrix Δ = (δij ) has l∞ radius
α to an original distance DT = (dTij ) if
DT − Δ

∞

= max |dTij − δij | < α min {l(e)},
i<j

e∈E(T )

where E(T ) is the set of edges of T and l(e) denotes the length of an edge e. An
algorithm has l∞ radius α if it yields the original T for any distance matrix of
l∞ radius α to DT . Note that no algorithm has l∞ radius larger than 12 . Because
if we allow errors larger than 12 l(e), there exists one distance matrix made from
two diﬀerent trees with such errors. Atteson showed that NJ has l∞ radius 12 .
Desper and Gascuel showed the relationship between BME length estimation
and weighted least squares branch length estimation [1] as a theoretical foundation of BME. However, there is still no theoretical analysis about l∞ radius
for GME and BME. We analyze BME and GME, and obtain the following two
theorems, which claim that BME has l∞ radius 12 but GME does not.
Theorem 1. BME has l∞ radius 12 , i.e., if the input distance matrix Δ satisﬁes
∗

DT − Δ

∞

<

1
min {l(e)}
2 e∈E(T ∗ )

BME outputs T ∗ .
Theorem 2. Let αG be an l∞ radius of GME. Then,
2
αG < √ .
n

Robustness of Greedy Type Minimum Evolution Algorithms

817

According to these theorems, BME has the same robustness as NJ, and it is
faster than NJ. On the other hand, GME is faster than BME, it is less accurate
in some cases. Our proof is obtained by a precise analysis of the proof of Desper
and Gascuel [1] for the correctness of BME on error free distance matrix. Desper
and Gascuel also proposed Balanced Nearest Neighborhood Interchange (BNNI)
algorithm to improve a phylogeny tree into minimal one. However, according to
our theorem, we do not need to use BNNI when BME is used for a distance
∗
matrix Δ with suﬃciently small DT − Δ ∞ error.

2

Preliminaries

We call T ∗ the target tree being studied with an edge set E(T ∗ ) and edge
T∗
weight function l : E(T ∗ ) → R. Let lmin
= mine∈E(T ∗ ) {l(e)} and Δ = (δij ) be
an estimate of the evolutionary distance between leaves i and j. Let E = (εij )
be an error matrix given by following equation:
∗

εij = δij − dTij ,
and ε0 be the maximum error such that ε0 = maxi,j |εij |. For a given tree T , we
say PijT be a number of edges on the path connecting i and j on the tree T , and
T
say r(A) for any subtrees A of T be a root vertex of the subtree. Let PAB
be a
number of edges from r(A) to r(B) for any disjoint subtrees A and B . We will
treat a subtree A as a set of leaves for a simpler notation.
Pauplin [3] showed BME principle to estimate the edge length by modifying
the OLS analytical formulae. Under this principle , the tree length is estimated
T
as ˆl(T, Δ) = i,j 21−Pij δij . Consider the tree T in Figure 1, where k is inserted
between subtrees C and A ∪ B, and assume that we have the size ˆl(T, Δ) of this
new tree. If we know the size of T , we can quickly calculate the size of T using
the following equation:
1
ˆl(T , Δ) = ˆ
l(T, Δ) +
4

T
T
T
T
δAC
− δAB
+ δkB
+ δkC

.

(1)

T
is deﬁned as follows. If A and B each contains only one leaf,
In this formula, δAB
T
denoted as a and b, respectively, then δAB
= δab , while if one of the two, say B,
T
T
T
.
= 12 δAB
+ δAB
is made of two subtrees denoted as B1 and B2 , then δAB
1
2
Under the OLS length estimation principle, (1) is represented as follows:

ˆl(T , Δ) − ˆl(T, Δ) = 1 (λ − λ ) Δk|A + ΔB|C
2
+(λ − 1) ΔA|B + Δk|C + (1 − λ) ΔA|C + Δk|B
where λ =

(|A|+|B||C|)
(|A|+|B|)(|C|+1)

,λ =

(|A|+|B||C|)
(|A|+|C|)(|B|+1)

and ΔA|B =

1
|A||B|

(2)

i∈A,j∈B δij .

We here introduce BME algorithm by Desper and Gascuel [2]. This algorithm
starts with the tree of three leaves and adds the leaf to minimize the estimated
tree length.

818

T. Shigezumi
C

C

k

A

k

B

A

T

B
T

Fig. 1. Positions the leaf k is inserted to

BME algorithm is as follows:
– For k = 3, initialize the matrix of balanced average distances between
distant-2 subtrees and the array counting the number of leaves par subtree.
Form T3 with leaf set {1, 2, 3}.
– For k = 4 to n,
T
1. Compute all δkSk−1 balanced average distances;
2. Starting from an initial edge e0 of Tk−1 , set f (e0 ) = 0, and recursively
search each edge e to obtain f (e) from (1).
3. Select the best edge by minimizing f , insert k on the edge to form Tk ,
and update the balanced average distance between every pair of distant-2
subtrees as well as the number of leaves per subtree.
– Return Tn .
The time complexity of BME is O(n2 diam(T ∗ )). GME is almost same but
T
using (2) and average distance ΔA|B instead of the equation 1 and δAB
. The
2
time complexity of GME is O(n ).

3

Robustness of BME

BME algorithm chooses the position of the leaf k step by step. Let Tk∗ be a tree
over {1, . . . , k} induced from the target tree T ∗ . The proof of Theorem 1 is by
the induction of k. In k = 3, there is only one topology T3∗ . Let us consider
the k-th round. By the induction hypothesis, BME reconstructs the target tree
∗
topology Tk−1
. BME chooses Tk minimizing ˆl(Tk , Δk ), where Δk is a distance
matrix on {1, 2, . . . , k} induced from Δ.
T∗
.
For any Tk = Tk∗ , we prove the following inequality holds if ε0 < 12 lmin
ˆl(T , Δk ) − ˆl(T ∗ , Δk )
k
k
∗
Tk

Tk

ij

∗

∗

21−Pij εij + ˆl(Tk , DkT ) − ˆl(Tk∗ , DkT ) > 0.

21−Pij εij −

=

ij

Robustness of Greedy Type Minimum Evolution Algorithms

Tk∗

Tk
k

A

819

k

C

A

B

C

B
Fig. 2.

Tk∗

and Tk

We call the value of the ﬁrst two terms of the last equation the error diﬀerence
and the value of the last two terms the tree diﬀerence.
We here provide two lemmas about the error diﬀerence and tree diﬀerence.
Their precise proofs are shown in [12]. Let Tk and Tk∗ , and name subtrees A, B
Tk−1
and C of Tk−1 as shown in Figure 2. Let p = PAC
, i.e., number of edges on the
path between the root of A and the root of C of Tk−1 .
Error Diﬀerence
Lemma 1
∗
Tk

Tk

21−Pij εij −
ij

21−Pij εij
ij
p

≥ −3ε0 + 2 · 2

−p

ε0 +

3 · 2 − 2 ε0
p
2 · 2 − 2 ε0

(p : even)
(p : odd)

Tree Diﬀerence
Lemma 2
∗

∗
∗
Tk
ˆ
l(Tk , DkT ) − ˆ
l(Tk∗ , DkT ) ≥ lmin
p − 2 + 2 · 2−p .

Proof of the Theorem 1
Now, we obtained that for any topology Tk = Tk∗ , the diﬀerence of the estimated
tree length is
ˆl(T , Δk ) − ˆl(T ∗ , Δk )
k
k
≥

Tk∗
lmin

p

p−2+2·2

−p

∗

− 3ε0 + 2 · 2

−p

∗

ε0 +

3 · 2 − 2 ε0
p
2 · 2 − 2 ε0
T∗

(p : even)
(p : odd)

T
k
Under the condition ε0 = DT − Δ ∞ < 12 lmin
≤ 12 lmin
, the estimated diﬀerence is larger than 0 for any p ≥ 2. Note that if p = 1, then Tk∗ = Tk .

820

4

T. Shigezumi

Robustness of GME

We consider a special case of input to prove the theorem 2. If ε0 exceeds αG ,
there is an input for which GME outputs a wrong tree. Same as the proof of
theorem 1, let Tk∗ be a target tree in k-th round of GME, composed of subtrees
A, B, C and a leaf k. Let Tk be a tree obtained from Tk∗ by swapping subtree
A and leaf k. GME uses the following equation to compare the estimated tree
lengths:
ˆl(T , Δk ) − ˆl(T ∗ , Δk ) = 1 (λ − λ ) Δk|A + ΔB|C
k
k
2
+(λ − 1) ΔA|B + Δk|C + (1 − λ) ΔA|C + Δk|B

,

(|A|+|B||C|)
(|A|+|B||C|)
where λ = (|A|+|B|)(|C|+1)
and λ = (|A|+|C|)(|B|+1)
.
We obtained the following lemma by the same way as the theorem 1.

Lemma 3. Let e be an edge on Tk∗ separating A and B from C and k.
∗
ˆ
l(Tk , Δk ) − ˆl(Tk∗ , Δk ) = (1 − λ )lTk (e) −

2(1 − λ )ε0
2(1 − λ)ε0

(|B| ≥ |C|)
(|B| < |C|)

Proof. See [12].
If |B| ≥ |C and ε0 <

1 Tk∗
(e),
2l

GME chooses Tk∗ . However, for A, B, C and ε0
∗

(1−λ ) Tk
satisfying |B| < |C| and ε0 > 2(1−λ)
l (e), GME chooses Tk . Consider when
the leaf k is the last leaf. in this case, FASTNNI after GME cannot correct this
fault.
Let F (a, b, c) be:

F (a, b, c) =

(a + b)(c + 1)(ab + c)
(1 − λ )
=
2(1 − λ)
(a + c)(b + 1)(ac + b)

where a, b and c are the cardinality of A, B and C respectively. By the deﬁnition
T∗
of αG , if ε0 < αG lmin
then GME succeeds to output T ∗ , we obtained αG ≤
F (a, b, c). We
minb<c,a+b+c+1=n
√
√
√ observed that F (a, b, c) is minimized when a =
n, b = n − 4 and c = n − 2 n + 3. Now the theorem is obtained:
αG ≤

min

0<a,0<b<c,
a+b+c+1=n

√ √
√
F (a, b, c) ≤ F ( n, n − 4, n − 2 n + 3)
2
2
5
12
2
= √ − − √ + 2 + ... < √ .
n n n n n
n

5

Concluding Remarks

We proved BME has l∞ radius 12 and GME has l∞ radius less than √2n . Desper
and Gascuel presented BNNI and FASTNNI to modify an initial tree to the

Robustness of Greedy Type Minimum Evolution Algorithms

821

minimal one. However, if ε0 < 12 mine∈E(T ∗ ) l(e), we does not need to use BNNI.
1−λ
If ε0 > 2(1−λ)
mine∈E(T ∗ ) l(e), and GME fails to put the last leaf, FASTNNI
cannot correct such fault.

References
1. R. Desper, O. Gascuel. Theoretical Foundation of the Balanced Minimum Evolution Method of Phylogenetic Inference and Its Relationship to Weighted LeastSquares Tree Fitting. J. of Mol. Biol. Evol. 2004 21(3): 587–598.
2. R. Desper, R. Gascuel. Fast and accurate phylogeny reconstruction algorithms
based on the minimum evolution principle. J. Comp. Biol. 2002 9: 687–705.
3. Y. Pauplin. Direct calculation of a tree length using a distance matrix. J Mol Evol.
2000 51(1): 41–7.
4. N. Saitou, M. Nei. The Neighbor-Joining Method: a New Method for Reconstructing Phylogenetic Trees. Mol Biol Evol. 1987 4(4): 406–25.
5. O. Gascuel. BIONJ: an Improved Version of the NJ Algorithm Based on a Simple
Model of Sequence Data. Mol Biol Evol. 1997 14(7):685–95.
6. Bruno WJ, Socci ND, Halpern AL. Weighted Neighbor Joining: a LikelihoodBased Approach to Distance-Based Phylogeny Reconstruction. Mol Biol Evol. 2000
17(1):189–97.
7. K. Atteson. The Performance of Neighbor-Joining Algorithms of Phylogeny Reconstruction. Proceedings of the Third Annual International Conference on Computing
and Combinatorics, Lecture Notes In Computer Science Vol. 1276 1997 :101 – 110.
8. W. Day, D. Sankoﬀ. Computational Complexity of Inferring Phylogenies by Compatibility. Systematic Zoology,1986 35(2):224–229.
9. J. Felsenstein. An Alternating Least Squares Approach to Inferring Phylogenies
from Pairwise Distances Systematic Biology,1997 46(1):101–111.
10. D. Benedetto, E. Caglioti and V. Loreto. Language Trees and Zipping. Physical
Review Letters 2002 88(4):048702-1–04872-4.
11. R. Cilibrasi, P. Vit´
anyi. Clustering by Compression. IEEE Transactions on Information Theory, 2005 51(4):1523–1545.
12. T. Shigezumi. Robustness of Greedy Type Minimum Evolution Algorithms. Dept.
of Math. and Comp. Sciences Tokyo Institute of Technology Research Reports (Series C), C-218, 2005. http://www.is.titech.ac.jp/research/research-report/
C/C-218.ps.gz

