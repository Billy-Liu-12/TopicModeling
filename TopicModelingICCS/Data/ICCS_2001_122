Graph Voronoi Regions for Interfacing Planar
Graphs
Thomas Kämpke and Matthias Strobel
Forschungsinstitut für anwendungsorientierte Wissensverarbeitung FAW
Helmholtzstr. 16, 89081 Ulm, Germany
{kaempke,mstrobel}@faw.uni-ulm.de

Abstract
Commanding motion is supported by a touch screen interface. Human
input demonstrating trajectories by a sequence of points may be incomplete, distorted etc. Theses e ects are compensated by a transformation
of vertex sequences of a regular grid into paths of a planar graph which
codes feasible motions. The transformation is based on alteration operations including re-routings and on a so-called graph Voronoi regions which
partition the plane according to proximity to vertices and edges.
Keywords: graph Voronoi region, grid graph, touch screen.

1

Introduction

Touch screen speciﬁcations of routes in a graph are investigated for the Euclidean
space. A graph is therefore overlayed with a regular grid. The interplay between
the graph and the grid gives rise to a variety of questions such as how to transform
a sequence of grid points into a (meaningful) path in the graph. This task is
similar to raster vector conversion with the diﬀerence that ”vectors” cannot be
chosen arbitrarily here but have to be taken from the graph. There is no true or
ultimate transformation here since the intended path may adhere to ergonomical,
aesthetic, or other criteria. Subsequent solutions should hence be considered as
elements that may be combined in diﬀerent manners.
The motivation for this problem stems from non-keyboard man-machine interfaces. Dynamic pointing operations typically serve for moving a scroll bar or an
icon and for obtaining artistic eﬀects from drawing with digital ink [2, p. 13].
Here, dynamic pointing relates to visible structures that restrict real motion in
analogy to ”streets”. Applications of the approach include methods for input to
spatial planning systems like navigation systems and techniques for commanding
mobile systems by allowing explicit human guidance.
The diﬃculty of grid to graph transformations stems from the regular neighbourhoods of the grid and the irregular neighbourhoods of the graph being indepenV.N. Alexandrov et al. (Eds.): ICCS 2001, LNCS 2073, pp. 708−717, 2001.
c Springer-Verlag Berlin Heidelberg 2001
�

Graph Voronoi Regions for Interfacing Planar Graphs

709

dent of each other. The transformations operate on two levels where the lower
level utilizes geometric concepts while the upper level operates by production
rules for regular expressions on mixed sequences of vertices and edges. So-called
graph Voronoi regions will account for proximity towards vertices and edges.

2

Graphs, Grids, and Their Relation

Undirected graphs G = (V, E) with vertex set V and edge set E are assumed
to be simple meaning that there is at most one edge between any two vertices
and no edge connects a vertex with itself (no loops). Each edge e is labeled by
a non-negative length c(e) = ce . A path is a vertex sequence with successive
vertices being adjacent. As the graph is simple, successive vertices of a path
are distinct but revisiting vertices is feasible within a path. The cost of a path
P (v, w) = (v = v1 , . . . , vs = w) from v to w with {v1 , v2 }, . . . , {vs−1 , vs } ∈ E is
�s−1
c(P (v, w)) := i=1 c(vi , vi+1 ). A shortest path from v to w is denoted P0 (v, w).
The degenerate case P0 (v, v) is the single vertex v.
All graphs are planar, connected, and the length of a vertex sequence that need
not be a path is considered later. The length of such a sequence is deﬁned as
sum of labels of successive vertices with cost assignment d(v, u) := c(v, u) for
{v, u} ∈ E and d(v, u) := c(P0 (v, u)) for {v, u} � ∈E.

Actual point sets connecting vertices are denoted by cur(v1 , v2 ). Edges and curves are symmetric in the sense that e = {v1 , v2 } = {v2 , v1 } and cur(v1 , v2 ) =
cur(v2 , v1 ). Curves may have several intersection points but no common sections.
Grids are unbounded and consist of equidistant horizontal and vertical lines. Each
grid point has eight neighbours which are reachable by moving along lines and
diagonals until the next point. The neighbourhood set of grid point p is N (p) and
the extended neighbourhood includes the grid point itself, i.e. N � (p) = N (p)∪{p}.
A vertex with smallest Euclidean distance towards a grid point p is v(p) =
argminv∈V ||v − p||2 and a grid point with smallest Euclidean distance towards
graph vertex v is p(v) = argminp∈P ||p − v||2 . The grid is assumed to be ﬁner
than the graph meaning that distinct graph vertices lie apart by at least the grid
width. Thus, distinct graph vertices have distinct closest grid points. The Voronoi
region of a vertex is the set of all points with smaller distance to that vertex than
to any other vertex, V (v) = {x| ||x − v|| ≤ ||x − w|| ∀ w ∈ V − {v}} with v being
the center of the Voronoi region. When clear from the context, Voronoi regions
will consist only of the grid points contained in the proper Voronoi regions.

3

Sequence Transformations

A grid point sequence p̄ = (p(1) , . . . , p(N ) ) induces the sequence of closest graph
vertices v̄(p̄) = (v(p(1) ), . . ., v(p(N ) )). The grid point sequence is connected if
each grid point is an extended neighbour of its predecessor. Even a connected

710

T. Kämpke and M. Strobel

�
❅

❅�

✟
� ✟

�

�

�

�

�
�☞
�
☞
�
� ☞
☞
☞
�☞
❍
❍❍
❍❍
�
�

�
�☞
�
☞
�
❅�
�
� ☞
❛ ❛
☞
❛
❛
☞
❛
❛
�
�
� ☞�
❍❛ ❍
✟
❛
�✟
❛ ❛
❛ ❍❛❍❛
�
❍�
�
❅

Figure 1: When specifying the grid point sequence (white dots) for a path (bold
edges), the grid and the Voronoi regions are invisible (left).
grid point sequence need not induce a path. This property is addressed by forming traces which indicate the changes in vertex sequences. The trace of sequence (v (1) , . . . , v (M ) ) with v (j1 ) = v (1) = v (2) = . . . = v (j2 −1) � = v (j2 ) . . . � =
v (jM ) = v (M ) is the subsequence tr(v (1) , . . . , v (M ) ) = (v (j1 ) , . . . , v (jM ) ). An example is tr(v4 , v4 , v3 , v4 , v5 , v5 , v4 , v7 ) = (v4 , v3 , v4 , v5 , v4 , v7 ). Whenever the trace is
a path, this path is taken as the transform of the grid point sequence. In other
cases, vertex insertions and deletions are required.

3.1

Isolated Insertions and Deletions

A vertex sequence which is not a path can be transformed into a path by vertex insertions between successive vertices with {v (i) , v (i+1) } � ∈E. Vertex insertions will
be obtained from shortest paths and they may adhere to additional constraints
such as not using vertices from the present sequence or from other insertions.
Decisions on allowing vertex repetitions ultimately appear to be possible only by
convention rather than by purely geometrical criteria. Vertex deletion may serve
as an alternative to insertions but this cannot be guaranteed to result in a path.

3.2

Joint Insertions and Deletions

Joint insertions and deletions also known as indels from string editing [3] adhere
to connectivity. Therefore, a vertex of a sequence is understood to be isolated from
the sequence, if the vertex is neither joined to its predecessor nor to its successor.
A vertex that is not isolated from a sequence is connected to that sequence.
A vertex v (i) is understood to be a single isolated vertex if {v (i−2) , v (i−1) } ∈
E, {v (i−1) , v (i) } � ∈E, {v (i) , v (i+1) } � ∈E, and {v (i+1) , v (i+2) } ∈ E.

A vertex sequence receives insertions so that a single isolated vertex v (i) becomes
connected if it lies on at least one shortest path from v (i−1) to v (i+1) . Otherwise
the vertex is deleted and again a shortest path is inserted from v (i−1) to v (i+1) ,
compare ﬁgures 2 and 3.

Graph Voronoi Regions for Interfacing Planar Graphs

vl
�

p(1) ❜

❜
�
v (1)

v (3)
�

�❅
�❅ ❜ ❜ ❜
�
�
❅❜
❅
❜
�
�
❅
❅
❜
❜
�
❅
�
❜ ❜ ❜
❜ ❜ ❜ ❜
❅
�
�
❅�
❜
(2)
(4)
v
v

711

vr
�

❜ p(19)

❜
�

v (5)

Figure 2: Graph with edges given by bold lines. Thin lines specify the boundaries
of the Voronoi regions. Vertex v (3) is singly isolated in (v (1) , . . . , v (5) ) which is
induced by the connected sequence (p(1) , . . . , p(19) ) indicated by white dots.
�
❍❍
❍
❅
❅
❅

❅
❅
❅

❜

❜

�
�
❅ �❅ �
�
❅
❅
�
� ❅�
�v (3) ❅
❅ ❜
�
❜ ❜❅
❜� ❜ ❜
❅�
�
�

❜

�
v (1)

�

❜

v (2)

v (4)

�

�
�
�
�
�

❜

✟✟

❜
�

❜

v (5)

Figure 3: Vertex v (3) again is a singly isolated. As it is located on the unique
shortest path from v (2) to v (4) , it becomes connected to the vertex sequence.

3.3

Graph Voronoi Regions for Planar Graphs

Vertex proximity as expressed by Voronoi regions is not suitable for path speciﬁcation. The reason is that closely following an edge which traverses a Voronoi
region but is not incident with that region’s center suggests an unintended vertex visit, compare ﬁgure 4. An appropriate partition of the plane is oﬀered by
forming certain Voronoi regions within Voronoi regions. These are based on the
distance between a set A and a point x with respect to a Voronoi region:
�
inf a∈A∩V (v) ||x − a||, for A ∩ V (v) � =∅
distV (v) (x, A) :=
∞,
for A ∩ V (v) = ∅.
The graph Voronoi regions are established to express proximity to any graph
element. Whenever a point from an ordinary Voronoi region is closest to that
region’s center or to an edge incident with the center, the point’s assignment
to the Voronoi region remains unchanged. Whenever a point from an ordinary

712

T. Kämpke and M. Strobel

v1

v3
❆× × × � × × ×✁
✟❍
❆ × ✟×
×❍× ✁
✟
❍✁
❆
✟
❜
❜
❜ ❜✁ ❍❍
�✟✟ ❆
❍� v2
❆ ❜ ❜ ✁
❆ ❜ ❜✁
❆
✁
❆ ✁
❆✁

Figure 4: A connected grid point sequence following closely the edge {v1 , v2 }
leads to vertex v3 being included in the induced vertex sequence. The mixed
Voronoi region VV (v3 ) (cur(v1 , v2 )) contains all grid points marked by white dots.
The remaining pure Voronoi region contains the grid points marked by crosses.
Voronoi region is closest to an edge that is not incident with the center of the
Voronoi region, that edge receives a subset of the Voronoi region and the point
under consideration is assigned to that subset. This results in the subsequent
deﬁnitions of pure and mixed (graph) Voronoi regions.
VV (v) (v)

VV (v) (cur(vi , vj ))

:=

{x ∈ V (v)| ∃ cur(v, vi ) such that distIR2 (x, cur(v, vi )) ≤
distIR2 (x, cur(vk , vl )),

∀ cur(vk , vl ) with vk , vl ∈ V − {v}}
:= {x ∈ V (v)| distIR2 (x, cur(vi , vj )) ≤ distIR2 (x, cur(vk , vl )),
∀ cur(vk , vl ) with {vk , vl } �= {vi , vj }} for
vi , vj ∈ V − {v}.

A pure Voronoi region coincides with the ordinary Voronoi region if and only if all
its mixed Voronoi regions are empty. For graph Voronoi regions a curve traversing
an ordinary Voronoi region without being incident with the center aﬀects grid
points of this region in the same way as a curve that passes by.
A grid point from a pure Voronoi region V (v) or VV (v) (v) will induce vertex v
and a grid point from a mixed Voronoi region VV (v) (cur(vi , vj )) will induce the
edge {vi , vj }. Formally, for any p ∈ P
�
v,
p ∈ V (v) or VV (v) (v) for some v
ind(p) :=
{vi , vj }, p ∈ VV (v) (cur(vi , vj )) for some v and vi , vj ∈ V − {v}.

3.4
3.4.1

From Mixed Sequences to Paths
Operations on Sequences

A sequence of vertices and edges is called a mixed sequence. The mixed sequence
induced by a grid point sequence p̄ = (p(1) , . . . , p(N ) ) is denoted by ind(p̄) =
(ind(p(1) ), . . . , ind(p(N ) )). The trace of a mixed sequence is understood in analogy

Graph Voronoi Regions for Interfacing Planar Graphs

713

to the trace of a vertex sequence. Mixed sequences are transformed to vertex
sequences according to a set O of operations. Their speciﬁcation is based on
strings such as A[x], A[x, y] etc. which denote possibly empty strings like A[x] =
x, x and A[x, y] = y, y, x, y. A1 [x], A1 [x, y] etc. denote strings that consist of at
least one of the bracketed terms. The vertex sequence resulting from no further
operation of O being applicable is denoted by v̄(·).
O1.

(X, v (i) , A[v (i) , {v (i) , v (i+1) }], v (i+1) , Y ) → (X, v (i) , v (i+1) , Y )
for last(X) � =v (i) and f irst(Y ) � =v (i+1) .

O2.

(X, v (i) , A[v (i) , {v (i) , v (i+1) }], A[{v (i+1) , v (i+2) }], v (i+2) , Y )
→ (X, v (i) , v (i+1) , v (i+2) , Y )
for last(X) � =v (i) and f irst(Y ) � =v (i+2) .

O3.

(X, A1 [v (i) , {v (i) , v (i+1) }], . . . , A1 [v (i+k) , {v (i+k) , v (i+k+1) }], v (i+k+1) , Y )
→ (X, v (i) , . . . , v (i+k+1) , Y )
for last(X) � =v (i) , {v (i) , v (i+1) }
and f irst(Y ) � =v (i+k+1) , {v (i+k) , v (i+k+1) }; k ≥ 0.

O4.

(X, A1 [v (i) , {v (i) , v (i+1) }], . . . , A1 [v (i+k) , {v (i+k) , v (i+k+1) }],
A1 [v (i+k+2) , {v (i+k+1) , v (i+k+2) }], Y ) → (X, v (i) , . . . , v (i+k+2) , Y )
for last(X) � =v (i) , {v (i) , v (i+1) } and f irst(Y ) � =v (i+k+2) ; k ≥ 0.

O5.

tr(ind(p̄)) = (X, S1 , . . . , Sk , Y )
→ (X, in(S1 ), out(S1 ), . . . , in(Sk ), out(Sk ), Y )
for select components S1 , . . . , Sk , k ≥ 1
v being the last vertex to which X is transformed or X = �
w = f irst(Y ) or Y = �
and no other operation applicable; see text.

The preﬁx X and the suﬃx Y may be the empty string �. In case several successive
edges neither share a vertex with their predecessor nor with their successor,
operations O1 - O4 may not be applicable or may result in multiple sequence
ambiguities. Such cases are resolved by select components. A select component of
a mixed sequence is deﬁned to be a ⊆-maximal subsequence of successive vertices
and edges such that it is either a single vertex, or a single edge, or applications
of O1 - O4 lead to a unique vertex sequence.
Each select component has an entry vertex and an exit vertex which is unique in
case the select component is a single vertex or leads to a unique vertex sequence.
Otherwise, these vertices admit a twofold ambiguity. In the unique case, the entry
vertex and the exit vertex may be identical as for a single vertex or a complete
cycle. Unique entry and exit vertices are denoted by v(in, Si ) and v(out, Si ),
the others are denoted by v(in, Si , 1), v(in, Si , 2), v(out, Si , 1), and v(out, Si , 2),
where v(in, Si , 1) = v(out, Si , 2) and v(in, Si , 2) = v(out, Si , 1). Ambiguities are
resolved by forming shortest paths as in ﬁgure 5. All edges receive d(·, ·) labels
with d(v, ·) and d(·, w) becoming zero in case X = � and Y = � respectively.

714

T. Kämpke and M. Strobel

S1
v(out,
v(in,� S1 , 1)
� S1 , 2)
✑❍❍
✟✟◗
✑
✟
◗
❍❍
◗ ✑
❍�
�❍✟
✟
✑
◗
✟✟v(in, S2 )
v ❍
✑ ◗
✟
❍❍
✑
◗
❍✑
�
◗�✟✟
v(in, S1 , 2)
v(out, S1 , 1)

S2
�
v(out, S2 )

�
w

Figure 5: Substitution graph for shortest paths through S1 and S2 where S1 has
non-unique entry and exit vertices while S2 has unique entry and exit vertices.
3.4.2

Transformations

Whenever a vertex sequence results from the operations of O applied to a mixed
sequence, the vertex sequence has no immediate repetition. The transformation
based on the extended deﬁnition of v̄ formally is again given by
�
v̄(tr(ind(p̄))), if v̄(tr(ind(p̄))) is a path in G
T r(p̄) :=
void,
else.
Whenever the trace of an induced sequence alternates between two vertices such
as (v4 , v2 , v4 , v2 ), no operation of O applies and thus the sequence is left unchanged by v̄(·). It is thus possible to state deliberate vertex repetitions in paths by
suitable grid point sequences.
3.4.3

Complete Transformations

In case T r(p̄) is void, the vertex sequence v̄(tr(ind(p̄))) can be extended to a
path by inserting shortest paths between any successive vertices that are not
adjacent in G. A reasonable decision on inserting and deleting vertices can be
based on the connectivity of the grid point sequence. If the grid point sequence is
disconnected, deletions are forbidden. The reason is that a disconnection of the
grid point sequence may result from deliberate jumps to sections of the graph
that must be visited by the path. If the grid point sequence is connected, single
isolated vertices will be deleted if they do not lie on a shortest connecting path
in G, otherwise they will be connected. The complete procedure is as follows.
A1
1. Input p̄ with T r(p̄) = v̄(tr(ind(p̄))) = (v (1) , . . . , v (M ) ) = v̄.
2. If T r(p̄) is a path, no operations are performed;
else if p̄ is disconnected then any v (i) , v (i+1) with {v (i) , v (i+1) } � ∈E are
connected by P0 (v (i) , v (i+1) ) giving new path v̄;
else insertions P0 (v (i) , v (i+1) ), P0 (v (i+1) , v (i+2) ) are replaced by
P0 (v (i) , v (i+2) ) if v (i+1) is single isolated vertex in original v̄ giving
new v̄.
3. Output path v̄.

Graph Voronoi Regions for Interfacing Planar Graphs

715

Whenever vertex repetitions in the ﬁnal path are unintended they can be suppressed by best shortenings [5]. If connectivity of the grid point sequence is no
criterion of the path construction, potential deletion of a single isolated vertex
can still be considered meaningful giving the next algorithm.
A2
1. Input p̄ with T r(p̄) = v̄(tr(ind(p̄))) = (v (1) , . . . , v (M ) ) = v̄.
2. If T r(p̄) is a path, no operations are performed;
else any v (i) , v (i+1) with {v (i) , v (i+1) } � ∈ E are connected by
P0 (v (i) , v (i+1) ) giving new path v̄, insertions P0 (v (i) , v (i+1) ) and
P0 (v (i+1) , v (i+2) ) are replaced by P0 (v (i) , v (i+2) ) if v (i+1) is single
isolated vertex in original v̄.
3. Output path v̄.

4

Computational Issues

The computation of graph Voronoi regions can be reduced to computing Voronoi regions of vertices and of a ﬁnite collection of line segments and then taking
certain intersections of these regions. Both individual computations can be perforemd in O(n log n), see [9] for the latter, but these computations are concepturally
complicated. They have even lead to approximations of Voronoi regions of a ﬁnite
collection of line segments by angular bisector regions [1].
A simple approximation of graph Voronoi regions relies on the nearest vertex
and the nearest edge for each grid point being computable in O(n); planarity of
the graph ensures that it has at most 3n − 6 edges. Whenever the nearest line
is incident with the nearest vertex, the grid point lies in the pure Voronoi region
of that vertex. Otherwise, the grid point lies in the mixed Voronoi region of that
line with respect to the nearest vertex. Computing the mixed induced sequence
of a grid point sequence of legth N then requires time O(N n).
The previous approximations of graph Voronoi regions and transformations by
algorithm A2 were implemented with input obtained from an elo 151R IntelliTouch 15-inch touch screen. Geometric data handling was organized within the
LEDA system, and the algorithms were written in C++.
Figures 6 through 9 show a planar graph and a sequence of about 200 grid
points being transformed to a path. Edges are labeled by their Euclidean lengths.
Figure 8 depicts approximations of the graph Voronoi regions. The ”overshoot”
(U-shaped section) of the grid point sequence in ﬁgure 7 in the center region of
the graph is so large that vertex insertions occur.

716

T. Kämpke and M. Strobel

Figure 6: Planar graph with 12 vertices.

Figure 7: Graph with grid point sequence, grid omitted.

Figure 8: Graph, grid point sequence, and approximated graph Voronoi regions.

Figure 9: Graph with grid point sequence transformed to a path (bold edges).

Graph Voronoi Regions for Interfacing Planar Graphs

717

References
[1] Cloppet, F., Olivia, J.-M., Stamon, G., ”Angular bisector network, a simpliﬁed generalized Voronoi diagram: applications to processing complex
intersections in biomedical images”, IEEE Transactions on Pattern Analysis and Machine Intelligence 22, 2000, p. 120-128.
[2] Cohen, P. et al., ”Multimodal interaction for 2D and 3D environments”,
Computer Graphics and Applications, July/August 1999, p. 10-13.
[3] Gusﬁeld, D., ”Algorithms on strings, trees, and sequences: computer
science and computational biology”, Cambridge University Press, Cambridge, 1997.
[4] Hopcroft, J.E., Ullman, J., ”Introduction to automata theory, languages
and computation”, Addison-Wesley, New York, 1979.
[5] Kämpke, T., ”Interfacing graphs”, Journal of Machine Graphics and Vision 9, 2000, p. 797-824.
[6] Leeuwen, J.v. (ed.), ”Handbook of theoretical computer science: algorithms and complexity”, vol. A, Elsevier, Amsterdam, 1990.
[7] O’Rourke, J., ”Computational Gemetry in C”, 2nd ed., Cambridge University Press, Cambridge, 1998.
[8] Sugihara, K., ”Approximations of generalized Voronoi diagrams by ordinary Voronoi diagrams”, Computer Vision and Graphic Image Processing 55, 1993, p. 522-531.
[9] Yap, C.K., ”An O(n ∗ log n) algorithm for Voronoi diagrams of a set of
simple curve segments”, Discrete and Computational Geometry 2, 1987,
p. 365-393.

