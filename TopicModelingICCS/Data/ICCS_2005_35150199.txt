Modelling and Animating Hand Wrinkles
X. S. Yang and Jian J. Zhang
National Centre for Computer Animation,
Bournemouth University, United Kingdom
{xyang, jzhang}@bournemouth.ac.uk

Abstract. Wrinkles are important visual features on the skin of an animated character. However, realistic animation of wrinkles is not easy,
especially for the hand, as it gathers many types of diﬀerent wrinkles. In
this paper, we present a computationally eﬃcient method for the generation of hand wrinkles, both for the palm and the ﬁngers. This method
is developed by exploiting the inherent properties relating to wrinkles,
which are volume preservation of the underlying ﬂesh and incompressibility of the skin. Although this method is for the hand model, it is
also applicable to other parts of the body where the skin is deformed by
underlying skeleton joints.

1

Introduction

Wrinkles are important visual features for realistic animated characters. On a
human body, there are two types of wrinkles: ﬁne-scale and large-scale ones. Between them, the latter is more signiﬁcant in computer animation, as the largescale wrinkles mark pronounced feature lines on the skin surface and are obvious
to the human eye. The large-scale wrinkles change with the motion of the character and capture the motion related skin deformations. The ﬁne-scale ones are,
on the other hand, much less visible and are relatively static compared with the
other type.
There have been a number of techniques developed in representing and animating wrinkles on an animated human character. The ﬁne-scale wrinkles are
usually produced as texture on the skin mesh. As long as the skin area concerned
does not deform to a large amount, this technique is eﬀective and is reasonably
realistic. Physiologically, large-scale wrinkles on a human body were there when
the person was born, starting with shallow lines. These lines get deeper with
the repetitive motion of the body parts, such as those on the forehead and the
palm. Human skin deforms due to the properties of the skin and the underlying internal body elements. Distinctive skin deformation patterns are formed
around wrinkles as a result of two most signiﬁcant features relating to the human
skin. The ﬁrst is the incompressibility of the skin and the other is the volume
preservation property of the underlying ﬂesh. To animate a human character
Corresponding author.
V.S. Sunderam et al. (Eds.): ICCS 2005, LNCS 3515, pp. 199–206, 2005.
c Springer-Verlag Berlin Heidelberg 2005

200

X.S. Yang and J.J. Zhang

realistically, these properties need to be convincingly modelled. This accounts
for the diﬃculty for simulating large-scale wrinkles realistically in computer
animation.
In this paper, we concentrate on the problem of large-scale wrinkle modelling,
in particular, we will look into how hand wrinkles can be modelled and animated
realistically within current animation production pipeline. Because of the properties of the skin around a wrinkle, physically simulating the deformation process
is no doubt ideal. Nevertheless, such an approach often involves a sophisticated
mechanical model and is likely to involve heavy computational overheads. Since
what matters to animation is visual realism and in many case computational eﬃciency, in this paper we will develop a non-physically based simulation technique.
The idea is to reproduce the skin deformation parametrically around large-scale
wrinkles.
The remainder of the paper is structured as follows. Previous work was brieﬂy
reviewed in Section 2. Section 3 discusses the issues relating to a wrinkle deformation region including mesh generation. In Section 4.1, the shape of the cross
section of large-scale wrinkles is derived. This is then followed by wrinkle animation in Section 4.2. Section 5 concludes the paper.

2

Previous Work

The most straight forward idea to generate wrinkles is texture mapping. The
texture can be either extracted directly from photos or synthesized. However,
it is diﬃcult to animate, especially when large deformation is involved. Viaud
and Yahia [1] presented one of the early methods for wrinkle modelling. They
modelled wrinkle bulges as spline segments. Bando et al [2] presented a technique
for the modelling of both ﬁne-scale and large-scale wrinkles. For the ﬁne-scale
ones, their method is in essence a texture synthesis technique. For large-scale
wrinkles, they displace the vertices concerned in the normal direction of the
wrinkle shape. Adaptive mesh reﬁnement is carried out for those areas if the
mesh is too coarse for the required resolution. Larboulette and Cani [3] recently
presented a technique for generating dynamic wrinkles geometrically. Their idea
is to model wrinkles as a length preserving curve. When a curve is pushed at
one end, wrinkles start to appear and ripple through the whole length. Because
of this analogy, their method is eﬀective on parallel wrinkles appearing on both
cloth and human skin.
Physics-based techniques have also been studied by many researchers [4].
Wu’s method [5] includes both texture mapping and a linear plastic model to
simulate the wrinkling phenomenon. Boissieux et al. [6] modelled skin as a volumetric substance with a layered structure. The ﬁnite element method was used
to compute the deformation. In general, physical modelling methods tends to
produce mathematically more accurate results, however, are in practice more
expensive than other alternatives.

Modelling and Animating Hand Wrinkles

3

201

Wrinkle Deformation Regions

On the palm and other parts of the human body where large-scale wrinkles
appear, the skin deforms locally when the relevant body parts move. In this
Section, we present a method to deﬁne a deformation region for each or a group
of wrinkle(s). We also discuss how this region is seamlessly merged with the
existing surface mesh of the animated character model.
3.1

Wrinkle Lines

Wrinkle lines deﬁne the direction and pattern of the wrinkles. These lines are
user-speciﬁed and can be either manually drawn or obtained from other techniques. Essentially, they reﬂect the intention of the user (animator). Once these
lines are given, our technique will then produce the mesh geometry and deformation following the animation parameters. Figure 1 shows some typical wrinkle
lines on the palm, each line consists of a number of segments.

Fig. 1. Hand-drawn
wrinkle lines

3.2

Fig. 2. Voronoi diagram
and wrinkle lines

Fig. 3. Wrinkle lines and
deformation region

Determination of Wrinkle Deformation Regions

Media axes are feature lines which can partition an irregular region with some
sense of ’symmetry’ [7]. From observing skin deformation resulting from wrinkles,
we believe it is reasonable that their deformable region can be deﬁned as an area
where the wrinkles are regarded as their media axes.
Practically, we try to deﬁne an oﬀset curve for each wrinkle line on the
parametric space of the existing model. As each wrinkle line is a separate line
entity, its oﬀset curve actually marks out a closed region. The overall deformation
region for a group of connected and closely laid wrinkle lines are taken as the
union of all the separate regions.
To compute the boundary and mesh of this region, we construct a Voronoi
diagram. Algorithmically, for each wrinkle line, we have adopted the algorithm
from [7]. Figure 2 shows the Voronoi diagram (red) corresponding to the wrinkle
lines (green). By considering the inﬂuence distance, we are able to mark the
deformation region out of the diagram, as shown in Figure 3.

202

X.S. Yang and J.J. Zhang

3.3

Mesh Generation

One of the advantages of using a wrinkle deformation region is that we can
avoid mesh reﬁnement, which can be expensive, as the original mesh usually
does not guarantee that suﬃcient number of mesh vertices are placed within
the wrinkle area. Mesh subdivision is necessary to produce a large number of
densely populated vertices. This however, can be unnecessarily expensive. Using
the deformation regions presented in above, the mesh is ready in place to deform
the skin in a required manner.
By superimposing Figure 2 with Figure 3, we can generate the mesh in the
deformation region, as seen in Figure 4. The vertices are in the right place to represent wrinkle deformation. From our experiment, this initial mesh is adequate
for most wrinkle animation applications.
Now we are ready to merge the deformation region with the animation model,
in our case, the hand model. This is a straightforward process. What we need
to do is to place the deformation region on the parametric space of the model
and remove all vertices falling into the region from the model. The deformation
region carved out of the model mesh is patched up by the Voronoi mesh (Figure
5a). At the boundary of the deformation region, vertices from the original model
mesh and the Voronoi mesh may not match exactly. Triangulation around the
boundary is necessary to ﬁx it. Figure 5b shows the mesh of the wrinkle deformation region merged with the original hand mesh. Notice that the mesh does
not need to be dense.

a
Fig. 4. Initial mesh in the deformation region

4

b

Fig. 5. Merge both meshes together

Animation of Wrinkles

The animation of wrinkles involves two key elements, deformation simulation
conforming to the skin properties around wrinkles; and the establishment of the
relationship between deformation and motion parameters.
4.1

Skin Deformation

Realistic skin deformation relies on the simulation process to recognise the properties of the skin around a wrinkle. As the visual quality is what we are after
rather than the physical accuracy, we do not intend to simulate the phenomenon

Modelling and Animating Hand Wrinkles

203

based on the physical principles that govern the deformation. Instead, we will
use a cheaper alternative to formulate the shape of the skin.
Two properties of the human skin are of particular importance to achieve
good visual quality of an animated character, which are volume preservation
of the tissue under the skin; and the incompressibility of the skin itself. In the
following we will develop equations that are able to capture the essence of these
properties.
Volume Preservation. In the cross section of a wrinkle, the proﬁle is similar to
the curve given in Figure 6. At its rest pose the initial values of both parameters,
h and a, are given by the user. Assuming the skin was ﬂat before a wrinkle was
placed, the presence of the wrinkle ditches the skin, but the ﬂesh is bulged at
the sides.
We propose a piecewise polynomial function, called the shape function, to
represent the two sections illustrated by the proﬁle curve in Figure 6. The two
sections are [0, 2a] and [2a, A]. Both connect smoothly at x = 2a when the shape
function peaks. From Figure 6, the constraints for the ﬁrst section are that the
curve passes three points (0, −h), (a, 0) and (2a, h/8), and satisﬁes f (2a) = 0.
Thus the shape function for the ﬁrst section is given by:
f (x) =

5h 3
29h 2 7h
x −
x +
x − h x ∈ [0, 2a]
32a3
32a2
4a

(1)

For the second section [2a, A], the shape function is developed from the cubic
Hermite interpolation method, where unknown A is to be determined:

f (x) =

3h(A + 2a) 2
h
3hAa
−hA3 + 6hA2 a
x ∈ [0, 2a] (2)
x3 −
x +
x−
3
3
3
4(A − 2a)
8(A − 2a)
2(A − 2a)
8(A − 2a)3

In order to preserve the volume during deformation, the following condition
is to be met:
A

f (x)dx = 0

(3)

0

This gives:
A

2a

f (x)dx =
0

A

f (x)dx = −

f (x)dx +
0

h(A − 2a)
h(−20a + 3A)
7ha
+
=
= 0 (4)
24
16
48

2a

Solving this integral equation, we obtain:
A=

20
a
3

(5)

Substituting Eq. (5) back into Eq. (2), the function of the second section
arrives. In fact, parameter A can also be controlled by the user if this is the user
chooses to do. In that case, the volume may vary to suit the intended design of
the skin shape.

204

X.S. Yang and J.J. Zhang

Fig. 6. Wrinkle shape function

Fig. 7. Skeleton driven-animation

Incompressibility of Skin. Incompressibility is a diﬀerent property to that of
volume preservation. This property suggests that the length of the skin remains
constant during animation. Compared with the former, this property is of more
signiﬁcance in visual realism. Linking with the shape function, this condition
can be expressed by the following integral equation:
A

1 + [f (x)]2 dx = C

G(h, a) =

(6)

0

where C is a constant, which is calculated at the rest pose of the animated model.
Since this equation involves two parameters a and h, once the length C is known,
both parameters become mutually dependent of each other. Animating the model
deforms the wrinkle proﬁle, this further leads to a new value for parameter a
(how to compute the value of a is explained at the next subsection). Thus Eq. (6)
reduces to G(h) = C. This equation is not usually solvable analytically, but can
be solved reasonably straightforwardly using a numerical method, such as the
Newton method. This produces a new depth parameter h for the new pose. As
this is a one-dimensional problem, the resolution is fast. Real-time performance
is achieved for all our experiments.
4.2

Wrinkle Animation

Skeleton-driven animation is the most popular technique for character animation, which we use here as the driving action for wrinkle animation. That said,
when the skeleton moves, the character model, such as a hand model, together
with the wrinkles on the skin surface is animated. What we are trying to work
out is how such skeleton-driven animation is related to the shape change of the
skin, and in turn to the change of the wrinkling parameters, a and h, in our case.
Most hand joints have one dominating rotational degree of freedom (DOF),
such as the ﬁngers and palm. In fact, even for joints with a complex combination
of angular movements, at an instant, it is reasonable to regard the rotational motion as being of one DOF, perhaps in an arbitrary orientation. This observation
is useful in simplifying the animation process.
Let us look at the wrinkles around a ﬁnger joint, where the joint angle acts
as the driving parameter. If it bends, the back of the ﬁnger stretches and the

Modelling and Animating Hand Wrinkles

205

inside surface shrinks, which makes the wrinkle around the joint more or less
prominent. Figure 7 shows the skeleton and skin surface around a joint. P is a
point on the wrinkle line, d is the distance from the point to the joint centre, β
is the joint angle at the rest pose. When the joint rotates to angle β , the length
of the skin surface is shortened and the shrinkage can be computed by:
S =d∗

β
β

(7)

Here S indicates the amount of shortening of the skin relative to its original
length. S = 1 means it is the rest pose, S > 1 suggests the skin expands, and
S < 1 signals the skin shrinks. Thus a corresponding new value of a is given by:
a = S ∗ a0

(8)

where a0 is the parameter at its rest pose.
With a we can compute a new value of h using Eq. (6), if accuracy is important. Otherwise we can simply approximate the shape function curve between
[0, a] by a straight line whose length is kept constant. This results in a simpler
formula for the depth h:
⎧
⎨
h=

⎩

h20 + (1 − s2 )a20
0

s<

1+

h2
0

s≥

1+

h2
0

a2
0

(9)

a2
0

where h0 denotes the parameter at the rest pose. This is reasonable, as when
the skin exceeds the length of the skin when being stretched, the depth of the
wrinkle will become zero. When the skin shrinks, the depth will increase reaching
the maximum depth of h20 + a20 .
Figure 8(a) shows the animation of a ﬁnger and the wrinkles on the back
surface. Figure 8(b) demonstrates the wrinkles generated on the palm and at
the joints of the ﬁngers.

a

b

Fig. 8. Application of wrinkles: (a) wrinkled ﬁnger model (b)Wrinkles on a hand model

5

Conclusion

Wrinkles are important visual features on the skin of an animated human and
creature character. In this paper, we have presented a new method for the gener-

206

X.S. Yang and J.J. Zhang

ation of hand wrinkles quickly and realistically. This method works in the following steps. Wrinkle lines are given at the ﬁrst step, which are to catch the intent
of the animator. Such wrinkle lines can be either manually drawn or scanned in.
In the second step, a deformation region is deﬁned for a group of closely laid
wrinkle lines. Local meshes within the deformation regions are produced and
merged with the mesh of the model. Compared with other existing techniques,
our method is cheaper and needs a smaller number of vertices in the deformation region. A wrinkle shape function is derived in the third step, where both
volume preservation and skin incompressibility are taken into account. Due to
the exploitation of these two properties, our method is able to produce visually
realistic results without using full scale physics. In the ﬁnal step, the wrinkles are
animated together with the hand model, where key parameters of the wrinkle
shape function are determined at each pose.
Although our method uses the hand model explicitly, it is applicable also to
other parts of the body where the skin is deformed by underlying skeleton joints.

Acknowledgements
This research is funded by the AHRB grant B/RG/AN5263/APN12727. The
authors would also like to gratefully acknowledge Martin Held for providing us
the code to generate Voronoi diagrams. We are grateful for the donation of the
Maya licenses from Alias.

References
1. M.L. Viaud, H.Y.: Facial Animation with Wrinkles. Proc. Eurographics workshop
on Animation and Simulation. (1992).
2. Bando, Y.T.U., Japan; Kuratate, T.; Nishita, T.: A simple method for modeling
wrinkles on human skin. Proceedings 10th Paciﬁc Conference on Computer Graphics
and Applications. (2002)
3. Larboulette, C. and M.-P. Cani: Real-Time Dynamic Wrinkles, Computer Graphics
International. (2004) IEEE Computer Society Press.
4. Wu, Y., N.M. Thalmann, and D. Thalmann: A plastic-visco-elastic model for wrinkles in facial animation and skin aging, Proceeding of the second Paciﬁc conference
on Fundamentals of computer graphics. (1994) 201–213.
5. Yin Wu, P.K., Laurent Moccozet , Nadia Magnenat-Thalmann, Simulating wrinkles
and skin aging. The Visual Computer, 15(4)(1999) 183 - 198.
6. Boissieux, L.K.; Thalmann, N.M.; Kalra, P.: Simulation of skin aging and wrinkles with cosmetics insight. in Computer Animation and Simulation, Eurographics,
(2000).
7. Held, M., VRONI: An engineering approach to the reliable and eﬃcient computation of Voronoi diagrams of points and line segments. Computational Geometry,
18(2)(2001) 95-123.

