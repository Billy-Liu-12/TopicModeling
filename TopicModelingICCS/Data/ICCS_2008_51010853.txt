An Integer Linear Programming for Container
Stowage Problem
Feng Li, Chunhua Tian, Rongzeng Cao, and Wei Ding
IBM China Research Laboratory,
Beijing 100094, P.R. China
{lfeng, chtian, caorongz, dingw}@cn.ibm.com

Abstract. So far most stowage planning only consider the stowage of
single type containers or do not consider the stability of the containership. Here a 0-1 linear programming model for this problem is proposed.
The objective is to maximize space utilization while minimize the operation cost from upload and download of diﬀerent types containers at
each port of a multi-port journey, with vessel stability, industry regulations and customized rules as the constraints. Based on experiments by
adopting branch & cut algorithm from COIN-OR(Common Optimization Interface for Operations Research) to such model. Successively, a
simulation system is developed to verify the feasibility and practicability
of the model. By using the branch and cut algorithm of COIN-OR, the
simulation system has shown that our model is eﬃcient and robust.
Keywords: Container Stowage Planning, Integer Programming.

1

Introduction

Since the 1970s, containerization has increasingly facilitated the transportation
of cargos. Nowdays over 60 percent deep-sea general cargo is transported in Containers, whereas some routes, especially between economically strong and stable
countries, are containerized up to 100 percent [1]. There are lots of shipping
companies competing around the world to provide proﬁtable container transportation services. In order to increase the beneﬁt of economy of scale, the size
of containerships has enhanced. The increase in capacity has been typically from
relatively small 350 Twenty Foot Equivalent Units (TEUs) to containerships
with capacities of more than 8000 TEUs [2]. The increase of containership size
contributes to incremental proﬁts of shipping companies, it will cause a minus
factor, enlarginging complexity and diﬃculty of the arrangement of containers.
The arrangement of contaioners for a containership is usually called Container
Stowage Problem (CSP).
CSP is complicated because of its combinatorial nature. In recent operations
research and management science literatures, the mothods develped to sovle it
can be grouped into ﬁve main classes: mathematical modeling, simulation based
upon probability, decision support systems and heuristics. Among them, there
are several objectives for the problem: optimizing available space and prevent
M. Bubak et al. (Eds.): ICCS 2008, Part I, LNCS 5101, pp. 853–862, 2008.
c Springer-Verlag Berlin Heidelberg 2008

854

F. Li et al.

damage, minimizing berthing time [3], minimizing total number of shifting of
containers [4], maximizing containership’s ultilization, and so on. Unfortunately
those approaches have some commonalities with the problem and mainly devoted to the loading problem. The well-known mathematical model for CSP
is integer linear programming [5]. Although those models can provide optimal
solutions for CSP, they have incorporated too many simpliﬁcation hypotheses,
which have made them unsuitable for practical applications. The ﬁrst simulation
approach is completed by Shields [6]. In his work, a small number of stowage
plans are randomly created to be evaluated and compared by simulation of the
voyage and the best is selected. It is eﬃcient in practice, it does not guarantee
the optimality of the solutions, and it also takes a long computation time to
ﬁnd a reasonably good solution. Later, Saginaw and Perakis [7] and Shin and
Nam [8] develop decision support systems that are based on the knowledge of a
manager or an operator in charge of loading and unloading operations, Wilson
et al. presented a realistic model, taking into account all technical restrictions
in order to implement a commercial usable decision support system. They decomposed the CSP into two phases: strategic process and tactical process [9].
However, those decision support systems only show a solution of small sample
problem and their eﬃciency from the practical viewpoint are not shown. The
ﬁrst heuristic for CSP is proposed by Martin et al. [10]. They addressed CSP
for the transtainer system, and developed a heuristic algorithm to solve it. Since
then Todd and Sen implemented a genetic algorithm procedure with multiple
criteria such as proximity in terms of container location on board and minimization of unloading-related re-handle, transverse moment and vertical moment [11],
Haghani and Kaisar developed a heuristic algorithm for CSP with minimizing
container handling cost, while keeping the containership’s GM acceptable [12].
Dubrovsky et al. implemented a genetic algorithm-based heuristic for CSP [13].
These heuristics can produce complete and practical but rarely near-optimum
solutions to the container stowage problem.
Considering those problems which are mentiioned above, an extend model for
CSP will be proposed in this paper, which is used to ﬁnd an optimal plan for
stowing containers of diﬀerent size into a containership on a multi-port journey,
with a set of structural and operational restrictions. The objective is to maximize the containership utilization while minimize the operation cost from the
container re-allocation. Such constraints and objective are ﬁrstly described in
detail, then a basic 0-1 Linear Programming model is proposed. Successively,
a simulation system was proposed to illustrate the eﬃciency of the model and
compare it with random stowage strategy.

2

Container Stowage Problem

When solving CSP, of particular interest are the constraints related to the structure of the containership and the size of the hold and upper deck. We consider here two types of containerships, namely Ro-Ro (Roll on-Roll oﬀ), which
load/unload containers through the ramps located either at the bow or the stern

An Integer Linear Programming for Container Stowage Problem

16
21

19

17

12
15

13

08
11

04
07

09

05

855

40'Bays
03

01

20'Bays Tiers
90
88
86
84
82
08
06
04
02

B

A
Rows
10
08
06
04
02
01
03
05
07
09

Fig. 1. Containership Structure

of the ship, and Lo-Lo (Lift on-Lift oﬀ), which load/unload containers from the
top(by using cranes).
The basic structure of a containership and its cross section are shown in Figure
1, which are used to provide an idea of how container stowage take places. There
are a given number of locations for placing containers, that can vary in size
depending on the containership. The most common location is 8 feet in height,
8 feet in width and 20 feet in length. Each location is identiﬁed by three indies,
each one consisting of two numbers given its position with respect to the three
dimensions. In partice, each location is addressed by the following identiﬁers:
(1) bay, that gives its position relative to the cross section of the containership
(counted from bow to stern); (2) row, that gives its position relative to the
vertical section of the corresponding bay (counted from the center to outside); (3)
tier, that gives its position related to the horizontal section of the corresponding
bay (counted from the bottom to the top of the containership). Thus a container
will be located in a given bay, a given row and a given tier. In oder to describe
CSP in detail, we propose the following notations.
Bay Index Sets: Let I denote index set of bay set, A and B denote index
sets of anterior part bay set and back part bay set, respectively, E and O denote
index sets of even bay set and odd bay set, respectively, where I=A∪B, I=E ∪O,
A ∩ B=∅ and E ∩ O=∅.
Row Index Sets: Let Ri denote index set of row set for the ith bay, LRi
and RRi denote index sets of left row set and right row set of the ith bay,
respectively. For example, the row set of the second bay for the containership
shown in Figure 1 is {09, 07, 05, 03, 01, 02, 04, 06, 08, 10}, then R2 = {1, 2, ···, 10},
LR2 = {1, 2, · · ·, 5} and RR2 = {6, 7, · · ·, 10}.
Tier Index Sets: Let Tij denote index set of tier set for the ith bay and the
jth row of Ri , let U Tij denote index set of upper tier set for the ith bay and the

856

F. Li et al.

jth row of Ri and let BTij denote index set of below deck tier set of the ith bay
and the jth row of Ri . Obviously, U Tij ∪ BTij = Tij and U Tij ∩ BTij = ∅
Port Set: Let P denote the port set which are on the journey of the containership. Suppose P = {1, 2, · · ·, |P |}.
Container Sets: Let Cp (p = 1, 2, · · ·, |P |) denote the container set, which will
|P |
be loaded on the containership at port p, and let C = ∪p=1 Cp . Let wc and dc
denote the weight and destination port of container c, ∀c ∈ C, repectively. In
this paper only two types of containers are considered, and let F denote set of
40-feet container, W denote set of 20-feet container. Let Cˆp (p = 1, 2, · · ·, |P |)
denote the set of containers which are loaded on port i, (i = 1, 2, · · · , p − 1) and
the order of those containers desitination port are greater than p. Obviously,
when p = 1, Cˆp = ∅.
2.1

Constraints

Using these notations, some structural and operational restrictions can be described as follows. Because the number of the allocations provided by containership is ﬁnite, the maximum number of the containers which can be stowed on
the containership is limitied. Thus at current port p,
xijkc · sc ≤ mt ,

(1)

xijkc ≤ mf .

(2)

i∈I j∈Ri k∈Tij c∈Cp ∪C
ˆp

i∈E j∈Ri k∈Tij c∈Cp ∪C
ˆp

where, xijkc denote the variables of the optimizaiton, with the following speciﬁcation:
xijkc =

1, If the container c is stowed in location {ijk},
0, otherwise.

(3)

and location {ijk} means the ith bay, the jth row of Ri and the kth tier of Tij .
sc denote the size of the container c ∈ C, and
sc =

1, If the size of container c is 20 foot,
2, If the size of container c is 40 foot.

(4)

mf denote the maximum number of 40-feet container which can be loaded on the
ship. mt denote the maximum number of 20-feet container which can be stowed
on the ship. At the same time, each location of the containership can only have
most one container and each container occupies one and only one location of the
containership, therefore,
xijkc ≤ 1, ∀c ∈ Cp ∪ Cˆp ,

(5)

xijkc ≤ 1, ∀i ∈ I, ∀j ∈ Ri , ∀k ∈ Tij .

(6)

i∈I j∈Ri k∈Tij

ˆp
c∈Cp ∪C

An Integer Linear Programming for Container Stowage Problem

857

The total weight of all containers which can be stowed on the containership
can not exceed the maximum weight capacity of the containership.
xijkc · wc ≤ Q,

(7)

i∈I j∈Ri k∈Tij c∈Cp ∪C
ˆp

where Q denote the maximum weight capacity of the containership.
In practice, any 40-feet container can not be stowed in an odd bay and any 20feet container can not be stowed in an even bay; the stowage of 20-feet containers
in those odd bays that are contiguous to even bays’s location already chosen for
stowing 40-feet container is unfeasible, and inversely; any 20-feet container can
not be stowed on any 40-feet container; and any container can not be hangingly
stowed. Then, we can get
xijkc = 0,

∀i ∈ O, j ∈ Ri , k ∈ Tij ,

(8)

xijkc = 0,

∀i ∈ E, j ∈ Ri , k ∈ Tij ,

(9)

ˆp )
c∈F ∩(Cp ∪C

ˆp )
c∈W ∩(Cp ∪C

xijkc ≤ 1, ∀i ∈ E, j ∈ Ri , k ∈ Tij , (10)

x(i+1)jkc +
ˆp )
c∈W ∩(Cp ∪C

ˆp )
c∈F ∩(Cp ∪C

xijkc ≤ 1, ∀i ∈ E, j ∈ Ri , k ∈ Tij , (11)

x(i−1)jkc +
ˆp )
c∈W ∩(Cp ∪C

ˆp )
c∈F ∩(Cp ∪C

xijkc ≤ 1,

x(i+1)j(k+1)c +
ˆp )
c∈W ∩(Cp ∪C

ˆp )
c∈F ∩(Cp ∪C

∀i ∈ E, j ∈ Ri , k ∈ U Tij , (k + 1) ∈ U T(i+1)j , (12)
xijkc ≤ 1,

x(i−1)j(k+1)c +
ˆp )
c∈W ∩(Cp ∪C

ˆp )
c∈F ∩(Cp ∪C

∀i ∈ E, j ∈ Ri , k ∈ U Tij , (k + 1) ∈ U T(i−1)j , (13)
xijkc ≤ 1,

x(i+1)j(k+1)c +
ˆp )
c∈W ∩(Cp ∪C

ˆp )
c∈F ∩(Cp ∪C

∀i ∈ E, j ∈ Ri , k ∈ BTij , (k + 1) ∈ BT(i+1)j , (14)
xijkc ≤ 1,

x(i−1)j(k+1)c +
ˆp )
c∈W ∩(Cp ∪C

ˆp )
c∈F ∩(Cp ∪C

∀i ∈ E, j ∈ Ri , k ∈ BTij , (k + 1) ∈ BT(i−1)j , (15)
xij(k+1)c −
ˆp )
c∈W ∩(Cp ∪C

xijkc ≤ 0,
ˆp )
c∈W ∩(Cp ∪C

∀i ∈ O, j ∈ Ri , k ∈ U Tij , k + 1 ∈ U Tij , (16)
xij(k+1)c −
ˆp )
c∈W ∩(Cp ∪C

xijkc ≤ 0,
ˆp )
c∈W ∩(Cp ∪C

∀i ∈ O, j ∈ Ri , k ∈ BTij , k + 1 ∈ BTij , (17)

858

F. Li et al.

2xij(k+1)c −
ˆp )
c∈F ∩(Cp ∪C

2xijkc −
ˆp )
c∈F ∩(Cp ∪C

x(i+1)jkc ≤ 0,

x(i−1)jkc −
ˆp )
c∈W ∩(Cp ∪C

∀i ∈ E, j ∈ Ri , k ∈ U Tij , k + 1 ∈ U Tij , (18)

ˆp )
c∈W ∩(Cp ∪C

2xij(k+1)c −
ˆp )
c∈F ∩(Cp ∪C

2xijkc −
ˆp )
c∈F ∩(Cp ∪C

x(i+1)jkc ≤ 0,

x(i−1)jkc −
ˆp )
c∈W ∩(Cp ∪C

∀i ∈ E, j ∈ Ri , k ∈ BTij , k + 1 ∈ BTij . (19)

ˆp )
c∈W ∩(Cp ∪C

The stability of the ship is very important for the deep-sea container transprotation. Since the vertical, transverse and longitudinal distribution of a ship’s
weight, which is the most inﬂuencing factor for the ship’s stability, is excessively unbalanced will lead it unstable, a bad stowage plan may result in the
instability of the ship. To assure the stability of a containership, a stowage plan
should satisfy several operational constraints. In this study the following three
factors: metacentric height (GM), heel and trim are introduced to describe the
vertical, transverse and longitudinal distribution of a ship’s weight. For a ship to
be stable, GM must be greater than the minimum allowable metacentric height,
the heel should be narrow or at least to be smaller than a given small number,
the trim is also close to zero or at least within certain prespeciﬁed limits for
good performance of the ship. Hence a good stowage planning should make GM
greater, heel and trim smaller to the extrem. Thus, the following constraints
should be satisﬁed,
ˆp , ∀i ∈ I, j ∈ Ri , k ∈ U Tij ,
wc · xijkc − we · xijk+1e ≥ 0, ∀c, e ∈ Cp ∪ C
ˆp , ∀i ∈ I, j ∈ Ri , k ∈ BTij ,
wc · xijkc − we · xijk+1e ≥ 0, ∀c, e ∈ Cp ∪ C
−Q1 ≤

wc · xijkc −
ˆp
i∈A j∈Ri k∈Tij c∈Cp ∪C

(20)
(21)

wc · xijkc ≤ Q2,
ˆp
i∈B j∈Ri k∈Tij c∈Cp ∪C

(22)
−Q3 ≤

wc · xijkc −
ˆp
i∈I j∈LRi k∈Tij c∈Cp ∪C

wc · xijkc ≤ Q3,
ˆp
i∈I j∈RRi k∈Tij c∈Cp ∪C

(23)

where Q1, Q2 and Q3 are given tolerance for stability of the ship.
In order to guarantee the containers in Cˆp still on the containership, when the
containership begins to vessel to the other destination, the following equations
should be satisﬁed,
xijkc = 1,

∀c ∈ Cˆp .

(24)

i∈I j∈Ri k∈Tij

2.2

Objective Function

In the container transportation industry, containerships make repeated tours of
a sequences of ports according to their planned routes. At each port on a tour of

An Integer Linear Programming for Container Stowage Problem

859

a containership, containers are unloaded and additional containers destined for
subsequent ports are loaded. Time duration required for loading and unloading
depends on the arrangement of the cargo on board the ship, ie the stowage
planning, which speciﬁes where each container is loaded on the ship. Stowage
plans, if not prepared well enough, may cause unnecessary handling time, time
required for temporary unloading and re-loading of containers of gantry cranes at
the ports. Consequently, port eﬃciency and ship utilization are largely aﬀected
by stowage plans.
In order to minimize the total rehandling of the containers on the ship. We
propose the following objective functions,
⎡

|P |−1

⎛

⎣

min
p=2 i∈I j∈Ri k∈Tij

⎞⎤

⎝
m∈Tij ;m>k

dc · xijkc ⎠⎦ .

dc · xijmc −
ˆp
c∈Cp ∪C

ˆp
c∈Cp ∪C

(25)

While considering the shifting number of the containers, we still want to
improve the utilization of the containership. Thus we need another objective
function, that is
max
sc · xijkc .
(26)
i∈I j∈Ri k∈Tij c∈Cp ∪C
ˆp

Deﬁnition 1. A vertical unit of the container means the container set with the
same row and the absolute diﬀerence of their bay number is smaller than 1.
Obviously the function value of (25) is not the real shifting number of the
containers. In fact the shifting number of the containers can be calculate as
follows,
|P |−1

Vijmkp ,

(27)

p=2 i∈I j∈Ri k∈Tij m∈Tij ;m>k

where,
Vijmkp =

1, if
ˆp dc · xijmc >
c∈Cp ∪C
0, otherwise.

ˆp
c∈Cp ∪C

dc · xijkc ,

Theorem 1. If the container stowage problem is built up by objective function with (25,26) and constraints (1-24), it can minimize the container shifting
number.
Proof. Obviously, we only need to prove that when (25) obtain its minimum, (27)
can also get its minimum. Since only the containers in a vertical unit will result
in the container shifting. Thus we only need to prove that for some vertical unit,
the theorem is correct.
Without lose general, we suppose the Bay no of the vertical unit is i , Row no
is j . When (25) gets its minimum we can get that,
dc · xi j
ˆp
c∈Cp ∪C

mc

≤

dc · xi j
ˆp
c∈Cp ∪C

kc , if

m > k, m, k ∈ Ti j .

860

F. Li et al.

Therefore, when (25) get its minimum, the shifting nubmer will be zero. Zero is
the minimum of (27).

3

Numerical Examples

According to this integer programming container stowage planning model, we
can generate an optimal container stowage strategy for the ocean shipping liners.
Below a simulation system was proposed to illustrate it.
In order to verify the eﬃcency of the integer model for the container stowage
problem, we develop a simulation system. In this system, there are two stowage
engine, the ﬁrst one is our model, the second one is ”random”. Here ”random”
means we stowage the containers onto the containership randomly, it is said
that for any container, we randomly generate a position with bay row and tie,
if the position is available, then we stowage that container on it, otherwise we
generate another position until the position is available. In order to display the
result of those two stowage engine, a 3d view of the containership is developed.
The 3d view of the containership is built up on a containership generator. By
using this generator, any type of containership can be built. Besides stowage
engine, 3d view, and containership generator module of the system, there are
data input, container generator, vessel operation calculation and report module
in this simulation system. The function of data input is to input the data of
routes(a sequences of ports) of the contianership. The container generator is
to produce containers with diﬀerent types, sizes and destination. The vessel
operation calculation is to caluate the shifting number of the container at each
port, the utilization of the vessel, and the weight balance of the veseel including
the absolute weight diﬀerence between the front and rear, the absolute weight
between the left part and the right part. The report module is show all of the
calculation result and the statistics of the container on the vessel, such as how
many container with the same destination.
In order to verify the eﬃciency of the model, a containership with 20 bays
10 rows and 10 ties is built up. We suppose that the maximum capacity of the
containership is 800TEU and its maximum load capacity is 18,000TON. For this
vessel we build up a routes with 10 ports. At each port we randomly generate
diﬀerent types, diﬀerent weight and diﬀerent destination containers. Each time
we generate all containers, then we vessel the containership, we load all of the
containers from the ﬁrst ports of the route, then unload the container for the
second port and load the other containers for the coming ports, and so on. We
have done the stowage process about 1000 times, and the stowage results are
shown in Table 1 and Figures 2–5.
Table 1 shows that, the shifting number, ultilization of the containership, and
the weight balance diﬀerence of the vessel for the optimal stowage strategy are
better than that of the random strategy. By using our model, the shifting number
of the container handling has been cutten down to Zero. The irrationality of the
ramdom stowage strategy will result in some containers can not be loaded on
the vessel. Since the random stowage strategy don’t consider the weigth balance

An Integer Linear Programming for Container Stowage Problem

861

Table 1. Compare Result for Optimal
Random
Optimal
Mean Variation Mean Variation
Shifting Number 1800
200
0
0
Utilization
89%
0.10
95%
0.04
Weight Balance
50
10
8
2
Diﬀerence (TON)

Fig. 2. 3d-View for Random Stowage
Strategy(Up Deck)

Fig. 4. 3d-View for Optimal Stowage
Strategy(Up Deck)

Fig. 3. 3d-View for Random Stowage
Strategy(Down Deck)

Fig. 5. 3d-View for Optimal Stowage
Strategy(Down Deck)

of the vessel, it will lead the absolute weigth diﬀerence between the front and
back of the vessel and the left and right part of the vessel bigger than that of
the optimal stowage strategy. Thus the stability of the vessel has been improved
by the optimal stowage strategy.

4

Conclusion

In this paper, an integer programming for the container stowage problem is proposed. It is suitable for multiple port and multimodel container transportation
services. In this model, the container loading process and re-handling process
are considered to minimize the container shifting number and maximize the utilization of the containership. At the same time several real rules of the ocean
shipping industry and vessel stability are been concerned as constrains of the
model. A simulation system is developed to verify the feasibility and practicability of the model. By using the branch and cut algorithm of COIN-OR, the
simulation system has shown that our model is eﬃcient and robust.

862

F. Li et al.

References
1. Steenken, D., VoB, S., Stahlbock, R.: Container terminal operation and operations
research: a classiﬁcation and literature review. OR Spectrum 26, 3–49 (2004)
2. Methodologies for reducing truck turn time at marine container terminals. Research
Report SWUT/05/167830-1
3. Atkins, W.H.: Modern marine terminal operations and management. Boyle, Oakland (1991)
4. Kang, J.G., Kim, Y.D.: Stowage planning in maritime container transportation.
Journal of the Operational Research Society 53, 415–426 (2002)
5. Ambrosino, D., Sciomachen, A., Tanfani, E.: Stowing a containership: the master
bay plan problem. Transportation Research Part A 38, 81–99 (2004)
6. Shields, J.J.: Container-ship stowage: a computer-aided preplanning system. Marine Technology 21, 370–383 (1984)
7. Saginaw, D.J., Perakis, A.N.: A decision support system for containership stowage
planning. Marine Technology 26, 47–61 (1989)
8. Shin, J.Y., Nam, K.C.: Intelligent decision support system for containership autostowage planning. Journal of Korean Institue Port Research 9, 19–32 (1995)
9. Wilson, I.D., Roach, P.A., Ware, J.A.: Container stowage pre-planning: using
search to genetrate solutions, a case study. Knowledge-Based Systems 14, 137–
145 (2001)
10. Martin, J., Randhawa, S.U., McDowell, E.D.: Computerized container-ship load
planning: A methodology and evaluation. Computers & Industrial Engineering 9,
357–369 (1988)
11. Todd, D.S., Sen, P.: A multiple criteria genetic algorithm for containership loading.
In: Proceedings of the Seventh International Conference on Genetic Algorithms,
pp. 674–681 (1997)
12. Haghani, A., Kaisar, E.I.: A model for designing container loading plans for containerships. In: Annual Conference for Transportation Research Board (2001)
13. Dubrovsky, O., Levitin, G., Penn, M.: A genetic algorithm with a compact solution
encoding for the container ship stowage problem. Journal of Heuristics 8, 585–599
(2002)

